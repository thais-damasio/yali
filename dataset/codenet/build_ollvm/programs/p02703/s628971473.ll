; ModuleID = 'Project_CodeNet_C++1400/p02703/s628971473.cpp'
source_filename = "Project_CodeNet_C++1400/p02703/s628971473.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl" = type { %"class.std::tuple"*, %"class.std::tuple"*, %"class.std::tuple"* }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Tuple_impl.5", %"struct.std::_Head_base.8" }
%"struct.std::_Tuple_impl.5" = type { %"struct.std::_Tuple_impl.6", %"struct.std::_Head_base.7" }
%"struct.std::_Tuple_impl.6" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i32 }
%"struct.std::_Head_base.7" = type { i32 }
%"struct.std::_Head_base.8" = type { i32 }
%"class.std::allocator" = type { i8 }
%"class.std::vector.9" = type { %"struct.std::_Vector_base.10" }
%"struct.std::_Vector_base.10" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::allocator.11" = type { i8 }
%"class.std::priority_queue" = type <{ %"class.std::vector.14", %"struct.std::greater", [7 x i8] }>
%"class.std::vector.14" = type { %"struct.std::_Vector_base.15" }
%"struct.std::_Vector_base.15" = type { %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl" = type { %"class.std::tuple.19"*, %"class.std::tuple.19"*, %"class.std::tuple.19"* }
%"class.std::tuple.19" = type { %"struct.std::_Tuple_impl.20" }
%"struct.std::_Tuple_impl.20" = type { %"struct.std::_Tuple_impl.5", %"struct.std::_Head_base.21" }
%"struct.std::_Head_base.21" = type { i64 }
%"struct.std::greater" = type { i8 }
%"class.std::tuple.22" = type { %"struct.std::_Tuple_impl.23" }
%"struct.std::_Tuple_impl.23" = type { %"struct.std::_Tuple_impl.24", %"struct.std::_Head_base.28" }
%"struct.std::_Tuple_impl.24" = type { %"struct.std::_Tuple_impl.25", %"struct.std::_Head_base.27" }
%"struct.std::_Tuple_impl.25" = type { %"struct.std::_Head_base.26" }
%"struct.std::_Head_base.26" = type { i32* }
%"struct.std::_Head_base.27" = type { i32* }
%"struct.std::_Head_base.28" = type { i64* }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.std::tuple"* }
%"class.std::tuple.29" = type { %"struct.std::_Tuple_impl.30" }
%"struct.std::_Tuple_impl.30" = type { %"struct.std::_Tuple_impl.24", %"struct.std::_Head_base.31" }
%"struct.std::_Head_base.31" = type { i32* }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.__gnu_cxx::new_allocator.12" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.32" = type { %"class.std::tuple.19"* }
%"class.std::allocator.16" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.std::move_iterator" = type { %"class.std::tuple"* }
%"class.__gnu_cxx::new_allocator.17" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { %"struct.std::greater" }
%"struct.__gnu_cxx::__ops::_Iter_comp_val" = type { %"struct.std::greater" }
%"class.std::move_iterator.33" = type { %"class.std::tuple.19"* }
%"class.__gnu_cxx::__normal_iterator.34" = type { %"class.std::tuple.19"* }

$_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEEC2Ev = comdat any

$_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EEC2EmRKS4_ = comdat any

$_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEED2Ev = comdat any

$_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EEixEm = comdat any

$_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE12emplace_backIJRiS5_S5_EEEvDpOT_ = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

$_ZNSt6vectorISt5tupleIJxiiEESaIS1_EEC2Ev = comdat any

$_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EEC2ERKS6_OS4_ = comdat any

$_ZNSt6vectorISt5tupleIJxiiEESaIS1_EED2Ev = comdat any

$_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE4pushEOS1_ = comdat any

$_ZSt10make_tupleIJxRiiEESt5tupleIJDpNSt17__decay_and_stripIT_E6__typeEEEDpOS3_ = comdat any

$_ZNKSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE5emptyEv = comdat any

$_ZNKSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3topEv = comdat any

$_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3popEv = comdat any

$_ZSt3tieIJxiiEESt5tupleIJDpRT_EES3_ = comdat any

$_ZNSt5tupleIJRxRiS1_EEaSIJxiiEvEERS2_RKS_IJDpT_EE = comdat any

$_ZSt10make_tupleIJRxRiS1_EESt5tupleIJDpNSt17__decay_and_stripIT_E6__typeEEEDpOS4_ = comdat any

$_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt3tieIJiiiEESt5tupleIJDpRT_EES3_ = comdat any

$_ZNSt5tupleIJRiS0_S0_EEaSIJiiiEvEERS1_RKS_IJDpT_EE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EED2Ev = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt5tupleIJxiiEEC2IJxRiiEvEEDpOT_ = comdat any

$_ZNSt11_Tuple_implILm0EJxiiEEC2IxJRiiEvEEOT_DpOT0_ = comdat any

$_ZNSt11_Tuple_implILm1EJiiEEC2IRiJiEvEEOT_DpOT0_ = comdat any

$_ZNSt10_Head_baseILm0ExLb0EEC2IxEEOT_ = comdat any

$_ZNSt11_Tuple_implILm2EJiEEC2IiEEOT_ = comdat any

$_ZNSt10_Head_baseILm1EiLb0EEC2IRiEEOT_ = comdat any

$_ZNSt10_Head_baseILm2EiLb0EEC2IiEEOT_ = comdat any

$_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt5tupleIJxiiEEC2IJRxRiS3_EvEEDpOT_ = comdat any

$_ZNSt11_Tuple_implILm0EJxiiEEC2IRxJRiS3_EvEEOT_DpOT0_ = comdat any

$_ZNSt11_Tuple_implILm1EJiiEEC2IRiJS2_EvEEOT_DpOT0_ = comdat any

$_ZNSt10_Head_baseILm0ExLb0EEC2IRxEEOT_ = comdat any

$_ZNSt11_Tuple_implILm2EJiEEC2IRiEEOT_ = comdat any

$_ZNSt10_Head_baseILm2EiLb0EEC2IRiEEOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EEC2EmRKS5_ = comdat any

$_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEEC2ERKS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEEC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJiiiEESaIS2_EEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorISt5tupleIJiiiEESaIS2_EEmS4_ET_S6_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorISt5tupleIJiiiEESaIS2_EEmET_S6_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorISt5tupleIJiiiEESaIS4_EEmEET_S8_T0_ = comdat any

$_ZSt10_ConstructISt6vectorISt5tupleIJiiiEESaIS2_EEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorISt5tupleIJiiiEESaIS2_EEEPT_RS5_ = comdat any

$_ZSt8_DestroyIPSt6vectorISt5tupleIJiiiEESaIS2_EEEvT_S6_ = comdat any

$__clang_call_terminate = comdat any

$_ZNSt6vectorISt5tupleIJiiiEESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt5tupleIJiiiEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEEC2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt5tupleIJiiiEESaIS4_EEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt6vectorISt5tupleIJiiiEESaIS2_EEEvPT_ = comdat any

$_ZNSt6vectorISt5tupleIJiiiEESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt5tupleIJiiiEES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt5tupleIJiiiEEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJiiiEEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE10deallocateEPS2_m = comdat any

$_ZNSaISt5tupleIJiiiEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJiiiEESaIS2_EEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEE10deallocateEPS5_m = comdat any

$_ZSt8_DestroyIPSt6vectorISt5tupleIJiiiEESaIS2_EES4_EvT_S6_RSaIT0_E = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE9constructIS1_JRiS5_S5_EEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE19_M_emplace_back_auxIJRiS5_S5_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE9constructIS2_JRiS5_S5_EEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJiiiEEC2IJRiS2_S2_EvEEDpOT_ = comdat any

$_ZNSt11_Tuple_implILm0EJiiiEEC2IRiJS2_S2_EvEEOT_DpOT0_ = comdat any

$_ZNSt10_Head_baseILm0EiLb0EEC2IRiEEOT_ = comdat any

$_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJiiiEES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJiiiEEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJiiiEESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJiiiEEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJiiiEEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPSt5tupleIJiiiEEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructISt5tupleIJiiiEEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt5tupleIJiiiEEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPSt5tupleIJiiiEEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt5tupleIJiiiEEEppEv = comdat any

$_ZSteqIPSt5tupleIJiiiEEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPSt5tupleIJiiiEEE4baseEv = comdat any

$_ZSt7forwardISt5tupleIJiiiEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5tupleIJiiiEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJiiiEEC2EOS0_ = comdat any

$_ZSt4moveIRSt11_Tuple_implILm1EJiiEEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt11_Tuple_implILm0EJiiiEE7_M_tailERS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJiiEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJiiiEE7_M_headERS0_ = comdat any

$_ZNSt10_Head_baseILm0EiLb0EEC2IiEEOT_ = comdat any

$_ZSt4moveIRSt11_Tuple_implILm2EJiEEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt11_Tuple_implILm1EJiiEE7_M_tailERS0_ = comdat any

$_ZNSt11_Tuple_implILm2EJiEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJiiEE7_M_headERS0_ = comdat any

$_ZNSt10_Head_baseILm1EiLb0EEC2IiEEOT_ = comdat any

$_ZNSt11_Tuple_implILm2EJiEE7_M_headERS0_ = comdat any

$_ZNSt10_Head_baseILm2EiLb0EE7_M_headERS0_ = comdat any

$_ZNSt10_Head_baseILm1EiLb0EE7_M_headERS0_ = comdat any

$_ZNSt10_Head_baseILm0EiLb0EE7_M_headERS0_ = comdat any

$_ZNSt13move_iteratorIPSt5tupleIJiiiEEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPimET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt5tupleIJxiiEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEEC2Ev = comdat any

$_ZSt8_DestroyIPSt5tupleIJxiiEES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt5tupleIJxiiEEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxiiEEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE10deallocateEPS2_m = comdat any

$_ZNSaISt5tupleIJxiiEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEED2Ev = comdat any

$_ZSt4moveIRSt6vectorISt5tupleIJxiiEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt6vectorISt5tupleIJxiiEESaIS1_EEC2EOS3_ = comdat any

$_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE3endEv = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaISt5tupleIJxiiEEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZNSaISt5tupleIJxiiEEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEEC2ERKS3_ = comdat any

$_ZSt4swapIPSt5tupleIJxiiEEEvRT_S4_ = comdat any

$_ZSt4moveIRPSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt5tupleIJxiiEEEEENS0_15_Iter_comp_iterIT_EES7_ = comdat any

$_ZN9__gnu_cxxmiIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZNSt5tupleIJxiiEEC2EOS0_ = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt11_Tuple_implILm0EJxiiEEC2EOS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJxiiEE7_M_tailERS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJxiiEE7_M_headERS0_ = comdat any

$_ZNSt10_Head_baseILm0ExLb0EE7_M_headERS0_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt5tupleIJxiiEEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_ = comdat any

$_ZNSt5tupleIJxiiEEaSEOS0_ = comdat any

$_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt5tupleIJxiiEEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE = comdat any

$_ZNKSt7greaterISt5tupleIJxiiEEEclERKS1_S4_ = comdat any

$_ZStgtIJxiiEJxiiEEbRKSt5tupleIJDpT_EERKS0_IJDpT0_EE = comdat any

$_ZStltIJxiiEJxiiEEbRKSt5tupleIJDpT_EERKS0_IJDpT0_EE = comdat any

$_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm0ELm3EE6__lessERKS1_S4_ = comdat any

$_ZSt3getILm0EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_ = comdat any

$_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm1ELm3EE6__lessERKS1_S4_ = comdat any

$_ZSt12__get_helperILm0ExJiiEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJxiiEE7_M_headERKS0_ = comdat any

$_ZNSt10_Head_baseILm0ExLb0EE7_M_headERKS0_ = comdat any

$_ZSt3getILm1EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_ = comdat any

$_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm2ELm3EE6__lessERKS1_S4_ = comdat any

$_ZSt12__get_helperILm1EiJiEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm1EJiiEE7_M_headERKS0_ = comdat any

$_ZNSt10_Head_baseILm1EiLb0EE7_M_headERKS0_ = comdat any

$_ZSt3getILm2EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_ = comdat any

$_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm3ELm3EE6__lessERKS1_S4_ = comdat any

$_ZSt12__get_helperILm2EiJEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm2EJiEE7_M_headERKS0_ = comdat any

$_ZNSt10_Head_baseILm2EiLb0EE7_M_headERKS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJxiiEEaSEOS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJiiEEaSEOS0_ = comdat any

$_ZNSt11_Tuple_implILm2EJiEEaSEOS0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt5tupleIJxiiEEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt5tupleIJxiiEEEEC2ES5_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt5tupleIJxiiEEEEC2ES5_ = comdat any

$_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE9push_backEOS1_ = comdat any

$_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardISt5tupleIJxiiEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxiiEES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxiiEEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxiiEESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxiiEEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxiiEEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPSt5tupleIJxiiEEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructISt5tupleIJxiiEEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt5tupleIJxiiEEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPSt5tupleIJxiiEEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt5tupleIJxiiEEEppEv = comdat any

$_ZSteqIPSt5tupleIJxiiEEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPSt5tupleIJxiiEEE4baseEv = comdat any

$_ZNSt13move_iteratorIPSt5tupleIJxiiEEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE7destroyIS2_EEvPT_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEmiEl = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt5tupleIJxiiEEEEENS0_14_Iter_comp_valIT_EES7_ = comdat any

$_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5emptyEv = comdat any

$_ZN9__gnu_cxxeqIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5frontEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE8pop_backEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEmmEv = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_SE_T0_ = comdat any

$_ZNSt5tupleIJRxRiS1_EEC2ES0_S1_S1_ = comdat any

$_ZNSt11_Tuple_implILm0EJRxRiS1_EEC2ES0_S1_S1_ = comdat any

$_ZNSt11_Tuple_implILm1EJRiS0_EEC2ES0_S0_ = comdat any

$_ZNSt10_Head_baseILm0ERxLb0EEC2ES0_ = comdat any

$_ZNSt11_Tuple_implILm2EJRiEEC2ES0_ = comdat any

$_ZNSt10_Head_baseILm1ERiLb0EEC2ES0_ = comdat any

$_ZNSt10_Head_baseILm2ERiLb0EEC2ES0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRxRiS1_EEaSIJxiiEEERS2_RKS_ILm0EJDpT_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRxRiS1_EE7_M_headERS2_ = comdat any

$_ZNSt11_Tuple_implILm0EJxiiEE7_M_tailERKS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRxRiS1_EE7_M_tailERS2_ = comdat any

$_ZNSt11_Tuple_implILm1EJRiS0_EEaSIJiiEEERS1_RKS_ILm1EJDpT_EE = comdat any

$_ZNSt10_Head_baseILm0ERxLb0EE7_M_headERS1_ = comdat any

$_ZNSt11_Tuple_implILm1EJRiS0_EE7_M_headERS1_ = comdat any

$_ZNSt11_Tuple_implILm1EJiiEE7_M_tailERKS0_ = comdat any

$_ZNSt11_Tuple_implILm1EJRiS0_EE7_M_tailERS1_ = comdat any

$_ZNSt11_Tuple_implILm2EJRiEEaSIiEERS1_RKS_ILm2EJT_EE = comdat any

$_ZNSt10_Head_baseILm1ERiLb0EE7_M_headERS1_ = comdat any

$_ZNSt11_Tuple_implILm2EJRiEE7_M_headERS1_ = comdat any

$_ZNSt10_Head_baseILm2ERiLb0EE7_M_headERS1_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt5tupleIJRiS0_S0_EEC2ES0_S0_S0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRiS0_S0_EEC2ES0_S0_S0_ = comdat any

$_ZNSt10_Head_baseILm0ERiLb0EEC2ES0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRiS0_S0_EEaSIJiiiEEERS1_RKS_ILm0EJDpT_EE = comdat any

$_ZNSt11_Tuple_implILm0EJiiiEE7_M_headERKS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRiS0_S0_EE7_M_headERS1_ = comdat any

$_ZNSt11_Tuple_implILm0EJiiiEE7_M_tailERKS0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRiS0_S0_EE7_M_tailERS1_ = comdat any

$_ZNSt10_Head_baseILm0EiLb0EE7_M_headERKS0_ = comdat any

$_ZNSt10_Head_baseILm0ERiLb0EE7_M_headERS1_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@dp = global [55 x [2510 x i64]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZL5MAX_S = internal constant i32 2505, align 4
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s628971473.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = add i32 %3, 1329979464
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 1329979464
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -606145507, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %69
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -606145507, label %17
    i32 -890045225, label %37
    i32 161054662, label %66
    i32 -1744782390, label %67
  ]

; <label>:16:                                     ; preds = %14
  br label %69

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -890045225, i32 -1744782390
  store i32 %36, i32* %13
  br label %69

; <label>:37:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %38 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 %39, 1822594512
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 1822594512
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 161054662, i32 -1744782390
  store i32 %65, i32* %13
  br label %69

; <label>:66:                                     ; preds = %14
  ret void

; <label>:67:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %68 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  store i32 -890045225, i32* %13
  br label %69

; <label>:69:                                     ; preds = %67, %37, %17, %16
  br label %14
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::vector", align 8
  %6 = alloca %"class.std::allocator", align 1
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::vector.9", align 8
  %15 = alloca %"class.std::allocator.11", align 1
  %16 = alloca %"class.std::vector.9", align 8
  %17 = alloca %"class.std::allocator.11", align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::priority_queue", align 8
  %22 = alloca %"struct.std::greater", align 1
  %23 = alloca %"class.std::vector.14", align 8
  %24 = alloca %"class.std::tuple.19", align 8
  %25 = alloca i64, align 8
  %26 = alloca i32, align 4
  %27 = alloca i64, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %"class.std::tuple.19", align 8
  %31 = alloca %"class.std::tuple.22", align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i64, align 8
  %35 = alloca %"class.std::tuple.19", align 8
  %36 = alloca %"class.std::vector.0"*, align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %39 = alloca %"class.std::tuple", align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca %"class.std::tuple.29", align 8
  %44 = alloca %"class.std::tuple.19", align 8
  %45 = alloca i32, align 4
  %46 = alloca i64, align 8
  %47 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %48 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %2)
  %49 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %48, i32* dereferenceable(4) %3)
  %50 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %49, i32* dereferenceable(4) %4)
  %51 = load i32, i32* %2, align 4
  %52 = sext i32 %51 to i64
  call void @_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEEC2Ev(%"class.std::allocator"* %6) #3
  invoke void @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EEC2EmRKS4_(%"class.std::vector"* %5, i64 %52, %"class.std::allocator"* dereferenceable(1) %6)
          to label %53 unwind label %231

; <label>:53:                                     ; preds = %0
  call void @_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEED2Ev(%"class.std::allocator"* %6) #3
  store i32 0, i32* %9, align 4
  br label %54

; <label>:54:                                     ; preds = %225, %53
  %55 = load i32, i32* @x.1
  %56 = load i32, i32* @y.2
  %57 = add i32 %55, -1517839414
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -1517839414
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %1392

; <label>:69:                                     ; preds = %54, %1392
  %70 = load i32, i32* %9, align 4
  %71 = load i32, i32* %3, align 4
  %72 = icmp slt i32 %70, %71
  %73 = load i32, i32* @x.1
  %74 = load i32, i32* @y.2
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %1392

; <label>:86:                                     ; preds = %69
  br i1 %72, label %87, label %281

; <label>:87:                                     ; preds = %86
  %88 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %10)
          to label %89 unwind label %277

; <label>:89:                                     ; preds = %87
  %90 = load i32, i32* @x.1
  %91 = load i32, i32* @y.2
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %1396

; <label>:103:                                    ; preds = %89, %1396
  %104 = load i32, i32* @x.1
  %105 = load i32, i32* @y.2
  %106 = sub i32 %104, -563783293
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -563783293
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 false, true
  %117 = and i1 %114, false
  %118 = and i1 %112, %116
  %119 = and i1 %115, false
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 false, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  br i1 %128, label %130, label %1396

; <label>:130:                                    ; preds = %103
  %131 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %88, i32* dereferenceable(4) %11)
          to label %132 unwind label %277

; <label>:132:                                    ; preds = %130
  %133 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %131, i32* dereferenceable(4) %12)
          to label %134 unwind label %277

; <label>:134:                                    ; preds = %132
  %135 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %133, i32* dereferenceable(4) %13)
          to label %136 unwind label %277

; <label>:136:                                    ; preds = %134
  %137 = load i32, i32* %10, align 4
  %138 = sub i32 0, %137
  %139 = sub i32 0, -1
  %140 = add i32 %138, %139
  %141 = sub i32 0, %140
  %142 = add nsw i32 %137, -1
  store i32 %141, i32* %10, align 4
  %143 = load i32, i32* %11, align 4
  %144 = add i32 %143, 425270926
  %145 = add i32 %144, -1
  %146 = sub i32 %145, 425270926
  %147 = add nsw i32 %143, -1
  store i32 %146, i32* %11, align 4
  %148 = load i32, i32* %10, align 4
  %149 = sext i32 %148 to i64
  %150 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %5, i64 %149) #3
  invoke void @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE12emplace_backIJRiS5_S5_EEEvDpOT_(%"class.std::vector.0"* %150, i32* dereferenceable(4) %11, i32* dereferenceable(4) %12, i32* dereferenceable(4) %13)
          to label %151 unwind label %277

; <label>:151:                                    ; preds = %136
  %152 = load i32, i32* @x.1
  %153 = load i32, i32* @y.2
  %154 = sub i32 0, 1
  %155 = add i32 %152, %154
  %156 = sub i32 %152, 1
  %157 = mul i32 %152, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %153, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  br i1 %163, label %165, label %1397

; <label>:165:                                    ; preds = %151, %1397
  %166 = load i32, i32* %11, align 4
  %167 = sext i32 %166 to i64
  %168 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %5, i64 %167) #3
  %169 = load i32, i32* @x.1
  %170 = load i32, i32* @y.2
  %171 = sub i32 0, 1
  %172 = add i32 %169, %171
  %173 = sub i32 %169, 1
  %174 = mul i32 %169, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %170, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  br i1 %180, label %182, label %1397

; <label>:182:                                    ; preds = %165
  invoke void @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE12emplace_backIJRiS5_S5_EEEvDpOT_(%"class.std::vector.0"* %168, i32* dereferenceable(4) %10, i32* dereferenceable(4) %12, i32* dereferenceable(4) %13)
          to label %183 unwind label %277

; <label>:183:                                    ; preds = %182
  %184 = load i32, i32* @x.1
  %185 = load i32, i32* @y.2
  %186 = sub i32 0, 1
  %187 = add i32 %184, %186
  %188 = sub i32 %184, 1
  %189 = mul i32 %184, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %185, 10
  %193 = xor i1 %191, true
  %194 = xor i1 %192, true
  %195 = xor i1 false, true
  %196 = and i1 %193, false
  %197 = and i1 %191, %195
  %198 = and i1 %194, false
  %199 = and i1 %192, %195
  %200 = or i1 %196, %197
  %201 = or i1 %198, %199
  %202 = xor i1 %200, %201
  %203 = or i1 %193, %194
  %204 = xor i1 %203, true
  %205 = or i1 false, %195
  %206 = and i1 %204, %205
  %207 = or i1 %202, %206
  %208 = or i1 %191, %192
  br i1 %207, label %209, label %1401

; <label>:209:                                    ; preds = %183, %1401
  %210 = load i32, i32* @x.1
  %211 = load i32, i32* @y.2
  %212 = sub i32 %210, -11792929
  %213 = sub i32 %212, 1
  %214 = add i32 %213, -11792929
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  br i1 %222, label %224, label %1401

; <label>:224:                                    ; preds = %209
  br label %225

; <label>:225:                                    ; preds = %224
  %226 = load i32, i32* %9, align 4
  %227 = add i32 %226, -63308550
  %228 = add i32 %227, 1
  %229 = sub i32 %228, -63308550
  %230 = add nsw i32 %226, 1
  store i32 %229, i32* %9, align 4
  br label %54

; <label>:231:                                    ; preds = %0
  %232 = load i32, i32* @x.1
  %233 = load i32, i32* @y.2
  %234 = add i32 %232, 966872871
  %235 = sub i32 %234, 1
  %236 = sub i32 %235, 966872871
  %237 = sub i32 %232, 1
  %238 = mul i32 %232, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %233, 10
  %242 = and i1 %240, %241
  %243 = xor i1 %240, %241
  %244 = or i1 %242, %243
  %245 = or i1 %240, %241
  br i1 %244, label %246, label %1402

; <label>:246:                                    ; preds = %231, %1402
  %247 = landingpad { i8*, i32 }
          cleanup
  %248 = extractvalue { i8*, i32 } %247, 0
  store i8* %248, i8** %7, align 8
  %249 = extractvalue { i8*, i32 } %247, 1
  store i32 %249, i32* %8, align 4
  call void @_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEED2Ev(%"class.std::allocator"* %6) #3
  %250 = load i32, i32* @x.1
  %251 = load i32, i32* @y.2
  %252 = add i32 %250, -1465215435
  %253 = sub i32 %252, 1
  %254 = sub i32 %253, -1465215435
  %255 = sub i32 %250, 1
  %256 = mul i32 %250, %254
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %251, 10
  %260 = xor i1 %258, true
  %261 = xor i1 %259, true
  %262 = xor i1 true, true
  %263 = and i1 %260, true
  %264 = and i1 %258, %262
  %265 = and i1 %261, true
  %266 = and i1 %259, %262
  %267 = or i1 %263, %264
  %268 = or i1 %265, %266
  %269 = xor i1 %267, %268
  %270 = or i1 %260, %261
  %271 = xor i1 %270, true
  %272 = or i1 true, %262
  %273 = and i1 %271, %272
  %274 = or i1 %269, %273
  %275 = or i1 %258, %259
  br i1 %274, label %276, label %1402

; <label>:276:                                    ; preds = %246
  br label %1387

; <label>:277:                                    ; preds = %182, %136, %134, %132, %130, %87
  %278 = landingpad { i8*, i32 }
          cleanup
  %279 = extractvalue { i8*, i32 } %278, 0
  store i8* %279, i8** %7, align 8
  %280 = extractvalue { i8*, i32 } %278, 1
  store i32 %280, i32* %8, align 4
  br label %1386

; <label>:281:                                    ; preds = %86
  %282 = load i32, i32* %2, align 4
  %283 = sext i32 %282 to i64
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.11"* %15) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(%"class.std::vector.9"* %14, i64 %283, %"class.std::allocator.11"* dereferenceable(1) %15)
          to label %284 unwind label %308

; <label>:284:                                    ; preds = %281
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %15) #3
  %285 = load i32, i32* %2, align 4
  %286 = sext i32 %285 to i64
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.11"* %17) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(%"class.std::vector.9"* %16, i64 %286, %"class.std::allocator.11"* dereferenceable(1) %17)
          to label %287 unwind label %353

; <label>:287:                                    ; preds = %284
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %17) #3
  store i32 0, i32* %18, align 4
  br label %288

; <label>:288:                                    ; preds = %303, %287
  %289 = load i32, i32* %18, align 4
  %290 = load i32, i32* %2, align 4
  %291 = icmp slt i32 %289, %290
  br i1 %291, label %292, label %361

; <label>:292:                                    ; preds = %288
  %293 = load i32, i32* %18, align 4
  %294 = sext i32 %293 to i64
  %295 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %14, i64 %294) #3
  %296 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %295)
          to label %297 unwind label %357

; <label>:297:                                    ; preds = %292
  %298 = load i32, i32* %18, align 4
  %299 = sext i32 %298 to i64
  %300 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %16, i64 %299) #3
  %301 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %296, i32* dereferenceable(4) %300)
          to label %302 unwind label %357

; <label>:302:                                    ; preds = %297
  br label %303

; <label>:303:                                    ; preds = %302
  %304 = load i32, i32* %18, align 4
  %305 = sub i32 0, 1
  %306 = sub i32 %304, %305
  %307 = add nsw i32 %304, 1
  store i32 %306, i32* %18, align 4
  br label %288

; <label>:308:                                    ; preds = %281
  %309 = load i32, i32* @x.1
  %310 = load i32, i32* @y.2
  %311 = sub i32 %309, -90049474
  %312 = sub i32 %311, 1
  %313 = add i32 %312, -90049474
  %314 = sub i32 %309, 1
  %315 = mul i32 %309, %313
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %310, 10
  %319 = and i1 %317, %318
  %320 = xor i1 %317, %318
  %321 = or i1 %319, %320
  %322 = or i1 %317, %318
  br i1 %321, label %323, label %1406

; <label>:323:                                    ; preds = %308, %1406
  %324 = landingpad { i8*, i32 }
          cleanup
  %325 = extractvalue { i8*, i32 } %324, 0
  store i8* %325, i8** %7, align 8
  %326 = extractvalue { i8*, i32 } %324, 1
  store i32 %326, i32* %8, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %15) #3
  %327 = load i32, i32* @x.1
  %328 = load i32, i32* @y.2
  %329 = sub i32 0, 1
  %330 = add i32 %327, %329
  %331 = sub i32 %327, 1
  %332 = mul i32 %327, %330
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %328, 10
  %336 = xor i1 %334, true
  %337 = xor i1 %335, true
  %338 = xor i1 false, true
  %339 = and i1 %336, false
  %340 = and i1 %334, %338
  %341 = and i1 %337, false
  %342 = and i1 %335, %338
  %343 = or i1 %339, %340
  %344 = or i1 %341, %342
  %345 = xor i1 %343, %344
  %346 = or i1 %336, %337
  %347 = xor i1 %346, true
  %348 = or i1 false, %338
  %349 = and i1 %347, %348
  %350 = or i1 %345, %349
  %351 = or i1 %334, %335
  br i1 %350, label %352, label %1406

; <label>:352:                                    ; preds = %323
  br label %1386

; <label>:353:                                    ; preds = %284
  %354 = landingpad { i8*, i32 }
          cleanup
  %355 = extractvalue { i8*, i32 } %354, 0
  store i8* %355, i8** %7, align 8
  %356 = extractvalue { i8*, i32 } %354, 1
  store i32 %356, i32* %8, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %17) #3
  br label %1385

; <label>:357:                                    ; preds = %546, %297, %292
  %358 = landingpad { i8*, i32 }
          cleanup
  %359 = extractvalue { i8*, i32 } %358, 0
  store i8* %359, i8** %7, align 8
  %360 = extractvalue { i8*, i32 } %358, 1
  store i32 %360, i32* %8, align 4
  br label %1343

; <label>:361:                                    ; preds = %288
  store i32 0, i32* %19, align 4
  br label %362

; <label>:362:                                    ; preds = %492, %361
  %363 = load i32, i32* %19, align 4
  %364 = load i32, i32* %2, align 4
  %365 = icmp slt i32 %363, %364
  br i1 %365, label %366, label %493

; <label>:366:                                    ; preds = %362
  %367 = load i32, i32* @x.1
  %368 = load i32, i32* @y.2
  %369 = sub i32 %367, 199364517
  %370 = sub i32 %369, 1
  %371 = add i32 %370, 199364517
  %372 = sub i32 %367, 1
  %373 = mul i32 %367, %371
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %368, 10
  %377 = and i1 %375, %376
  %378 = xor i1 %375, %376
  %379 = or i1 %377, %378
  %380 = or i1 %375, %376
  br i1 %379, label %381, label %1410

; <label>:381:                                    ; preds = %366, %1410
  store i32 0, i32* %20, align 4
  %382 = load i32, i32* @x.1
  %383 = load i32, i32* @y.2
  %384 = sub i32 %382, 250333079
  %385 = sub i32 %384, 1
  %386 = add i32 %385, 250333079
  %387 = sub i32 %382, 1
  %388 = mul i32 %382, %386
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %383, 10
  %392 = and i1 %390, %391
  %393 = xor i1 %390, %391
  %394 = or i1 %392, %393
  %395 = or i1 %390, %391
  br i1 %394, label %396, label %1410

; <label>:396:                                    ; preds = %381
  br label %397

; <label>:397:                                    ; preds = %449, %396
  %398 = load i32, i32* @x.1
  %399 = load i32, i32* @y.2
  %400 = sub i32 %398, 1851360995
  %401 = sub i32 %400, 1
  %402 = add i32 %401, 1851360995
  %403 = sub i32 %398, 1
  %404 = mul i32 %398, %402
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %399, 10
  %408 = xor i1 %406, true
  %409 = xor i1 %407, true
  %410 = xor i1 true, true
  %411 = and i1 %408, true
  %412 = and i1 %406, %410
  %413 = and i1 %409, true
  %414 = and i1 %407, %410
  %415 = or i1 %411, %412
  %416 = or i1 %413, %414
  %417 = xor i1 %415, %416
  %418 = or i1 %408, %409
  %419 = xor i1 %418, true
  %420 = or i1 true, %410
  %421 = and i1 %419, %420
  %422 = or i1 %417, %421
  %423 = or i1 %406, %407
  br i1 %422, label %424, label %1411

; <label>:424:                                    ; preds = %397, %1411
  %425 = load i32, i32* %20, align 4
  %426 = icmp slt i32 %425, 2505
  %427 = load i32, i32* @x.1
  %428 = load i32, i32* @y.2
  %429 = add i32 %427, -1725765169
  %430 = sub i32 %429, 1
  %431 = sub i32 %430, -1725765169
  %432 = sub i32 %427, 1
  %433 = mul i32 %427, %431
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %428, 10
  %437 = and i1 %435, %436
  %438 = xor i1 %435, %436
  %439 = or i1 %437, %438
  %440 = or i1 %435, %436
  br i1 %439, label %441, label %1411

; <label>:441:                                    ; preds = %424
  br i1 %426, label %442, label %456

; <label>:442:                                    ; preds = %441
  %443 = load i32, i32* %19, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds [55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 %444
  %446 = load i32, i32* %20, align 4
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds [2510 x i64], [2510 x i64]* %445, i64 0, i64 %447
  store i64 1000000000000000000, i64* %448, align 8
  br label %449

; <label>:449:                                    ; preds = %442
  %450 = load i32, i32* %20, align 4
  %451 = sub i32 0, %450
  %452 = sub i32 0, 1
  %453 = add i32 %451, %452
  %454 = sub i32 0, %453
  %455 = add nsw i32 %450, 1
  store i32 %454, i32* %20, align 4
  br label %397

; <label>:456:                                    ; preds = %441
  br label %457

; <label>:457:                                    ; preds = %456
  %458 = load i32, i32* @x.1
  %459 = load i32, i32* @y.2
  %460 = add i32 %458, -565865488
  %461 = sub i32 %460, 1
  %462 = sub i32 %461, -565865488
  %463 = sub i32 %458, 1
  %464 = mul i32 %458, %462
  %465 = urem i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %459, 10
  %468 = and i1 %466, %467
  %469 = xor i1 %466, %467
  %470 = or i1 %468, %469
  %471 = or i1 %466, %467
  br i1 %470, label %472, label %1414

; <label>:472:                                    ; preds = %457, %1414
  %473 = load i32, i32* %19, align 4
  %474 = add i32 %473, -1656458864
  %475 = add i32 %474, 1
  %476 = sub i32 %475, -1656458864
  %477 = add nsw i32 %473, 1
  store i32 %476, i32* %19, align 4
  %478 = load i32, i32* @x.1
  %479 = load i32, i32* @y.2
  %480 = sub i32 %478, -517605527
  %481 = sub i32 %480, 1
  %482 = add i32 %481, -517605527
  %483 = sub i32 %478, 1
  %484 = mul i32 %478, %482
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %479, 10
  %488 = and i1 %486, %487
  %489 = xor i1 %486, %487
  %490 = or i1 %488, %489
  %491 = or i1 %486, %487
  br i1 %490, label %492, label %1414

; <label>:492:                                    ; preds = %472
  br label %362

; <label>:493:                                    ; preds = %362
  %494 = load i32, i32* @x.1
  %495 = load i32, i32* @y.2
  %496 = sub i32 0, 1
  %497 = add i32 %494, %496
  %498 = sub i32 %494, 1
  %499 = mul i32 %494, %497
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %495, 10
  %503 = xor i1 %501, true
  %504 = xor i1 %502, true
  %505 = xor i1 false, true
  %506 = and i1 %503, false
  %507 = and i1 %501, %505
  %508 = and i1 %504, false
  %509 = and i1 %502, %505
  %510 = or i1 %506, %507
  %511 = or i1 %508, %509
  %512 = xor i1 %510, %511
  %513 = or i1 %503, %504
  %514 = xor i1 %513, true
  %515 = or i1 false, %505
  %516 = and i1 %514, %515
  %517 = or i1 %512, %516
  %518 = or i1 %501, %502
  br i1 %517, label %519, label %1439

; <label>:519:                                    ; preds = %493, %1439
  %520 = load i32, i32* @x.1
  %521 = load i32, i32* @y.2
  %522 = sub i32 %520, -412450113
  %523 = sub i32 %522, 1
  %524 = add i32 %523, -412450113
  %525 = sub i32 %520, 1
  %526 = mul i32 %520, %524
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %521, 10
  %530 = xor i1 %528, true
  %531 = xor i1 %529, true
  %532 = xor i1 true, true
  %533 = and i1 %530, true
  %534 = and i1 %528, %532
  %535 = and i1 %531, true
  %536 = and i1 %529, %532
  %537 = or i1 %533, %534
  %538 = or i1 %535, %536
  %539 = xor i1 %537, %538
  %540 = or i1 %530, %531
  %541 = xor i1 %540, true
  %542 = or i1 true, %532
  %543 = and i1 %541, %542
  %544 = or i1 %539, %543
  %545 = or i1 %528, %529
  br i1 %544, label %546, label %1439

; <label>:546:                                    ; preds = %519
  %547 = invoke dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %4, i32* dereferenceable(4) @_ZL5MAX_S)
          to label %548 unwind label %357

; <label>:548:                                    ; preds = %546
  %549 = load i32, i32* %547, align 4
  store i32 %549, i32* %4, align 4
  %550 = load i32, i32* %4, align 4
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds [2510 x i64], [2510 x i64]* getelementptr inbounds ([55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 0), i64 0, i64 %551
  store i64 0, i64* %552, align 8
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EEC2Ev(%"class.std::vector.14"* %23) #3
  invoke void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"* %21, %"struct.std::greater"* dereferenceable(1) %22, %"class.std::vector.14"* dereferenceable(24) %23)
          to label %553 unwind label %733

; <label>:553:                                    ; preds = %548
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EED2Ev(%"class.std::vector.14"* %23) #3
  store i64 0, i64* %25, align 8
  store i32 0, i32* %26, align 4
  %554 = invoke { i64, i64 } @_ZSt10make_tupleIJxRiiEESt5tupleIJDpNSt17__decay_and_stripIT_E6__typeEEEDpOS3_(i64* dereferenceable(8) %25, i32* dereferenceable(4) %4, i32* dereferenceable(4) %26)
          to label %555 unwind label %790

; <label>:555:                                    ; preds = %553
  %556 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %24, i32 0, i32 0
  %557 = bitcast %"struct.std::_Tuple_impl.20"* %556 to { i64, i64 }*
  %558 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %557, i32 0, i32 0
  %559 = extractvalue { i64, i64 } %554, 0
  store i64 %559, i64* %558, align 8
  %560 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %557, i32 0, i32 1
  %561 = extractvalue { i64, i64 } %554, 1
  store i64 %561, i64* %560, align 8
  invoke void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE4pushEOS1_(%"class.std::priority_queue"* %21, %"class.std::tuple.19"* dereferenceable(16) %24)
          to label %562 unwind label %790

; <label>:562:                                    ; preds = %555
  %563 = load i32, i32* @x.1
  %564 = load i32, i32* @y.2
  %565 = sub i32 %563, -285593405
  %566 = sub i32 %565, 1
  %567 = add i32 %566, -285593405
  %568 = sub i32 %563, 1
  %569 = mul i32 %563, %567
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %564, 10
  %573 = and i1 %571, %572
  %574 = xor i1 %571, %572
  %575 = or i1 %573, %574
  %576 = or i1 %571, %572
  br i1 %575, label %577, label %1440

; <label>:577:                                    ; preds = %562, %1440
  %578 = load i32, i32* @x.1
  %579 = load i32, i32* @y.2
  %580 = sub i32 %578, 1465717092
  %581 = sub i32 %580, 1
  %582 = add i32 %581, 1465717092
  %583 = sub i32 %578, 1
  %584 = mul i32 %578, %582
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %579, 10
  %588 = and i1 %586, %587
  %589 = xor i1 %586, %587
  %590 = or i1 %588, %589
  %591 = or i1 %586, %587
  br i1 %590, label %592, label %1440

; <label>:592:                                    ; preds = %577
  br label %593

; <label>:593:                                    ; preds = %1155, %732, %592
  %594 = invoke zeroext i1 @_ZNKSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE5emptyEv(%"class.std::priority_queue"* %21)
          to label %595 unwind label %790

; <label>:595:                                    ; preds = %593
  %596 = xor i1 %594, true
  %597 = and i1 true, %596
  %598 = xor i1 true, true
  %599 = and i1 %594, %598
  %600 = or i1 %597, %599
  %601 = xor i1 %594, true
  br i1 %600, label %602, label %1156

; <label>:602:                                    ; preds = %595
  %603 = invoke dereferenceable(16) %"class.std::tuple.19"* @_ZNKSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3topEv(%"class.std::priority_queue"* %21)
          to label %604 unwind label %790

; <label>:604:                                    ; preds = %602
  %605 = load i32, i32* @x.1
  %606 = load i32, i32* @y.2
  %607 = sub i32 %605, -2011756323
  %608 = sub i32 %607, 1
  %609 = add i32 %608, -2011756323
  %610 = sub i32 %605, 1
  %611 = mul i32 %605, %609
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %606, 10
  %615 = xor i1 %613, true
  %616 = xor i1 %614, true
  %617 = xor i1 false, true
  %618 = and i1 %615, false
  %619 = and i1 %613, %617
  %620 = and i1 %616, false
  %621 = and i1 %614, %617
  %622 = or i1 %618, %619
  %623 = or i1 %620, %621
  %624 = xor i1 %622, %623
  %625 = or i1 %615, %616
  %626 = xor i1 %625, true
  %627 = or i1 false, %617
  %628 = and i1 %626, %627
  %629 = or i1 %624, %628
  %630 = or i1 %613, %614
  br i1 %629, label %631, label %1441

; <label>:631:                                    ; preds = %604, %1441
  %632 = bitcast %"class.std::tuple.19"* %30 to i8*
  %633 = bitcast %"class.std::tuple.19"* %603 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %632, i8* %633, i64 16, i32 8, i1 false)
  %634 = load i32, i32* @x.1
  %635 = load i32, i32* @y.2
  %636 = sub i32 %634, 1745367139
  %637 = sub i32 %636, 1
  %638 = add i32 %637, 1745367139
  %639 = sub i32 %634, 1
  %640 = mul i32 %634, %638
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %635, 10
  %644 = xor i1 %642, true
  %645 = xor i1 %643, true
  %646 = xor i1 false, true
  %647 = and i1 %644, false
  %648 = and i1 %642, %646
  %649 = and i1 %645, false
  %650 = and i1 %643, %646
  %651 = or i1 %647, %648
  %652 = or i1 %649, %650
  %653 = xor i1 %651, %652
  %654 = or i1 %644, %645
  %655 = xor i1 %654, true
  %656 = or i1 false, %646
  %657 = and i1 %655, %656
  %658 = or i1 %653, %657
  %659 = or i1 %642, %643
  br i1 %658, label %660, label %1441

; <label>:660:                                    ; preds = %631
  invoke void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3popEv(%"class.std::priority_queue"* %21)
          to label %661 unwind label %790

; <label>:661:                                    ; preds = %660
  %662 = load i32, i32* @x.1
  %663 = load i32, i32* @y.2
  %664 = add i32 %662, 721470459
  %665 = sub i32 %664, 1
  %666 = sub i32 %665, 721470459
  %667 = sub i32 %662, 1
  %668 = mul i32 %662, %666
  %669 = urem i32 %668, 2
  %670 = icmp eq i32 %669, 0
  %671 = icmp slt i32 %663, 10
  %672 = and i1 %670, %671
  %673 = xor i1 %670, %671
  %674 = or i1 %672, %673
  %675 = or i1 %670, %671
  br i1 %674, label %676, label %1444

; <label>:676:                                    ; preds = %661, %1444
  call void @_ZSt3tieIJxiiEESt5tupleIJDpRT_EES3_(%"class.std::tuple.22"* sret %31, i64* dereferenceable(8) %27, i32* dereferenceable(4) %28, i32* dereferenceable(4) %29) #3
  %677 = load i32, i32* @x.1
  %678 = load i32, i32* @y.2
  %679 = sub i32 0, 1
  %680 = add i32 %677, %679
  %681 = sub i32 %677, 1
  %682 = mul i32 %677, %680
  %683 = urem i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %678, 10
  %686 = and i1 %684, %685
  %687 = xor i1 %684, %685
  %688 = or i1 %686, %687
  %689 = or i1 %684, %685
  br i1 %688, label %690, label %1444

; <label>:690:                                    ; preds = %676
  %691 = invoke dereferenceable(24) %"class.std::tuple.22"* @_ZNSt5tupleIJRxRiS1_EEaSIJxiiEvEERS2_RKS_IJDpT_EE(%"class.std::tuple.22"* %31, %"class.std::tuple.19"* dereferenceable(16) %30)
          to label %692 unwind label %790

; <label>:692:                                    ; preds = %690
  %693 = load i32, i32* @x.1
  %694 = load i32, i32* @y.2
  %695 = sub i32 %693, 1612987692
  %696 = sub i32 %695, 1
  %697 = add i32 %696, 1612987692
  %698 = sub i32 %693, 1
  %699 = mul i32 %693, %697
  %700 = urem i32 %699, 2
  %701 = icmp eq i32 %700, 0
  %702 = icmp slt i32 %694, 10
  %703 = and i1 %701, %702
  %704 = xor i1 %701, %702
  %705 = or i1 %703, %704
  %706 = or i1 %701, %702
  br i1 %705, label %707, label %1445

; <label>:707:                                    ; preds = %692, %1445
  %708 = load i32, i32* %29, align 4
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds [55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 %709
  %711 = load i32, i32* %28, align 4
  %712 = sext i32 %711 to i64
  %713 = getelementptr inbounds [2510 x i64], [2510 x i64]* %710, i64 0, i64 %712
  %714 = load i64, i64* %713, align 8
  %715 = load i64, i64* %27, align 8
  %716 = icmp slt i64 %714, %715
  %717 = load i32, i32* @x.1
  %718 = load i32, i32* @y.2
  %719 = sub i32 %717, 1213011093
  %720 = sub i32 %719, 1
  %721 = add i32 %720, 1213011093
  %722 = sub i32 %717, 1
  %723 = mul i32 %717, %721
  %724 = urem i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = icmp slt i32 %718, 10
  %727 = and i1 %725, %726
  %728 = xor i1 %725, %726
  %729 = or i1 %727, %728
  %730 = or i1 %725, %726
  br i1 %729, label %731, label %1445

; <label>:731:                                    ; preds = %707
  br i1 %716, label %732, label %848

; <label>:732:                                    ; preds = %731
  br label %593

; <label>:733:                                    ; preds = %548
  %734 = load i32, i32* @x.1
  %735 = load i32, i32* @y.2
  %736 = sub i32 0, 1
  %737 = add i32 %734, %736
  %738 = sub i32 %734, 1
  %739 = mul i32 %734, %737
  %740 = urem i32 %739, 2
  %741 = icmp eq i32 %740, 0
  %742 = icmp slt i32 %735, 10
  %743 = xor i1 %741, true
  %744 = xor i1 %742, true
  %745 = xor i1 true, true
  %746 = and i1 %743, true
  %747 = and i1 %741, %745
  %748 = and i1 %744, true
  %749 = and i1 %742, %745
  %750 = or i1 %746, %747
  %751 = or i1 %748, %749
  %752 = xor i1 %750, %751
  %753 = or i1 %743, %744
  %754 = xor i1 %753, true
  %755 = or i1 true, %745
  %756 = and i1 %754, %755
  %757 = or i1 %752, %756
  %758 = or i1 %741, %742
  br i1 %757, label %759, label %1455

; <label>:759:                                    ; preds = %733, %1455
  %760 = landingpad { i8*, i32 }
          cleanup
  %761 = extractvalue { i8*, i32 } %760, 0
  store i8* %761, i8** %7, align 8
  %762 = extractvalue { i8*, i32 } %760, 1
  store i32 %762, i32* %8, align 4
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EED2Ev(%"class.std::vector.14"* %23) #3
  %763 = load i32, i32* @x.1
  %764 = load i32, i32* @y.2
  %765 = sub i32 %763, -51009140
  %766 = sub i32 %765, 1
  %767 = add i32 %766, -51009140
  %768 = sub i32 %763, 1
  %769 = mul i32 %763, %767
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %764, 10
  %773 = xor i1 %771, true
  %774 = xor i1 %772, true
  %775 = xor i1 false, true
  %776 = and i1 %773, false
  %777 = and i1 %771, %775
  %778 = and i1 %774, false
  %779 = and i1 %772, %775
  %780 = or i1 %776, %777
  %781 = or i1 %778, %779
  %782 = xor i1 %780, %781
  %783 = or i1 %773, %774
  %784 = xor i1 %783, true
  %785 = or i1 false, %775
  %786 = and i1 %784, %785
  %787 = or i1 %782, %786
  %788 = or i1 %771, %772
  br i1 %787, label %789, label %1455

; <label>:789:                                    ; preds = %759
  br label %1343

; <label>:790:                                    ; preds = %1301, %1298, %1287, %1074, %1072, %980, %966, %928, %848, %690, %660, %602, %593, %555, %553
  %791 = load i32, i32* @x.1
  %792 = load i32, i32* @y.2
  %793 = sub i32 %791, 17039581
  %794 = sub i32 %793, 1
  %795 = add i32 %794, 17039581
  %796 = sub i32 %791, 1
  %797 = mul i32 %791, %795
  %798 = urem i32 %797, 2
  %799 = icmp eq i32 %798, 0
  %800 = icmp slt i32 %792, 10
  %801 = xor i1 %799, true
  %802 = xor i1 %800, true
  %803 = xor i1 true, true
  %804 = and i1 %801, true
  %805 = and i1 %799, %803
  %806 = and i1 %802, true
  %807 = and i1 %800, %803
  %808 = or i1 %804, %805
  %809 = or i1 %806, %807
  %810 = xor i1 %808, %809
  %811 = or i1 %801, %802
  %812 = xor i1 %811, true
  %813 = or i1 true, %803
  %814 = and i1 %812, %813
  %815 = or i1 %810, %814
  %816 = or i1 %799, %800
  br i1 %815, label %817, label %1459

; <label>:817:                                    ; preds = %790, %1459
  %818 = landingpad { i8*, i32 }
          cleanup
  %819 = extractvalue { i8*, i32 } %818, 0
  store i8* %819, i8** %7, align 8
  %820 = extractvalue { i8*, i32 } %818, 1
  store i32 %820, i32* %8, align 4
  call void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev(%"class.std::priority_queue"* %21) #3
  %821 = load i32, i32* @x.1
  %822 = load i32, i32* @y.2
  %823 = sub i32 %821, -1066354994
  %824 = sub i32 %823, 1
  %825 = add i32 %824, -1066354994
  %826 = sub i32 %821, 1
  %827 = mul i32 %821, %825
  %828 = urem i32 %827, 2
  %829 = icmp eq i32 %828, 0
  %830 = icmp slt i32 %822, 10
  %831 = xor i1 %829, true
  %832 = xor i1 %830, true
  %833 = xor i1 false, true
  %834 = and i1 %831, false
  %835 = and i1 %829, %833
  %836 = and i1 %832, false
  %837 = and i1 %830, %833
  %838 = or i1 %834, %835
  %839 = or i1 %836, %837
  %840 = xor i1 %838, %839
  %841 = or i1 %831, %832
  %842 = xor i1 %841, true
  %843 = or i1 false, %833
  %844 = and i1 %842, %843
  %845 = or i1 %840, %844
  %846 = or i1 %829, %830
  br i1 %845, label %847, label %1459

; <label>:847:                                    ; preds = %817
  br label %1343

; <label>:848:                                    ; preds = %731
  %849 = load i32, i32* %28, align 4
  %850 = load i32, i32* %29, align 4
  %851 = sext i32 %850 to i64
  %852 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %14, i64 %851) #3
  %853 = load i32, i32* %852, align 4
  %854 = sub i32 0, %853
  %855 = sub i32 %849, %854
  %856 = add nsw i32 %849, %853
  store i32 %855, i32* %33, align 4
  %857 = invoke dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %33, i32* dereferenceable(4) @_ZL5MAX_S)
          to label %858 unwind label %790

; <label>:858:                                    ; preds = %848
  %859 = load i32, i32* %857, align 4
  store i32 %859, i32* %32, align 4
  %860 = load i64, i64* %27, align 8
  %861 = load i32, i32* %29, align 4
  %862 = sext i32 %861 to i64
  %863 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %16, i64 %862) #3
  %864 = load i32, i32* %863, align 4
  %865 = sext i32 %864 to i64
  %866 = sub i64 0, %860
  %867 = sub i64 0, %865
  %868 = add i64 %866, %867
  %869 = sub i64 0, %868
  %870 = add nsw i64 %860, %865
  store i64 %869, i64* %34, align 8
  %871 = load i32, i32* %29, align 4
  %872 = sext i32 %871 to i64
  %873 = getelementptr inbounds [55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 %872
  %874 = load i32, i32* %32, align 4
  %875 = sext i32 %874 to i64
  %876 = getelementptr inbounds [2510 x i64], [2510 x i64]* %873, i64 0, i64 %875
  %877 = load i64, i64* %876, align 8
  %878 = load i64, i64* %34, align 8
  %879 = icmp sgt i64 %877, %878
  br i1 %879, label %880, label %968

; <label>:880:                                    ; preds = %858
  %881 = load i32, i32* @x.1
  %882 = load i32, i32* @y.2
  %883 = sub i32 0, 1
  %884 = add i32 %881, %883
  %885 = sub i32 %881, 1
  %886 = mul i32 %881, %884
  %887 = urem i32 %886, 2
  %888 = icmp eq i32 %887, 0
  %889 = icmp slt i32 %882, 10
  %890 = and i1 %888, %889
  %891 = xor i1 %888, %889
  %892 = or i1 %890, %891
  %893 = or i1 %888, %889
  br i1 %892, label %894, label %1463

; <label>:894:                                    ; preds = %880, %1463
  %895 = load i64, i64* %34, align 8
  %896 = load i32, i32* %29, align 4
  %897 = sext i32 %896 to i64
  %898 = getelementptr inbounds [55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 %897
  %899 = load i32, i32* %32, align 4
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds [2510 x i64], [2510 x i64]* %898, i64 0, i64 %900
  store i64 %895, i64* %901, align 8
  %902 = load i32, i32* @x.1
  %903 = load i32, i32* @y.2
  %904 = add i32 %902, -1692599980
  %905 = sub i32 %904, 1
  %906 = sub i32 %905, -1692599980
  %907 = sub i32 %902, 1
  %908 = mul i32 %902, %906
  %909 = urem i32 %908, 2
  %910 = icmp eq i32 %909, 0
  %911 = icmp slt i32 %903, 10
  %912 = xor i1 %910, true
  %913 = xor i1 %911, true
  %914 = xor i1 false, true
  %915 = and i1 %912, false
  %916 = and i1 %910, %914
  %917 = and i1 %913, false
  %918 = and i1 %911, %914
  %919 = or i1 %915, %916
  %920 = or i1 %917, %918
  %921 = xor i1 %919, %920
  %922 = or i1 %912, %913
  %923 = xor i1 %922, true
  %924 = or i1 false, %914
  %925 = and i1 %923, %924
  %926 = or i1 %921, %925
  %927 = or i1 %910, %911
  br i1 %926, label %928, label %1463

; <label>:928:                                    ; preds = %894
  %929 = invoke { i64, i64 } @_ZSt10make_tupleIJRxRiS1_EESt5tupleIJDpNSt17__decay_and_stripIT_E6__typeEEEDpOS4_(i64* dereferenceable(8) %34, i32* dereferenceable(4) %32, i32* dereferenceable(4) %29)
          to label %930 unwind label %790

; <label>:930:                                    ; preds = %928
  %931 = load i32, i32* @x.1
  %932 = load i32, i32* @y.2
  %933 = sub i32 %931, 1002868171
  %934 = sub i32 %933, 1
  %935 = add i32 %934, 1002868171
  %936 = sub i32 %931, 1
  %937 = mul i32 %931, %935
  %938 = urem i32 %937, 2
  %939 = icmp eq i32 %938, 0
  %940 = icmp slt i32 %932, 10
  %941 = and i1 %939, %940
  %942 = xor i1 %939, %940
  %943 = or i1 %941, %942
  %944 = or i1 %939, %940
  br i1 %943, label %945, label %1471

; <label>:945:                                    ; preds = %930, %1471
  %946 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %35, i32 0, i32 0
  %947 = bitcast %"struct.std::_Tuple_impl.20"* %946 to { i64, i64 }*
  %948 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %947, i32 0, i32 0
  %949 = extractvalue { i64, i64 } %929, 0
  store i64 %949, i64* %948, align 8
  %950 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %947, i32 0, i32 1
  %951 = extractvalue { i64, i64 } %929, 1
  store i64 %951, i64* %950, align 8
  %952 = load i32, i32* @x.1
  %953 = load i32, i32* @y.2
  %954 = add i32 %952, 1620471293
  %955 = sub i32 %954, 1
  %956 = sub i32 %955, 1620471293
  %957 = sub i32 %952, 1
  %958 = mul i32 %952, %956
  %959 = urem i32 %958, 2
  %960 = icmp eq i32 %959, 0
  %961 = icmp slt i32 %953, 10
  %962 = and i1 %960, %961
  %963 = xor i1 %960, %961
  %964 = or i1 %962, %963
  %965 = or i1 %960, %961
  br i1 %964, label %966, label %1471

; <label>:966:                                    ; preds = %945
  invoke void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE4pushEOS1_(%"class.std::priority_queue"* %21, %"class.std::tuple.19"* dereferenceable(16) %35)
          to label %967 unwind label %790

; <label>:967:                                    ; preds = %966
  br label %968

; <label>:968:                                    ; preds = %967, %858
  %969 = load i32, i32* %29, align 4
  %970 = sext i32 %969 to i64
  %971 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %5, i64 %970) #3
  store %"class.std::vector.0"* %971, %"class.std::vector.0"** %36, align 8
  %972 = load %"class.std::vector.0"*, %"class.std::vector.0"** %36, align 8
  %973 = call %"class.std::tuple"* @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE5beginEv(%"class.std::vector.0"* %972) #3
  %974 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  store %"class.std::tuple"* %973, %"class.std::tuple"** %974, align 8
  %975 = load %"class.std::vector.0"*, %"class.std::vector.0"** %36, align 8
  %976 = call %"class.std::tuple"* @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE3endEv(%"class.std::vector.0"* %975) #3
  %977 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  store %"class.std::tuple"* %976, %"class.std::tuple"** %977, align 8
  br label %978

; <label>:978:                                    ; preds = %1154, %968
  %979 = call zeroext i1 @_ZN9__gnu_cxxneIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %37, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %38) #3
  br i1 %979, label %980, label %1155

; <label>:980:                                    ; preds = %978
  %981 = call dereferenceable(12) %"class.std::tuple"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %37) #3
  %982 = bitcast %"class.std::tuple"* %39 to i8*
  %983 = bitcast %"class.std::tuple"* %981 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %982, i8* %983, i64 12, i32 4, i1 false)
  call void @_ZSt3tieIJiiiEESt5tupleIJDpRT_EES3_(%"class.std::tuple.29"* sret %43, i32* dereferenceable(4) %40, i32* dereferenceable(4) %41, i32* dereferenceable(4) %42) #3
  %984 = invoke dereferenceable(24) %"class.std::tuple.29"* @_ZNSt5tupleIJRiS0_S0_EEaSIJiiiEvEERS1_RKS_IJDpT_EE(%"class.std::tuple.29"* %43, %"class.std::tuple"* dereferenceable(12) %39)
          to label %985 unwind label %790

; <label>:985:                                    ; preds = %980
  %986 = load i32, i32* %28, align 4
  %987 = load i32, i32* %41, align 4
  %988 = sub i32 0, %987
  %989 = add i32 %986, %988
  %990 = sub nsw i32 %986, %987
  store i32 %989, i32* %32, align 4
  %991 = load i32, i32* %32, align 4
  %992 = icmp slt i32 %991, 0
  br i1 %992, label %993, label %994

; <label>:993:                                    ; preds = %985
  br label %1124

; <label>:994:                                    ; preds = %985
  %995 = load i64, i64* %27, align 8
  %996 = load i32, i32* %42, align 4
  %997 = sext i32 %996 to i64
  %998 = add i64 %995, 6230833672487719633
  %999 = add i64 %998, %997
  %1000 = sub i64 %999, 6230833672487719633
  %1001 = add nsw i64 %995, %997
  store i64 %1000, i64* %34, align 8
  %1002 = load i32, i32* %40, align 4
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds [55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 %1003
  %1005 = load i32, i32* %32, align 4
  %1006 = sext i32 %1005 to i64
  %1007 = getelementptr inbounds [2510 x i64], [2510 x i64]* %1004, i64 0, i64 %1006
  %1008 = load i64, i64* %1007, align 8
  %1009 = load i64, i64* %34, align 8
  %1010 = icmp sgt i64 %1008, %1009
  br i1 %1010, label %1011, label %1082

; <label>:1011:                                   ; preds = %994
  %1012 = load i32, i32* @x.1
  %1013 = load i32, i32* @y.2
  %1014 = add i32 %1012, 789051801
  %1015 = sub i32 %1014, 1
  %1016 = sub i32 %1015, 789051801
  %1017 = sub i32 %1012, 1
  %1018 = mul i32 %1012, %1016
  %1019 = urem i32 %1018, 2
  %1020 = icmp eq i32 %1019, 0
  %1021 = icmp slt i32 %1013, 10
  %1022 = xor i1 %1020, true
  %1023 = xor i1 %1021, true
  %1024 = xor i1 true, true
  %1025 = and i1 %1022, true
  %1026 = and i1 %1020, %1024
  %1027 = and i1 %1023, true
  %1028 = and i1 %1021, %1024
  %1029 = or i1 %1025, %1026
  %1030 = or i1 %1027, %1028
  %1031 = xor i1 %1029, %1030
  %1032 = or i1 %1022, %1023
  %1033 = xor i1 %1032, true
  %1034 = or i1 true, %1024
  %1035 = and i1 %1033, %1034
  %1036 = or i1 %1031, %1035
  %1037 = or i1 %1020, %1021
  br i1 %1036, label %1038, label %1478

; <label>:1038:                                   ; preds = %1011, %1478
  %1039 = load i64, i64* %34, align 8
  %1040 = load i32, i32* %40, align 4
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds [55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 %1041
  %1043 = load i32, i32* %32, align 4
  %1044 = sext i32 %1043 to i64
  %1045 = getelementptr inbounds [2510 x i64], [2510 x i64]* %1042, i64 0, i64 %1044
  store i64 %1039, i64* %1045, align 8
  %1046 = load i32, i32* @x.1
  %1047 = load i32, i32* @y.2
  %1048 = add i32 %1046, -1599738887
  %1049 = sub i32 %1048, 1
  %1050 = sub i32 %1049, -1599738887
  %1051 = sub i32 %1046, 1
  %1052 = mul i32 %1046, %1050
  %1053 = urem i32 %1052, 2
  %1054 = icmp eq i32 %1053, 0
  %1055 = icmp slt i32 %1047, 10
  %1056 = xor i1 %1054, true
  %1057 = xor i1 %1055, true
  %1058 = xor i1 true, true
  %1059 = and i1 %1056, true
  %1060 = and i1 %1054, %1058
  %1061 = and i1 %1057, true
  %1062 = and i1 %1055, %1058
  %1063 = or i1 %1059, %1060
  %1064 = or i1 %1061, %1062
  %1065 = xor i1 %1063, %1064
  %1066 = or i1 %1056, %1057
  %1067 = xor i1 %1066, true
  %1068 = or i1 true, %1058
  %1069 = and i1 %1067, %1068
  %1070 = or i1 %1065, %1069
  %1071 = or i1 %1054, %1055
  br i1 %1070, label %1072, label %1478

; <label>:1072:                                   ; preds = %1038
  %1073 = invoke { i64, i64 } @_ZSt10make_tupleIJRxRiS1_EESt5tupleIJDpNSt17__decay_and_stripIT_E6__typeEEEDpOS4_(i64* dereferenceable(8) %34, i32* dereferenceable(4) %32, i32* dereferenceable(4) %40)
          to label %1074 unwind label %790

; <label>:1074:                                   ; preds = %1072
  %1075 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %44, i32 0, i32 0
  %1076 = bitcast %"struct.std::_Tuple_impl.20"* %1075 to { i64, i64 }*
  %1077 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1076, i32 0, i32 0
  %1078 = extractvalue { i64, i64 } %1073, 0
  store i64 %1078, i64* %1077, align 8
  %1079 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1076, i32 0, i32 1
  %1080 = extractvalue { i64, i64 } %1073, 1
  store i64 %1080, i64* %1079, align 8
  invoke void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE4pushEOS1_(%"class.std::priority_queue"* %21, %"class.std::tuple.19"* dereferenceable(16) %44)
          to label %1081 unwind label %790

; <label>:1081:                                   ; preds = %1074
  br label %1082

; <label>:1082:                                   ; preds = %1081, %994
  %1083 = load i32, i32* @x.1
  %1084 = load i32, i32* @y.2
  %1085 = sub i32 0, 1
  %1086 = add i32 %1083, %1085
  %1087 = sub i32 %1083, 1
  %1088 = mul i32 %1083, %1086
  %1089 = urem i32 %1088, 2
  %1090 = icmp eq i32 %1089, 0
  %1091 = icmp slt i32 %1084, 10
  %1092 = and i1 %1090, %1091
  %1093 = xor i1 %1090, %1091
  %1094 = or i1 %1092, %1093
  %1095 = or i1 %1090, %1091
  br i1 %1094, label %1096, label %1486

; <label>:1096:                                   ; preds = %1082, %1486
  %1097 = load i32, i32* @x.1
  %1098 = load i32, i32* @y.2
  %1099 = add i32 %1097, -716606761
  %1100 = sub i32 %1099, 1
  %1101 = sub i32 %1100, -716606761
  %1102 = sub i32 %1097, 1
  %1103 = mul i32 %1097, %1101
  %1104 = urem i32 %1103, 2
  %1105 = icmp eq i32 %1104, 0
  %1106 = icmp slt i32 %1098, 10
  %1107 = xor i1 %1105, true
  %1108 = xor i1 %1106, true
  %1109 = xor i1 true, true
  %1110 = and i1 %1107, true
  %1111 = and i1 %1105, %1109
  %1112 = and i1 %1108, true
  %1113 = and i1 %1106, %1109
  %1114 = or i1 %1110, %1111
  %1115 = or i1 %1112, %1113
  %1116 = xor i1 %1114, %1115
  %1117 = or i1 %1107, %1108
  %1118 = xor i1 %1117, true
  %1119 = or i1 true, %1109
  %1120 = and i1 %1118, %1119
  %1121 = or i1 %1116, %1120
  %1122 = or i1 %1105, %1106
  br i1 %1121, label %1123, label %1486

; <label>:1123:                                   ; preds = %1096
  br label %1124

; <label>:1124:                                   ; preds = %1123, %993
  %1125 = load i32, i32* @x.1
  %1126 = load i32, i32* @y.2
  %1127 = add i32 %1125, 1046467358
  %1128 = sub i32 %1127, 1
  %1129 = sub i32 %1128, 1046467358
  %1130 = sub i32 %1125, 1
  %1131 = mul i32 %1125, %1129
  %1132 = urem i32 %1131, 2
  %1133 = icmp eq i32 %1132, 0
  %1134 = icmp slt i32 %1126, 10
  %1135 = and i1 %1133, %1134
  %1136 = xor i1 %1133, %1134
  %1137 = or i1 %1135, %1136
  %1138 = or i1 %1133, %1134
  br i1 %1137, label %1139, label %1487

; <label>:1139:                                   ; preds = %1124, %1487
  %1140 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %37) #3
  %1141 = load i32, i32* @x.1
  %1142 = load i32, i32* @y.2
  %1143 = sub i32 0, 1
  %1144 = add i32 %1141, %1143
  %1145 = sub i32 %1141, 1
  %1146 = mul i32 %1141, %1144
  %1147 = urem i32 %1146, 2
  %1148 = icmp eq i32 %1147, 0
  %1149 = icmp slt i32 %1142, 10
  %1150 = and i1 %1148, %1149
  %1151 = xor i1 %1148, %1149
  %1152 = or i1 %1150, %1151
  %1153 = or i1 %1148, %1149
  br i1 %1152, label %1154, label %1487

; <label>:1154:                                   ; preds = %1139
  br label %978

; <label>:1155:                                   ; preds = %978
  br label %593

; <label>:1156:                                   ; preds = %595
  %1157 = load i32, i32* @x.1
  %1158 = load i32, i32* @y.2
  %1159 = sub i32 0, 1
  %1160 = add i32 %1157, %1159
  %1161 = sub i32 %1157, 1
  %1162 = mul i32 %1157, %1160
  %1163 = urem i32 %1162, 2
  %1164 = icmp eq i32 %1163, 0
  %1165 = icmp slt i32 %1158, 10
  %1166 = and i1 %1164, %1165
  %1167 = xor i1 %1164, %1165
  %1168 = or i1 %1166, %1167
  %1169 = or i1 %1164, %1165
  br i1 %1168, label %1170, label %1489

; <label>:1170:                                   ; preds = %1156, %1489
  store i32 0, i32* %45, align 4
  %1171 = load i32, i32* @x.1
  %1172 = load i32, i32* @y.2
  %1173 = add i32 %1171, 1334752489
  %1174 = sub i32 %1173, 1
  %1175 = sub i32 %1174, 1334752489
  %1176 = sub i32 %1171, 1
  %1177 = mul i32 %1171, %1175
  %1178 = urem i32 %1177, 2
  %1179 = icmp eq i32 %1178, 0
  %1180 = icmp slt i32 %1172, 10
  %1181 = and i1 %1179, %1180
  %1182 = xor i1 %1179, %1180
  %1183 = or i1 %1181, %1182
  %1184 = or i1 %1179, %1180
  br i1 %1183, label %1185, label %1489

; <label>:1185:                                   ; preds = %1170
  br label %1186

; <label>:1186:                                   ; preds = %1340, %1185
  %1187 = load i32, i32* %45, align 4
  %1188 = load i32, i32* %2, align 4
  %1189 = icmp slt i32 %1187, %1188
  br i1 %1189, label %1190, label %1341

; <label>:1190:                                   ; preds = %1186
  %1191 = load i32, i32* %45, align 4
  %1192 = icmp ne i32 %1191, 0
  br i1 %1192, label %1194, label %1193

; <label>:1193:                                   ; preds = %1190
  br label %1304

; <label>:1194:                                   ; preds = %1190
  store i64 1000000000000000000, i64* %46, align 8
  store i32 0, i32* %47, align 4
  br label %1195

; <label>:1195:                                   ; preds = %1291, %1194
  %1196 = load i32, i32* @x.1
  %1197 = load i32, i32* @y.2
  %1198 = sub i32 0, 1
  %1199 = add i32 %1196, %1198
  %1200 = sub i32 %1196, 1
  %1201 = mul i32 %1196, %1199
  %1202 = urem i32 %1201, 2
  %1203 = icmp eq i32 %1202, 0
  %1204 = icmp slt i32 %1197, 10
  %1205 = xor i1 %1203, true
  %1206 = xor i1 %1204, true
  %1207 = xor i1 false, true
  %1208 = and i1 %1205, false
  %1209 = and i1 %1203, %1207
  %1210 = and i1 %1206, false
  %1211 = and i1 %1204, %1207
  %1212 = or i1 %1208, %1209
  %1213 = or i1 %1210, %1211
  %1214 = xor i1 %1212, %1213
  %1215 = or i1 %1205, %1206
  %1216 = xor i1 %1215, true
  %1217 = or i1 false, %1207
  %1218 = and i1 %1216, %1217
  %1219 = or i1 %1214, %1218
  %1220 = or i1 %1203, %1204
  br i1 %1219, label %1221, label %1490

; <label>:1221:                                   ; preds = %1195, %1490
  %1222 = load i32, i32* %47, align 4
  %1223 = icmp slt i32 %1222, 2505
  %1224 = load i32, i32* @x.1
  %1225 = load i32, i32* @y.2
  %1226 = add i32 %1224, -2021843446
  %1227 = sub i32 %1226, 1
  %1228 = sub i32 %1227, -2021843446
  %1229 = sub i32 %1224, 1
  %1230 = mul i32 %1224, %1228
  %1231 = urem i32 %1230, 2
  %1232 = icmp eq i32 %1231, 0
  %1233 = icmp slt i32 %1225, 10
  %1234 = xor i1 %1232, true
  %1235 = xor i1 %1233, true
  %1236 = xor i1 true, true
  %1237 = and i1 %1234, true
  %1238 = and i1 %1232, %1236
  %1239 = and i1 %1235, true
  %1240 = and i1 %1233, %1236
  %1241 = or i1 %1237, %1238
  %1242 = or i1 %1239, %1240
  %1243 = xor i1 %1241, %1242
  %1244 = or i1 %1234, %1235
  %1245 = xor i1 %1244, true
  %1246 = or i1 true, %1236
  %1247 = and i1 %1245, %1246
  %1248 = or i1 %1243, %1247
  %1249 = or i1 %1232, %1233
  br i1 %1248, label %1250, label %1490

; <label>:1250:                                   ; preds = %1221
  br i1 %1223, label %1251, label %1298

; <label>:1251:                                   ; preds = %1250
  %1252 = load i32, i32* @x.1
  %1253 = load i32, i32* @y.2
  %1254 = sub i32 %1252, -255898046
  %1255 = sub i32 %1254, 1
  %1256 = add i32 %1255, -255898046
  %1257 = sub i32 %1252, 1
  %1258 = mul i32 %1252, %1256
  %1259 = urem i32 %1258, 2
  %1260 = icmp eq i32 %1259, 0
  %1261 = icmp slt i32 %1253, 10
  %1262 = and i1 %1260, %1261
  %1263 = xor i1 %1260, %1261
  %1264 = or i1 %1262, %1263
  %1265 = or i1 %1260, %1261
  br i1 %1264, label %1266, label %1493

; <label>:1266:                                   ; preds = %1251, %1493
  %1267 = load i32, i32* %45, align 4
  %1268 = sext i32 %1267 to i64
  %1269 = getelementptr inbounds [55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 %1268
  %1270 = load i32, i32* %47, align 4
  %1271 = sext i32 %1270 to i64
  %1272 = getelementptr inbounds [2510 x i64], [2510 x i64]* %1269, i64 0, i64 %1271
  %1273 = load i32, i32* @x.1
  %1274 = load i32, i32* @y.2
  %1275 = add i32 %1273, 1160968848
  %1276 = sub i32 %1275, 1
  %1277 = sub i32 %1276, 1160968848
  %1278 = sub i32 %1273, 1
  %1279 = mul i32 %1273, %1277
  %1280 = urem i32 %1279, 2
  %1281 = icmp eq i32 %1280, 0
  %1282 = icmp slt i32 %1274, 10
  %1283 = and i1 %1281, %1282
  %1284 = xor i1 %1281, %1282
  %1285 = or i1 %1283, %1284
  %1286 = or i1 %1281, %1282
  br i1 %1285, label %1287, label %1493

; <label>:1287:                                   ; preds = %1266
  %1288 = invoke dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %46, i64* dereferenceable(8) %1272)
          to label %1289 unwind label %790

; <label>:1289:                                   ; preds = %1287
  %1290 = load i64, i64* %1288, align 8
  store i64 %1290, i64* %46, align 8
  br label %1291

; <label>:1291:                                   ; preds = %1289
  %1292 = load i32, i32* %47, align 4
  %1293 = sub i32 0, %1292
  %1294 = sub i32 0, 1
  %1295 = add i32 %1293, %1294
  %1296 = sub i32 0, %1295
  %1297 = add nsw i32 %1292, 1
  store i32 %1296, i32* %47, align 4
  br label %1195

; <label>:1298:                                   ; preds = %1250
  %1299 = load i64, i64* %46, align 8
  %1300 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %1299)
          to label %1301 unwind label %790

; <label>:1301:                                   ; preds = %1298
  %1302 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1300, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %1303 unwind label %790

; <label>:1303:                                   ; preds = %1301
  br label %1304

; <label>:1304:                                   ; preds = %1303, %1193
  %1305 = load i32, i32* @x.1
  %1306 = load i32, i32* @y.2
  %1307 = sub i32 %1305, -1260299780
  %1308 = sub i32 %1307, 1
  %1309 = add i32 %1308, -1260299780
  %1310 = sub i32 %1305, 1
  %1311 = mul i32 %1305, %1309
  %1312 = urem i32 %1311, 2
  %1313 = icmp eq i32 %1312, 0
  %1314 = icmp slt i32 %1306, 10
  %1315 = and i1 %1313, %1314
  %1316 = xor i1 %1313, %1314
  %1317 = or i1 %1315, %1316
  %1318 = or i1 %1313, %1314
  br i1 %1317, label %1319, label %1500

; <label>:1319:                                   ; preds = %1304, %1500
  %1320 = load i32, i32* %45, align 4
  %1321 = sub i32 0, %1320
  %1322 = sub i32 0, 1
  %1323 = add i32 %1321, %1322
  %1324 = sub i32 0, %1323
  %1325 = add nsw i32 %1320, 1
  store i32 %1324, i32* %45, align 4
  %1326 = load i32, i32* @x.1
  %1327 = load i32, i32* @y.2
  %1328 = add i32 %1326, 1584373182
  %1329 = sub i32 %1328, 1
  %1330 = sub i32 %1329, 1584373182
  %1331 = sub i32 %1326, 1
  %1332 = mul i32 %1326, %1330
  %1333 = urem i32 %1332, 2
  %1334 = icmp eq i32 %1333, 0
  %1335 = icmp slt i32 %1327, 10
  %1336 = and i1 %1334, %1335
  %1337 = xor i1 %1334, %1335
  %1338 = or i1 %1336, %1337
  %1339 = or i1 %1334, %1335
  br i1 %1338, label %1340, label %1500

; <label>:1340:                                   ; preds = %1319
  br label %1186

; <label>:1341:                                   ; preds = %1186
  store i32 0, i32* %1, align 4
  call void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev(%"class.std::priority_queue"* %21) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.9"* %16) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.9"* %14) #3
  call void @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %5) #3
  %1342 = load i32, i32* %1, align 4
  ret i32 %1342

; <label>:1343:                                   ; preds = %847, %789, %357
  %1344 = load i32, i32* @x.1
  %1345 = load i32, i32* @y.2
  %1346 = sub i32 0, 1
  %1347 = add i32 %1344, %1346
  %1348 = sub i32 %1344, 1
  %1349 = mul i32 %1344, %1347
  %1350 = urem i32 %1349, 2
  %1351 = icmp eq i32 %1350, 0
  %1352 = icmp slt i32 %1345, 10
  %1353 = xor i1 %1351, true
  %1354 = xor i1 %1352, true
  %1355 = xor i1 true, true
  %1356 = and i1 %1353, true
  %1357 = and i1 %1351, %1355
  %1358 = and i1 %1354, true
  %1359 = and i1 %1352, %1355
  %1360 = or i1 %1356, %1357
  %1361 = or i1 %1358, %1359
  %1362 = xor i1 %1360, %1361
  %1363 = or i1 %1353, %1354
  %1364 = xor i1 %1363, true
  %1365 = or i1 true, %1355
  %1366 = and i1 %1364, %1365
  %1367 = or i1 %1362, %1366
  %1368 = or i1 %1351, %1352
  br i1 %1367, label %1369, label %1533

; <label>:1369:                                   ; preds = %1343, %1533
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.9"* %16) #3
  %1370 = load i32, i32* @x.1
  %1371 = load i32, i32* @y.2
  %1372 = sub i32 %1370, 779306007
  %1373 = sub i32 %1372, 1
  %1374 = add i32 %1373, 779306007
  %1375 = sub i32 %1370, 1
  %1376 = mul i32 %1370, %1374
  %1377 = urem i32 %1376, 2
  %1378 = icmp eq i32 %1377, 0
  %1379 = icmp slt i32 %1371, 10
  %1380 = and i1 %1378, %1379
  %1381 = xor i1 %1378, %1379
  %1382 = or i1 %1380, %1381
  %1383 = or i1 %1378, %1379
  br i1 %1382, label %1384, label %1533

; <label>:1384:                                   ; preds = %1369
  br label %1385

; <label>:1385:                                   ; preds = %1384, %353
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.9"* %14) #3
  br label %1386

; <label>:1386:                                   ; preds = %1385, %352, %277
  call void @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %5) #3
  br label %1387

; <label>:1387:                                   ; preds = %1386, %276
  %1388 = load i8*, i8** %7, align 8
  %1389 = load i32, i32* %8, align 4
  %1390 = insertvalue { i8*, i32 } undef, i8* %1388, 0
  %1391 = insertvalue { i8*, i32 } %1390, i32 %1389, 1
  resume { i8*, i32 } %1391

; <label>:1392:                                   ; preds = %69, %54
  %1393 = load i32, i32* %9, align 4
  %1394 = load i32, i32* %3, align 4
  %1395 = icmp slt i32 %1393, %1394
  br label %69

; <label>:1396:                                   ; preds = %103, %89
  br label %103

; <label>:1397:                                   ; preds = %165, %151
  %1398 = load i32, i32* %11, align 4
  %1399 = sext i32 %1398 to i64
  %1400 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %5, i64 %1399) #3
  br label %165

; <label>:1401:                                   ; preds = %209, %183
  br label %209

; <label>:1402:                                   ; preds = %246, %231
  %1403 = landingpad { i8*, i32 }
          cleanup
  %1404 = extractvalue { i8*, i32 } %1403, 0
  store i8* %1404, i8** %7, align 8
  %1405 = extractvalue { i8*, i32 } %1403, 1
  store i32 %1405, i32* %8, align 4
  call void @_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEED2Ev(%"class.std::allocator"* %6) #3
  br label %246

; <label>:1406:                                   ; preds = %323, %308
  %1407 = landingpad { i8*, i32 }
          cleanup
  %1408 = extractvalue { i8*, i32 } %1407, 0
  store i8* %1408, i8** %7, align 8
  %1409 = extractvalue { i8*, i32 } %1407, 1
  store i32 %1409, i32* %8, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %15) #3
  br label %323

; <label>:1410:                                   ; preds = %381, %366
  store i32 0, i32* %20, align 4
  br label %381

; <label>:1411:                                   ; preds = %424, %397
  %1412 = load i32, i32* %20, align 4
  %1413 = icmp slt i32 %1412, 2505
  br label %424

; <label>:1414:                                   ; preds = %472, %457
  %1415 = load i32, i32* %19, align 4
  %1416 = shl i32 %1415, 1
  %1417 = sub i32 0, 1
  %1418 = add i32 %1415, %1417
  %1419 = sub i32 %1415, 1
  %1420 = mul i32 %1418, 1
  %1421 = add i32 0, -1594085496
  %1422 = sub i32 %1421, %1415
  %1423 = sub i32 %1422, -1594085496
  %1424 = sub i32 0, %1415
  %1425 = sub i32 %1423, -1828668199
  %1426 = add i32 %1425, 1
  %1427 = add i32 %1426, -1828668199
  %1428 = add i32 %1423, 1
  %1429 = add i32 %1415, 1480525032
  %1430 = sub i32 %1429, 1
  %1431 = sub i32 %1430, 1480525032
  %1432 = sub i32 %1415, 1
  %1433 = mul i32 %1431, 1
  %1434 = sub i32 0, %1415
  %1435 = sub i32 0, 1
  %1436 = add i32 %1434, %1435
  %1437 = sub i32 0, %1436
  %1438 = add nsw i32 %1415, 1
  store i32 %1437, i32* %19, align 4
  br label %472

; <label>:1439:                                   ; preds = %519, %493
  br label %519

; <label>:1440:                                   ; preds = %577, %562
  br label %577

; <label>:1441:                                   ; preds = %631, %604
  %1442 = bitcast %"class.std::tuple.19"* %30 to i8*
  %1443 = bitcast %"class.std::tuple.19"* %603 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1442, i8* %1443, i64 16, i32 8, i1 false)
  br label %631

; <label>:1444:                                   ; preds = %676, %661
  call void @_ZSt3tieIJxiiEESt5tupleIJDpRT_EES3_(%"class.std::tuple.22"* sret %31, i64* dereferenceable(8) %27, i32* dereferenceable(4) %28, i32* dereferenceable(4) %29) #3
  br label %676

; <label>:1445:                                   ; preds = %707, %692
  %1446 = load i32, i32* %29, align 4
  %1447 = sext i32 %1446 to i64
  %1448 = getelementptr inbounds [55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 %1447
  %1449 = load i32, i32* %28, align 4
  %1450 = sext i32 %1449 to i64
  %1451 = getelementptr inbounds [2510 x i64], [2510 x i64]* %1448, i64 0, i64 %1450
  %1452 = load i64, i64* %1451, align 8
  %1453 = load i64, i64* %27, align 8
  %1454 = icmp slt i64 %1452, %1453
  br label %707

; <label>:1455:                                   ; preds = %759, %733
  %1456 = landingpad { i8*, i32 }
          cleanup
  %1457 = extractvalue { i8*, i32 } %1456, 0
  store i8* %1457, i8** %7, align 8
  %1458 = extractvalue { i8*, i32 } %1456, 1
  store i32 %1458, i32* %8, align 4
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EED2Ev(%"class.std::vector.14"* %23) #3
  br label %759

; <label>:1459:                                   ; preds = %817, %790
  %1460 = landingpad { i8*, i32 }
          cleanup
  %1461 = extractvalue { i8*, i32 } %1460, 0
  store i8* %1461, i8** %7, align 8
  %1462 = extractvalue { i8*, i32 } %1460, 1
  store i32 %1462, i32* %8, align 4
  call void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev(%"class.std::priority_queue"* %21) #3
  br label %817

; <label>:1463:                                   ; preds = %894, %880
  %1464 = load i64, i64* %34, align 8
  %1465 = load i32, i32* %29, align 4
  %1466 = sext i32 %1465 to i64
  %1467 = getelementptr inbounds [55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 %1466
  %1468 = load i32, i32* %32, align 4
  %1469 = sext i32 %1468 to i64
  %1470 = getelementptr inbounds [2510 x i64], [2510 x i64]* %1467, i64 0, i64 %1469
  store i64 %1464, i64* %1470, align 8
  br label %894

; <label>:1471:                                   ; preds = %945, %930
  %1472 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %35, i32 0, i32 0
  %1473 = bitcast %"struct.std::_Tuple_impl.20"* %1472 to { i64, i64 }*
  %1474 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1473, i32 0, i32 0
  %1475 = extractvalue { i64, i64 } %929, 0
  store i64 %1475, i64* %1474, align 8
  %1476 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1473, i32 0, i32 1
  %1477 = extractvalue { i64, i64 } %929, 1
  store i64 %1477, i64* %1476, align 8
  br label %945

; <label>:1478:                                   ; preds = %1038, %1011
  %1479 = load i64, i64* %34, align 8
  %1480 = load i32, i32* %40, align 4
  %1481 = sext i32 %1480 to i64
  %1482 = getelementptr inbounds [55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 %1481
  %1483 = load i32, i32* %32, align 4
  %1484 = sext i32 %1483 to i64
  %1485 = getelementptr inbounds [2510 x i64], [2510 x i64]* %1482, i64 0, i64 %1484
  store i64 %1479, i64* %1485, align 8
  br label %1038

; <label>:1486:                                   ; preds = %1096, %1082
  br label %1096

; <label>:1487:                                   ; preds = %1139, %1124
  %1488 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %37) #3
  br label %1139

; <label>:1489:                                   ; preds = %1170, %1156
  store i32 0, i32* %45, align 4
  br label %1170

; <label>:1490:                                   ; preds = %1221, %1195
  %1491 = load i32, i32* %47, align 4
  %1492 = icmp slt i32 %1491, 2505
  br label %1221

; <label>:1493:                                   ; preds = %1266, %1251
  %1494 = load i32, i32* %45, align 4
  %1495 = sext i32 %1494 to i64
  %1496 = getelementptr inbounds [55 x [2510 x i64]], [55 x [2510 x i64]]* @dp, i64 0, i64 %1495
  %1497 = load i32, i32* %47, align 4
  %1498 = sext i32 %1497 to i64
  %1499 = getelementptr inbounds [2510 x i64], [2510 x i64]* %1496, i64 0, i64 %1498
  br label %1266

; <label>:1500:                                   ; preds = %1319, %1304
  %1501 = load i32, i32* %45, align 4
  %1502 = sub i32 0, 1
  %1503 = add i32 %1501, %1502
  %1504 = sub i32 %1501, 1
  %1505 = mul i32 %1503, 1
  %1506 = sub i32 0, -185273156
  %1507 = sub i32 %1506, %1501
  %1508 = add i32 %1507, -185273156
  %1509 = sub i32 0, %1501
  %1510 = add i32 %1508, 9440463
  %1511 = add i32 %1510, 1
  %1512 = sub i32 %1511, 9440463
  %1513 = add i32 %1508, 1
  %1514 = sub i32 0, 1
  %1515 = add i32 %1501, %1514
  %1516 = sub i32 %1501, 1
  %1517 = mul i32 %1515, 1
  %1518 = shl i32 %1501, 1
  %1519 = sub i32 %1501, 972934685
  %1520 = sub i32 %1519, 1
  %1521 = add i32 %1520, 972934685
  %1522 = sub i32 %1501, 1
  %1523 = mul i32 %1521, 1
  %1524 = sub i32 0, 1
  %1525 = add i32 %1501, %1524
  %1526 = sub i32 %1501, 1
  %1527 = mul i32 %1525, 1
  %1528 = shl i32 %1501, 1
  %1529 = sub i32 %1501, 495911015
  %1530 = add i32 %1529, 1
  %1531 = add i32 %1530, 495911015
  %1532 = add nsw i32 %1501, 1
  store i32 %1531, i32* %45, align 4
  br label %1319

; <label>:1533:                                   ; preds = %1369, %1343
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.9"* %16) #3
  br label %1369
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEEC2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EEC2EmRKS4_(%"class.std::vector"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"* %10, i64 %11, %"class.std::allocator"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EE21_M_default_initializeEm(%"class.std::vector"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i32, i32* @x.5
  %22 = load i32, i32* @y.6
  %23 = add i32 %21, -376319558
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -376319558
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %67

; <label>:35:                                     ; preds = %20, %67
  %36 = load i8*, i8** %7, align 8
  %37 = load i32, i32* %8, align 4
  %38 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  %40 = load i32, i32* @x.5
  %41 = load i32, i32* @y.6
  %42 = add i32 %40, -1768901103
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1768901103
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %67

; <label>:66:                                     ; preds = %35
  resume { i8*, i32 } %39

; <label>:67:                                     ; preds = %35, %20
  %68 = load i8*, i8** %7, align 8
  %69 = load i32, i32* %8, align 4
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  br label %35
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEED2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.7
  %5 = load i32, i32* @y.8
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1587691720, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1587691720, label %17
    i32 -116062480, label %37
    i32 -507352893, label %68
    i32 -263584996, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -116062480, i32 -263584996
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %38, align 8
  %39 = load %"class.std::allocator"*, %"class.std::allocator"** %38, align 8
  %40 = bitcast %"class.std::allocator"* %39 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator"* %40) #3
  %41 = load i32, i32* @x.7
  %42 = load i32, i32* @y.8
  %43 = add i32 %41, -493096329
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -493096329
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -507352893, i32 -263584996
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %70, align 8
  %71 = load %"class.std::allocator"*, %"class.std::allocator"** %70, align 8
  %72 = bitcast %"class.std::allocator"* %71 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator"* %72) #3
  store i32 -116062480, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %9, i64 %10
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE12emplace_backIJRiS5_S5_EEEvDpOT_(%"class.std::vector.0"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"class.std::vector.0"*
  %7 = alloca i32**
  %8 = alloca i32**
  %9 = alloca i32**
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.11
  %13 = load i32, i32* @y.12
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %11
  %20 = icmp slt i32 %13, 10
  store i1 %20, i1* %10
  %21 = alloca i32
  store i32 -1399340639, i32* %21
  br label %22

; <label>:22:                                     ; preds = %4, %192
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -1399340639, label %25
    i32 1291167979, label %33
    i32 109167458, label %80
    i32 -2041942406, label %83
    i32 245849001, label %99
    i32 969058716, label %139
    i32 531571854, label %140
    i32 -1712457018, label %151
    i32 1310073242, label %152
    i32 -533452238, label %167
  ]

; <label>:24:                                     ; preds = %22
  br label %192

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %11
  %27 = load volatile i1, i1* %10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 1291167979, i32 1310073242
  store i32 %32, i32* %21
  br label %192

; <label>:33:                                     ; preds = %22
  %34 = alloca %"class.std::vector.0"*, align 8
  %35 = alloca i32*, align 8
  store i32** %35, i32*** %9
  %36 = alloca i32*, align 8
  store i32** %36, i32*** %8
  %37 = alloca i32*, align 8
  store i32** %37, i32*** %7
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %34, align 8
  %38 = load volatile i32**, i32*** %9
  store i32* %1, i32** %38, align 8
  %39 = load volatile i32**, i32*** %8
  store i32* %2, i32** %39, align 8
  %40 = load volatile i32**, i32*** %7
  store i32* %3, i32** %40, align 8
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  store %"class.std::vector.0"* %41, %"class.std::vector.0"** %6
  %42 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %43 = bitcast %"class.std::vector.0"* %42 to %"struct.std::_Vector_base.1"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %44, i32 0, i32 1
  %46 = load %"class.std::tuple"*, %"class.std::tuple"** %45, align 8
  %47 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %48 = bitcast %"class.std::vector.0"* %47 to %"struct.std::_Vector_base.1"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %49, i32 0, i32 2
  %51 = load %"class.std::tuple"*, %"class.std::tuple"** %50, align 8
  %52 = icmp ne %"class.std::tuple"* %46, %51
  store i1 %52, i1* %5
  %53 = load i32, i32* @x.11
  %54 = load i32, i32* @y.12
  %55 = sub i32 %53, 1320357022
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 1320357022
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 109167458, i32 1310073242
  store i32 %79, i32* %21
  br label %192

; <label>:80:                                     ; preds = %22
  %81 = load volatile i1, i1* %5
  %82 = select i1 %81, i32 -2041942406, i32 531571854
  store i32 %82, i32* %21
  br label %192

; <label>:83:                                     ; preds = %22
  %84 = load i32, i32* @x.11
  %85 = load i32, i32* @y.12
  %86 = add i32 %84, 390679754
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, 390679754
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 245849001, i32 -533452238
  store i32 %98, i32* %21
  br label %192

; <label>:99:                                     ; preds = %22
  %100 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %101 = bitcast %"class.std::vector.0"* %100 to %"struct.std::_Vector_base.1"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %101, i32 0, i32 0
  %103 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %102 to %"class.std::allocator.2"*
  %104 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %105 = bitcast %"class.std::vector.0"* %104 to %"struct.std::_Vector_base.1"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %106, i32 0, i32 1
  %108 = load %"class.std::tuple"*, %"class.std::tuple"** %107, align 8
  %109 = load volatile i32**, i32*** %9
  %110 = load i32*, i32** %109, align 8
  %111 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %110) #3
  %112 = load volatile i32**, i32*** %8
  %113 = load i32*, i32** %112, align 8
  %114 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %113) #3
  %115 = load volatile i32**, i32*** %7
  %116 = load i32*, i32** %115, align 8
  %117 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %116) #3
  call void @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE9constructIS1_JRiS5_S5_EEEvRS2_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %103, %"class.std::tuple"* %108, i32* dereferenceable(4) %111, i32* dereferenceable(4) %114, i32* dereferenceable(4) %117)
  %118 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %119 = bitcast %"class.std::vector.0"* %118 to %"struct.std::_Vector_base.1"*
  %120 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %119, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %120, i32 0, i32 1
  %122 = load %"class.std::tuple"*, %"class.std::tuple"** %121, align 8
  %123 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %122, i32 1
  store %"class.std::tuple"* %123, %"class.std::tuple"** %121, align 8
  %124 = load i32, i32* @x.11
  %125 = load i32, i32* @y.12
  %126 = sub i32 %124, -445204574
  %127 = sub i32 %126, 1
  %128 = add i32 %127, -445204574
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  %138 = select i1 %136, i32 969058716, i32 -533452238
  store i32 %138, i32* %21
  br label %192

; <label>:139:                                    ; preds = %22
  store i32 -1712457018, i32* %21
  br label %192

; <label>:140:                                    ; preds = %22
  %141 = load volatile i32**, i32*** %9
  %142 = load i32*, i32** %141, align 8
  %143 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %142) #3
  %144 = load volatile i32**, i32*** %8
  %145 = load i32*, i32** %144, align 8
  %146 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %145) #3
  %147 = load volatile i32**, i32*** %7
  %148 = load i32*, i32** %147, align 8
  %149 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %148) #3
  %150 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  call void @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE19_M_emplace_back_auxIJRiS5_S5_EEEvDpOT_(%"class.std::vector.0"* %150, i32* dereferenceable(4) %143, i32* dereferenceable(4) %146, i32* dereferenceable(4) %149)
  store i32 -1712457018, i32* %21
  br label %192

; <label>:151:                                    ; preds = %22
  ret void

; <label>:152:                                    ; preds = %22
  %153 = alloca %"class.std::vector.0"*, align 8
  %154 = alloca i32*, align 8
  %155 = alloca i32*, align 8
  %156 = alloca i32*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %153, align 8
  store i32* %1, i32** %154, align 8
  store i32* %2, i32** %155, align 8
  store i32* %3, i32** %156, align 8
  %157 = load %"class.std::vector.0"*, %"class.std::vector.0"** %153, align 8
  %158 = bitcast %"class.std::vector.0"* %157 to %"struct.std::_Vector_base.1"*
  %159 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %158, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %159, i32 0, i32 1
  %161 = load %"class.std::tuple"*, %"class.std::tuple"** %160, align 8
  %162 = bitcast %"class.std::vector.0"* %157 to %"struct.std::_Vector_base.1"*
  %163 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %162, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %163, i32 0, i32 2
  %165 = load %"class.std::tuple"*, %"class.std::tuple"** %164, align 8
  %166 = icmp ne %"class.std::tuple"* %161, %165
  store i32 1291167979, i32* %21
  br label %192

; <label>:167:                                    ; preds = %22
  %168 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %169 = bitcast %"class.std::vector.0"* %168 to %"struct.std::_Vector_base.1"*
  %170 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %169, i32 0, i32 0
  %171 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %170 to %"class.std::allocator.2"*
  %172 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %173 = bitcast %"class.std::vector.0"* %172 to %"struct.std::_Vector_base.1"*
  %174 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %173, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %174, i32 0, i32 1
  %176 = load %"class.std::tuple"*, %"class.std::tuple"** %175, align 8
  %177 = load volatile i32**, i32*** %9
  %178 = load i32*, i32** %177, align 8
  %179 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %178) #3
  %180 = load volatile i32**, i32*** %8
  %181 = load i32*, i32** %180, align 8
  %182 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %181) #3
  %183 = load volatile i32**, i32*** %7
  %184 = load i32*, i32** %183, align 8
  %185 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %184) #3
  call void @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE9constructIS1_JRiS5_S5_EEEvRS2_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %171, %"class.std::tuple"* %176, i32* dereferenceable(4) %179, i32* dereferenceable(4) %182, i32* dereferenceable(4) %185)
  %186 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %187 = bitcast %"class.std::vector.0"* %186 to %"struct.std::_Vector_base.1"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %188, i32 0, i32 1
  %190 = load %"class.std::tuple"*, %"class.std::tuple"** %189, align 8
  %191 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %190, i32 1
  store %"class.std::tuple"* %191, %"class.std::tuple"** %189, align 8
  store i32 245849001, i32* %21
  br label %192

; <label>:192:                                    ; preds = %167, %152, %140, %139, %99, %83, %80, %33, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.11"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.11"*, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %2, align 8
  %3 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %2, align 8
  %4 = bitcast %"class.std::allocator.11"* %3 to %"class.__gnu_cxx::new_allocator.12"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.12"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(%"class.std::vector.9"*, i64, %"class.std::allocator.11"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.9"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.11"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.11"* %2, %"class.std::allocator.11"** %6, align 8
  %9 = load %"class.std::vector.9"*, %"class.std::vector.9"** %4, align 8
  %10 = bitcast %"class.std::vector.9"* %9 to %"struct.std::_Vector_base.10"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %6, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.10"* %10, i64 %11, %"class.std::allocator.11"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorIiSaIiEE21_M_default_initializeEm(%"class.std::vector.9"* %9, i64 %13)
          to label %14 unwind label %44

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.15
  %16 = load i32, i32* @y.16
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %136

; <label>:28:                                     ; preds = %14, %136
  %29 = load i32, i32* @x.15
  %30 = load i32, i32* @y.16
  %31 = add i32 %29, -555424275
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -555424275
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %136

; <label>:43:                                     ; preds = %28
  ret void

; <label>:44:                                     ; preds = %3
  %45 = load i32, i32* @x.15
  %46 = load i32, i32* @y.16
  %47 = add i32 %45, 794854256
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 794854256
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %137

; <label>:59:                                     ; preds = %44, %137
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %7, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %8, align 4
  %63 = bitcast %"class.std::vector.9"* %9 to %"struct.std::_Vector_base.10"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.10"* %63) #3
  %64 = load i32, i32* @x.15
  %65 = load i32, i32* @y.16
  %66 = sub i32 0, 1
  %67 = add i32 %64, %66
  %68 = sub i32 %64, 1
  %69 = mul i32 %64, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %65, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %137

; <label>:77:                                     ; preds = %59
  br label %78

; <label>:78:                                     ; preds = %77
  %79 = load i32, i32* @x.15
  %80 = load i32, i32* @y.16
  %81 = add i32 %79, 1035920755
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, 1035920755
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 false, true
  %92 = and i1 %89, false
  %93 = and i1 %87, %91
  %94 = and i1 %90, false
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 false, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %142

; <label>:105:                                    ; preds = %78, %142
  %106 = load i8*, i8** %7, align 8
  %107 = load i32, i32* %8, align 4
  %108 = insertvalue { i8*, i32 } undef, i8* %106, 0
  %109 = insertvalue { i8*, i32 } %108, i32 %107, 1
  %110 = load i32, i32* @x.15
  %111 = load i32, i32* @y.16
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 true, true
  %122 = and i1 %119, true
  %123 = and i1 %117, %121
  %124 = and i1 %120, true
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 true, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %142

; <label>:135:                                    ; preds = %105
  resume { i8*, i32 } %109

; <label>:136:                                    ; preds = %28, %14
  br label %28

; <label>:137:                                    ; preds = %59, %44
  %138 = landingpad { i8*, i32 }
          cleanup
  %139 = extractvalue { i8*, i32 } %138, 0
  store i8* %139, i8** %7, align 8
  %140 = extractvalue { i8*, i32 } %138, 1
  store i32 %140, i32* %8, align 4
  %141 = bitcast %"class.std::vector.9"* %9 to %"struct.std::_Vector_base.10"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.10"* %141) #3
  br label %59

; <label>:142:                                    ; preds = %105, %78
  %143 = load i8*, i8** %7, align 8
  %144 = load i32, i32* %8, align 4
  %145 = insertvalue { i8*, i32 } undef, i8* %143, 0
  %146 = insertvalue { i8*, i32 } %145, i32 %144, 1
  br label %105
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.11"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.11"*, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %2, align 8
  %3 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %2, align 8
  %4 = bitcast %"class.std::allocator.11"* %3 to %"class.__gnu_cxx::new_allocator.12"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.12"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.9"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.9"*, %"class.std::vector.9"** %3, align 8
  %6 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4), i32* dereferenceable(4)) #5 comdat {
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  store i32* %0, i32** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %4
  %10 = load i32*, i32** %6, align 8
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %3
  %12 = alloca i32
  store i32 -2111290092, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %73
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -2111290092, label %16
    i32 1357808972, label %21
    i32 253315643, label %49
    i32 1012550539, label %66
    i32 73125444, label %67
    i32 -111577123, label %69
    i32 -476481885, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %73

; <label>:16:                                     ; preds = %13
  %17 = load volatile i32, i32* %4
  %18 = load volatile i32, i32* %3
  %19 = icmp slt i32 %17, %18
  %20 = select i1 %19, i32 1357808972, i32 73125444
  store i32 %20, i32* %12
  br label %73

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.21
  %23 = load i32, i32* @y.22
  %24 = add i32 %22, 2116591013
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 2116591013
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 253315643, i32 -476481885
  store i32 %48, i32* %12
  br label %73

; <label>:49:                                     ; preds = %13
  %50 = load i32*, i32** %7, align 8
  store i32* %50, i32** %5, align 8
  %51 = load i32, i32* @x.21
  %52 = load i32, i32* @y.22
  %53 = sub i32 %51, -1527795621
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1527795621
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1012550539, i32 -476481885
  store i32 %65, i32* %12
  br label %73

; <label>:66:                                     ; preds = %13
  store i32 -111577123, i32* %12
  br label %73

; <label>:67:                                     ; preds = %13
  %68 = load i32*, i32** %6, align 8
  store i32* %68, i32** %5, align 8
  store i32 -111577123, i32* %12
  br label %73

; <label>:69:                                     ; preds = %13
  %70 = load i32*, i32** %5, align 8
  ret i32* %70

; <label>:71:                                     ; preds = %13
  %72 = load i32*, i32** %7, align 8
  store i32* %72, i32** %5, align 8
  store i32 253315643, i32* %12
  br label %73

; <label>:73:                                     ; preds = %71, %67, %66, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EEC2Ev(%"class.std::vector.14"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.23
  %3 = load i32, i32* @y.24
  %4 = add i32 %2, 209000951
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 209000951
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %51

; <label>:16:                                     ; preds = %1, %51
  %17 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %17, align 8
  %18 = load %"class.std::vector.14"*, %"class.std::vector.14"** %17, align 8
  %19 = bitcast %"class.std::vector.14"* %18 to %"struct.std::_Vector_base.15"*
  %20 = load i32, i32* @x.23
  %21 = load i32, i32* @y.24
  %22 = sub i32 %20, 1290929775
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 1290929775
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %51

; <label>:46:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EEC2Ev(%"struct.std::_Vector_base.15"* %19)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #10
  unreachable

; <label>:51:                                     ; preds = %16, %1
  %52 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %52, align 8
  %53 = load %"class.std::vector.14"*, %"class.std::vector.14"** %52, align 8
  %54 = bitcast %"class.std::vector.14"* %53 to %"struct.std::_Vector_base.15"*
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"*, %"struct.std::greater"* dereferenceable(1), %"class.std::vector.14"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::priority_queue"*, align 8
  %5 = alloca %"struct.std::greater"*, align 8
  %6 = alloca %"class.std::vector.14"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %9 = alloca %"struct.std::greater", align 1
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %4, align 8
  store %"struct.std::greater"* %1, %"struct.std::greater"** %5, align 8
  store %"class.std::vector.14"* %2, %"class.std::vector.14"** %6, align 8
  %12 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %4, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.14"*, %"class.std::vector.14"** %6, align 8
  %15 = call dereferenceable(24) %"class.std::vector.14"* @_ZSt4moveIRSt6vectorISt5tupleIJxiiEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.14"* dereferenceable(24) %14) #3
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EEC2EOS3_(%"class.std::vector.14"* %13, %"class.std::vector.14"* dereferenceable(24) %15) #3
  %16 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  %17 = load %"struct.std::greater"*, %"struct.std::greater"** %5, align 8
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %19 = call %"class.std::tuple.19"* @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE5beginEv(%"class.std::vector.14"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %7, i32 0, i32 0
  store %"class.std::tuple.19"* %19, %"class.std::tuple.19"** %20, align 8
  %21 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %22 = call %"class.std::tuple.19"* @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE3endEv(%"class.std::vector.14"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %8, i32 0, i32 0
  store %"class.std::tuple.19"* %22, %"class.std::tuple.19"** %23, align 8
  %24 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %7, i32 0, i32 0
  %26 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %8, i32 0, i32 0
  %28 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %27, align 8
  invoke void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"class.std::tuple.19"* %26, %"class.std::tuple.19"* %28)
          to label %29 unwind label %59

; <label>:29:                                     ; preds = %3
  %30 = load i32, i32* @x.25
  %31 = load i32, i32* @y.26
  %32 = sub i32 %30, -1087366953
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1087366953
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %68

; <label>:44:                                     ; preds = %29, %68
  %45 = load i32, i32* @x.25
  %46 = load i32, i32* @y.26
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %68

; <label>:58:                                     ; preds = %44
  ret void

; <label>:59:                                     ; preds = %3
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %10, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %11, align 4
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EED2Ev(%"class.std::vector.14"* %13) #3
  br label %63

; <label>:63:                                     ; preds = %59
  %64 = load i8*, i8** %10, align 8
  %65 = load i32, i32* %11, align 4
  %66 = insertvalue { i8*, i32 } undef, i8* %64, 0
  %67 = insertvalue { i8*, i32 } %66, i32 %65, 1
  resume { i8*, i32 } %67

; <label>:68:                                     ; preds = %44, %29
  br label %44
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EED2Ev(%"class.std::vector.14"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.27
  %3 = load i32, i32* @y.28
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %65

; <label>:15:                                     ; preds = %1, %65
  %16 = alloca %"class.std::vector.14"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %16, align 8
  %19 = load %"class.std::vector.14"*, %"class.std::vector.14"** %16, align 8
  %20 = bitcast %"class.std::vector.14"* %19 to %"struct.std::_Vector_base.15"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %22, align 8
  %24 = bitcast %"class.std::vector.14"* %19 to %"struct.std::_Vector_base.15"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %25, i32 0, i32 1
  %27 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %26, align 8
  %28 = bitcast %"class.std::vector.14"* %19 to %"struct.std::_Vector_base.15"*
  %29 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %28) #3
  %30 = load i32, i32* @x.27
  %31 = load i32, i32* @y.28
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  br i1 %53, label %55, label %65

; <label>:55:                                     ; preds = %15
  invoke void @_ZSt8_DestroyIPSt5tupleIJxiiEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.19"* %23, %"class.std::tuple.19"* %27, %"class.std::allocator.16"* dereferenceable(1) %29)
          to label %56 unwind label %58

; <label>:56:                                     ; preds = %55
  %57 = bitcast %"class.std::vector.14"* %19 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EED2Ev(%"struct.std::_Vector_base.15"* %57) #3
  ret void

; <label>:58:                                     ; preds = %55
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %17, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %18, align 4
  %62 = bitcast %"class.std::vector.14"* %19 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EED2Ev(%"struct.std::_Vector_base.15"* %62) #3
  br label %63

; <label>:63:                                     ; preds = %58
  %64 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %64) #10
  unreachable

; <label>:65:                                     ; preds = %15, %1
  %66 = alloca %"class.std::vector.14"*, align 8
  %67 = alloca i8*
  %68 = alloca i32
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %66, align 8
  %69 = load %"class.std::vector.14"*, %"class.std::vector.14"** %66, align 8
  %70 = bitcast %"class.std::vector.14"* %69 to %"struct.std::_Vector_base.15"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %72, align 8
  %74 = bitcast %"class.std::vector.14"* %69 to %"struct.std::_Vector_base.15"*
  %75 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %74, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %75, i32 0, i32 1
  %77 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %76, align 8
  %78 = bitcast %"class.std::vector.14"* %69 to %"struct.std::_Vector_base.15"*
  %79 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %78) #3
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE4pushEOS1_(%"class.std::priority_queue"*, %"class.std::tuple.19"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::priority_queue"*, align 8
  %4 = alloca %"class.std::tuple.19"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %7 = alloca %"struct.std::greater", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %3, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %4, align 8
  %8 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %3, align 8
  %9 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  %10 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  %11 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %10) #3
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE9push_backEOS1_(%"class.std::vector.14"* %9, %"class.std::tuple.19"* dereferenceable(16) %11)
  %12 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  %13 = call %"class.std::tuple.19"* @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE5beginEv(%"class.std::vector.14"* %12) #3
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  store %"class.std::tuple.19"* %13, %"class.std::tuple.19"** %14, align 8
  %15 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  %16 = call %"class.std::tuple.19"* @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE3endEv(%"class.std::vector.14"* %15) #3
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %6, i32 0, i32 0
  store %"class.std::tuple.19"* %16, %"class.std::tuple.19"** %17, align 8
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 1
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  %20 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %19, align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %6, i32 0, i32 0
  %22 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %21, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"class.std::tuple.19"* %20, %"class.std::tuple.19"* %22)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64, i64 } @_ZSt10make_tupleIJxRiiEESt5tupleIJDpNSt17__decay_and_stripIT_E6__typeEEEDpOS3_(i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat {
  %4 = alloca { i64, i64 }
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.31
  %8 = load i32, i32* @y.32
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1070499296, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1070499296, label %20
    i32 1614887856, label %28
    i32 656525674, label %57
    i32 1600524311, label %59
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1614887856, i32 1600524311
  store i32 %27, i32* %16
  br label %73

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::tuple.19", align 8
  %30 = alloca i64*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  store i64* %0, i64** %30, align 8
  store i32* %1, i32** %31, align 8
  store i32* %2, i32** %32, align 8
  %33 = load i64*, i64** %30, align 8
  %34 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %33) #3
  %35 = load i32*, i32** %31, align 8
  %36 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %35) #3
  %37 = load i32*, i32** %32, align 8
  %38 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %37) #3
  call void @_ZNSt5tupleIJxiiEEC2IJxRiiEvEEDpOT_(%"class.std::tuple.19"* %29, i64* dereferenceable(8) %34, i32* dereferenceable(4) %36, i32* dereferenceable(4) %38)
  %39 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %29, i32 0, i32 0
  %40 = bitcast %"struct.std::_Tuple_impl.20"* %39 to { i64, i64 }*
  %41 = load { i64, i64 }, { i64, i64 }* %40, align 8
  store { i64, i64 } %41, { i64, i64 }* %4
  %42 = load i32, i32* @x.31
  %43 = load i32, i32* @y.32
  %44 = sub i32 %42, 835350010
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 835350010
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 656525674, i32 1600524311
  store i32 %56, i32* %16
  br label %73

; <label>:57:                                     ; preds = %17
  %58 = load volatile { i64, i64 }, { i64, i64 }* %4
  ret { i64, i64 } %58

; <label>:59:                                     ; preds = %17
  %60 = alloca %"class.std::tuple.19", align 8
  %61 = alloca i64*, align 8
  %62 = alloca i32*, align 8
  %63 = alloca i32*, align 8
  store i64* %0, i64** %61, align 8
  store i32* %1, i32** %62, align 8
  store i32* %2, i32** %63, align 8
  %64 = load i64*, i64** %61, align 8
  %65 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %64) #3
  %66 = load i32*, i32** %62, align 8
  %67 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %66) #3
  %68 = load i32*, i32** %63, align 8
  %69 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %68) #3
  call void @_ZNSt5tupleIJxiiEEC2IJxRiiEvEEDpOT_(%"class.std::tuple.19"* %60, i64* dereferenceable(8) %65, i32* dereferenceable(4) %67, i32* dereferenceable(4) %69)
  %70 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %60, i32 0, i32 0
  %71 = bitcast %"struct.std::_Tuple_impl.20"* %70 to { i64, i64 }*
  %72 = load { i64, i64 }, { i64, i64 }* %71, align 8
  store i32 1614887856, i32* %16
  br label %73

; <label>:73:                                     ; preds = %59, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE5emptyEv(%"class.std::priority_queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5emptyEv(%"class.std::vector.14"* %4) #3
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.19"* @_ZNKSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3topEv(%"class.std::priority_queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::tuple.19"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.35
  %6 = load i32, i32* @y.36
  %7 = sub i32 %5, -1767183178
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1767183178
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -326961256, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -326961256, label %19
    i32 1074634919, label %39
    i32 575413067, label %70
    i32 -1099607158, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1074634919, i32 -1099607158
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %40, align 8
  %41 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %40, align 8
  %42 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %41, i32 0, i32 0
  %43 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5frontEv(%"class.std::vector.14"* %42) #3
  store %"class.std::tuple.19"* %43, %"class.std::tuple.19"** %2
  %44 = load i32, i32* @x.35
  %45 = load i32, i32* @y.36
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 575413067, i32 -1099607158
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %2
  ret %"class.std::tuple.19"* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %73, align 8
  %74 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %73, align 8
  %75 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %74, i32 0, i32 0
  %76 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5frontEv(%"class.std::vector.14"* %75) #3
  store i32 1074634919, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3popEv(%"class.std::priority_queue"*) #0 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %5 = alloca %"struct.std::greater", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %6 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %7 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  %8 = call %"class.std::tuple.19"* @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE5beginEv(%"class.std::vector.14"* %7) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  store %"class.std::tuple.19"* %8, %"class.std::tuple.19"** %9, align 8
  %10 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  %11 = call %"class.std::tuple.19"* @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE3endEv(%"class.std::vector.14"* %10) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %4, i32 0, i32 0
  store %"class.std::tuple.19"* %11, %"class.std::tuple.19"** %12, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  %15 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %14, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %4, i32 0, i32 0
  %17 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %16, align 8
  call void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"class.std::tuple.19"* %15, %"class.std::tuple.19"* %17)
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE8pop_backEv(%"class.std::vector.14"* %18) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt3tieIJxiiEESt5tupleIJDpRT_EES3_(%"class.std::tuple.22"* noalias sret, i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i64*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  store i64* %1, i64** %5, align 8
  store i32* %2, i32** %6, align 8
  store i32* %3, i32** %7, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32*, i32** %7, align 8
  invoke void @_ZNSt5tupleIJRxRiS1_EEC2ES0_S1_S1_(%"class.std::tuple.22"* %0, i64* dereferenceable(8) %8, i32* dereferenceable(4) %9, i32* dereferenceable(4) %10)
          to label %11 unwind label %53

; <label>:11:                                     ; preds = %4
  %12 = load i32, i32* @x.39
  %13 = load i32, i32* @y.40
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %56

; <label>:37:                                     ; preds = %11, %56
  %38 = load i32, i32* @x.39
  %39 = load i32, i32* @y.40
  %40 = add i32 %38, 693670594
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 693670594
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %56

; <label>:52:                                     ; preds = %37
  ret void

; <label>:53:                                     ; preds = %4
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #10
  unreachable

; <label>:56:                                     ; preds = %37, %11
  br label %37
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::tuple.22"* @_ZNSt5tupleIJRxRiS1_EEaSIJxiiEvEERS2_RKS_IJDpT_EE(%"class.std::tuple.22"*, %"class.std::tuple.19"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.22"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.41
  %7 = load i32, i32* @y.42
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 714093428, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 714093428, label %19
    i32 1011373632, label %27
    i32 -122488308, label %62
    i32 -181224880, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1011373632, i32 -181224880
  store i32 %26, i32* %15
  br label %72

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple.22"*, align 8
  %29 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.22"* %0, %"class.std::tuple.22"** %28, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %29, align 8
  %30 = load %"class.std::tuple.22"*, %"class.std::tuple.22"** %28, align 8
  store %"class.std::tuple.22"* %30, %"class.std::tuple.22"** %3
  %31 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %29, align 8
  %32 = bitcast %"class.std::tuple.19"* %31 to %"struct.std::_Tuple_impl.20"*
  %33 = load volatile %"class.std::tuple.22"*, %"class.std::tuple.22"** %3
  %34 = bitcast %"class.std::tuple.22"* %33 to %"struct.std::_Tuple_impl.23"*
  %35 = call dereferenceable(24) %"struct.std::_Tuple_impl.23"* @_ZNSt11_Tuple_implILm0EJRxRiS1_EEaSIJxiiEEERS2_RKS_ILm0EJDpT_EE(%"struct.std::_Tuple_impl.23"* %34, %"struct.std::_Tuple_impl.20"* dereferenceable(16) %32)
  %36 = load i32, i32* @x.41
  %37 = load i32, i32* @y.42
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -122488308, i32 -181224880
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile %"class.std::tuple.22"*, %"class.std::tuple.22"** %3
  ret %"class.std::tuple.22"* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.std::tuple.22"*, align 8
  %66 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.22"* %0, %"class.std::tuple.22"** %65, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %66, align 8
  %67 = load %"class.std::tuple.22"*, %"class.std::tuple.22"** %65, align 8
  %68 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %66, align 8
  %69 = bitcast %"class.std::tuple.19"* %68 to %"struct.std::_Tuple_impl.20"*
  %70 = bitcast %"class.std::tuple.22"* %67 to %"struct.std::_Tuple_impl.23"*
  %71 = call dereferenceable(24) %"struct.std::_Tuple_impl.23"* @_ZNSt11_Tuple_implILm0EJRxRiS1_EEaSIJxiiEEERS2_RKS_ILm0EJDpT_EE(%"struct.std::_Tuple_impl.23"* %70, %"struct.std::_Tuple_impl.20"* dereferenceable(16) %69)
  store i32 1011373632, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64, i64 } @_ZSt10make_tupleIJRxRiS1_EESt5tupleIJDpNSt17__decay_and_stripIT_E6__typeEEEDpOS4_(i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat {
  %4 = alloca %"class.std::tuple.19", align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  store i64* %0, i64** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %8) #3
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %10) #3
  %12 = load i32*, i32** %7, align 8
  %13 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %12) #3
  call void @_ZNSt5tupleIJxiiEEC2IJRxRiS3_EvEEDpOT_(%"class.std::tuple.19"* %4, i64* dereferenceable(8) %9, i32* dereferenceable(4) %11, i32* dereferenceable(4) %13)
  %14 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %4, i32 0, i32 0
  %15 = bitcast %"struct.std::_Tuple_impl.20"* %14 to { i64, i64 }*
  %16 = load { i64, i64 }, { i64, i64 }* %15, align 8
  ret { i64, i64 } %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple"* @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE5beginEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::tuple"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::tuple"*, %"class.std::tuple"** %8, align 8
  ret %"class.std::tuple"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple"* @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE3endEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.std::tuple"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.47
  %6 = load i32, i32* @y.48
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -505813899, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %85
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -505813899, label %18
    i32 -161938301, label %38
    i32 -1326195206, label %74
    i32 -346785123, label %76
  ]

; <label>:17:                                     ; preds = %15
  br label %85

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -161938301, i32 -346785123
  store i32 %37, i32* %14
  br label %85

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %42 = bitcast %"class.std::vector.0"* %41 to %"struct.std::_Vector_base.1"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %43, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %39, %"class.std::tuple"** dereferenceable(8) %44) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  %46 = load %"class.std::tuple"*, %"class.std::tuple"** %45, align 8
  store %"class.std::tuple"* %46, %"class.std::tuple"** %2
  %47 = load i32, i32* @x.47
  %48 = load i32, i32* @y.48
  %49 = sub i32 %47, -1915973140
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1915973140
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1326195206, i32 -346785123
  store i32 %73, i32* %14
  br label %85

; <label>:74:                                     ; preds = %15
  %75 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %2
  ret %"class.std::tuple"* %75

; <label>:76:                                     ; preds = %15
  %77 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %78 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %78, align 8
  %79 = load %"class.std::vector.0"*, %"class.std::vector.0"** %78, align 8
  %80 = bitcast %"class.std::vector.0"* %79 to %"struct.std::_Vector_base.1"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %81, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %77, %"class.std::tuple"** dereferenceable(8) %82) #3
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  %84 = load %"class.std::tuple"*, %"class.std::tuple"** %83, align 8
  store i32 -161938301, i32* %14
  br label %85

; <label>:85:                                     ; preds = %76, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.49
  %7 = load i32, i32* @y.50
  %8 = add i32 %6, -48390265
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -48390265
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1434430801, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1434430801, label %20
    i32 2068671093, label %40
    i32 358873351, label %77
    i32 707703887, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 2068671093, i32 707703887
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %44 = call dereferenceable(8) %"class.std::tuple"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %43) #3
  %45 = load %"class.std::tuple"*, %"class.std::tuple"** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %42, align 8
  %47 = call dereferenceable(8) %"class.std::tuple"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %46) #3
  %48 = load %"class.std::tuple"*, %"class.std::tuple"** %47, align 8
  %49 = icmp ne %"class.std::tuple"* %45, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.49
  %51 = load i32, i32* @y.50
  %52 = add i32 %50, 438726109
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 438726109
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 358873351, i32 707703887
  store i32 %76, i32* %16
  br label %89

; <label>:77:                                     ; preds = %17
  %78 = load volatile i1, i1* %3
  ret i1 %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %81 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %80, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %81, align 8
  %82 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %80, align 8
  %83 = call dereferenceable(8) %"class.std::tuple"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %82) #3
  %84 = load %"class.std::tuple"*, %"class.std::tuple"** %83, align 8
  %85 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %81, align 8
  %86 = call dereferenceable(8) %"class.std::tuple"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %85) #3
  %87 = load %"class.std::tuple"*, %"class.std::tuple"** %86, align 8
  %88 = icmp ne %"class.std::tuple"* %84, %87
  store i32 2068671093, i32* %16
  br label %89

; <label>:89:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(12) %"class.std::tuple"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  ret %"class.std::tuple"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt3tieIJiiiEESt5tupleIJDpRT_EES3_(%"class.std::tuple.29"* noalias sret, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i32* %3, i32** %7, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32*, i32** %7, align 8
  invoke void @_ZNSt5tupleIJRiS0_S0_EEC2ES0_S0_S0_(%"class.std::tuple.29"* %0, i32* dereferenceable(4) %8, i32* dereferenceable(4) %9, i32* dereferenceable(4) %10)
          to label %11 unwind label %54

; <label>:11:                                     ; preds = %4
  %12 = load i32, i32* @x.53
  %13 = load i32, i32* @y.54
  %14 = add i32 %12, 109380514
  %15 = sub i32 %14, 1
  %16 = sub i32 %15, 109380514
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  br i1 %24, label %26, label %98

; <label>:26:                                     ; preds = %11, %98
  %27 = load i32, i32* @x.53
  %28 = load i32, i32* @y.54
  %29 = sub i32 %27, 1509267911
  %30 = sub i32 %29, 1
  %31 = add i32 %30, 1509267911
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %98

; <label>:53:                                     ; preds = %26
  ret void

; <label>:54:                                     ; preds = %4
  %55 = load i32, i32* @x.53
  %56 = load i32, i32* @y.54
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %99

; <label>:80:                                     ; preds = %54, %99
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  call void @__clang_call_terminate(i8* %82) #10
  %83 = load i32, i32* @x.53
  %84 = load i32, i32* @y.54
  %85 = sub i32 %83, -2136136932
  %86 = sub i32 %85, 1
  %87 = add i32 %86, -2136136932
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  br i1 %95, label %97, label %99

; <label>:97:                                     ; preds = %80
  unreachable

; <label>:98:                                     ; preds = %26, %11
  br label %26

; <label>:99:                                     ; preds = %80, %54
  %100 = landingpad { i8*, i32 }
          catch i8* null
  %101 = extractvalue { i8*, i32 } %100, 0
  call void @__clang_call_terminate(i8* %101) #10
  br label %80
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::tuple.29"* @_ZNSt5tupleIJRiS0_S0_EEaSIJiiiEvEERS1_RKS_IJDpT_EE(%"class.std::tuple.29"*, %"class.std::tuple"* dereferenceable(12)) #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.29"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple.29"* %0, %"class.std::tuple.29"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::tuple.29"*, %"class.std::tuple.29"** %3, align 8
  %6 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %7 = bitcast %"class.std::tuple"* %6 to %"struct.std::_Tuple_impl"*
  %8 = bitcast %"class.std::tuple.29"* %5 to %"struct.std::_Tuple_impl.30"*
  %9 = call dereferenceable(24) %"struct.std::_Tuple_impl.30"* @_ZNSt11_Tuple_implILm0EJRiS0_S0_EEaSIJiiiEEERS1_RKS_ILm0EJDpT_EE(%"struct.std::_Tuple_impl.30"* %8, %"struct.std::_Tuple_impl"* dereferenceable(12) %7)
  ret %"class.std::tuple.29"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %6 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %5, i32 1
  store %"class.std::tuple"* %6, %"class.std::tuple"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %7, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 -474581952, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %120
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -474581952, label %17
    i32 -5296893, label %22
    i32 -2122880796, label %38
    i32 225922874, label %67
    i32 659322150, label %68
    i32 -1585784773, label %70
    i32 738276511, label %98
    i32 -1047235036, label %114
    i32 -900939860, label %116
    i32 -136155108, label %118
  ]

; <label>:16:                                     ; preds = %14
  br label %120

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp slt i64 %18, %19
  %21 = select i1 %20, i32 -5296893, i32 659322150
  store i32 %21, i32* %13
  br label %120

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.59
  %24 = load i32, i32* @y.60
  %25 = add i32 %23, -541816272
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -541816272
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 -2122880796, i32 -900939860
  store i32 %37, i32* %13
  br label %120

; <label>:38:                                     ; preds = %14
  %39 = load i64*, i64** %8, align 8
  store i64* %39, i64** %6, align 8
  %40 = load i32, i32* @x.59
  %41 = load i32, i32* @y.60
  %42 = sub i32 %40, -560906327
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -560906327
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 225922874, i32 -900939860
  store i32 %66, i32* %13
  br label %120

; <label>:67:                                     ; preds = %14
  store i32 -1585784773, i32* %13
  br label %120

; <label>:68:                                     ; preds = %14
  %69 = load i64*, i64** %7, align 8
  store i64* %69, i64** %6, align 8
  store i32 -1585784773, i32* %13
  br label %120

; <label>:70:                                     ; preds = %14
  %71 = load i32, i32* @x.59
  %72 = load i32, i32* @y.60
  %73 = add i32 %71, -778541527
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -778541527
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 738276511, i32 -136155108
  store i32 %97, i32* %13
  br label %120

; <label>:98:                                     ; preds = %14
  %99 = load i64*, i64** %6, align 8
  store i64* %99, i64** %3
  %100 = load i32, i32* @x.59
  %101 = load i32, i32* @y.60
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 -1047235036, i32 -136155108
  store i32 %113, i32* %13
  br label %120

; <label>:114:                                    ; preds = %14
  %115 = load volatile i64*, i64** %3
  ret i64* %115

; <label>:116:                                    ; preds = %14
  %117 = load i64*, i64** %8, align 8
  store i64* %117, i64** %6, align 8
  store i32 -2122880796, i32* %13
  br label %120

; <label>:118:                                    ; preds = %14
  %119 = load i64*, i64** %6, align 8
  store i32 738276511, i32* %13
  br label %120

; <label>:120:                                    ; preds = %118, %116, %98, %70, %68, %67, %38, %22, %17, %16
  br label %14
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14priority_queueISt5tupleIJxiiEESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev(%"class.std::priority_queue"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EED2Ev(%"class.std::vector.14"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.9"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.9"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %2, align 8
  %5 = load %"class.std::vector.9"*, %"class.std::vector.9"** %2, align 8
  %6 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  %15 = call dereferenceable(1) %"class.std::allocator.11"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.10"* %14) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %9, i32* %13, %"class.std::allocator.11"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.10"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.10"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.63
  %25 = load i32, i32* @y.64
  %26 = add i32 %24, -1394447651
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -1394447651
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %54

; <label>:38:                                     ; preds = %23, %54
  %39 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %39) #10
  %40 = load i32, i32* @x.63
  %41 = load i32, i32* @y.64
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %54

; <label>:53:                                     ; preds = %38
  unreachable

; <label>:54:                                     ; preds = %38, %23
  %55 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %55) #10
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorISt5tupleIJiiiEESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.0"* %9, %"class.std::vector.0"* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.65
  %20 = load i32, i32* @y.66
  %21 = add i32 %19, 106526479
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 106526479
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %55

; <label>:33:                                     ; preds = %18, %55
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %37) #3
  %38 = load i32, i32* @x.65
  %39 = load i32, i32* @y.66
  %40 = sub i32 %38, 416156188
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 416156188
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %55

; <label>:52:                                     ; preds = %33
  br label %53

; <label>:53:                                     ; preds = %52
  %54 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %54) #10
  unreachable

; <label>:55:                                     ; preds = %33, %18
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %3, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %4, align 4
  %59 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %59) #3
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJxiiEEC2IJxRiiEvEEDpOT_(%"class.std::tuple.19"*, i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::tuple.19"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %5, align 8
  %10 = bitcast %"class.std::tuple.19"* %9 to %"struct.std::_Tuple_impl.20"*
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i32*, i32** %7, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %13) #3
  %15 = load i32*, i32** %8, align 8
  %16 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %15) #3
  call void @_ZNSt11_Tuple_implILm0EJxiiEEC2IxJRiiEvEEOT_DpOT0_(%"struct.std::_Tuple_impl.20"* %10, i64* dereferenceable(8) %12, i32* dereferenceable(4) %14, i32* dereferenceable(4) %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJxiiEEC2IxJRiiEvEEOT_DpOT0_(%"struct.std::_Tuple_impl.20"*, i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %5, align 8
  %10 = bitcast %"struct.std::_Tuple_impl.20"* %9 to %"struct.std::_Tuple_impl.5"*
  %11 = load i32*, i32** %7, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32*, i32** %8, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %13) #3
  call void @_ZNSt11_Tuple_implILm1EJiiEEC2IRiJiEvEEOT_DpOT0_(%"struct.std::_Tuple_impl.5"* %10, i32* dereferenceable(4) %12, i32* dereferenceable(4) %14)
  %15 = bitcast %"struct.std::_Tuple_impl.20"* %9 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to %"struct.std::_Head_base.21"*
  %18 = load i64*, i64** %6, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %18) #3
  call void @_ZNSt10_Head_baseILm0ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.21"* %17, i64* dereferenceable(8) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJiiEEC2IRiJiEvEEOT_DpOT0_(%"struct.std::_Tuple_impl.5"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %4, align 8
  %8 = bitcast %"struct.std::_Tuple_impl.5"* %7 to %"struct.std::_Tuple_impl.6"*
  %9 = load i32*, i32** %6, align 8
  %10 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %9) #3
  call void @_ZNSt11_Tuple_implILm2EJiEEC2IiEEOT_(%"struct.std::_Tuple_impl.6"* %8, i32* dereferenceable(4) %10)
  %11 = bitcast %"struct.std::_Tuple_impl.5"* %7 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4
  %13 = bitcast i8* %12 to %"struct.std::_Head_base.7"*
  %14 = load i32*, i32** %5, align 8
  %15 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %14) #3
  call void @_ZNSt10_Head_baseILm1EiLb0EEC2IRiEEOT_(%"struct.std::_Head_base.7"* %13, i32* dereferenceable(4) %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.21"*, i64* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.21"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base.21"* %0, %"struct.std::_Head_base.21"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base.21"*, %"struct.std::_Head_base.21"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.21", %"struct.std::_Head_base.21"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm2EJiEEC2IiEEOT_(%"struct.std::_Tuple_impl.6"*, i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.81
  %6 = load i32, i32* @y.82
  %7 = add i32 %5, -881763066
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -881763066
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -129910004, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -129910004, label %19
    i32 1842981951, label %39
    i32 -1562832246, label %60
    i32 82503806, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1842981951, i32 82503806
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  %41 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.6"* %0, %"struct.std::_Tuple_impl.6"** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %40, align 8
  %43 = bitcast %"struct.std::_Tuple_impl.6"* %42 to %"struct.std::_Head_base"*
  %44 = load i32*, i32** %41, align 8
  %45 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %44) #3
  call void @_ZNSt10_Head_baseILm2EiLb0EEC2IiEEOT_(%"struct.std::_Head_base"* %43, i32* dereferenceable(4) %45)
  %46 = load i32, i32* @x.81
  %47 = load i32, i32* @y.82
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1562832246, i32 82503806
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  %63 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.6"* %0, %"struct.std::_Tuple_impl.6"** %62, align 8
  store i32* %1, i32** %63, align 8
  %64 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %62, align 8
  %65 = bitcast %"struct.std::_Tuple_impl.6"* %64 to %"struct.std::_Head_base"*
  %66 = load i32*, i32** %63, align 8
  %67 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %66) #3
  call void @_ZNSt10_Head_baseILm2EiLb0EEC2IiEEOT_(%"struct.std::_Head_base"* %65, i32* dereferenceable(4) %67)
  store i32 1842981951, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1EiLb0EEC2IRiEEOT_(%"struct.std::_Head_base.7"*, i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.7"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Head_base.7"* %0, %"struct.std::_Head_base.7"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Head_base.7"*, %"struct.std::_Head_base.7"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.7", %"struct.std::_Head_base.7"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %7) #3
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %6, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm2EiLb0EEC2IiEEOT_(%"struct.std::_Head_base"*, i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %6, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJxiiEEC2IJRxRiS3_EvEEDpOT_(%"class.std::tuple.19"*, i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::tuple.19"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %5, align 8
  %10 = bitcast %"class.std::tuple.19"* %9 to %"struct.std::_Tuple_impl.20"*
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i32*, i32** %7, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %13) #3
  %15 = load i32*, i32** %8, align 8
  %16 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %15) #3
  call void @_ZNSt11_Tuple_implILm0EJxiiEEC2IRxJRiS3_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.20"* %10, i64* dereferenceable(8) %12, i32* dereferenceable(4) %14, i32* dereferenceable(4) %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJxiiEEC2IRxJRiS3_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.20"*, i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %5, align 8
  %10 = bitcast %"struct.std::_Tuple_impl.20"* %9 to %"struct.std::_Tuple_impl.5"*
  %11 = load i32*, i32** %7, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32*, i32** %8, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %13) #3
  call void @_ZNSt11_Tuple_implILm1EJiiEEC2IRiJS2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.5"* %10, i32* dereferenceable(4) %12, i32* dereferenceable(4) %14)
  %15 = bitcast %"struct.std::_Tuple_impl.20"* %9 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to %"struct.std::_Head_base.21"*
  %18 = load i64*, i64** %6, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %18) #3
  call void @_ZNSt10_Head_baseILm0ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.21"* %17, i64* dereferenceable(8) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJiiEEC2IRiJS2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.5"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %4, align 8
  %8 = bitcast %"struct.std::_Tuple_impl.5"* %7 to %"struct.std::_Tuple_impl.6"*
  %9 = load i32*, i32** %6, align 8
  %10 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %9) #3
  call void @_ZNSt11_Tuple_implILm2EJiEEC2IRiEEOT_(%"struct.std::_Tuple_impl.6"* %8, i32* dereferenceable(4) %10)
  %11 = bitcast %"struct.std::_Tuple_impl.5"* %7 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4
  %13 = bitcast i8* %12 to %"struct.std::_Head_base.7"*
  %14 = load i32*, i32** %5, align 8
  %15 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %14) #3
  call void @_ZNSt10_Head_baseILm1EiLb0EEC2IRiEEOT_(%"struct.std::_Head_base.7"* %13, i32* dereferenceable(4) %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ExLb0EEC2IRxEEOT_(%"struct.std::_Head_base.21"*, i64* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.95
  %6 = load i32, i32* @y.96
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2038818201, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %82
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2038818201, label %18
    i32 -802333590, label %38
    i32 995934123, label %73
    i32 742753397, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %82

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -802333590, i32 742753397
  store i32 %37, i32* %14
  br label %82

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Head_base.21"*, align 8
  %40 = alloca i64*, align 8
  store %"struct.std::_Head_base.21"* %0, %"struct.std::_Head_base.21"** %39, align 8
  store i64* %1, i64** %40, align 8
  %41 = load %"struct.std::_Head_base.21"*, %"struct.std::_Head_base.21"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::_Head_base.21", %"struct.std::_Head_base.21"* %41, i32 0, i32 0
  %43 = load i64*, i64** %40, align 8
  %44 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %43) #3
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = load i32, i32* @x.95
  %47 = load i32, i32* @y.96
  %48 = add i32 %46, 1700210497
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1700210497
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 995934123, i32 742753397
  store i32 %72, i32* %14
  br label %82

; <label>:73:                                     ; preds = %15
  ret void

; <label>:74:                                     ; preds = %15
  %75 = alloca %"struct.std::_Head_base.21"*, align 8
  %76 = alloca i64*, align 8
  store %"struct.std::_Head_base.21"* %0, %"struct.std::_Head_base.21"** %75, align 8
  store i64* %1, i64** %76, align 8
  %77 = load %"struct.std::_Head_base.21"*, %"struct.std::_Head_base.21"** %75, align 8
  %78 = getelementptr inbounds %"struct.std::_Head_base.21", %"struct.std::_Head_base.21"* %77, i32 0, i32 0
  %79 = load i64*, i64** %76, align 8
  %80 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %79) #3
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %78, align 8
  store i32 -802333590, i32* %14
  br label %82

; <label>:82:                                     ; preds = %74, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm2EJiEEC2IRiEEOT_(%"struct.std::_Tuple_impl.6"*, i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.6"* %0, %"struct.std::_Tuple_impl.6"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.6"* %5 to %"struct.std::_Head_base"*
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %7) #3
  call void @_ZNSt10_Head_baseILm2EiLb0EEC2IRiEEOT_(%"struct.std::_Head_base"* %6, i32* dereferenceable(4) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm2EiLb0EEC2IRiEEOT_(%"struct.std::_Head_base"*, i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %7) #3
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %6, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.12"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.12"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %54

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.109
  %15 = load i32, i32* @y.110
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %63

; <label>:27:                                     ; preds = %13, %63
  %28 = load i32, i32* @x.109
  %29 = load i32, i32* @y.110
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %63

; <label>:53:                                     ; preds = %27
  ret void

; <label>:54:                                     ; preds = %3
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %7, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %10) #3
  br label %58

; <label>:58:                                     ; preds = %54
  %59 = load i8*, i8** %7, align 8
  %60 = load i32, i32* %8, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

; <label>:63:                                     ; preds = %27, %13
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt5tupleIJiiiEESaIS1_EESaIS3_EE21_M_default_initializeEm(%"class.std::vector"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.111
  %6 = load i32, i32* @y.112
  %7 = sub i32 %5, 25949830
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 25949830
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -38391740, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -38391740, label %19
    i32 -2033481199, label %27
    i32 802736148, label %57
    i32 1877637170, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2033481199, i32 1877637170
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %35 = load i64, i64* %29, align 8
  %36 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %37 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %36) #3
  %38 = call %"class.std::vector.0"* @_ZSt27__uninitialized_default_n_aIPSt6vectorISt5tupleIJiiiEESaIS2_EEmS4_ET_S6_T0_RSaIT1_E(%"class.std::vector.0"* %34, i64 %35, %"class.std::allocator"* dereferenceable(1) %37)
  %39 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %40, i32 0, i32 1
  store %"class.std::vector.0"* %38, %"class.std::vector.0"** %41, align 8
  %42 = load i32, i32* @x.111
  %43 = load i32, i32* @y.112
  %44 = sub i32 %42, -1230773473
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1230773473
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 802736148, i32 1877637170
  store i32 %56, i32* %15
  br label %73

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::vector"*, align 8
  %60 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %59, align 8
  store i64 %1, i64* %60, align 8
  %61 = load %"class.std::vector"*, %"class.std::vector"** %59, align 8
  %62 = bitcast %"class.std::vector"* %61 to %"struct.std::_Vector_base"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %63, i32 0, i32 0
  %65 = load %"class.std::vector.0"*, %"class.std::vector.0"** %64, align 8
  %66 = load i64, i64* %60, align 8
  %67 = bitcast %"class.std::vector"* %61 to %"struct.std::_Vector_base"*
  %68 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %67) #3
  %69 = call %"class.std::vector.0"* @_ZSt27__uninitialized_default_n_aIPSt6vectorISt5tupleIJiiiEESaIS2_EEmS4_ET_S6_T0_RSaIT1_E(%"class.std::vector.0"* %65, i64 %66, %"class.std::allocator"* dereferenceable(1) %68)
  %70 = bitcast %"class.std::vector"* %61 to %"struct.std::_Vector_base"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %71, i32 0, i32 1
  store %"class.std::vector.0"* %69, %"class.std::vector.0"** %72, align 8
  store i32 -2033481199, i32* %15
  br label %73

; <label>:73:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %13, align 8
  %15 = ptrtoint %"class.std::vector.0"* %11 to i64
  %16 = ptrtoint %"class.std::vector.0"* %14 to i64
  %17 = add i64 %15, -3033231539613334087
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -3033231539613334087
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"* %5, %"class.std::vector.0"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.113
  %26 = load i32, i32* @y.114
  %27 = sub i32 %25, 1023755719
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 1023755719
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %85

; <label>:51:                                     ; preds = %24, %85
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %3, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %4, align 4
  %55 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %55) #3
  %56 = load i32, i32* @x.113
  %57 = load i32, i32* @y.114
  %58 = sub i32 %56, 1981881333
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 1981881333
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %85

; <label>:82:                                     ; preds = %51
  br label %83

; <label>:83:                                     ; preds = %82
  %84 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %84) #10
  unreachable

; <label>:85:                                     ; preds = %51, %24
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %3, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %4, align 4
  %89 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %89) #3
  br label %51
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.115
  %6 = load i32, i32* @y.116
  %7 = sub i32 %5, -1283216348
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1283216348
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -481030697, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -481030697, label %19
    i32 -114596176, label %39
    i32 -776813652, label %63
    i32 -1253775848, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -114596176, i32 -1253775848
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"** %40, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %41, align 8
  %42 = load %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %42 to %"class.std::allocator"*
  %44 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  call void @_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEEC2ERKS4_(%"class.std::allocator"* %43, %"class.std::allocator"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %42, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %42, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %42, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %47, align 8
  %48 = load i32, i32* @x.115
  %49 = load i32, i32* @y.116
  %50 = add i32 %48, -931431675
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -931431675
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -776813652, i32 -1253775848
  store i32 %62, i32* %15
  br label %73

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"*, align 8
  %66 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"** %65, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %66, align 8
  %67 = load %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"** %65, align 8
  %68 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %67 to %"class.std::allocator"*
  %69 = load %"class.std::allocator"*, %"class.std::allocator"** %66, align 8
  call void @_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEEC2ERKS4_(%"class.std::allocator"* %68, %"class.std::allocator"* dereferenceable(1) %69) #3
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %67, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %67, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %67, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %72, align 8
  store i32 -114596176, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.0"* %7, %"class.std::vector.0"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.0"* %12, %"class.std::vector.0"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.0"* %19, %"class.std::vector.0"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt5tupleIJiiiEESaIS1_EEEC2ERKS4_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator"* %6, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %8, %"struct.std::_Vector_base"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -527816419, i32* %10
  %11 = alloca %"class.std::vector.0"*
  br label %12

; <label>:12:                                     ; preds = %2, %84
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -527816419, label %15
    i32 191364301, label %19
    i32 2145010036, label %25
    i32 192256127, label %26
    i32 1529550443, label %54
    i32 -1180399545, label %81
    i32 -1485504307, label %83
  ]

; <label>:14:                                     ; preds = %12
  br label %84

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 191364301, i32 2145010036
  store i32 %18, i32* %10
  br label %84

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %21 to %"class.std::allocator"*
  %23 = load i64, i64* %7, align 8
  %24 = call %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJiiiEESaIS2_EEEE8allocateERS5_m(%"class.std::allocator"* dereferenceable(1) %22, i64 %23)
  store i32 192256127, i32* %10
  store %"class.std::vector.0"* %24, %"class.std::vector.0"** %11
  br label %84

; <label>:25:                                     ; preds = %12
  store i32 192256127, i32* %10
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %11
  br label %84

; <label>:26:                                     ; preds = %12
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11
  store %"class.std::vector.0"* %27, %"class.std::vector.0"** %3
  %28 = load i32, i32* @x.125
  %29 = load i32, i32* @y.126
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 1529550443, i32 -1485504307
  store i32 %53, i32* %10
  br label %84

; <label>:54:                                     ; preds = %12
  %55 = load i32, i32* @x.125
  %56 = load i32, i32* @y.126
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -1180399545, i32 -1485504307
  store i32 %80, i32* %10
  br label %84

; <label>:81:                                     ; preds = %12
  %82 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %82

; <label>:83:                                     ; preds = %12
  store i32 1529550443, i32* %10
  br label %84

; <label>:84:                                     ; preds = %83, %54, %26, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJiiiEESaIS2_EEEE8allocateERS5_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.127
  %7 = load i32, i32* @y.128
  %8 = sub i32 %6, -1978482321
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1978482321
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2014512614, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2014512614, label %20
    i32 -768637097, label %40
    i32 1495130144, label %73
    i32 -766410213, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -768637097, i32 -766410213
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  %44 = bitcast %"class.std::allocator"* %43 to %"class.__gnu_cxx::new_allocator"*
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %44, i64 %45, i8* null)
  store %"class.std::vector.0"* %46, %"class.std::vector.0"** %3
  %47 = load i32, i32* @x.127
  %48 = load i32, i32* @y.128
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1495130144, i32 -766410213
  store i32 %72, i32* %16
  br label %82

; <label>:73:                                     ; preds = %17
  %74 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %74

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.std::allocator"*, align 8
  %77 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"class.std::allocator"*, %"class.std::allocator"** %76, align 8
  %79 = bitcast %"class.std::allocator"* %78 to %"class.__gnu_cxx::new_allocator"*
  %80 = load i64, i64* %77, align 8
  %81 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %79, i64 %80, i8* null)
  store i32 -768637097, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1750729233, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %60
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1750729233, label %16
    i32 1810582838, label %21
    i32 1197259688, label %37
    i32 5798576, label %53
    i32 415270738, label %54
    i32 -1236682951, label %59
  ]

; <label>:15:                                     ; preds = %13
  br label %60

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1810582838, i32 415270738
  store i32 %20, i32* %12
  br label %60

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.129
  %23 = load i32, i32* @y.130
  %24 = add i32 %22, -989660352
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -989660352
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 1197259688, i32 -1236682951
  store i32 %36, i32* %12
  br label %60

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %38 = load i32, i32* @x.129
  %39 = load i32, i32* @y.130
  %40 = sub i32 %38, -1339610982
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1339610982
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 5798576, i32 -1236682951
  store i32 %52, i32* %12
  br label %60

; <label>:53:                                     ; preds = %13
  unreachable

; <label>:54:                                     ; preds = %13
  %55 = load i64, i64* %7, align 8
  %56 = mul i64 %55, 24
  %57 = call i8* @_Znwm(i64 %56)
  %58 = bitcast i8* %57 to %"class.std::vector.0"*
  ret %"class.std::vector.0"* %58

; <label>:59:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 1197259688, i32* %12
  br label %60

; <label>:60:                                     ; preds = %59, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #7

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #8

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt27__uninitialized_default_n_aIPSt6vectorISt5tupleIJiiiEESaIS2_EEmS4_ET_S6_T0_RSaIT1_E(%"class.std::vector.0"*, i64, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.133
  %8 = load i32, i32* @y.134
  %9 = sub i32 %7, 417763666
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 417763666
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -826490796, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %72
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -826490796, label %21
    i32 -76186923, label %41
    i32 -1748981044, label %63
    i32 -537607900, label %65
  ]

; <label>:20:                                     ; preds = %18
  br label %72

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -76186923, i32 -537607900
  store i32 %40, i32* %17
  br label %72

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.0"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %44, align 8
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = call %"class.std::vector.0"* @_ZSt25__uninitialized_default_nIPSt6vectorISt5tupleIJiiiEESaIS2_EEmET_S6_T0_(%"class.std::vector.0"* %45, i64 %46)
  store %"class.std::vector.0"* %47, %"class.std::vector.0"** %4
  %48 = load i32, i32* @x.133
  %49 = load i32, i32* @y.134
  %50 = sub i32 %48, 856198358
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 856198358
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1748981044, i32 -537607900
  store i32 %62, i32* %17
  br label %72

; <label>:63:                                     ; preds = %18
  %64 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %64

; <label>:65:                                     ; preds = %18
  %66 = alloca %"class.std::vector.0"*, align 8
  %67 = alloca i64, align 8
  %68 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %66, align 8
  store i64 %1, i64* %67, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %68, align 8
  %69 = load %"class.std::vector.0"*, %"class.std::vector.0"** %66, align 8
  %70 = load i64, i64* %67, align 8
  %71 = call %"class.std::vector.0"* @_ZSt25__uninitialized_default_nIPSt6vectorISt5tupleIJiiiEESaIS2_EEmET_S6_T0_(%"class.std::vector.0"* %69, i64 %70)
  store i32 -76186923, i32* %17
  br label %72

; <label>:72:                                     ; preds = %65, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt25__uninitialized_default_nIPSt6vectorISt5tupleIJiiiEESaIS2_EEmET_S6_T0_(%"class.std::vector.0"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.0"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorISt5tupleIJiiiEESaIS4_EEmEET_S8_T0_(%"class.std::vector.0"* %6, i64 %7)
  ret %"class.std::vector.0"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorISt5tupleIJiiiEESaIS4_EEmEET_S8_T0_(%"class.std::vector.0"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.139
  %4 = load i32, i32* @y.140
  %5 = add i32 %3, 1249876564
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 1249876564
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %205

; <label>:17:                                     ; preds = %2, %205
  %18 = alloca %"class.std::vector.0"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::vector.0"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %18, align 8
  store i64 %1, i64* %19, align 8
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  store %"class.std::vector.0"* %23, %"class.std::vector.0"** %20, align 8
  %24 = load i32, i32* @x.139
  %25 = load i32, i32* @y.140
  %26 = add i32 %24, 94323758
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 94323758
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %205

; <label>:38:                                     ; preds = %17
  br label %39

; <label>:39:                                     ; preds = %75, %38
  %40 = load i32, i32* @x.139
  %41 = load i32, i32* @y.140
  %42 = add i32 %40, -1458887115
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1458887115
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %212

; <label>:54:                                     ; preds = %39, %212
  %55 = load i64, i64* %19, align 8
  %56 = icmp ugt i64 %55, 0
  %57 = load i32, i32* @x.139
  %58 = load i32, i32* @y.140
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %212

; <label>:70:                                     ; preds = %54
  br i1 %56, label %71, label %147

; <label>:71:                                     ; preds = %70
  %72 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %73 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt5tupleIJiiiEESaIS2_EEEPT_RS5_(%"class.std::vector.0"* dereferenceable(24) %72) #3
  invoke void @_ZSt10_ConstructISt6vectorISt5tupleIJiiiEESaIS2_EEJEEvPT_DpOT0_(%"class.std::vector.0"* %73)
          to label %74 unwind label %83

; <label>:74:                                     ; preds = %71
  br label %75

; <label>:75:                                     ; preds = %74
  %76 = load i64, i64* %19, align 8
  %77 = sub i64 %76, 5545499541053643615
  %78 = add i64 %77, -1
  %79 = add i64 %78, 5545499541053643615
  %80 = add i64 %76, -1
  store i64 %79, i64* %19, align 8
  %81 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %82 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %81, i32 1
  store %"class.std::vector.0"* %82, %"class.std::vector.0"** %20, align 8
  br label %39

; <label>:83:                                     ; preds = %71
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %21, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %22, align 4
  br label %87

; <label>:87:                                     ; preds = %83
  %88 = load i32, i32* @x.139
  %89 = load i32, i32* @y.140
  %90 = add i32 %88, -1511227099
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -1511227099
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %215

; <label>:114:                                    ; preds = %87, %215
  %115 = load i8*, i8** %21, align 8
  %116 = call i8* @__cxa_begin_catch(i8* %115) #3
  %117 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  %118 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %119 = load i32, i32* @x.139
  %120 = load i32, i32* @y.140
  %121 = add i32 %119, 1382606963
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, 1382606963
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 true, true
  %132 = and i1 %129, true
  %133 = and i1 %127, %131
  %134 = and i1 %130, true
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 true, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  br i1 %143, label %145, label %215

; <label>:145:                                    ; preds = %114
  invoke void @_ZSt8_DestroyIPSt6vectorISt5tupleIJiiiEESaIS2_EEEvT_S6_(%"class.std::vector.0"* %117, %"class.std::vector.0"* %118)
          to label %146 unwind label %149

; <label>:146:                                    ; preds = %145
  invoke void @__cxa_rethrow() #12
          to label %163 unwind label %149

; <label>:147:                                    ; preds = %70
  %148 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  ret %"class.std::vector.0"* %148

; <label>:149:                                    ; preds = %146, %145
  %150 = landingpad { i8*, i32 }
          cleanup
  %151 = extractvalue { i8*, i32 } %150, 0
  store i8* %151, i8** %21, align 8
  %152 = extractvalue { i8*, i32 } %150, 1
  store i32 %152, i32* %22, align 4
  invoke void @__cxa_end_catch()
          to label %153 unwind label %160

; <label>:153:                                    ; preds = %149
  br label %155
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:155:                                    ; preds = %153
  %156 = load i8*, i8** %21, align 8
  %157 = load i32, i32* %22, align 4
  %158 = insertvalue { i8*, i32 } undef, i8* %156, 0
  %159 = insertvalue { i8*, i32 } %158, i32 %157, 1
  resume { i8*, i32 } %159

; <label>:160:                                    ; preds = %149
  %161 = landingpad { i8*, i32 }
          catch i8* null
  %162 = extractvalue { i8*, i32 } %161, 0
  call void @__clang_call_terminate(i8* %162) #10
  unreachable

; <label>:163:                                    ; preds = %146
  %164 = load i32, i32* @x.139
  %165 = load i32, i32* @y.140
  %166 = sub i32 0, 1
  %167 = add i32 %164, %166
  %168 = sub i32 %164, 1
  %169 = mul i32 %164, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %165, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  br i1 %175, label %177, label %220

; <label>:177:                                    ; preds = %163, %220
  %178 = load i32, i32* @x.139
  %179 = load i32, i32* @y.140
  %180 = add i32 %178, 953234969
  %181 = sub i32 %180, 1
  %182 = sub i32 %181, 953234969
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = xor i1 %186, true
  %189 = xor i1 %187, true
  %190 = xor i1 false, true
  %191 = and i1 %188, false
  %192 = and i1 %186, %190
  %193 = and i1 %189, false
  %194 = and i1 %187, %190
  %195 = or i1 %191, %192
  %196 = or i1 %193, %194
  %197 = xor i1 %195, %196
  %198 = or i1 %188, %189
  %199 = xor i1 %198, true
  %200 = or i1 false, %190
  %201 = and i1 %199, %200
  %202 = or i1 %197, %201
  %203 = or i1 %186, %187
  br i1 %202, label %204, label %220

; <label>:204:                                    ; preds = %177
  unreachable

; <label>:205:                                    ; preds = %17, %2
  %206 = alloca %"class.std::vector.0"*, align 8
  %207 = alloca i64, align 8
  %208 = alloca %"class.std::vector.0"*, align 8
  %209 = alloca i8*
  %210 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %206, align 8
  store i64 %1, i64* %207, align 8
  %211 = load %"class.std::vector.0"*, %"class.std::vector.0"** %206, align 8
  store %"class.std::vector.0"* %211, %"class.std::vector.0"** %208, align 8
  br label %17

; <label>:212:                                    ; preds = %54, %39
  %213 = load i64, i64* %19, align 8
  %214 = icmp ugt i64 %213, 0
  br label %54

; <label>:215:                                    ; preds = %114, %87
  %216 = load i8*, i8** %21, align 8
  %217 = call i8* @__cxa_begin_catch(i8* %216) #3
  %218 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  %219 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  br label %114

; <label>:220:                                    ; preds = %177, %163
  br label %177
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorISt5tupleIJiiiEESaIS2_EEJEEvPT_DpOT0_(%"class.std::vector.0"*) #5 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.0"*
  call void @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EEC2Ev(%"class.std::vector.0"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt5tupleIJiiiEESaIS2_EEEPT_RS5_(%"class.std::vector.0"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.143
  %6 = load i32, i32* @y.144
  %7 = add i32 %5, -1124638680
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1124638680
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 118985240, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 118985240, label %19
    i32 952489419, label %27
    i32 692462860, label %59
    i32 1723221079, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 952489419, i32 1723221079
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %30 = bitcast %"class.std::vector.0"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::vector.0"*
  store %"class.std::vector.0"* %31, %"class.std::vector.0"** %2
  %32 = load i32, i32* @x.143
  %33 = load i32, i32* @y.144
  %34 = sub i32 %32, 1991917106
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1991917106
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 692462860, i32 1723221079
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %62, align 8
  %63 = load %"class.std::vector.0"*, %"class.std::vector.0"** %62, align 8
  %64 = bitcast %"class.std::vector.0"* %63 to i8*
  %65 = bitcast i8* %64 to %"class.std::vector.0"*
  store i32 952489419, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

declare i8* @__cxa_begin_catch(i8*)

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorISt5tupleIJiiiEESaIS2_EEEvT_S6_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.145
  %6 = load i32, i32* @y.146
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 242814318, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 242814318, label %18
    i32 -2007928884, label %26
    i32 1583932309, label %46
    i32 -762184258, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2007928884, i32 -762184258
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.0"*, align 8
  %28 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %27, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %28, align 8
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %27, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt5tupleIJiiiEESaIS4_EEEEvT_S8_(%"class.std::vector.0"* %29, %"class.std::vector.0"* %30)
  %31 = load i32, i32* @x.145
  %32 = load i32, i32* @y.146
  %33 = add i32 %31, -1886331147
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1886331147
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1583932309, i32 -762184258
  store i32 %45, i32* %14
  br label %52

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.std::vector.0"*, align 8
  %49 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %48, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %49, align 8
  %50 = load %"class.std::vector.0"*, %"class.std::vector.0"** %48, align 8
  %51 = load %"class.std::vector.0"*, %"class.std::vector.0"** %49, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt5tupleIJiiiEESaIS4_EEEEvT_S8_(%"class.std::vector.0"* %50, %"class.std::vector.0"* %51)
  store i32 -2007928884, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #9 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #10
  unreachable
}

declare void @_ZSt9terminatev()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EEC2Ev(%"class.std::vector.0"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EEC2Ev(%"struct.std::_Vector_base.1"* %4)
          to label %5 unwind label %48

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.149
  %7 = load i32, i32* @y.150
  %8 = add i32 %6, 1426193760
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1426193760
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 true, true
  %19 = and i1 %16, true
  %20 = and i1 %14, %18
  %21 = and i1 %17, true
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 true, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %92

; <label>:32:                                     ; preds = %5, %92
  %33 = load i32, i32* @x.149
  %34 = load i32, i32* @y.150
  %35 = add i32 %33, 813339649
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 813339649
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %92

; <label>:47:                                     ; preds = %32
  ret void

; <label>:48:                                     ; preds = %1
  %49 = load i32, i32* @x.149
  %50 = load i32, i32* @y.150
  %51 = add i32 %49, 118475218
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 118475218
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %93

; <label>:63:                                     ; preds = %48, %93
  %64 = landingpad { i8*, i32 }
          catch i8* null
  %65 = extractvalue { i8*, i32 } %64, 0
  call void @__clang_call_terminate(i8* %65) #10
  %66 = load i32, i32* @x.149
  %67 = load i32, i32* @y.150
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  br i1 %89, label %91, label %93

; <label>:91:                                     ; preds = %63
  unreachable

; <label>:92:                                     ; preds = %32, %5
  br label %32

; <label>:93:                                     ; preds = %63, %48
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  call void @__clang_call_terminate(i8* %95) #10
  br label %63
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt5tupleIJiiiEEEC2Ev(%"class.std::allocator.2"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::tuple"* null, %"class.std::tuple"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::tuple"* null, %"class.std::tuple"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::tuple"* null, %"class.std::tuple"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5tupleIJiiiEEEC2Ev(%"class.std::allocator.2"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt5tupleIJiiiEESaIS4_EEEEvT_S8_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = alloca i32
  store i32 -1085117793, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %68
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -1085117793, label %9
    i32 1153062168, label %14
    i32 -520201081, label %17
    i32 772400399, label %45
    i32 -1330997972, label %63
    i32 -1786572195, label %64
    i32 -1163350974, label %65
  ]

; <label>:8:                                      ; preds = %6
  br label %68

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %12 = icmp ne %"class.std::vector.0"* %10, %11
  %13 = select i1 %12, i32 1153062168, i32 -1786572195
  store i32 %13, i32* %5
  br label %68

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %16 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt5tupleIJiiiEESaIS2_EEEPT_RS5_(%"class.std::vector.0"* dereferenceable(24) %15) #3
  call void @_ZSt8_DestroyISt6vectorISt5tupleIJiiiEESaIS2_EEEvPT_(%"class.std::vector.0"* %16)
  store i32 -520201081, i32* %5
  br label %68

; <label>:17:                                     ; preds = %6
  %18 = load i32, i32* @x.159
  %19 = load i32, i32* @y.160
  %20 = add i32 %18, 28699209
  %21 = sub i32 %20, 1
  %22 = sub i32 %21, 28699209
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 772400399, i32 -1163350974
  store i32 %44, i32* %5
  br label %68

; <label>:45:                                     ; preds = %6
  %46 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %47 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %46, i32 1
  store %"class.std::vector.0"* %47, %"class.std::vector.0"** %3, align 8
  %48 = load i32, i32* @x.159
  %49 = load i32, i32* @y.160
  %50 = add i32 %48, 321785483
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 321785483
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1330997972, i32 -1163350974
  store i32 %62, i32* %5
  br label %68

; <label>:63:                                     ; preds = %6
  store i32 -1085117793, i32* %5
  br label %68

; <label>:64:                                     ; preds = %6
  ret void

; <label>:65:                                     ; preds = %6
  %66 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %67 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %66, i32 1
  store %"class.std::vector.0"* %67, %"class.std::vector.0"** %3, align 8
  store i32 772400399, i32* %5
  br label %68

; <label>:68:                                     ; preds = %65, %63, %45, %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorISt5tupleIJiiiEESaIS2_EEEvPT_(%"class.std::vector.0"*) #5 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.161
  %5 = load i32, i32* @y.162
  %6 = sub i32 %4, -1543300884
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1543300884
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -389182480, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -389182480, label %18
    i32 -1541454001, label %38
    i32 1073411716, label %56
    i32 -1004179496, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1541454001, i32 -1004179496
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %39, align 8
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %39, align 8
  call void @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EED2Ev(%"class.std::vector.0"* %40) #3
  %41 = load i32, i32* @x.161
  %42 = load i32, i32* @y.162
  %43 = sub i32 %41, -558358990
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -558358990
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1073411716, i32 -1004179496
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %58, align 8
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %58, align 8
  call void @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EED2Ev(%"class.std::vector.0"* %59) #3
  store i32 -1541454001, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EED2Ev(%"class.std::vector.0"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::tuple"*, %"class.std::tuple"** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::tuple"*, %"class.std::tuple"** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPSt5tupleIJiiiEES1_EvT_S3_RSaIT0_E(%"class.std::tuple"* %9, %"class.std::tuple"* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EED2Ev(%"struct.std::_Vector_base.1"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.163
  %20 = load i32, i32* @y.164
  %21 = sub i32 %19, -1065563433
  %22 = sub i32 %21, 1
  %23 = add i32 %22, -1065563433
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %78

; <label>:45:                                     ; preds = %18, %78
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %3, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %4, align 4
  %49 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EED2Ev(%"struct.std::_Vector_base.1"* %49) #3
  %50 = load i32, i32* @x.163
  %51 = load i32, i32* @y.164
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %78

; <label>:75:                                     ; preds = %45
  br label %76

; <label>:76:                                     ; preds = %75
  %77 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %77) #10
  unreachable

; <label>:78:                                     ; preds = %45, %18
  %79 = landingpad { i8*, i32 }
          catch i8* null
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %3, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %4, align 4
  %82 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EED2Ev(%"struct.std::_Vector_base.1"* %82) #3
  br label %45
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5tupleIJiiiEES1_EvT_S3_RSaIT0_E(%"class.std::tuple"*, %"class.std::tuple"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::tuple"*, align 8
  %5 = alloca %"class.std::tuple"*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %4, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %8 = load %"class.std::tuple"*, %"class.std::tuple"** %5, align 8
  call void @_ZSt8_DestroyIPSt5tupleIJiiiEEEvT_S3_(%"class.std::tuple"* %7, %"class.std::tuple"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.167
  %6 = load i32, i32* @y.168
  %7 = sub i32 %5, 2071813864
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2071813864
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1442069723, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1442069723, label %19
    i32 1358348540, label %39
    i32 832574273, label %59
    i32 -342411971, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1358348540, i32 -342411971
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %40, align 8
  %41 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %42 to %"class.std::allocator.2"*
  store %"class.std::allocator.2"* %43, %"class.std::allocator.2"** %2
  %44 = load i32, i32* @x.167
  %45 = load i32, i32* @y.168
  %46 = add i32 %44, -1402294883
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1402294883
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 832574273, i32 -342411971
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %62, align 8
  %63 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %64 to %"class.std::allocator.2"*
  store i32 1358348540, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::tuple"*, %"class.std::tuple"** %13, align 8
  %15 = ptrtoint %"class.std::tuple"* %11 to i64
  %16 = ptrtoint %"class.std::tuple"* %14 to i64
  %17 = sub i64 %15, -1098120219948780453
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -1098120219948780453
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 12
  invoke void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"* %5, %"class.std::tuple"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.169
  %26 = load i32, i32* @y.170
  %27 = add i32 %25, 1358596617
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, 1358596617
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %85

; <label>:51:                                     ; preds = %24, %85
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %3, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %4, align 4
  %55 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %55) #3
  %56 = load i32, i32* @x.169
  %57 = load i32, i32* @y.170
  %58 = add i32 %56, 1342571952
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1342571952
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %85

; <label>:82:                                     ; preds = %51
  br label %83

; <label>:83:                                     ; preds = %82
  %84 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %84) #10
  unreachable

; <label>:85:                                     ; preds = %51, %24
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %3, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %4, align 4
  %89 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %89) #3
  br label %51
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5tupleIJiiiEEEvT_S3_(%"class.std::tuple"*, %"class.std::tuple"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.171
  %6 = load i32, i32* @y.172
  %7 = sub i32 %5, 1567188598
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1567188598
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 275549876, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 275549876, label %19
    i32 1295085589, label %27
    i32 -899220021, label %59
    i32 463675373, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1295085589, i32 463675373
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple"*, align 8
  %29 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %28, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %29, align 8
  %30 = load %"class.std::tuple"*, %"class.std::tuple"** %28, align 8
  %31 = load %"class.std::tuple"*, %"class.std::tuple"** %29, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJiiiEEEEvT_S5_(%"class.std::tuple"* %30, %"class.std::tuple"* %31)
  %32 = load i32, i32* @x.171
  %33 = load i32, i32* @y.172
  %34 = add i32 %32, -1984625416
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1984625416
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -899220021, i32 463675373
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::tuple"*, align 8
  %62 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %61, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %62, align 8
  %63 = load %"class.std::tuple"*, %"class.std::tuple"** %61, align 8
  %64 = load %"class.std::tuple"*, %"class.std::tuple"** %62, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJiiiEEEEvT_S5_(%"class.std::tuple"* %63, %"class.std::tuple"* %64)
  store i32 1295085589, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJiiiEEEEvT_S5_(%"class.std::tuple"*, %"class.std::tuple"*) #5 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"*, %"class.std::tuple"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::tuple"*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple"* %10, %"class.std::tuple"** %4
  %11 = alloca i32
  store i32 1372290165, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %86
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1372290165, label %15
    i32 -1513546507, label %19
    i32 1022099784, label %46
    i32 -188506679, label %78
    i32 1638312598, label %79
    i32 -266821483, label %80
  ]

; <label>:14:                                     ; preds = %12
  br label %86

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %4
  %17 = icmp ne %"class.std::tuple"* %16, null
  %18 = select i1 %17, i32 -1513546507, i32 1638312598
  store i32 %18, i32* %11
  br label %86

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.175
  %21 = load i32, i32* @y.176
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 1022099784, i32 -266821483
  store i32 %45, i32* %11
  br label %86

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %48 to %"class.std::allocator.2"*
  %50 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %51 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE10deallocateERS2_PS1_m(%"class.std::allocator.2"* dereferenceable(1) %49, %"class.std::tuple"* %50, i64 %51)
  %52 = load i32, i32* @x.175
  %53 = load i32, i32* @y.176
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -188506679, i32 -266821483
  store i32 %77, i32* %11
  br label %86

; <label>:78:                                     ; preds = %12
  store i32 1638312598, i32* %11
  br label %86

; <label>:79:                                     ; preds = %12
  ret void

; <label>:80:                                     ; preds = %12
  %81 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %82 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %81, i32 0, i32 0
  %83 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %82 to %"class.std::allocator.2"*
  %84 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %85 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE10deallocateERS2_PS1_m(%"class.std::allocator.2"* dereferenceable(1) %83, %"class.std::tuple"* %84, i64 %85)
  store i32 1022099784, i32* %11
  br label %86

; <label>:86:                                     ; preds = %80, %78, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt5tupleIJiiiEEED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE10deallocateERS2_PS1_m(%"class.std::allocator.2"* dereferenceable(1), %"class.std::tuple"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %"class.std::tuple"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %"class.std::tuple"*, %"class.std::tuple"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.3"* %8, %"class.std::tuple"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::tuple"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %"class.std::tuple"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %"class.std::tuple"*, %"class.std::tuple"** %5, align 8
  %9 = bitcast %"class.std::tuple"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5tupleIJiiiEEED2Ev(%"class.std::allocator.2"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.183
  %5 = load i32, i32* @y.184
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1197583840, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %72
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1197583840, label %17
    i32 -690338739, label %37
    i32 -1380944023, label %67
    i32 -1579153361, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %72

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -690338739, i32 -1579153361
  store i32 %36, i32* %13
  br label %72

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %38, align 8
  %39 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %38, align 8
  %40 = bitcast %"class.std::allocator.2"* %39 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %40) #3
  %41 = load i32, i32* @x.183
  %42 = load i32, i32* @y.184
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1380944023, i32 -1579153361
  store i32 %66, i32* %13
  br label %72

; <label>:67:                                     ; preds = %14
  ret void

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %69, align 8
  %70 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %69, align 8
  %71 = bitcast %"class.std::allocator.2"* %70 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %71) #3
  store i32 -690338739, i32* %13
  br label %72

; <label>:72:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.185
  %5 = load i32, i32* @y.186
  %6 = add i32 %4, -1390030979
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1390030979
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 152467910, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 152467910, label %18
    i32 658354181, label %26
    i32 1079959837, label %55
    i32 -854691092, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 658354181, i32 -854691092
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %27, align 8
  %29 = load i32, i32* @x.185
  %30 = load i32, i32* @y.186
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1079959837, i32 -854691092
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  store i32 658354181, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt5tupleIJiiiEESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"*, %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca %"class.std::vector.0"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.187
  %11 = load i32, i32* @y.188
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 762340957, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %75
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 762340957, label %23
    i32 2063194393, label %31
    i32 442976918, label %56
    i32 1123876929, label %59
    i32 38675556, label %67
    i32 -584572873, label %68
  ]

; <label>:22:                                     ; preds = %20
  br label %75

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 2063194393, i32 -584572873
  store i32 %30, i32* %19
  br label %75

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base"*, align 8
  %33 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %33, %"class.std::vector.0"*** %7
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %32, align 8
  %35 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %35, align 8
  %36 = load volatile i64*, i64** %6
  store i64 %2, i64* %36, align 8
  %37 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %32, align 8
  store %"struct.std::_Vector_base"* %37, %"struct.std::_Vector_base"** %5
  %38 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  %39 = load %"class.std::vector.0"*, %"class.std::vector.0"** %38, align 8
  %40 = icmp ne %"class.std::vector.0"* %39, null
  store i1 %40, i1* %4
  %41 = load i32, i32* @x.187
  %42 = load i32, i32* @y.188
  %43 = sub i32 %41, 1482180418
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1482180418
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 442976918, i32 -584572873
  store i32 %55, i32* %19
  br label %75

; <label>:56:                                     ; preds = %20
  %57 = load volatile i1, i1* %4
  %58 = select i1 %57, i32 1123876929, i32 38675556
  store i32 %58, i32* %19
  br label %75

; <label>:59:                                     ; preds = %20
  %60 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %61 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %60, i32 0, i32 0
  %62 = bitcast %"struct.std::_Vector_base<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >, std::allocator<std::vector<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > > > >::_Vector_impl"* %61 to %"class.std::allocator"*
  %63 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  %64 = load %"class.std::vector.0"*, %"class.std::vector.0"** %63, align 8
  %65 = load volatile i64*, i64** %6
  %66 = load i64, i64* %65, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJiiiEESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator"* dereferenceable(1) %62, %"class.std::vector.0"* %64, i64 %66)
  store i32 38675556, i32* %19
  br label %75

; <label>:67:                                     ; preds = %20
  ret void

; <label>:68:                                     ; preds = %20
  %69 = alloca %"struct.std::_Vector_base"*, align 8
  %70 = alloca %"class.std::vector.0"*, align 8
  %71 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %69, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %70, align 8
  store i64 %2, i64* %71, align 8
  %72 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %69, align 8
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %70, align 8
  %74 = icmp ne %"class.std::vector.0"* %73, null
  store i32 2063194393, i32* %19
  br label %75

; <label>:75:                                     ; preds = %68, %59, %56, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorISt5tupleIJiiiEESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator"* %8, %"class.std::vector.0"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt5tupleIJiiiEESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.0"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %9 = bitcast %"class.std::vector.0"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorISt5tupleIJiiiEESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.193
  %7 = load i32, i32* @y.194
  %8 = add i32 %6, -1433353999
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1433353999
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 191206823, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 191206823, label %20
    i32 1331086763, label %28
    i32 1804426587, label %60
    i32 -783052284, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1331086763, i32 -783052284
  store i32 %27, i32* %16
  br label %67

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %30, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %31, align 8
  %32 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  call void @_ZSt8_DestroyIPSt6vectorISt5tupleIJiiiEESaIS2_EEEvT_S6_(%"class.std::vector.0"* %32, %"class.std::vector.0"* %33)
  %34 = load i32, i32* @x.193
  %35 = load i32, i32* @y.194
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1804426587, i32 -783052284
  store i32 %59, i32* %16
  br label %67

; <label>:60:                                     ; preds = %17
  ret void

; <label>:61:                                     ; preds = %17
  %62 = alloca %"class.std::vector.0"*, align 8
  %63 = alloca %"class.std::vector.0"*, align 8
  %64 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %62, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %63, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %64, align 8
  %65 = load %"class.std::vector.0"*, %"class.std::vector.0"** %62, align 8
  %66 = load %"class.std::vector.0"*, %"class.std::vector.0"** %63, align 8
  call void @_ZSt8_DestroyIPSt6vectorISt5tupleIJiiiEESaIS2_EEEvT_S6_(%"class.std::vector.0"* %65, %"class.std::vector.0"* %66)
  store i32 1331086763, i32* %16
  br label %67

; <label>:67:                                     ; preds = %61, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE9constructIS1_JRiS5_S5_EEEvRS2_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1), %"class.std::tuple"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.195
  %9 = load i32, i32* @y.196
  %10 = add i32 %8, 1312125633
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1312125633
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1541402373, i32* %18
  br label %19

; <label>:19:                                     ; preds = %5, %88
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1541402373, label %22
    i32 -1434802641, label %42
    i32 240608032, label %72
    i32 -296301737, label %73
  ]

; <label>:21:                                     ; preds = %19
  br label %88

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1434802641, i32 -296301737
  store i32 %41, i32* %18
  br label %88

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::allocator.2"*, align 8
  %44 = alloca %"class.std::tuple"*, align 8
  %45 = alloca i32*, align 8
  %46 = alloca i32*, align 8
  %47 = alloca i32*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %43, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %44, align 8
  store i32* %2, i32** %45, align 8
  store i32* %3, i32** %46, align 8
  store i32* %4, i32** %47, align 8
  %48 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %43, align 8
  %49 = bitcast %"class.std::allocator.2"* %48 to %"class.__gnu_cxx::new_allocator.3"*
  %50 = load %"class.std::tuple"*, %"class.std::tuple"** %44, align 8
  %51 = load i32*, i32** %45, align 8
  %52 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %51) #3
  %53 = load i32*, i32** %46, align 8
  %54 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %53) #3
  %55 = load i32*, i32** %47, align 8
  %56 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %55) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE9constructIS2_JRiS5_S5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %49, %"class.std::tuple"* %50, i32* dereferenceable(4) %52, i32* dereferenceable(4) %54, i32* dereferenceable(4) %56)
  %57 = load i32, i32* @x.195
  %58 = load i32, i32* @y.196
  %59 = sub i32 %57, -957071559
  %60 = sub i32 %59, 1
  %61 = add i32 %60, -957071559
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 240608032, i32 -296301737
  store i32 %71, i32* %18
  br label %88

; <label>:72:                                     ; preds = %19
  ret void

; <label>:73:                                     ; preds = %19
  %74 = alloca %"class.std::allocator.2"*, align 8
  %75 = alloca %"class.std::tuple"*, align 8
  %76 = alloca i32*, align 8
  %77 = alloca i32*, align 8
  %78 = alloca i32*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %74, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %75, align 8
  store i32* %2, i32** %76, align 8
  store i32* %3, i32** %77, align 8
  store i32* %4, i32** %78, align 8
  %79 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %74, align 8
  %80 = bitcast %"class.std::allocator.2"* %79 to %"class.__gnu_cxx::new_allocator.3"*
  %81 = load %"class.std::tuple"*, %"class.std::tuple"** %75, align 8
  %82 = load i32*, i32** %76, align 8
  %83 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %82) #3
  %84 = load i32*, i32** %77, align 8
  %85 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %84) #3
  %86 = load i32*, i32** %78, align 8
  %87 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %86) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE9constructIS2_JRiS5_S5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %80, %"class.std::tuple"* %81, i32* dereferenceable(4) %83, i32* dereferenceable(4) %85, i32* dereferenceable(4) %87)
  store i32 -1434802641, i32* %18
  br label %88

; <label>:88:                                     ; preds = %73, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJiiiEESaIS1_EE19_M_emplace_back_auxIJRiS5_S5_EEEvDpOT_(%"class.std::vector.0"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::tuple"*, align 8
  %11 = alloca %"class.std::tuple"*, align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %15 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.0"* %14, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %15, i64* %9, align 8
  %16 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %17 = load i64, i64* %9, align 8
  %18 = call %"class.std::tuple"* @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %16, i64 %17)
  store %"class.std::tuple"* %18, %"class.std::tuple"** %10, align 8
  %19 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  store %"class.std::tuple"* %19, %"class.std::tuple"** %11, align 8
  %20 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %21 to %"class.std::allocator.2"*
  %23 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %24 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %14) #3
  %25 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %23, i64 %24
  %26 = load i32*, i32** %6, align 8
  %27 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %26) #3
  %28 = load i32*, i32** %7, align 8
  %29 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %28) #3
  %30 = load i32*, i32** %8, align 8
  %31 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %30) #3
  invoke void @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE9constructIS1_JRiS5_S5_EEEvRS2_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %22, %"class.std::tuple"* %25, i32* dereferenceable(4) %27, i32* dereferenceable(4) %29, i32* dereferenceable(4) %31)
          to label %32 unwind label %101

; <label>:32:                                     ; preds = %4
  %33 = load i32, i32* @x.197
  %34 = load i32, i32* @y.198
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %333

; <label>:58:                                     ; preds = %32, %333
  store %"class.std::tuple"* null, %"class.std::tuple"** %11, align 8
  %59 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load %"class.std::tuple"*, %"class.std::tuple"** %61, align 8
  %63 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load %"class.std::tuple"*, %"class.std::tuple"** %65, align 8
  %67 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %68 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %69 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %68) #3
  %70 = load i32, i32* @x.197
  %71 = load i32, i32* @y.198
  %72 = add i32 %70, -638816245
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -638816245
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %333

; <label>:96:                                     ; preds = %58
  %97 = invoke %"class.std::tuple"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJiiiEES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.std::tuple"* %62, %"class.std::tuple"* %66, %"class.std::tuple"* %67, %"class.std::allocator.2"* dereferenceable(1) %69)
          to label %98 unwind label %101

; <label>:98:                                     ; preds = %96
  store %"class.std::tuple"* %97, %"class.std::tuple"** %11, align 8
  %99 = load %"class.std::tuple"*, %"class.std::tuple"** %11, align 8
  %100 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %99, i32 1
  store %"class.std::tuple"* %100, %"class.std::tuple"** %11, align 8
  br label %186

; <label>:101:                                    ; preds = %96, %4
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  store i8* %103, i8** %12, align 8
  %104 = extractvalue { i8*, i32 } %102, 1
  store i32 %104, i32* %13, align 4
  br label %105

; <label>:105:                                    ; preds = %101
  %106 = load i8*, i8** %12, align 8
  %107 = call i8* @__cxa_begin_catch(i8* %106) #3
  %108 = load %"class.std::tuple"*, %"class.std::tuple"** %11, align 8
  %109 = icmp ne %"class.std::tuple"* %108, null
  br i1 %109, label %174, label %110

; <label>:110:                                    ; preds = %105
  %111 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %111, i32 0, i32 0
  %113 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %112 to %"class.std::allocator.2"*
  %114 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %115 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %14) #3
  %116 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %114, i64 %115
  invoke void @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.2"* dereferenceable(1) %113, %"class.std::tuple"* %116)
          to label %117 unwind label %170

; <label>:117:                                    ; preds = %110
  %118 = load i32, i32* @x.197
  %119 = load i32, i32* @y.198
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 false, true
  %130 = and i1 %127, false
  %131 = and i1 %125, %129
  %132 = and i1 %128, false
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 false, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %345

; <label>:143:                                    ; preds = %117, %345
  %144 = load i32, i32* @x.197
  %145 = load i32, i32* @y.198
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 false, true
  %156 = and i1 %153, false
  %157 = and i1 %151, %155
  %158 = and i1 %154, false
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 false, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  br i1 %167, label %169, label %345

; <label>:169:                                    ; preds = %143
  br label %180

; <label>:170:                                    ; preds = %184, %180, %174, %110
  %171 = landingpad { i8*, i32 }
          cleanup
  %172 = extractvalue { i8*, i32 } %171, 0
  store i8* %172, i8** %12, align 8
  %173 = extractvalue { i8*, i32 } %171, 1
  store i32 %173, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %185 unwind label %329

; <label>:174:                                    ; preds = %105
  %175 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %176 = load %"class.std::tuple"*, %"class.std::tuple"** %11, align 8
  %177 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %178 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %177) #3
  invoke void @_ZSt8_DestroyIPSt5tupleIJiiiEES1_EvT_S3_RSaIT0_E(%"class.std::tuple"* %175, %"class.std::tuple"* %176, %"class.std::allocator.2"* dereferenceable(1) %178)
          to label %179 unwind label %170

; <label>:179:                                    ; preds = %174
  br label %180

; <label>:180:                                    ; preds = %179, %169
  %181 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %182 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %183 = load i64, i64* %9, align 8
  invoke void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"* %181, %"class.std::tuple"* %182, i64 %183)
          to label %184 unwind label %170

; <label>:184:                                    ; preds = %180
  invoke void @__cxa_rethrow() #12
          to label %332 unwind label %170

; <label>:185:                                    ; preds = %170
  br label %271

; <label>:186:                                    ; preds = %98
  %187 = load i32, i32* @x.197
  %188 = load i32, i32* @y.198
  %189 = sub i32 0, 1
  %190 = add i32 %187, %189
  %191 = sub i32 %187, 1
  %192 = mul i32 %187, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %188, 10
  %196 = xor i1 %194, true
  %197 = xor i1 %195, true
  %198 = xor i1 true, true
  %199 = and i1 %196, true
  %200 = and i1 %194, %198
  %201 = and i1 %197, true
  %202 = and i1 %195, %198
  %203 = or i1 %199, %200
  %204 = or i1 %201, %202
  %205 = xor i1 %203, %204
  %206 = or i1 %196, %197
  %207 = xor i1 %206, true
  %208 = or i1 true, %198
  %209 = and i1 %207, %208
  %210 = or i1 %205, %209
  %211 = or i1 %194, %195
  br i1 %210, label %212, label %346

; <label>:212:                                    ; preds = %186, %346
  %213 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %214 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %213, i32 0, i32 0
  %215 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %214, i32 0, i32 0
  %216 = load %"class.std::tuple"*, %"class.std::tuple"** %215, align 8
  %217 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %218 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %218, i32 0, i32 1
  %220 = load %"class.std::tuple"*, %"class.std::tuple"** %219, align 8
  %221 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %222 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %221) #3
  call void @_ZSt8_DestroyIPSt5tupleIJiiiEES1_EvT_S3_RSaIT0_E(%"class.std::tuple"* %216, %"class.std::tuple"* %220, %"class.std::allocator.2"* dereferenceable(1) %222)
  %223 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %224 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %225 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %224, i32 0, i32 0
  %226 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %225, i32 0, i32 0
  %227 = load %"class.std::tuple"*, %"class.std::tuple"** %226, align 8
  %228 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %229 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %228, i32 0, i32 0
  %230 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %229, i32 0, i32 2
  %231 = load %"class.std::tuple"*, %"class.std::tuple"** %230, align 8
  %232 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %233 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %232, i32 0, i32 0
  %234 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %233, i32 0, i32 0
  %235 = load %"class.std::tuple"*, %"class.std::tuple"** %234, align 8
  %236 = ptrtoint %"class.std::tuple"* %231 to i64
  %237 = ptrtoint %"class.std::tuple"* %235 to i64
  %238 = add i64 %236, -3253851713629218324
  %239 = sub i64 %238, %237
  %240 = sub i64 %239, -3253851713629218324
  %241 = sub i64 %236, %237
  %242 = sdiv exact i64 %240, 12
  call void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"* %223, %"class.std::tuple"* %227, i64 %242)
  %243 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %244 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %245 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %244, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %245, i32 0, i32 0
  store %"class.std::tuple"* %243, %"class.std::tuple"** %246, align 8
  %247 = load %"class.std::tuple"*, %"class.std::tuple"** %11, align 8
  %248 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %249 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %248, i32 0, i32 0
  %250 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %249, i32 0, i32 1
  store %"class.std::tuple"* %247, %"class.std::tuple"** %250, align 8
  %251 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %252 = load i64, i64* %9, align 8
  %253 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %251, i64 %252
  %254 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %255 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %254, i32 0, i32 0
  %256 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %255, i32 0, i32 2
  store %"class.std::tuple"* %253, %"class.std::tuple"** %256, align 8
  %257 = load i32, i32* @x.197
  %258 = load i32, i32* @y.198
  %259 = sub i32 0, 1
  %260 = add i32 %257, %259
  %261 = sub i32 %257, 1
  %262 = mul i32 %257, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %258, 10
  %266 = and i1 %264, %265
  %267 = xor i1 %264, %265
  %268 = or i1 %266, %267
  %269 = or i1 %264, %265
  br i1 %268, label %270, label %346

; <label>:270:                                    ; preds = %212
  ret void

; <label>:271:                                    ; preds = %185
  %272 = load i32, i32* @x.197
  %273 = load i32, i32* @y.198
  %274 = sub i32 0, 1
  %275 = add i32 %272, %274
  %276 = sub i32 %272, 1
  %277 = mul i32 %272, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %273, 10
  %281 = xor i1 %279, true
  %282 = xor i1 %280, true
  %283 = xor i1 false, true
  %284 = and i1 %281, false
  %285 = and i1 %279, %283
  %286 = and i1 %282, false
  %287 = and i1 %280, %283
  %288 = or i1 %284, %285
  %289 = or i1 %286, %287
  %290 = xor i1 %288, %289
  %291 = or i1 %281, %282
  %292 = xor i1 %291, true
  %293 = or i1 false, %283
  %294 = and i1 %292, %293
  %295 = or i1 %290, %294
  %296 = or i1 %279, %280
  br i1 %295, label %297, label %427

; <label>:297:                                    ; preds = %271, %427
  %298 = load i8*, i8** %12, align 8
  %299 = load i32, i32* %13, align 4
  %300 = insertvalue { i8*, i32 } undef, i8* %298, 0
  %301 = insertvalue { i8*, i32 } %300, i32 %299, 1
  %302 = load i32, i32* @x.197
  %303 = load i32, i32* @y.198
  %304 = add i32 %302, -1408682909
  %305 = sub i32 %304, 1
  %306 = sub i32 %305, -1408682909
  %307 = sub i32 %302, 1
  %308 = mul i32 %302, %306
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %303, 10
  %312 = xor i1 %310, true
  %313 = xor i1 %311, true
  %314 = xor i1 false, true
  %315 = and i1 %312, false
  %316 = and i1 %310, %314
  %317 = and i1 %313, false
  %318 = and i1 %311, %314
  %319 = or i1 %315, %316
  %320 = or i1 %317, %318
  %321 = xor i1 %319, %320
  %322 = or i1 %312, %313
  %323 = xor i1 %322, true
  %324 = or i1 false, %314
  %325 = and i1 %323, %324
  %326 = or i1 %321, %325
  %327 = or i1 %310, %311
  br i1 %326, label %328, label %427

; <label>:328:                                    ; preds = %297
  resume { i8*, i32 } %301

; <label>:329:                                    ; preds = %170
  %330 = landingpad { i8*, i32 }
          catch i8* null
  %331 = extractvalue { i8*, i32 } %330, 0
  call void @__clang_call_terminate(i8* %331) #10
  unreachable

; <label>:332:                                    ; preds = %184
  unreachable

; <label>:333:                                    ; preds = %58, %32
  store %"class.std::tuple"* null, %"class.std::tuple"** %11, align 8
  %334 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %335 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %334, i32 0, i32 0
  %336 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %335, i32 0, i32 0
  %337 = load %"class.std::tuple"*, %"class.std::tuple"** %336, align 8
  %338 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %339 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %338, i32 0, i32 0
  %340 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %339, i32 0, i32 1
  %341 = load %"class.std::tuple"*, %"class.std::tuple"** %340, align 8
  %342 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %343 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %344 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %343) #3
  br label %58

; <label>:345:                                    ; preds = %143, %117
  br label %143

; <label>:346:                                    ; preds = %212, %186
  %347 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %348 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %347, i32 0, i32 0
  %349 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %348, i32 0, i32 0
  %350 = load %"class.std::tuple"*, %"class.std::tuple"** %349, align 8
  %351 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %352 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %351, i32 0, i32 0
  %353 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %352, i32 0, i32 1
  %354 = load %"class.std::tuple"*, %"class.std::tuple"** %353, align 8
  %355 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %356 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %355) #3
  call void @_ZSt8_DestroyIPSt5tupleIJiiiEES1_EvT_S3_RSaIT0_E(%"class.std::tuple"* %350, %"class.std::tuple"* %354, %"class.std::allocator.2"* dereferenceable(1) %356)
  %357 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %358 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %359 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %358, i32 0, i32 0
  %360 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %359, i32 0, i32 0
  %361 = load %"class.std::tuple"*, %"class.std::tuple"** %360, align 8
  %362 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %363 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %362, i32 0, i32 0
  %364 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %363, i32 0, i32 2
  %365 = load %"class.std::tuple"*, %"class.std::tuple"** %364, align 8
  %366 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %367 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %366, i32 0, i32 0
  %368 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %367, i32 0, i32 0
  %369 = load %"class.std::tuple"*, %"class.std::tuple"** %368, align 8
  %370 = ptrtoint %"class.std::tuple"* %365 to i64
  %371 = ptrtoint %"class.std::tuple"* %369 to i64
  %372 = shl i64 %370, %371
  %373 = add i64 0, -5909471987628858828
  %374 = sub i64 %373, %370
  %375 = sub i64 %374, -5909471987628858828
  %376 = sub i64 0, %370
  %377 = sub i64 %375, 8613715392552882723
  %378 = add i64 %377, %371
  %379 = add i64 %378, 8613715392552882723
  %380 = add i64 %375, %371
  %381 = sub i64 0, %371
  %382 = add i64 %370, %381
  %383 = sub i64 %370, %371
  %384 = mul i64 %382, %371
  %385 = add i64 %370, 5470560896657977849
  %386 = sub i64 %385, %371
  %387 = sub i64 %386, 5470560896657977849
  %388 = sub i64 %370, %371
  %389 = mul i64 %387, %371
  %390 = sub i64 %370, -8811798053526865295
  %391 = sub i64 %390, %371
  %392 = add i64 %391, -8811798053526865295
  %393 = sub i64 %370, %371
  %394 = shl i64 %392, 12
  %395 = sub i64 0, -6371139938342895925
  %396 = sub i64 %395, %392
  %397 = add i64 %396, -6371139938342895925
  %398 = sub i64 0, %392
  %399 = add i64 %397, 766962731768776995
  %400 = add i64 %399, 12
  %401 = sub i64 %400, 766962731768776995
  %402 = add i64 %397, 12
  %403 = shl i64 %392, 12
  %404 = shl i64 %392, 12
  %405 = add i64 0, 2634757109857306572
  %406 = sub i64 %405, %392
  %407 = sub i64 %406, 2634757109857306572
  %408 = sub i64 0, %392
  %409 = sub i64 0, 12
  %410 = sub i64 %407, %409
  %411 = add i64 %407, 12
  %412 = sdiv exact i64 %392, 12
  call void @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"* %357, %"class.std::tuple"* %361, i64 %412)
  %413 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %414 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %415 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %414, i32 0, i32 0
  %416 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %415, i32 0, i32 0
  store %"class.std::tuple"* %413, %"class.std::tuple"** %416, align 8
  %417 = load %"class.std::tuple"*, %"class.std::tuple"** %11, align 8
  %418 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %419 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %418, i32 0, i32 0
  %420 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %419, i32 0, i32 1
  store %"class.std::tuple"* %417, %"class.std::tuple"** %420, align 8
  %421 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %422 = load i64, i64* %9, align 8
  %423 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %421, i64 %422
  %424 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %425 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %424, i32 0, i32 0
  %426 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %425, i32 0, i32 2
  store %"class.std::tuple"* %423, %"class.std::tuple"** %426, align 8
  br label %212

; <label>:427:                                    ; preds = %297, %271
  %428 = load i8*, i8** %12, align 8
  %429 = load i32, i32* %13, align 4
  %430 = insertvalue { i8*, i32 } undef, i8* %428, 0
  %431 = insertvalue { i8*, i32 } %430, i32 %429, 1
  br label %297
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE9constructIS2_JRiS5_S5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::tuple"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %12 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %13 = bitcast %"class.std::tuple"* %12 to i8*
  %14 = bitcast i8* %13 to %"class.std::tuple"*
  %15 = load i32*, i32** %8, align 8
  %16 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %15) #3
  %17 = load i32*, i32** %9, align 8
  %18 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %17) #3
  %19 = load i32*, i32** %10, align 8
  %20 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %19) #3
  call void @_ZNSt5tupleIJiiiEEC2IJRiS2_S2_EvEEDpOT_(%"class.std::tuple"* %14, i32* dereferenceable(4) %16, i32* dereferenceable(4) %18, i32* dereferenceable(4) %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJiiiEEC2IJRiS2_S2_EvEEDpOT_(%"class.std::tuple"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.201
  %8 = load i32, i32* @y.202
  %9 = add i32 %7, 1780478474
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1780478474
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 307543675, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %71
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 307543675, label %21
    i32 -717702360, label %29
    i32 -13478546, label %57
    i32 -1355812683, label %58
  ]

; <label>:20:                                     ; preds = %18
  br label %71

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -717702360, i32 -1355812683
  store i32 %28, i32* %17
  br label %71

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::tuple"*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %33 = alloca i32*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %30, align 8
  store i32* %1, i32** %31, align 8
  store i32* %2, i32** %32, align 8
  store i32* %3, i32** %33, align 8
  %34 = load %"class.std::tuple"*, %"class.std::tuple"** %30, align 8
  %35 = bitcast %"class.std::tuple"* %34 to %"struct.std::_Tuple_impl"*
  %36 = load i32*, i32** %31, align 8
  %37 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %36) #3
  %38 = load i32*, i32** %32, align 8
  %39 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %38) #3
  %40 = load i32*, i32** %33, align 8
  %41 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %40) #3
  call void @_ZNSt11_Tuple_implILm0EJiiiEEC2IRiJS2_S2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl"* %35, i32* dereferenceable(4) %37, i32* dereferenceable(4) %39, i32* dereferenceable(4) %41)
  %42 = load i32, i32* @x.201
  %43 = load i32, i32* @y.202
  %44 = sub i32 %42, -836995961
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -836995961
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -13478546, i32 -1355812683
  store i32 %56, i32* %17
  br label %71

; <label>:57:                                     ; preds = %18
  ret void

; <label>:58:                                     ; preds = %18
  %59 = alloca %"class.std::tuple"*, align 8
  %60 = alloca i32*, align 8
  %61 = alloca i32*, align 8
  %62 = alloca i32*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %59, align 8
  store i32* %1, i32** %60, align 8
  store i32* %2, i32** %61, align 8
  store i32* %3, i32** %62, align 8
  %63 = load %"class.std::tuple"*, %"class.std::tuple"** %59, align 8
  %64 = bitcast %"class.std::tuple"* %63 to %"struct.std::_Tuple_impl"*
  %65 = load i32*, i32** %60, align 8
  %66 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %65) #3
  %67 = load i32*, i32** %61, align 8
  %68 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %67) #3
  %69 = load i32*, i32** %62, align 8
  %70 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %69) #3
  call void @_ZNSt11_Tuple_implILm0EJiiiEEC2IRiJS2_S2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl"* %64, i32* dereferenceable(4) %66, i32* dereferenceable(4) %68, i32* dereferenceable(4) %70)
  store i32 -717702360, i32* %17
  br label %71

; <label>:71:                                     ; preds = %58, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJiiiEEC2IRiJS2_S2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::_Tuple_impl"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %5, align 8
  %10 = bitcast %"struct.std::_Tuple_impl"* %9 to %"struct.std::_Tuple_impl.5"*
  %11 = load i32*, i32** %7, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32*, i32** %8, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %13) #3
  call void @_ZNSt11_Tuple_implILm1EJiiEEC2IRiJS2_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.5"* %10, i32* dereferenceable(4) %12, i32* dereferenceable(4) %14)
  %15 = bitcast %"struct.std::_Tuple_impl"* %9 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to %"struct.std::_Head_base.8"*
  %18 = load i32*, i32** %6, align 8
  %19 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %18) #3
  call void @_ZNSt10_Head_baseILm0EiLb0EEC2IRiEEOT_(%"struct.std::_Head_base.8"* %17, i32* dereferenceable(4) %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EiLb0EEC2IRiEEOT_(%"struct.std::_Head_base.8"*, i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.205
  %6 = load i32, i32* @y.206
  %7 = add i32 %5, -2082413637
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2082413637
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1868852529, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1868852529, label %19
    i32 -1385299474, label %27
    i32 -1609421122, label %62
    i32 -1266232020, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1385299474, i32 -1266232020
  store i32 %26, i32* %15
  br label %71

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Head_base.8"*, align 8
  %29 = alloca i32*, align 8
  store %"struct.std::_Head_base.8"* %0, %"struct.std::_Head_base.8"** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load %"struct.std::_Head_base.8"*, %"struct.std::_Head_base.8"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Head_base.8", %"struct.std::_Head_base.8"* %30, i32 0, i32 0
  %32 = load i32*, i32** %29, align 8
  %33 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %32) #3
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %31, align 4
  %35 = load i32, i32* @x.205
  %36 = load i32, i32* @y.206
  %37 = add i32 %35, -1446881748
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1446881748
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1609421122, i32 -1266232020
  store i32 %61, i32* %15
  br label %71

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::_Head_base.8"*, align 8
  %65 = alloca i32*, align 8
  store %"struct.std::_Head_base.8"* %0, %"struct.std::_Head_base.8"** %64, align 8
  store i32* %1, i32** %65, align 8
  %66 = load %"struct.std::_Head_base.8"*, %"struct.std::_Head_base.8"** %64, align 8
  %67 = getelementptr inbounds %"struct.std::_Head_base.8", %"struct.std::_Head_base.8"* %66, i32 0, i32 0
  %68 = load i32*, i32** %65, align 8
  %69 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %68) #3
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %67, align 4
  store i32 -1385299474, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.0"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca %"class.std::vector.0"*
  %10 = alloca %"class.std::vector.0"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %10, align 8
  store i64 %1, i64* %11, align 8
  store i8* %2, i8** %12, align 8
  %15 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  store %"class.std::vector.0"* %15, %"class.std::vector.0"** %9
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %9
  %17 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE8max_sizeEv(%"class.std::vector.0"* %16) #3
  %18 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %9
  %19 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %18) #3
  %20 = sub i64 %17, 4141532606039222183
  %21 = sub i64 %20, %19
  %22 = add i64 %21, 4141532606039222183
  %23 = sub i64 %17, %19
  store i64 %22, i64* %8
  %24 = load i64, i64* %11, align 8
  store i64 %24, i64* %7
  %25 = alloca i32
  store i32 1607674190, i32* %25
  %26 = alloca i64
  br label %27

; <label>:27:                                     ; preds = %3, %233
  %28 = load i32, i32* %25
  switch i32 %28, label %29 [
    i32 1607674190, label %30
    i32 1088817054, label %35
    i32 1248777948, label %37
    i32 -1008649766, label %52
    i32 703246972, label %82
    i32 1941345141, label %85
    i32 1977965129, label %101
    i32 2126524603, label %120
    i32 2092582890, label %123
    i32 1442216560, label %126
    i32 -113187355, label %154
    i32 481485753, label %183
    i32 -1408822959, label %185
    i32 1411763079, label %187
    i32 792242581, label %226
    i32 1097504449, label %231
  ]

; <label>:29:                                     ; preds = %27
  br label %233

; <label>:30:                                     ; preds = %27
  %31 = load volatile i64, i64* %8
  %32 = load volatile i64, i64* %7
  %33 = icmp ult i64 %31, %32
  %34 = select i1 %33, i32 1088817054, i32 1248777948
  store i32 %34, i32* %25
  br label %233

; <label>:35:                                     ; preds = %27
  %36 = load i8*, i8** %12, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %36) #12
  unreachable

; <label>:37:                                     ; preds = %27
  %38 = load i32, i32* @x.207
  %39 = load i32, i32* @y.208
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -1008649766, i32 1411763079
  store i32 %51, i32* %25
  br label %233

; <label>:52:                                     ; preds = %27
  %53 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %9
  %54 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %53) #3
  %55 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %9
  %56 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %55) #3
  store i64 %56, i64* %14, align 8
  %57 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 0, %54
  %60 = sub i64 0, %58
  %61 = add i64 %59, %60
  %62 = sub i64 0, %61
  %63 = add i64 %54, %58
  store i64 %62, i64* %13, align 8
  %64 = load i64, i64* %13, align 8
  %65 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %9
  %66 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %65) #3
  %67 = icmp ult i64 %64, %66
  store i1 %67, i1* %6
  %68 = load i32, i32* @x.207
  %69 = load i32, i32* @y.208
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 703246972, i32 1411763079
  store i32 %81, i32* %25
  br label %233

; <label>:82:                                     ; preds = %27
  %83 = load volatile i1, i1* %6
  %84 = select i1 %83, i32 2092582890, i32 1941345141
  store i32 %84, i32* %25
  br label %233

; <label>:85:                                     ; preds = %27
  %86 = load i32, i32* @x.207
  %87 = load i32, i32* @y.208
  %88 = add i32 %86, -722498385
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, -722498385
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 1977965129, i32 792242581
  store i32 %100, i32* %25
  br label %233

; <label>:101:                                    ; preds = %27
  %102 = load i64, i64* %13, align 8
  %103 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %9
  %104 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE8max_sizeEv(%"class.std::vector.0"* %103) #3
  %105 = icmp ugt i64 %102, %104
  store i1 %105, i1* %5
  %106 = load i32, i32* @x.207
  %107 = load i32, i32* @y.208
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  %119 = select i1 %117, i32 2126524603, i32 792242581
  store i32 %119, i32* %25
  br label %233

; <label>:120:                                    ; preds = %27
  %121 = load volatile i1, i1* %5
  %122 = select i1 %121, i32 2092582890, i32 1442216560
  store i32 %122, i32* %25
  br label %233

; <label>:123:                                    ; preds = %27
  %124 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %9
  %125 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE8max_sizeEv(%"class.std::vector.0"* %124) #3
  store i32 -1408822959, i32* %25
  store i64 %125, i64* %26
  br label %233

; <label>:126:                                    ; preds = %27
  %127 = load i32, i32* @x.207
  %128 = load i32, i32* @y.208
  %129 = add i32 %127, -750126290
  %130 = sub i32 %129, 1
  %131 = sub i32 %130, -750126290
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 true, true
  %140 = and i1 %137, true
  %141 = and i1 %135, %139
  %142 = and i1 %138, true
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 true, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  %153 = select i1 %151, i32 -113187355, i32 1097504449
  store i32 %153, i32* %25
  br label %233

; <label>:154:                                    ; preds = %27
  %155 = load i64, i64* %13, align 8
  store i64 %155, i64* %4
  %156 = load i32, i32* @x.207
  %157 = load i32, i32* @y.208
  %158 = add i32 %156, -1583631225
  %159 = sub i32 %158, 1
  %160 = sub i32 %159, -1583631225
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = xor i1 %164, true
  %167 = xor i1 %165, true
  %168 = xor i1 false, true
  %169 = and i1 %166, false
  %170 = and i1 %164, %168
  %171 = and i1 %167, false
  %172 = and i1 %165, %168
  %173 = or i1 %169, %170
  %174 = or i1 %171, %172
  %175 = xor i1 %173, %174
  %176 = or i1 %166, %167
  %177 = xor i1 %176, true
  %178 = or i1 false, %168
  %179 = and i1 %177, %178
  %180 = or i1 %175, %179
  %181 = or i1 %164, %165
  %182 = select i1 %180, i32 481485753, i32 1097504449
  store i32 %182, i32* %25
  br label %233

; <label>:183:                                    ; preds = %27
  store i32 -1408822959, i32* %25
  %184 = load volatile i64, i64* %4
  store i64 %184, i64* %26
  br label %233

; <label>:185:                                    ; preds = %27
  %186 = load i64, i64* %26
  ret i64 %186

; <label>:187:                                    ; preds = %27
  %188 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %9
  %189 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %188) #3
  %190 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %9
  %191 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %190) #3
  store i64 %191, i64* %14, align 8
  %192 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %193 = load i64, i64* %192, align 8
  %194 = add i64 0, -7244793364522267114
  %195 = sub i64 %194, %189
  %196 = sub i64 %195, -7244793364522267114
  %197 = sub i64 0, %189
  %198 = sub i64 0, %193
  %199 = sub i64 %196, %198
  %200 = add i64 %196, %193
  %201 = sub i64 %189, -8053119777195224511
  %202 = sub i64 %201, %193
  %203 = add i64 %202, -8053119777195224511
  %204 = sub i64 %189, %193
  %205 = mul i64 %203, %193
  %206 = add i64 %189, -7921690324379696419
  %207 = sub i64 %206, %193
  %208 = sub i64 %207, -7921690324379696419
  %209 = sub i64 %189, %193
  %210 = mul i64 %208, %193
  %211 = sub i64 0, 1038005222624345893
  %212 = sub i64 %211, %189
  %213 = add i64 %212, 1038005222624345893
  %214 = sub i64 0, %189
  %215 = add i64 %213, -781150496136907231
  %216 = add i64 %215, %193
  %217 = sub i64 %216, -781150496136907231
  %218 = add i64 %213, %193
  %219 = sub i64 0, %193
  %220 = sub i64 %189, %219
  %221 = add i64 %189, %193
  store i64 %220, i64* %13, align 8
  %222 = load i64, i64* %13, align 8
  %223 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %9
  %224 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %223) #3
  %225 = icmp ult i64 %222, %224
  store i32 -1008649766, i32* %25
  br label %233

; <label>:226:                                    ; preds = %27
  %227 = load i64, i64* %13, align 8
  %228 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %9
  %229 = call i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE8max_sizeEv(%"class.std::vector.0"* %228) #3
  %230 = icmp ugt i64 %227, %229
  store i32 1977965129, i32* %25
  br label %233

; <label>:231:                                    ; preds = %27
  %232 = load i64, i64* %13, align 8
  store i32 -113187355, i32* %25
  br label %233

; <label>:233:                                    ; preds = %231, %226, %187, %183, %154, %126, %123, %120, %101, %85, %82, %52, %37, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZNSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.1"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.209
  %9 = load i32, i32* @y.210
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1012370044, i32* %17
  %18 = alloca %"class.std::tuple"*
  br label %19

; <label>:19:                                     ; preds = %2, %72
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 -1012370044, label %22
    i32 -1511216158, label %30
    i32 -1811655123, label %53
    i32 279385143, label %56
    i32 -421650920, label %63
    i32 -786516464, label %64
    i32 -1187560671, label %66
  ]

; <label>:21:                                     ; preds = %19
  br label %72

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1511216158, i32 -1187560671
  store i32 %29, i32* %17
  br label %72

; <label>:30:                                     ; preds = %19
  %31 = alloca %"struct.std::_Vector_base.1"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %31, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  %34 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %31, align 8
  store %"struct.std::_Vector_base.1"* %34, %"struct.std::_Vector_base.1"** %4
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = icmp ne i64 %36, 0
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.209
  %39 = load i32, i32* @y.210
  %40 = add i32 %38, 1215116839
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1215116839
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1811655123, i32 -1187560671
  store i32 %52, i32* %17
  br label %72

; <label>:53:                                     ; preds = %19
  %54 = load volatile i1, i1* %3
  %55 = select i1 %54, i32 279385143, i32 -421650920
  store i32 %55, i32* %17
  br label %72

; <label>:56:                                     ; preds = %19
  %57 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4
  %58 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %58 to %"class.std::allocator.2"*
  %60 = load volatile i64*, i64** %5
  %61 = load i64, i64* %60, align 8
  %62 = call %"class.std::tuple"* @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE8allocateERS2_m(%"class.std::allocator.2"* dereferenceable(1) %59, i64 %61)
  store i32 -786516464, i32* %17
  store %"class.std::tuple"* %62, %"class.std::tuple"** %18
  br label %72

; <label>:63:                                     ; preds = %19
  store i32 -786516464, i32* %17
  store %"class.std::tuple"* null, %"class.std::tuple"** %18
  br label %72

; <label>:64:                                     ; preds = %19
  %65 = load %"class.std::tuple"*, %"class.std::tuple"** %18
  ret %"class.std::tuple"* %65

; <label>:66:                                     ; preds = %19
  %67 = alloca %"struct.std::_Vector_base.1"*, align 8
  %68 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %67, align 8
  store i64 %1, i64* %68, align 8
  %69 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %67, align 8
  %70 = load i64, i64* %68, align 8
  %71 = icmp ne i64 %70, 0
  store i32 -1511216158, i32* %17
  br label %72

; <label>:72:                                     ; preds = %66, %63, %56, %53, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE4sizeEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %12 = ptrtoint %"class.std::tuple"* %7 to i64
  %13 = ptrtoint %"class.std::tuple"* %11 to i64
  %14 = sub i64 %12, 7984835834294771966
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 7984835834294771966
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 12
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJiiiEES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.std::tuple"*, %"class.std::tuple"*, %"class.std::tuple"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::tuple"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.213
  %9 = load i32, i32* @y.214
  %10 = sub i32 %8, -394449595
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -394449595
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1694508604, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %86
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1694508604, label %22
    i32 533975110, label %30
    i32 1553789814, label %64
    i32 1305209441, label %66
  ]

; <label>:21:                                     ; preds = %19
  br label %86

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 533975110, i32 1305209441
  store i32 %29, i32* %18
  br label %86

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::tuple"*, align 8
  %32 = alloca %"class.std::tuple"*, align 8
  %33 = alloca %"class.std::tuple"*, align 8
  %34 = alloca %"class.std::allocator.2"*, align 8
  %35 = alloca %"class.std::move_iterator", align 8
  %36 = alloca %"class.std::move_iterator", align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %31, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %32, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %33, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %34, align 8
  %37 = load %"class.std::tuple"*, %"class.std::tuple"** %31, align 8
  %38 = call %"class.std::tuple"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJiiiEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple"* %37)
  %39 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  store %"class.std::tuple"* %38, %"class.std::tuple"** %39, align 8
  %40 = load %"class.std::tuple"*, %"class.std::tuple"** %32, align 8
  %41 = call %"class.std::tuple"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJiiiEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple"* %40)
  %42 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %36, i32 0, i32 0
  store %"class.std::tuple"* %41, %"class.std::tuple"** %42, align 8
  %43 = load %"class.std::tuple"*, %"class.std::tuple"** %33, align 8
  %44 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %34, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  %46 = load %"class.std::tuple"*, %"class.std::tuple"** %45, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %36, i32 0, i32 0
  %48 = load %"class.std::tuple"*, %"class.std::tuple"** %47, align 8
  %49 = call %"class.std::tuple"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJiiiEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple"* %46, %"class.std::tuple"* %48, %"class.std::tuple"* %43, %"class.std::allocator.2"* dereferenceable(1) %44)
  store %"class.std::tuple"* %49, %"class.std::tuple"** %5
  %50 = load i32, i32* @x.213
  %51 = load i32, i32* @y.214
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1553789814, i32 1305209441
  store i32 %63, i32* %18
  br label %86

; <label>:64:                                     ; preds = %19
  %65 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %5
  ret %"class.std::tuple"* %65

; <label>:66:                                     ; preds = %19
  %67 = alloca %"class.std::tuple"*, align 8
  %68 = alloca %"class.std::tuple"*, align 8
  %69 = alloca %"class.std::tuple"*, align 8
  %70 = alloca %"class.std::allocator.2"*, align 8
  %71 = alloca %"class.std::move_iterator", align 8
  %72 = alloca %"class.std::move_iterator", align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %67, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %68, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %69, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %70, align 8
  %73 = load %"class.std::tuple"*, %"class.std::tuple"** %67, align 8
  %74 = call %"class.std::tuple"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJiiiEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple"* %73)
  %75 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %71, i32 0, i32 0
  store %"class.std::tuple"* %74, %"class.std::tuple"** %75, align 8
  %76 = load %"class.std::tuple"*, %"class.std::tuple"** %68, align 8
  %77 = call %"class.std::tuple"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJiiiEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple"* %76)
  %78 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %72, i32 0, i32 0
  store %"class.std::tuple"* %77, %"class.std::tuple"** %78, align 8
  %79 = load %"class.std::tuple"*, %"class.std::tuple"** %69, align 8
  %80 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %70, align 8
  %81 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %71, i32 0, i32 0
  %82 = load %"class.std::tuple"*, %"class.std::tuple"** %81, align 8
  %83 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %72, i32 0, i32 0
  %84 = load %"class.std::tuple"*, %"class.std::tuple"** %83, align 8
  %85 = call %"class.std::tuple"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJiiiEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple"* %82, %"class.std::tuple"* %84, %"class.std::tuple"* %79, %"class.std::allocator.2"* dereferenceable(1) %80)
  store i32 533975110, i32* %18
  br label %86

; <label>:86:                                     ; preds = %66, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.2"* dereferenceable(1), %"class.std::tuple"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.std::tuple"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJiiiEESaIS1_EE8max_sizeEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.217
  %6 = load i32, i32* @y.218
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1118366945, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %54
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1118366945, label %18
    i32 -873646230, label %26
    i32 -63740019, label %46
    i32 -1236239253, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %54

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -873646230, i32 -1236239253
  store i32 %25, i32* %14
  br label %54

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %27, align 8
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %27, align 8
  %29 = bitcast %"class.std::vector.0"* %28 to %"struct.std::_Vector_base.1"*
  %30 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %29) #3
  %31 = call i64 @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE8max_sizeERKS2_(%"class.std::allocator.2"* dereferenceable(1) %30) #3
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.217
  %33 = load i32, i32* @y.218
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -63740019, i32 -1236239253
  store i32 %45, i32* %14
  br label %54

; <label>:46:                                     ; preds = %15
  %47 = load volatile i64, i64* %2
  ret i64 %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %49, align 8
  %50 = load %"class.std::vector.0"*, %"class.std::vector.0"** %49, align 8
  %51 = bitcast %"class.std::vector.0"* %50 to %"struct.std::_Vector_base.1"*
  %52 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %51) #3
  %53 = call i64 @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE8max_sizeERKS2_(%"class.std::allocator.2"* dereferenceable(1) %52) #3
  store i32 -873646230, i32* %14
  br label %54

; <label>:54:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 -210761705, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %61
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -210761705, label %16
    i32 -217288391, label %21
    i32 -1239858904, label %23
    i32 -1976619996, label %39
    i32 76231926, label %56
    i32 -1920428182, label %57
    i32 1639811298, label %59
  ]

; <label>:15:                                     ; preds = %13
  br label %61

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 -217288391, i32 -1239858904
  store i32 %20, i32* %12
  br label %61

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 -1920428182, i32* %12
  br label %61

; <label>:23:                                     ; preds = %13
  %24 = load i32, i32* @x.219
  %25 = load i32, i32* @y.220
  %26 = sub i32 %24, -345557202
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -345557202
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -1976619996, i32 1639811298
  store i32 %38, i32* %12
  br label %61

; <label>:39:                                     ; preds = %13
  %40 = load i64*, i64** %6, align 8
  store i64* %40, i64** %5, align 8
  %41 = load i32, i32* @x.219
  %42 = load i32, i32* @y.220
  %43 = add i32 %41, 1572567467
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1572567467
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 76231926, i32 1639811298
  store i32 %55, i32* %12
  br label %61

; <label>:56:                                     ; preds = %13
  store i32 -1920428182, i32* %12
  br label %61

; <label>:57:                                     ; preds = %13
  %58 = load i64*, i64** %5, align 8
  ret i64* %58

; <label>:59:                                     ; preds = %13
  %60 = load i64*, i64** %6, align 8
  store i64* %60, i64** %5, align 8
  store i32 -1976619996, i32* %12
  br label %61

; <label>:61:                                     ; preds = %59, %56, %39, %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE8max_sizeERKS2_(%"class.std::allocator.2"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.221
  %6 = load i32, i32* @y.222
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2000140388, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2000140388, label %18
    i32 -342659150, label %38
    i32 -1684281943, label %70
    i32 1583654884, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -342659150, i32 1583654884
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %39, align 8
  %40 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %39, align 8
  %41 = bitcast %"class.std::allocator.2"* %40 to %"class.__gnu_cxx::new_allocator.3"*
  %42 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %41) #3
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.221
  %44 = load i32, i32* @y.222
  %45 = sub i32 %43, 2114216635
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 2114216635
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1684281943, i32 1583654884
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile i64, i64* %2
  ret i64 %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %73, align 8
  %74 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %73, align 8
  %75 = bitcast %"class.std::allocator.2"* %74 to %"class.__gnu_cxx::new_allocator.3"*
  %76 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %75) #3
  store i32 -342659150, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt5tupleIJiiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::tuple<int, int, int>, std::allocator<std::tuple<int, int, int> > >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 1537228672809129301
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZNSt16allocator_traitsISaISt5tupleIJiiiEEEE8allocateERS2_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::tuple"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret %"class.std::tuple"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -89577196, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -89577196, label %16
    i32 -1956919273, label %21
    i32 435880016, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1956919273, i32 435880016
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 12
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::tuple"*
  ret %"class.std::tuple"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJiiiEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple"*, %"class.std::tuple"*, %"class.std::tuple"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::tuple"* %0, %"class.std::tuple"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"class.std::tuple"* %1, %"class.std::tuple"** %12, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"class.std::tuple"*, %"class.std::tuple"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"class.std::tuple"*, %"class.std::tuple"** %20, align 8
  %22 = call %"class.std::tuple"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJiiiEEES3_ET0_T_S6_S5_(%"class.std::tuple"* %19, %"class.std::tuple"* %21, %"class.std::tuple"* %17)
  ret %"class.std::tuple"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJiiiEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple"*) #0 comdat {
  %2 = alloca %"class.std::tuple"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.233
  %6 = load i32, i32* @y.234
  %7 = add i32 %5, -737226967
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -737226967
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -561697371, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -561697371, label %19
    i32 -371527012, label %39
    i32 1577661408, label %59
    i32 -1803011583, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -371527012, i32 -1803011583
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator", align 8
  %41 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %41, align 8
  %42 = load %"class.std::tuple"*, %"class.std::tuple"** %41, align 8
  call void @_ZNSt13move_iteratorIPSt5tupleIJiiiEEEC2ES2_(%"class.std::move_iterator"* %40, %"class.std::tuple"* %42)
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %40, i32 0, i32 0
  %44 = load %"class.std::tuple"*, %"class.std::tuple"** %43, align 8
  store %"class.std::tuple"* %44, %"class.std::tuple"** %2
  %45 = load i32, i32* @x.233
  %46 = load i32, i32* @y.234
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1577661408, i32 -1803011583
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %2
  ret %"class.std::tuple"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator", align 8
  %63 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %63, align 8
  %64 = load %"class.std::tuple"*, %"class.std::tuple"** %63, align 8
  call void @_ZNSt13move_iteratorIPSt5tupleIJiiiEEEC2ES2_(%"class.std::move_iterator"* %62, %"class.std::tuple"* %64)
  %65 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %62, i32 0, i32 0
  %66 = load %"class.std::tuple"*, %"class.std::tuple"** %65, align 8
  store i32 -371527012, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJiiiEEES3_ET0_T_S6_S5_(%"class.std::tuple"*, %"class.std::tuple"*, %"class.std::tuple"*) #0 comdat {
  %4 = alloca %"class.std::tuple"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.235
  %8 = load i32, i32* @y.236
  %9 = add i32 %7, 1232774392
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1232774392
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1876937808, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1876937808, label %21
    i32 -853402909, label %29
    i32 1530865628, label %75
    i32 628446705, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -853402909, i32 628446705
  store i32 %28, i32* %17
  br label %96

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator", align 8
  %31 = alloca %"class.std::move_iterator", align 8
  %32 = alloca %"class.std::tuple"*, align 8
  %33 = alloca i8, align 1
  %34 = alloca %"class.std::move_iterator", align 8
  %35 = alloca %"class.std::move_iterator", align 8
  %36 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %30, i32 0, i32 0
  store %"class.std::tuple"* %0, %"class.std::tuple"** %36, align 8
  %37 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %31, i32 0, i32 0
  store %"class.std::tuple"* %1, %"class.std::tuple"** %37, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %32, align 8
  store i8 1, i8* %33, align 1
  %38 = bitcast %"class.std::move_iterator"* %34 to i8*
  %39 = bitcast %"class.std::move_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.std::move_iterator"* %35 to i8*
  %41 = bitcast %"class.std::move_iterator"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load %"class.std::tuple"*, %"class.std::tuple"** %32, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %34, i32 0, i32 0
  %44 = load %"class.std::tuple"*, %"class.std::tuple"** %43, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  %46 = load %"class.std::tuple"*, %"class.std::tuple"** %45, align 8
  %47 = call %"class.std::tuple"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJiiiEEES5_EET0_T_S8_S7_(%"class.std::tuple"* %44, %"class.std::tuple"* %46, %"class.std::tuple"* %42)
  store %"class.std::tuple"* %47, %"class.std::tuple"** %4
  %48 = load i32, i32* @x.235
  %49 = load i32, i32* @y.236
  %50 = sub i32 %48, -698536661
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -698536661
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1530865628, i32 628446705
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %4
  ret %"class.std::tuple"* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.std::move_iterator", align 8
  %79 = alloca %"class.std::move_iterator", align 8
  %80 = alloca %"class.std::tuple"*, align 8
  %81 = alloca i8, align 1
  %82 = alloca %"class.std::move_iterator", align 8
  %83 = alloca %"class.std::move_iterator", align 8
  %84 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %78, i32 0, i32 0
  store %"class.std::tuple"* %0, %"class.std::tuple"** %84, align 8
  %85 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %79, i32 0, i32 0
  store %"class.std::tuple"* %1, %"class.std::tuple"** %85, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %80, align 8
  store i8 1, i8* %81, align 1
  %86 = bitcast %"class.std::move_iterator"* %82 to i8*
  %87 = bitcast %"class.std::move_iterator"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.std::move_iterator"* %83 to i8*
  %89 = bitcast %"class.std::move_iterator"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load %"class.std::tuple"*, %"class.std::tuple"** %80, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %82, i32 0, i32 0
  %92 = load %"class.std::tuple"*, %"class.std::tuple"** %91, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  %94 = load %"class.std::tuple"*, %"class.std::tuple"** %93, align 8
  %95 = call %"class.std::tuple"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJiiiEEES5_EET0_T_S8_S7_(%"class.std::tuple"* %92, %"class.std::tuple"* %94, %"class.std::tuple"* %90)
  store i32 -853402909, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJiiiEEES5_EET0_T_S8_S7_(%"class.std::tuple"*, %"class.std::tuple"*, %"class.std::tuple"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::tuple"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::tuple"* %0, %"class.std::tuple"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::tuple"* %1, %"class.std::tuple"** %11, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %6, align 8
  %12 = load %"class.std::tuple"*, %"class.std::tuple"** %6, align 8
  store %"class.std::tuple"* %12, %"class.std::tuple"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %179, %3
  %14 = invoke zeroext i1 @_ZStneIPSt5tupleIJiiiEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %180

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %283

; <label>:16:                                     ; preds = %15
  %17 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %18 = call %"class.std::tuple"* @_ZSt11__addressofISt5tupleIJiiiEEEPT_RS2_(%"class.std::tuple"* dereferenceable(12) %17) #3
  %19 = invoke dereferenceable(12) %"class.std::tuple"* @_ZNKSt13move_iteratorIPSt5tupleIJiiiEEEdeEv(%"class.std::move_iterator"* %4)
          to label %20 unwind label %180

; <label>:20:                                     ; preds = %16
  %21 = load i32, i32* @x.237
  %22 = load i32, i32* @y.238
  %23 = add i32 %21, -603748499
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -603748499
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %329

; <label>:47:                                     ; preds = %20, %329
  %48 = load i32, i32* @x.237
  %49 = load i32, i32* @y.238
  %50 = add i32 %48, 821094718
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 821094718
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %329

; <label>:62:                                     ; preds = %47
  invoke void @_ZSt10_ConstructISt5tupleIJiiiEEJS1_EEvPT_DpOT0_(%"class.std::tuple"* %18, %"class.std::tuple"* dereferenceable(12) %19)
          to label %63 unwind label %180

; <label>:63:                                     ; preds = %62
  %64 = load i32, i32* @x.237
  %65 = load i32, i32* @y.238
  %66 = sub i32 %64, -190449022
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -190449022
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  br i1 %76, label %78, label %330

; <label>:78:                                     ; preds = %63, %330
  %79 = load i32, i32* @x.237
  %80 = load i32, i32* @y.238
  %81 = sub i32 %79, 1244925861
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 1244925861
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %330

; <label>:105:                                    ; preds = %78
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = load i32, i32* @x.237
  %108 = load i32, i32* @y.238
  %109 = sub i32 0, 1
  %110 = add i32 %107, %109
  %111 = sub i32 %107, 1
  %112 = mul i32 %107, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %108, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  br i1 %118, label %120, label %331

; <label>:120:                                    ; preds = %106, %331
  %121 = load i32, i32* @x.237
  %122 = load i32, i32* @y.238
  %123 = sub i32 %121, 2144689027
  %124 = sub i32 %123, 1
  %125 = add i32 %124, 2144689027
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  br i1 %133, label %135, label %331

; <label>:135:                                    ; preds = %120
  %136 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt5tupleIJiiiEEEppEv(%"class.std::move_iterator"* %4)
          to label %137 unwind label %180

; <label>:137:                                    ; preds = %135
  %138 = load i32, i32* @x.237
  %139 = load i32, i32* @y.238
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  br i1 %149, label %151, label %332

; <label>:151:                                    ; preds = %137, %332
  %152 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %153 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %152, i32 1
  store %"class.std::tuple"* %153, %"class.std::tuple"** %7, align 8
  %154 = load i32, i32* @x.237
  %155 = load i32, i32* @y.238
  %156 = sub i32 0, 1
  %157 = add i32 %154, %156
  %158 = sub i32 %154, 1
  %159 = mul i32 %154, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %155, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 false, true
  %166 = and i1 %163, false
  %167 = and i1 %161, %165
  %168 = and i1 %164, false
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 false, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  br i1 %177, label %179, label %332

; <label>:179:                                    ; preds = %151
  br label %13

; <label>:180:                                    ; preds = %135, %62, %16, %13
  %181 = load i32, i32* @x.237
  %182 = load i32, i32* @y.238
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 true, true
  %193 = and i1 %190, true
  %194 = and i1 %188, %192
  %195 = and i1 %191, true
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 true, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %335

; <label>:206:                                    ; preds = %180, %335
  %207 = landingpad { i8*, i32 }
          catch i8* null
  %208 = extractvalue { i8*, i32 } %207, 0
  store i8* %208, i8** %8, align 8
  %209 = extractvalue { i8*, i32 } %207, 1
  store i32 %209, i32* %9, align 4
  %210 = load i32, i32* @x.237
  %211 = load i32, i32* @y.238
  %212 = sub i32 0, 1
  %213 = add i32 %210, %212
  %214 = sub i32 %210, 1
  %215 = mul i32 %210, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %211, 10
  %219 = xor i1 %217, true
  %220 = xor i1 %218, true
  %221 = xor i1 false, true
  %222 = and i1 %219, false
  %223 = and i1 %217, %221
  %224 = and i1 %220, false
  %225 = and i1 %218, %221
  %226 = or i1 %222, %223
  %227 = or i1 %224, %225
  %228 = xor i1 %226, %227
  %229 = or i1 %219, %220
  %230 = xor i1 %229, true
  %231 = or i1 false, %221
  %232 = and i1 %230, %231
  %233 = or i1 %228, %232
  %234 = or i1 %217, %218
  br i1 %233, label %235, label %335

; <label>:235:                                    ; preds = %206
  br label %236

; <label>:236:                                    ; preds = %235
  %237 = load i32, i32* @x.237
  %238 = load i32, i32* @y.238
  %239 = sub i32 0, 1
  %240 = add i32 %237, %239
  %241 = sub i32 %237, 1
  %242 = mul i32 %237, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %238, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 true, true
  %249 = and i1 %246, true
  %250 = and i1 %244, %248
  %251 = and i1 %247, true
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 true, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  br i1 %260, label %262, label %339

; <label>:262:                                    ; preds = %236, %339
  %263 = load i8*, i8** %8, align 8
  %264 = call i8* @__cxa_begin_catch(i8* %263) #3
  %265 = load %"class.std::tuple"*, %"class.std::tuple"** %6, align 8
  %266 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %267 = load i32, i32* @x.237
  %268 = load i32, i32* @y.238
  %269 = add i32 %267, 95943021
  %270 = sub i32 %269, 1
  %271 = sub i32 %270, 95943021
  %272 = sub i32 %267, 1
  %273 = mul i32 %267, %271
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %268, 10
  %277 = and i1 %275, %276
  %278 = xor i1 %275, %276
  %279 = or i1 %277, %278
  %280 = or i1 %275, %276
  br i1 %279, label %281, label %339

; <label>:281:                                    ; preds = %262
  invoke void @_ZSt8_DestroyIPSt5tupleIJiiiEEEvT_S3_(%"class.std::tuple"* %265, %"class.std::tuple"* %266)
          to label %282 unwind label %314

; <label>:282:                                    ; preds = %281
  invoke void @__cxa_rethrow() #12
          to label %328 unwind label %314

; <label>:283:                                    ; preds = %15
  %284 = load i32, i32* @x.237
  %285 = load i32, i32* @y.238
  %286 = add i32 %284, -153015818
  %287 = sub i32 %286, 1
  %288 = sub i32 %287, -153015818
  %289 = sub i32 %284, 1
  %290 = mul i32 %284, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %285, 10
  %294 = and i1 %292, %293
  %295 = xor i1 %292, %293
  %296 = or i1 %294, %295
  %297 = or i1 %292, %293
  br i1 %296, label %298, label %344

; <label>:298:                                    ; preds = %283, %344
  %299 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %300 = load i32, i32* @x.237
  %301 = load i32, i32* @y.238
  %302 = sub i32 0, 1
  %303 = add i32 %300, %302
  %304 = sub i32 %300, 1
  %305 = mul i32 %300, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %301, 10
  %309 = and i1 %307, %308
  %310 = xor i1 %307, %308
  %311 = or i1 %309, %310
  %312 = or i1 %307, %308
  br i1 %311, label %313, label %344

; <label>:313:                                    ; preds = %298
  ret %"class.std::tuple"* %299

; <label>:314:                                    ; preds = %282, %281
  %315 = landingpad { i8*, i32 }
          cleanup
  %316 = extractvalue { i8*, i32 } %315, 0
  store i8* %316, i8** %8, align 8
  %317 = extractvalue { i8*, i32 } %315, 1
  store i32 %317, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %318 unwind label %325

; <label>:318:                                    ; preds = %314
  br label %320
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:320:                                    ; preds = %318
  %321 = load i8*, i8** %8, align 8
  %322 = load i32, i32* %9, align 4
  %323 = insertvalue { i8*, i32 } undef, i8* %321, 0
  %324 = insertvalue { i8*, i32 } %323, i32 %322, 1
  resume { i8*, i32 } %324

; <label>:325:                                    ; preds = %314
  %326 = landingpad { i8*, i32 }
          catch i8* null
  %327 = extractvalue { i8*, i32 } %326, 0
  call void @__clang_call_terminate(i8* %327) #10
  unreachable

; <label>:328:                                    ; preds = %282
  unreachable

; <label>:329:                                    ; preds = %47, %20
  br label %47

; <label>:330:                                    ; preds = %78, %63
  br label %78

; <label>:331:                                    ; preds = %120, %106
  br label %120

; <label>:332:                                    ; preds = %151, %137
  %333 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %334 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %333, i32 1
  store %"class.std::tuple"* %334, %"class.std::tuple"** %7, align 8
  br label %151

; <label>:335:                                    ; preds = %206, %180
  %336 = landingpad { i8*, i32 }
          catch i8* null
  %337 = extractvalue { i8*, i32 } %336, 0
  store i8* %337, i8** %8, align 8
  %338 = extractvalue { i8*, i32 } %336, 1
  store i32 %338, i32* %9, align 4
  br label %206

; <label>:339:                                    ; preds = %262, %236
  %340 = load i8*, i8** %8, align 8
  %341 = call i8* @__cxa_begin_catch(i8* %340) #3
  %342 = load %"class.std::tuple"*, %"class.std::tuple"** %6, align 8
  %343 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  br label %262

; <label>:344:                                    ; preds = %298, %283
  %345 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  br label %298
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt5tupleIJiiiEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt5tupleIJiiiEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt5tupleIJiiiEEJS1_EEvPT_DpOT0_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(12)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.241
  %6 = load i32, i32* @y.242
  %7 = sub i32 %5, 2094880121
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2094880121
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1902093348, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1902093348, label %19
    i32 -2036431957, label %39
    i32 1687478237, label %62
    i32 -2029306323, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2036431957, i32 -2029306323
  store i32 %38, i32* %15
  br label %71

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::tuple"*, align 8
  %41 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %40, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %41, align 8
  %42 = load %"class.std::tuple"*, %"class.std::tuple"** %40, align 8
  %43 = bitcast %"class.std::tuple"* %42 to i8*
  %44 = bitcast i8* %43 to %"class.std::tuple"*
  %45 = load %"class.std::tuple"*, %"class.std::tuple"** %41, align 8
  %46 = call dereferenceable(12) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJiiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple"* dereferenceable(12) %45) #3
  call void @_ZNSt5tupleIJiiiEEC2EOS0_(%"class.std::tuple"* %44, %"class.std::tuple"* dereferenceable(12) %46) #3
  %47 = load i32, i32* @x.241
  %48 = load i32, i32* @y.242
  %49 = sub i32 %47, 171558612
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 171558612
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1687478237, i32 -2029306323
  store i32 %61, i32* %15
  br label %71

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::tuple"*, align 8
  %65 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %64, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %65, align 8
  %66 = load %"class.std::tuple"*, %"class.std::tuple"** %64, align 8
  %67 = bitcast %"class.std::tuple"* %66 to i8*
  %68 = bitcast i8* %67 to %"class.std::tuple"*
  %69 = load %"class.std::tuple"*, %"class.std::tuple"** %65, align 8
  %70 = call dereferenceable(12) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJiiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple"* dereferenceable(12) %69) #3
  call void @_ZNSt5tupleIJiiiEEC2EOS0_(%"class.std::tuple"* %68, %"class.std::tuple"* dereferenceable(12) %70) #3
  store i32 -2036431957, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple"* @_ZSt11__addressofISt5tupleIJiiiEEEPT_RS2_(%"class.std::tuple"* dereferenceable(12)) #5 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  %4 = bitcast %"class.std::tuple"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::tuple"*
  ret %"class.std::tuple"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(12) %"class.std::tuple"* @_ZNKSt13move_iteratorIPSt5tupleIJiiiEEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  ret %"class.std::tuple"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt5tupleIJiiiEEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %6 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %5, i32 1
  store %"class.std::tuple"* %6, %"class.std::tuple"** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt5tupleIJiiiEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"class.std::tuple"* @_ZNKSt13move_iteratorIPSt5tupleIJiiiEEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"class.std::tuple"* @_ZNKSt13move_iteratorIPSt5tupleIJiiiEEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"class.std::tuple"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple"* @_ZNKSt13move_iteratorIPSt5tupleIJiiiEEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  ret %"class.std::tuple"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(12) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJiiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple"* dereferenceable(12)) #5 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  ret %"class.std::tuple"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJiiiEEC2EOS0_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(12)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %8 = bitcast %"class.std::tuple"* %7 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJiiiEEC2EOS0_(%"struct.std::_Tuple_impl"* %6, %"struct.std::_Tuple_impl"* dereferenceable(12) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJiiiEEC2EOS0_(%"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"* dereferenceable(12)) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %3, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl"* %5 to %"struct.std::_Tuple_impl.5"*
  %7 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %4, align 8
  %8 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJiiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl"* dereferenceable(12) %7) #3
  %9 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZSt4moveIRSt11_Tuple_implILm1EJiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %8) #3
  call void @_ZNSt11_Tuple_implILm1EJiiEEC2EOS0_(%"struct.std::_Tuple_impl.5"* %6, %"struct.std::_Tuple_impl.5"* dereferenceable(8) %9) #3
  %10 = bitcast %"struct.std::_Tuple_impl"* %5 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to %"struct.std::_Head_base.8"*
  %13 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %4, align 8
  %14 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJiiiEE7_M_headERS0_(%"struct.std::_Tuple_impl"* dereferenceable(12) %13) #3
  %15 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %14) #3
  invoke void @_ZNSt10_Head_baseILm0EiLb0EEC2IiEEOT_(%"struct.std::_Head_base.8"* %12, i32* dereferenceable(4) %15)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %2
  ret void

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.257
  %19 = load i32, i32* @y.258
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %73

; <label>:43:                                     ; preds = %17, %73
  %44 = landingpad { i8*, i32 }
          catch i8* null
  %45 = extractvalue { i8*, i32 } %44, 0
  call void @__clang_call_terminate(i8* %45) #10
  %46 = load i32, i32* @x.257
  %47 = load i32, i32* @y.258
  %48 = add i32 %46, -442910282
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -442910282
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %73

; <label>:72:                                     ; preds = %43
  unreachable

; <label>:73:                                     ; preds = %43, %17
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  call void @__clang_call_terminate(i8* %75) #10
  br label %43
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZSt4moveIRSt11_Tuple_implILm1EJiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.5"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.259
  %6 = load i32, i32* @y.260
  %7 = sub i32 %5, -165745298
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -165745298
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1533988515, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1533988515, label %19
    i32 -47517171, label %27
    i32 951370064, label %45
    i32 261576488, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -47517171, i32 261576488
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %28, align 8
  %29 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %28, align 8
  store %"struct.std::_Tuple_impl.5"* %29, %"struct.std::_Tuple_impl.5"** %2
  %30 = load i32, i32* @x.259
  %31 = load i32, i32* @y.260
  %32 = add i32 %30, -313258651
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -313258651
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 951370064, i32 261576488
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %2
  ret %"struct.std::_Tuple_impl.5"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %48, align 8
  %49 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %48, align 8
  store i32 -47517171, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJiiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl"* dereferenceable(12)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl"* %3 to %"struct.std::_Tuple_impl.5"*
  ret %"struct.std::_Tuple_impl.5"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJiiEEC2EOS0_(%"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"* dereferenceable(8)) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.263
  %4 = load i32, i32* @y.264
  %5 = add i32 %3, 506885564
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 506885564
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %102

; <label>:29:                                     ; preds = %2, %102
  %30 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  %31 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %30, align 8
  store %"struct.std::_Tuple_impl.5"* %1, %"struct.std::_Tuple_impl.5"** %31, align 8
  %32 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %30, align 8
  %33 = bitcast %"struct.std::_Tuple_impl.5"* %32 to %"struct.std::_Tuple_impl.6"*
  %34 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %31, align 8
  %35 = call dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZNSt11_Tuple_implILm1EJiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %34) #3
  %36 = call dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZSt4moveIRSt11_Tuple_implILm2EJiEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.6"* dereferenceable(4) %35) #3
  call void @_ZNSt11_Tuple_implILm2EJiEEC2EOS0_(%"struct.std::_Tuple_impl.6"* %33, %"struct.std::_Tuple_impl.6"* dereferenceable(4) %36) #3
  %37 = bitcast %"struct.std::_Tuple_impl.5"* %32 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 4
  %39 = bitcast i8* %38 to %"struct.std::_Head_base.7"*
  %40 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %31, align 8
  %41 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJiiEE7_M_headERS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %40) #3
  %42 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %41) #3
  %43 = load i32, i32* @x.263
  %44 = load i32, i32* @y.264
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %102

; <label>:56:                                     ; preds = %29
  invoke void @_ZNSt10_Head_baseILm1EiLb0EEC2IiEEOT_(%"struct.std::_Head_base.7"* %39, i32* dereferenceable(4) %42)
          to label %57 unwind label %58

; <label>:57:                                     ; preds = %56
  ret void

; <label>:58:                                     ; preds = %56
  %59 = load i32, i32* @x.263
  %60 = load i32, i32* @y.264
  %61 = add i32 %59, 329904335
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 329904335
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %116

; <label>:73:                                     ; preds = %58, %116
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  call void @__clang_call_terminate(i8* %75) #10
  %76 = load i32, i32* @x.263
  %77 = load i32, i32* @y.264
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %116

; <label>:101:                                    ; preds = %73
  unreachable

; <label>:102:                                    ; preds = %29, %2
  %103 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  %104 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %103, align 8
  store %"struct.std::_Tuple_impl.5"* %1, %"struct.std::_Tuple_impl.5"** %104, align 8
  %105 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %103, align 8
  %106 = bitcast %"struct.std::_Tuple_impl.5"* %105 to %"struct.std::_Tuple_impl.6"*
  %107 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %104, align 8
  %108 = call dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZNSt11_Tuple_implILm1EJiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %107) #3
  %109 = call dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZSt4moveIRSt11_Tuple_implILm2EJiEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.6"* dereferenceable(4) %108) #3
  call void @_ZNSt11_Tuple_implILm2EJiEEC2EOS0_(%"struct.std::_Tuple_impl.6"* %106, %"struct.std::_Tuple_impl.6"* dereferenceable(4) %109) #3
  %110 = bitcast %"struct.std::_Tuple_impl.5"* %105 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 4
  %112 = bitcast i8* %111 to %"struct.std::_Head_base.7"*
  %113 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %104, align 8
  %114 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJiiEE7_M_headERS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %113) #3
  %115 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %114) #3
  br label %29

; <label>:116:                                    ; preds = %73, %58
  %117 = landingpad { i8*, i32 }
          catch i8* null
  %118 = extractvalue { i8*, i32 } %117, 0
  call void @__clang_call_terminate(i8* %118) #10
  br label %73
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJiiiEE7_M_headERS0_(%"struct.std::_Tuple_impl"* dereferenceable(12)) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.265
  %6 = load i32, i32* @y.266
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1861904547, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %81
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1861904547, label %18
    i32 -796078682, label %38
    i32 145119344, label %72
    i32 -1457710098, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %81

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -796078682, i32 -1457710098
  store i32 %37, i32* %14
  br label %81

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %39, align 8
  %40 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Tuple_impl"* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 8
  %43 = bitcast i8* %42 to %"struct.std::_Head_base.8"*
  %44 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm0EiLb0EE7_M_headERS0_(%"struct.std::_Head_base.8"* dereferenceable(4) %43) #3
  store i32* %44, i32** %2
  %45 = load i32, i32* @x.265
  %46 = load i32, i32* @y.266
  %47 = sub i32 %45, 1407548667
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1407548667
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 145119344, i32 -1457710098
  store i32 %71, i32* %14
  br label %81

; <label>:72:                                     ; preds = %15
  %73 = load volatile i32*, i32** %2
  ret i32* %73

; <label>:74:                                     ; preds = %15
  %75 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %75, align 8
  %76 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %75, align 8
  %77 = bitcast %"struct.std::_Tuple_impl"* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 8
  %79 = bitcast i8* %78 to %"struct.std::_Head_base.8"*
  %80 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm0EiLb0EE7_M_headERS0_(%"struct.std::_Head_base.8"* dereferenceable(4) %79) #3
  store i32 -796078682, i32* %14
  br label %81

; <label>:81:                                     ; preds = %74, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EiLb0EEC2IiEEOT_(%"struct.std::_Head_base.8"*, i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.8"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Head_base.8"* %0, %"struct.std::_Head_base.8"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Head_base.8"*, %"struct.std::_Head_base.8"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.8", %"struct.std::_Head_base.8"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %6, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZSt4moveIRSt11_Tuple_implILm2EJiEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.6"* dereferenceable(4)) #5 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  store %"struct.std::_Tuple_impl.6"* %0, %"struct.std::_Tuple_impl.6"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %2, align 8
  ret %"struct.std::_Tuple_impl.6"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZNSt11_Tuple_implILm1EJiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.6"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.271
  %6 = load i32, i32* @y.272
  %7 = sub i32 %5, 695176561
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 695176561
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1875245134, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1875245134, label %19
    i32 1044350787, label %27
    i32 -1494001079, label %46
    i32 -208483263, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1044350787, i32 -208483263
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %28, align 8
  %29 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %28, align 8
  %30 = bitcast %"struct.std::_Tuple_impl.5"* %29 to %"struct.std::_Tuple_impl.6"*
  store %"struct.std::_Tuple_impl.6"* %30, %"struct.std::_Tuple_impl.6"** %2
  %31 = load i32, i32* @x.271
  %32 = load i32, i32* @y.272
  %33 = sub i32 %31, -328220175
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -328220175
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1494001079, i32 -208483263
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %2
  ret %"struct.std::_Tuple_impl.6"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %49, align 8
  %50 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %49, align 8
  %51 = bitcast %"struct.std::_Tuple_impl.5"* %50 to %"struct.std::_Tuple_impl.6"*
  store i32 1044350787, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm2EJiEEC2EOS0_(%"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"* dereferenceable(4)) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  store %"struct.std::_Tuple_impl.6"* %0, %"struct.std::_Tuple_impl.6"** %3, align 8
  store %"struct.std::_Tuple_impl.6"* %1, %"struct.std::_Tuple_impl.6"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.6"* %5 to %"struct.std::_Head_base"*
  %7 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm2EJiEE7_M_headERS0_(%"struct.std::_Tuple_impl.6"* dereferenceable(4) %7) #3
  %9 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %8) #3
  invoke void @_ZNSt10_Head_baseILm2EiLb0EEC2IiEEOT_(%"struct.std::_Head_base"* %6, i32* dereferenceable(4) %9)
          to label %10 unwind label %11

; <label>:10:                                     ; preds = %2
  ret void

; <label>:11:                                     ; preds = %2
  %12 = landingpad { i8*, i32 }
          catch i8* null
  %13 = extractvalue { i8*, i32 } %12, 0
  call void @__clang_call_terminate(i8* %13) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJiiEE7_M_headERS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.5"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 4
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.7"*
  %7 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm1EiLb0EE7_M_headERS0_(%"struct.std::_Head_base.7"* dereferenceable(4) %6) #3
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1EiLb0EEC2IiEEOT_(%"struct.std::_Head_base.7"*, i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.7"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Head_base.7"* %0, %"struct.std::_Head_base.7"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Head_base.7"*, %"struct.std::_Head_base.7"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.7", %"struct.std::_Head_base.7"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %6, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm2EJiEE7_M_headERS0_(%"struct.std::_Tuple_impl.6"* dereferenceable(4)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  store %"struct.std::_Tuple_impl.6"* %0, %"struct.std::_Tuple_impl.6"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.6"* %3 to %"struct.std::_Head_base"*
  %5 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm2EiLb0EE7_M_headERS0_(%"struct.std::_Head_base"* dereferenceable(4) %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm2EiLb0EE7_M_headERS0_(%"struct.std::_Head_base"* dereferenceable(4)) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.281
  %6 = load i32, i32* @y.282
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 301820319, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 301820319, label %18
    i32 465161546, label %26
    i32 1814250883, label %57
    i32 456719723, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 465161546, i32 456719723
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %27, align 8
  %28 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %28, i32 0, i32 0
  store i32* %29, i32** %2
  %30 = load i32, i32* @x.281
  %31 = load i32, i32* @y.282
  %32 = add i32 %30, 194175179
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 194175179
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1814250883, i32 456719723
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile i32*, i32** %2
  ret i32* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %60, align 8
  %61 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %61, i32 0, i32 0
  store i32 465161546, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm1EiLb0EE7_M_headERS0_(%"struct.std::_Head_base.7"* dereferenceable(4)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.7"*, align 8
  store %"struct.std::_Head_base.7"* %0, %"struct.std::_Head_base.7"** %2, align 8
  %3 = load %"struct.std::_Head_base.7"*, %"struct.std::_Head_base.7"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.7", %"struct.std::_Head_base.7"* %3, i32 0, i32 0
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm0EiLb0EE7_M_headERS0_(%"struct.std::_Head_base.8"* dereferenceable(4)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.8"*, align 8
  store %"struct.std::_Head_base.8"* %0, %"struct.std::_Head_base.8"** %2, align 8
  %3 = load %"struct.std::_Head_base.8"*, %"struct.std::_Head_base.8"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.8", %"struct.std::_Head_base.8"* %3, i32 0, i32 0
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt5tupleIJiiiEEEC2ES2_(%"class.std::move_iterator"*, %"class.std::tuple"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  store %"class.std::tuple"* %7, %"class.std::tuple"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::tuple"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.289
  %6 = load i32, i32* @y.290
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1934171591, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1934171591, label %18
    i32 629469434, label %38
    i32 -1732295845, label %58
    i32 1346788791, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 629469434, i32 1346788791
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %40 = alloca %"class.std::tuple"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %42 = load %"class.std::tuple"*, %"class.std::tuple"** %40, align 8
  %43 = load i32, i32* @x.289
  %44 = load i32, i32* @y.290
  %45 = add i32 %43, -444796655
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -444796655
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1732295845, i32 1346788791
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %61 = alloca %"class.std::tuple"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %60, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %60, align 8
  %63 = load %"class.std::tuple"*, %"class.std::tuple"** %61, align 8
  store i32 629469434, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.10"*, i64, %"class.std::allocator.11"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.10"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.11"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.11"* %2, %"class.std::allocator.11"** %6, align 8
  %9 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %6, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"class.std::allocator.11"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.10"* %9, i64 %12)
          to label %13 unwind label %56

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.291
  %15 = load i32, i32* @y.292
  %16 = add i32 %14, -375193595
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -375193595
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %119

; <label>:28:                                     ; preds = %13, %119
  %29 = load i32, i32* @x.291
  %30 = load i32, i32* @y.292
  %31 = sub i32 %29, -408068790
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -408068790
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  br i1 %53, label %55, label %119

; <label>:55:                                     ; preds = %28
  ret void

; <label>:56:                                     ; preds = %3
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %7, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #3
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i32, i32* @x.291
  %62 = load i32, i32* @y.292
  %63 = sub i32 %61, -1533781647
  %64 = sub i32 %63, 1
  %65 = add i32 %64, -1533781647
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %120

; <label>:87:                                     ; preds = %60, %120
  %88 = load i8*, i8** %7, align 8
  %89 = load i32, i32* %8, align 4
  %90 = insertvalue { i8*, i32 } undef, i8* %88, 0
  %91 = insertvalue { i8*, i32 } %90, i32 %89, 1
  %92 = load i32, i32* @x.291
  %93 = load i32, i32* @y.292
  %94 = sub i32 %92, 1776296023
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 1776296023
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %120

; <label>:118:                                    ; preds = %87
  resume { i8*, i32 } %91

; <label>:119:                                    ; preds = %28, %13
  br label %28

; <label>:120:                                    ; preds = %87, %60
  %121 = load i8*, i8** %7, align 8
  %122 = load i32, i32* %8, align 4
  %123 = insertvalue { i8*, i32 } undef, i8* %121, 0
  %124 = insertvalue { i8*, i32 } %123, i32 %122, 1
  br label %87
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE21_M_default_initializeEm(%"class.std::vector.9"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.9"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.9"*, %"class.std::vector.9"** %3, align 8
  %6 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  %12 = call dereferenceable(1) %"class.std::allocator.11"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.10"* %11) #3
  %13 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %9, i64 %10, %"class.std::allocator.11"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15, i32 0, i32 1
  store i32* %13, i32** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.10"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.10"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %2, align 8
  %5 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.10"* %5, i32* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %27) #3
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %29) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.11"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.11"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.11"* %1, %"class.std::allocator.11"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator.11"*
  %7 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.11"* %6, %"class.std::allocator.11"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.10"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.10"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.10"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 0
  store i32* %7, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 1
  store i32* %12, i32** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 2
  store i32* %19, i32** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.11"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.11"*, %"class.std::allocator.11"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.11"*, align 8
  %4 = alloca %"class.std::allocator.11"*, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %3, align 8
  store %"class.std::allocator.11"* %1, %"class.std::allocator.11"** %4, align 8
  %5 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %3, align 8
  %6 = bitcast %"class.std::allocator.11"* %5 to %"class.__gnu_cxx::new_allocator.12"*
  %7 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %4, align 8
  %8 = bitcast %"class.std::allocator.11"* %7 to %"class.__gnu_cxx::new_allocator.12"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.12"* %6, %"class.__gnu_cxx::new_allocator.12"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %1, %"class.__gnu_cxx::new_allocator.12"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.10"*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca %"struct.std::_Vector_base.10"*
  %7 = alloca i64*
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.307
  %11 = load i32, i32* @y.308
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 845968137, i32* %19
  %20 = alloca i32*
  br label %21

; <label>:21:                                     ; preds = %2, %183
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 845968137, label %24
    i32 -746803412, label %32
    i32 -935337968, label %55
    i32 2014832747, label %58
    i32 442146538, label %73
    i32 815753543, label %107
    i32 1128757720, label %109
    i32 -535056346, label %110
    i32 -1133289543, label %139
    i32 1160301429, label %167
    i32 -544389858, label %169
    i32 1671833679, label %175
    i32 1295380623, label %182
  ]

; <label>:23:                                     ; preds = %21
  br label %183

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -746803412, i32 -544389858
  store i32 %31, i32* %19
  br label %183

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.10"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %7
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %33, align 8
  %35 = load volatile i64*, i64** %7
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %33, align 8
  store %"struct.std::_Vector_base.10"* %36, %"struct.std::_Vector_base.10"** %6
  %37 = load volatile i64*, i64** %7
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %5
  %40 = load i32, i32* @x.307
  %41 = load i32, i32* @y.308
  %42 = sub i32 %40, 241172732
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 241172732
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -935337968, i32 -544389858
  store i32 %54, i32* %19
  br label %183

; <label>:55:                                     ; preds = %21
  %56 = load volatile i1, i1* %5
  %57 = select i1 %56, i32 2014832747, i32 1128757720
  store i32 %57, i32* %19
  br label %183

; <label>:58:                                     ; preds = %21
  %59 = load i32, i32* @x.307
  %60 = load i32, i32* @y.308
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 442146538, i32 1671833679
  store i32 %72, i32* %19
  br label %183

; <label>:73:                                     ; preds = %21
  %74 = load volatile %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %6
  %75 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %75 to %"class.std::allocator.11"*
  %77 = load volatile i64*, i64** %7
  %78 = load i64, i64* %77, align 8
  %79 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.11"* dereferenceable(1) %76, i64 %78)
  store i32* %79, i32** %4
  %80 = load i32, i32* @x.307
  %81 = load i32, i32* @y.308
  %82 = add i32 %80, -135407986
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, -135407986
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 815753543, i32 1671833679
  store i32 %106, i32* %19
  br label %183

; <label>:107:                                    ; preds = %21
  store i32 -535056346, i32* %19
  %108 = load volatile i32*, i32** %4
  store i32* %108, i32** %20
  br label %183

; <label>:109:                                    ; preds = %21
  store i32 -535056346, i32* %19
  store i32* null, i32** %20
  br label %183

; <label>:110:                                    ; preds = %21
  %111 = load i32*, i32** %20
  store i32* %111, i32** %3
  %112 = load i32, i32* @x.307
  %113 = load i32, i32* @y.308
  %114 = add i32 %112, -1974658666
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, -1974658666
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  %138 = select i1 %136, i32 -1133289543, i32 1295380623
  store i32 %138, i32* %19
  br label %183

; <label>:139:                                    ; preds = %21
  %140 = load i32, i32* @x.307
  %141 = load i32, i32* @y.308
  %142 = add i32 %140, 551593099
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, 551593099
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 false, true
  %153 = and i1 %150, false
  %154 = and i1 %148, %152
  %155 = and i1 %151, false
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 false, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  %166 = select i1 %164, i32 1160301429, i32 1295380623
  store i32 %166, i32* %19
  br label %183

; <label>:167:                                    ; preds = %21
  %168 = load volatile i32*, i32** %3
  ret i32* %168

; <label>:169:                                    ; preds = %21
  %170 = alloca %"struct.std::_Vector_base.10"*, align 8
  %171 = alloca i64, align 8
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %170, align 8
  store i64 %1, i64* %171, align 8
  %172 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %170, align 8
  %173 = load i64, i64* %171, align 8
  %174 = icmp ne i64 %173, 0
  store i32 -746803412, i32* %19
  br label %183

; <label>:175:                                    ; preds = %21
  %176 = load volatile %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %6
  %177 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %176, i32 0, i32 0
  %178 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %177 to %"class.std::allocator.11"*
  %179 = load volatile i64*, i64** %7
  %180 = load i64, i64* %179, align 8
  %181 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.11"* dereferenceable(1) %178, i64 %180)
  store i32 442146538, i32* %19
  br label %183

; <label>:182:                                    ; preds = %21
  store i32 -1133289543, i32* %19
  br label %183

; <label>:183:                                    ; preds = %182, %175, %169, %139, %110, %109, %107, %73, %58, %55, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.11"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.11"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %3, align 8
  %6 = bitcast %"class.std::allocator.11"* %5 to %"class.__gnu_cxx::new_allocator.12"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.12"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.12"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.12"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -1390437422, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %84
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1390437422, label %17
    i32 259551590, label %22
    i32 389677834, label %23
    i32 1060648902, label %51
    i32 -1925864495, label %71
    i32 -1892177123, label %73
  ]

; <label>:16:                                     ; preds = %14
  br label %84

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 259551590, i32 389677834
  store i32 %21, i32* %13
  br label %84

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.311
  %25 = load i32, i32* @y.312
  %26 = sub i32 %24, 28332277
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 28332277
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 1060648902, i32 -1892177123
  store i32 %50, i32* %13
  br label %84

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8
  %53 = mul i64 %52, 4
  %54 = call i8* @_Znwm(i64 %53)
  %55 = bitcast i8* %54 to i32*
  store i32* %55, i32** %4
  %56 = load i32, i32* @x.311
  %57 = load i32, i32* @y.312
  %58 = add i32 %56, 33720014
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 33720014
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -1925864495, i32 -1892177123
  store i32 %70, i32* %13
  br label %84

; <label>:71:                                     ; preds = %14
  %72 = load volatile i32*, i32** %4
  ret i32* %72

; <label>:73:                                     ; preds = %14
  %74 = load i64, i64* %8, align 8
  %75 = shl i64 %74, 4
  %76 = shl i64 %74, 4
  %77 = sub i64 0, 4
  %78 = add i64 %74, %77
  %79 = sub i64 %74, 4
  %80 = mul i64 %78, 4
  %81 = mul i64 %74, 4
  %82 = call i8* @_Znwm(i64 %81)
  %83 = bitcast i8* %82 to i32*
  store i32 1060648902, i32* %13
  br label %84

; <label>:84:                                     ; preds = %73, %51, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.12"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32*, i64, %"class.std::allocator.11"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.11"*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.11"* %2, %"class.std::allocator.11"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32* %7, i64 %8)
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.11"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.10"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.11"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.317
  %6 = load i32, i32* @y.318
  %7 = add i32 %5, 2009806381
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2009806381
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1534390754, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1534390754, label %19
    i32 -1570229234, label %27
    i32 891226736, label %58
    i32 695133261, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1570229234, i32 695133261
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.10"*, align 8
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %28, align 8
  %29 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30 to %"class.std::allocator.11"*
  store %"class.std::allocator.11"* %31, %"class.std::allocator.11"** %2
  %32 = load i32, i32* @x.317
  %33 = load i32, i32* @y.318
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 891226736, i32 695133261
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.11"*, %"class.std::allocator.11"** %2
  ret %"class.std::allocator.11"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.10"*, align 8
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %61, align 8
  %62 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %63 to %"class.std::allocator.11"*
  store i32 -1570229234, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32*, i64) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %6, i64 %7)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32*, i64) #0 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  store i32 0, i32* %5, align 4
  %8 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %6, i64 %7, i32* dereferenceable(4) %5)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 -1328150366, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %149
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1328150366, label %16
    i32 345428519, label %20
    i32 -1410456581, label %23
    i32 -727200764, label %51
    i32 -1374871312, label %87
    i32 1505903278, label %88
    i32 -821526547, label %90
  ]

; <label>:15:                                     ; preds = %13
  br label %149

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 345428519, i32 1505903278
  store i32 %19, i32* %12
  br label %149

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* %7, align 4
  %22 = load i32*, i32** %4, align 8
  store i32 %21, i32* %22, align 4
  store i32 -1410456581, i32* %12
  br label %149

; <label>:23:                                     ; preds = %13
  %24 = load i32, i32* @x.325
  %25 = load i32, i32* @y.326
  %26 = add i32 %24, 944645924
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 944645924
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -727200764, i32 -821526547
  store i32 %50, i32* %12
  br label %149

; <label>:51:                                     ; preds = %13
  %52 = load i64, i64* %8, align 8
  %53 = sub i64 0, %52
  %54 = sub i64 0, -1
  %55 = add i64 %53, %54
  %56 = sub i64 0, %55
  %57 = add i64 %52, -1
  store i64 %56, i64* %8, align 8
  %58 = load i32*, i32** %4, align 8
  %59 = getelementptr inbounds i32, i32* %58, i32 1
  store i32* %59, i32** %4, align 8
  %60 = load i32, i32* @x.325
  %61 = load i32, i32* @y.326
  %62 = sub i32 %60, 619071136
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 619071136
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -1374871312, i32 -821526547
  store i32 %86, i32* %12
  br label %149

; <label>:87:                                     ; preds = %13
  store i32 -1328150366, i32* %12
  br label %149

; <label>:88:                                     ; preds = %13
  %89 = load i32*, i32** %4, align 8
  ret i32* %89

; <label>:90:                                     ; preds = %13
  %91 = load i64, i64* %8, align 8
  %92 = add i64 0, 6603524189374987531
  %93 = sub i64 %92, %91
  %94 = sub i64 %93, 6603524189374987531
  %95 = sub i64 0, %91
  %96 = sub i64 %94, -3679341633360512280
  %97 = add i64 %96, -1
  %98 = add i64 %97, -3679341633360512280
  %99 = add i64 %94, -1
  %100 = add i64 %91, 2115141839699699323
  %101 = sub i64 %100, -1
  %102 = sub i64 %101, 2115141839699699323
  %103 = sub i64 %91, -1
  %104 = mul i64 %102, -1
  %105 = shl i64 %91, -1
  %106 = add i64 %91, -7225832198129783890
  %107 = sub i64 %106, -1
  %108 = sub i64 %107, -7225832198129783890
  %109 = sub i64 %91, -1
  %110 = mul i64 %108, -1
  %111 = add i64 %91, 2119640528867103074
  %112 = sub i64 %111, -1
  %113 = sub i64 %112, 2119640528867103074
  %114 = sub i64 %91, -1
  %115 = mul i64 %113, -1
  %116 = add i64 0, -8407887766993644075
  %117 = sub i64 %116, %91
  %118 = sub i64 %117, -8407887766993644075
  %119 = sub i64 0, %91
  %120 = sub i64 0, -1
  %121 = sub i64 %118, %120
  %122 = add i64 %118, -1
  %123 = shl i64 %91, -1
  %124 = shl i64 %91, -1
  %125 = add i64 0, 670950543707412685
  %126 = sub i64 %125, %91
  %127 = sub i64 %126, 670950543707412685
  %128 = sub i64 0, %91
  %129 = add i64 %127, 3528514922247974912
  %130 = add i64 %129, -1
  %131 = sub i64 %130, 3528514922247974912
  %132 = add i64 %127, -1
  %133 = add i64 0, -3673508077594743762
  %134 = sub i64 %133, %91
  %135 = sub i64 %134, -3673508077594743762
  %136 = sub i64 0, %91
  %137 = sub i64 0, %135
  %138 = sub i64 0, -1
  %139 = add i64 %137, %138
  %140 = sub i64 0, %139
  %141 = add i64 %135, -1
  %142 = sub i64 0, %91
  %143 = sub i64 0, -1
  %144 = add i64 %142, %143
  %145 = sub i64 0, %144
  %146 = add i64 %91, -1
  store i64 %145, i64* %8, align 8
  %147 = load i32*, i32** %4, align 8
  %148 = getelementptr inbounds i32, i32* %147, i32 1
  store i32* %148, i32** %4, align 8
  store i32 -727200764, i32* %12
  br label %149

; <label>:149:                                    ; preds = %90, %87, %51, %23, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #5 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.10"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base.10"*
  %6 = alloca %"struct.std::_Vector_base.10"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %6, align 8
  store %"struct.std::_Vector_base.10"* %9, %"struct.std::_Vector_base.10"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 828409139, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %59
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 828409139, label %15
    i32 427108281, label %19
    i32 1948597195, label %25
    i32 2075590277, label %41
    i32 -944648532, label %57
    i32 -656003802, label %58
  ]

; <label>:14:                                     ; preds = %12
  br label %59

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 427108281, i32 1948597195
  store i32 %18, i32* %11
  br label %59

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.11"*
  %23 = load i32*, i32** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.11"* dereferenceable(1) %22, i32* %23, i64 %24)
  store i32 1948597195, i32* %11
  br label %59

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.331
  %27 = load i32, i32* @y.332
  %28 = add i32 %26, 850485373
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, 850485373
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 2075590277, i32 -656003802
  store i32 %40, i32* %11
  br label %59

; <label>:41:                                     ; preds = %12
  %42 = load i32, i32* @x.331
  %43 = load i32, i32* @y.332
  %44 = sub i32 %42, -1504527395
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1504527395
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -944648532, i32 -656003802
  store i32 %56, i32* %11
  br label %59

; <label>:57:                                     ; preds = %12
  ret void

; <label>:58:                                     ; preds = %12
  store i32 2075590277, i32* %11
  br label %59

; <label>:59:                                     ; preds = %58, %41, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.11"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.333
  %7 = load i32, i32* @y.334
  %8 = add i32 %6, 1690734566
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1690734566
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1472316945, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1472316945, label %20
    i32 -982115777, label %40
    i32 97277832, label %63
    i32 1555821031, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -982115777, i32 1555821031
  store i32 %39, i32* %16
  br label %72

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.11"*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %41, align 8
  store i32* %1, i32** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %41, align 8
  %45 = bitcast %"class.std::allocator.11"* %44 to %"class.__gnu_cxx::new_allocator.12"*
  %46 = load i32*, i32** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.12"* %45, i32* %46, i64 %47)
  %48 = load i32, i32* @x.333
  %49 = load i32, i32* @y.334
  %50 = add i32 %48, -1091989772
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1091989772
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 97277832, i32 1555821031
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.11"*, align 8
  %66 = alloca i32*, align 8
  %67 = alloca i64, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %65, align 8
  store i32* %1, i32** %66, align 8
  store i64 %2, i64* %67, align 8
  %68 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %65, align 8
  %69 = bitcast %"class.std::allocator.11"* %68 to %"class.__gnu_cxx::new_allocator.12"*
  %70 = load i32*, i32** %66, align 8
  %71 = load i64, i64* %67, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.12"* %69, i32* %70, i64 %71)
  store i32 -982115777, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.12"*, i32*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.335
  %7 = load i32, i32* @y.336
  %8 = add i32 %6, 1869845199
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1869845199
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1351037213, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1351037213, label %20
    i32 1268351455, label %28
    i32 851471620, label %50
    i32 -608424665, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1268351455, i32 -608424665
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %29, align 8
  store i32* %1, i32** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %29, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = bitcast i32* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.335
  %36 = load i32, i32* @y.336
  %37 = add i32 %35, 423664591
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 423664591
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 851471620, i32 -608424665
  store i32 %49, i32* %16
  br label %58

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  %53 = alloca i32*, align 8
  %54 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %52, align 8
  store i32* %1, i32** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %52, align 8
  %56 = load i32*, i32** %53, align 8
  %57 = bitcast i32* %56 to i8*
  call void @_ZdlPv(i8* %57) #3
  store i32 1268351455, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.11"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.11"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.11"* %2, %"class.std::allocator.11"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.341
  %6 = load i32, i32* @y.342
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2142963912, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2142963912, label %18
    i32 -403499268, label %38
    i32 1430345659, label %68
    i32 -1637723486, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -403499268, i32 -1637723486
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca i32*, align 8
  %40 = alloca i32*, align 8
  store i32* %0, i32** %39, align 8
  store i32* %1, i32** %40, align 8
  %41 = load i32, i32* @x.341
  %42 = load i32, i32* @y.342
  %43 = add i32 %41, 1782636722
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1782636722
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1430345659, i32 -1637723486
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca i32*, align 8
  %71 = alloca i32*, align 8
  store i32* %0, i32** %70, align 8
  store i32* %1, i32** %71, align 8
  store i32 -403499268, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EEC2Ev(%"struct.std::_Vector_base.15"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.343
  %5 = load i32, i32* @y.344
  %6 = sub i32 %4, -625932124
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -625932124
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -436474112, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -436474112, label %18
    i32 626595327, label %26
    i32 1785323031, label %57
    i32 -1351503538, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 626595327, i32 -1351503538
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %27, align 8
  %28 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.343
  %31 = load i32, i32* @y.344
  %32 = sub i32 %30, 1436577259
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1436577259
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1785323031, i32 -1351503538
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %59, align 8
  %60 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %60, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %61)
  store i32 626595327, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %3 to %"class.std::allocator.16"*
  call void @_ZNSaISt5tupleIJxiiEEEC2Ev(%"class.std::allocator.16"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5tupleIJxiiEEEC2Ev(%"class.std::allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %2, align 8
  %3 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %2, align 8
  %4 = bitcast %"class.std::allocator.16"* %3 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEEC2Ev(%"class.__gnu_cxx::new_allocator.17"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEEC2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.349
  %5 = load i32, i32* @y.350
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1623045131, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %71
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1623045131, label %17
    i32 -1791359664, label %37
    i32 1075840107, label %67
    i32 -201005344, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %71

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1791359664, i32 -201005344
  store i32 %36, i32* %13
  br label %71

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %38, align 8
  %40 = load i32, i32* @x.349
  %41 = load i32, i32* @y.350
  %42 = add i32 %40, 2012017350
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 2012017350
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1075840107, i32 -201005344
  store i32 %66, i32* %13
  br label %71

; <label>:67:                                     ; preds = %14
  ret void

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %69, align 8
  store i32 -1791359664, i32* %13
  br label %71

; <label>:71:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5tupleIJxiiEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.19"*, %"class.std::tuple.19"*, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::tuple.19"*, align 8
  %5 = alloca %"class.std::tuple.19"*, align 8
  %6 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %4, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %5, align 8
  store %"class.std::allocator.16"* %2, %"class.std::allocator.16"** %6, align 8
  %7 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  %8 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %5, align 8
  call void @_ZSt8_DestroyIPSt5tupleIJxiiEEEvT_S3_(%"class.std::tuple.19"* %7, %"class.std::tuple.19"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %2, align 8
  %3 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %4 to %"class.std::allocator.16"*
  ret %"class.std::allocator.16"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EED2Ev(%"struct.std::_Vector_base.15"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.15"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %2, align 8
  %5 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %13, align 8
  %15 = ptrtoint %"class.std::tuple.19"* %11 to i64
  %16 = ptrtoint %"class.std::tuple.19"* %14 to i64
  %17 = add i64 %15, -7097016733052922254
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -7097016733052922254
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 16
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.15"* %5, %"class.std::tuple.19"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5tupleIJxiiEEEvT_S3_(%"class.std::tuple.19"*, %"class.std::tuple.19"*) #0 comdat {
  %3 = alloca %"class.std::tuple.19"*, align 8
  %4 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %3, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %4, align 8
  %5 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %3, align 8
  %6 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxiiEEEEvT_S5_(%"class.std::tuple.19"* %5, %"class.std::tuple.19"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt5tupleIJxiiEEEEvT_S5_(%"class.std::tuple.19"*, %"class.std::tuple.19"*) #5 comdat align 2 {
  %3 = alloca %"class.std::tuple.19"*, align 8
  %4 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %3, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.15"*, %"class.std::tuple.19"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.15"*
  %6 = alloca i64*
  %7 = alloca %"class.std::tuple.19"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.361
  %11 = load i32, i32* @y.362
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1297153243, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %162
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1297153243, label %23
    i32 -881058493, label %43
    i32 1565361590, label %80
    i32 -954855847, label %83
    i32 -581205647, label %110
    i32 -562105630, label %145
    i32 -1279287747, label %146
    i32 1182163407, label %147
    i32 -552271656, label %154
  ]

; <label>:22:                                     ; preds = %20
  br label %162

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -881058493, i32 1182163407
  store i32 %42, i32* %19
  br label %162

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.15"*, align 8
  %45 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"** %45, %"class.std::tuple.19"*** %7
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %44, align 8
  %47 = load volatile %"class.std::tuple.19"**, %"class.std::tuple.19"*** %7
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %47, align 8
  %48 = load volatile i64*, i64** %6
  store i64 %2, i64* %48, align 8
  %49 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %44, align 8
  store %"struct.std::_Vector_base.15"* %49, %"struct.std::_Vector_base.15"** %5
  %50 = load volatile %"class.std::tuple.19"**, %"class.std::tuple.19"*** %7
  %51 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %50, align 8
  %52 = icmp ne %"class.std::tuple.19"* %51, null
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.361
  %54 = load i32, i32* @y.362
  %55 = add i32 %53, -1773504244
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -1773504244
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1565361590, i32 1182163407
  store i32 %79, i32* %19
  br label %162

; <label>:80:                                     ; preds = %20
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 -954855847, i32 -1279287747
  store i32 %82, i32* %19
  br label %162

; <label>:83:                                     ; preds = %20
  %84 = load i32, i32* @x.361
  %85 = load i32, i32* @y.362
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 -581205647, i32 -552271656
  store i32 %109, i32* %19
  br label %162

; <label>:110:                                    ; preds = %20
  %111 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %5
  %112 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %111, i32 0, i32 0
  %113 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %112 to %"class.std::allocator.16"*
  %114 = load volatile %"class.std::tuple.19"**, %"class.std::tuple.19"*** %7
  %115 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %114, align 8
  %116 = load volatile i64*, i64** %6
  %117 = load i64, i64* %116, align 8
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE10deallocateERS2_PS1_m(%"class.std::allocator.16"* dereferenceable(1) %113, %"class.std::tuple.19"* %115, i64 %117)
  %118 = load i32, i32* @x.361
  %119 = load i32, i32* @y.362
  %120 = sub i32 %118, 70661227
  %121 = sub i32 %120, 1
  %122 = add i32 %121, 70661227
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 -562105630, i32 -552271656
  store i32 %144, i32* %19
  br label %162

; <label>:145:                                    ; preds = %20
  store i32 -1279287747, i32* %19
  br label %162

; <label>:146:                                    ; preds = %20
  ret void

; <label>:147:                                    ; preds = %20
  %148 = alloca %"struct.std::_Vector_base.15"*, align 8
  %149 = alloca %"class.std::tuple.19"*, align 8
  %150 = alloca i64, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %148, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %149, align 8
  store i64 %2, i64* %150, align 8
  %151 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %148, align 8
  %152 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %149, align 8
  %153 = icmp ne %"class.std::tuple.19"* %152, null
  store i32 -881058493, i32* %19
  br label %162

; <label>:154:                                    ; preds = %20
  %155 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %5
  %156 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %155, i32 0, i32 0
  %157 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %156 to %"class.std::allocator.16"*
  %158 = load volatile %"class.std::tuple.19"**, %"class.std::tuple.19"*** %7
  %159 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %158, align 8
  %160 = load volatile i64*, i64** %6
  %161 = load i64, i64* %160, align 8
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE10deallocateERS2_PS1_m(%"class.std::allocator.16"* dereferenceable(1) %157, %"class.std::tuple.19"* %159, i64 %161)
  store i32 -581205647, i32* %19
  br label %162

; <label>:162:                                    ; preds = %154, %147, %145, %110, %83, %80, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %3 to %"class.std::allocator.16"*
  call void @_ZNSaISt5tupleIJxiiEEED2Ev(%"class.std::allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE10deallocateERS2_PS1_m(%"class.std::allocator.16"* dereferenceable(1), %"class.std::tuple.19"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.16"*, align 8
  %5 = alloca %"class.std::tuple.19"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %4, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %4, align 8
  %8 = bitcast %"class.std::allocator.16"* %7 to %"class.__gnu_cxx::new_allocator.17"*
  %9 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.17"* %8, %"class.std::tuple.19"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.17"*, %"class.std::tuple.19"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.367
  %7 = load i32, i32* @y.368
  %8 = sub i32 %6, -1575209824
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1575209824
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1844665674, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1844665674, label %20
    i32 1141216611, label %28
    i32 -1127031098, label %50
    i32 1834855055, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1141216611, i32 1834855055
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %30 = alloca %"class.std::tuple.19"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %29, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %29, align 8
  %33 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %30, align 8
  %34 = bitcast %"class.std::tuple.19"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.367
  %36 = load i32, i32* @y.368
  %37 = sub i32 %35, 1140076287
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 1140076287
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1127031098, i32 1834855055
  store i32 %49, i32* %16
  br label %58

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %53 = alloca %"class.std::tuple.19"*, align 8
  %54 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %52, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %52, align 8
  %56 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %53, align 8
  %57 = bitcast %"class.std::tuple.19"* %56 to i8*
  call void @_ZdlPv(i8* %57) #3
  store i32 1141216611, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5tupleIJxiiEEED2Ev(%"class.std::allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.369
  %5 = load i32, i32* @y.370
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 2059569182, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2059569182, label %17
    i32 1439804947, label %37
    i32 -1521964757, label %68
    i32 2119782398, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1439804947, i32 2119782398
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %38, align 8
  %39 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %38, align 8
  %40 = bitcast %"class.std::allocator.16"* %39 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEED2Ev(%"class.__gnu_cxx::new_allocator.17"* %40) #3
  %41 = load i32, i32* @x.369
  %42 = load i32, i32* @y.370
  %43 = add i32 %41, 3493677
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 3493677
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1521964757, i32 2119782398
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %70, align 8
  %71 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %70, align 8
  %72 = bitcast %"class.std::allocator.16"* %71 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEED2Ev(%"class.__gnu_cxx::new_allocator.17"* %72) #3
  store i32 1439804947, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEED2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.14"* @_ZSt4moveIRSt6vectorISt5tupleIJxiiEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.14"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %2, align 8
  %3 = load %"class.std::vector.14"*, %"class.std::vector.14"** %2, align 8
  ret %"class.std::vector.14"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EEC2EOS3_(%"class.std::vector.14"*, %"class.std::vector.14"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.375
  %6 = load i32, i32* @y.376
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 431001085, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 431001085, label %18
    i32 -1848197739, label %38
    i32 874624758, label %61
    i32 1006275843, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1848197739, i32 1006275843
  store i32 %37, i32* %14
  br label %70

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.14"*, align 8
  %40 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %39, align 8
  store %"class.std::vector.14"* %1, %"class.std::vector.14"** %40, align 8
  %41 = load %"class.std::vector.14"*, %"class.std::vector.14"** %39, align 8
  %42 = bitcast %"class.std::vector.14"* %41 to %"struct.std::_Vector_base.15"*
  %43 = load %"class.std::vector.14"*, %"class.std::vector.14"** %40, align 8
  %44 = call dereferenceable(24) %"class.std::vector.14"* @_ZSt4moveIRSt6vectorISt5tupleIJxiiEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.14"* dereferenceable(24) %43) #3
  %45 = bitcast %"class.std::vector.14"* %44 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.15"* %42, %"struct.std::_Vector_base.15"* dereferenceable(24) %45) #3
  %46 = load i32, i32* @x.375
  %47 = load i32, i32* @y.376
  %48 = sub i32 %46, 793853421
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 793853421
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 874624758, i32 1006275843
  store i32 %60, i32* %14
  br label %70

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca %"class.std::vector.14"*, align 8
  %64 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %63, align 8
  store %"class.std::vector.14"* %1, %"class.std::vector.14"** %64, align 8
  %65 = load %"class.std::vector.14"*, %"class.std::vector.14"** %63, align 8
  %66 = bitcast %"class.std::vector.14"* %65 to %"struct.std::_Vector_base.15"*
  %67 = load %"class.std::vector.14"*, %"class.std::vector.14"** %64, align 8
  %68 = call dereferenceable(24) %"class.std::vector.14"* @_ZSt4moveIRSt6vectorISt5tupleIJxiiEESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.14"* dereferenceable(24) %67) #3
  %69 = bitcast %"class.std::vector.14"* %68 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.15"* %66, %"struct.std::_Vector_base.15"* dereferenceable(24) %69) #3
  store i32 -1848197739, i32* %14
  br label %70

; <label>:70:                                     ; preds = %62, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"class.std::tuple.19"*, %"class.std::tuple.19"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %5 = alloca %"struct.std::greater", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %9 = alloca %"struct.std::greater", align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %4, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %7 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt5tupleIJxiiEEEEENS0_15_Iter_comp_iterIT_EES7_()
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %6, i32 0, i32 0
  %18 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %7, i32 0, i32 0
  %20 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %19, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_T0_(%"class.std::tuple.19"* %18, %"class.std::tuple.19"* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE5beginEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %3 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  %4 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %5 = bitcast %"class.std::vector.14"* %4 to %"struct.std::_Vector_base.15"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"* %2, %"class.std::tuple.19"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %2, i32 0, i32 0
  %9 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %8, align 8
  ret %"class.std::tuple.19"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE3endEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %3 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  %4 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %5 = bitcast %"class.std::vector.14"* %4 to %"struct.std::_Vector_base.15"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"* %2, %"class.std::tuple.19"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %2, i32 0, i32 0
  %9 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %8, align 8
  ret %"class.std::tuple.19"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.15"*, align 8
  %4 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %3, align 8
  store %"struct.std::_Vector_base.15"* %1, %"struct.std::_Vector_base.15"** %4, align 8
  %5 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.16"* @_ZSt4moveIRSaISt5tupleIJxiiEEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.16"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %6, %"class.std::allocator.16"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %10, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.16"* @_ZSt4moveIRSaISt5tupleIJxiiEEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.16"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %2, align 8
  %3 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %2, align 8
  ret %"class.std::allocator.16"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, %"class.std::allocator.16"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.387
  %6 = load i32, i32* @y.388
  %7 = sub i32 %5, -382047599
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -382047599
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 745536535, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 745536535, label %19
    i32 1313936076, label %27
    i32 599924761, label %64
    i32 -806481117, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1313936076, i32 -806481117
  store i32 %26, i32* %15
  br label %75

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, align 8
  %29 = alloca %"class.std::allocator.16"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %28, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %29, align 8
  %30 = load %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %30 to %"class.std::allocator.16"*
  %32 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %29, align 8
  %33 = call dereferenceable(1) %"class.std::allocator.16"* @_ZSt4moveIRSaISt5tupleIJxiiEEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.16"* dereferenceable(1) %32) #3
  call void @_ZNSaISt5tupleIJxiiEEEC2ERKS1_(%"class.std::allocator.16"* %31, %"class.std::allocator.16"* dereferenceable(1) %33) #3
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %30, i32 0, i32 0
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %30, i32 0, i32 1
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %35, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %30, i32 0, i32 2
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %36, align 8
  %37 = load i32, i32* @x.387
  %38 = load i32, i32* @y.388
  %39 = sub i32 %37, -1199467994
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1199467994
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 599924761, i32 -806481117
  store i32 %63, i32* %15
  br label %75

; <label>:64:                                     ; preds = %16
  ret void

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, align 8
  %67 = alloca %"class.std::allocator.16"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %66, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %67, align 8
  %68 = load %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %66, align 8
  %69 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %68 to %"class.std::allocator.16"*
  %70 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %67, align 8
  %71 = call dereferenceable(1) %"class.std::allocator.16"* @_ZSt4moveIRSaISt5tupleIJxiiEEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.16"* dereferenceable(1) %70) #3
  call void @_ZNSaISt5tupleIJxiiEEEC2ERKS1_(%"class.std::allocator.16"* %69, %"class.std::allocator.16"* dereferenceable(1) %71) #3
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %68, i32 0, i32 0
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %72, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %68, i32 0, i32 1
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %68, i32 0, i32 2
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %74, align 8
  store i32 1313936076, i32* %15
  br label %75

; <label>:75:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt5tupleIJxiiEEEvRT_S4_(%"class.std::tuple.19"** dereferenceable(8) %6, %"class.std::tuple.19"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt5tupleIJxiiEEEvRT_S4_(%"class.std::tuple.19"** dereferenceable(8) %9, %"class.std::tuple.19"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt5tupleIJxiiEEEvRT_S4_(%"class.std::tuple.19"** dereferenceable(8) %12, %"class.std::tuple.19"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5tupleIJxiiEEEC2ERKS1_(%"class.std::allocator.16"*, %"class.std::allocator.16"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.16"*, align 8
  %4 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %3, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %4, align 8
  %5 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %3, align 8
  %6 = bitcast %"class.std::allocator.16"* %5 to %"class.__gnu_cxx::new_allocator.17"*
  %7 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %4, align 8
  %8 = bitcast %"class.std::allocator.16"* %7 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.17"* %6, %"class.__gnu_cxx::new_allocator.17"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %1, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt5tupleIJxiiEEEvRT_S4_(%"class.std::tuple.19"** dereferenceable(8), %"class.std::tuple.19"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.std::tuple.19"**, align 8
  %4 = alloca %"class.std::tuple.19"**, align 8
  %5 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"** %0, %"class.std::tuple.19"*** %3, align 8
  store %"class.std::tuple.19"** %1, %"class.std::tuple.19"*** %4, align 8
  %6 = load %"class.std::tuple.19"**, %"class.std::tuple.19"*** %3, align 8
  %7 = call dereferenceable(8) %"class.std::tuple.19"** @_ZSt4moveIRPSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::tuple.19"** dereferenceable(8) %6) #3
  %8 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  store %"class.std::tuple.19"* %8, %"class.std::tuple.19"** %5, align 8
  %9 = load %"class.std::tuple.19"**, %"class.std::tuple.19"*** %4, align 8
  %10 = call dereferenceable(8) %"class.std::tuple.19"** @_ZSt4moveIRPSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::tuple.19"** dereferenceable(8) %9) #3
  %11 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %10, align 8
  %12 = load %"class.std::tuple.19"**, %"class.std::tuple.19"*** %3, align 8
  store %"class.std::tuple.19"* %11, %"class.std::tuple.19"** %12, align 8
  %13 = call dereferenceable(8) %"class.std::tuple.19"** @_ZSt4moveIRPSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::tuple.19"** dereferenceable(8) %5) #3
  %14 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %13, align 8
  %15 = load %"class.std::tuple.19"**, %"class.std::tuple.19"*** %4, align 8
  store %"class.std::tuple.19"* %14, %"class.std::tuple.19"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple.19"** @_ZSt4moveIRPSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::tuple.19"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"class.std::tuple.19"**, align 8
  store %"class.std::tuple.19"** %0, %"class.std::tuple.19"*** %2, align 8
  %3 = load %"class.std::tuple.19"**, %"class.std::tuple.19"*** %2, align 8
  ret %"class.std::tuple.19"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_T0_(%"class.std::tuple.19"*, %"class.std::tuple.19"*) #0 comdat {
  %3 = alloca i64
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::tuple.19", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %12 = alloca %"class.std::tuple.19", align 8
  %13 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %4, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %15, align 8
  %16 = call i64 @_ZN9__gnu_cxxmiIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %4) #3
  store i64 %16, i64* %3
  %17 = alloca i32
  store i32 1268905605, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %216
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1268905605, label %21
    i32 -1565241487, label %25
    i32 43812202, label %41
    i32 -806499286, label %69
    i32 -1316968824, label %70
    i32 -1399056003, label %98
    i32 -695637002, label %120
    i32 1810449931, label %121
    i32 -2129823136, label %144
    i32 -2142969653, label %160
    i32 -1220904826, label %187
    i32 -1286748186, label %188
    i32 -2032469901, label %194
    i32 -91367783, label %195
    i32 1392154080, label %196
    i32 869669459, label %215
  ]

; <label>:20:                                     ; preds = %18
  br label %216

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %3
  %23 = icmp slt i64 %22, 2
  %24 = select i1 %23, i32 -1565241487, i32 -1316968824
  store i32 %24, i32* %17
  br label %216

; <label>:25:                                     ; preds = %18
  %26 = load i32, i32* @x.399
  %27 = load i32, i32* @y.400
  %28 = sub i32 %26, 57293596
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 57293596
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 43812202, i32 -91367783
  store i32 %40, i32* %17
  br label %216

; <label>:41:                                     ; preds = %18
  %42 = load i32, i32* @x.399
  %43 = load i32, i32* @y.400
  %44 = sub i32 %42, 1443134576
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1443134576
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -806499286, i32 -91367783
  store i32 %68, i32* %17
  br label %216

; <label>:69:                                     ; preds = %18
  store i32 -2032469901, i32* %17
  br label %216

; <label>:70:                                     ; preds = %18
  %71 = load i32, i32* @x.399
  %72 = load i32, i32* @y.400
  %73 = sub i32 %71, -336241420
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -336241420
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -1399056003, i32 1392154080
  store i32 %97, i32* %17
  br label %216

; <label>:98:                                     ; preds = %18
  %99 = call i64 @_ZN9__gnu_cxxmiIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %4) #3
  store i64 %99, i64* %7, align 8
  %100 = load i64, i64* %7, align 8
  %101 = sub i64 0, 2
  %102 = add i64 %100, %101
  %103 = sub nsw i64 %100, 2
  %104 = sdiv i64 %102, 2
  store i64 %104, i64* %8, align 8
  %105 = load i32, i32* @x.399
  %106 = load i32, i32* @y.400
  %107 = sub i32 %105, -243162165
  %108 = sub i32 %107, 1
  %109 = add i32 %108, -243162165
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  %119 = select i1 %117, i32 -695637002, i32 1392154080
  store i32 %119, i32* %17
  br label %216

; <label>:120:                                    ; preds = %18
  store i32 1810449931, i32* %17
  br label %216

; <label>:121:                                    ; preds = %18
  %122 = load i64, i64* %8, align 8
  %123 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %4, i64 %122) #3
  %124 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %10, i32 0, i32 0
  store %"class.std::tuple.19"* %123, %"class.std::tuple.19"** %124, align 8
  %125 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %10) #3
  %126 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %125) #3
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %9, %"class.std::tuple.19"* dereferenceable(16) %126) #3
  %127 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %11 to i8*
  %128 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %128, i64 8, i32 8, i1 false)
  %129 = load i64, i64* %8, align 8
  %130 = load i64, i64* %7, align 8
  %131 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %9) #3
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %12, %"class.std::tuple.19"* dereferenceable(16) %131) #3
  %132 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %13 to i8*
  %133 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %133, i64 1, i32 1, i1 false)
  %134 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %11, i32 0, i32 0
  %135 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %134, align 8
  %136 = bitcast %"class.std::tuple.19"* %12 to { i64, i64 }*
  %137 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %136, i32 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %136, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"class.std::tuple.19"* %135, i64 %129, i64 %130, i64 %138, i64 %140)
  %141 = load i64, i64* %8, align 8
  %142 = icmp eq i64 %141, 0
  %143 = select i1 %142, i32 -2129823136, i32 -1286748186
  store i32 %143, i32* %17
  br label %216

; <label>:144:                                    ; preds = %18
  %145 = load i32, i32* @x.399
  %146 = load i32, i32* @y.400
  %147 = add i32 %145, -1315331526
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, -1315331526
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 -2142969653, i32 869669459
  store i32 %159, i32* %17
  br label %216

; <label>:160:                                    ; preds = %18
  %161 = load i32, i32* @x.399
  %162 = load i32, i32* @y.400
  %163 = sub i32 0, 1
  %164 = add i32 %161, %163
  %165 = sub i32 %161, 1
  %166 = mul i32 %161, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %162, 10
  %170 = xor i1 %168, true
  %171 = xor i1 %169, true
  %172 = xor i1 false, true
  %173 = and i1 %170, false
  %174 = and i1 %168, %172
  %175 = and i1 %171, false
  %176 = and i1 %169, %172
  %177 = or i1 %173, %174
  %178 = or i1 %175, %176
  %179 = xor i1 %177, %178
  %180 = or i1 %170, %171
  %181 = xor i1 %180, true
  %182 = or i1 false, %172
  %183 = and i1 %181, %182
  %184 = or i1 %179, %183
  %185 = or i1 %168, %169
  %186 = select i1 %184, i32 -1220904826, i32 869669459
  store i32 %186, i32* %17
  br label %216

; <label>:187:                                    ; preds = %18
  store i32 -2032469901, i32* %17
  br label %216

; <label>:188:                                    ; preds = %18
  %189 = load i64, i64* %8, align 8
  %190 = sub i64 %189, -3035374824657686443
  %191 = add i64 %190, -1
  %192 = add i64 %191, -3035374824657686443
  %193 = add nsw i64 %189, -1
  store i64 %192, i64* %8, align 8
  store i32 1810449931, i32* %17
  br label %216

; <label>:194:                                    ; preds = %18
  ret void

; <label>:195:                                    ; preds = %18
  store i32 43812202, i32* %17
  br label %216

; <label>:196:                                    ; preds = %18
  %197 = call i64 @_ZN9__gnu_cxxmiIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %4) #3
  store i64 %197, i64* %7, align 8
  %198 = load i64, i64* %7, align 8
  %199 = sub i64 0, 2
  %200 = add i64 %198, %199
  %201 = sub i64 %198, 2
  %202 = mul i64 %200, 2
  %203 = sub i64 0, -557471337871082913
  %204 = sub i64 %203, %198
  %205 = add i64 %204, -557471337871082913
  %206 = sub i64 0, %198
  %207 = add i64 %205, -9106005188830580244
  %208 = add i64 %207, 2
  %209 = sub i64 %208, -9106005188830580244
  %210 = add i64 %205, 2
  %211 = sub i64 0, 2
  %212 = add i64 %198, %211
  %213 = sub nsw i64 %198, 2
  %214 = sdiv i64 %212, 2
  store i64 %214, i64* %8, align 8
  store i32 -1399056003, i32* %17
  br label %216

; <label>:215:                                    ; preds = %18
  store i32 -2142969653, i32* %17
  br label %216

; <label>:216:                                    ; preds = %215, %196, %195, %188, %187, %160, %144, %121, %120, %98, %70, %69, %41, %25, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt5tupleIJxiiEEEEENS0_15_Iter_comp_iterIT_EES7_() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %2 = alloca %"struct.std::greater", align 1
  %3 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt5tupleIJxiiEEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.403
  %7 = load i32, i32* @y.404
  %8 = add i32 %6, 527793489
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 527793489
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1155004539, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %115
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1155004539, label %20
    i32 1621948100, label %40
    i32 -1328529335, label %70
    i32 1901156135, label %72
  ]

; <label>:19:                                     ; preds = %17
  br label %115

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1621948100, i32 1901156135
  store i32 %39, i32* %16
  br label %115

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %1, %"class.__gnu_cxx::__normal_iterator.32"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %41, align 8
  %44 = call dereferenceable(8) %"class.std::tuple.19"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %43) #3
  %45 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %42, align 8
  %47 = call dereferenceable(8) %"class.std::tuple.19"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %46) #3
  %48 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %47, align 8
  %49 = ptrtoint %"class.std::tuple.19"* %45 to i64
  %50 = ptrtoint %"class.std::tuple.19"* %48 to i64
  %51 = sub i64 0, %50
  %52 = add i64 %49, %51
  %53 = sub i64 %49, %50
  %54 = sdiv exact i64 %52, 16
  store i64 %54, i64* %3
  %55 = load i32, i32* @x.403
  %56 = load i32, i32* @y.404
  %57 = sub i32 %55, 1054530103
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 1054530103
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -1328529335, i32 1901156135
  store i32 %69, i32* %16
  br label %115

; <label>:70:                                     ; preds = %17
  %71 = load volatile i64, i64* %3
  ret i64 %71

; <label>:72:                                     ; preds = %17
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %74 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %73, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %1, %"class.__gnu_cxx::__normal_iterator.32"** %74, align 8
  %75 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %73, align 8
  %76 = call dereferenceable(8) %"class.std::tuple.19"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %75) #3
  %77 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %76, align 8
  %78 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %74, align 8
  %79 = call dereferenceable(8) %"class.std::tuple.19"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"* %78) #3
  %80 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %79, align 8
  %81 = ptrtoint %"class.std::tuple.19"* %77 to i64
  %82 = ptrtoint %"class.std::tuple.19"* %80 to i64
  %83 = shl i64 %81, %82
  %84 = sub i64 %81, -85892584955241430
  %85 = sub i64 %84, %82
  %86 = add i64 %85, -85892584955241430
  %87 = sub i64 %81, %82
  %88 = mul i64 %86, %82
  %89 = shl i64 %81, %82
  %90 = sub i64 %81, -6745980841786072008
  %91 = sub i64 %90, %82
  %92 = add i64 %91, -6745980841786072008
  %93 = sub i64 %81, %82
  %94 = sub i64 0, %92
  %95 = add i64 0, %94
  %96 = sub i64 0, %92
  %97 = add i64 %95, 7100796836862210212
  %98 = add i64 %97, 16
  %99 = sub i64 %98, 7100796836862210212
  %100 = add i64 %95, 16
  %101 = shl i64 %92, 16
  %102 = add i64 0, 9051096937093745179
  %103 = sub i64 %102, %92
  %104 = sub i64 %103, 9051096937093745179
  %105 = sub i64 0, %92
  %106 = sub i64 0, 16
  %107 = sub i64 %104, %106
  %108 = add i64 %104, 16
  %109 = add i64 %92, -4888650693024925832
  %110 = sub i64 %109, 16
  %111 = sub i64 %110, -4888650693024925832
  %112 = sub i64 %92, 16
  %113 = mul i64 %111, 16
  %114 = sdiv exact i64 %92, 16
  store i32 1621948100, i32* %16
  br label %115

; <label>:115:                                    ; preds = %72, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %2, align 8
  %3 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %2, align 8
  ret %"class.std::tuple.19"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::tuple.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %7, i32 0, i32 0
  %9 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %9, i64 %10
  store %"class.std::tuple.19"* %11, %"class.std::tuple.19"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"* %3, %"class.std::tuple.19"** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  %13 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %12, align 8
  ret %"class.std::tuple.19"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  ret %"class.std::tuple.19"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"*, %"class.std::tuple.19"* dereferenceable(16)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.411
  %6 = load i32, i32* @y.412
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 911680818, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 911680818, label %18
    i32 59511413, label %26
    i32 -2020933796, label %60
    i32 -1502407514, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 59511413, i32 -1502407514
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::tuple.19"*, align 8
  %28 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %27, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %28, align 8
  %29 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %27, align 8
  %30 = bitcast %"class.std::tuple.19"* %29 to %"struct.std::_Tuple_impl.20"*
  %31 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %28, align 8
  %32 = bitcast %"class.std::tuple.19"* %31 to %"struct.std::_Tuple_impl.20"*
  call void @_ZNSt11_Tuple_implILm0EJxiiEEC2EOS0_(%"struct.std::_Tuple_impl.20"* %30, %"struct.std::_Tuple_impl.20"* dereferenceable(16) %32) #3
  %33 = load i32, i32* @x.411
  %34 = load i32, i32* @y.412
  %35 = add i32 %33, -290576696
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -290576696
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -2020933796, i32 -1502407514
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::tuple.19"*, align 8
  %63 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %62, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %63, align 8
  %64 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %62, align 8
  %65 = bitcast %"class.std::tuple.19"* %64 to %"struct.std::_Tuple_impl.20"*
  %66 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %63, align 8
  %67 = bitcast %"class.std::tuple.19"* %66 to %"struct.std::_Tuple_impl.20"*
  call void @_ZNSt11_Tuple_implILm0EJxiiEEC2EOS0_(%"struct.std::_Tuple_impl.20"* %65, %"struct.std::_Tuple_impl.20"* dereferenceable(16) %67) #3
  store i32 59511413, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"class.std::tuple.19"*, i64, i64, i64, i64) #0 comdat {
  %6 = alloca i1
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %8 = alloca %"class.std::tuple.19"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %16 = alloca i64*
  %17 = alloca i64*
  %18 = alloca i64*
  %19 = alloca i64*
  %20 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %21 = alloca %"class.std::tuple.19"*
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %23 = alloca i1
  %24 = alloca i1
  %25 = load i32, i32* @x.413
  %26 = load i32, i32* @y.414
  %27 = sub i32 %25, 1332083415
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 1332083415
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  store i1 %33, i1* %24
  %34 = icmp slt i32 %26, 10
  store i1 %34, i1* %23
  %35 = alloca i32
  store i32 -1706854059, i32* %35
  br label %36

; <label>:36:                                     ; preds = %5, %464
  %37 = load i32, i32* %35
  switch i32 %37, label %38 [
    i32 -1706854059, label %39
    i32 -633021413, label %47
    i32 -152498360, label %95
    i32 2018473906, label %96
    i32 -1679172908, label %108
    i32 -111636840, label %141
    i32 819607698, label %150
    i32 -1120965548, label %172
    i32 1579589279, label %185
    i32 -1425371605, label %212
    i32 -1198336212, label %250
    i32 -715070580, label %253
    i32 -1083630059, label %290
    i32 -1921942218, label %317
    i32 1539522278, label %357
    i32 996499094, label %358
    i32 1416639730, label %383
    i32 -2123895712, label %439
  ]

; <label>:38:                                     ; preds = %36
  br label %464

; <label>:39:                                     ; preds = %36
  %40 = load volatile i1, i1* %24
  %41 = load volatile i1, i1* %23
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -633021413, i32 996499094
  store i32 %46, i32* %35
  br label %464

; <label>:47:                                     ; preds = %36
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %48, %"class.__gnu_cxx::__normal_iterator.32"** %22
  %49 = alloca %"class.std::tuple.19", align 8
  store %"class.std::tuple.19"* %49, %"class.std::tuple.19"** %21
  %50 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %50, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %20
  %51 = alloca i64, align 8
  store i64* %51, i64** %19
  %52 = alloca i64, align 8
  store i64* %52, i64** %18
  %53 = alloca i64, align 8
  store i64* %53, i64** %17
  %54 = alloca i64, align 8
  store i64* %54, i64** %16
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %55, %"class.__gnu_cxx::__normal_iterator.32"** %15
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %56, %"class.__gnu_cxx::__normal_iterator.32"** %14
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %57, %"class.__gnu_cxx::__normal_iterator.32"** %13
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %58, %"class.__gnu_cxx::__normal_iterator.32"** %12
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %59, %"class.__gnu_cxx::__normal_iterator.32"** %11
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %60, %"class.__gnu_cxx::__normal_iterator.32"** %10
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %61, %"class.__gnu_cxx::__normal_iterator.32"** %9
  %62 = alloca %"class.std::tuple.19", align 8
  store %"class.std::tuple.19"* %62, %"class.std::tuple.19"** %8
  %63 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %64 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %64, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %7
  %65 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %66 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %22
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %66, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %67, align 8
  %68 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %21
  %69 = bitcast %"class.std::tuple.19"* %68 to { i64, i64 }*
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %69, i32 0, i32 0
  store i64 %3, i64* %70, align 8
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %69, i32 0, i32 1
  store i64 %4, i64* %71, align 8
  %72 = load volatile i64*, i64** %19
  store i64 %1, i64* %72, align 8
  %73 = load volatile i64*, i64** %18
  store i64 %2, i64* %73, align 8
  %74 = load volatile i64*, i64** %19
  %75 = load i64, i64* %74, align 8
  %76 = load volatile i64*, i64** %17
  store i64 %75, i64* %76, align 8
  %77 = load volatile i64*, i64** %19
  %78 = load i64, i64* %77, align 8
  %79 = load volatile i64*, i64** %16
  store i64 %78, i64* %79, align 8
  %80 = load i32, i32* @x.413
  %81 = load i32, i32* @y.414
  %82 = sub i32 %80, 1115883063
  %83 = sub i32 %82, 1
  %84 = add i32 %83, 1115883063
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 -152498360, i32 996499094
  store i32 %94, i32* %35
  br label %464

; <label>:95:                                     ; preds = %36
  store i32 2018473906, i32* %35
  br label %464

; <label>:96:                                     ; preds = %36
  %97 = load volatile i64*, i64** %16
  %98 = load i64, i64* %97, align 8
  %99 = load volatile i64*, i64** %18
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, -6382963264613717292
  %102 = sub i64 %101, 1
  %103 = sub i64 %102, -6382963264613717292
  %104 = sub nsw i64 %100, 1
  %105 = sdiv i64 %103, 2
  %106 = icmp slt i64 %98, %105
  %107 = select i1 %106, i32 -1679172908, i32 -1120965548
  store i32 %107, i32* %35
  br label %464

; <label>:108:                                    ; preds = %36
  %109 = load volatile i64*, i64** %16
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %110, 8841570733725338292
  %112 = add i64 %111, 1
  %113 = add i64 %112, 8841570733725338292
  %114 = add nsw i64 %110, 1
  %115 = mul nsw i64 2, %113
  %116 = load volatile i64*, i64** %16
  store i64 %115, i64* %116, align 8
  %117 = load volatile i64*, i64** %16
  %118 = load i64, i64* %117, align 8
  %119 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %22
  %120 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %119, i64 %118) #3
  %121 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %15
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %121, i32 0, i32 0
  store %"class.std::tuple.19"* %120, %"class.std::tuple.19"** %122, align 8
  %123 = load volatile i64*, i64** %16
  %124 = load i64, i64* %123, align 8
  %125 = sub i64 0, 1
  %126 = add i64 %124, %125
  %127 = sub nsw i64 %124, 1
  %128 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %22
  %129 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %128, i64 %126) #3
  %130 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %14
  %131 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %130, i32 0, i32 0
  store %"class.std::tuple.19"* %129, %"class.std::tuple.19"** %131, align 8
  %132 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %15
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %132, i32 0, i32 0
  %134 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %133, align 8
  %135 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %14
  %136 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %135, i32 0, i32 0
  %137 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %136, align 8
  %138 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %20
  %139 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt5tupleIJxiiEEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %138, %"class.std::tuple.19"* %134, %"class.std::tuple.19"* %137)
  %140 = select i1 %139, i32 -111636840, i32 819607698
  store i32 %140, i32* %35
  br label %464

; <label>:141:                                    ; preds = %36
  %142 = load volatile i64*, i64** %16
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 0, %143
  %145 = sub i64 0, -1
  %146 = add i64 %144, %145
  %147 = sub i64 0, %146
  %148 = add nsw i64 %143, -1
  %149 = load volatile i64*, i64** %16
  store i64 %147, i64* %149, align 8
  store i32 819607698, i32* %35
  br label %464

; <label>:150:                                    ; preds = %36
  %151 = load volatile i64*, i64** %16
  %152 = load i64, i64* %151, align 8
  %153 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %22
  %154 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %153, i64 %152) #3
  %155 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %13
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %155, i32 0, i32 0
  store %"class.std::tuple.19"* %154, %"class.std::tuple.19"** %156, align 8
  %157 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %13
  %158 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %157) #3
  %159 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %158) #3
  %160 = load volatile i64*, i64** %19
  %161 = load i64, i64* %160, align 8
  %162 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %22
  %163 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %162, i64 %161) #3
  %164 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %12
  %165 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %164, i32 0, i32 0
  store %"class.std::tuple.19"* %163, %"class.std::tuple.19"** %165, align 8
  %166 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %12
  %167 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %166) #3
  %168 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNSt5tupleIJxiiEEaSEOS0_(%"class.std::tuple.19"* %167, %"class.std::tuple.19"* dereferenceable(16) %159) #3
  %169 = load volatile i64*, i64** %16
  %170 = load i64, i64* %169, align 8
  %171 = load volatile i64*, i64** %19
  store i64 %170, i64* %171, align 8
  store i32 2018473906, i32* %35
  br label %464

; <label>:172:                                    ; preds = %36
  %173 = load volatile i64*, i64** %18
  %174 = load i64, i64* %173, align 8
  %175 = xor i64 %174, -1
  %176 = xor i64 1, -1
  %177 = xor i64 2689349828733174458, -1
  %178 = or i64 %175, %176
  %179 = or i64 2689349828733174458, %177
  %180 = xor i64 %178, -1
  %181 = and i64 %180, %179
  %182 = and i64 %174, 1
  %183 = icmp eq i64 %181, 0
  %184 = select i1 %183, i32 1579589279, i32 -1083630059
  store i32 %184, i32* %35
  br label %464

; <label>:185:                                    ; preds = %36
  %186 = load i32, i32* @x.413
  %187 = load i32, i32* @y.414
  %188 = sub i32 0, 1
  %189 = add i32 %186, %188
  %190 = sub i32 %186, 1
  %191 = mul i32 %186, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %187, 10
  %195 = xor i1 %193, true
  %196 = xor i1 %194, true
  %197 = xor i1 false, true
  %198 = and i1 %195, false
  %199 = and i1 %193, %197
  %200 = and i1 %196, false
  %201 = and i1 %194, %197
  %202 = or i1 %198, %199
  %203 = or i1 %200, %201
  %204 = xor i1 %202, %203
  %205 = or i1 %195, %196
  %206 = xor i1 %205, true
  %207 = or i1 false, %197
  %208 = and i1 %206, %207
  %209 = or i1 %204, %208
  %210 = or i1 %193, %194
  %211 = select i1 %209, i32 -1425371605, i32 1416639730
  store i32 %211, i32* %35
  br label %464

; <label>:212:                                    ; preds = %36
  %213 = load volatile i64*, i64** %16
  %214 = load i64, i64* %213, align 8
  %215 = load volatile i64*, i64** %18
  %216 = load i64, i64* %215, align 8
  %217 = add i64 %216, 2156669998643932333
  %218 = sub i64 %217, 2
  %219 = sub i64 %218, 2156669998643932333
  %220 = sub nsw i64 %216, 2
  %221 = sdiv i64 %219, 2
  %222 = icmp eq i64 %214, %221
  store i1 %222, i1* %6
  %223 = load i32, i32* @x.413
  %224 = load i32, i32* @y.414
  %225 = add i32 %223, -160283672
  %226 = sub i32 %225, 1
  %227 = sub i32 %226, -160283672
  %228 = sub i32 %223, 1
  %229 = mul i32 %223, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %224, 10
  %233 = xor i1 %231, true
  %234 = xor i1 %232, true
  %235 = xor i1 true, true
  %236 = and i1 %233, true
  %237 = and i1 %231, %235
  %238 = and i1 %234, true
  %239 = and i1 %232, %235
  %240 = or i1 %236, %237
  %241 = or i1 %238, %239
  %242 = xor i1 %240, %241
  %243 = or i1 %233, %234
  %244 = xor i1 %243, true
  %245 = or i1 true, %235
  %246 = and i1 %244, %245
  %247 = or i1 %242, %246
  %248 = or i1 %231, %232
  %249 = select i1 %247, i32 -1198336212, i32 1416639730
  store i32 %249, i32* %35
  br label %464

; <label>:250:                                    ; preds = %36
  %251 = load volatile i1, i1* %6
  %252 = select i1 %251, i32 -715070580, i32 -1083630059
  store i32 %252, i32* %35
  br label %464

; <label>:253:                                    ; preds = %36
  %254 = load volatile i64*, i64** %16
  %255 = load i64, i64* %254, align 8
  %256 = sub i64 %255, -2167719586152526437
  %257 = add i64 %256, 1
  %258 = add i64 %257, -2167719586152526437
  %259 = add nsw i64 %255, 1
  %260 = mul nsw i64 2, %258
  %261 = load volatile i64*, i64** %16
  store i64 %260, i64* %261, align 8
  %262 = load volatile i64*, i64** %16
  %263 = load i64, i64* %262, align 8
  %264 = sub i64 0, 1
  %265 = add i64 %263, %264
  %266 = sub nsw i64 %263, 1
  %267 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %22
  %268 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %267, i64 %265) #3
  %269 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %11
  %270 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %269, i32 0, i32 0
  store %"class.std::tuple.19"* %268, %"class.std::tuple.19"** %270, align 8
  %271 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %11
  %272 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %271) #3
  %273 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %272) #3
  %274 = load volatile i64*, i64** %19
  %275 = load i64, i64* %274, align 8
  %276 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %22
  %277 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %276, i64 %275) #3
  %278 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %10
  %279 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %278, i32 0, i32 0
  store %"class.std::tuple.19"* %277, %"class.std::tuple.19"** %279, align 8
  %280 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %10
  %281 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %280) #3
  %282 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNSt5tupleIJxiiEEaSEOS0_(%"class.std::tuple.19"* %281, %"class.std::tuple.19"* dereferenceable(16) %273) #3
  %283 = load volatile i64*, i64** %16
  %284 = load i64, i64* %283, align 8
  %285 = add i64 %284, -5278248194356748
  %286 = sub i64 %285, 1
  %287 = sub i64 %286, -5278248194356748
  %288 = sub nsw i64 %284, 1
  %289 = load volatile i64*, i64** %19
  store i64 %287, i64* %289, align 8
  store i32 -1083630059, i32* %35
  br label %464

; <label>:290:                                    ; preds = %36
  %291 = load i32, i32* @x.413
  %292 = load i32, i32* @y.414
  %293 = sub i32 0, 1
  %294 = add i32 %291, %293
  %295 = sub i32 %291, 1
  %296 = mul i32 %291, %294
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %292, 10
  %300 = xor i1 %298, true
  %301 = xor i1 %299, true
  %302 = xor i1 true, true
  %303 = and i1 %300, true
  %304 = and i1 %298, %302
  %305 = and i1 %301, true
  %306 = and i1 %299, %302
  %307 = or i1 %303, %304
  %308 = or i1 %305, %306
  %309 = xor i1 %307, %308
  %310 = or i1 %300, %301
  %311 = xor i1 %310, true
  %312 = or i1 true, %302
  %313 = and i1 %311, %312
  %314 = or i1 %309, %313
  %315 = or i1 %298, %299
  %316 = select i1 %314, i32 -1921942218, i32 -2123895712
  store i32 %316, i32* %35
  br label %464

; <label>:317:                                    ; preds = %36
  %318 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %9
  %319 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %318 to i8*
  %320 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %22
  %321 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %320 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %319, i8* %321, i64 8, i32 8, i1 false)
  %322 = load volatile i64*, i64** %19
  %323 = load i64, i64* %322, align 8
  %324 = load volatile i64*, i64** %17
  %325 = load i64, i64* %324, align 8
  %326 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %21
  %327 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %326) #3
  %328 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %8
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %328, %"class.std::tuple.19"* dereferenceable(16) %327) #3
  %329 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %7
  %330 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %329 to i8*
  %331 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %20
  %332 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %331 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %330, i8* %332, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt5tupleIJxiiEEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE()
  %333 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %9
  %334 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %333, i32 0, i32 0
  %335 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %334, align 8
  %336 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %8
  %337 = bitcast %"class.std::tuple.19"* %336 to { i64, i64 }*
  %338 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %337, i32 0, i32 0
  %339 = load i64, i64* %338, align 8
  %340 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %337, i32 0, i32 1
  %341 = load i64, i64* %340, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"class.std::tuple.19"* %335, i64 %323, i64 %325, i64 %339, i64 %341)
  %342 = load i32, i32* @x.413
  %343 = load i32, i32* @y.414
  %344 = add i32 %342, -1138077153
  %345 = sub i32 %344, 1
  %346 = sub i32 %345, -1138077153
  %347 = sub i32 %342, 1
  %348 = mul i32 %342, %346
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %343, 10
  %352 = and i1 %350, %351
  %353 = xor i1 %350, %351
  %354 = or i1 %352, %353
  %355 = or i1 %350, %351
  %356 = select i1 %354, i32 1539522278, i32 -2123895712
  store i32 %356, i32* %35
  br label %464

; <label>:357:                                    ; preds = %36
  ret void

; <label>:358:                                    ; preds = %36
  %359 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %360 = alloca %"class.std::tuple.19", align 8
  %361 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %362 = alloca i64, align 8
  %363 = alloca i64, align 8
  %364 = alloca i64, align 8
  %365 = alloca i64, align 8
  %366 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %367 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %368 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %369 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %370 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %371 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %372 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %373 = alloca %"class.std::tuple.19", align 8
  %374 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %375 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %376 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %377 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %359, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %377, align 8
  %378 = bitcast %"class.std::tuple.19"* %360 to { i64, i64 }*
  %379 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %378, i32 0, i32 0
  store i64 %3, i64* %379, align 8
  %380 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %378, i32 0, i32 1
  store i64 %4, i64* %380, align 8
  store i64 %1, i64* %362, align 8
  store i64 %2, i64* %363, align 8
  %381 = load i64, i64* %362, align 8
  store i64 %381, i64* %364, align 8
  %382 = load i64, i64* %362, align 8
  store i64 %382, i64* %365, align 8
  store i32 -633021413, i32* %35
  br label %464

; <label>:383:                                    ; preds = %36
  %384 = load volatile i64*, i64** %16
  %385 = load i64, i64* %384, align 8
  %386 = load volatile i64*, i64** %18
  %387 = load i64, i64* %386, align 8
  %388 = sub i64 0, 6162432806432704739
  %389 = sub i64 %388, %387
  %390 = add i64 %389, 6162432806432704739
  %391 = sub i64 0, %387
  %392 = sub i64 0, 2
  %393 = sub i64 %390, %392
  %394 = add i64 %390, 2
  %395 = sub i64 0, %387
  %396 = add i64 0, %395
  %397 = sub i64 0, %387
  %398 = add i64 %396, 1488805708815807483
  %399 = add i64 %398, 2
  %400 = sub i64 %399, 1488805708815807483
  %401 = add i64 %396, 2
  %402 = sub i64 0, 2
  %403 = add i64 %387, %402
  %404 = sub i64 %387, 2
  %405 = mul i64 %403, 2
  %406 = sub i64 0, %387
  %407 = add i64 0, %406
  %408 = sub i64 0, %387
  %409 = add i64 %407, -3396869937353394021
  %410 = add i64 %409, 2
  %411 = sub i64 %410, -3396869937353394021
  %412 = add i64 %407, 2
  %413 = add i64 %387, -2654590093109947634
  %414 = sub i64 %413, 2
  %415 = sub i64 %414, -2654590093109947634
  %416 = sub nsw i64 %387, 2
  %417 = sub i64 0, 2659080189434219793
  %418 = sub i64 %417, %415
  %419 = add i64 %418, 2659080189434219793
  %420 = sub i64 0, %415
  %421 = sub i64 0, 2
  %422 = sub i64 %419, %421
  %423 = add i64 %419, 2
  %424 = add i64 %415, -8741410943835365445
  %425 = sub i64 %424, 2
  %426 = sub i64 %425, -8741410943835365445
  %427 = sub i64 %415, 2
  %428 = mul i64 %426, 2
  %429 = sub i64 0, %415
  %430 = add i64 0, %429
  %431 = sub i64 0, %415
  %432 = sub i64 0, %430
  %433 = sub i64 0, 2
  %434 = add i64 %432, %433
  %435 = sub i64 0, %434
  %436 = add i64 %430, 2
  %437 = sdiv i64 %415, 2
  %438 = icmp eq i64 %385, %437
  store i32 -1425371605, i32* %35
  br label %464

; <label>:439:                                    ; preds = %36
  %440 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %9
  %441 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %440 to i8*
  %442 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %22
  %443 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %442 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %441, i8* %443, i64 8, i32 8, i1 false)
  %444 = load volatile i64*, i64** %19
  %445 = load i64, i64* %444, align 8
  %446 = load volatile i64*, i64** %17
  %447 = load i64, i64* %446, align 8
  %448 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %21
  %449 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %448) #3
  %450 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %8
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %450, %"class.std::tuple.19"* dereferenceable(16) %449) #3
  %451 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %7
  %452 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %451 to i8*
  %453 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %20
  %454 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %453 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %452, i8* %454, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt5tupleIJxiiEEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE()
  %455 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %9
  %456 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %455, i32 0, i32 0
  %457 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %456, align 8
  %458 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %8
  %459 = bitcast %"class.std::tuple.19"* %458 to { i64, i64 }*
  %460 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %459, i32 0, i32 0
  %461 = load i64, i64* %460, align 8
  %462 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %459, i32 0, i32 1
  %463 = load i64, i64* %462, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"class.std::tuple.19"* %457, i64 %445, i64 %447, i64 %461, i64 %463)
  store i32 -1921942218, i32* %35
  br label %464

; <label>:464:                                    ; preds = %439, %383, %358, %317, %290, %253, %250, %212, %185, %172, %150, %141, %108, %96, %95, %47, %39, %38
  br label %36
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple.19"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.32"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  ret %"class.std::tuple.19"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"*, %"class.std::tuple.19"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %4 = alloca %"class.std::tuple.19"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %3, align 8
  store %"class.std::tuple.19"** %1, %"class.std::tuple.19"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  %7 = load %"class.std::tuple.19"**, %"class.std::tuple.19"*** %4, align 8
  %8 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  store %"class.std::tuple.19"* %8, %"class.std::tuple.19"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJxiiEEC2EOS0_(%"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"* dereferenceable(16)) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.419
  %4 = load i32, i32* @y.420
  %5 = add i32 %3, 1781451606
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 1781451606
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %131

; <label>:17:                                     ; preds = %2, %131
  %18 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  %19 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %18, align 8
  store %"struct.std::_Tuple_impl.20"* %1, %"struct.std::_Tuple_impl.20"** %19, align 8
  %20 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %18, align 8
  %21 = bitcast %"struct.std::_Tuple_impl.20"* %20 to %"struct.std::_Tuple_impl.5"*
  %22 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %19, align 8
  %23 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %22) #3
  %24 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZSt4moveIRSt11_Tuple_implILm1EJiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %23) #3
  call void @_ZNSt11_Tuple_implILm1EJiiEEC2EOS0_(%"struct.std::_Tuple_impl.5"* %21, %"struct.std::_Tuple_impl.5"* dereferenceable(8) %24) #3
  %25 = bitcast %"struct.std::_Tuple_impl.20"* %20 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to %"struct.std::_Head_base.21"*
  %28 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %19, align 8
  %29 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_headERS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %28) #3
  %30 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %29) #3
  %31 = load i32, i32* @x.419
  %32 = load i32, i32* @y.420
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %131

; <label>:44:                                     ; preds = %17
  invoke void @_ZNSt10_Head_baseILm0ExLb0EEC2IxEEOT_(%"struct.std::_Head_base.21"* %27, i64* dereferenceable(8) %30)
          to label %45 unwind label %75

; <label>:45:                                     ; preds = %44
  %46 = load i32, i32* @x.419
  %47 = load i32, i32* @y.420
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %145

; <label>:59:                                     ; preds = %45, %145
  %60 = load i32, i32* @x.419
  %61 = load i32, i32* @y.420
  %62 = sub i32 %60, 607099922
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 607099922
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %145

; <label>:74:                                     ; preds = %59
  ret void

; <label>:75:                                     ; preds = %44
  %76 = load i32, i32* @x.419
  %77 = load i32, i32* @y.420
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %146

; <label>:101:                                    ; preds = %75, %146
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  call void @__clang_call_terminate(i8* %103) #10
  %104 = load i32, i32* @x.419
  %105 = load i32, i32* @y.420
  %106 = add i32 %104, 1529062311
  %107 = sub i32 %106, 1
  %108 = sub i32 %107, 1529062311
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 true, true
  %117 = and i1 %114, true
  %118 = and i1 %112, %116
  %119 = and i1 %115, true
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 true, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  br i1 %128, label %130, label %146

; <label>:130:                                    ; preds = %101
  unreachable

; <label>:131:                                    ; preds = %17, %2
  %132 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  %133 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %132, align 8
  store %"struct.std::_Tuple_impl.20"* %1, %"struct.std::_Tuple_impl.20"** %133, align 8
  %134 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %132, align 8
  %135 = bitcast %"struct.std::_Tuple_impl.20"* %134 to %"struct.std::_Tuple_impl.5"*
  %136 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %133, align 8
  %137 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %136) #3
  %138 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZSt4moveIRSt11_Tuple_implILm1EJiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %137) #3
  call void @_ZNSt11_Tuple_implILm1EJiiEEC2EOS0_(%"struct.std::_Tuple_impl.5"* %135, %"struct.std::_Tuple_impl.5"* dereferenceable(8) %138) #3
  %139 = bitcast %"struct.std::_Tuple_impl.20"* %134 to i8*
  %140 = getelementptr inbounds i8, i8* %139, i64 8
  %141 = bitcast i8* %140 to %"struct.std::_Head_base.21"*
  %142 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %133, align 8
  %143 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_headERS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %142) #3
  %144 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %143) #3
  br label %17

; <label>:145:                                    ; preds = %59, %45
  br label %59

; <label>:146:                                    ; preds = %101, %75
  %147 = landingpad { i8*, i32 }
          catch i8* null
  %148 = extractvalue { i8*, i32 } %147, 0
  call void @__clang_call_terminate(i8* %148) #10
  br label %101
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.421
  %6 = load i32, i32* @y.422
  %7 = add i32 %5, -875885605
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -875885605
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -945469655, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -945469655, label %19
    i32 1856321000, label %27
    i32 1562616655, label %45
    i32 -187114066, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1856321000, i32 -187114066
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %28, align 8
  %29 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %28, align 8
  %30 = bitcast %"struct.std::_Tuple_impl.20"* %29 to %"struct.std::_Tuple_impl.5"*
  store %"struct.std::_Tuple_impl.5"* %30, %"struct.std::_Tuple_impl.5"** %2
  %31 = load i32, i32* @x.421
  %32 = load i32, i32* @y.422
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1562616655, i32 -187114066
  store i32 %44, i32* %15
  br label %51

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %2
  ret %"struct.std::_Tuple_impl.5"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %48, align 8
  %49 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %48, align 8
  %50 = bitcast %"struct.std::_Tuple_impl.20"* %49 to %"struct.std::_Tuple_impl.5"*
  store i32 1856321000, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_headERS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.20"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.21"*
  %7 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.21"* dereferenceable(8) %6) #3
  ret i64* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERS0_(%"struct.std::_Head_base.21"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.21"*, align 8
  store %"struct.std::_Head_base.21"* %0, %"struct.std::_Head_base.21"** %2, align 8
  %3 = load %"struct.std::_Head_base.21"*, %"struct.std::_Head_base.21"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.21", %"struct.std::_Head_base.21"* %3, i32 0, i32 0
  ret i64* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt5tupleIJxiiEEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"class.std::tuple.19"*, %"class.std::tuple.19"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %4, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %5, i32 0, i32 0
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %8, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %9 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %10 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9, i32 0, i32 0
  %11 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %4) #3
  %12 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %5) #3
  %13 = call zeroext i1 @_ZNKSt7greaterISt5tupleIJxiiEEEclERKS1_S4_(%"struct.std::greater"* %10, %"class.std::tuple.19"* dereferenceable(16) %11, %"class.std::tuple.19"* dereferenceable(16) %12)
  ret i1 %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.19"* @_ZNSt5tupleIJxiiEEaSEOS0_(%"class.std::tuple.19"*, %"class.std::tuple.19"* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca %"class.std::tuple.19"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.429
  %7 = load i32, i32* @y.430
  %8 = sub i32 %6, -420964517
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -420964517
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1736097632, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1736097632, label %20
    i32 285869855, label %40
    i32 -1867244616, label %65
    i32 -1259793053, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 285869855, i32 -1259793053
  store i32 %39, i32* %16
  br label %76

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::tuple.19"*, align 8
  %42 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %41, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %42, align 8
  %43 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %41, align 8
  store %"class.std::tuple.19"* %43, %"class.std::tuple.19"** %3
  %44 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %42, align 8
  %45 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %44) #3
  %46 = bitcast %"class.std::tuple.19"* %45 to %"struct.std::_Tuple_impl.20"*
  %47 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %3
  %48 = bitcast %"class.std::tuple.19"* %47 to %"struct.std::_Tuple_impl.20"*
  %49 = call dereferenceable(16) %"struct.std::_Tuple_impl.20"* @_ZNSt11_Tuple_implILm0EJxiiEEaSEOS0_(%"struct.std::_Tuple_impl.20"* %48, %"struct.std::_Tuple_impl.20"* dereferenceable(16) %46) #3
  %50 = load i32, i32* @x.429
  %51 = load i32, i32* @y.430
  %52 = sub i32 %50, 2099268716
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 2099268716
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1867244616, i32 -1259793053
  store i32 %64, i32* %16
  br label %76

; <label>:65:                                     ; preds = %17
  %66 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %3
  ret %"class.std::tuple.19"* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::tuple.19"*, align 8
  %69 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %68, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %69, align 8
  %70 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %68, align 8
  %71 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %69, align 8
  %72 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %71) #3
  %73 = bitcast %"class.std::tuple.19"* %72 to %"struct.std::_Tuple_impl.20"*
  %74 = bitcast %"class.std::tuple.19"* %70 to %"struct.std::_Tuple_impl.20"*
  %75 = call dereferenceable(16) %"struct.std::_Tuple_impl.20"* @_ZNSt11_Tuple_implILm0EJxiiEEaSEOS0_(%"struct.std::_Tuple_impl.20"* %74, %"struct.std::_Tuple_impl.20"* dereferenceable(16) %73) #3
  store i32 285869855, i32* %16
  br label %76

; <label>:76:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"class.std::tuple.19"*, i64, i64, i64, i64) #0 comdat {
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %7 = alloca %"class.std::tuple.19", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %6, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %16, align 8
  %17 = bitcast %"class.std::tuple.19"* %7 to { i64, i64 }*
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %3, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %4, i64* %19, align 8
  store i64 %1, i64* %9, align 8
  store i64 %2, i64* %10, align 8
  %20 = load i64, i64* %9, align 8
  %21 = sub i64 0, 1
  %22 = add i64 %20, %21
  %23 = sub nsw i64 %20, 1
  %24 = sdiv i64 %22, 2
  store i64 %24, i64* %11, align 8
  %25 = alloca i32
  store i32 -819222034, i32* %25
  %26 = alloca i1
  br label %27

; <label>:27:                                     ; preds = %5, %154
  %28 = load i32, i32* %25
  switch i32 %28, label %29 [
    i32 -819222034, label %30
    i32 1557300339, label %35
    i32 2002217637, label %42
    i32 1546062484, label %45
    i32 1366289846, label %61
    i32 484611746, label %106
    i32 -1149647932, label %107
    i32 -2121878927, label %114
  ]

; <label>:29:                                     ; preds = %27
  br label %154

; <label>:30:                                     ; preds = %27
  %31 = load i64, i64* %9, align 8
  %32 = load i64, i64* %10, align 8
  %33 = icmp sgt i64 %31, %32
  %34 = select i1 %33, i32 1557300339, i32 2002217637
  store i32 %34, i32* %25
  store i1 false, i1* %26
  br label %154

; <label>:35:                                     ; preds = %27
  %36 = load i64, i64* %11, align 8
  %37 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %6, i64 %36) #3
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %12, i32 0, i32 0
  store %"class.std::tuple.19"* %37, %"class.std::tuple.19"** %38, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %12, i32 0, i32 0
  %40 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %39, align 8
  %41 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt5tupleIJxiiEEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, %"class.std::tuple.19"* %40, %"class.std::tuple.19"* dereferenceable(16) %7)
  store i32 2002217637, i32* %25
  store i1 %41, i1* %26
  br label %154

; <label>:42:                                     ; preds = %27
  %43 = load i1, i1* %26
  %44 = select i1 %43, i32 1546062484, i32 -1149647932
  store i32 %44, i32* %25
  br label %154

; <label>:45:                                     ; preds = %27
  %46 = load i32, i32* @x.431
  %47 = load i32, i32* @y.432
  %48 = sub i32 %46, -241711604
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -241711604
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1366289846, i32 -2121878927
  store i32 %60, i32* %25
  br label %154

; <label>:61:                                     ; preds = %27
  %62 = load i64, i64* %11, align 8
  %63 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %6, i64 %62) #3
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %13, i32 0, i32 0
  store %"class.std::tuple.19"* %63, %"class.std::tuple.19"** %64, align 8
  %65 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %13) #3
  %66 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %65) #3
  %67 = load i64, i64* %9, align 8
  %68 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %6, i64 %67) #3
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %14, i32 0, i32 0
  store %"class.std::tuple.19"* %68, %"class.std::tuple.19"** %69, align 8
  %70 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %14) #3
  %71 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNSt5tupleIJxiiEEaSEOS0_(%"class.std::tuple.19"* %70, %"class.std::tuple.19"* dereferenceable(16) %66) #3
  %72 = load i64, i64* %11, align 8
  store i64 %72, i64* %9, align 8
  %73 = load i64, i64* %9, align 8
  %74 = sub i64 %73, -7376265295774220820
  %75 = sub i64 %74, 1
  %76 = add i64 %75, -7376265295774220820
  %77 = sub nsw i64 %73, 1
  %78 = sdiv i64 %76, 2
  store i64 %78, i64* %11, align 8
  %79 = load i32, i32* @x.431
  %80 = load i32, i32* @y.432
  %81 = sub i32 %79, -872012987
  %82 = sub i32 %81, 1
  %83 = add i32 %82, -872012987
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 false, true
  %92 = and i1 %89, false
  %93 = and i1 %87, %91
  %94 = and i1 %90, false
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 false, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  %105 = select i1 %103, i32 484611746, i32 -2121878927
  store i32 %105, i32* %25
  br label %154

; <label>:106:                                    ; preds = %27
  store i32 -819222034, i32* %25
  br label %154

; <label>:107:                                    ; preds = %27
  %108 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %7) #3
  %109 = load i64, i64* %9, align 8
  %110 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %6, i64 %109) #3
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %15, i32 0, i32 0
  store %"class.std::tuple.19"* %110, %"class.std::tuple.19"** %111, align 8
  %112 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %15) #3
  %113 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNSt5tupleIJxiiEEaSEOS0_(%"class.std::tuple.19"* %112, %"class.std::tuple.19"* dereferenceable(16) %108) #3
  ret void

; <label>:114:                                    ; preds = %27
  %115 = load i64, i64* %11, align 8
  %116 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %6, i64 %115) #3
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %13, i32 0, i32 0
  store %"class.std::tuple.19"* %116, %"class.std::tuple.19"** %117, align 8
  %118 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %13) #3
  %119 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %118) #3
  %120 = load i64, i64* %9, align 8
  %121 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.32"* %6, i64 %120) #3
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %14, i32 0, i32 0
  store %"class.std::tuple.19"* %121, %"class.std::tuple.19"** %122, align 8
  %123 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %14) #3
  %124 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNSt5tupleIJxiiEEaSEOS0_(%"class.std::tuple.19"* %123, %"class.std::tuple.19"* dereferenceable(16) %119) #3
  %125 = load i64, i64* %11, align 8
  store i64 %125, i64* %9, align 8
  %126 = load i64, i64* %9, align 8
  %127 = sub i64 0, 1
  %128 = add i64 %126, %127
  %129 = sub nsw i64 %126, 1
  %130 = sub i64 %128, -2868988277102305300
  %131 = sub i64 %130, 2
  %132 = add i64 %131, -2868988277102305300
  %133 = sub i64 %128, 2
  %134 = mul i64 %132, 2
  %135 = sub i64 0, 2
  %136 = add i64 %128, %135
  %137 = sub i64 %128, 2
  %138 = mul i64 %136, 2
  %139 = add i64 %128, -6072391636981014194
  %140 = sub i64 %139, 2
  %141 = sub i64 %140, -6072391636981014194
  %142 = sub i64 %128, 2
  %143 = mul i64 %141, 2
  %144 = sub i64 0, 8389248430849113012
  %145 = sub i64 %144, %128
  %146 = add i64 %145, 8389248430849113012
  %147 = sub i64 0, %128
  %148 = sub i64 0, %146
  %149 = sub i64 0, 2
  %150 = add i64 %148, %149
  %151 = sub i64 0, %150
  %152 = add i64 %146, 2
  %153 = sdiv i64 %128, 2
  store i64 %153, i64* %11, align 8
  store i32 1366289846, i32* %25
  br label %154

; <label>:154:                                    ; preds = %114, %106, %61, %45, %42, %35, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt5tupleIJxiiEEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %3 = alloca %"struct.std::greater", align 1
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %2, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt5tupleIJxiiEEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt7greaterISt5tupleIJxiiEEEclERKS1_S4_(%"struct.std::greater"*, %"class.std::tuple.19"* dereferenceable(16), %"class.std::tuple.19"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"struct.std::greater"*, align 8
  %5 = alloca %"class.std::tuple.19"*, align 8
  %6 = alloca %"class.std::tuple.19"*, align 8
  store %"struct.std::greater"* %0, %"struct.std::greater"** %4, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %5, align 8
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %6, align 8
  %7 = load %"struct.std::greater"*, %"struct.std::greater"** %4, align 8
  %8 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %5, align 8
  %9 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %10 = call zeroext i1 @_ZStgtIJxiiEJxiiEEbRKSt5tupleIJDpT_EERKS0_IJDpT0_EE(%"class.std::tuple.19"* dereferenceable(16) %8, %"class.std::tuple.19"* dereferenceable(16) %9)
  ret i1 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStgtIJxiiEJxiiEEbRKSt5tupleIJDpT_EERKS0_IJDpT0_EE(%"class.std::tuple.19"* dereferenceable(16), %"class.std::tuple.19"* dereferenceable(16)) #0 comdat {
  %3 = alloca %"class.std::tuple.19"*, align 8
  %4 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %3, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %4, align 8
  %5 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  %6 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %3, align 8
  %7 = call zeroext i1 @_ZStltIJxiiEJxiiEEbRKSt5tupleIJDpT_EERKS0_IJDpT0_EE(%"class.std::tuple.19"* dereferenceable(16) %5, %"class.std::tuple.19"* dereferenceable(16) %6)
  ret i1 %7
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStltIJxiiEJxiiEEbRKSt5tupleIJDpT_EERKS0_IJDpT0_EE(%"class.std::tuple.19"* dereferenceable(16), %"class.std::tuple.19"* dereferenceable(16)) #0 comdat {
  %3 = alloca %"class.std::tuple.19"*, align 8
  %4 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %3, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %4, align 8
  %5 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %3, align 8
  %6 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  %7 = call zeroext i1 @_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm0ELm3EE6__lessERKS1_S4_(%"class.std::tuple.19"* dereferenceable(16) %5, %"class.std::tuple.19"* dereferenceable(16) %6)
  ret i1 %7
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm0ELm3EE6__lessERKS1_S4_(%"class.std::tuple.19"* dereferenceable(16), %"class.std::tuple.19"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::tuple.19"*, align 8
  %8 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %7, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %8, align 8
  %9 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %10 = call dereferenceable(8) i64* @_ZSt3getILm0EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %9) #3
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %6
  %12 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %8, align 8
  %13 = call dereferenceable(8) i64* @_ZSt3getILm0EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %12) #3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %5
  %15 = alloca i32
  store i32 -1731445018, i32* %15
  %16 = alloca i1
  %17 = alloca i1
  br label %18

; <label>:18:                                     ; preds = %2, %153
  %19 = load i32, i32* %15
  switch i32 %19, label %20 [
    i32 -1731445018, label %21
    i32 -1104522800, label %26
    i32 315051248, label %53
    i32 -1877413326, label %88
    i32 426287428, label %91
    i32 642307728, label %95
    i32 -1071829838, label %97
    i32 -563919217, label %126
    i32 379297346, label %142
    i32 -1303570, label %144
    i32 907626532, label %152
  ]

; <label>:20:                                     ; preds = %18
  br label %153

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %6
  %23 = load volatile i64, i64* %5
  %24 = icmp slt i64 %22, %23
  %25 = select i1 %24, i32 -1071829838, i32 -1104522800
  store i32 %25, i32* %15
  store i1 true, i1* %17
  br label %153

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @x.441
  %28 = load i32, i32* @y.442
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 315051248, i32 -1303570
  store i32 %52, i32* %15
  br label %153

; <label>:53:                                     ; preds = %18
  %54 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %8, align 8
  %55 = call dereferenceable(8) i64* @_ZSt3getILm0EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %54) #3
  %56 = load i64, i64* %55, align 8
  %57 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %58 = call dereferenceable(8) i64* @_ZSt3getILm0EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %57) #3
  %59 = load i64, i64* %58, align 8
  %60 = icmp slt i64 %56, %59
  store i1 %60, i1* %4
  %61 = load i32, i32* @x.441
  %62 = load i32, i32* @y.442
  %63 = sub i32 %61, 949118858
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 949118858
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -1877413326, i32 -1303570
  store i32 %87, i32* %15
  br label %153

; <label>:88:                                     ; preds = %18
  %89 = load volatile i1, i1* %4
  %90 = select i1 %89, i32 642307728, i32 426287428
  store i32 %90, i32* %15
  store i1 false, i1* %16
  br label %153

; <label>:91:                                     ; preds = %18
  %92 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %93 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %8, align 8
  %94 = call zeroext i1 @_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm1ELm3EE6__lessERKS1_S4_(%"class.std::tuple.19"* dereferenceable(16) %92, %"class.std::tuple.19"* dereferenceable(16) %93)
  store i32 642307728, i32* %15
  store i1 %94, i1* %16
  br label %153

; <label>:95:                                     ; preds = %18
  %96 = load i1, i1* %16
  store i32 -1071829838, i32* %15
  store i1 %96, i1* %17
  br label %153

; <label>:97:                                     ; preds = %18
  %98 = load i1, i1* %17
  store i1 %98, i1* %3
  %99 = load i32, i32* @x.441
  %100 = load i32, i32* @y.442
  %101 = sub i32 %99, 1544431555
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 1544431555
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  %125 = select i1 %123, i32 -563919217, i32 907626532
  store i32 %125, i32* %15
  br label %153

; <label>:126:                                    ; preds = %18
  %127 = load i32, i32* @x.441
  %128 = load i32, i32* @y.442
  %129 = sub i32 %127, -1341865037
  %130 = sub i32 %129, 1
  %131 = add i32 %130, -1341865037
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  %141 = select i1 %139, i32 379297346, i32 907626532
  store i32 %141, i32* %15
  br label %153

; <label>:142:                                    ; preds = %18
  %143 = load volatile i1, i1* %3
  ret i1 %143

; <label>:144:                                    ; preds = %18
  %145 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %8, align 8
  %146 = call dereferenceable(8) i64* @_ZSt3getILm0EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %145) #3
  %147 = load i64, i64* %146, align 8
  %148 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %149 = call dereferenceable(8) i64* @_ZSt3getILm0EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %148) #3
  %150 = load i64, i64* %149, align 8
  %151 = icmp slt i64 %147, %150
  store i32 315051248, i32* %15
  br label %153

; <label>:152:                                    ; preds = %18
  store i32 -563919217, i32* %15
  br label %153

; <label>:153:                                    ; preds = %152, %144, %126, %97, %95, %91, %88, %53, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3getILm0EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16)) #5 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.443
  %6 = load i32, i32* @y.444
  %7 = add i32 %5, -2048617393
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2048617393
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1438598465, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1438598465, label %19
    i32 957616774, label %39
    i32 -875260709, label %70
    i32 -1002710200, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 957616774, i32 -1002710200
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %40, align 8
  %41 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %40, align 8
  %42 = bitcast %"class.std::tuple.19"* %41 to %"struct.std::_Tuple_impl.20"*
  %43 = call dereferenceable(8) i64* @_ZSt12__get_helperILm0ExJiiEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %42) #3
  store i64* %43, i64** %2
  %44 = load i32, i32* @x.443
  %45 = load i32, i32* @y.444
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -875260709, i32 -1002710200
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64*, i64** %2
  ret i64* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %73, align 8
  %74 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %73, align 8
  %75 = bitcast %"class.std::tuple.19"* %74 to %"struct.std::_Tuple_impl.20"*
  %76 = call dereferenceable(8) i64* @_ZSt12__get_helperILm0ExJiiEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %75) #3
  store i32 957616774, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm1ELm3EE6__lessERKS1_S4_(%"class.std::tuple.19"* dereferenceable(16), %"class.std::tuple.19"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i32
  %5 = alloca i32
  %6 = alloca %"class.std::tuple.19"*, align 8
  %7 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %6, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %7, align 8
  %8 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %9 = call dereferenceable(4) i32* @_ZSt3getILm1EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %8) #3
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %5
  %11 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %12 = call dereferenceable(4) i32* @_ZSt3getILm1EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %4
  %14 = alloca i32
  store i32 -1433511971, i32* %14
  %15 = alloca i1
  %16 = alloca i1
  br label %17

; <label>:17:                                     ; preds = %2, %103
  %18 = load i32, i32* %14
  switch i32 %18, label %19 [
    i32 -1433511971, label %20
    i32 1073834660, label %25
    i32 684801839, label %34
    i32 -461259979, label %62
    i32 426032914, label %93
    i32 -1990358151, label %95
    i32 1080875345, label %97
    i32 1792638063, label %99
  ]

; <label>:19:                                     ; preds = %17
  br label %103

; <label>:20:                                     ; preds = %17
  %21 = load volatile i32, i32* %5
  %22 = load volatile i32, i32* %4
  %23 = icmp slt i32 %21, %22
  %24 = select i1 %23, i32 1080875345, i32 1073834660
  store i32 %24, i32* %14
  store i1 true, i1* %16
  br label %103

; <label>:25:                                     ; preds = %17
  %26 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %27 = call dereferenceable(4) i32* @_ZSt3getILm1EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %26) #3
  %28 = load i32, i32* %27, align 4
  %29 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %30 = call dereferenceable(4) i32* @_ZSt3getILm1EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %29) #3
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %28, %31
  %33 = select i1 %32, i32 -1990358151, i32 684801839
  store i32 %33, i32* %14
  store i1 false, i1* %15
  br label %103

; <label>:34:                                     ; preds = %17
  %35 = load i32, i32* @x.445
  %36 = load i32, i32* @y.446
  %37 = sub i32 %35, -1034269162
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1034269162
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -461259979, i32 1792638063
  store i32 %61, i32* %14
  br label %103

; <label>:62:                                     ; preds = %17
  %63 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %64 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %65 = call zeroext i1 @_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm2ELm3EE6__lessERKS1_S4_(%"class.std::tuple.19"* dereferenceable(16) %63, %"class.std::tuple.19"* dereferenceable(16) %64)
  store i1 %65, i1* %3
  %66 = load i32, i32* @x.445
  %67 = load i32, i32* @y.446
  %68 = sub i32 %66, -1468164492
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -1468164492
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 426032914, i32 1792638063
  store i32 %92, i32* %14
  br label %103

; <label>:93:                                     ; preds = %17
  store i32 -1990358151, i32* %14
  %94 = load volatile i1, i1* %3
  store i1 %94, i1* %15
  br label %103

; <label>:95:                                     ; preds = %17
  %96 = load i1, i1* %15
  store i32 1080875345, i32* %14
  store i1 %96, i1* %16
  br label %103

; <label>:97:                                     ; preds = %17
  %98 = load i1, i1* %16
  ret i1 %98

; <label>:99:                                     ; preds = %17
  %100 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %101 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %102 = call zeroext i1 @_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm2ELm3EE6__lessERKS1_S4_(%"class.std::tuple.19"* dereferenceable(16) %100, %"class.std::tuple.19"* dereferenceable(16) %101)
  store i32 -461259979, i32* %14
  br label %103

; <label>:103:                                    ; preds = %99, %95, %93, %62, %34, %25, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt12__get_helperILm0ExJiiEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.20"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %2, align 8
  %4 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_headERKS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %3) #3
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_headERKS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16)) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.449
  %6 = load i32, i32* @y.450
  %7 = add i32 %5, 1968259646
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1968259646
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 728694602, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 728694602, label %19
    i32 1457702753, label %39
    i32 146360124, label %72
    i32 1407955669, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1457702753, i32 1407955669
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.20"* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 8
  %44 = bitcast i8* %43 to %"struct.std::_Head_base.21"*
  %45 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.21"* dereferenceable(8) %44) #3
  store i64* %45, i64** %2
  %46 = load i32, i32* @x.449
  %47 = load i32, i32* @y.450
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 146360124, i32 1407955669
  store i32 %71, i32* %15
  br label %81

; <label>:72:                                     ; preds = %16
  %73 = load volatile i64*, i64** %2
  ret i64* %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %75, align 8
  %76 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %75, align 8
  %77 = bitcast %"struct.std::_Tuple_impl.20"* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 8
  %79 = bitcast i8* %78 to %"struct.std::_Head_base.21"*
  %80 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.21"* dereferenceable(8) %79) #3
  store i32 1457702753, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ExLb0EE7_M_headERKS0_(%"struct.std::_Head_base.21"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.451
  %6 = load i32, i32* @y.452
  %7 = sub i32 %5, 806577600
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 806577600
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 197644577, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 197644577, label %19
    i32 1253104217, label %27
    i32 838984249, label %46
    i32 -1778234915, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1253104217, i32 -1778234915
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Head_base.21"*, align 8
  store %"struct.std::_Head_base.21"* %0, %"struct.std::_Head_base.21"** %28, align 8
  %29 = load %"struct.std::_Head_base.21"*, %"struct.std::_Head_base.21"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Head_base.21", %"struct.std::_Head_base.21"* %29, i32 0, i32 0
  store i64* %30, i64** %2
  %31 = load i32, i32* @x.451
  %32 = load i32, i32* @y.452
  %33 = sub i32 %31, 969109856
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 969109856
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 838984249, i32 -1778234915
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile i64*, i64** %2
  ret i64* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::_Head_base.21"*, align 8
  store %"struct.std::_Head_base.21"* %0, %"struct.std::_Head_base.21"** %49, align 8
  %50 = load %"struct.std::_Head_base.21"*, %"struct.std::_Head_base.21"** %49, align 8
  %51 = getelementptr inbounds %"struct.std::_Head_base.21", %"struct.std::_Head_base.21"* %50, i32 0, i32 0
  store i32 1253104217, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3getILm1EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %2, align 8
  %3 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %2, align 8
  %4 = bitcast %"class.std::tuple.19"* %3 to %"struct.std::_Tuple_impl.5"*
  %5 = call dereferenceable(4) i32* @_ZSt12__get_helperILm1EiJiEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %4) #3
  ret i32* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm2ELm3EE6__lessERKS1_S4_(%"class.std::tuple.19"* dereferenceable(16), %"class.std::tuple.19"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca %"class.std::tuple.19"*, align 8
  %6 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %5, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %6, align 8
  %7 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %5, align 8
  %8 = call dereferenceable(4) i32* @_ZSt3getILm2EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %7) #3
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %4
  %10 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt3getILm2EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %10) #3
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %3
  %13 = alloca i32
  store i32 842136728, i32* %13
  %14 = alloca i1
  %15 = alloca i1
  br label %16

; <label>:16:                                     ; preds = %2, %41
  %17 = load i32, i32* %13
  switch i32 %17, label %18 [
    i32 842136728, label %19
    i32 -1071305693, label %24
    i32 -1636382702, label %33
    i32 -2041738000, label %37
    i32 1626898128, label %39
  ]

; <label>:18:                                     ; preds = %16
  br label %41

; <label>:19:                                     ; preds = %16
  %20 = load volatile i32, i32* %4
  %21 = load volatile i32, i32* %3
  %22 = icmp slt i32 %20, %21
  %23 = select i1 %22, i32 1626898128, i32 -1071305693
  store i32 %23, i32* %13
  store i1 true, i1* %15
  br label %41

; <label>:24:                                     ; preds = %16
  %25 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %26 = call dereferenceable(4) i32* @_ZSt3getILm2EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %25) #3
  %27 = load i32, i32* %26, align 4
  %28 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %5, align 8
  %29 = call dereferenceable(4) i32* @_ZSt3getILm2EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16) %28) #3
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %27, %30
  %32 = select i1 %31, i32 -2041738000, i32 -1636382702
  store i32 %32, i32* %13
  store i1 false, i1* %14
  br label %41

; <label>:33:                                     ; preds = %16
  %34 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %5, align 8
  %35 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %36 = call zeroext i1 @_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm3ELm3EE6__lessERKS1_S4_(%"class.std::tuple.19"* dereferenceable(16) %34, %"class.std::tuple.19"* dereferenceable(16) %35)
  store i32 -2041738000, i32* %13
  store i1 %36, i1* %14
  br label %41

; <label>:37:                                     ; preds = %16
  %38 = load i1, i1* %14
  store i32 1626898128, i32* %13
  store i1 %38, i1* %15
  br label %41

; <label>:39:                                     ; preds = %16
  %40 = load i1, i1* %15
  ret i1 %40

; <label>:41:                                     ; preds = %37, %33, %24, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt12__get_helperILm1EiJiEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.5"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %2, align 8
  %4 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJiiEE7_M_headERKS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %3) #3
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJiiEE7_M_headERKS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.5"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 4
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.7"*
  %7 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm1EiLb0EE7_M_headERKS0_(%"struct.std::_Head_base.7"* dereferenceable(4) %6) #3
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm1EiLb0EE7_M_headERKS0_(%"struct.std::_Head_base.7"* dereferenceable(4)) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.461
  %6 = load i32, i32* @y.462
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1902673657, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1902673657, label %18
    i32 194437845, label %26
    i32 -706256177, label %56
    i32 -1916069526, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 194437845, i32 -1916069526
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Head_base.7"*, align 8
  store %"struct.std::_Head_base.7"* %0, %"struct.std::_Head_base.7"** %27, align 8
  %28 = load %"struct.std::_Head_base.7"*, %"struct.std::_Head_base.7"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Head_base.7", %"struct.std::_Head_base.7"* %28, i32 0, i32 0
  store i32* %29, i32** %2
  %30 = load i32, i32* @x.461
  %31 = load i32, i32* @y.462
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -706256177, i32 -1916069526
  store i32 %55, i32* %14
  br label %62

; <label>:56:                                     ; preds = %15
  %57 = load volatile i32*, i32** %2
  ret i32* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Head_base.7"*, align 8
  store %"struct.std::_Head_base.7"* %0, %"struct.std::_Head_base.7"** %59, align 8
  %60 = load %"struct.std::_Head_base.7"*, %"struct.std::_Head_base.7"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::_Head_base.7", %"struct.std::_Head_base.7"* %60, i32 0, i32 0
  store i32 194437845, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3getILm2EJxiiEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_(%"class.std::tuple.19"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %2, align 8
  %3 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %2, align 8
  %4 = bitcast %"class.std::tuple.19"* %3 to %"struct.std::_Tuple_impl.6"*
  %5 = call dereferenceable(4) i32* @_ZSt12__get_helperILm2EiJEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.6"* dereferenceable(4) %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNSt15__tuple_compareISt5tupleIJxiiEES1_Lm3ELm3EE6__lessERKS1_S4_(%"class.std::tuple.19"* dereferenceable(16), %"class.std::tuple.19"* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.465
  %6 = load i32, i32* @y.466
  %7 = add i32 %5, 971865611
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 971865611
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -953786089, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %48
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -953786089, label %19
    i32 -420107456, label %27
    i32 786798351, label %44
    i32 832025835, label %45
  ]

; <label>:18:                                     ; preds = %16
  br label %48

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -420107456, i32 832025835
  store i32 %26, i32* %15
  br label %48

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple.19"*, align 8
  %29 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %28, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %29, align 8
  %30 = load i32, i32* @x.465
  %31 = load i32, i32* @y.466
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 786798351, i32 832025835
  store i32 %43, i32* %15
  br label %48

; <label>:44:                                     ; preds = %16
  ret i1 false

; <label>:45:                                     ; preds = %16
  %46 = alloca %"class.std::tuple.19"*, align 8
  %47 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %46, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %47, align 8
  store i32 -420107456, i32* %15
  br label %48

; <label>:48:                                     ; preds = %45, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt12__get_helperILm2EiJEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE(%"struct.std::_Tuple_impl.6"* dereferenceable(4)) #5 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  store %"struct.std::_Tuple_impl.6"* %0, %"struct.std::_Tuple_impl.6"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %2, align 8
  %4 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm2EJiEE7_M_headERKS0_(%"struct.std::_Tuple_impl.6"* dereferenceable(4) %3) #3
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm2EJiEE7_M_headERKS0_(%"struct.std::_Tuple_impl.6"* dereferenceable(4)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  store %"struct.std::_Tuple_impl.6"* %0, %"struct.std::_Tuple_impl.6"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.6"* %3 to %"struct.std::_Head_base"*
  %5 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm2EiLb0EE7_M_headERKS0_(%"struct.std::_Head_base"* dereferenceable(4) %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm2EiLb0EE7_M_headERKS0_(%"struct.std::_Head_base"* dereferenceable(4)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %2, align 8
  %3 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %3, i32 0, i32 0
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.20"* @_ZNSt11_Tuple_implILm0EJxiiEEaSEOS0_(%"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %3, align 8
  store %"struct.std::_Tuple_impl.20"* %1, %"struct.std::_Tuple_impl.20"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_headERS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %6) #3
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  %9 = load i64, i64* %8, align 8
  %10 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_headERS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %5) #3
  store i64 %9, i64* %10, align 8
  %11 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %4, align 8
  %12 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %11) #3
  %13 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZSt4moveIRSt11_Tuple_implILm1EJiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %12) #3
  %14 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %5) #3
  %15 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm1EJiiEEaSEOS0_(%"struct.std::_Tuple_impl.5"* %14, %"struct.std::_Tuple_impl.5"* dereferenceable(8) %13) #3
  ret %"struct.std::_Tuple_impl.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm1EJiiEEaSEOS0_(%"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %3, align 8
  store %"struct.std::_Tuple_impl.5"* %1, %"struct.std::_Tuple_impl.5"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %4, align 8
  %7 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJiiEE7_M_headERS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %6) #3
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  %9 = load i32, i32* %8, align 4
  %10 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJiiEE7_M_headERS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %5) #3
  store i32 %9, i32* %10, align 4
  %11 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %4, align 8
  %12 = call dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZNSt11_Tuple_implILm1EJiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZSt4moveIRSt11_Tuple_implILm2EJiEEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::_Tuple_impl.6"* dereferenceable(4) %12) #3
  %14 = call dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZNSt11_Tuple_implILm1EJiiEE7_M_tailERS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %5) #3
  %15 = call dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZNSt11_Tuple_implILm2EJiEEaSEOS0_(%"struct.std::_Tuple_impl.6"* %14, %"struct.std::_Tuple_impl.6"* dereferenceable(4) %13) #3
  ret %"struct.std::_Tuple_impl.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZNSt11_Tuple_implILm2EJiEEaSEOS0_(%"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"* dereferenceable(4)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  store %"struct.std::_Tuple_impl.6"* %0, %"struct.std::_Tuple_impl.6"** %3, align 8
  store %"struct.std::_Tuple_impl.6"* %1, %"struct.std::_Tuple_impl.6"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %4, align 8
  %7 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm2EJiEE7_M_headERS0_(%"struct.std::_Tuple_impl.6"* dereferenceable(4) %6) #3
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  %9 = load i32, i32* %8, align 4
  %10 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm2EJiEE7_M_headERS0_(%"struct.std::_Tuple_impl.6"* dereferenceable(4) %5) #3
  store i32 %9, i32* %10, align 4
  ret %"struct.std::_Tuple_impl.6"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt5tupleIJxiiEEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"class.std::tuple.19"*, %"class.std::tuple.19"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %6 = alloca %"class.std::tuple.19"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %4, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %7, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %6, align 8
  %8 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  %9 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, i32 0, i32 0
  %10 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %4) #3
  %11 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %12 = call zeroext i1 @_ZNKSt7greaterISt5tupleIJxiiEEEclERKS1_S4_(%"struct.std::greater"* %9, %"class.std::tuple.19"* dereferenceable(16) %10, %"class.std::tuple.19"* dereferenceable(16) %11)
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt5tupleIJxiiEEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.481
  %5 = load i32, i32* @y.482
  %6 = add i32 %4, 1880094405
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1880094405
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1835366593, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1835366593, label %18
    i32 1147993833, label %38
    i32 849371876, label %70
    i32 6480617, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1147993833, i32 6480617
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::greater", align 1
  %40 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %40, align 8
  %41 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %40, align 8
  %42 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %41, i32 0, i32 0
  %43 = load i32, i32* @x.481
  %44 = load i32, i32* @y.482
  %45 = add i32 %43, 1315799204
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1315799204
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 849371876, i32 6480617
  store i32 %69, i32* %14
  br label %76

; <label>:70:                                     ; preds = %15
  ret void

; <label>:71:                                     ; preds = %15
  %72 = alloca %"struct.std::greater", align 1
  %73 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %73, align 8
  %74 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %73, align 8
  %75 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %74, i32 0, i32 0
  store i32 1147993833, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt5tupleIJxiiEEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::greater", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE9push_backEOS1_(%"class.std::vector.14"*, %"class.std::tuple.19"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.485
  %6 = load i32, i32* @y.486
  %7 = add i32 %5, 130550682
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 130550682
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1474731159, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1474731159, label %19
    i32 1746535218, label %39
    i32 -2105912815, label %72
    i32 -2141819054, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1746535218, i32 -2141819054
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.14"*, align 8
  %41 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %40, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %41, align 8
  %42 = load %"class.std::vector.14"*, %"class.std::vector.14"** %40, align 8
  %43 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %41, align 8
  %44 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %43) #3
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.14"* %42, %"class.std::tuple.19"* dereferenceable(16) %44)
  %45 = load i32, i32* @x.485
  %46 = load i32, i32* @y.486
  %47 = add i32 %45, -907216902
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -907216902
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -2105912815, i32 -2141819054
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::vector.14"*, align 8
  %75 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %74, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %75, align 8
  %76 = load %"class.std::vector.14"*, %"class.std::vector.14"** %74, align 8
  %77 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %75, align 8
  %78 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %77) #3
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.14"* %76, %"class.std::tuple.19"* dereferenceable(16) %78)
  store i32 1746535218, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"class.std::tuple.19"*, %"class.std::tuple.19"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %5 = alloca %"struct.std::greater", align 1
  %6 = alloca %"class.std::tuple.19", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %9 = alloca %"class.std::tuple.19", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %11 = alloca %"struct.std::greater", align 1
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %4, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %14, align 8
  %15 = call %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.32"* %4, i64 1) #3
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %7, i32 0, i32 0
  store %"class.std::tuple.19"* %15, %"class.std::tuple.19"** %16, align 8
  %17 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %7) #3
  %18 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %17) #3
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %6, %"class.std::tuple.19"* dereferenceable(16) %18) #3
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %8 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = call i64 @_ZN9__gnu_cxxmiIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %3) #3
  %22 = sub i64 %21, 7441486346556807525
  %23 = sub i64 %22, 1
  %24 = add i64 %23, 7441486346556807525
  %25 = sub nsw i64 %21, 1
  %26 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %6) #3
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %9, %"class.std::tuple.19"* dereferenceable(16) %26) #3
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt5tupleIJxiiEEEEENS0_14_Iter_comp_valIT_EES7_()
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %8, i32 0, i32 0
  %28 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %27, align 8
  %29 = bitcast %"class.std::tuple.19"* %9 to { i64, i64 }*
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"class.std::tuple.19"* %28, i64 %24, i64 0, i64 %31, i64 %33)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.14"*, %"class.std::tuple.19"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.19"*
  %4 = alloca %"class.std::tuple.19"*
  %5 = alloca %"class.std::vector.14"*
  %6 = alloca %"class.std::vector.14"*, align 8
  %7 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %6, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %7, align 8
  %8 = load %"class.std::vector.14"*, %"class.std::vector.14"** %6, align 8
  store %"class.std::vector.14"* %8, %"class.std::vector.14"** %5
  %9 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  %10 = bitcast %"class.std::vector.14"* %9 to %"struct.std::_Vector_base.15"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %12, align 8
  store %"class.std::tuple.19"* %13, %"class.std::tuple.19"** %4
  %14 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  %15 = bitcast %"class.std::vector.14"* %14 to %"struct.std::_Vector_base.15"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %17, align 8
  store %"class.std::tuple.19"* %18, %"class.std::tuple.19"** %3
  %19 = alloca i32
  store i32 -1941551951, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %51
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1941551951, label %23
    i32 -114859751, label %28
    i32 -239413721, label %46
    i32 -1064142849, label %50
  ]

; <label>:22:                                     ; preds = %20
  br label %51

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %4
  %25 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %3
  %26 = icmp ne %"class.std::tuple.19"* %24, %25
  %27 = select i1 %26, i32 -114859751, i32 -239413721
  store i32 %27, i32* %19
  br label %51

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  %30 = bitcast %"class.std::vector.14"* %29 to %"struct.std::_Vector_base.15"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %31 to %"class.std::allocator.16"*
  %33 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  %34 = bitcast %"class.std::vector.14"* %33 to %"struct.std::_Vector_base.15"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %36, align 8
  %38 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %39 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt7forwardISt5tupleIJxiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.19"* dereferenceable(16) %38) #3
  call void @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.16"* dereferenceable(1) %32, %"class.std::tuple.19"* %37, %"class.std::tuple.19"* dereferenceable(16) %39)
  %40 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  %41 = bitcast %"class.std::vector.14"* %40 to %"struct.std::_Vector_base.15"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %43, align 8
  %45 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %44, i32 1
  store %"class.std::tuple.19"* %45, %"class.std::tuple.19"** %43, align 8
  store i32 -1064142849, i32* %19
  br label %51

; <label>:46:                                     ; preds = %20
  %47 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %48 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt7forwardISt5tupleIJxiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.19"* dereferenceable(16) %47) #3
  %49 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  call void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.14"* %49, %"class.std::tuple.19"* dereferenceable(16) %48)
  store i32 -1064142849, i32* %19
  br label %51

; <label>:50:                                     ; preds = %20
  ret void

; <label>:51:                                     ; preds = %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.16"* dereferenceable(1), %"class.std::tuple.19"*, %"class.std::tuple.19"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.491
  %7 = load i32, i32* @y.492
  %8 = sub i32 %6, 1060435337
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1060435337
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 92048395, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 92048395, label %20
    i32 887121944, label %40
    i32 -715584572, label %63
    i32 -1471650427, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 887121944, i32 -1471650427
  store i32 %39, i32* %16
  br label %73

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.16"*, align 8
  %42 = alloca %"class.std::tuple.19"*, align 8
  %43 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %41, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %42, align 8
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %43, align 8
  %44 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %41, align 8
  %45 = bitcast %"class.std::allocator.16"* %44 to %"class.__gnu_cxx::new_allocator.17"*
  %46 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %42, align 8
  %47 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %43, align 8
  %48 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt7forwardISt5tupleIJxiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.19"* dereferenceable(16) %47) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.17"* %45, %"class.std::tuple.19"* %46, %"class.std::tuple.19"* dereferenceable(16) %48)
  %49 = load i32, i32* @x.491
  %50 = load i32, i32* @y.492
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -715584572, i32 -1471650427
  store i32 %62, i32* %16
  br label %73

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.16"*, align 8
  %66 = alloca %"class.std::tuple.19"*, align 8
  %67 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %65, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %66, align 8
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %67, align 8
  %68 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %65, align 8
  %69 = bitcast %"class.std::allocator.16"* %68 to %"class.__gnu_cxx::new_allocator.17"*
  %70 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %66, align 8
  %71 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %67, align 8
  %72 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt7forwardISt5tupleIJxiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.19"* dereferenceable(16) %71) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.17"* %69, %"class.std::tuple.19"* %70, %"class.std::tuple.19"* dereferenceable(16) %72)
  store i32 887121944, i32* %16
  br label %73

; <label>:73:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.19"* @_ZSt7forwardISt5tupleIJxiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.19"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"class.std::tuple.19"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.493
  %6 = load i32, i32* @y.494
  %7 = sub i32 %5, -82758896
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -82758896
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 363780392, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 363780392, label %19
    i32 168602177, label %39
    i32 2135108947, label %68
    i32 -697653563, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 168602177, i32 -697653563
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %40, align 8
  %41 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %40, align 8
  store %"class.std::tuple.19"* %41, %"class.std::tuple.19"** %2
  %42 = load i32, i32* @x.493
  %43 = load i32, i32* @y.494
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 2135108947, i32 -697653563
  store i32 %67, i32* %15
  br label %73

; <label>:68:                                     ; preds = %16
  %69 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %2
  ret %"class.std::tuple.19"* %69

; <label>:70:                                     ; preds = %16
  %71 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %71, align 8
  %72 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %71, align 8
  store i32 168602177, i32* %15
  br label %73

; <label>:73:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.14"*, %"class.std::tuple.19"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.495
  %4 = load i32, i32* @y.496
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %413

; <label>:16:                                     ; preds = %2, %413
  %17 = alloca %"class.std::vector.14"*, align 8
  %18 = alloca %"class.std::tuple.19"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::tuple.19"*, align 8
  %21 = alloca %"class.std::tuple.19"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %17, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %18, align 8
  %24 = load %"class.std::vector.14"*, %"class.std::vector.14"** %17, align 8
  %25 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.14"* %24, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %25, i64* %19, align 8
  %26 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %27 = load i64, i64* %19, align 8
  %28 = call %"class.std::tuple.19"* @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.15"* %26, i64 %27)
  store %"class.std::tuple.19"* %28, %"class.std::tuple.19"** %20, align 8
  %29 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  store %"class.std::tuple.19"* %29, %"class.std::tuple.19"** %21, align 8
  %30 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %31 to %"class.std::allocator.16"*
  %33 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  %34 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %24) #3
  %35 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %33, i64 %34
  %36 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %18, align 8
  %37 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt7forwardISt5tupleIJxiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.19"* dereferenceable(16) %36) #3
  %38 = load i32, i32* @x.495
  %39 = load i32, i32* @y.496
  %40 = sub i32 %38, 371368275
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 371368275
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %413

; <label>:64:                                     ; preds = %16
  invoke void @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.16"* dereferenceable(1) %32, %"class.std::tuple.19"* %35, %"class.std::tuple.19"* dereferenceable(16) %37)
          to label %65 unwind label %123

; <label>:65:                                     ; preds = %64
  %66 = load i32, i32* @x.495
  %67 = load i32, i32* @y.496
  %68 = add i32 %66, 204863632
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, 204863632
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %435

; <label>:80:                                     ; preds = %65, %435
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %21, align 8
  %81 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %83, align 8
  %85 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %85, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %86, i32 0, i32 1
  %88 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %87, align 8
  %89 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  %90 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %91 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %90) #3
  %92 = load i32, i32* @x.495
  %93 = load i32, i32* @y.496
  %94 = sub i32 %92, 1905637437
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 1905637437
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %435

; <label>:118:                                    ; preds = %80
  %119 = invoke %"class.std::tuple.19"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxiiEES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.std::tuple.19"* %84, %"class.std::tuple.19"* %88, %"class.std::tuple.19"* %89, %"class.std::allocator.16"* dereferenceable(1) %91)
          to label %120 unwind label %123

; <label>:120:                                    ; preds = %118
  store %"class.std::tuple.19"* %119, %"class.std::tuple.19"** %21, align 8
  %121 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %21, align 8
  %122 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %121, i32 1
  store %"class.std::tuple.19"* %122, %"class.std::tuple.19"** %21, align 8
  br label %305

; <label>:123:                                    ; preds = %118, %64
  %124 = landingpad { i8*, i32 }
          catch i8* null
  %125 = extractvalue { i8*, i32 } %124, 0
  store i8* %125, i8** %22, align 8
  %126 = extractvalue { i8*, i32 } %124, 1
  store i32 %126, i32* %23, align 4
  br label %127

; <label>:127:                                    ; preds = %123
  %128 = load i32, i32* @x.495
  %129 = load i32, i32* @y.496
  %130 = add i32 %128, 1978439917
  %131 = sub i32 %130, 1
  %132 = sub i32 %131, 1978439917
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = xor i1 %136, true
  %139 = xor i1 %137, true
  %140 = xor i1 false, true
  %141 = and i1 %138, false
  %142 = and i1 %136, %140
  %143 = and i1 %139, false
  %144 = and i1 %137, %140
  %145 = or i1 %141, %142
  %146 = or i1 %143, %144
  %147 = xor i1 %145, %146
  %148 = or i1 %138, %139
  %149 = xor i1 %148, true
  %150 = or i1 false, %140
  %151 = and i1 %149, %150
  %152 = or i1 %147, %151
  %153 = or i1 %136, %137
  br i1 %152, label %154, label %447

; <label>:154:                                    ; preds = %127, %447
  %155 = load i8*, i8** %22, align 8
  %156 = call i8* @__cxa_begin_catch(i8* %155) #3
  %157 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %21, align 8
  %158 = icmp ne %"class.std::tuple.19"* %157, null
  %159 = load i32, i32* @x.495
  %160 = load i32, i32* @y.496
  %161 = sub i32 %159, 1222859330
  %162 = sub i32 %161, 1
  %163 = add i32 %162, 1222859330
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 false, true
  %172 = and i1 %169, false
  %173 = and i1 %167, %171
  %174 = and i1 %170, false
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 false, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  br i1 %183, label %185, label %447

; <label>:185:                                    ; preds = %154
  br i1 %158, label %251, label %186

; <label>:186:                                    ; preds = %185
  %187 = load i32, i32* @x.495
  %188 = load i32, i32* @y.496
  %189 = sub i32 %187, 5382687
  %190 = sub i32 %189, 1
  %191 = add i32 %190, 5382687
  %192 = sub i32 %187, 1
  %193 = mul i32 %187, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %188, 10
  %197 = xor i1 %195, true
  %198 = xor i1 %196, true
  %199 = xor i1 true, true
  %200 = and i1 %197, true
  %201 = and i1 %195, %199
  %202 = and i1 %198, true
  %203 = and i1 %196, %199
  %204 = or i1 %200, %201
  %205 = or i1 %202, %203
  %206 = xor i1 %204, %205
  %207 = or i1 %197, %198
  %208 = xor i1 %207, true
  %209 = or i1 true, %199
  %210 = and i1 %208, %209
  %211 = or i1 %206, %210
  %212 = or i1 %195, %196
  br i1 %211, label %213, label %452

; <label>:213:                                    ; preds = %186, %452
  %214 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %215 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %214, i32 0, i32 0
  %216 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %215 to %"class.std::allocator.16"*
  %217 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  %218 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %24) #3
  %219 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %217, i64 %218
  %220 = load i32, i32* @x.495
  %221 = load i32, i32* @y.496
  %222 = sub i32 0, 1
  %223 = add i32 %220, %222
  %224 = sub i32 %220, 1
  %225 = mul i32 %220, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %221, 10
  %229 = xor i1 %227, true
  %230 = xor i1 %228, true
  %231 = xor i1 true, true
  %232 = and i1 %229, true
  %233 = and i1 %227, %231
  %234 = and i1 %230, true
  %235 = and i1 %228, %231
  %236 = or i1 %232, %233
  %237 = or i1 %234, %235
  %238 = xor i1 %236, %237
  %239 = or i1 %229, %230
  %240 = xor i1 %239, true
  %241 = or i1 true, %231
  %242 = and i1 %240, %241
  %243 = or i1 %238, %242
  %244 = or i1 %227, %228
  br i1 %243, label %245, label %452

; <label>:245:                                    ; preds = %213
  invoke void @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.16"* dereferenceable(1) %216, %"class.std::tuple.19"* %219)
          to label %246 unwind label %247

; <label>:246:                                    ; preds = %245
  br label %257

; <label>:247:                                    ; preds = %303, %302, %251, %245
  %248 = landingpad { i8*, i32 }
          cleanup
  %249 = extractvalue { i8*, i32 } %248, 0
  store i8* %249, i8** %22, align 8
  %250 = extractvalue { i8*, i32 } %248, 1
  store i32 %250, i32* %23, align 4
  invoke void @__cxa_end_catch()
          to label %304 unwind label %355

; <label>:251:                                    ; preds = %185
  %252 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  %253 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %21, align 8
  %254 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %255 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %254) #3
  invoke void @_ZSt8_DestroyIPSt5tupleIJxiiEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.19"* %252, %"class.std::tuple.19"* %253, %"class.std::allocator.16"* dereferenceable(1) %255)
          to label %256 unwind label %247

; <label>:256:                                    ; preds = %251
  br label %257

; <label>:257:                                    ; preds = %256, %246
  %258 = load i32, i32* @x.495
  %259 = load i32, i32* @y.496
  %260 = sub i32 %258, 1296299935
  %261 = sub i32 %260, 1
  %262 = add i32 %261, 1296299935
  %263 = sub i32 %258, 1
  %264 = mul i32 %258, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %259, 10
  %268 = xor i1 %266, true
  %269 = xor i1 %267, true
  %270 = xor i1 true, true
  %271 = and i1 %268, true
  %272 = and i1 %266, %270
  %273 = and i1 %269, true
  %274 = and i1 %267, %270
  %275 = or i1 %271, %272
  %276 = or i1 %273, %274
  %277 = xor i1 %275, %276
  %278 = or i1 %268, %269
  %279 = xor i1 %278, true
  %280 = or i1 true, %270
  %281 = and i1 %279, %280
  %282 = or i1 %277, %281
  %283 = or i1 %266, %267
  br i1 %282, label %284, label %459

; <label>:284:                                    ; preds = %257, %459
  %285 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %286 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  %287 = load i64, i64* %19, align 8
  %288 = load i32, i32* @x.495
  %289 = load i32, i32* @y.496
  %290 = sub i32 %288, -1977125679
  %291 = sub i32 %290, 1
  %292 = add i32 %291, -1977125679
  %293 = sub i32 %288, 1
  %294 = mul i32 %288, %292
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %289, 10
  %298 = and i1 %296, %297
  %299 = xor i1 %296, %297
  %300 = or i1 %298, %299
  %301 = or i1 %296, %297
  br i1 %300, label %302, label %459

; <label>:302:                                    ; preds = %284
  invoke void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.15"* %285, %"class.std::tuple.19"* %286, i64 %287)
          to label %303 unwind label %247

; <label>:303:                                    ; preds = %302
  invoke void @__cxa_rethrow() #12
          to label %412 unwind label %247

; <label>:304:                                    ; preds = %247
  br label %350

; <label>:305:                                    ; preds = %120
  %306 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %307 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %306, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %307, i32 0, i32 0
  %309 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %308, align 8
  %310 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %311 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %310, i32 0, i32 0
  %312 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %311, i32 0, i32 1
  %313 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %312, align 8
  %314 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %315 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %314) #3
  call void @_ZSt8_DestroyIPSt5tupleIJxiiEES1_EvT_S3_RSaIT0_E(%"class.std::tuple.19"* %309, %"class.std::tuple.19"* %313, %"class.std::allocator.16"* dereferenceable(1) %315)
  %316 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %317 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %318 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %317, i32 0, i32 0
  %319 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %318, i32 0, i32 0
  %320 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %319, align 8
  %321 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %322 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %321, i32 0, i32 0
  %323 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %322, i32 0, i32 2
  %324 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %323, align 8
  %325 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %326 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %325, i32 0, i32 0
  %327 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %326, i32 0, i32 0
  %328 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %327, align 8
  %329 = ptrtoint %"class.std::tuple.19"* %324 to i64
  %330 = ptrtoint %"class.std::tuple.19"* %328 to i64
  %331 = add i64 %329, 7217555007745298473
  %332 = sub i64 %331, %330
  %333 = sub i64 %332, 7217555007745298473
  %334 = sub i64 %329, %330
  %335 = sdiv exact i64 %333, 16
  call void @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.15"* %316, %"class.std::tuple.19"* %320, i64 %335)
  %336 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  %337 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %338 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %337, i32 0, i32 0
  %339 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %338, i32 0, i32 0
  store %"class.std::tuple.19"* %336, %"class.std::tuple.19"** %339, align 8
  %340 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %21, align 8
  %341 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %342 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %341, i32 0, i32 0
  %343 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %342, i32 0, i32 1
  store %"class.std::tuple.19"* %340, %"class.std::tuple.19"** %343, align 8
  %344 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  %345 = load i64, i64* %19, align 8
  %346 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %344, i64 %345
  %347 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %348 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %347, i32 0, i32 0
  %349 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %348, i32 0, i32 2
  store %"class.std::tuple.19"* %346, %"class.std::tuple.19"** %349, align 8
  ret void

; <label>:350:                                    ; preds = %304
  %351 = load i8*, i8** %22, align 8
  %352 = load i32, i32* %23, align 4
  %353 = insertvalue { i8*, i32 } undef, i8* %351, 0
  %354 = insertvalue { i8*, i32 } %353, i32 %352, 1
  resume { i8*, i32 } %354

; <label>:355:                                    ; preds = %247
  %356 = load i32, i32* @x.495
  %357 = load i32, i32* @y.496
  %358 = add i32 %356, -1118852936
  %359 = sub i32 %358, 1
  %360 = sub i32 %359, -1118852936
  %361 = sub i32 %356, 1
  %362 = mul i32 %356, %360
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %357, 10
  %366 = xor i1 %364, true
  %367 = xor i1 %365, true
  %368 = xor i1 false, true
  %369 = and i1 %366, false
  %370 = and i1 %364, %368
  %371 = and i1 %367, false
  %372 = and i1 %365, %368
  %373 = or i1 %369, %370
  %374 = or i1 %371, %372
  %375 = xor i1 %373, %374
  %376 = or i1 %366, %367
  %377 = xor i1 %376, true
  %378 = or i1 false, %368
  %379 = and i1 %377, %378
  %380 = or i1 %375, %379
  %381 = or i1 %364, %365
  br i1 %380, label %382, label %463

; <label>:382:                                    ; preds = %355, %463
  %383 = landingpad { i8*, i32 }
          catch i8* null
  %384 = extractvalue { i8*, i32 } %383, 0
  call void @__clang_call_terminate(i8* %384) #10
  %385 = load i32, i32* @x.495
  %386 = load i32, i32* @y.496
  %387 = sub i32 %385, -737037750
  %388 = sub i32 %387, 1
  %389 = add i32 %388, -737037750
  %390 = sub i32 %385, 1
  %391 = mul i32 %385, %389
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %386, 10
  %395 = xor i1 %393, true
  %396 = xor i1 %394, true
  %397 = xor i1 true, true
  %398 = and i1 %395, true
  %399 = and i1 %393, %397
  %400 = and i1 %396, true
  %401 = and i1 %394, %397
  %402 = or i1 %398, %399
  %403 = or i1 %400, %401
  %404 = xor i1 %402, %403
  %405 = or i1 %395, %396
  %406 = xor i1 %405, true
  %407 = or i1 true, %397
  %408 = and i1 %406, %407
  %409 = or i1 %404, %408
  %410 = or i1 %393, %394
  br i1 %409, label %411, label %463

; <label>:411:                                    ; preds = %382
  unreachable

; <label>:412:                                    ; preds = %303
  unreachable

; <label>:413:                                    ; preds = %16, %2
  %414 = alloca %"class.std::vector.14"*, align 8
  %415 = alloca %"class.std::tuple.19"*, align 8
  %416 = alloca i64, align 8
  %417 = alloca %"class.std::tuple.19"*, align 8
  %418 = alloca %"class.std::tuple.19"*, align 8
  %419 = alloca i8*
  %420 = alloca i32
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %414, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %415, align 8
  %421 = load %"class.std::vector.14"*, %"class.std::vector.14"** %414, align 8
  %422 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.14"* %421, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %422, i64* %416, align 8
  %423 = bitcast %"class.std::vector.14"* %421 to %"struct.std::_Vector_base.15"*
  %424 = load i64, i64* %416, align 8
  %425 = call %"class.std::tuple.19"* @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.15"* %423, i64 %424)
  store %"class.std::tuple.19"* %425, %"class.std::tuple.19"** %417, align 8
  %426 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %417, align 8
  store %"class.std::tuple.19"* %426, %"class.std::tuple.19"** %418, align 8
  %427 = bitcast %"class.std::vector.14"* %421 to %"struct.std::_Vector_base.15"*
  %428 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %427, i32 0, i32 0
  %429 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %428 to %"class.std::allocator.16"*
  %430 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %417, align 8
  %431 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %421) #3
  %432 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %430, i64 %431
  %433 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %415, align 8
  %434 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt7forwardISt5tupleIJxiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.19"* dereferenceable(16) %433) #3
  br label %16

; <label>:435:                                    ; preds = %80, %65
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %21, align 8
  %436 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %437 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %436, i32 0, i32 0
  %438 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %437, i32 0, i32 0
  %439 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %438, align 8
  %440 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %441 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %440, i32 0, i32 0
  %442 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %441, i32 0, i32 1
  %443 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %442, align 8
  %444 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  %445 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %446 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %445) #3
  br label %80

; <label>:447:                                    ; preds = %154, %127
  %448 = load i8*, i8** %22, align 8
  %449 = call i8* @__cxa_begin_catch(i8* %448) #3
  %450 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %21, align 8
  %451 = icmp ne %"class.std::tuple.19"* %450, null
  br label %154

; <label>:452:                                    ; preds = %213, %186
  %453 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %454 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %453, i32 0, i32 0
  %455 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %454 to %"class.std::allocator.16"*
  %456 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  %457 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %24) #3
  %458 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %456, i64 %457
  br label %213

; <label>:459:                                    ; preds = %284, %257
  %460 = bitcast %"class.std::vector.14"* %24 to %"struct.std::_Vector_base.15"*
  %461 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  %462 = load i64, i64* %19, align 8
  br label %284

; <label>:463:                                    ; preds = %382, %355
  %464 = landingpad { i8*, i32 }
          catch i8* null
  %465 = extractvalue { i8*, i32 } %464, 0
  call void @__clang_call_terminate(i8* %465) #10
  br label %382
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.17"*, %"class.std::tuple.19"*, %"class.std::tuple.19"* dereferenceable(16)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %5 = alloca %"class.std::tuple.19"*, align 8
  %6 = alloca %"class.std::tuple.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %5, align 8
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  %8 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %5, align 8
  %9 = bitcast %"class.std::tuple.19"* %8 to i8*
  %10 = bitcast i8* %9 to %"class.std::tuple.19"*
  %11 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %12 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt7forwardISt5tupleIJxiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.19"* dereferenceable(16) %11) #3
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %10, %"class.std::tuple.19"* dereferenceable(16) %12) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.14"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"class.std::vector.14"*
  %8 = alloca i64*
  %9 = alloca i64*
  %10 = alloca i8**
  %11 = alloca i64*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.499
  %15 = load i32, i32* @y.500
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %13
  %22 = icmp slt i32 %15, 10
  store i1 %22, i1* %12
  %23 = alloca i32
  store i32 1613289355, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %316
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 1613289355, label %28
    i32 -971293404, label %36
    i32 1316876978, label %71
    i32 579662162, label %74
    i32 43238075, label %77
    i32 2036968290, label %104
    i32 1302075307, label %150
    i32 1871048688, label %153
    i32 -1995865180, label %181
    i32 -755344288, label %213
    i32 1853566523, label %216
    i32 -124044288, label %219
    i32 1180496149, label %222
    i32 1915394470, label %224
    i32 -1872945054, label %258
    i32 -1383836891, label %310
  ]

; <label>:27:                                     ; preds = %25
  br label %316

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -971293404, i32 1915394470
  store i32 %35, i32* %23
  br label %316

; <label>:36:                                     ; preds = %25
  %37 = alloca %"class.std::vector.14"*, align 8
  %38 = alloca i64, align 8
  store i64* %38, i64** %11
  %39 = alloca i8*, align 8
  store i8** %39, i8*** %10
  %40 = alloca i64, align 8
  store i64* %40, i64** %9
  %41 = alloca i64, align 8
  store i64* %41, i64** %8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %37, align 8
  %42 = load volatile i64*, i64** %11
  store i64 %1, i64* %42, align 8
  %43 = load volatile i8**, i8*** %10
  store i8* %2, i8** %43, align 8
  %44 = load %"class.std::vector.14"*, %"class.std::vector.14"** %37, align 8
  store %"class.std::vector.14"* %44, %"class.std::vector.14"** %7
  %45 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %7
  %46 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %45) #3
  %47 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %7
  %48 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %47) #3
  %49 = add i64 %46, -731985281507637931
  %50 = sub i64 %49, %48
  %51 = sub i64 %50, -731985281507637931
  %52 = sub i64 %46, %48
  %53 = load volatile i64*, i64** %11
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %51, %54
  store i1 %55, i1* %6
  %56 = load i32, i32* @x.499
  %57 = load i32, i32* @y.500
  %58 = sub i32 %56, 455299341
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 455299341
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 1316876978, i32 1915394470
  store i32 %70, i32* %23
  br label %316

; <label>:71:                                     ; preds = %25
  %72 = load volatile i1, i1* %6
  %73 = select i1 %72, i32 579662162, i32 43238075
  store i32 %73, i32* %23
  br label %316

; <label>:74:                                     ; preds = %25
  %75 = load volatile i8**, i8*** %10
  %76 = load i8*, i8** %75, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %76) #12
  unreachable

; <label>:77:                                     ; preds = %25
  %78 = load i32, i32* @x.499
  %79 = load i32, i32* @y.500
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 2036968290, i32 -1872945054
  store i32 %103, i32* %23
  br label %316

; <label>:104:                                    ; preds = %25
  %105 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %7
  %106 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %105) #3
  %107 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %7
  %108 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %107) #3
  %109 = load volatile i64*, i64** %8
  store i64 %108, i64* %109, align 8
  %110 = load volatile i64*, i64** %11
  %111 = load volatile i64*, i64** %8
  %112 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %111, i64* dereferenceable(8) %110)
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 0, %113
  %115 = sub i64 %106, %114
  %116 = add i64 %106, %113
  %117 = load volatile i64*, i64** %9
  store i64 %115, i64* %117, align 8
  %118 = load volatile i64*, i64** %9
  %119 = load i64, i64* %118, align 8
  %120 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %7
  %121 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %120) #3
  %122 = icmp ult i64 %119, %121
  store i1 %122, i1* %5
  %123 = load i32, i32* @x.499
  %124 = load i32, i32* @y.500
  %125 = sub i32 %123, -902846718
  %126 = sub i32 %125, 1
  %127 = add i32 %126, -902846718
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = xor i1 %131, true
  %134 = xor i1 %132, true
  %135 = xor i1 false, true
  %136 = and i1 %133, false
  %137 = and i1 %131, %135
  %138 = and i1 %134, false
  %139 = and i1 %132, %135
  %140 = or i1 %136, %137
  %141 = or i1 %138, %139
  %142 = xor i1 %140, %141
  %143 = or i1 %133, %134
  %144 = xor i1 %143, true
  %145 = or i1 false, %135
  %146 = and i1 %144, %145
  %147 = or i1 %142, %146
  %148 = or i1 %131, %132
  %149 = select i1 %147, i32 1302075307, i32 -1872945054
  store i32 %149, i32* %23
  br label %316

; <label>:150:                                    ; preds = %25
  %151 = load volatile i1, i1* %5
  %152 = select i1 %151, i32 1853566523, i32 1871048688
  store i32 %152, i32* %23
  br label %316

; <label>:153:                                    ; preds = %25
  %154 = load i32, i32* @x.499
  %155 = load i32, i32* @y.500
  %156 = sub i32 %154, -254877056
  %157 = sub i32 %156, 1
  %158 = add i32 %157, -254877056
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 false, true
  %167 = and i1 %164, false
  %168 = and i1 %162, %166
  %169 = and i1 %165, false
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 false, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  %180 = select i1 %178, i32 -1995865180, i32 -1383836891
  store i32 %180, i32* %23
  br label %316

; <label>:181:                                    ; preds = %25
  %182 = load volatile i64*, i64** %9
  %183 = load i64, i64* %182, align 8
  %184 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %7
  %185 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %184) #3
  %186 = icmp ugt i64 %183, %185
  store i1 %186, i1* %4
  %187 = load i32, i32* @x.499
  %188 = load i32, i32* @y.500
  %189 = sub i32 0, 1
  %190 = add i32 %187, %189
  %191 = sub i32 %187, 1
  %192 = mul i32 %187, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %188, 10
  %196 = xor i1 %194, true
  %197 = xor i1 %195, true
  %198 = xor i1 true, true
  %199 = and i1 %196, true
  %200 = and i1 %194, %198
  %201 = and i1 %197, true
  %202 = and i1 %195, %198
  %203 = or i1 %199, %200
  %204 = or i1 %201, %202
  %205 = xor i1 %203, %204
  %206 = or i1 %196, %197
  %207 = xor i1 %206, true
  %208 = or i1 true, %198
  %209 = and i1 %207, %208
  %210 = or i1 %205, %209
  %211 = or i1 %194, %195
  %212 = select i1 %210, i32 -755344288, i32 -1383836891
  store i32 %212, i32* %23
  br label %316

; <label>:213:                                    ; preds = %25
  %214 = load volatile i1, i1* %4
  %215 = select i1 %214, i32 1853566523, i32 -124044288
  store i32 %215, i32* %23
  br label %316

; <label>:216:                                    ; preds = %25
  %217 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %7
  %218 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %217) #3
  store i32 1180496149, i32* %23
  store i64 %218, i64* %24
  br label %316

; <label>:219:                                    ; preds = %25
  %220 = load volatile i64*, i64** %9
  %221 = load i64, i64* %220, align 8
  store i32 1180496149, i32* %23
  store i64 %221, i64* %24
  br label %316

; <label>:222:                                    ; preds = %25
  %223 = load i64, i64* %24
  ret i64 %223

; <label>:224:                                    ; preds = %25
  %225 = alloca %"class.std::vector.14"*, align 8
  %226 = alloca i64, align 8
  %227 = alloca i8*, align 8
  %228 = alloca i64, align 8
  %229 = alloca i64, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %225, align 8
  store i64 %1, i64* %226, align 8
  store i8* %2, i8** %227, align 8
  %230 = load %"class.std::vector.14"*, %"class.std::vector.14"** %225, align 8
  %231 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %230) #3
  %232 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %230) #3
  %233 = add i64 0, -2293476397937849103
  %234 = sub i64 %233, %231
  %235 = sub i64 %234, -2293476397937849103
  %236 = sub i64 0, %231
  %237 = sub i64 0, %235
  %238 = sub i64 0, %232
  %239 = add i64 %237, %238
  %240 = sub i64 0, %239
  %241 = add i64 %235, %232
  %242 = add i64 %231, 895278599802906132
  %243 = sub i64 %242, %232
  %244 = sub i64 %243, 895278599802906132
  %245 = sub i64 %231, %232
  %246 = mul i64 %244, %232
  %247 = add i64 %231, 2981391792252005165
  %248 = sub i64 %247, %232
  %249 = sub i64 %248, 2981391792252005165
  %250 = sub i64 %231, %232
  %251 = mul i64 %249, %232
  %252 = shl i64 %231, %232
  %253 = sub i64 0, %232
  %254 = add i64 %231, %253
  %255 = sub i64 %231, %232
  %256 = load i64, i64* %226, align 8
  %257 = icmp ult i64 %254, %256
  store i32 -971293404, i32* %23
  br label %316

; <label>:258:                                    ; preds = %25
  %259 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %7
  %260 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %259) #3
  %261 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %7
  %262 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %261) #3
  %263 = load volatile i64*, i64** %8
  store i64 %262, i64* %263, align 8
  %264 = load volatile i64*, i64** %11
  %265 = load volatile i64*, i64** %8
  %266 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %265, i64* dereferenceable(8) %264)
  %267 = load i64, i64* %266, align 8
  %268 = sub i64 0, %267
  %269 = add i64 %260, %268
  %270 = sub i64 %260, %267
  %271 = mul i64 %269, %267
  %272 = sub i64 0, %260
  %273 = add i64 0, %272
  %274 = sub i64 0, %260
  %275 = sub i64 %273, -6620606856523168055
  %276 = add i64 %275, %267
  %277 = add i64 %276, -6620606856523168055
  %278 = add i64 %273, %267
  %279 = sub i64 0, %267
  %280 = add i64 %260, %279
  %281 = sub i64 %260, %267
  %282 = mul i64 %280, %267
  %283 = add i64 0, 1783656470468937347
  %284 = sub i64 %283, %260
  %285 = sub i64 %284, 1783656470468937347
  %286 = sub i64 0, %260
  %287 = sub i64 0, %267
  %288 = sub i64 %285, %287
  %289 = add i64 %285, %267
  %290 = shl i64 %260, %267
  %291 = add i64 0, -717976295388864815
  %292 = sub i64 %291, %260
  %293 = sub i64 %292, -717976295388864815
  %294 = sub i64 0, %260
  %295 = sub i64 %293, 7905816340533492197
  %296 = add i64 %295, %267
  %297 = add i64 %296, 7905816340533492197
  %298 = add i64 %293, %267
  %299 = shl i64 %260, %267
  %300 = add i64 %260, 4114874663723168734
  %301 = add i64 %300, %267
  %302 = sub i64 %301, 4114874663723168734
  %303 = add i64 %260, %267
  %304 = load volatile i64*, i64** %9
  store i64 %302, i64* %304, align 8
  %305 = load volatile i64*, i64** %9
  %306 = load i64, i64* %305, align 8
  %307 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %7
  %308 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"* %307) #3
  %309 = icmp ult i64 %306, %308
  store i32 2036968290, i32* %23
  br label %316

; <label>:310:                                    ; preds = %25
  %311 = load volatile i64*, i64** %9
  %312 = load i64, i64* %311, align 8
  %313 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %7
  %314 = call i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %313) #3
  %315 = icmp ugt i64 %312, %314
  store i32 -1995865180, i32* %23
  br label %316

; <label>:316:                                    ; preds = %310, %258, %224, %219, %216, %213, %181, %153, %150, %104, %77, %71, %36, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZNSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.15"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.15"*
  %5 = alloca %"struct.std::_Vector_base.15"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %5, align 8
  store %"struct.std::_Vector_base.15"* %7, %"struct.std::_Vector_base.15"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 771079465, i32* %9
  %10 = alloca %"class.std::tuple.19"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 771079465, label %14
    i32 1109821505, label %18
    i32 1731160911, label %24
    i32 1545445273, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1109821505, i32 1731160911
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %20 to %"class.std::allocator.16"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::tuple.19"* @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE8allocateERS2_m(%"class.std::allocator.16"* dereferenceable(1) %21, i64 %22)
  store i32 1545445273, i32* %9
  store %"class.std::tuple.19"* %23, %"class.std::tuple.19"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1545445273, i32* %9
  store %"class.std::tuple.19"* null, %"class.std::tuple.19"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %10
  ret %"class.std::tuple.19"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE4sizeEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.503
  %6 = load i32, i32* @y.504
  %7 = sub i32 %5, 8500219
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 8500219
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -548278378, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %129
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -548278378, label %19
    i32 1793509781, label %27
    i32 1750439627, label %59
    i32 1962352386, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %129

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1793509781, i32 1962352386
  store i32 %26, i32* %15
  br label %129

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %28, align 8
  %29 = load %"class.std::vector.14"*, %"class.std::vector.14"** %28, align 8
  %30 = bitcast %"class.std::vector.14"* %29 to %"struct.std::_Vector_base.15"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %32, align 8
  %34 = bitcast %"class.std::vector.14"* %29 to %"struct.std::_Vector_base.15"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %36, align 8
  %38 = ptrtoint %"class.std::tuple.19"* %33 to i64
  %39 = ptrtoint %"class.std::tuple.19"* %37 to i64
  %40 = sub i64 0, %39
  %41 = add i64 %38, %40
  %42 = sub i64 %38, %39
  %43 = sdiv exact i64 %41, 16
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.503
  %45 = load i32, i32* @y.504
  %46 = sub i32 %44, 753583951
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 753583951
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1750439627, i32 1962352386
  store i32 %58, i32* %15
  br label %129

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %62, align 8
  %63 = load %"class.std::vector.14"*, %"class.std::vector.14"** %62, align 8
  %64 = bitcast %"class.std::vector.14"* %63 to %"struct.std::_Vector_base.15"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %65, i32 0, i32 1
  %67 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %66, align 8
  %68 = bitcast %"class.std::vector.14"* %63 to %"struct.std::_Vector_base.15"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %69, i32 0, i32 0
  %71 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %70, align 8
  %72 = ptrtoint %"class.std::tuple.19"* %67 to i64
  %73 = ptrtoint %"class.std::tuple.19"* %71 to i64
  %74 = sub i64 0, %72
  %75 = add i64 0, %74
  %76 = sub i64 0, %72
  %77 = add i64 %75, 5660365661596472180
  %78 = add i64 %77, %73
  %79 = sub i64 %78, 5660365661596472180
  %80 = add i64 %75, %73
  %81 = add i64 %72, 1531294464970041375
  %82 = sub i64 %81, %73
  %83 = sub i64 %82, 1531294464970041375
  %84 = sub i64 %72, %73
  %85 = mul i64 %83, %73
  %86 = sub i64 0, %73
  %87 = add i64 %72, %86
  %88 = sub i64 %72, %73
  %89 = mul i64 %87, %73
  %90 = add i64 %72, 7326955822219060889
  %91 = sub i64 %90, %73
  %92 = sub i64 %91, 7326955822219060889
  %93 = sub i64 %72, %73
  %94 = add i64 %92, 2319805415700391468
  %95 = sub i64 %94, 16
  %96 = sub i64 %95, 2319805415700391468
  %97 = sub i64 %92, 16
  %98 = mul i64 %96, 16
  %99 = sub i64 0, 16
  %100 = add i64 %92, %99
  %101 = sub i64 %92, 16
  %102 = mul i64 %100, 16
  %103 = sub i64 %92, -8403050623128545114
  %104 = sub i64 %103, 16
  %105 = add i64 %104, -8403050623128545114
  %106 = sub i64 %92, 16
  %107 = mul i64 %105, 16
  %108 = sub i64 0, %92
  %109 = add i64 0, %108
  %110 = sub i64 0, %92
  %111 = sub i64 0, 16
  %112 = sub i64 %109, %111
  %113 = add i64 %109, 16
  %114 = shl i64 %92, 16
  %115 = shl i64 %92, 16
  %116 = add i64 0, -5328573047687445874
  %117 = sub i64 %116, %92
  %118 = sub i64 %117, -5328573047687445874
  %119 = sub i64 0, %92
  %120 = add i64 %118, -1101187432958987832
  %121 = add i64 %120, 16
  %122 = sub i64 %121, -1101187432958987832
  %123 = add i64 %118, 16
  %124 = sub i64 0, 16
  %125 = add i64 %92, %124
  %126 = sub i64 %92, 16
  %127 = mul i64 %125, 16
  %128 = sdiv exact i64 %92, 16
  store i32 1793509781, i32* %15
  br label %129

; <label>:129:                                    ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5tupleIJxiiEES2_SaIS1_EET0_T_S5_S4_RT1_(%"class.std::tuple.19"*, %"class.std::tuple.19"*, %"class.std::tuple.19"*, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::tuple.19"*, align 8
  %6 = alloca %"class.std::tuple.19"*, align 8
  %7 = alloca %"class.std::tuple.19"*, align 8
  %8 = alloca %"class.std::allocator.16"*, align 8
  %9 = alloca %"class.std::move_iterator.33", align 8
  %10 = alloca %"class.std::move_iterator.33", align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %5, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %6, align 8
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %7, align 8
  store %"class.std::allocator.16"* %3, %"class.std::allocator.16"** %8, align 8
  %11 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %5, align 8
  %12 = call %"class.std::tuple.19"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxiiEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.19"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  store %"class.std::tuple.19"* %12, %"class.std::tuple.19"** %13, align 8
  %14 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %15 = call %"class.std::tuple.19"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxiiEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.19"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %10, i32 0, i32 0
  store %"class.std::tuple.19"* %15, %"class.std::tuple.19"** %16, align 8
  %17 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %18 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  %20 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %10, i32 0, i32 0
  %22 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %21, align 8
  %23 = call %"class.std::tuple.19"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxiiEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple.19"* %20, %"class.std::tuple.19"* %22, %"class.std::tuple.19"* %17, %"class.std::allocator.16"* dereferenceable(1) %18)
  ret %"class.std::tuple.19"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.16"* dereferenceable(1), %"class.std::tuple.19"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.507
  %6 = load i32, i32* @y.508
  %7 = add i32 %5, -365845629
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -365845629
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1561289656, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1561289656, label %19
    i32 -1764028612, label %27
    i32 1944925913, label %48
    i32 189493952, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1764028612, i32 189493952
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.16"*, align 8
  %29 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %28, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %29, align 8
  %30 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %28, align 8
  %31 = bitcast %"class.std::allocator.16"* %30 to %"class.__gnu_cxx::new_allocator.17"*
  %32 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.17"* %31, %"class.std::tuple.19"* %32)
  %33 = load i32, i32* @x.507
  %34 = load i32, i32* @y.508
  %35 = add i32 %33, -76351187
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -76351187
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1944925913, i32 189493952
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::allocator.16"*, align 8
  %51 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %50, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %51, align 8
  %52 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %50, align 8
  %53 = bitcast %"class.std::allocator.16"* %52 to %"class.__gnu_cxx::new_allocator.17"*
  %54 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %51, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.17"* %53, %"class.std::tuple.19"* %54)
  store i32 -1764028612, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE8max_sizeEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %2, align 8
  %3 = load %"class.std::vector.14"*, %"class.std::vector.14"** %2, align 8
  %4 = bitcast %"class.std::vector.14"* %3 to %"struct.std::_Vector_base.15"*
  %5 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNKSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE8max_sizeERKS2_(%"class.std::allocator.16"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE8max_sizeERKS2_(%"class.std::allocator.16"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.511
  %6 = load i32, i32* @y.512
  %7 = sub i32 %5, -1414266768
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1414266768
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 930194527, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 930194527, label %19
    i32 1576805863, label %39
    i32 -683060874, label %71
    i32 -1709215996, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1576805863, i32 -1709215996
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %40, align 8
  %41 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %40, align 8
  %42 = bitcast %"class.std::allocator.16"* %41 to %"class.__gnu_cxx::new_allocator.17"*
  %43 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.511
  %45 = load i32, i32* @y.512
  %46 = add i32 %44, -162793784
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -162793784
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -683060874, i32 -1709215996
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %74, align 8
  %75 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %74, align 8
  %76 = bitcast %"class.std::allocator.16"* %75 to %"class.__gnu_cxx::new_allocator.17"*
  %77 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %76) #3
  store i32 1576805863, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.16"* @_ZNKSt12_Vector_baseISt5tupleIJxiiEESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %2, align 8
  %3 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %4 to %"class.std::allocator.16"*
  ret %"class.std::allocator.16"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.515
  %5 = load i32, i32* @y.516
  %6 = sub i32 %4, -1418460900
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1418460900
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 517642153, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 517642153, label %18
    i32 -1842804235, label %38
    i32 -1544823336, label %56
    i32 1961059862, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1842804235, i32 1961059862
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %39, align 8
  %41 = load i32, i32* @x.515
  %42 = load i32, i32* @y.516
  %43 = add i32 %41, -1342956931
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1342956931
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1544823336, i32 1961059862
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 1152921504606846975

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %58, align 8
  store i32 -1842804235, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE8allocateERS2_m(%"class.std::allocator.16"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.19"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.517
  %7 = load i32, i32* @y.518
  %8 = add i32 %6, 1565858658
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1565858658
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1204593265, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1204593265, label %20
    i32 -981464827, label %40
    i32 696779957, label %61
    i32 1080239781, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -981464827, i32 1080239781
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.16"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %41, align 8
  %44 = bitcast %"class.std::allocator.16"* %43 to %"class.__gnu_cxx::new_allocator.17"*
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::tuple.19"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"* %44, i64 %45, i8* null)
  store %"class.std::tuple.19"* %46, %"class.std::tuple.19"** %3
  %47 = load i32, i32* @x.517
  %48 = load i32, i32* @y.518
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 696779957, i32 1080239781
  store i32 %60, i32* %16
  br label %70

; <label>:61:                                     ; preds = %17
  %62 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %3
  ret %"class.std::tuple.19"* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::allocator.16"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %64, align 8
  %67 = bitcast %"class.std::allocator.16"* %66 to %"class.__gnu_cxx::new_allocator.17"*
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::tuple.19"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"* %67, i64 %68, i8* null)
  store i32 -981464827, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::tuple.19"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 1579819464, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %98
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1579819464, label %17
    i32 1000418216, label %22
    i32 -1047437802, label %23
    i32 -1805837892, label %51
    i32 924926329, label %83
    i32 676625724, label %85
  ]

; <label>:16:                                     ; preds = %14
  br label %98

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 1000418216, i32 -1047437802
  store i32 %21, i32* %13
  br label %98

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.519
  %25 = load i32, i32* @y.520
  %26 = add i32 %24, -123879286
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -123879286
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -1805837892, i32 676625724
  store i32 %50, i32* %13
  br label %98

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8
  %53 = mul i64 %52, 16
  %54 = call i8* @_Znwm(i64 %53)
  %55 = bitcast i8* %54 to %"class.std::tuple.19"*
  store %"class.std::tuple.19"* %55, %"class.std::tuple.19"** %4
  %56 = load i32, i32* @x.519
  %57 = load i32, i32* @y.520
  %58 = sub i32 %56, 559702056
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 559702056
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 924926329, i32 676625724
  store i32 %82, i32* %13
  br label %98

; <label>:83:                                     ; preds = %14
  %84 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %4
  ret %"class.std::tuple.19"* %84

; <label>:85:                                     ; preds = %14
  %86 = load i64, i64* %8, align 8
  %87 = shl i64 %86, 16
  %88 = shl i64 %86, 16
  %89 = shl i64 %86, 16
  %90 = add i64 %86, 5539483553868608733
  %91 = sub i64 %90, 16
  %92 = sub i64 %91, 5539483553868608733
  %93 = sub i64 %86, 16
  %94 = mul i64 %92, 16
  %95 = mul i64 %86, 16
  %96 = call i8* @_Znwm(i64 %95)
  %97 = bitcast i8* %96 to %"class.std::tuple.19"*
  store i32 -1805837892, i32* %13
  br label %98

; <label>:98:                                     ; preds = %85, %51, %23, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt5tupleIJxiiEEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"class.std::tuple.19"*, %"class.std::tuple.19"*, %"class.std::tuple.19"*, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.33", align 8
  %6 = alloca %"class.std::move_iterator.33", align 8
  %7 = alloca %"class.std::tuple.19"*, align 8
  %8 = alloca %"class.std::allocator.16"*, align 8
  %9 = alloca %"class.std::move_iterator.33", align 8
  %10 = alloca %"class.std::move_iterator.33", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %5, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %6, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %12, align 8
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %7, align 8
  store %"class.std::allocator.16"* %3, %"class.std::allocator.16"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.33"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.33"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.33"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.33"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  %19 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %10, i32 0, i32 0
  %21 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %20, align 8
  %22 = call %"class.std::tuple.19"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxiiEEES3_ET0_T_S6_S5_(%"class.std::tuple.19"* %19, %"class.std::tuple.19"* %21, %"class.std::tuple.19"* %17)
  ret %"class.std::tuple.19"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5tupleIJxiiEESt13move_iteratorIS2_EET0_T_(%"class.std::tuple.19"*) #0 comdat {
  %2 = alloca %"class.std::tuple.19"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.523
  %6 = load i32, i32* @y.524
  %7 = add i32 %5, -927111817
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -927111817
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1291237181, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1291237181, label %19
    i32 73408733, label %39
    i32 -634854602, label %72
    i32 -114999683, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 73408733, i32 -114999683
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.33", align 8
  %41 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %41, align 8
  %42 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %41, align 8
  call void @_ZNSt13move_iteratorIPSt5tupleIJxiiEEEC2ES2_(%"class.std::move_iterator.33"* %40, %"class.std::tuple.19"* %42)
  %43 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %40, i32 0, i32 0
  %44 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %43, align 8
  store %"class.std::tuple.19"* %44, %"class.std::tuple.19"** %2
  %45 = load i32, i32* @x.523
  %46 = load i32, i32* @y.524
  %47 = add i32 %45, -1787124335
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1787124335
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -634854602, i32 -114999683
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %2
  ret %"class.std::tuple.19"* %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::move_iterator.33", align 8
  %76 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %76, align 8
  %77 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %76, align 8
  call void @_ZNSt13move_iteratorIPSt5tupleIJxiiEEEC2ES2_(%"class.std::move_iterator.33"* %75, %"class.std::tuple.19"* %77)
  %78 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %75, i32 0, i32 0
  %79 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %78, align 8
  store i32 73408733, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt5tupleIJxiiEEES3_ET0_T_S6_S5_(%"class.std::tuple.19"*, %"class.std::tuple.19"*, %"class.std::tuple.19"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.33", align 8
  %5 = alloca %"class.std::move_iterator.33", align 8
  %6 = alloca %"class.std::tuple.19"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.33", align 8
  %9 = alloca %"class.std::move_iterator.33", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %4, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %5, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %11, align 8
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.33"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.33"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.33"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.33"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %8, i32 0, i32 0
  %18 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %9, i32 0, i32 0
  %20 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %19, align 8
  %21 = call %"class.std::tuple.19"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxiiEEES5_EET0_T_S8_S7_(%"class.std::tuple.19"* %18, %"class.std::tuple.19"* %20, %"class.std::tuple.19"* %16)
  ret %"class.std::tuple.19"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt5tupleIJxiiEEES5_EET0_T_S8_S7_(%"class.std::tuple.19"*, %"class.std::tuple.19"*, %"class.std::tuple.19"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.527
  %5 = load i32, i32* @y.528
  %6 = add i32 %4, -1863986917
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1863986917
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %284

; <label>:30:                                     ; preds = %3, %284
  %31 = alloca %"class.std::move_iterator.33", align 8
  %32 = alloca %"class.std::move_iterator.33", align 8
  %33 = alloca %"class.std::tuple.19"*, align 8
  %34 = alloca %"class.std::tuple.19"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  %37 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %31, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %32, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %38, align 8
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %33, align 8
  %39 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %33, align 8
  store %"class.std::tuple.19"* %39, %"class.std::tuple.19"** %34, align 8
  %40 = load i32, i32* @x.527
  %41 = load i32, i32* @y.528
  %42 = sub i32 %40, -1905971573
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1905971573
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %284

; <label>:66:                                     ; preds = %30
  br label %67

; <label>:67:                                     ; preds = %78, %66
  %68 = invoke zeroext i1 @_ZStneIPSt5tupleIJxiiEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.33"* dereferenceable(8) %31, %"class.std::move_iterator.33"* dereferenceable(8) %32)
          to label %69 unwind label %81

; <label>:69:                                     ; preds = %67
  br i1 %68, label %70, label %132

; <label>:70:                                     ; preds = %69
  %71 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %34, align 8
  %72 = call %"class.std::tuple.19"* @_ZSt11__addressofISt5tupleIJxiiEEEPT_RS2_(%"class.std::tuple.19"* dereferenceable(16) %71) #3
  %73 = invoke dereferenceable(16) %"class.std::tuple.19"* @_ZNKSt13move_iteratorIPSt5tupleIJxiiEEEdeEv(%"class.std::move_iterator.33"* %31)
          to label %74 unwind label %81

; <label>:74:                                     ; preds = %70
  invoke void @_ZSt10_ConstructISt5tupleIJxiiEEJS1_EEvPT_DpOT0_(%"class.std::tuple.19"* %72, %"class.std::tuple.19"* dereferenceable(16) %73)
          to label %75 unwind label %81

; <label>:75:                                     ; preds = %74
  br label %76

; <label>:76:                                     ; preds = %75
  %77 = invoke dereferenceable(8) %"class.std::move_iterator.33"* @_ZNSt13move_iteratorIPSt5tupleIJxiiEEEppEv(%"class.std::move_iterator.33"* %31)
          to label %78 unwind label %81

; <label>:78:                                     ; preds = %76
  %79 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %34, align 8
  %80 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %79, i32 1
  store %"class.std::tuple.19"* %80, %"class.std::tuple.19"** %34, align 8
  br label %67

; <label>:81:                                     ; preds = %76, %74, %70, %67
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %35, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %36, align 4
  br label %85

; <label>:85:                                     ; preds = %81
  %86 = load i8*, i8** %35, align 8
  %87 = call i8* @__cxa_begin_catch(i8* %86) #3
  %88 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %33, align 8
  %89 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %34, align 8
  invoke void @_ZSt8_DestroyIPSt5tupleIJxiiEEEvT_S3_(%"class.std::tuple.19"* %88, %"class.std::tuple.19"* %89)
          to label %90 unwind label %175

; <label>:90:                                     ; preds = %85
  %91 = load i32, i32* @x.527
  %92 = load i32, i32* @y.528
  %93 = add i32 %91, -1076808052
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, -1076808052
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %294

; <label>:105:                                    ; preds = %90, %294
  %106 = load i32, i32* @x.527
  %107 = load i32, i32* @y.528
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  br i1 %129, label %131, label %294

; <label>:131:                                    ; preds = %105
  invoke void @__cxa_rethrow() #12
          to label %283 unwind label %175

; <label>:132:                                    ; preds = %69
  %133 = load i32, i32* @x.527
  %134 = load i32, i32* @y.528
  %135 = sub i32 0, 1
  %136 = add i32 %133, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 %133, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %134, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  br i1 %144, label %146, label %295

; <label>:146:                                    ; preds = %132, %295
  %147 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %34, align 8
  %148 = load i32, i32* @x.527
  %149 = load i32, i32* @y.528
  %150 = add i32 %148, 1833539160
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, 1833539160
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 false, true
  %161 = and i1 %158, false
  %162 = and i1 %156, %160
  %163 = and i1 %159, false
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 false, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %295

; <label>:174:                                    ; preds = %146
  ret %"class.std::tuple.19"* %147

; <label>:175:                                    ; preds = %131, %85
  %176 = landingpad { i8*, i32 }
          cleanup
  %177 = extractvalue { i8*, i32 } %176, 0
  store i8* %177, i8** %35, align 8
  %178 = extractvalue { i8*, i32 } %176, 1
  store i32 %178, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %179 unwind label %280

; <label>:179:                                    ; preds = %175
  br label %234
                                                  ; No predecessors!
  %181 = load i32, i32* @x.527
  %182 = load i32, i32* @y.528
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 true, true
  %193 = and i1 %190, true
  %194 = and i1 %188, %192
  %195 = and i1 %191, true
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 true, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %297

; <label>:206:                                    ; preds = %180, %297
  call void @llvm.trap()
  %207 = load i32, i32* @x.527
  %208 = load i32, i32* @y.528
  %209 = add i32 %207, -1859580241
  %210 = sub i32 %209, 1
  %211 = sub i32 %210, -1859580241
  %212 = sub i32 %207, 1
  %213 = mul i32 %207, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %208, 10
  %217 = xor i1 %215, true
  %218 = xor i1 %216, true
  %219 = xor i1 true, true
  %220 = and i1 %217, true
  %221 = and i1 %215, %219
  %222 = and i1 %218, true
  %223 = and i1 %216, %219
  %224 = or i1 %220, %221
  %225 = or i1 %222, %223
  %226 = xor i1 %224, %225
  %227 = or i1 %217, %218
  %228 = xor i1 %227, true
  %229 = or i1 true, %219
  %230 = and i1 %228, %229
  %231 = or i1 %226, %230
  %232 = or i1 %215, %216
  br i1 %231, label %233, label %297

; <label>:233:                                    ; preds = %206
  unreachable

; <label>:234:                                    ; preds = %179
  %235 = load i32, i32* @x.527
  %236 = load i32, i32* @y.528
  %237 = sub i32 0, 1
  %238 = add i32 %235, %237
  %239 = sub i32 %235, 1
  %240 = mul i32 %235, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %236, 10
  %244 = and i1 %242, %243
  %245 = xor i1 %242, %243
  %246 = or i1 %244, %245
  %247 = or i1 %242, %243
  br i1 %246, label %248, label %298

; <label>:248:                                    ; preds = %234, %298
  %249 = load i8*, i8** %35, align 8
  %250 = load i32, i32* %36, align 4
  %251 = insertvalue { i8*, i32 } undef, i8* %249, 0
  %252 = insertvalue { i8*, i32 } %251, i32 %250, 1
  %253 = load i32, i32* @x.527
  %254 = load i32, i32* @y.528
  %255 = add i32 %253, 1809808422
  %256 = sub i32 %255, 1
  %257 = sub i32 %256, 1809808422
  %258 = sub i32 %253, 1
  %259 = mul i32 %253, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %254, 10
  %263 = xor i1 %261, true
  %264 = xor i1 %262, true
  %265 = xor i1 true, true
  %266 = and i1 %263, true
  %267 = and i1 %261, %265
  %268 = and i1 %264, true
  %269 = and i1 %262, %265
  %270 = or i1 %266, %267
  %271 = or i1 %268, %269
  %272 = xor i1 %270, %271
  %273 = or i1 %263, %264
  %274 = xor i1 %273, true
  %275 = or i1 true, %265
  %276 = and i1 %274, %275
  %277 = or i1 %272, %276
  %278 = or i1 %261, %262
  br i1 %277, label %279, label %298

; <label>:279:                                    ; preds = %248
  resume { i8*, i32 } %252

; <label>:280:                                    ; preds = %175
  %281 = landingpad { i8*, i32 }
          catch i8* null
  %282 = extractvalue { i8*, i32 } %281, 0
  call void @__clang_call_terminate(i8* %282) #10
  unreachable

; <label>:283:                                    ; preds = %131
  unreachable

; <label>:284:                                    ; preds = %30, %3
  %285 = alloca %"class.std::move_iterator.33", align 8
  %286 = alloca %"class.std::move_iterator.33", align 8
  %287 = alloca %"class.std::tuple.19"*, align 8
  %288 = alloca %"class.std::tuple.19"*, align 8
  %289 = alloca i8*
  %290 = alloca i32
  %291 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %285, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %291, align 8
  %292 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %286, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %292, align 8
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %287, align 8
  %293 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %287, align 8
  store %"class.std::tuple.19"* %293, %"class.std::tuple.19"** %288, align 8
  br label %30

; <label>:294:                                    ; preds = %105, %90
  br label %105

; <label>:295:                                    ; preds = %146, %132
  %296 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %34, align 8
  br label %146

; <label>:297:                                    ; preds = %206, %180
  call void @llvm.trap()
  br label %206

; <label>:298:                                    ; preds = %248, %234
  %299 = load i8*, i8** %35, align 8
  %300 = load i32, i32* %36, align 4
  %301 = insertvalue { i8*, i32 } undef, i8* %299, 0
  %302 = insertvalue { i8*, i32 } %301, i32 %300, 1
  br label %248
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt5tupleIJxiiEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.33"* dereferenceable(8), %"class.std::move_iterator.33"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.33"*, align 8
  %4 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %3, align 8
  store %"class.std::move_iterator.33"* %1, %"class.std::move_iterator.33"** %4, align 8
  %5 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %3, align 8
  %6 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt5tupleIJxiiEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.33"* dereferenceable(8) %5, %"class.std::move_iterator.33"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt5tupleIJxiiEEJS1_EEvPT_DpOT0_(%"class.std::tuple.19"*, %"class.std::tuple.19"* dereferenceable(16)) #5 comdat {
  %3 = alloca %"class.std::tuple.19"*, align 8
  %4 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %3, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %4, align 8
  %5 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %3, align 8
  %6 = bitcast %"class.std::tuple.19"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::tuple.19"*
  %8 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  %9 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt7forwardISt5tupleIJxiiEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.19"* dereferenceable(16) %8) #3
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %7, %"class.std::tuple.19"* dereferenceable(16) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZSt11__addressofISt5tupleIJxiiEEEPT_RS2_(%"class.std::tuple.19"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %2, align 8
  %3 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %2, align 8
  %4 = bitcast %"class.std::tuple.19"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::tuple.19"*
  ret %"class.std::tuple.19"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.19"* @_ZNKSt13move_iteratorIPSt5tupleIJxiiEEEdeEv(%"class.std::move_iterator.33"*) #5 comdat align 2 {
  %2 = alloca %"class.std::tuple.19"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.535
  %6 = load i32, i32* @y.536
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 301225446, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 301225446, label %18
    i32 -1097791585, label %38
    i32 1391712750, label %58
    i32 -112841906, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1097791585, i32 -112841906
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %39, align 8
  %40 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %39, align 8
  %41 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %40, i32 0, i32 0
  %42 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %41, align 8
  store %"class.std::tuple.19"* %42, %"class.std::tuple.19"** %2
  %43 = load i32, i32* @x.535
  %44 = load i32, i32* @y.536
  %45 = add i32 %43, -507410299
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -507410299
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1391712750, i32 -112841906
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %2
  ret %"class.std::tuple.19"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %61, align 8
  %62 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %61, align 8
  %63 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %62, i32 0, i32 0
  %64 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %63, align 8
  store i32 -1097791585, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.33"* @_ZNSt13move_iteratorIPSt5tupleIJxiiEEEppEv(%"class.std::move_iterator.33"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %2, align 8
  %3 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  %6 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %5, i32 1
  store %"class.std::tuple.19"* %6, %"class.std::tuple.19"** %4, align 8
  ret %"class.std::move_iterator.33"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt5tupleIJxiiEEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.33"* dereferenceable(8), %"class.std::move_iterator.33"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.33"*, align 8
  %4 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %3, align 8
  store %"class.std::move_iterator.33"* %1, %"class.std::move_iterator.33"** %4, align 8
  %5 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %3, align 8
  %6 = call %"class.std::tuple.19"* @_ZNKSt13move_iteratorIPSt5tupleIJxiiEEE4baseEv(%"class.std::move_iterator.33"* %5)
  %7 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %4, align 8
  %8 = call %"class.std::tuple.19"* @_ZNKSt13move_iteratorIPSt5tupleIJxiiEEE4baseEv(%"class.std::move_iterator.33"* %7)
  %9 = icmp eq %"class.std::tuple.19"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZNKSt13move_iteratorIPSt5tupleIJxiiEEE4baseEv(%"class.std::move_iterator.33"*) #5 comdat align 2 {
  %2 = alloca %"class.std::tuple.19"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.541
  %6 = load i32, i32* @y.542
  %7 = add i32 %5, 1386398755
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1386398755
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1802516652, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1802516652, label %19
    i32 1235727773, label %27
    i32 1134370694, label %58
    i32 1068051434, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1235727773, i32 1068051434
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %28, align 8
  %29 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %29, i32 0, i32 0
  %31 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %30, align 8
  store %"class.std::tuple.19"* %31, %"class.std::tuple.19"** %2
  %32 = load i32, i32* @x.541
  %33 = load i32, i32* @y.542
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1134370694, i32 1068051434
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::tuple.19"*, %"class.std::tuple.19"** %2
  ret %"class.std::tuple.19"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::move_iterator.33"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %61, align 8
  %62 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %61, align 8
  %63 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %62, i32 0, i32 0
  %64 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %63, align 8
  store i32 1235727773, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt5tupleIJxiiEEEC2ES2_(%"class.std::move_iterator.33"*, %"class.std::tuple.19"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.33"*, align 8
  %4 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::move_iterator.33"* %0, %"class.std::move_iterator.33"** %3, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %4, align 8
  %5 = load %"class.std::move_iterator.33"*, %"class.std::move_iterator.33"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.33", %"class.std::move_iterator.33"* %5, i32 0, i32 0
  %7 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  store %"class.std::tuple.19"* %7, %"class.std::tuple.19"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5tupleIJxiiEEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.17"*, %"class.std::tuple.19"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %4 = alloca %"class.std::tuple.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %3, align 8
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %3, align 8
  %6 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.32"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::tuple.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %7, i32 0, i32 0
  %9 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = sub i64 0, %10
  %12 = add i64 0, %11
  %13 = sub i64 0, %10
  %14 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %9, i64 %12
  store %"class.std::tuple.19"* %14, %"class.std::tuple.19"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.32"* %3, %"class.std::tuple.19"** dereferenceable(8) %6) #3
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  %16 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %15, align 8
  ret %"class.std::tuple.19"* %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt5tupleIJxiiEEEEENS0_14_Iter_comp_valIT_EES7_() #0 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.549
  %4 = load i32, i32* @y.550
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 -258319075, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -258319075, label %16
    i32 -1624028306, label %36
    i32 -1377887439, label %67
    i32 -1974598368, label %68
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  %35 = select i1 %33, i32 -1624028306, i32 -1974598368
  store i32 %35, i32* %12
  br label %72

; <label>:36:                                     ; preds = %13
  %37 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %38 = alloca %"struct.std::greater", align 1
  %39 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt5tupleIJxiiEEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %37)
  %40 = load i32, i32* @x.549
  %41 = load i32, i32* @y.550
  %42 = sub i32 %40, -1498914155
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1498914155
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1377887439, i32 -1974598368
  store i32 %66, i32* %12
  br label %72

; <label>:67:                                     ; preds = %13
  ret void

; <label>:68:                                     ; preds = %13
  %69 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %70 = alloca %"struct.std::greater", align 1
  %71 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt5tupleIJxiiEEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %69)
  store i32 -1624028306, i32* %12
  br label %72

; <label>:72:                                     ; preds = %68, %36, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5emptyEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.551
  %6 = load i32, i32* @y.552
  %7 = sub i32 %5, 831949353
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 831949353
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1932360927, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1932360927, label %19
    i32 -1948466902, label %27
    i32 -188937813, label %52
    i32 188648154, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1948466902, i32 188648154
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.14"*, align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %28, align 8
  %31 = load %"class.std::vector.14"*, %"class.std::vector.14"** %28, align 8
  %32 = call %"class.std::tuple.19"* @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5beginEv(%"class.std::vector.14"* %31) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %29, i32 0, i32 0
  store %"class.std::tuple.19"* %32, %"class.std::tuple.19"** %33, align 8
  %34 = call %"class.std::tuple.19"* @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE3endEv(%"class.std::vector.14"* %31) #3
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %30, i32 0, i32 0
  store %"class.std::tuple.19"* %34, %"class.std::tuple.19"** %35, align 8
  %36 = call zeroext i1 @_ZN9__gnu_cxxeqIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.34"* dereferenceable(8) %29, %"class.__gnu_cxx::__normal_iterator.34"* dereferenceable(8) %30) #3
  store i1 %36, i1* %2
  %37 = load i32, i32* @x.551
  %38 = load i32, i32* @y.552
  %39 = add i32 %37, 1058074794
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1058074794
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -188937813, i32 188648154
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  %53 = load volatile i1, i1* %2
  ret i1 %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"class.std::vector.14"*, align 8
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %55, align 8
  %58 = load %"class.std::vector.14"*, %"class.std::vector.14"** %55, align 8
  %59 = call %"class.std::tuple.19"* @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5beginEv(%"class.std::vector.14"* %58) #3
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %56, i32 0, i32 0
  store %"class.std::tuple.19"* %59, %"class.std::tuple.19"** %60, align 8
  %61 = call %"class.std::tuple.19"* @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE3endEv(%"class.std::vector.14"* %58) #3
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %57, i32 0, i32 0
  store %"class.std::tuple.19"* %61, %"class.std::tuple.19"** %62, align 8
  %63 = call zeroext i1 @_ZN9__gnu_cxxeqIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.34"* dereferenceable(8) %56, %"class.__gnu_cxx::__normal_iterator.34"* dereferenceable(8) %57) #3
  store i32 -1948466902, i32* %15
  br label %64

; <label>:64:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.34"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.34"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %1, %"class.__gnu_cxx::__normal_iterator.34"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::tuple.19"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"* %5) #3
  %7 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::tuple.19"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"* %8) #3
  %10 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %9, align 8
  %11 = icmp eq %"class.std::tuple.19"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5beginEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %3 = alloca %"class.std::vector.14"*, align 8
  %4 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  %5 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %6 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %8, align 8
  store %"class.std::tuple.19"* %9, %"class.std::tuple.19"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.34"* %2, %"class.std::tuple.19"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %2, i32 0, i32 0
  %11 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %10, align 8
  ret %"class.std::tuple.19"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::tuple.19"* @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE3endEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %3 = alloca %"class.std::vector.14"*, align 8
  %4 = alloca %"class.std::tuple.19"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  %5 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %6 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %8, align 8
  store %"class.std::tuple.19"* %9, %"class.std::tuple.19"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.34"* %2, %"class.std::tuple.19"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %2, i32 0, i32 0
  %11 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %10, align 8
  ret %"class.std::tuple.19"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple.19"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %3, i32 0, i32 0
  ret %"class.std::tuple.19"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.34"*, %"class.std::tuple.19"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.561
  %6 = load i32, i32* @y.562
  %7 = add i32 %5, -928807164
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -928807164
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2033377832, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2033377832, label %19
    i32 332050470, label %39
    i32 1973843394, label %73
    i32 -796128436, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 332050470, i32 -796128436
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  %41 = alloca %"class.std::tuple.19"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %40, align 8
  store %"class.std::tuple.19"** %1, %"class.std::tuple.19"*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %42, i32 0, i32 0
  %44 = load %"class.std::tuple.19"**, %"class.std::tuple.19"*** %41, align 8
  %45 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %44, align 8
  store %"class.std::tuple.19"* %45, %"class.std::tuple.19"** %43, align 8
  %46 = load i32, i32* @x.561
  %47 = load i32, i32* @y.562
  %48 = sub i32 %46, 1421253456
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1421253456
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1973843394, i32 -796128436
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  %76 = alloca %"class.std::tuple.19"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %75, align 8
  store %"class.std::tuple.19"** %1, %"class.std::tuple.19"*** %76, align 8
  %77 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %75, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %77, i32 0, i32 0
  %79 = load %"class.std::tuple.19"**, %"class.std::tuple.19"*** %76, align 8
  %80 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %79, align 8
  store %"class.std::tuple.19"* %80, %"class.std::tuple.19"** %78, align 8
  store i32 332050470, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.19"* @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5frontEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.14"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %2, align 8
  %4 = load %"class.std::vector.14"*, %"class.std::vector.14"** %2, align 8
  %5 = call %"class.std::tuple.19"* @_ZNKSt6vectorISt5tupleIJxiiEESaIS1_EE5beginEv(%"class.std::vector.14"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %3, i32 0, i32 0
  store %"class.std::tuple.19"* %5, %"class.std::tuple.19"** %6, align 8
  %7 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.34"* %3) #3
  ret %"class.std::tuple.19"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.34"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  ret %"class.std::tuple.19"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"class.std::tuple.19"*, %"class.std::tuple.19"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.32"*
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.567
  %12 = load i32, i32* @y.568
  %13 = sub i32 %11, -1640407616
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -1640407616
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 -831076837, i32* %21
  br label %22

; <label>:22:                                     ; preds = %2, %175
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -831076837, label %25
    i32 1333445272, label %45
    i32 790818886, label %89
    i32 -1335227422, label %92
    i32 1996458754, label %116
    i32 -1192839365, label %144
    i32 -1006537917, label %159
    i32 1166264783, label %160
    i32 1910328823, label %174
  ]

; <label>:24:                                     ; preds = %22
  br label %175

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 1333445272, i32 1166264783
  store i32 %44, i32* %21
  br label %175

; <label>:45:                                     ; preds = %22
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %46, %"class.__gnu_cxx::__normal_iterator.32"** %8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %47, %"class.__gnu_cxx::__normal_iterator.32"** %7
  %48 = alloca %"struct.std::greater", align 1
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %49, %"class.__gnu_cxx::__normal_iterator.32"** %6
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %50, %"class.__gnu_cxx::__normal_iterator.32"** %5
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %51, %"class.__gnu_cxx::__normal_iterator.32"** %4
  %52 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %53 = alloca %"struct.std::greater", align 1
  %54 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %55 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %55, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %56, align 8
  %57 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %7
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %57, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %58, align 8
  %59 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %8
  %60 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %7
  %61 = call i64 @_ZN9__gnu_cxxmiIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %60, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %59) #3
  %62 = icmp sgt i64 %61, 1
  store i1 %62, i1* %3
  %63 = load i32, i32* @x.567
  %64 = load i32, i32* @y.568
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 790818886, i32 1166264783
  store i32 %88, i32* %21
  br label %175

; <label>:89:                                     ; preds = %22
  %90 = load volatile i1, i1* %3
  %91 = select i1 %90, i32 -1335227422, i32 1996458754
  store i32 %91, i32* %21
  br label %175

; <label>:92:                                     ; preds = %22
  %93 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %7
  %94 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.32"* @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.32"* %93) #3
  %95 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %6
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %95 to i8*
  %97 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %8
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %98, i64 8, i32 8, i1 false)
  %99 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %5
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %99 to i8*
  %101 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %7
  %102 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %102, i64 8, i32 8, i1 false)
  %103 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %4
  %104 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %103 to i8*
  %105 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %7
  %106 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %106, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt5tupleIJxiiEEEEENS0_15_Iter_comp_iterIT_EES7_()
  %107 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %6
  %108 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %107, i32 0, i32 0
  %109 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %108, align 8
  %110 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %5
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %110, i32 0, i32 0
  %112 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %111, align 8
  %113 = load volatile %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %4
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %113, i32 0, i32 0
  %115 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %114, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_SE_T0_(%"class.std::tuple.19"* %109, %"class.std::tuple.19"* %112, %"class.std::tuple.19"* %115)
  store i32 1996458754, i32* %21
  br label %175

; <label>:116:                                    ; preds = %22
  %117 = load i32, i32* @x.567
  %118 = load i32, i32* @y.568
  %119 = add i32 %117, 1751586016
  %120 = sub i32 %119, 1
  %121 = sub i32 %120, 1751586016
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 false, true
  %130 = and i1 %127, false
  %131 = and i1 %125, %129
  %132 = and i1 %128, false
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 false, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  %143 = select i1 %141, i32 -1192839365, i32 1910328823
  store i32 %143, i32* %21
  br label %175

; <label>:144:                                    ; preds = %22
  %145 = load i32, i32* @x.567
  %146 = load i32, i32* @y.568
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 -1006537917, i32 1910328823
  store i32 %158, i32* %21
  br label %175

; <label>:159:                                    ; preds = %22
  ret void

; <label>:160:                                    ; preds = %22
  %161 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %162 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %163 = alloca %"struct.std::greater", align 1
  %164 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %165 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %166 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %167 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %168 = alloca %"struct.std::greater", align 1
  %169 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %170 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %161, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %170, align 8
  %171 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %162, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %171, align 8
  %172 = call i64 @_ZN9__gnu_cxxmiIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %162, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %161) #3
  %173 = icmp sgt i64 %172, 1
  store i32 1333445272, i32* %21
  br label %175

; <label>:174:                                    ; preds = %22
  store i32 -1192839365, i32* %21
  br label %175

; <label>:175:                                    ; preds = %174, %160, %144, %116, %92, %89, %45, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5tupleIJxiiEESaIS1_EE8pop_backEv(%"class.std::vector.14"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %2, align 8
  %3 = load %"class.std::vector.14"*, %"class.std::vector.14"** %2, align 8
  %4 = bitcast %"class.std::vector.14"* %3 to %"struct.std::_Vector_base.15"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %6, align 8
  %8 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %7, i32 -1
  store %"class.std::tuple.19"* %8, %"class.std::tuple.19"** %6, align 8
  %9 = bitcast %"class.std::vector.14"* %3 to %"struct.std::_Vector_base.15"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %10 to %"class.std::allocator.16"*
  %12 = bitcast %"class.std::vector.14"* %3 to %"struct.std::_Vector_base.15"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::tuple<long long, int, int>, std::allocator<std::tuple<long long, int, int> > >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %14, align 8
  invoke void @_ZNSt16allocator_traitsISaISt5tupleIJxiiEEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.16"* dereferenceable(1) %11, %"class.std::tuple.19"* %15)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %1
  ret void

; <label>:17:                                     ; preds = %1
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  call void @__clang_call_terminate(i8* %19) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.32"* @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.32"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.32"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.32"* %0, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.32"*, %"class.__gnu_cxx::__normal_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %3, i32 0, i32 0
  %5 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %4, align 8
  %6 = getelementptr inbounds %"class.std::tuple.19", %"class.std::tuple.19"* %5, i32 -1
  store %"class.std::tuple.19"* %6, %"class.std::tuple.19"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.32"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_SE_T0_(%"class.std::tuple.19"*, %"class.std::tuple.19"*, %"class.std::tuple.19"*) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.573
  %7 = load i32, i32* @y.574
  %8 = add i32 %6, -1808594256
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1808594256
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1294344787, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %118
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1294344787, label %20
    i32 -1749477443, label %28
    i32 908744917, label %86
    i32 722697414, label %87
  ]

; <label>:19:                                     ; preds = %17
  br label %118

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1749477443, i32 722697414
  store i32 %27, i32* %16
  br label %118

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %32 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %33 = alloca %"class.std::tuple.19", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %35 = alloca %"class.std::tuple.19", align 8
  %36 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %29, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %30, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %38, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %31, i32 0, i32 0
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %39, align 8
  %40 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %31) #3
  %41 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %40) #3
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %33, %"class.std::tuple.19"* dereferenceable(16) %41) #3
  %42 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %29) #3
  %43 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %42) #3
  %44 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %31) #3
  %45 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNSt5tupleIJxiiEEaSEOS0_(%"class.std::tuple.19"* %44, %"class.std::tuple.19"* dereferenceable(16) %43) #3
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %34 to i8*
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  %48 = call i64 @_ZN9__gnu_cxxmiIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %30, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %29) #3
  %49 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %33) #3
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %35, %"class.std::tuple.19"* dereferenceable(16) %49) #3
  %50 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %36 to i8*
  %51 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 1, i32 1, i1 false)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %34, i32 0, i32 0
  %53 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %52, align 8
  %54 = bitcast %"class.std::tuple.19"* %35 to { i64, i64 }*
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %54, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %54, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"class.std::tuple.19"* %53, i64 0, i64 %48, i64 %56, i64 %58)
  %59 = load i32, i32* @x.573
  %60 = load i32, i32* @y.574
  %61 = add i32 %59, 1735139712
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 1735139712
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 908744917, i32 722697414
  store i32 %85, i32* %16
  br label %118

; <label>:86:                                     ; preds = %17
  ret void

; <label>:87:                                     ; preds = %17
  %88 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %91 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %92 = alloca %"class.std::tuple.19", align 8
  %93 = alloca %"class.__gnu_cxx::__normal_iterator.32", align 8
  %94 = alloca %"class.std::tuple.19", align 8
  %95 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %88, i32 0, i32 0
  store %"class.std::tuple.19"* %0, %"class.std::tuple.19"** %96, align 8
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %89, i32 0, i32 0
  store %"class.std::tuple.19"* %1, %"class.std::tuple.19"** %97, align 8
  %98 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %90, i32 0, i32 0
  store %"class.std::tuple.19"* %2, %"class.std::tuple.19"** %98, align 8
  %99 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %90) #3
  %100 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %99) #3
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %92, %"class.std::tuple.19"* dereferenceable(16) %100) #3
  %101 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %88) #3
  %102 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %101) #3
  %103 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.32"* %90) #3
  %104 = call dereferenceable(16) %"class.std::tuple.19"* @_ZNSt5tupleIJxiiEEaSEOS0_(%"class.std::tuple.19"* %103, %"class.std::tuple.19"* dereferenceable(16) %102) #3
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %93 to i8*
  %106 = bitcast %"class.__gnu_cxx::__normal_iterator.32"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %106, i64 8, i32 8, i1 false)
  %107 = call i64 @_ZN9__gnu_cxxmiIPSt5tupleIJxiiEESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %89, %"class.__gnu_cxx::__normal_iterator.32"* dereferenceable(8) %88) #3
  %108 = call dereferenceable(16) %"class.std::tuple.19"* @_ZSt4moveIRSt5tupleIJxiiEEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::tuple.19"* dereferenceable(16) %92) #3
  call void @_ZNSt5tupleIJxiiEEC2EOS0_(%"class.std::tuple.19"* %94, %"class.std::tuple.19"* dereferenceable(16) %108) #3
  %109 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %95 to i8*
  %110 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %110, i64 1, i32 1, i1 false)
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.32", %"class.__gnu_cxx::__normal_iterator.32"* %93, i32 0, i32 0
  %112 = load %"class.std::tuple.19"*, %"class.std::tuple.19"** %111, align 8
  %113 = bitcast %"class.std::tuple.19"* %94 to { i64, i64 }*
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt5tupleIJxiiEESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"class.std::tuple.19"* %112, i64 0, i64 %107, i64 %115, i64 %117)
  store i32 -1749477443, i32* %16
  br label %118

; <label>:118:                                    ; preds = %87, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRxRiS1_EEC2ES0_S1_S1_(%"class.std::tuple.22"*, i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::tuple.22"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"class.std::tuple.22"* %0, %"class.std::tuple.22"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"class.std::tuple.22"*, %"class.std::tuple.22"** %5, align 8
  %10 = bitcast %"class.std::tuple.22"* %9 to %"struct.std::_Tuple_impl.23"*
  %11 = load i64*, i64** %6, align 8
  %12 = load i32*, i32** %7, align 8
  %13 = load i32*, i32** %8, align 8
  call void @_ZNSt11_Tuple_implILm0EJRxRiS1_EEC2ES0_S1_S1_(%"struct.std::_Tuple_impl.23"* %10, i64* dereferenceable(8) %11, i32* dereferenceable(4) %12, i32* dereferenceable(4) %13)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRxRiS1_EEC2ES0_S1_S1_(%"struct.std::_Tuple_impl.23"*, i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::_Tuple_impl.23"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.23"* %0, %"struct.std::_Tuple_impl.23"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"struct.std::_Tuple_impl.23"*, %"struct.std::_Tuple_impl.23"** %5, align 8
  %10 = bitcast %"struct.std::_Tuple_impl.23"* %9 to %"struct.std::_Tuple_impl.24"*
  %11 = load i32*, i32** %7, align 8
  %12 = load i32*, i32** %8, align 8
  call void @_ZNSt11_Tuple_implILm1EJRiS0_EEC2ES0_S0_(%"struct.std::_Tuple_impl.24"* %10, i32* dereferenceable(4) %11, i32* dereferenceable(4) %12)
  %13 = bitcast %"struct.std::_Tuple_impl.23"* %9 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %"struct.std::_Head_base.28"*
  %16 = load i64*, i64** %6, align 8
  call void @_ZNSt10_Head_baseILm0ERxLb0EEC2ES0_(%"struct.std::_Head_base.28"* %15, i64* dereferenceable(8) %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJRiS0_EEC2ES0_S0_(%"struct.std::_Tuple_impl.24"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::_Tuple_impl.24"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.24"* %0, %"struct.std::_Tuple_impl.24"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::_Tuple_impl.24"*, %"struct.std::_Tuple_impl.24"** %4, align 8
  %8 = bitcast %"struct.std::_Tuple_impl.24"* %7 to %"struct.std::_Tuple_impl.25"*
  %9 = load i32*, i32** %6, align 8
  call void @_ZNSt11_Tuple_implILm2EJRiEEC2ES0_(%"struct.std::_Tuple_impl.25"* %8, i32* dereferenceable(4) %9)
  %10 = bitcast %"struct.std::_Tuple_impl.24"* %7 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to %"struct.std::_Head_base.27"*
  %13 = load i32*, i32** %5, align 8
  call void @_ZNSt10_Head_baseILm1ERiLb0EEC2ES0_(%"struct.std::_Head_base.27"* %12, i32* dereferenceable(4) %13)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ERxLb0EEC2ES0_(%"struct.std::_Head_base.28"*, i64* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.28"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base.28"* %0, %"struct.std::_Head_base.28"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base.28"*, %"struct.std::_Head_base.28"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.28", %"struct.std::_Head_base.28"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm2EJRiEEC2ES0_(%"struct.std::_Tuple_impl.25"*, i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.583
  %6 = load i32, i32* @y.584
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1231750156, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1231750156, label %18
    i32 2070682886, label %38
    i32 131429556, label %71
    i32 1734114400, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2070682886, i32 1734114400
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  %40 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %39, align 8
  store i32* %1, i32** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %39, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.25"* %41 to %"struct.std::_Head_base.26"*
  %43 = load i32*, i32** %40, align 8
  call void @_ZNSt10_Head_baseILm2ERiLb0EEC2ES0_(%"struct.std::_Head_base.26"* %42, i32* dereferenceable(4) %43)
  %44 = load i32, i32* @x.583
  %45 = load i32, i32* @y.584
  %46 = add i32 %44, -949152114
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -949152114
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 131429556, i32 1734114400
  store i32 %70, i32* %14
  br label %78

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  %74 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %73, align 8
  store i32* %1, i32** %74, align 8
  %75 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %73, align 8
  %76 = bitcast %"struct.std::_Tuple_impl.25"* %75 to %"struct.std::_Head_base.26"*
  %77 = load i32*, i32** %74, align 8
  call void @_ZNSt10_Head_baseILm2ERiLb0EEC2ES0_(%"struct.std::_Head_base.26"* %76, i32* dereferenceable(4) %77)
  store i32 2070682886, i32* %14
  br label %78

; <label>:78:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1ERiLb0EEC2ES0_(%"struct.std::_Head_base.27"*, i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.27"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Head_base.27"* %0, %"struct.std::_Head_base.27"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Head_base.27"*, %"struct.std::_Head_base.27"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.27", %"struct.std::_Head_base.27"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  store i32* %7, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm2ERiLb0EEC2ES0_(%"struct.std::_Head_base.26"*, i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.587
  %6 = load i32, i32* @y.588
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 77888774, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 77888774, label %18
    i32 1390322542, label %26
    i32 -484793313, label %59
    i32 -1946002267, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1390322542, i32 -1946002267
  store i32 %25, i32* %14
  br label %66

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Head_base.26"*, align 8
  %28 = alloca i32*, align 8
  store %"struct.std::_Head_base.26"* %0, %"struct.std::_Head_base.26"** %27, align 8
  store i32* %1, i32** %28, align 8
  %29 = load %"struct.std::_Head_base.26"*, %"struct.std::_Head_base.26"** %27, align 8
  %30 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %29, i32 0, i32 0
  %31 = load i32*, i32** %28, align 8
  store i32* %31, i32** %30, align 8
  %32 = load i32, i32* @x.587
  %33 = load i32, i32* @y.588
  %34 = add i32 %32, -676398170
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -676398170
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -484793313, i32 -1946002267
  store i32 %58, i32* %14
  br label %66

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Head_base.26"*, align 8
  %62 = alloca i32*, align 8
  store %"struct.std::_Head_base.26"* %0, %"struct.std::_Head_base.26"** %61, align 8
  store i32* %1, i32** %62, align 8
  %63 = load %"struct.std::_Head_base.26"*, %"struct.std::_Head_base.26"** %61, align 8
  %64 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %63, i32 0, i32 0
  %65 = load i32*, i32** %62, align 8
  store i32* %65, i32** %64, align 8
  store i32 1390322542, i32* %14
  br label %66

; <label>:66:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"struct.std::_Tuple_impl.23"* @_ZNSt11_Tuple_implILm0EJRxRiS1_EEaSIJxiiEEERS2_RKS_ILm0EJDpT_EE(%"struct.std::_Tuple_impl.23"*, %"struct.std::_Tuple_impl.20"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.23"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  store %"struct.std::_Tuple_impl.23"* %0, %"struct.std::_Tuple_impl.23"** %3, align 8
  store %"struct.std::_Tuple_impl.20"* %1, %"struct.std::_Tuple_impl.20"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.23"*, %"struct.std::_Tuple_impl.23"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_headERKS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %6) #3
  %8 = load i64, i64* %7, align 8
  %9 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRxRiS1_EE7_M_headERS2_(%"struct.std::_Tuple_impl.23"* dereferenceable(24) %5) #3
  store i64 %8, i64* %9, align 8
  %10 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %4, align 8
  %11 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16) %10) #3
  %12 = call dereferenceable(16) %"struct.std::_Tuple_impl.24"* @_ZNSt11_Tuple_implILm0EJRxRiS1_EE7_M_tailERS2_(%"struct.std::_Tuple_impl.23"* dereferenceable(24) %5) #3
  %13 = call dereferenceable(16) %"struct.std::_Tuple_impl.24"* @_ZNSt11_Tuple_implILm1EJRiS0_EEaSIJiiEEERS1_RKS_ILm1EJDpT_EE(%"struct.std::_Tuple_impl.24"* %12, %"struct.std::_Tuple_impl.5"* dereferenceable(8) %11)
  ret %"struct.std::_Tuple_impl.23"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRxRiS1_EE7_M_headERS2_(%"struct.std::_Tuple_impl.23"* dereferenceable(24)) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.591
  %6 = load i32, i32* @y.592
  %7 = sub i32 %5, -551520369
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -551520369
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1584210111, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1584210111, label %19
    i32 -664381313, label %39
    i32 1838779878, label %73
    i32 1339411132, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -664381313, i32 1339411132
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.23"*, align 8
  store %"struct.std::_Tuple_impl.23"* %0, %"struct.std::_Tuple_impl.23"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.23"*, %"struct.std::_Tuple_impl.23"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.23"* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 16
  %44 = bitcast i8* %43 to %"struct.std::_Head_base.28"*
  %45 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.28"* dereferenceable(8) %44) #3
  store i64* %45, i64** %2
  %46 = load i32, i32* @x.591
  %47 = load i32, i32* @y.592
  %48 = add i32 %46, -1141996066
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1141996066
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1838779878, i32 1339411132
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile i64*, i64** %2
  ret i64* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Tuple_impl.23"*, align 8
  store %"struct.std::_Tuple_impl.23"* %0, %"struct.std::_Tuple_impl.23"** %76, align 8
  %77 = load %"struct.std::_Tuple_impl.23"*, %"struct.std::_Tuple_impl.23"** %76, align 8
  %78 = bitcast %"struct.std::_Tuple_impl.23"* %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 16
  %80 = bitcast i8* %79 to %"struct.std::_Head_base.28"*
  %81 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.28"* dereferenceable(8) %80) #3
  store i32 -664381313, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJxiiEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.20"* dereferenceable(16)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.20"*, align 8
  store %"struct.std::_Tuple_impl.20"* %0, %"struct.std::_Tuple_impl.20"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.20"*, %"struct.std::_Tuple_impl.20"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.20"* %3 to %"struct.std::_Tuple_impl.5"*
  ret %"struct.std::_Tuple_impl.5"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.24"* @_ZNSt11_Tuple_implILm0EJRxRiS1_EE7_M_tailERS2_(%"struct.std::_Tuple_impl.23"* dereferenceable(24)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.24"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.595
  %6 = load i32, i32* @y.596
  %7 = add i32 %5, -1809231894
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1809231894
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1399830131, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1399830131, label %19
    i32 -806001015, label %39
    i32 -1921906796, label %58
    i32 760219921, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -806001015, i32 760219921
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.23"*, align 8
  store %"struct.std::_Tuple_impl.23"* %0, %"struct.std::_Tuple_impl.23"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.23"*, %"struct.std::_Tuple_impl.23"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.23"* %41 to %"struct.std::_Tuple_impl.24"*
  store %"struct.std::_Tuple_impl.24"* %42, %"struct.std::_Tuple_impl.24"** %2
  %43 = load i32, i32* @x.595
  %44 = load i32, i32* @y.596
  %45 = add i32 %43, 1394347785
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1394347785
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1921906796, i32 760219921
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.std::_Tuple_impl.24"*, %"struct.std::_Tuple_impl.24"** %2
  ret %"struct.std::_Tuple_impl.24"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Tuple_impl.23"*, align 8
  store %"struct.std::_Tuple_impl.23"* %0, %"struct.std::_Tuple_impl.23"** %61, align 8
  %62 = load %"struct.std::_Tuple_impl.23"*, %"struct.std::_Tuple_impl.23"** %61, align 8
  %63 = bitcast %"struct.std::_Tuple_impl.23"* %62 to %"struct.std::_Tuple_impl.24"*
  store i32 -806001015, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.24"* @_ZNSt11_Tuple_implILm1EJRiS0_EEaSIJiiEEERS1_RKS_ILm1EJDpT_EE(%"struct.std::_Tuple_impl.24"*, %"struct.std::_Tuple_impl.5"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.24"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.24"* %0, %"struct.std::_Tuple_impl.24"** %3, align 8
  store %"struct.std::_Tuple_impl.5"* %1, %"struct.std::_Tuple_impl.5"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.24"*, %"struct.std::_Tuple_impl.24"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %4, align 8
  %7 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJiiEE7_M_headERKS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %6) #3
  %8 = load i32, i32* %7, align 4
  %9 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJRiS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.24"* dereferenceable(16) %5) #3
  store i32 %8, i32* %9, align 4
  %10 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %4, align 8
  %11 = call dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZNSt11_Tuple_implILm1EJiiEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8) %10) #3
  %12 = call dereferenceable(8) %"struct.std::_Tuple_impl.25"* @_ZNSt11_Tuple_implILm1EJRiS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.24"* dereferenceable(16) %5) #3
  %13 = call dereferenceable(8) %"struct.std::_Tuple_impl.25"* @_ZNSt11_Tuple_implILm2EJRiEEaSIiEERS1_RKS_ILm2EJT_EE(%"struct.std::_Tuple_impl.25"* %12, %"struct.std::_Tuple_impl.6"* dereferenceable(4) %11)
  ret %"struct.std::_Tuple_impl.24"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERxLb0EE7_M_headERS1_(%"struct.std::_Head_base.28"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.28"*, align 8
  store %"struct.std::_Head_base.28"* %0, %"struct.std::_Head_base.28"** %2, align 8
  %3 = load %"struct.std::_Head_base.28"*, %"struct.std::_Head_base.28"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.28", %"struct.std::_Head_base.28"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJRiS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.24"* dereferenceable(16)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.24"*, align 8
  store %"struct.std::_Tuple_impl.24"* %0, %"struct.std::_Tuple_impl.24"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.24"*, %"struct.std::_Tuple_impl.24"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.24"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.27"*
  %7 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm1ERiLb0EE7_M_headERS1_(%"struct.std::_Head_base.27"* dereferenceable(8) %6) #3
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) %"struct.std::_Tuple_impl.6"* @_ZNSt11_Tuple_implILm1EJiiEE7_M_tailERKS0_(%"struct.std::_Tuple_impl.5"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %0, %"struct.std::_Tuple_impl.5"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.5"* %3 to %"struct.std::_Tuple_impl.6"*
  ret %"struct.std::_Tuple_impl.6"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.25"* @_ZNSt11_Tuple_implILm1EJRiS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.24"* dereferenceable(16)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.25"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.605
  %6 = load i32, i32* @y.606
  %7 = sub i32 %5, -391510589
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -391510589
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1890111194, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1890111194, label %19
    i32 1108539738, label %39
    i32 -351102149, label %58
    i32 -1751061533, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1108539738, i32 -1751061533
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.24"*, align 8
  store %"struct.std::_Tuple_impl.24"* %0, %"struct.std::_Tuple_impl.24"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.24"*, %"struct.std::_Tuple_impl.24"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.24"* %41 to %"struct.std::_Tuple_impl.25"*
  store %"struct.std::_Tuple_impl.25"* %42, %"struct.std::_Tuple_impl.25"** %2
  %43 = load i32, i32* @x.605
  %44 = load i32, i32* @y.606
  %45 = sub i32 %43, 1377242115
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1377242115
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -351102149, i32 -1751061533
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %2
  ret %"struct.std::_Tuple_impl.25"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Tuple_impl.24"*, align 8
  store %"struct.std::_Tuple_impl.24"* %0, %"struct.std::_Tuple_impl.24"** %61, align 8
  %62 = load %"struct.std::_Tuple_impl.24"*, %"struct.std::_Tuple_impl.24"** %61, align 8
  %63 = bitcast %"struct.std::_Tuple_impl.24"* %62 to %"struct.std::_Tuple_impl.25"*
  store i32 1108539738, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.25"* @_ZNSt11_Tuple_implILm2EJRiEEaSIiEERS1_RKS_ILm2EJT_EE(%"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.6"* dereferenceable(4)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.6"*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %3, align 8
  store %"struct.std::_Tuple_impl.6"* %1, %"struct.std::_Tuple_impl.6"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.6"*, %"struct.std::_Tuple_impl.6"** %4, align 8
  %7 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm2EJiEE7_M_headERKS0_(%"struct.std::_Tuple_impl.6"* dereferenceable(4) %6) #3
  %8 = load i32, i32* %7, align 4
  %9 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm2EJRiEE7_M_headERS1_(%"struct.std::_Tuple_impl.25"* dereferenceable(8) %5) #3
  store i32 %8, i32* %9, align 4
  ret %"struct.std::_Tuple_impl.25"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm1ERiLb0EE7_M_headERS1_(%"struct.std::_Head_base.27"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.27"*, align 8
  store %"struct.std::_Head_base.27"* %0, %"struct.std::_Head_base.27"** %2, align 8
  %3 = load %"struct.std::_Head_base.27"*, %"struct.std::_Head_base.27"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.27", %"struct.std::_Head_base.27"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm2EJRiEE7_M_headERS1_(%"struct.std::_Tuple_impl.25"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.25"*, align 8
  store %"struct.std::_Tuple_impl.25"* %0, %"struct.std::_Tuple_impl.25"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.25"*, %"struct.std::_Tuple_impl.25"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.25"* %3 to %"struct.std::_Head_base.26"*
  %5 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm2ERiLb0EE7_M_headERS1_(%"struct.std::_Head_base.26"* dereferenceable(8) %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm2ERiLb0EE7_M_headERS1_(%"struct.std::_Head_base.26"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.26"*, align 8
  store %"struct.std::_Head_base.26"* %0, %"struct.std::_Head_base.26"** %2, align 8
  %3 = load %"struct.std::_Head_base.26"*, %"struct.std::_Head_base.26"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.26", %"struct.std::_Head_base.26"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %"class.std::tuple"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.std::tuple"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.std::tuple"** %1, %"class.std::tuple"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::tuple"**, %"class.std::tuple"*** %4, align 8
  %8 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple"* %8, %"class.std::tuple"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt5tupleIJiiiEESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"class.std::tuple"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRiS0_S0_EEC2ES0_S0_S0_(%"class.std::tuple.29"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::tuple.29"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"class.std::tuple.29"* %0, %"class.std::tuple.29"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"class.std::tuple.29"*, %"class.std::tuple.29"** %5, align 8
  %10 = bitcast %"class.std::tuple.29"* %9 to %"struct.std::_Tuple_impl.30"*
  %11 = load i32*, i32** %6, align 8
  %12 = load i32*, i32** %7, align 8
  %13 = load i32*, i32** %8, align 8
  call void @_ZNSt11_Tuple_implILm0EJRiS0_S0_EEC2ES0_S0_S0_(%"struct.std::_Tuple_impl.30"* %10, i32* dereferenceable(4) %11, i32* dereferenceable(4) %12, i32* dereferenceable(4) %13)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRiS0_S0_EEC2ES0_S0_S0_(%"struct.std::_Tuple_impl.30"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::_Tuple_impl.30"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.30"* %0, %"struct.std::_Tuple_impl.30"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"struct.std::_Tuple_impl.30"*, %"struct.std::_Tuple_impl.30"** %5, align 8
  %10 = bitcast %"struct.std::_Tuple_impl.30"* %9 to %"struct.std::_Tuple_impl.24"*
  %11 = load i32*, i32** %7, align 8
  %12 = load i32*, i32** %8, align 8
  call void @_ZNSt11_Tuple_implILm1EJRiS0_EEC2ES0_S0_(%"struct.std::_Tuple_impl.24"* %10, i32* dereferenceable(4) %11, i32* dereferenceable(4) %12)
  %13 = bitcast %"struct.std::_Tuple_impl.30"* %9 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %"struct.std::_Head_base.31"*
  %16 = load i32*, i32** %6, align 8
  call void @_ZNSt10_Head_baseILm0ERiLb0EEC2ES0_(%"struct.std::_Head_base.31"* %15, i32* dereferenceable(4) %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ERiLb0EEC2ES0_(%"struct.std::_Head_base.31"*, i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.31"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Head_base.31"* %0, %"struct.std::_Head_base.31"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Head_base.31"*, %"struct.std::_Head_base.31"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.31", %"struct.std::_Head_base.31"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  store i32* %7, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"struct.std::_Tuple_impl.30"* @_ZNSt11_Tuple_implILm0EJRiS0_S0_EEaSIJiiiEEERS1_RKS_ILm0EJDpT_EE(%"struct.std::_Tuple_impl.30"*, %"struct.std::_Tuple_impl"* dereferenceable(12)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.30"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.625
  %7 = load i32, i32* @y.626
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1228485139, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1228485139, label %19
    i32 616198454, label %27
    i32 -1331026044, label %56
    i32 -1651840613, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 616198454, i32 -1651840613
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Tuple_impl.30"*, align 8
  %29 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl.30"* %0, %"struct.std::_Tuple_impl.30"** %28, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %29, align 8
  %30 = load %"struct.std::_Tuple_impl.30"*, %"struct.std::_Tuple_impl.30"** %28, align 8
  store %"struct.std::_Tuple_impl.30"* %30, %"struct.std::_Tuple_impl.30"** %3
  %31 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %29, align 8
  %32 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJiiiEE7_M_headERKS0_(%"struct.std::_Tuple_impl"* dereferenceable(12) %31) #3
  %33 = load i32, i32* %32, align 4
  %34 = load volatile %"struct.std::_Tuple_impl.30"*, %"struct.std::_Tuple_impl.30"** %3
  %35 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRiS0_S0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.30"* dereferenceable(24) %34) #3
  store i32 %33, i32* %35, align 4
  %36 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %29, align 8
  %37 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJiiiEE7_M_tailERKS0_(%"struct.std::_Tuple_impl"* dereferenceable(12) %36) #3
  %38 = load volatile %"struct.std::_Tuple_impl.30"*, %"struct.std::_Tuple_impl.30"** %3
  %39 = call dereferenceable(16) %"struct.std::_Tuple_impl.24"* @_ZNSt11_Tuple_implILm0EJRiS0_S0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.30"* dereferenceable(24) %38) #3
  %40 = call dereferenceable(16) %"struct.std::_Tuple_impl.24"* @_ZNSt11_Tuple_implILm1EJRiS0_EEaSIJiiEEERS1_RKS_ILm1EJDpT_EE(%"struct.std::_Tuple_impl.24"* %39, %"struct.std::_Tuple_impl.5"* dereferenceable(8) %37)
  %41 = load i32, i32* @x.625
  %42 = load i32, i32* @y.626
  %43 = sub i32 %41, -226523722
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -226523722
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1331026044, i32 -1651840613
  store i32 %55, i32* %15
  br label %70

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"struct.std::_Tuple_impl.30"*, %"struct.std::_Tuple_impl.30"** %3
  ret %"struct.std::_Tuple_impl.30"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.std::_Tuple_impl.30"*, align 8
  %60 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl.30"* %0, %"struct.std::_Tuple_impl.30"** %59, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %60, align 8
  %61 = load %"struct.std::_Tuple_impl.30"*, %"struct.std::_Tuple_impl.30"** %59, align 8
  %62 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %60, align 8
  %63 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJiiiEE7_M_headERKS0_(%"struct.std::_Tuple_impl"* dereferenceable(12) %62) #3
  %64 = load i32, i32* %63, align 4
  %65 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRiS0_S0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.30"* dereferenceable(24) %61) #3
  store i32 %64, i32* %65, align 4
  %66 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %60, align 8
  %67 = call dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJiiiEE7_M_tailERKS0_(%"struct.std::_Tuple_impl"* dereferenceable(12) %66) #3
  %68 = call dereferenceable(16) %"struct.std::_Tuple_impl.24"* @_ZNSt11_Tuple_implILm0EJRiS0_S0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.30"* dereferenceable(24) %61) #3
  %69 = call dereferenceable(16) %"struct.std::_Tuple_impl.24"* @_ZNSt11_Tuple_implILm1EJRiS0_EEaSIJiiEEERS1_RKS_ILm1EJDpT_EE(%"struct.std::_Tuple_impl.24"* %68, %"struct.std::_Tuple_impl.5"* dereferenceable(8) %67)
  store i32 616198454, i32* %15
  br label %70

; <label>:70:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJiiiEE7_M_headERKS0_(%"struct.std::_Tuple_impl"* dereferenceable(12)) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.627
  %6 = load i32, i32* @y.628
  %7 = add i32 %5, 803440535
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 803440535
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1495118872, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1495118872, label %19
    i32 1490334839, label %27
    i32 -744568949, label %48
    i32 1795384960, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1490334839, i32 1795384960
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %28, align 8
  %29 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %28, align 8
  %30 = bitcast %"struct.std::_Tuple_impl"* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 8
  %32 = bitcast i8* %31 to %"struct.std::_Head_base.8"*
  %33 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm0EiLb0EE7_M_headERKS0_(%"struct.std::_Head_base.8"* dereferenceable(4) %32) #3
  store i32* %33, i32** %2
  %34 = load i32, i32* @x.627
  %35 = load i32, i32* @y.628
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -744568949, i32 1795384960
  store i32 %47, i32* %15
  br label %57

; <label>:48:                                     ; preds = %16
  %49 = load volatile i32*, i32** %2
  ret i32* %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %51, align 8
  %52 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %51, align 8
  %53 = bitcast %"struct.std::_Tuple_impl"* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 8
  %55 = bitcast i8* %54 to %"struct.std::_Head_base.8"*
  %56 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm0EiLb0EE7_M_headERKS0_(%"struct.std::_Head_base.8"* dereferenceable(4) %55) #3
  store i32 1490334839, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRiS0_S0_EE7_M_headERS1_(%"struct.std::_Tuple_impl.30"* dereferenceable(24)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.30"*, align 8
  store %"struct.std::_Tuple_impl.30"* %0, %"struct.std::_Tuple_impl.30"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.30"*, %"struct.std::_Tuple_impl.30"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl.30"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.31"*
  %7 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm0ERiLb0EE7_M_headERS1_(%"struct.std::_Head_base.31"* dereferenceable(8) %6) #3
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.5"* @_ZNSt11_Tuple_implILm0EJiiiEE7_M_tailERKS0_(%"struct.std::_Tuple_impl"* dereferenceable(12)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl"* %3 to %"struct.std::_Tuple_impl.5"*
  ret %"struct.std::_Tuple_impl.5"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl.24"* @_ZNSt11_Tuple_implILm0EJRiS0_S0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl.30"* dereferenceable(24)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl.24"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.633
  %6 = load i32, i32* @y.634
  %7 = add i32 %5, -720318716
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -720318716
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 282484668, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 282484668, label %19
    i32 -470113498, label %39
    i32 181560617, label %69
    i32 -640122096, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -470113498, i32 -640122096
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.30"*, align 8
  store %"struct.std::_Tuple_impl.30"* %0, %"struct.std::_Tuple_impl.30"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.30"*, %"struct.std::_Tuple_impl.30"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.30"* %41 to %"struct.std::_Tuple_impl.24"*
  store %"struct.std::_Tuple_impl.24"* %42, %"struct.std::_Tuple_impl.24"** %2
  %43 = load i32, i32* @x.633
  %44 = load i32, i32* @y.634
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 181560617, i32 -640122096
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.std::_Tuple_impl.24"*, %"struct.std::_Tuple_impl.24"** %2
  ret %"struct.std::_Tuple_impl.24"* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"struct.std::_Tuple_impl.30"*, align 8
  store %"struct.std::_Tuple_impl.30"* %0, %"struct.std::_Tuple_impl.30"** %72, align 8
  %73 = load %"struct.std::_Tuple_impl.30"*, %"struct.std::_Tuple_impl.30"** %72, align 8
  %74 = bitcast %"struct.std::_Tuple_impl.30"* %73 to %"struct.std::_Tuple_impl.24"*
  store i32 -470113498, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm0EiLb0EE7_M_headERKS0_(%"struct.std::_Head_base.8"* dereferenceable(4)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.8"*, align 8
  store %"struct.std::_Head_base.8"* %0, %"struct.std::_Head_base.8"** %2, align 8
  %3 = load %"struct.std::_Head_base.8"*, %"struct.std::_Head_base.8"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.8", %"struct.std::_Head_base.8"* %3, i32 0, i32 0
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm0ERiLb0EE7_M_headERS1_(%"struct.std::_Head_base.31"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.31"*, align 8
  store %"struct.std::_Head_base.31"* %0, %"struct.std::_Head_base.31"** %2, align 8
  %3 = load %"struct.std::_Head_base.31"*, %"struct.std::_Head_base.31"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.31", %"struct.std::_Head_base.31"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s628971473.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline noreturn nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
