; ModuleID = 'Project_CodeNet_C++1400/p02703/s701323901.cpp'
source_filename = "Project_CodeNet_C++1400/p02703/s701323901.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::pair" = type { i32, i32 }
%"class.std::priority_queue" = type <{ %"class.std::vector", %"struct.std::less", [7 x i8] }>
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl" = type { %"struct.std::pair.0"*, %"struct.std::pair.0"*, %"struct.std::pair.0"* }
%"struct.std::pair.0" = type <{ i64, i32, [4 x i8] }>
%"struct.std::less" = type { i8 }
%"class.std::vector.1" = type { %"struct.std::_Vector_base.2" }
%"struct.std::_Vector_base.2" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::allocator.3" = type { i8 }
%"class.std::priority_queue.6" = type <{ %"class.std::vector.7", %"struct.std::less.12", [7 x i8] }>
%"class.std::vector.7" = type { %"struct.std::_Vector_base.8" }
%"struct.std::_Vector_base.8" = type { %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl" }
%"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl" = type { %struct.elem*, %struct.elem*, %struct.elem* }
%struct.elem = type { i64, i64, i32 }
%"struct.std::less.12" = type { i8 }
%"class.std::vector.15" = type { %"struct.std::_Vector_base.16" }
%"struct.std::_Vector_base.16" = type { %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" = type { %"class.std::vector.1"*, %"class.std::vector.1"*, %"class.std::vector.1"* }
%"class.std::allocator.17" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.std::pair.0"* }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator.4" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.21" = type { %struct.elem* }
%"class.std::allocator.9" = type { i8 }
%"class.__gnu_cxx::new_allocator.18" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { %"struct.std::less" }
%"struct.__gnu_cxx::__ops::_Iter_comp_val" = type { %"struct.std::less" }
%"class.std::move_iterator" = type { %"struct.std::pair.0"* }
%"class.__gnu_cxx::__normal_iterator.20" = type { %"struct.std::pair.0"* }
%"class.__gnu_cxx::new_allocator.10" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter.22" = type { %"struct.std::less.12" }
%"struct.__gnu_cxx::__ops::_Iter_comp_val.23" = type { %"struct.std::less.12" }
%"class.__gnu_cxx::__normal_iterator.24" = type { i64* }
%"class.std::move_iterator.25" = type { %struct.elem* }
%"class.__gnu_cxx::__normal_iterator.26" = type { %struct.elem* }

$_ZNSt4pairIiiEC2Ev = comdat any

$_ZSt9make_pairIiiESt4pairINSt17__decay_and_stripIT_E6__typeENS1_IT0_E6__typeEEOS2_OS5_ = comdat any

$_ZNSt4pairIiiEaSEOS0_ = comdat any

$_ZSt9make_pairIRiS0_ESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_ = comdat any

$_ZNSt6vectorISt4pairIxiESaIS1_EEC2Ev = comdat any

$_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EEC2ERKS6_OS4_ = comdat any

$_ZNSt6vectorISt4pairIxiESaIS1_EED2Ev = comdat any

$_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_ = comdat any

$_ZNSaIxEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_ = comdat any

$_ZNSaIxED2Ev = comdat any

$_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_ = comdat any

$_ZNSt4pairIxiEC2IiivEEOS_IT_T0_E = comdat any

$_ZNSt6vectorIxSaIxEEixEm = comdat any

$_ZNKSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE5emptyEv = comdat any

$_ZNKSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE3topEv = comdat any

$_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE3popEv = comdat any

$_ZSteqIiiEbRKSt4pairIT_T0_ES5_ = comdat any

$_ZSt9make_pairIxRiESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_ = comdat any

$_ZNSt6vectorIxSaIxEED2Ev = comdat any

$_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev = comdat any

$_ZNSt6vectorI4elemSaIS0_EEC2Ev = comdat any

$_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EEC2ERKS5_OS3_ = comdat any

$_ZNSt6vectorI4elemSaIS0_EED2Ev = comdat any

$_ZNSaISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaISt6vectorIxSaIxEEED2Ev = comdat any

$_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE4pushEOS0_ = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm = comdat any

$_ZNKSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE5emptyEv = comdat any

$_ZNKSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE3topEv = comdat any

$_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE3popEv = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev = comdat any

$_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EED2Ev = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt4pairIiiEC2IiivEEOT_OT0_ = comdat any

$_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_ = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt4pairIxiEC2IxRivEEOT_OT0_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxiESaIS1_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt4pairIxiEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxiEEC2Ev = comdat any

$_ZSt8_DestroyIPSt4pairIxiES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt4pairIxiESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt4pairIxiEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxiEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxiEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE10deallocateEPS2_m = comdat any

$_ZNSaISt4pairIxiEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxiEED2Ev = comdat any

$_ZSt4moveIRSt6vectorISt4pairIxiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt6vectorISt4pairIxiESaIS1_EEC2EOS3_ = comdat any

$_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorISt4pairIxiESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorISt4pairIxiESaIS1_EE3endEv = comdat any

$_ZNSt12_Vector_baseISt4pairIxiESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaISt4pairIxiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZNSaISt4pairIxiEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxiEEC2ERKS3_ = comdat any

$_ZSt4swapIPSt4pairIxiEEvRT_S4_ = comdat any

$_ZSt4moveIRPSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessISt4pairIxiEEEENS0_15_Iter_comp_iterIT_EES7_ = comdat any

$_ZN9__gnu_cxxmiIPSt4pairIxiESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessISt4pairIxiEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_ = comdat any

$_ZNSt4pairIxiEaSEOS0_ = comdat any

$_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessISt4pairIxiEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE = comdat any

$_ZNKSt4lessISt4pairIxiEEclERKS1_S4_ = comdat any

$_ZStltIxiEbRKSt4pairIT_T0_ES5_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessISt4pairIxiEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessISt4pairIxiEEEC2ES5_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessISt4pairIxiEEEC2ES5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx = comdat any

$_ZNSt12_Vector_baseIxSaIxEED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt6vectorISt4pairIxiESaIS1_EE9push_backEOS1_ = comdat any

$_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorISt4pairIxiESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxiEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardISt4pairIxiEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorISt4pairIxiESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorISt4pairIxiESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorISt4pairIxiESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxiES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxiEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorISt4pairIxiESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxiEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseISt4pairIxiESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt4pairIxiEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxiEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxiEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxiESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxiEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxiEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPSt4pairIxiEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructISt4pairIxiEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt4pairIxiEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPSt4pairIxiEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt4pairIxiEEppEv = comdat any

$_ZSteqIPSt4pairIxiEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPSt4pairIxiEE4baseEv = comdat any

$_ZNSt13move_iteratorIPSt4pairIxiEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE7destroyIS2_EEvPT_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEmiEl = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessISt4pairIxiEEEENS0_14_Iter_comp_valIT_EES7_ = comdat any

$_ZNKSt6vectorISt4pairIxiESaIS1_EE5emptyEv = comdat any

$_ZN9__gnu_cxxeqIPKSt4pairIxiESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNKSt6vectorISt4pairIxiESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorISt4pairIxiESaIS1_EE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNKSt6vectorISt4pairIxiESaIS1_EE5frontEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorISt4pairIxiESaIS1_EE8pop_backEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEmmEv = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_SE_T0_ = comdat any

$_ZNSt12_Vector_baseI4elemSaIS0_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_implC2Ev = comdat any

$_ZNSaI4elemEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI4elemEC2Ev = comdat any

$_ZSt8_DestroyIP4elemS0_EvT_S2_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseI4elemSaIS0_EED2Ev = comdat any

$_ZSt8_DestroyIP4elemEvT_S2_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP4elemEEvT_S4_ = comdat any

$_ZNSt12_Vector_baseI4elemSaIS0_EE13_M_deallocateEPS0_m = comdat any

$_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaI4elemEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI4elemE10deallocateEPS1_m = comdat any

$_ZNSaI4elemED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI4elemED2Ev = comdat any

$_ZSt4moveIRSt6vectorI4elemSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt6vectorI4elemSaIS0_EEC2EOS2_ = comdat any

$_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_ = comdat any

$_ZNSt6vectorI4elemSaIS0_EE5beginEv = comdat any

$_ZNSt6vectorI4elemSaIS0_EE3endEv = comdat any

$_ZNSt12_Vector_baseI4elemSaIS0_EEC2EOS2_ = comdat any

$_ZSt4moveIRSaI4elemEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_implC2EOS1_ = comdat any

$_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_impl12_M_swap_dataERS3_ = comdat any

$_ZNSaI4elemEC2ERKS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI4elemEC2ERKS2_ = comdat any

$_ZSt4swapIP4elemEvRT_S3_ = comdat any

$_ZSt4moveIRP4elemEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI4elemEEENS0_15_Iter_comp_iterIT_EES6_ = comdat any

$_ZN9__gnu_cxxmiIP4elemSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_ = comdat any

$_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_T0_SE_T1_T2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4elemEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_ = comdat any

$_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops14_Iter_comp_valISt4lessIS2_EEEEvT_T0_SE_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4elemEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE = comdat any

$_ZNKSt4lessI4elemEclERKS0_S3_ = comdat any

$_ZNK4elemltERKS_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4elemEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEES3_EEbT_RT0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4elemEEC2ES4_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4elemEEC2ES4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIxSaIxEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_ = comdat any

$_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt6vectorIxSaIxEEC2ERKS1_ = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIxSaIxEE5beginEv = comdat any

$_ZNKSt6vectorIxSaIxEE3endEv = comdat any

$_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaIxEC2ERKS_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt6vectorI4elemSaIS0_EE9push_backEOS0_ = comdat any

$_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_ = comdat any

$_ZNSt6vectorI4elemSaIS0_EE12emplace_backIJS0_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaI4elemEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_ = comdat any

$_ZSt7forwardI4elemEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt6vectorI4elemSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI4elemE9constructIS1_JS1_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorI4elemSaIS0_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseI4elemSaIS0_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorI4elemSaIS0_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP4elemS1_SaIS0_EET0_T_S4_S3_RT1_ = comdat any

$_ZNSt16allocator_traitsISaI4elemEE7destroyIS0_EEvRS1_PT_ = comdat any

$_ZNKSt6vectorI4elemSaIS0_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI4elemEE8max_sizeERKS1_ = comdat any

$_ZNKSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorI4elemE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI4elemEE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI4elemE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIP4elemES2_S1_ET0_T_S5_S4_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIP4elemSt13move_iteratorIS1_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIP4elemES2_ET0_T_S5_S4_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP4elemES4_EET0_T_S7_S6_ = comdat any

$_ZSt4copyISt13move_iteratorIP4elemES2_ET0_T_S5_S4_ = comdat any

$_ZSt14__copy_move_a2ILb1EP4elemS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIP4elemEENSt11_Miter_baseIT_E13iterator_typeES5_ = comdat any

$_ZSt13__copy_move_aILb1EP4elemS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIP4elemENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI4elemEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIP4elemLb0EE7_S_baseES1_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIP4elemELb1EE7_S_baseES3_ = comdat any

$_ZNKSt13move_iteratorIP4elemE4baseEv = comdat any

$_ZNSt13move_iteratorIP4elemEC2ES1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI4elemE7destroyIS1_EEvPT_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEmiEl = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4elemEEENS0_14_Iter_comp_valIT_EES6_ = comdat any

$_ZNKSt6vectorI4elemSaIS0_EE5emptyEv = comdat any

$_ZN9__gnu_cxxeqIPK4elemSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNKSt6vectorI4elemSaIS0_EE5beginEv = comdat any

$_ZNKSt6vectorI4elemSaIS0_EE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEEC2ERKS3_ = comdat any

$_ZNKSt6vectorI4elemSaIS0_EE5frontEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEEdeEv = comdat any

$_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_ = comdat any

$_ZNSt6vectorI4elemSaIS0_EE8pop_backEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEmmEv = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_SD_T0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s701323901.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = sub i32 %3, -1847001749
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1847001749
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 1985438017, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %56
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1985438017, label %17
    i32 -140170249, label %37
    i32 1802878544, label %53
    i32 1541734739, label %54
  ]

; <label>:16:                                     ; preds = %14
  br label %56

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -140170249, i32 1541734739
  store i32 %36, i32* %13
  br label %56

; <label>:37:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %38 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1802878544, i32 1541734739
  store i32 %52, i32* %13
  br label %56

; <label>:53:                                     ; preds = %14
  ret void

; <label>:54:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %55 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  store i32 -140170249, i32* %13
  br label %56

; <label>:56:                                     ; preds = %54, %37, %17, %16
  br label %14
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [50 x [50 x %"struct.std::pair"]], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"struct.std::pair", align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"struct.std::pair", align 4
  %17 = alloca %"struct.std::pair", align 4
  %18 = alloca [50 x i32], align 16
  %19 = alloca [50 x i32], align 16
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::priority_queue", align 8
  %22 = alloca %"struct.std::less", align 1
  %23 = alloca %"class.std::vector", align 8
  %24 = alloca i8*
  %25 = alloca i32
  %26 = alloca %"class.std::vector.1", align 8
  %27 = alloca i64, align 8
  %28 = alloca %"class.std::allocator.3", align 1
  %29 = alloca %"struct.std::pair.0", align 8
  %30 = alloca %"struct.std::pair", align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i64, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca %"struct.std::pair", align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i64, align 8
  %40 = alloca %"struct.std::pair.0", align 8
  %41 = alloca i64, align 8
  %42 = alloca i32, align 4
  %43 = alloca %"class.std::priority_queue.6", align 8
  %44 = alloca %"struct.std::less.12", align 1
  %45 = alloca %"class.std::vector.7", align 8
  %46 = alloca %"class.std::vector.15", align 8
  %47 = alloca %"class.std::vector.1", align 8
  %48 = alloca i64, align 8
  %49 = alloca %"class.std::allocator.3", align 1
  %50 = alloca %"class.std::allocator.17", align 1
  %51 = alloca %struct.elem, align 8
  %52 = alloca %struct.elem, align 8
  %53 = alloca i64, align 8
  %54 = alloca i64, align 8
  %55 = alloca i32, align 4
  %56 = alloca i64, align 8
  %57 = alloca i64, align 8
  %58 = alloca %struct.elem, align 8
  %59 = alloca i32, align 4
  %60 = alloca %"struct.std::pair", align 4
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca i64, align 8
  %64 = alloca i64, align 8
  %65 = alloca %struct.elem, align 8
  %66 = alloca i32, align 4
  %67 = alloca i64, align 8
  %68 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %69 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %2)
  %70 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %69, i32* dereferenceable(4) %3)
  %71 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %70, i32* dereferenceable(4) %4)
  %72 = getelementptr inbounds [50 x [50 x %"struct.std::pair"]], [50 x [50 x %"struct.std::pair"]]* %5, i64 0, i64 0
  %73 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %72, i64 50
  br label %74

; <label>:74:                                     ; preds = %122, %0
  %75 = phi [50 x %"struct.std::pair"]* [ %72, %0 ], [ %123, %122 ]
  %76 = load i32, i32* @x.1
  %77 = load i32, i32* @y.2
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %1703

; <label>:101:                                    ; preds = %74, %1703
  %102 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %75, i64 0, i64 0
  %103 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %102, i64 50
  %104 = load i32, i32* @x.1
  %105 = load i32, i32* @y.2
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %1703

; <label>:117:                                    ; preds = %101
  br label %118

; <label>:118:                                    ; preds = %118, %117
  %119 = phi %"struct.std::pair"* [ %102, %117 ], [ %120, %118 ]
  call void @_ZNSt4pairIiiEC2Ev(%"struct.std::pair"* %119)
  %120 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %119, i64 1
  %121 = icmp eq %"struct.std::pair"* %120, %103
  br i1 %121, label %122, label %118

; <label>:122:                                    ; preds = %118
  %123 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %75, i64 1
  %124 = icmp eq [50 x %"struct.std::pair"]* %123, %73
  br i1 %124, label %125, label %74

; <label>:125:                                    ; preds = %122
  store i32 0, i32* %6, align 4
  br label %126

; <label>:126:                                    ; preds = %153, %125
  %127 = load i32, i32* %6, align 4
  %128 = load i32, i32* %2, align 4
  %129 = icmp slt i32 %127, %128
  br i1 %129, label %130, label %158

; <label>:130:                                    ; preds = %126
  store i32 0, i32* %7, align 4
  br label %131

; <label>:131:                                    ; preds = %145, %130
  %132 = load i32, i32* %7, align 4
  %133 = load i32, i32* %2, align 4
  %134 = icmp slt i32 %132, %133
  br i1 %134, label %135, label %152

; <label>:135:                                    ; preds = %131
  store i32 1000000007, i32* %9, align 4
  store i32 1000000007, i32* %10, align 4
  %136 = call i64 @_ZSt9make_pairIiiESt4pairINSt17__decay_and_stripIT_E6__typeENS1_IT0_E6__typeEEOS2_OS5_(i32* dereferenceable(4) %9, i32* dereferenceable(4) %10)
  %137 = bitcast %"struct.std::pair"* %8 to i64*
  store i64 %136, i64* %137, align 4
  %138 = load i32, i32* %6, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [50 x [50 x %"struct.std::pair"]], [50 x [50 x %"struct.std::pair"]]* %5, i64 0, i64 %139
  %141 = load i32, i32* %7, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %140, i64 0, i64 %142
  %144 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"* %143, %"struct.std::pair"* dereferenceable(8) %8) #3
  br label %145

; <label>:145:                                    ; preds = %135
  %146 = load i32, i32* %7, align 4
  %147 = sub i32 0, %146
  %148 = sub i32 0, 1
  %149 = add i32 %147, %148
  %150 = sub i32 0, %149
  %151 = add nsw i32 %146, 1
  store i32 %150, i32* %7, align 4
  br label %131

; <label>:152:                                    ; preds = %131
  br label %153

; <label>:153:                                    ; preds = %152
  %154 = load i32, i32* %6, align 4
  %155 = sub i32 0, 1
  %156 = sub i32 %154, %155
  %157 = add nsw i32 %154, 1
  store i32 %156, i32* %6, align 4
  br label %126

; <label>:158:                                    ; preds = %126
  store i32 0, i32* %11, align 4
  br label %159

; <label>:159:                                    ; preds = %250, %158
  %160 = load i32, i32* @x.1
  %161 = load i32, i32* @y.2
  %162 = sub i32 0, 1
  %163 = add i32 %160, %162
  %164 = sub i32 %160, 1
  %165 = mul i32 %160, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %161, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 true, true
  %172 = and i1 %169, true
  %173 = and i1 %167, %171
  %174 = and i1 %170, true
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 true, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  br i1 %183, label %185, label %1706

; <label>:185:                                    ; preds = %159, %1706
  %186 = load i32, i32* %11, align 4
  %187 = load i32, i32* %3, align 4
  %188 = icmp slt i32 %186, %187
  %189 = load i32, i32* @x.1
  %190 = load i32, i32* @y.2
  %191 = add i32 %189, -128759161
  %192 = sub i32 %191, 1
  %193 = sub i32 %192, -128759161
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = xor i1 %197, true
  %200 = xor i1 %198, true
  %201 = xor i1 true, true
  %202 = and i1 %199, true
  %203 = and i1 %197, %201
  %204 = and i1 %200, true
  %205 = and i1 %198, %201
  %206 = or i1 %202, %203
  %207 = or i1 %204, %205
  %208 = xor i1 %206, %207
  %209 = or i1 %199, %200
  %210 = xor i1 %209, true
  %211 = or i1 true, %201
  %212 = and i1 %210, %211
  %213 = or i1 %208, %212
  %214 = or i1 %197, %198
  br i1 %213, label %215, label %1706

; <label>:215:                                    ; preds = %185
  br i1 %188, label %216, label %256

; <label>:216:                                    ; preds = %215
  %217 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %12)
  %218 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %217, i32* dereferenceable(4) %13)
  %219 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %218, i32* dereferenceable(4) %14)
  %220 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %219, i32* dereferenceable(4) %15)
  %221 = load i32, i32* %12, align 4
  %222 = sub i32 0, %221
  %223 = sub i32 0, -1
  %224 = add i32 %222, %223
  %225 = sub i32 0, %224
  %226 = add nsw i32 %221, -1
  store i32 %225, i32* %12, align 4
  %227 = load i32, i32* %13, align 4
  %228 = add i32 %227, 179439848
  %229 = add i32 %228, -1
  %230 = sub i32 %229, 179439848
  %231 = add nsw i32 %227, -1
  store i32 %230, i32* %13, align 4
  %232 = call i64 @_ZSt9make_pairIRiS0_ESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i32* dereferenceable(4) %14, i32* dereferenceable(4) %15)
  %233 = bitcast %"struct.std::pair"* %16 to i64*
  store i64 %232, i64* %233, align 4
  %234 = load i32, i32* %12, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [50 x [50 x %"struct.std::pair"]], [50 x [50 x %"struct.std::pair"]]* %5, i64 0, i64 %235
  %237 = load i32, i32* %13, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %236, i64 0, i64 %238
  %240 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"* %239, %"struct.std::pair"* dereferenceable(8) %16) #3
  %241 = call i64 @_ZSt9make_pairIRiS0_ESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i32* dereferenceable(4) %14, i32* dereferenceable(4) %15)
  %242 = bitcast %"struct.std::pair"* %17 to i64*
  store i64 %241, i64* %242, align 4
  %243 = load i32, i32* %13, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds [50 x [50 x %"struct.std::pair"]], [50 x [50 x %"struct.std::pair"]]* %5, i64 0, i64 %244
  %246 = load i32, i32* %12, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %245, i64 0, i64 %247
  %249 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"* %248, %"struct.std::pair"* dereferenceable(8) %17) #3
  br label %250

; <label>:250:                                    ; preds = %216
  %251 = load i32, i32* %11, align 4
  %252 = sub i32 %251, -464114581
  %253 = add i32 %252, 1
  %254 = add i32 %253, -464114581
  %255 = add nsw i32 %251, 1
  store i32 %254, i32* %11, align 4
  br label %159

; <label>:256:                                    ; preds = %215
  store i32 0, i32* %20, align 4
  br label %257

; <label>:257:                                    ; preds = %346, %256
  %258 = load i32, i32* %20, align 4
  %259 = load i32, i32* %2, align 4
  %260 = icmp slt i32 %258, %259
  br i1 %260, label %261, label %347

; <label>:261:                                    ; preds = %257
  %262 = load i32, i32* @x.1
  %263 = load i32, i32* @y.2
  %264 = sub i32 0, 1
  %265 = add i32 %262, %264
  %266 = sub i32 %262, 1
  %267 = mul i32 %262, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %263, 10
  %271 = and i1 %269, %270
  %272 = xor i1 %269, %270
  %273 = or i1 %271, %272
  %274 = or i1 %269, %270
  br i1 %273, label %275, label %1710

; <label>:275:                                    ; preds = %261, %1710
  %276 = load i32, i32* %20, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds [50 x i32], [50 x i32]* %18, i64 0, i64 %277
  %279 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %278)
  %280 = load i32, i32* %20, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [50 x i32], [50 x i32]* %19, i64 0, i64 %281
  %283 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %279, i32* dereferenceable(4) %282)
  %284 = load i32, i32* @x.1
  %285 = load i32, i32* @y.2
  %286 = sub i32 %284, -1247310336
  %287 = sub i32 %286, 1
  %288 = add i32 %287, -1247310336
  %289 = sub i32 %284, 1
  %290 = mul i32 %284, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %285, 10
  %294 = and i1 %292, %293
  %295 = xor i1 %292, %293
  %296 = or i1 %294, %295
  %297 = or i1 %292, %293
  br i1 %296, label %298, label %1710

; <label>:298:                                    ; preds = %275
  br label %299

; <label>:299:                                    ; preds = %298
  %300 = load i32, i32* @x.1
  %301 = load i32, i32* @y.2
  %302 = sub i32 %300, 117820442
  %303 = sub i32 %302, 1
  %304 = add i32 %303, 117820442
  %305 = sub i32 %300, 1
  %306 = mul i32 %300, %304
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %301, 10
  %310 = xor i1 %308, true
  %311 = xor i1 %309, true
  %312 = xor i1 false, true
  %313 = and i1 %310, false
  %314 = and i1 %308, %312
  %315 = and i1 %311, false
  %316 = and i1 %309, %312
  %317 = or i1 %313, %314
  %318 = or i1 %315, %316
  %319 = xor i1 %317, %318
  %320 = or i1 %310, %311
  %321 = xor i1 %320, true
  %322 = or i1 false, %312
  %323 = and i1 %321, %322
  %324 = or i1 %319, %323
  %325 = or i1 %308, %309
  br i1 %324, label %326, label %1719

; <label>:326:                                    ; preds = %299, %1719
  %327 = load i32, i32* %20, align 4
  %328 = sub i32 %327, -1722925430
  %329 = add i32 %328, 1
  %330 = add i32 %329, -1722925430
  %331 = add nsw i32 %327, 1
  store i32 %330, i32* %20, align 4
  %332 = load i32, i32* @x.1
  %333 = load i32, i32* @y.2
  %334 = add i32 %332, 583104110
  %335 = sub i32 %334, 1
  %336 = sub i32 %335, 583104110
  %337 = sub i32 %332, 1
  %338 = mul i32 %332, %336
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %333, 10
  %342 = and i1 %340, %341
  %343 = xor i1 %340, %341
  %344 = or i1 %342, %343
  %345 = or i1 %340, %341
  br i1 %344, label %346, label %1719

; <label>:346:                                    ; preds = %326
  br label %257

; <label>:347:                                    ; preds = %257
  %348 = load i32, i32* %4, align 4
  %349 = icmp sge i32 %348, 5000
  br i1 %349, label %350, label %1018

; <label>:350:                                    ; preds = %347
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EEC2Ev(%"class.std::vector"* %23) #3
  invoke void @_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"* %21, %"struct.std::less"* dereferenceable(1) %22, %"class.std::vector"* dereferenceable(24) %23)
          to label %351 unwind label %528

; <label>:351:                                    ; preds = %350
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EED2Ev(%"class.std::vector"* %23) #3
  %352 = load i32, i32* %2, align 4
  %353 = sext i32 %352 to i64
  %354 = invoke double @_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_(i32 1000000007, i32 2)
          to label %355 unwind label %532

; <label>:355:                                    ; preds = %351
  %356 = load i32, i32* @x.1
  %357 = load i32, i32* @y.2
  %358 = sub i32 %356, 1899703346
  %359 = sub i32 %358, 1
  %360 = add i32 %359, 1899703346
  %361 = sub i32 %356, 1
  %362 = mul i32 %356, %360
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %357, 10
  %366 = and i1 %364, %365
  %367 = xor i1 %364, %365
  %368 = or i1 %366, %367
  %369 = or i1 %364, %365
  br i1 %368, label %370, label %1751

; <label>:370:                                    ; preds = %355, %1751
  %371 = fptosi double %354 to i64
  store i64 %371, i64* %27, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.3"* %28) #3
  %372 = load i32, i32* @x.1
  %373 = load i32, i32* @y.2
  %374 = sub i32 0, 1
  %375 = add i32 %372, %374
  %376 = sub i32 %372, 1
  %377 = mul i32 %372, %375
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %373, 10
  %381 = xor i1 %379, true
  %382 = xor i1 %380, true
  %383 = xor i1 false, true
  %384 = and i1 %381, false
  %385 = and i1 %379, %383
  %386 = and i1 %382, false
  %387 = and i1 %380, %383
  %388 = or i1 %384, %385
  %389 = or i1 %386, %387
  %390 = xor i1 %388, %389
  %391 = or i1 %381, %382
  %392 = xor i1 %391, true
  %393 = or i1 false, %383
  %394 = and i1 %392, %393
  %395 = or i1 %390, %394
  %396 = or i1 %379, %380
  br i1 %395, label %397, label %1751

; <label>:397:                                    ; preds = %370
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.1"* %26, i64 %353, i64* dereferenceable(8) %27, %"class.std::allocator.3"* dereferenceable(1) %28)
          to label %398 unwind label %536

; <label>:398:                                    ; preds = %397
  call void @_ZNSaIxED2Ev(%"class.std::allocator.3"* %28) #3
  store i32 0, i32* %31, align 4
  store i32 0, i32* %32, align 4
  %399 = invoke i64 @_ZSt9make_pairIiiESt4pairINSt17__decay_and_stripIT_E6__typeENS1_IT0_E6__typeEEOS2_OS5_(i32* dereferenceable(4) %31, i32* dereferenceable(4) %32)
          to label %400 unwind label %540

; <label>:400:                                    ; preds = %398
  %401 = load i32, i32* @x.1
  %402 = load i32, i32* @y.2
  %403 = sub i32 %401, -1243858072
  %404 = sub i32 %403, 1
  %405 = add i32 %404, -1243858072
  %406 = sub i32 %401, 1
  %407 = mul i32 %401, %405
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %402, 10
  %411 = xor i1 %409, true
  %412 = xor i1 %410, true
  %413 = xor i1 false, true
  %414 = and i1 %411, false
  %415 = and i1 %409, %413
  %416 = and i1 %412, false
  %417 = and i1 %410, %413
  %418 = or i1 %414, %415
  %419 = or i1 %416, %417
  %420 = xor i1 %418, %419
  %421 = or i1 %411, %412
  %422 = xor i1 %421, true
  %423 = or i1 false, %413
  %424 = and i1 %422, %423
  %425 = or i1 %420, %424
  %426 = or i1 %409, %410
  br i1 %425, label %427, label %1753

; <label>:427:                                    ; preds = %400, %1753
  %428 = bitcast %"struct.std::pair"* %30 to i64*
  store i64 %399, i64* %428, align 4
  %429 = load i32, i32* @x.1
  %430 = load i32, i32* @y.2
  %431 = add i32 %429, -1543078733
  %432 = sub i32 %431, 1
  %433 = sub i32 %432, -1543078733
  %434 = sub i32 %429, 1
  %435 = mul i32 %429, %433
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %430, 10
  %439 = and i1 %437, %438
  %440 = xor i1 %437, %438
  %441 = or i1 %439, %440
  %442 = or i1 %437, %438
  br i1 %441, label %443, label %1753

; <label>:443:                                    ; preds = %427
  invoke void @_ZNSt4pairIxiEC2IiivEEOS_IT_T0_E(%"struct.std::pair.0"* %29, %"struct.std::pair"* dereferenceable(8) %30)
          to label %444 unwind label %540

; <label>:444:                                    ; preds = %443
  invoke void @_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_(%"class.std::priority_queue"* %21, %"struct.std::pair.0"* dereferenceable(16) %29)
          to label %445 unwind label %540

; <label>:445:                                    ; preds = %444
  %446 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %26, i64 0) #3
  store i64 0, i64* %446, align 8
  br label %447

; <label>:447:                                    ; preds = %773, %527, %445
  %448 = invoke zeroext i1 @_ZNKSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE5emptyEv(%"class.std::priority_queue"* %21)
          to label %449 unwind label %540

; <label>:449:                                    ; preds = %447
  %450 = xor i1 %448, true
  %451 = and i1 true, %450
  %452 = xor i1 true, true
  %453 = and i1 %448, %452
  %454 = or i1 %451, %453
  %455 = xor i1 %448, true
  br i1 %454, label %456, label %774

; <label>:456:                                    ; preds = %449
  %457 = invoke dereferenceable(16) %"struct.std::pair.0"* @_ZNKSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE3topEv(%"class.std::priority_queue"* %21)
          to label %458 unwind label %540

; <label>:458:                                    ; preds = %456
  %459 = load i32, i32* @x.1
  %460 = load i32, i32* @y.2
  %461 = sub i32 0, 1
  %462 = add i32 %459, %461
  %463 = sub i32 %459, 1
  %464 = mul i32 %459, %462
  %465 = urem i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %460, 10
  %468 = xor i1 %466, true
  %469 = xor i1 %467, true
  %470 = xor i1 false, true
  %471 = and i1 %468, false
  %472 = and i1 %466, %470
  %473 = and i1 %469, false
  %474 = and i1 %467, %470
  %475 = or i1 %471, %472
  %476 = or i1 %473, %474
  %477 = xor i1 %475, %476
  %478 = or i1 %468, %469
  %479 = xor i1 %478, true
  %480 = or i1 false, %470
  %481 = and i1 %479, %480
  %482 = or i1 %477, %481
  %483 = or i1 %466, %467
  br i1 %482, label %484, label %1755

; <label>:484:                                    ; preds = %458, %1755
  %485 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %457, i32 0, i32 0
  %486 = load i64, i64* %485, align 8
  %487 = sub i64 0, %486
  %488 = add i64 0, %487
  %489 = sub nsw i64 0, %486
  store i64 %488, i64* %33, align 8
  %490 = load i32, i32* @x.1
  %491 = load i32, i32* @y.2
  %492 = sub i32 0, 1
  %493 = add i32 %490, %492
  %494 = sub i32 %490, 1
  %495 = mul i32 %490, %493
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %491, 10
  %499 = xor i1 %497, true
  %500 = xor i1 %498, true
  %501 = xor i1 false, true
  %502 = and i1 %499, false
  %503 = and i1 %497, %501
  %504 = and i1 %500, false
  %505 = and i1 %498, %501
  %506 = or i1 %502, %503
  %507 = or i1 %504, %505
  %508 = xor i1 %506, %507
  %509 = or i1 %499, %500
  %510 = xor i1 %509, true
  %511 = or i1 false, %501
  %512 = and i1 %510, %511
  %513 = or i1 %508, %512
  %514 = or i1 %497, %498
  br i1 %513, label %515, label %1755

; <label>:515:                                    ; preds = %484
  %516 = invoke dereferenceable(16) %"struct.std::pair.0"* @_ZNKSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE3topEv(%"class.std::priority_queue"* %21)
          to label %517 unwind label %540

; <label>:517:                                    ; preds = %515
  %518 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %516, i32 0, i32 1
  %519 = load i32, i32* %518, align 8
  store i32 %519, i32* %34, align 4
  invoke void @_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE3popEv(%"class.std::priority_queue"* %21)
          to label %520 unwind label %540

; <label>:520:                                    ; preds = %517
  %521 = load i64, i64* %33, align 8
  %522 = load i32, i32* %34, align 4
  %523 = sext i32 %522 to i64
  %524 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %26, i64 %523) #3
  %525 = load i64, i64* %524, align 8
  %526 = icmp sgt i64 %521, %525
  br i1 %526, label %527, label %544

; <label>:527:                                    ; preds = %520
  br label %447

; <label>:528:                                    ; preds = %350
  %529 = landingpad { i8*, i32 }
          cleanup
  %530 = extractvalue { i8*, i32 } %529, 0
  store i8* %530, i8** %24, align 8
  %531 = extractvalue { i8*, i32 } %529, 1
  store i32 %531, i32* %25, align 4
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EED2Ev(%"class.std::vector"* %23) #3
  br label %1698

; <label>:532:                                    ; preds = %351
  %533 = landingpad { i8*, i32 }
          cleanup
  %534 = extractvalue { i8*, i32 } %533, 0
  store i8* %534, i8** %24, align 8
  %535 = extractvalue { i8*, i32 } %533, 1
  store i32 %535, i32* %25, align 4
  br label %1017

; <label>:536:                                    ; preds = %397
  %537 = landingpad { i8*, i32 }
          cleanup
  %538 = extractvalue { i8*, i32 } %537, 0
  store i8* %538, i8** %24, align 8
  %539 = extractvalue { i8*, i32 } %537, 1
  store i32 %539, i32* %25, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.3"* %28) #3
  br label %1017

; <label>:540:                                    ; preds = %910, %862, %688, %677, %651, %643, %517, %515, %456, %447, %444, %443, %398
  %541 = landingpad { i8*, i32 }
          cleanup
  %542 = extractvalue { i8*, i32 } %541, 0
  store i8* %542, i8** %24, align 8
  %543 = extractvalue { i8*, i32 } %541, 1
  store i32 %543, i32* %25, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.1"* %26) #3
  br label %1017

; <label>:544:                                    ; preds = %520
  %545 = load i32, i32* @x.1
  %546 = load i32, i32* @y.2
  %547 = sub i32 0, 1
  %548 = add i32 %545, %547
  %549 = sub i32 %545, 1
  %550 = mul i32 %545, %548
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %546, 10
  %554 = xor i1 %552, true
  %555 = xor i1 %553, true
  %556 = xor i1 true, true
  %557 = and i1 %554, true
  %558 = and i1 %552, %556
  %559 = and i1 %555, true
  %560 = and i1 %553, %556
  %561 = or i1 %557, %558
  %562 = or i1 %559, %560
  %563 = xor i1 %561, %562
  %564 = or i1 %554, %555
  %565 = xor i1 %564, true
  %566 = or i1 true, %556
  %567 = and i1 %565, %566
  %568 = or i1 %563, %567
  %569 = or i1 %552, %553
  br i1 %568, label %570, label %1766

; <label>:570:                                    ; preds = %544, %1766
  store i32 0, i32* %35, align 4
  %571 = load i32, i32* @x.1
  %572 = load i32, i32* @y.2
  %573 = sub i32 0, 1
  %574 = add i32 %571, %573
  %575 = sub i32 %571, 1
  %576 = mul i32 %571, %574
  %577 = urem i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = icmp slt i32 %572, 10
  %580 = xor i1 %578, true
  %581 = xor i1 %579, true
  %582 = xor i1 false, true
  %583 = and i1 %580, false
  %584 = and i1 %578, %582
  %585 = and i1 %581, false
  %586 = and i1 %579, %582
  %587 = or i1 %583, %584
  %588 = or i1 %585, %586
  %589 = xor i1 %587, %588
  %590 = or i1 %580, %581
  %591 = xor i1 %590, true
  %592 = or i1 false, %582
  %593 = and i1 %591, %592
  %594 = or i1 %589, %593
  %595 = or i1 %578, %579
  br i1 %594, label %596, label %1766

; <label>:596:                                    ; preds = %570
  br label %597

; <label>:597:                                    ; preds = %726, %596
  %598 = load i32, i32* @x.1
  %599 = load i32, i32* @y.2
  %600 = add i32 %598, -1166363806
  %601 = sub i32 %600, 1
  %602 = sub i32 %601, -1166363806
  %603 = sub i32 %598, 1
  %604 = mul i32 %598, %602
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %599, 10
  %608 = xor i1 %606, true
  %609 = xor i1 %607, true
  %610 = xor i1 false, true
  %611 = and i1 %608, false
  %612 = and i1 %606, %610
  %613 = and i1 %609, false
  %614 = and i1 %607, %610
  %615 = or i1 %611, %612
  %616 = or i1 %613, %614
  %617 = xor i1 %615, %616
  %618 = or i1 %608, %609
  %619 = xor i1 %618, true
  %620 = or i1 false, %610
  %621 = and i1 %619, %620
  %622 = or i1 %617, %621
  %623 = or i1 %606, %607
  br i1 %622, label %624, label %1767

; <label>:624:                                    ; preds = %597, %1767
  %625 = load i32, i32* %35, align 4
  %626 = load i32, i32* %2, align 4
  %627 = icmp slt i32 %625, %626
  %628 = load i32, i32* @x.1
  %629 = load i32, i32* @y.2
  %630 = sub i32 %628, -1367881377
  %631 = sub i32 %630, 1
  %632 = add i32 %631, -1367881377
  %633 = sub i32 %628, 1
  %634 = mul i32 %628, %632
  %635 = urem i32 %634, 2
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %629, 10
  %638 = and i1 %636, %637
  %639 = xor i1 %636, %637
  %640 = or i1 %638, %639
  %641 = or i1 %636, %637
  br i1 %640, label %642, label %1767

; <label>:642:                                    ; preds = %624
  br i1 %627, label %643, label %732

; <label>:643:                                    ; preds = %642
  %644 = load i32, i32* %34, align 4
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds [50 x [50 x %"struct.std::pair"]], [50 x [50 x %"struct.std::pair"]]* %5, i64 0, i64 %645
  %647 = load i32, i32* %35, align 4
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %646, i64 0, i64 %648
  store i32 1000000007, i32* %37, align 4
  store i32 1000000007, i32* %38, align 4
  %650 = invoke i64 @_ZSt9make_pairIiiESt4pairINSt17__decay_and_stripIT_E6__typeENS1_IT0_E6__typeEEOS2_OS5_(i32* dereferenceable(4) %37, i32* dereferenceable(4) %38)
          to label %651 unwind label %540

; <label>:651:                                    ; preds = %643
  %652 = bitcast %"struct.std::pair"* %36 to i64*
  store i64 %650, i64* %652, align 4
  %653 = invoke zeroext i1 @_ZSteqIiiEbRKSt4pairIT_T0_ES5_(%"struct.std::pair"* dereferenceable(8) %649, %"struct.std::pair"* dereferenceable(8) %36)
          to label %654 unwind label %540

; <label>:654:                                    ; preds = %651
  br i1 %653, label %655, label %656

; <label>:655:                                    ; preds = %654
  br label %726

; <label>:656:                                    ; preds = %654
  %657 = load i64, i64* %33, align 8
  %658 = load i32, i32* %34, align 4
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds [50 x [50 x %"struct.std::pair"]], [50 x [50 x %"struct.std::pair"]]* %5, i64 0, i64 %659
  %661 = load i32, i32* %35, align 4
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %660, i64 0, i64 %662
  %664 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %663, i32 0, i32 1
  %665 = load i32, i32* %664, align 4
  %666 = sext i32 %665 to i64
  %667 = add i64 %657, 5003745344244590449
  %668 = add i64 %667, %666
  %669 = sub i64 %668, 5003745344244590449
  %670 = add nsw i64 %657, %666
  store i64 %669, i64* %39, align 8
  %671 = load i32, i32* %35, align 4
  %672 = sext i32 %671 to i64
  %673 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %26, i64 %672) #3
  %674 = load i64, i64* %673, align 8
  %675 = load i64, i64* %39, align 8
  %676 = icmp sgt i64 %674, %675
  br i1 %676, label %677, label %695

; <label>:677:                                    ; preds = %656
  %678 = load i64, i64* %39, align 8
  %679 = load i32, i32* %35, align 4
  %680 = sext i32 %679 to i64
  %681 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %26, i64 %680) #3
  store i64 %678, i64* %681, align 8
  %682 = load i64, i64* %39, align 8
  %683 = sub i64 0, 508627352252675330
  %684 = sub i64 %683, %682
  %685 = add i64 %684, 508627352252675330
  %686 = sub nsw i64 0, %682
  store i64 %685, i64* %41, align 8
  %687 = invoke { i64, i32 } @_ZSt9make_pairIxRiESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i64* dereferenceable(8) %41, i32* dereferenceable(4) %35)
          to label %688 unwind label %540

; <label>:688:                                    ; preds = %677
  %689 = bitcast %"struct.std::pair.0"* %40 to { i64, i32 }*
  %690 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %689, i32 0, i32 0
  %691 = extractvalue { i64, i32 } %687, 0
  store i64 %691, i64* %690, align 8
  %692 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %689, i32 0, i32 1
  %693 = extractvalue { i64, i32 } %687, 1
  store i32 %693, i32* %692, align 8
  invoke void @_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_(%"class.std::priority_queue"* %21, %"struct.std::pair.0"* dereferenceable(16) %40)
          to label %694 unwind label %540

; <label>:694:                                    ; preds = %688
  br label %695

; <label>:695:                                    ; preds = %694, %656
  %696 = load i32, i32* @x.1
  %697 = load i32, i32* @y.2
  %698 = add i32 %696, -841228133
  %699 = sub i32 %698, 1
  %700 = sub i32 %699, -841228133
  %701 = sub i32 %696, 1
  %702 = mul i32 %696, %700
  %703 = urem i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = icmp slt i32 %697, 10
  %706 = and i1 %704, %705
  %707 = xor i1 %704, %705
  %708 = or i1 %706, %707
  %709 = or i1 %704, %705
  br i1 %708, label %710, label %1771

; <label>:710:                                    ; preds = %695, %1771
  %711 = load i32, i32* @x.1
  %712 = load i32, i32* @y.2
  %713 = sub i32 %711, -2029411096
  %714 = sub i32 %713, 1
  %715 = add i32 %714, -2029411096
  %716 = sub i32 %711, 1
  %717 = mul i32 %711, %715
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %712, 10
  %721 = and i1 %719, %720
  %722 = xor i1 %719, %720
  %723 = or i1 %721, %722
  %724 = or i1 %719, %720
  br i1 %723, label %725, label %1771

; <label>:725:                                    ; preds = %710
  br label %726

; <label>:726:                                    ; preds = %725, %655
  %727 = load i32, i32* %35, align 4
  %728 = add i32 %727, 313405267
  %729 = add i32 %728, 1
  %730 = sub i32 %729, 313405267
  %731 = add nsw i32 %727, 1
  store i32 %730, i32* %35, align 4
  br label %597

; <label>:732:                                    ; preds = %642
  %733 = load i32, i32* @x.1
  %734 = load i32, i32* @y.2
  %735 = sub i32 0, 1
  %736 = add i32 %733, %735
  %737 = sub i32 %733, 1
  %738 = mul i32 %733, %736
  %739 = urem i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = icmp slt i32 %734, 10
  %742 = and i1 %740, %741
  %743 = xor i1 %740, %741
  %744 = or i1 %742, %743
  %745 = or i1 %740, %741
  br i1 %744, label %746, label %1772

; <label>:746:                                    ; preds = %732, %1772
  %747 = load i32, i32* @x.1
  %748 = load i32, i32* @y.2
  %749 = add i32 %747, -1614513076
  %750 = sub i32 %749, 1
  %751 = sub i32 %750, -1614513076
  %752 = sub i32 %747, 1
  %753 = mul i32 %747, %751
  %754 = urem i32 %753, 2
  %755 = icmp eq i32 %754, 0
  %756 = icmp slt i32 %748, 10
  %757 = xor i1 %755, true
  %758 = xor i1 %756, true
  %759 = xor i1 false, true
  %760 = and i1 %757, false
  %761 = and i1 %755, %759
  %762 = and i1 %758, false
  %763 = and i1 %756, %759
  %764 = or i1 %760, %761
  %765 = or i1 %762, %763
  %766 = xor i1 %764, %765
  %767 = or i1 %757, %758
  %768 = xor i1 %767, true
  %769 = or i1 false, %759
  %770 = and i1 %768, %769
  %771 = or i1 %766, %770
  %772 = or i1 %755, %756
  br i1 %771, label %773, label %1772

; <label>:773:                                    ; preds = %746
  br label %447

; <label>:774:                                    ; preds = %449
  %775 = load i32, i32* @x.1
  %776 = load i32, i32* @y.2
  %777 = add i32 %775, -1651005478
  %778 = sub i32 %777, 1
  %779 = sub i32 %778, -1651005478
  %780 = sub i32 %775, 1
  %781 = mul i32 %775, %779
  %782 = urem i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = icmp slt i32 %776, 10
  %785 = and i1 %783, %784
  %786 = xor i1 %783, %784
  %787 = or i1 %785, %786
  %788 = or i1 %783, %784
  br i1 %787, label %789, label %1773

; <label>:789:                                    ; preds = %774, %1773
  store i32 1, i32* %42, align 4
  %790 = load i32, i32* @x.1
  %791 = load i32, i32* @y.2
  %792 = sub i32 %790, 94524986
  %793 = sub i32 %792, 1
  %794 = add i32 %793, 94524986
  %795 = sub i32 %790, 1
  %796 = mul i32 %790, %794
  %797 = urem i32 %796, 2
  %798 = icmp eq i32 %797, 0
  %799 = icmp slt i32 %791, 10
  %800 = and i1 %798, %799
  %801 = xor i1 %798, %799
  %802 = or i1 %800, %801
  %803 = or i1 %798, %799
  br i1 %802, label %804, label %1773

; <label>:804:                                    ; preds = %789
  br label %805

; <label>:805:                                    ; preds = %1015, %804
  %806 = load i32, i32* @x.1
  %807 = load i32, i32* @y.2
  %808 = sub i32 0, 1
  %809 = add i32 %806, %808
  %810 = sub i32 %806, 1
  %811 = mul i32 %806, %809
  %812 = urem i32 %811, 2
  %813 = icmp eq i32 %812, 0
  %814 = icmp slt i32 %807, 10
  %815 = xor i1 %813, true
  %816 = xor i1 %814, true
  %817 = xor i1 false, true
  %818 = and i1 %815, false
  %819 = and i1 %813, %817
  %820 = and i1 %816, false
  %821 = and i1 %814, %817
  %822 = or i1 %818, %819
  %823 = or i1 %820, %821
  %824 = xor i1 %822, %823
  %825 = or i1 %815, %816
  %826 = xor i1 %825, true
  %827 = or i1 false, %817
  %828 = and i1 %826, %827
  %829 = or i1 %824, %828
  %830 = or i1 %813, %814
  br i1 %829, label %831, label %1774

; <label>:831:                                    ; preds = %805, %1774
  %832 = load i32, i32* %42, align 4
  %833 = load i32, i32* %2, align 4
  %834 = icmp slt i32 %832, %833
  %835 = load i32, i32* @x.1
  %836 = load i32, i32* @y.2
  %837 = sub i32 %835, -1279961876
  %838 = sub i32 %837, 1
  %839 = add i32 %838, -1279961876
  %840 = sub i32 %835, 1
  %841 = mul i32 %835, %839
  %842 = urem i32 %841, 2
  %843 = icmp eq i32 %842, 0
  %844 = icmp slt i32 %836, 10
  %845 = xor i1 %843, true
  %846 = xor i1 %844, true
  %847 = xor i1 false, true
  %848 = and i1 %845, false
  %849 = and i1 %843, %847
  %850 = and i1 %846, false
  %851 = and i1 %844, %847
  %852 = or i1 %848, %849
  %853 = or i1 %850, %851
  %854 = xor i1 %852, %853
  %855 = or i1 %845, %846
  %856 = xor i1 %855, true
  %857 = or i1 false, %847
  %858 = and i1 %856, %857
  %859 = or i1 %854, %858
  %860 = or i1 %843, %844
  br i1 %859, label %861, label %1774

; <label>:861:                                    ; preds = %831
  br i1 %834, label %862, label %1016

; <label>:862:                                    ; preds = %861
  %863 = load i32, i32* %42, align 4
  %864 = sext i32 %863 to i64
  %865 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %26, i64 %864) #3
  %866 = load i64, i64* %865, align 8
  %867 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %866)
          to label %868 unwind label %540

; <label>:868:                                    ; preds = %862
  %869 = load i32, i32* @x.1
  %870 = load i32, i32* @y.2
  %871 = sub i32 %869, -1762124774
  %872 = sub i32 %871, 1
  %873 = add i32 %872, -1762124774
  %874 = sub i32 %869, 1
  %875 = mul i32 %869, %873
  %876 = urem i32 %875, 2
  %877 = icmp eq i32 %876, 0
  %878 = icmp slt i32 %870, 10
  %879 = xor i1 %877, true
  %880 = xor i1 %878, true
  %881 = xor i1 true, true
  %882 = and i1 %879, true
  %883 = and i1 %877, %881
  %884 = and i1 %880, true
  %885 = and i1 %878, %881
  %886 = or i1 %882, %883
  %887 = or i1 %884, %885
  %888 = xor i1 %886, %887
  %889 = or i1 %879, %880
  %890 = xor i1 %889, true
  %891 = or i1 true, %881
  %892 = and i1 %890, %891
  %893 = or i1 %888, %892
  %894 = or i1 %877, %878
  br i1 %893, label %895, label %1778

; <label>:895:                                    ; preds = %868, %1778
  %896 = load i32, i32* @x.1
  %897 = load i32, i32* @y.2
  %898 = sub i32 %896, 1213808458
  %899 = sub i32 %898, 1
  %900 = add i32 %899, 1213808458
  %901 = sub i32 %896, 1
  %902 = mul i32 %896, %900
  %903 = urem i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = icmp slt i32 %897, 10
  %906 = and i1 %904, %905
  %907 = xor i1 %904, %905
  %908 = or i1 %906, %907
  %909 = or i1 %904, %905
  br i1 %908, label %910, label %1778

; <label>:910:                                    ; preds = %895
  %911 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %867, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %912 unwind label %540

; <label>:912:                                    ; preds = %910
  %913 = load i32, i32* @x.1
  %914 = load i32, i32* @y.2
  %915 = sub i32 %913, -342315028
  %916 = sub i32 %915, 1
  %917 = add i32 %916, -342315028
  %918 = sub i32 %913, 1
  %919 = mul i32 %913, %917
  %920 = urem i32 %919, 2
  %921 = icmp eq i32 %920, 0
  %922 = icmp slt i32 %914, 10
  %923 = xor i1 %921, true
  %924 = xor i1 %922, true
  %925 = xor i1 false, true
  %926 = and i1 %923, false
  %927 = and i1 %921, %925
  %928 = and i1 %924, false
  %929 = and i1 %922, %925
  %930 = or i1 %926, %927
  %931 = or i1 %928, %929
  %932 = xor i1 %930, %931
  %933 = or i1 %923, %924
  %934 = xor i1 %933, true
  %935 = or i1 false, %925
  %936 = and i1 %934, %935
  %937 = or i1 %932, %936
  %938 = or i1 %921, %922
  br i1 %937, label %939, label %1779

; <label>:939:                                    ; preds = %912, %1779
  %940 = load i32, i32* @x.1
  %941 = load i32, i32* @y.2
  %942 = add i32 %940, 956392234
  %943 = sub i32 %942, 1
  %944 = sub i32 %943, 956392234
  %945 = sub i32 %940, 1
  %946 = mul i32 %940, %944
  %947 = urem i32 %946, 2
  %948 = icmp eq i32 %947, 0
  %949 = icmp slt i32 %941, 10
  %950 = xor i1 %948, true
  %951 = xor i1 %949, true
  %952 = xor i1 true, true
  %953 = and i1 %950, true
  %954 = and i1 %948, %952
  %955 = and i1 %951, true
  %956 = and i1 %949, %952
  %957 = or i1 %953, %954
  %958 = or i1 %955, %956
  %959 = xor i1 %957, %958
  %960 = or i1 %950, %951
  %961 = xor i1 %960, true
  %962 = or i1 true, %952
  %963 = and i1 %961, %962
  %964 = or i1 %959, %963
  %965 = or i1 %948, %949
  br i1 %964, label %966, label %1779

; <label>:966:                                    ; preds = %939
  br label %967

; <label>:967:                                    ; preds = %966
  %968 = load i32, i32* @x.1
  %969 = load i32, i32* @y.2
  %970 = add i32 %968, -1510776838
  %971 = sub i32 %970, 1
  %972 = sub i32 %971, -1510776838
  %973 = sub i32 %968, 1
  %974 = mul i32 %968, %972
  %975 = urem i32 %974, 2
  %976 = icmp eq i32 %975, 0
  %977 = icmp slt i32 %969, 10
  %978 = xor i1 %976, true
  %979 = xor i1 %977, true
  %980 = xor i1 false, true
  %981 = and i1 %978, false
  %982 = and i1 %976, %980
  %983 = and i1 %979, false
  %984 = and i1 %977, %980
  %985 = or i1 %981, %982
  %986 = or i1 %983, %984
  %987 = xor i1 %985, %986
  %988 = or i1 %978, %979
  %989 = xor i1 %988, true
  %990 = or i1 false, %980
  %991 = and i1 %989, %990
  %992 = or i1 %987, %991
  %993 = or i1 %976, %977
  br i1 %992, label %994, label %1780

; <label>:994:                                    ; preds = %967, %1780
  %995 = load i32, i32* %42, align 4
  %996 = sub i32 0, %995
  %997 = sub i32 0, 1
  %998 = add i32 %996, %997
  %999 = sub i32 0, %998
  %1000 = add nsw i32 %995, 1
  store i32 %999, i32* %42, align 4
  %1001 = load i32, i32* @x.1
  %1002 = load i32, i32* @y.2
  %1003 = sub i32 %1001, -1328964541
  %1004 = sub i32 %1003, 1
  %1005 = add i32 %1004, -1328964541
  %1006 = sub i32 %1001, 1
  %1007 = mul i32 %1001, %1005
  %1008 = urem i32 %1007, 2
  %1009 = icmp eq i32 %1008, 0
  %1010 = icmp slt i32 %1002, 10
  %1011 = and i1 %1009, %1010
  %1012 = xor i1 %1009, %1010
  %1013 = or i1 %1011, %1012
  %1014 = or i1 %1009, %1010
  br i1 %1013, label %1015, label %1780

; <label>:1015:                                   ; preds = %994
  br label %805

; <label>:1016:                                   ; preds = %861
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.1"* %26) #3
  call void @_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev(%"class.std::priority_queue"* %21) #3
  br label %1696

; <label>:1017:                                   ; preds = %540, %536, %532
  call void @_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev(%"class.std::priority_queue"* %21) #3
  br label %1698

; <label>:1018:                                   ; preds = %347
  call void @_ZNSt6vectorI4elemSaIS0_EEC2Ev(%"class.std::vector.7"* %45) #3
  invoke void @_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EEC2ERKS5_OS3_(%"class.std::priority_queue.6"* %43, %"struct.std::less.12"* dereferenceable(1) %44, %"class.std::vector.7"* dereferenceable(24) %45)
          to label %1019 unwind label %1144

; <label>:1019:                                   ; preds = %1018
  call void @_ZNSt6vectorI4elemSaIS0_EED2Ev(%"class.std::vector.7"* %45) #3
  %1020 = load i32, i32* %2, align 4
  %1021 = sext i32 %1020 to i64
  %1022 = invoke double @_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_(i32 1000000007, i32 2)
          to label %1023 unwind label %1148

; <label>:1023:                                   ; preds = %1019
  %1024 = fptosi double %1022 to i64
  store i64 %1024, i64* %48, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.3"* %49) #3
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.1"* %47, i64 5010, i64* dereferenceable(8) %48, %"class.std::allocator.3"* dereferenceable(1) %49)
          to label %1025 unwind label %1193

; <label>:1025:                                   ; preds = %1023
  call void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.17"* %50) #3
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.15"* %46, i64 %1021, %"class.std::vector.1"* dereferenceable(24) %47, %"class.std::allocator.17"* dereferenceable(1) %50)
          to label %1026 unwind label %1197

; <label>:1026:                                   ; preds = %1025
  %1027 = load i32, i32* @x.1
  %1028 = load i32, i32* @y.2
  %1029 = sub i32 %1027, 1619907869
  %1030 = sub i32 %1029, 1
  %1031 = add i32 %1030, 1619907869
  %1032 = sub i32 %1027, 1
  %1033 = mul i32 %1027, %1031
  %1034 = urem i32 %1033, 2
  %1035 = icmp eq i32 %1034, 0
  %1036 = icmp slt i32 %1028, 10
  %1037 = and i1 %1035, %1036
  %1038 = xor i1 %1035, %1036
  %1039 = or i1 %1037, %1038
  %1040 = or i1 %1035, %1036
  br i1 %1039, label %1041, label %1790

; <label>:1041:                                   ; preds = %1026, %1790
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.17"* %50) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.1"* %47) #3
  call void @_ZNSaIxED2Ev(%"class.std::allocator.3"* %49) #3
  %1042 = getelementptr inbounds %struct.elem, %struct.elem* %51, i32 0, i32 0
  store i64 0, i64* %1042, align 8
  %1043 = getelementptr inbounds %struct.elem, %struct.elem* %51, i32 0, i32 1
  %1044 = load i32, i32* %4, align 4
  %1045 = sext i32 %1044 to i64
  store i64 %1045, i64* %1043, align 8
  %1046 = getelementptr inbounds %struct.elem, %struct.elem* %51, i32 0, i32 2
  store i32 0, i32* %1046, align 8
  %1047 = load i32, i32* @x.1
  %1048 = load i32, i32* @y.2
  %1049 = sub i32 %1047, -1530334083
  %1050 = sub i32 %1049, 1
  %1051 = add i32 %1050, -1530334083
  %1052 = sub i32 %1047, 1
  %1053 = mul i32 %1047, %1051
  %1054 = urem i32 %1053, 2
  %1055 = icmp eq i32 %1054, 0
  %1056 = icmp slt i32 %1048, 10
  %1057 = and i1 %1055, %1056
  %1058 = xor i1 %1055, %1056
  %1059 = or i1 %1057, %1058
  %1060 = or i1 %1055, %1056
  br i1 %1059, label %1061, label %1790

; <label>:1061:                                   ; preds = %1041
  invoke void @_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE4pushEOS0_(%"class.std::priority_queue.6"* %43, %struct.elem* dereferenceable(24) %51)
          to label %1062 unwind label %1202

; <label>:1062:                                   ; preds = %1061
  %1063 = call dereferenceable(24) %"class.std::vector.1"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.15"* %46, i64 0) #3
  %1064 = load i32, i32* %4, align 4
  %1065 = sext i32 %1064 to i64
  %1066 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %1063, i64 %1065) #3
  store i64 0, i64* %1066, align 8
  br label %1067

; <label>:1067:                                   ; preds = %1479, %1143, %1062
  %1068 = invoke zeroext i1 @_ZNKSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE5emptyEv(%"class.std::priority_queue.6"* %43)
          to label %1069 unwind label %1202

; <label>:1069:                                   ; preds = %1067
  %1070 = xor i1 %1068, true
  %1071 = and i1 true, %1070
  %1072 = xor i1 true, true
  %1073 = and i1 %1068, %1072
  %1074 = xor i1 true, true
  %1075 = and i1 %1074, true
  %1076 = and i1 true, %1072
  %1077 = or i1 %1071, %1073
  %1078 = or i1 %1075, %1076
  %1079 = xor i1 %1077, %1078
  %1080 = xor i1 %1068, true
  br i1 %1079, label %1081, label %1480

; <label>:1081:                                   ; preds = %1069
  %1082 = load i32, i32* @x.1
  %1083 = load i32, i32* @y.2
  %1084 = sub i32 %1082, 60436120
  %1085 = sub i32 %1084, 1
  %1086 = add i32 %1085, 60436120
  %1087 = sub i32 %1082, 1
  %1088 = mul i32 %1082, %1086
  %1089 = urem i32 %1088, 2
  %1090 = icmp eq i32 %1089, 0
  %1091 = icmp slt i32 %1083, 10
  %1092 = xor i1 %1090, true
  %1093 = xor i1 %1091, true
  %1094 = xor i1 true, true
  %1095 = and i1 %1092, true
  %1096 = and i1 %1090, %1094
  %1097 = and i1 %1093, true
  %1098 = and i1 %1091, %1094
  %1099 = or i1 %1095, %1096
  %1100 = or i1 %1097, %1098
  %1101 = xor i1 %1099, %1100
  %1102 = or i1 %1092, %1093
  %1103 = xor i1 %1102, true
  %1104 = or i1 true, %1094
  %1105 = and i1 %1103, %1104
  %1106 = or i1 %1101, %1105
  %1107 = or i1 %1090, %1091
  br i1 %1106, label %1108, label %1796

; <label>:1108:                                   ; preds = %1081, %1796
  %1109 = load i32, i32* @x.1
  %1110 = load i32, i32* @y.2
  %1111 = add i32 %1109, -1648190851
  %1112 = sub i32 %1111, 1
  %1113 = sub i32 %1112, -1648190851
  %1114 = sub i32 %1109, 1
  %1115 = mul i32 %1109, %1113
  %1116 = urem i32 %1115, 2
  %1117 = icmp eq i32 %1116, 0
  %1118 = icmp slt i32 %1110, 10
  %1119 = and i1 %1117, %1118
  %1120 = xor i1 %1117, %1118
  %1121 = or i1 %1119, %1120
  %1122 = or i1 %1117, %1118
  br i1 %1121, label %1123, label %1796

; <label>:1123:                                   ; preds = %1108
  %1124 = invoke dereferenceable(24) %struct.elem* @_ZNKSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE3topEv(%"class.std::priority_queue.6"* %43)
          to label %1125 unwind label %1202

; <label>:1125:                                   ; preds = %1123
  %1126 = bitcast %struct.elem* %52 to i8*
  %1127 = bitcast %struct.elem* %1124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1126, i8* %1127, i64 24, i32 8, i1 false)
  invoke void @_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE3popEv(%"class.std::priority_queue.6"* %43)
          to label %1128 unwind label %1202

; <label>:1128:                                   ; preds = %1125
  %1129 = getelementptr inbounds %struct.elem, %struct.elem* %52, i32 0, i32 0
  %1130 = load i64, i64* %1129, align 8
  store i64 %1130, i64* %53, align 8
  %1131 = getelementptr inbounds %struct.elem, %struct.elem* %52, i32 0, i32 1
  %1132 = load i64, i64* %1131, align 8
  store i64 %1132, i64* %54, align 8
  %1133 = getelementptr inbounds %struct.elem, %struct.elem* %52, i32 0, i32 2
  %1134 = load i32, i32* %1133, align 8
  store i32 %1134, i32* %55, align 4
  %1135 = load i64, i64* %53, align 8
  %1136 = load i32, i32* %55, align 4
  %1137 = sext i32 %1136 to i64
  %1138 = call dereferenceable(24) %"class.std::vector.1"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.15"* %46, i64 %1137) #3
  %1139 = load i64, i64* %54, align 8
  %1140 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %1138, i64 %1139) #3
  %1141 = load i64, i64* %1140, align 8
  %1142 = icmp sgt i64 %1135, %1141
  br i1 %1142, label %1143, label %1206

; <label>:1143:                                   ; preds = %1128
  br label %1067

; <label>:1144:                                   ; preds = %1018
  %1145 = landingpad { i8*, i32 }
          cleanup
  %1146 = extractvalue { i8*, i32 } %1145, 0
  store i8* %1146, i8** %24, align 8
  %1147 = extractvalue { i8*, i32 } %1145, 1
  store i32 %1147, i32* %25, align 4
  call void @_ZNSt6vectorI4elemSaIS0_EED2Ev(%"class.std::vector.7"* %45) #3
  br label %1698

; <label>:1148:                                   ; preds = %1019
  %1149 = load i32, i32* @x.1
  %1150 = load i32, i32* @y.2
  %1151 = add i32 %1149, 75987669
  %1152 = sub i32 %1151, 1
  %1153 = sub i32 %1152, 75987669
  %1154 = sub i32 %1149, 1
  %1155 = mul i32 %1149, %1153
  %1156 = urem i32 %1155, 2
  %1157 = icmp eq i32 %1156, 0
  %1158 = icmp slt i32 %1150, 10
  %1159 = xor i1 %1157, true
  %1160 = xor i1 %1158, true
  %1161 = xor i1 true, true
  %1162 = and i1 %1159, true
  %1163 = and i1 %1157, %1161
  %1164 = and i1 %1160, true
  %1165 = and i1 %1158, %1161
  %1166 = or i1 %1162, %1163
  %1167 = or i1 %1164, %1165
  %1168 = xor i1 %1166, %1167
  %1169 = or i1 %1159, %1160
  %1170 = xor i1 %1169, true
  %1171 = or i1 true, %1161
  %1172 = and i1 %1170, %1171
  %1173 = or i1 %1168, %1172
  %1174 = or i1 %1157, %1158
  br i1 %1173, label %1175, label %1797

; <label>:1175:                                   ; preds = %1148, %1797
  %1176 = landingpad { i8*, i32 }
          cleanup
  %1177 = extractvalue { i8*, i32 } %1176, 0
  store i8* %1177, i8** %24, align 8
  %1178 = extractvalue { i8*, i32 } %1176, 1
  store i32 %1178, i32* %25, align 4
  %1179 = load i32, i32* @x.1
  %1180 = load i32, i32* @y.2
  %1181 = sub i32 0, 1
  %1182 = add i32 %1179, %1181
  %1183 = sub i32 %1179, 1
  %1184 = mul i32 %1179, %1182
  %1185 = urem i32 %1184, 2
  %1186 = icmp eq i32 %1185, 0
  %1187 = icmp slt i32 %1180, 10
  %1188 = and i1 %1186, %1187
  %1189 = xor i1 %1186, %1187
  %1190 = or i1 %1188, %1189
  %1191 = or i1 %1186, %1187
  br i1 %1190, label %1192, label %1797

; <label>:1192:                                   ; preds = %1175
  br label %1695

; <label>:1193:                                   ; preds = %1023
  %1194 = landingpad { i8*, i32 }
          cleanup
  %1195 = extractvalue { i8*, i32 } %1194, 0
  store i8* %1195, i8** %24, align 8
  %1196 = extractvalue { i8*, i32 } %1194, 1
  store i32 %1196, i32* %25, align 4
  br label %1201

; <label>:1197:                                   ; preds = %1025
  %1198 = landingpad { i8*, i32 }
          cleanup
  %1199 = extractvalue { i8*, i32 } %1198, 0
  store i8* %1199, i8** %24, align 8
  %1200 = extractvalue { i8*, i32 } %1198, 1
  store i32 %1200, i32* %25, align 4
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.17"* %50) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.1"* %47) #3
  br label %1201

; <label>:1201:                                   ; preds = %1197, %1193
  call void @_ZNSaIxED2Ev(%"class.std::allocator.3"* %49) #3
  br label %1695

; <label>:1202:                                   ; preds = %1685, %1683, %1614, %1554, %1457, %1305, %1297, %1289, %1125, %1123, %1067, %1061
  %1203 = landingpad { i8*, i32 }
          cleanup
  %1204 = extractvalue { i8*, i32 } %1203, 0
  store i8* %1204, i8** %24, align 8
  %1205 = extractvalue { i8*, i32 } %1203, 1
  store i32 %1205, i32* %25, align 4
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.15"* %46) #3
  br label %1695

; <label>:1206:                                   ; preds = %1128
  %1207 = load i64, i64* %54, align 8
  %1208 = load i32, i32* %55, align 4
  %1209 = sext i32 %1208 to i64
  %1210 = getelementptr inbounds [50 x i32], [50 x i32]* %18, i64 0, i64 %1209
  %1211 = load i32, i32* %1210, align 4
  %1212 = sext i32 %1211 to i64
  %1213 = sub i64 0, %1207
  %1214 = sub i64 0, %1212
  %1215 = add i64 %1213, %1214
  %1216 = sub i64 0, %1215
  %1217 = add nsw i64 %1207, %1212
  %1218 = icmp sle i64 %1216, 5000
  br i1 %1218, label %1219, label %1292

; <label>:1219:                                   ; preds = %1206
  %1220 = load i64, i64* %53, align 8
  %1221 = load i32, i32* %55, align 4
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds [50 x i32], [50 x i32]* %19, i64 0, i64 %1222
  %1224 = load i32, i32* %1223, align 4
  %1225 = sext i32 %1224 to i64
  %1226 = sub i64 %1220, -4218687910554109181
  %1227 = add i64 %1226, %1225
  %1228 = add i64 %1227, -4218687910554109181
  %1229 = add nsw i64 %1220, %1225
  store i64 %1228, i64* %56, align 8
  %1230 = load i64, i64* %54, align 8
  %1231 = load i32, i32* %55, align 4
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds [50 x i32], [50 x i32]* %18, i64 0, i64 %1232
  %1234 = load i32, i32* %1233, align 4
  %1235 = sext i32 %1234 to i64
  %1236 = sub i64 0, %1235
  %1237 = sub i64 %1230, %1236
  %1238 = add nsw i64 %1230, %1235
  store i64 %1237, i64* %57, align 8
  %1239 = load i32, i32* %55, align 4
  %1240 = sext i32 %1239 to i64
  %1241 = call dereferenceable(24) %"class.std::vector.1"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.15"* %46, i64 %1240) #3
  %1242 = load i64, i64* %57, align 8
  %1243 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %1241, i64 %1242) #3
  %1244 = load i64, i64* %1243, align 8
  %1245 = load i64, i64* %56, align 8
  %1246 = icmp sgt i64 %1244, %1245
  br i1 %1246, label %1247, label %1291

; <label>:1247:                                   ; preds = %1219
  %1248 = load i32, i32* @x.1
  %1249 = load i32, i32* @y.2
  %1250 = add i32 %1248, -93743374
  %1251 = sub i32 %1250, 1
  %1252 = sub i32 %1251, -93743374
  %1253 = sub i32 %1248, 1
  %1254 = mul i32 %1248, %1252
  %1255 = urem i32 %1254, 2
  %1256 = icmp eq i32 %1255, 0
  %1257 = icmp slt i32 %1249, 10
  %1258 = and i1 %1256, %1257
  %1259 = xor i1 %1256, %1257
  %1260 = or i1 %1258, %1259
  %1261 = or i1 %1256, %1257
  br i1 %1260, label %1262, label %1801

; <label>:1262:                                   ; preds = %1247, %1801
  %1263 = load i64, i64* %56, align 8
  %1264 = load i32, i32* %55, align 4
  %1265 = sext i32 %1264 to i64
  %1266 = call dereferenceable(24) %"class.std::vector.1"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.15"* %46, i64 %1265) #3
  %1267 = load i64, i64* %57, align 8
  %1268 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %1266, i64 %1267) #3
  store i64 %1263, i64* %1268, align 8
  %1269 = getelementptr inbounds %struct.elem, %struct.elem* %58, i32 0, i32 0
  %1270 = load i64, i64* %56, align 8
  store i64 %1270, i64* %1269, align 8
  %1271 = getelementptr inbounds %struct.elem, %struct.elem* %58, i32 0, i32 1
  %1272 = load i64, i64* %57, align 8
  store i64 %1272, i64* %1271, align 8
  %1273 = getelementptr inbounds %struct.elem, %struct.elem* %58, i32 0, i32 2
  %1274 = load i32, i32* %55, align 4
  store i32 %1274, i32* %1273, align 8
  %1275 = load i32, i32* @x.1
  %1276 = load i32, i32* @y.2
  %1277 = sub i32 %1275, -1182137625
  %1278 = sub i32 %1277, 1
  %1279 = add i32 %1278, -1182137625
  %1280 = sub i32 %1275, 1
  %1281 = mul i32 %1275, %1279
  %1282 = urem i32 %1281, 2
  %1283 = icmp eq i32 %1282, 0
  %1284 = icmp slt i32 %1276, 10
  %1285 = and i1 %1283, %1284
  %1286 = xor i1 %1283, %1284
  %1287 = or i1 %1285, %1286
  %1288 = or i1 %1283, %1284
  br i1 %1287, label %1289, label %1801

; <label>:1289:                                   ; preds = %1262
  invoke void @_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE4pushEOS0_(%"class.std::priority_queue.6"* %43, %struct.elem* dereferenceable(24) %58)
          to label %1290 unwind label %1202

; <label>:1290:                                   ; preds = %1289
  br label %1291

; <label>:1291:                                   ; preds = %1290, %1219
  br label %1292

; <label>:1292:                                   ; preds = %1291, %1206
  store i32 0, i32* %59, align 4
  br label %1293

; <label>:1293:                                   ; preds = %1472, %1292
  %1294 = load i32, i32* %59, align 4
  %1295 = load i32, i32* %2, align 4
  %1296 = icmp slt i32 %1294, %1295
  br i1 %1296, label %1297, label %1479

; <label>:1297:                                   ; preds = %1293
  %1298 = load i32, i32* %55, align 4
  %1299 = sext i32 %1298 to i64
  %1300 = getelementptr inbounds [50 x [50 x %"struct.std::pair"]], [50 x [50 x %"struct.std::pair"]]* %5, i64 0, i64 %1299
  %1301 = load i32, i32* %59, align 4
  %1302 = sext i32 %1301 to i64
  %1303 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %1300, i64 0, i64 %1302
  store i32 1000000007, i32* %61, align 4
  store i32 1000000007, i32* %62, align 4
  %1304 = invoke i64 @_ZSt9make_pairIiiESt4pairINSt17__decay_and_stripIT_E6__typeENS1_IT0_E6__typeEEOS2_OS5_(i32* dereferenceable(4) %61, i32* dereferenceable(4) %62)
          to label %1305 unwind label %1202

; <label>:1305:                                   ; preds = %1297
  %1306 = bitcast %"struct.std::pair"* %60 to i64*
  store i64 %1304, i64* %1306, align 4
  %1307 = invoke zeroext i1 @_ZSteqIiiEbRKSt4pairIT_T0_ES5_(%"struct.std::pair"* dereferenceable(8) %1303, %"struct.std::pair"* dereferenceable(8) %60)
          to label %1308 unwind label %1202

; <label>:1308:                                   ; preds = %1305
  br i1 %1307, label %1309, label %1363

; <label>:1309:                                   ; preds = %1308
  %1310 = load i32, i32* @x.1
  %1311 = load i32, i32* @y.2
  %1312 = sub i32 %1310, -438544326
  %1313 = sub i32 %1312, 1
  %1314 = add i32 %1313, -438544326
  %1315 = sub i32 %1310, 1
  %1316 = mul i32 %1310, %1314
  %1317 = urem i32 %1316, 2
  %1318 = icmp eq i32 %1317, 0
  %1319 = icmp slt i32 %1311, 10
  %1320 = xor i1 %1318, true
  %1321 = xor i1 %1319, true
  %1322 = xor i1 true, true
  %1323 = and i1 %1320, true
  %1324 = and i1 %1318, %1322
  %1325 = and i1 %1321, true
  %1326 = and i1 %1319, %1322
  %1327 = or i1 %1323, %1324
  %1328 = or i1 %1325, %1326
  %1329 = xor i1 %1327, %1328
  %1330 = or i1 %1320, %1321
  %1331 = xor i1 %1330, true
  %1332 = or i1 true, %1322
  %1333 = and i1 %1331, %1332
  %1334 = or i1 %1329, %1333
  %1335 = or i1 %1318, %1319
  br i1 %1334, label %1336, label %1814

; <label>:1336:                                   ; preds = %1309, %1814
  %1337 = load i32, i32* @x.1
  %1338 = load i32, i32* @y.2
  %1339 = sub i32 0, 1
  %1340 = add i32 %1337, %1339
  %1341 = sub i32 %1337, 1
  %1342 = mul i32 %1337, %1340
  %1343 = urem i32 %1342, 2
  %1344 = icmp eq i32 %1343, 0
  %1345 = icmp slt i32 %1338, 10
  %1346 = xor i1 %1344, true
  %1347 = xor i1 %1345, true
  %1348 = xor i1 true, true
  %1349 = and i1 %1346, true
  %1350 = and i1 %1344, %1348
  %1351 = and i1 %1347, true
  %1352 = and i1 %1345, %1348
  %1353 = or i1 %1349, %1350
  %1354 = or i1 %1351, %1352
  %1355 = xor i1 %1353, %1354
  %1356 = or i1 %1346, %1347
  %1357 = xor i1 %1356, true
  %1358 = or i1 true, %1348
  %1359 = and i1 %1357, %1358
  %1360 = or i1 %1355, %1359
  %1361 = or i1 %1344, %1345
  br i1 %1360, label %1362, label %1814

; <label>:1362:                                   ; preds = %1336
  br label %1472

; <label>:1363:                                   ; preds = %1308
  %1364 = load i64, i64* %53, align 8
  %1365 = load i32, i32* %55, align 4
  %1366 = sext i32 %1365 to i64
  %1367 = getelementptr inbounds [50 x [50 x %"struct.std::pair"]], [50 x [50 x %"struct.std::pair"]]* %5, i64 0, i64 %1366
  %1368 = load i32, i32* %59, align 4
  %1369 = sext i32 %1368 to i64
  %1370 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %1367, i64 0, i64 %1369
  %1371 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1370, i32 0, i32 1
  %1372 = load i32, i32* %1371, align 4
  %1373 = sext i32 %1372 to i64
  %1374 = add i64 %1364, -456902012223192572
  %1375 = add i64 %1374, %1373
  %1376 = sub i64 %1375, -456902012223192572
  %1377 = add nsw i64 %1364, %1373
  store i64 %1376, i64* %63, align 8
  %1378 = load i64, i64* %54, align 8
  %1379 = load i32, i32* %55, align 4
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds [50 x [50 x %"struct.std::pair"]], [50 x [50 x %"struct.std::pair"]]* %5, i64 0, i64 %1380
  %1382 = load i32, i32* %59, align 4
  %1383 = sext i32 %1382 to i64
  %1384 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %1381, i64 0, i64 %1383
  %1385 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1384, i32 0, i32 0
  %1386 = load i32, i32* %1385, align 8
  %1387 = sext i32 %1386 to i64
  %1388 = add i64 %1378, -7583114711029386885
  %1389 = sub i64 %1388, %1387
  %1390 = sub i64 %1389, -7583114711029386885
  %1391 = sub nsw i64 %1378, %1387
  store i64 %1390, i64* %64, align 8
  %1392 = load i64, i64* %64, align 8
  %1393 = icmp sge i64 %1392, 0
  br i1 %1393, label %1394, label %1471

; <label>:1394:                                   ; preds = %1363
  %1395 = load i32, i32* @x.1
  %1396 = load i32, i32* @y.2
  %1397 = sub i32 %1395, -970927345
  %1398 = sub i32 %1397, 1
  %1399 = add i32 %1398, -970927345
  %1400 = sub i32 %1395, 1
  %1401 = mul i32 %1395, %1399
  %1402 = urem i32 %1401, 2
  %1403 = icmp eq i32 %1402, 0
  %1404 = icmp slt i32 %1396, 10
  %1405 = xor i1 %1403, true
  %1406 = xor i1 %1404, true
  %1407 = xor i1 true, true
  %1408 = and i1 %1405, true
  %1409 = and i1 %1403, %1407
  %1410 = and i1 %1406, true
  %1411 = and i1 %1404, %1407
  %1412 = or i1 %1408, %1409
  %1413 = or i1 %1410, %1411
  %1414 = xor i1 %1412, %1413
  %1415 = or i1 %1405, %1406
  %1416 = xor i1 %1415, true
  %1417 = or i1 true, %1407
  %1418 = and i1 %1416, %1417
  %1419 = or i1 %1414, %1418
  %1420 = or i1 %1403, %1404
  br i1 %1419, label %1421, label %1815

; <label>:1421:                                   ; preds = %1394, %1815
  %1422 = load i32, i32* %59, align 4
  %1423 = sext i32 %1422 to i64
  %1424 = call dereferenceable(24) %"class.std::vector.1"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.15"* %46, i64 %1423) #3
  %1425 = load i64, i64* %64, align 8
  %1426 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %1424, i64 %1425) #3
  %1427 = load i64, i64* %1426, align 8
  %1428 = load i64, i64* %63, align 8
  %1429 = icmp sgt i64 %1427, %1428
  %1430 = load i32, i32* @x.1
  %1431 = load i32, i32* @y.2
  %1432 = add i32 %1430, 215112655
  %1433 = sub i32 %1432, 1
  %1434 = sub i32 %1433, 215112655
  %1435 = sub i32 %1430, 1
  %1436 = mul i32 %1430, %1434
  %1437 = urem i32 %1436, 2
  %1438 = icmp eq i32 %1437, 0
  %1439 = icmp slt i32 %1431, 10
  %1440 = xor i1 %1438, true
  %1441 = xor i1 %1439, true
  %1442 = xor i1 true, true
  %1443 = and i1 %1440, true
  %1444 = and i1 %1438, %1442
  %1445 = and i1 %1441, true
  %1446 = and i1 %1439, %1442
  %1447 = or i1 %1443, %1444
  %1448 = or i1 %1445, %1446
  %1449 = xor i1 %1447, %1448
  %1450 = or i1 %1440, %1441
  %1451 = xor i1 %1450, true
  %1452 = or i1 true, %1442
  %1453 = and i1 %1451, %1452
  %1454 = or i1 %1449, %1453
  %1455 = or i1 %1438, %1439
  br i1 %1454, label %1456, label %1815

; <label>:1456:                                   ; preds = %1421
  br i1 %1429, label %1457, label %1471

; <label>:1457:                                   ; preds = %1456
  %1458 = load i64, i64* %63, align 8
  %1459 = load i32, i32* %59, align 4
  %1460 = sext i32 %1459 to i64
  %1461 = call dereferenceable(24) %"class.std::vector.1"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.15"* %46, i64 %1460) #3
  %1462 = load i64, i64* %64, align 8
  %1463 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %1461, i64 %1462) #3
  store i64 %1458, i64* %1463, align 8
  %1464 = getelementptr inbounds %struct.elem, %struct.elem* %65, i32 0, i32 0
  %1465 = load i64, i64* %63, align 8
  store i64 %1465, i64* %1464, align 8
  %1466 = getelementptr inbounds %struct.elem, %struct.elem* %65, i32 0, i32 1
  %1467 = load i64, i64* %64, align 8
  store i64 %1467, i64* %1466, align 8
  %1468 = getelementptr inbounds %struct.elem, %struct.elem* %65, i32 0, i32 2
  %1469 = load i32, i32* %59, align 4
  store i32 %1469, i32* %1468, align 8
  invoke void @_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE4pushEOS0_(%"class.std::priority_queue.6"* %43, %struct.elem* dereferenceable(24) %65)
          to label %1470 unwind label %1202

; <label>:1470:                                   ; preds = %1457
  br label %1471

; <label>:1471:                                   ; preds = %1470, %1456, %1363
  br label %1472

; <label>:1472:                                   ; preds = %1471, %1362
  %1473 = load i32, i32* %59, align 4
  %1474 = sub i32 0, %1473
  %1475 = sub i32 0, 1
  %1476 = add i32 %1474, %1475
  %1477 = sub i32 0, %1476
  %1478 = add nsw i32 %1473, 1
  store i32 %1477, i32* %59, align 4
  br label %1293

; <label>:1479:                                   ; preds = %1293
  br label %1067

; <label>:1480:                                   ; preds = %1069
  store i32 1, i32* %66, align 4
  br label %1481

; <label>:1481:                                   ; preds = %1688, %1480
  %1482 = load i32, i32* @x.1
  %1483 = load i32, i32* @y.2
  %1484 = sub i32 0, 1
  %1485 = add i32 %1482, %1484
  %1486 = sub i32 %1482, 1
  %1487 = mul i32 %1482, %1485
  %1488 = urem i32 %1487, 2
  %1489 = icmp eq i32 %1488, 0
  %1490 = icmp slt i32 %1483, 10
  %1491 = and i1 %1489, %1490
  %1492 = xor i1 %1489, %1490
  %1493 = or i1 %1491, %1492
  %1494 = or i1 %1489, %1490
  br i1 %1493, label %1495, label %1824

; <label>:1495:                                   ; preds = %1481, %1824
  %1496 = load i32, i32* %66, align 4
  %1497 = load i32, i32* %2, align 4
  %1498 = icmp slt i32 %1496, %1497
  %1499 = load i32, i32* @x.1
  %1500 = load i32, i32* @y.2
  %1501 = sub i32 0, 1
  %1502 = add i32 %1499, %1501
  %1503 = sub i32 %1499, 1
  %1504 = mul i32 %1499, %1502
  %1505 = urem i32 %1504, 2
  %1506 = icmp eq i32 %1505, 0
  %1507 = icmp slt i32 %1500, 10
  %1508 = xor i1 %1506, true
  %1509 = xor i1 %1507, true
  %1510 = xor i1 true, true
  %1511 = and i1 %1508, true
  %1512 = and i1 %1506, %1510
  %1513 = and i1 %1509, true
  %1514 = and i1 %1507, %1510
  %1515 = or i1 %1511, %1512
  %1516 = or i1 %1513, %1514
  %1517 = xor i1 %1515, %1516
  %1518 = or i1 %1508, %1509
  %1519 = xor i1 %1518, true
  %1520 = or i1 true, %1510
  %1521 = and i1 %1519, %1520
  %1522 = or i1 %1517, %1521
  %1523 = or i1 %1506, %1507
  br i1 %1522, label %1524, label %1824

; <label>:1524:                                   ; preds = %1495
  br i1 %1498, label %1525, label %1694

; <label>:1525:                                   ; preds = %1524
  %1526 = load i32, i32* @x.1
  %1527 = load i32, i32* @y.2
  %1528 = add i32 %1526, 1706258075
  %1529 = sub i32 %1528, 1
  %1530 = sub i32 %1529, 1706258075
  %1531 = sub i32 %1526, 1
  %1532 = mul i32 %1526, %1530
  %1533 = urem i32 %1532, 2
  %1534 = icmp eq i32 %1533, 0
  %1535 = icmp slt i32 %1527, 10
  %1536 = and i1 %1534, %1535
  %1537 = xor i1 %1534, %1535
  %1538 = or i1 %1536, %1537
  %1539 = or i1 %1534, %1535
  br i1 %1538, label %1540, label %1828

; <label>:1540:                                   ; preds = %1525, %1828
  %1541 = load i32, i32* @x.1
  %1542 = load i32, i32* @y.2
  %1543 = sub i32 0, 1
  %1544 = add i32 %1541, %1543
  %1545 = sub i32 %1541, 1
  %1546 = mul i32 %1541, %1544
  %1547 = urem i32 %1546, 2
  %1548 = icmp eq i32 %1547, 0
  %1549 = icmp slt i32 %1542, 10
  %1550 = and i1 %1548, %1549
  %1551 = xor i1 %1548, %1549
  %1552 = or i1 %1550, %1551
  %1553 = or i1 %1548, %1549
  br i1 %1552, label %1554, label %1828

; <label>:1554:                                   ; preds = %1540
  %1555 = invoke double @_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_(i32 1000000007, i32 2)
          to label %1556 unwind label %1202

; <label>:1556:                                   ; preds = %1554
  %1557 = fptosi double %1555 to i64
  store i64 %1557, i64* %67, align 8
  store i32 0, i32* %68, align 4
  br label %1558

; <label>:1558:                                   ; preds = %1624, %1556
  %1559 = load i32, i32* @x.1
  %1560 = load i32, i32* @y.2
  %1561 = add i32 %1559, -784089579
  %1562 = sub i32 %1561, 1
  %1563 = sub i32 %1562, -784089579
  %1564 = sub i32 %1559, 1
  %1565 = mul i32 %1559, %1563
  %1566 = urem i32 %1565, 2
  %1567 = icmp eq i32 %1566, 0
  %1568 = icmp slt i32 %1560, 10
  %1569 = xor i1 %1567, true
  %1570 = xor i1 %1568, true
  %1571 = xor i1 true, true
  %1572 = and i1 %1569, true
  %1573 = and i1 %1567, %1571
  %1574 = and i1 %1570, true
  %1575 = and i1 %1568, %1571
  %1576 = or i1 %1572, %1573
  %1577 = or i1 %1574, %1575
  %1578 = xor i1 %1576, %1577
  %1579 = or i1 %1569, %1570
  %1580 = xor i1 %1579, true
  %1581 = or i1 true, %1571
  %1582 = and i1 %1580, %1581
  %1583 = or i1 %1578, %1582
  %1584 = or i1 %1567, %1568
  br i1 %1583, label %1585, label %1829

; <label>:1585:                                   ; preds = %1558, %1829
  %1586 = load i32, i32* %68, align 4
  %1587 = icmp sle i32 %1586, 5000
  %1588 = load i32, i32* @x.1
  %1589 = load i32, i32* @y.2
  %1590 = sub i32 0, 1
  %1591 = add i32 %1588, %1590
  %1592 = sub i32 %1588, 1
  %1593 = mul i32 %1588, %1591
  %1594 = urem i32 %1593, 2
  %1595 = icmp eq i32 %1594, 0
  %1596 = icmp slt i32 %1589, 10
  %1597 = xor i1 %1595, true
  %1598 = xor i1 %1596, true
  %1599 = xor i1 true, true
  %1600 = and i1 %1597, true
  %1601 = and i1 %1595, %1599
  %1602 = and i1 %1598, true
  %1603 = and i1 %1596, %1599
  %1604 = or i1 %1600, %1601
  %1605 = or i1 %1602, %1603
  %1606 = xor i1 %1604, %1605
  %1607 = or i1 %1597, %1598
  %1608 = xor i1 %1607, true
  %1609 = or i1 true, %1599
  %1610 = and i1 %1608, %1609
  %1611 = or i1 %1606, %1610
  %1612 = or i1 %1595, %1596
  br i1 %1611, label %1613, label %1829

; <label>:1613:                                   ; preds = %1585
  br i1 %1587, label %1614, label %1629

; <label>:1614:                                   ; preds = %1613
  %1615 = load i32, i32* %66, align 4
  %1616 = sext i32 %1615 to i64
  %1617 = call dereferenceable(24) %"class.std::vector.1"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.15"* %46, i64 %1616) #3
  %1618 = load i32, i32* %68, align 4
  %1619 = sext i32 %1618 to i64
  %1620 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %1617, i64 %1619) #3
  %1621 = invoke dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %67, i64* dereferenceable(8) %1620)
          to label %1622 unwind label %1202

; <label>:1622:                                   ; preds = %1614
  %1623 = load i64, i64* %1621, align 8
  store i64 %1623, i64* %67, align 8
  br label %1624

; <label>:1624:                                   ; preds = %1622
  %1625 = load i32, i32* %68, align 4
  %1626 = sub i32 0, 1
  %1627 = sub i32 %1625, %1626
  %1628 = add nsw i32 %1625, 1
  store i32 %1627, i32* %68, align 4
  br label %1558

; <label>:1629:                                   ; preds = %1613
  %1630 = load i32, i32* @x.1
  %1631 = load i32, i32* @y.2
  %1632 = sub i32 0, 1
  %1633 = add i32 %1630, %1632
  %1634 = sub i32 %1630, 1
  %1635 = mul i32 %1630, %1633
  %1636 = urem i32 %1635, 2
  %1637 = icmp eq i32 %1636, 0
  %1638 = icmp slt i32 %1631, 10
  %1639 = xor i1 %1637, true
  %1640 = xor i1 %1638, true
  %1641 = xor i1 false, true
  %1642 = and i1 %1639, false
  %1643 = and i1 %1637, %1641
  %1644 = and i1 %1640, false
  %1645 = and i1 %1638, %1641
  %1646 = or i1 %1642, %1643
  %1647 = or i1 %1644, %1645
  %1648 = xor i1 %1646, %1647
  %1649 = or i1 %1639, %1640
  %1650 = xor i1 %1649, true
  %1651 = or i1 false, %1641
  %1652 = and i1 %1650, %1651
  %1653 = or i1 %1648, %1652
  %1654 = or i1 %1637, %1638
  br i1 %1653, label %1655, label %1832

; <label>:1655:                                   ; preds = %1629, %1832
  %1656 = load i64, i64* %67, align 8
  %1657 = load i32, i32* @x.1
  %1658 = load i32, i32* @y.2
  %1659 = add i32 %1657, 345281060
  %1660 = sub i32 %1659, 1
  %1661 = sub i32 %1660, 345281060
  %1662 = sub i32 %1657, 1
  %1663 = mul i32 %1657, %1661
  %1664 = urem i32 %1663, 2
  %1665 = icmp eq i32 %1664, 0
  %1666 = icmp slt i32 %1658, 10
  %1667 = xor i1 %1665, true
  %1668 = xor i1 %1666, true
  %1669 = xor i1 true, true
  %1670 = and i1 %1667, true
  %1671 = and i1 %1665, %1669
  %1672 = and i1 %1668, true
  %1673 = and i1 %1666, %1669
  %1674 = or i1 %1670, %1671
  %1675 = or i1 %1672, %1673
  %1676 = xor i1 %1674, %1675
  %1677 = or i1 %1667, %1668
  %1678 = xor i1 %1677, true
  %1679 = or i1 true, %1669
  %1680 = and i1 %1678, %1679
  %1681 = or i1 %1676, %1680
  %1682 = or i1 %1665, %1666
  br i1 %1681, label %1683, label %1832

; <label>:1683:                                   ; preds = %1655
  %1684 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %1656)
          to label %1685 unwind label %1202

; <label>:1685:                                   ; preds = %1683
  %1686 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1684, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %1687 unwind label %1202

; <label>:1687:                                   ; preds = %1685
  br label %1688

; <label>:1688:                                   ; preds = %1687
  %1689 = load i32, i32* %66, align 4
  %1690 = sub i32 %1689, 442717310
  %1691 = add i32 %1690, 1
  %1692 = add i32 %1691, 442717310
  %1693 = add nsw i32 %1689, 1
  store i32 %1692, i32* %66, align 4
  br label %1481

; <label>:1694:                                   ; preds = %1524
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.15"* %46) #3
  call void @_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EED2Ev(%"class.std::priority_queue.6"* %43) #3
  br label %1696

; <label>:1695:                                   ; preds = %1202, %1201, %1192
  call void @_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EED2Ev(%"class.std::priority_queue.6"* %43) #3
  br label %1698

; <label>:1696:                                   ; preds = %1694, %1016
  %1697 = load i32, i32* %1, align 4
  ret i32 %1697

; <label>:1698:                                   ; preds = %1695, %1144, %1017, %528
  %1699 = load i8*, i8** %24, align 8
  %1700 = load i32, i32* %25, align 4
  %1701 = insertvalue { i8*, i32 } undef, i8* %1699, 0
  %1702 = insertvalue { i8*, i32 } %1701, i32 %1700, 1
  resume { i8*, i32 } %1702

; <label>:1703:                                   ; preds = %101, %74
  %1704 = getelementptr inbounds [50 x %"struct.std::pair"], [50 x %"struct.std::pair"]* %75, i64 0, i64 0
  %1705 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %1704, i64 50
  br label %101

; <label>:1706:                                   ; preds = %185, %159
  %1707 = load i32, i32* %11, align 4
  %1708 = load i32, i32* %3, align 4
  %1709 = icmp slt i32 %1707, %1708
  br label %185

; <label>:1710:                                   ; preds = %275, %261
  %1711 = load i32, i32* %20, align 4
  %1712 = sext i32 %1711 to i64
  %1713 = getelementptr inbounds [50 x i32], [50 x i32]* %18, i64 0, i64 %1712
  %1714 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %1713)
  %1715 = load i32, i32* %20, align 4
  %1716 = sext i32 %1715 to i64
  %1717 = getelementptr inbounds [50 x i32], [50 x i32]* %19, i64 0, i64 %1716
  %1718 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %1714, i32* dereferenceable(4) %1717)
  br label %275

; <label>:1719:                                   ; preds = %326, %299
  %1720 = load i32, i32* %20, align 4
  %1721 = shl i32 %1720, 1
  %1722 = sub i32 0, 1
  %1723 = add i32 %1720, %1722
  %1724 = sub i32 %1720, 1
  %1725 = mul i32 %1723, 1
  %1726 = add i32 0, -1809675384
  %1727 = sub i32 %1726, %1720
  %1728 = sub i32 %1727, -1809675384
  %1729 = sub i32 0, %1720
  %1730 = sub i32 0, %1728
  %1731 = sub i32 0, 1
  %1732 = add i32 %1730, %1731
  %1733 = sub i32 0, %1732
  %1734 = add i32 %1728, 1
  %1735 = sub i32 0, 1
  %1736 = add i32 %1720, %1735
  %1737 = sub i32 %1720, 1
  %1738 = mul i32 %1736, 1
  %1739 = sub i32 0, -109033810
  %1740 = sub i32 %1739, %1720
  %1741 = add i32 %1740, -109033810
  %1742 = sub i32 0, %1720
  %1743 = sub i32 %1741, -261058993
  %1744 = add i32 %1743, 1
  %1745 = add i32 %1744, -261058993
  %1746 = add i32 %1741, 1
  %1747 = sub i32 %1720, -1996408367
  %1748 = add i32 %1747, 1
  %1749 = add i32 %1748, -1996408367
  %1750 = add nsw i32 %1720, 1
  store i32 %1749, i32* %20, align 4
  br label %326

; <label>:1751:                                   ; preds = %370, %355
  %1752 = fptosi double %354 to i64
  store i64 %1752, i64* %27, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.3"* %28) #3
  br label %370

; <label>:1753:                                   ; preds = %427, %400
  %1754 = bitcast %"struct.std::pair"* %30 to i64*
  store i64 %399, i64* %1754, align 4
  br label %427

; <label>:1755:                                   ; preds = %484, %458
  %1756 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %457, i32 0, i32 0
  %1757 = load i64, i64* %1756, align 8
  %1758 = sub i64 0, %1757
  %1759 = add i64 0, %1758
  %1760 = sub i64 0, %1757
  %1761 = mul i64 %1759, %1757
  %1762 = sub i64 0, 2452881300815616356
  %1763 = sub i64 %1762, %1757
  %1764 = add i64 %1763, 2452881300815616356
  %1765 = sub nsw i64 0, %1757
  store i64 %1764, i64* %33, align 8
  br label %484

; <label>:1766:                                   ; preds = %570, %544
  store i32 0, i32* %35, align 4
  br label %570

; <label>:1767:                                   ; preds = %624, %597
  %1768 = load i32, i32* %35, align 4
  %1769 = load i32, i32* %2, align 4
  %1770 = icmp slt i32 %1768, %1769
  br label %624

; <label>:1771:                                   ; preds = %710, %695
  br label %710

; <label>:1772:                                   ; preds = %746, %732
  br label %746

; <label>:1773:                                   ; preds = %789, %774
  store i32 1, i32* %42, align 4
  br label %789

; <label>:1774:                                   ; preds = %831, %805
  %1775 = load i32, i32* %42, align 4
  %1776 = load i32, i32* %2, align 4
  %1777 = icmp slt i32 %1775, %1776
  br label %831

; <label>:1778:                                   ; preds = %895, %868
  br label %895

; <label>:1779:                                   ; preds = %939, %912
  br label %939

; <label>:1780:                                   ; preds = %994, %967
  %1781 = load i32, i32* %42, align 4
  %1782 = shl i32 %1781, 1
  %1783 = sub i32 0, 1
  %1784 = add i32 %1781, %1783
  %1785 = sub i32 %1781, 1
  %1786 = mul i32 %1784, 1
  %1787 = sub i32 0, 1
  %1788 = sub i32 %1781, %1787
  %1789 = add nsw i32 %1781, 1
  store i32 %1788, i32* %42, align 4
  br label %994

; <label>:1790:                                   ; preds = %1041, %1026
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.17"* %50) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.1"* %47) #3
  call void @_ZNSaIxED2Ev(%"class.std::allocator.3"* %49) #3
  %1791 = getelementptr inbounds %struct.elem, %struct.elem* %51, i32 0, i32 0
  store i64 0, i64* %1791, align 8
  %1792 = getelementptr inbounds %struct.elem, %struct.elem* %51, i32 0, i32 1
  %1793 = load i32, i32* %4, align 4
  %1794 = sext i32 %1793 to i64
  store i64 %1794, i64* %1792, align 8
  %1795 = getelementptr inbounds %struct.elem, %struct.elem* %51, i32 0, i32 2
  store i32 0, i32* %1795, align 8
  br label %1041

; <label>:1796:                                   ; preds = %1108, %1081
  br label %1108

; <label>:1797:                                   ; preds = %1175, %1148
  %1798 = landingpad { i8*, i32 }
          cleanup
  %1799 = extractvalue { i8*, i32 } %1798, 0
  store i8* %1799, i8** %24, align 8
  %1800 = extractvalue { i8*, i32 } %1798, 1
  store i32 %1800, i32* %25, align 4
  br label %1175

; <label>:1801:                                   ; preds = %1262, %1247
  %1802 = load i64, i64* %56, align 8
  %1803 = load i32, i32* %55, align 4
  %1804 = sext i32 %1803 to i64
  %1805 = call dereferenceable(24) %"class.std::vector.1"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.15"* %46, i64 %1804) #3
  %1806 = load i64, i64* %57, align 8
  %1807 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %1805, i64 %1806) #3
  store i64 %1802, i64* %1807, align 8
  %1808 = getelementptr inbounds %struct.elem, %struct.elem* %58, i32 0, i32 0
  %1809 = load i64, i64* %56, align 8
  store i64 %1809, i64* %1808, align 8
  %1810 = getelementptr inbounds %struct.elem, %struct.elem* %58, i32 0, i32 1
  %1811 = load i64, i64* %57, align 8
  store i64 %1811, i64* %1810, align 8
  %1812 = getelementptr inbounds %struct.elem, %struct.elem* %58, i32 0, i32 2
  %1813 = load i32, i32* %55, align 4
  store i32 %1813, i32* %1812, align 8
  br label %1262

; <label>:1814:                                   ; preds = %1336, %1309
  br label %1336

; <label>:1815:                                   ; preds = %1421, %1394
  %1816 = load i32, i32* %59, align 4
  %1817 = sext i32 %1816 to i64
  %1818 = call dereferenceable(24) %"class.std::vector.1"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.15"* %46, i64 %1817) #3
  %1819 = load i64, i64* %64, align 8
  %1820 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"* %1818, i64 %1819) #3
  %1821 = load i64, i64* %1820, align 8
  %1822 = load i64, i64* %63, align 8
  %1823 = icmp sgt i64 %1821, %1822
  br label %1421

; <label>:1824:                                   ; preds = %1495, %1481
  %1825 = load i32, i32* %66, align 4
  %1826 = load i32, i32* %2, align 4
  %1827 = icmp slt i32 %1825, %1826
  br label %1495

; <label>:1828:                                   ; preds = %1540, %1525
  br label %1540

; <label>:1829:                                   ; preds = %1585, %1558
  %1830 = load i32, i32* %68, align 4
  %1831 = icmp sle i32 %1830, 5000
  br label %1585

; <label>:1832:                                   ; preds = %1655, %1629
  %1833 = load i64, i64* %67, align 8
  br label %1655
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIiiEC2Ev(%"struct.std::pair"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.3
  %5 = load i32, i32* @y.4
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 681930129, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %75
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 681930129, label %17
    i32 1506122485, label %37
    i32 2084831811, label %69
    i32 1920574338, label %70
  ]

; <label>:16:                                     ; preds = %14
  br label %75

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1506122485, i32 1920574338
  store i32 %36, i32* %13
  br label %75

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %38, align 8
  %39 = load %"struct.std::pair"*, %"struct.std::pair"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %39, i32 0, i32 0
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %39, i32 0, i32 1
  store i32 0, i32* %41, align 4
  %42 = load i32, i32* @x.3
  %43 = load i32, i32* @y.4
  %44 = sub i32 %42, 740927677
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 740927677
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 2084831811, i32 1920574338
  store i32 %68, i32* %13
  br label %75

; <label>:69:                                     ; preds = %14
  ret void

; <label>:70:                                     ; preds = %14
  %71 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %71, align 8
  %72 = load %"struct.std::pair"*, %"struct.std::pair"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %72, i32 0, i32 0
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %72, i32 0, i32 1
  store i32 0, i32* %74, align 4
  store i32 1506122485, i32* %13
  br label %75

; <label>:75:                                     ; preds = %70, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt9make_pairIiiESt4pairINSt17__decay_and_stripIT_E6__typeENS1_IT0_E6__typeEEOS2_OS5_(i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.5
  %7 = load i32, i32* @y.6
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1922350796, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1922350796, label %19
    i32 505862477, label %27
    i32 315059001, label %64
    i32 -251234157, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 505862477, i32 -251234157
  store i32 %26, i32* %15
  br label %76

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair", align 4
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  store i32* %0, i32** %29, align 8
  store i32* %1, i32** %30, align 8
  %31 = load i32*, i32** %29, align 8
  %32 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %31) #3
  %33 = load i32*, i32** %30, align 8
  %34 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %33) #3
  call void @_ZNSt4pairIiiEC2IiivEEOT_OT0_(%"struct.std::pair"* %28, i32* dereferenceable(4) %32, i32* dereferenceable(4) %34)
  %35 = bitcast %"struct.std::pair"* %28 to i64*
  %36 = load i64, i64* %35, align 4
  store i64 %36, i64* %3
  %37 = load i32, i32* @x.5
  %38 = load i32, i32* @y.6
  %39 = sub i32 %37, 843174551
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 843174551
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 315059001, i32 -251234157
  store i32 %63, i32* %15
  br label %76

; <label>:64:                                     ; preds = %16
  %65 = load volatile i64, i64* %3
  ret i64 %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"struct.std::pair", align 4
  %68 = alloca i32*, align 8
  %69 = alloca i32*, align 8
  store i32* %0, i32** %68, align 8
  store i32* %1, i32** %69, align 8
  %70 = load i32*, i32** %68, align 8
  %71 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %70) #3
  %72 = load i32*, i32** %69, align 8
  %73 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %72) #3
  call void @_ZNSt4pairIiiEC2IiivEEOT_OT0_(%"struct.std::pair"* %67, i32* dereferenceable(4) %71, i32* dereferenceable(4) %73)
  %74 = bitcast %"struct.std::pair"* %67 to i64*
  %75 = load i64, i64* %74, align 4
  store i32 505862477, i32* %15
  br label %76

; <label>:76:                                     ; preds = %66, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"*, %"struct.std::pair"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %7 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %6, i32 0, i32 0
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 0, i32 0
  store i32 %9, i32* %10, align 4
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %11, i32 0, i32 1
  %13 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %12) #3
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 0, i32 1
  store i32 %14, i32* %15, align 4
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt9make_pairIRiS0_ESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat {
  %3 = alloca %"struct.std::pair", align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %6) #3
  %8 = load i32*, i32** %5, align 8
  %9 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %8) #3
  call void @_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_(%"struct.std::pair"* %3, i32* dereferenceable(4) %7, i32* dereferenceable(4) %9)
  %10 = bitcast %"struct.std::pair"* %3 to i64*
  %11 = load i64, i64* %10, align 4
  ret i64 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxiESaIS1_EEC2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"*, %"struct.std::less"* dereferenceable(1), %"class.std::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.13
  %5 = load i32, i32* @y.14
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %92

; <label>:29:                                     ; preds = %3, %92
  %30 = alloca %"class.std::priority_queue"*, align 8
  %31 = alloca %"struct.std::less"*, align 8
  %32 = alloca %"class.std::vector"*, align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %35 = alloca %"struct.std::less", align 1
  %36 = alloca i8*
  %37 = alloca i32
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %30, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %31, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %32, align 8
  %38 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %30, align 8
  %39 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %38, i32 0, i32 0
  %40 = load %"class.std::vector"*, %"class.std::vector"** %32, align 8
  %41 = call dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorISt4pairIxiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector"* dereferenceable(24) %40) #3
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EEC2EOS3_(%"class.std::vector"* %39, %"class.std::vector"* dereferenceable(24) %41) #3
  %42 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %38, i32 0, i32 1
  %43 = load %"struct.std::less"*, %"struct.std::less"** %31, align 8
  %44 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %38, i32 0, i32 0
  %45 = call %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE5beginEv(%"class.std::vector"* %44) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  store %"struct.std::pair.0"* %45, %"struct.std::pair.0"** %46, align 8
  %47 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %38, i32 0, i32 0
  %48 = call %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE3endEv(%"class.std::vector"* %47) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  store %"struct.std::pair.0"* %48, %"struct.std::pair.0"** %49, align 8
  %50 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %38, i32 0, i32 1
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  %52 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  %54 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %53, align 8
  %55 = load i32, i32* @x.13
  %56 = load i32, i32* @y.14
  %57 = add i32 %55, 1978552686
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 1978552686
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %92

; <label>:81:                                     ; preds = %29
  invoke void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.std::pair.0"* %52, %"struct.std::pair.0"* %54)
          to label %82 unwind label %83

; <label>:82:                                     ; preds = %81
  ret void

; <label>:83:                                     ; preds = %81
  %84 = landingpad { i8*, i32 }
          cleanup
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %36, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %37, align 4
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EED2Ev(%"class.std::vector"* %39) #3
  br label %87

; <label>:87:                                     ; preds = %83
  %88 = load i8*, i8** %36, align 8
  %89 = load i32, i32* %37, align 4
  %90 = insertvalue { i8*, i32 } undef, i8* %88, 0
  %91 = insertvalue { i8*, i32 } %90, i32 %89, 1
  resume { i8*, i32 } %91

; <label>:92:                                     ; preds = %29, %3
  %93 = alloca %"class.std::priority_queue"*, align 8
  %94 = alloca %"struct.std::less"*, align 8
  %95 = alloca %"class.std::vector"*, align 8
  %96 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %97 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %98 = alloca %"struct.std::less", align 1
  %99 = alloca i8*
  %100 = alloca i32
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %93, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %94, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %95, align 8
  %101 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %93, align 8
  %102 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %101, i32 0, i32 0
  %103 = load %"class.std::vector"*, %"class.std::vector"** %95, align 8
  %104 = call dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorISt4pairIxiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector"* dereferenceable(24) %103) #3
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EEC2EOS3_(%"class.std::vector"* %102, %"class.std::vector"* dereferenceable(24) %104) #3
  %105 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %101, i32 0, i32 1
  %106 = load %"struct.std::less"*, %"struct.std::less"** %94, align 8
  %107 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %101, i32 0, i32 0
  %108 = call %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE5beginEv(%"class.std::vector"* %107) #3
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %96, i32 0, i32 0
  store %"struct.std::pair.0"* %108, %"struct.std::pair.0"** %109, align 8
  %110 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %101, i32 0, i32 0
  %111 = call %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE3endEv(%"class.std::vector"* %110) #3
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %97, i32 0, i32 0
  store %"struct.std::pair.0"* %111, %"struct.std::pair.0"** %112, align 8
  %113 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %101, i32 0, i32 1
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %96, i32 0, i32 0
  %115 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %114, align 8
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %97, i32 0, i32 0
  %117 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %116, align 8
  br label %29
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxiESaIS1_EED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt4pairIxiES1_EvT_S3_RSaIT0_E(%"struct.std::pair.0"* %9, %"struct.std::pair.0"* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_(i32, i32) #5 comdat {
  %3 = alloca double
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.17
  %7 = load i32, i32* @y.18
  %8 = add i32 %6, 28367758
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 28367758
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1095386351, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1095386351, label %20
    i32 369817339, label %28
    i32 -1717519096, label %63
    i32 -1682637947, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 369817339, i32 -1682637947
  store i32 %27, i32* %16
  br label %73

; <label>:28:                                     ; preds = %17
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  store i32 %0, i32* %29, align 4
  store i32 %1, i32* %30, align 4
  %31 = load i32, i32* %29, align 4
  %32 = sitofp i32 %31 to double
  %33 = load i32, i32* %30, align 4
  %34 = sitofp i32 %33 to double
  %35 = call double @pow(double %32, double %34) #3
  store double %35, double* %3
  %36 = load i32, i32* @x.17
  %37 = load i32, i32* @y.18
  %38 = sub i32 %36, -784053642
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -784053642
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -1717519096, i32 -1682637947
  store i32 %62, i32* %16
  br label %73

; <label>:63:                                     ; preds = %17
  %64 = load volatile double, double* %3
  ret double %64

; <label>:65:                                     ; preds = %17
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  store i32 %0, i32* %66, align 4
  store i32 %1, i32* %67, align 4
  %68 = load i32, i32* %66, align 4
  %69 = sitofp i32 %68 to double
  %70 = load i32, i32* %67, align 4
  %71 = sitofp i32 %70 to double
  %72 = call double @pow(double %69, double %71) #3
  store i32 369817339, i32* %16
  br label %73

; <label>:73:                                     ; preds = %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2Ev(%"class.std::allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %2, align 8
  %3 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %2, align 8
  %4 = bitcast %"class.std::allocator.3"* %3 to %"class.__gnu_cxx::new_allocator.4"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.4"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.1"*, i64, i64* dereferenceable(8), %"class.std::allocator.3"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.1"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.3"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.3"* %3, %"class.std::allocator.3"** %8, align 8
  %11 = load %"class.std::vector.1"*, %"class.std::vector.1"** %5, align 8
  %12 = bitcast %"class.std::vector.1"* %11 to %"struct.std::_Vector_base.2"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %8, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.2"* %12, i64 %13, %"class.std::allocator.3"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i64*, i64** %7, align 8
  invoke void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.1"* %11, i64 %15, i64* dereferenceable(8) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* @x.21
  %20 = load i32, i32* @y.22
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %111

; <label>:32:                                     ; preds = %18, %111
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %9, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %10, align 4
  %36 = bitcast %"class.std::vector.1"* %11 to %"struct.std::_Vector_base.2"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.2"* %36) #3
  %37 = load i32, i32* @x.21
  %38 = load i32, i32* @y.22
  %39 = sub i32 %37, -281870515
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -281870515
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %111

; <label>:51:                                     ; preds = %32
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = load i32, i32* @x.21
  %54 = load i32, i32* @y.22
  %55 = add i32 %53, 1619662158
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1619662158
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %116

; <label>:79:                                     ; preds = %52, %116
  %80 = load i8*, i8** %9, align 8
  %81 = load i32, i32* %10, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  %84 = load i32, i32* @x.21
  %85 = load i32, i32* @y.22
  %86 = add i32 %84, 1236076408
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, 1236076408
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %116

; <label>:110:                                    ; preds = %79
  resume { i8*, i32 } %83

; <label>:111:                                    ; preds = %32, %18
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %9, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %10, align 4
  %115 = bitcast %"class.std::vector.1"* %11 to %"struct.std::_Vector_base.2"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.2"* %115) #3
  br label %32

; <label>:116:                                    ; preds = %79, %52
  %117 = load i8*, i8** %9, align 8
  %118 = load i32, i32* %10, align 4
  %119 = insertvalue { i8*, i32 } undef, i8* %117, 0
  %120 = insertvalue { i8*, i32 } %119, i32 %118, 1
  br label %79
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxED2Ev(%"class.std::allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %2, align 8
  %3 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %2, align 8
  %4 = bitcast %"class.std::allocator.3"* %3 to %"class.__gnu_cxx::new_allocator.4"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.4"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_(%"class.std::priority_queue"*, %"struct.std::pair.0"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.25
  %6 = load i32, i32* @y.26
  %7 = add i32 %5, 1455940727
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1455940727
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -679315510, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -679315510, label %19
    i32 -1417446254, label %27
    i32 1022506242, label %63
    i32 -996986341, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1417446254, i32 -996986341
  store i32 %26, i32* %15
  br label %85

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::priority_queue"*, align 8
  %29 = alloca %"struct.std::pair.0"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %32 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %28, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %29, align 8
  %33 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %28, align 8
  %34 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %33, i32 0, i32 0
  %35 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %29, align 8
  %36 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %35) #3
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EE9push_backEOS1_(%"class.std::vector"* %34, %"struct.std::pair.0"* dereferenceable(16) %36)
  %37 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %33, i32 0, i32 0
  %38 = call %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE5beginEv(%"class.std::vector"* %37) #3
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  store %"struct.std::pair.0"* %38, %"struct.std::pair.0"** %39, align 8
  %40 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %33, i32 0, i32 0
  %41 = call %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE3endEv(%"class.std::vector"* %40) #3
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  store %"struct.std::pair.0"* %41, %"struct.std::pair.0"** %42, align 8
  %43 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %33, i32 0, i32 1
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %45 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  %47 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %46, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.std::pair.0"* %45, %"struct.std::pair.0"* %47)
  %48 = load i32, i32* @x.25
  %49 = load i32, i32* @y.26
  %50 = add i32 %48, -1627255149
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1627255149
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1022506242, i32 -996986341
  store i32 %62, i32* %15
  br label %85

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.std::priority_queue"*, align 8
  %66 = alloca %"struct.std::pair.0"*, align 8
  %67 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %69 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %65, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %66, align 8
  %70 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %65, align 8
  %71 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %70, i32 0, i32 0
  %72 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %66, align 8
  %73 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %72) #3
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EE9push_backEOS1_(%"class.std::vector"* %71, %"struct.std::pair.0"* dereferenceable(16) %73)
  %74 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %70, i32 0, i32 0
  %75 = call %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE5beginEv(%"class.std::vector"* %74) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %67, i32 0, i32 0
  store %"struct.std::pair.0"* %75, %"struct.std::pair.0"** %76, align 8
  %77 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %70, i32 0, i32 0
  %78 = call %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE3endEv(%"class.std::vector"* %77) #3
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %68, i32 0, i32 0
  store %"struct.std::pair.0"* %78, %"struct.std::pair.0"** %79, align 8
  %80 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %70, i32 0, i32 1
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %67, i32 0, i32 0
  %82 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %81, align 8
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %68, i32 0, i32 0
  %84 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %83, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.std::pair.0"* %82, %"struct.std::pair.0"* %84)
  store i32 -1417446254, i32* %15
  br label %85

; <label>:85:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxiEC2IiivEEOS_IT_T0_E(%"struct.std::pair.0"*, %"struct.std::pair"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::pair.0"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %8) #3
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  store i64 %11, i64* %6, align 8
  %12 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %5, i32 0, i32 1
  %13 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i32 0, i32 1
  %15 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %14) #3
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.1"*, i64) #5 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.29
  %7 = load i32, i32* @y.30
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -829085979, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -829085979, label %19
    i32 903844360, label %39
    i32 -2041203895, label %63
    i32 -1149330192, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 903844360, i32 -1149330192
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.1"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::vector.1"*, %"class.std::vector.1"** %40, align 8
  %43 = bitcast %"class.std::vector.1"* %42 to %"struct.std::_Vector_base.2"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = getelementptr inbounds i64, i64* %46, i64 %47
  store i64* %48, i64** %3
  %49 = load i32, i32* @x.29
  %50 = load i32, i32* @y.30
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -2041203895, i32 -1149330192
  store i32 %62, i32* %15
  br label %75

; <label>:63:                                     ; preds = %16
  %64 = load volatile i64*, i64** %3
  ret i64* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.std::vector.1"*, align 8
  %67 = alloca i64, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %66, align 8
  store i64 %1, i64* %67, align 8
  %68 = load %"class.std::vector.1"*, %"class.std::vector.1"** %66, align 8
  %69 = bitcast %"class.std::vector.1"* %68 to %"struct.std::_Vector_base.2"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = load i64, i64* %67, align 8
  %74 = getelementptr inbounds i64, i64* %72, i64 %73
  store i32 903844360, i32* %15
  br label %75

; <label>:75:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE5emptyEv(%"class.std::priority_queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt6vectorISt4pairIxiESaIS1_EE5emptyEv(%"class.std::vector"* %4) #3
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.0"* @_ZNKSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE3topEv(%"class.std::priority_queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  %5 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNKSt6vectorISt4pairIxiESaIS1_EE5frontEv(%"class.std::vector"* %4) #3
  ret %"struct.std::pair.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EE3popEv(%"class.std::priority_queue"*) #0 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %6 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %7 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  %8 = call %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE5beginEv(%"class.std::vector"* %7) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.std::pair.0"* %8, %"struct.std::pair.0"** %9, align 8
  %10 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  %11 = call %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE3endEv(%"class.std::vector"* %10) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair.0"* %11, %"struct.std::pair.0"** %12, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %15 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %14, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %17 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %16, align 8
  call void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.std::pair.0"* %15, %"struct.std::pair.0"* %17)
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EE8pop_backEv(%"class.std::vector"* %18) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqIiiEbRKSt4pairIT_T0_ES5_(%"struct.std::pair"* dereferenceable(8), %"struct.std::pair"* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"struct.std::pair"**
  %6 = alloca %"struct.std::pair"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.37
  %10 = load i32, i32* @y.38
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -4234734, i32* %18
  %19 = alloca i1
  br label %20

; <label>:20:                                     ; preds = %2, %152
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -4234734, label %23
    i32 1449104178, label %31
    i32 1829057669, label %72
    i32 -1968182395, label %75
    i32 -742772857, label %91
    i32 1849292096, label %128
    i32 -454087609, label %130
    i32 -1915134557, label %132
    i32 -1687962840, label %142
  ]

; <label>:22:                                     ; preds = %20
  br label %152

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1449104178, i32 -1915134557
  store i32 %30, i32* %18
  br label %152

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"** %32, %"struct.std::pair"*** %6
  %33 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"** %33, %"struct.std::pair"*** %5
  %34 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %6
  store %"struct.std::pair"* %0, %"struct.std::pair"** %34, align 8
  %35 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %5
  store %"struct.std::pair"* %1, %"struct.std::pair"** %35, align 8
  %36 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %6
  %37 = load %"struct.std::pair"*, %"struct.std::pair"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %5
  %41 = load %"struct.std::pair"*, %"struct.std::pair"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %39, %43
  store i1 %44, i1* %4
  %45 = load i32, i32* @x.37
  %46 = load i32, i32* @y.38
  %47 = add i32 %45, -2118001994
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -2118001994
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1829057669, i32 -1915134557
  store i32 %71, i32* %18
  br label %152

; <label>:72:                                     ; preds = %20
  %73 = load volatile i1, i1* %4
  %74 = select i1 %73, i32 -1968182395, i32 -454087609
  store i32 %74, i32* %18
  store i1 false, i1* %19
  br label %152

; <label>:75:                                     ; preds = %20
  %76 = load i32, i32* @x.37
  %77 = load i32, i32* @y.38
  %78 = sub i32 %76, -937874095
  %79 = sub i32 %78, 1
  %80 = add i32 %79, -937874095
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 -742772857, i32 -1687962840
  store i32 %90, i32* %18
  br label %152

; <label>:91:                                     ; preds = %20
  %92 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %6
  %93 = load %"struct.std::pair"*, %"struct.std::pair"** %92, align 8
  %94 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %5
  %97 = load %"struct.std::pair"*, %"struct.std::pair"** %96, align 8
  %98 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %97, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %95, %99
  store i1 %100, i1* %3
  %101 = load i32, i32* @x.37
  %102 = load i32, i32* @y.38
  %103 = sub i32 %101, -1744610327
  %104 = sub i32 %103, 1
  %105 = add i32 %104, -1744610327
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  %127 = select i1 %125, i32 1849292096, i32 -1687962840
  store i32 %127, i32* %18
  br label %152

; <label>:128:                                    ; preds = %20
  store i32 -454087609, i32* %18
  %129 = load volatile i1, i1* %3
  store i1 %129, i1* %19
  br label %152

; <label>:130:                                    ; preds = %20
  %131 = load i1, i1* %19
  ret i1 %131

; <label>:132:                                    ; preds = %20
  %133 = alloca %"struct.std::pair"*, align 8
  %134 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %133, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %134, align 8
  %135 = load %"struct.std::pair"*, %"struct.std::pair"** %133, align 8
  %136 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %135, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = load %"struct.std::pair"*, %"struct.std::pair"** %134, align 8
  %139 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %138, i32 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %137, %140
  store i32 1449104178, i32* %18
  br label %152

; <label>:142:                                    ; preds = %20
  %143 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %6
  %144 = load %"struct.std::pair"*, %"struct.std::pair"** %143, align 8
  %145 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %144, i32 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %5
  %148 = load %"struct.std::pair"*, %"struct.std::pair"** %147, align 8
  %149 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %148, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %146, %150
  store i32 -742772857, i32* %18
  br label %152

; <label>:152:                                    ; preds = %142, %132, %128, %91, %75, %72, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64, i32 } @_ZSt9make_pairIxRiESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i64* dereferenceable(8), i32* dereferenceable(4)) #0 comdat {
  %3 = alloca %"struct.std::pair.0", align 8
  %4 = alloca i64*, align 8
  %5 = alloca i32*, align 8
  store i64* %0, i64** %4, align 8
  store i32* %1, i32** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %6) #3
  %8 = load i32*, i32** %5, align 8
  %9 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %8) #3
  call void @_ZNSt4pairIxiEC2IxRivEEOT_OT0_(%"struct.std::pair.0"* %3, i64* dereferenceable(8) %7, i32* dereferenceable(4) %9)
  %10 = bitcast %"struct.std::pair.0"* %3 to { i64, i32 }*
  %11 = load { i64, i32 }, { i64, i32 }* %10, align 8
  ret { i64, i32 } %11
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.1"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %2, align 8
  %5 = load %"class.std::vector.1"*, %"class.std::vector.1"** %2, align 8
  %6 = bitcast %"class.std::vector.1"* %5 to %"struct.std::_Vector_base.2"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector.1"* %5 to %"struct.std::_Vector_base.2"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector.1"* %5 to %"struct.std::_Vector_base.2"*
  %15 = call dereferenceable(1) %"class.std::allocator.3"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.2"* %14) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator.3"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.1"* %5 to %"struct.std::_Vector_base.2"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.2"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.1"* %5 to %"struct.std::_Vector_base.2"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.2"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.41
  %25 = load i32, i32* @y.42
  %26 = sub i32 %24, 1893297857
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 1893297857
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %78

; <label>:50:                                     ; preds = %23, %78
  %51 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %51) #11
  %52 = load i32, i32* @x.41
  %53 = load i32, i32* @y.42
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %78

; <label>:77:                                     ; preds = %50
  unreachable

; <label>:78:                                     ; preds = %50, %23
  %79 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %79) #11
  br label %50
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxiESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev(%"class.std::priority_queue"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EED2Ev(%"class.std::vector"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI4elemSaIS0_EEC2Ev(%"class.std::vector.7"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %3 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  %4 = bitcast %"class.std::vector.7"* %3 to %"struct.std::_Vector_base.8"*
  invoke void @_ZNSt12_Vector_baseI4elemSaIS0_EEC2Ev(%"struct.std::_Vector_base.8"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EEC2ERKS5_OS3_(%"class.std::priority_queue.6"*, %"struct.std::less.12"* dereferenceable(1), %"class.std::vector.7"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::priority_queue.6"*, align 8
  %5 = alloca %"struct.std::less.12"*, align 8
  %6 = alloca %"class.std::vector.7"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %9 = alloca %"struct.std::less.12", align 1
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::priority_queue.6"* %0, %"class.std::priority_queue.6"** %4, align 8
  store %"struct.std::less.12"* %1, %"struct.std::less.12"** %5, align 8
  store %"class.std::vector.7"* %2, %"class.std::vector.7"** %6, align 8
  %12 = load %"class.std::priority_queue.6"*, %"class.std::priority_queue.6"** %4, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.7"*, %"class.std::vector.7"** %6, align 8
  %15 = call dereferenceable(24) %"class.std::vector.7"* @_ZSt4moveIRSt6vectorI4elemSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.7"* dereferenceable(24) %14) #3
  call void @_ZNSt6vectorI4elemSaIS0_EEC2EOS2_(%"class.std::vector.7"* %13, %"class.std::vector.7"* dereferenceable(24) %15) #3
  %16 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %12, i32 0, i32 1
  %17 = load %"struct.std::less.12"*, %"struct.std::less.12"** %5, align 8
  %18 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %12, i32 0, i32 0
  %19 = call %struct.elem* @_ZNSt6vectorI4elemSaIS0_EE5beginEv(%"class.std::vector.7"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %7, i32 0, i32 0
  store %struct.elem* %19, %struct.elem** %20, align 8
  %21 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %12, i32 0, i32 0
  %22 = call %struct.elem* @_ZNSt6vectorI4elemSaIS0_EE3endEv(%"class.std::vector.7"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %8, i32 0, i32 0
  store %struct.elem* %22, %struct.elem** %23, align 8
  %24 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %12, i32 0, i32 1
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %7, i32 0, i32 0
  %26 = load %struct.elem*, %struct.elem** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %8, i32 0, i32 0
  %28 = load %struct.elem*, %struct.elem** %27, align 8
  invoke void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.elem* %26, %struct.elem* %28)
          to label %29 unwind label %30

; <label>:29:                                     ; preds = %3
  ret void

; <label>:30:                                     ; preds = %3
  %31 = load i32, i32* @x.47
  %32 = load i32, i32* @y.48
  %33 = sub i32 %31, -127222641
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -127222641
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %93

; <label>:57:                                     ; preds = %30, %93
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %10, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %11, align 4
  call void @_ZNSt6vectorI4elemSaIS0_EED2Ev(%"class.std::vector.7"* %13) #3
  %61 = load i32, i32* @x.47
  %62 = load i32, i32* @y.48
  %63 = sub i32 %61, 712595077
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 712595077
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %93

; <label>:87:                                     ; preds = %57
  br label %88

; <label>:88:                                     ; preds = %87
  %89 = load i8*, i8** %10, align 8
  %90 = load i32, i32* %11, align 4
  %91 = insertvalue { i8*, i32 } undef, i8* %89, 0
  %92 = insertvalue { i8*, i32 } %91, i32 %90, 1
  resume { i8*, i32 } %92

; <label>:93:                                     ; preds = %57, %30
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %10, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %11, align 4
  call void @_ZNSt6vectorI4elemSaIS0_EED2Ev(%"class.std::vector.7"* %13) #3
  br label %57
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI4elemSaIS0_EED2Ev(%"class.std::vector.7"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.49
  %3 = load i32, i32* @y.50
  %4 = sub i32 %2, -1567363699
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1567363699
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %109

; <label>:16:                                     ; preds = %1, %109
  %17 = alloca %"class.std::vector.7"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %17, align 8
  %20 = load %"class.std::vector.7"*, %"class.std::vector.7"** %17, align 8
  %21 = bitcast %"class.std::vector.7"* %20 to %"struct.std::_Vector_base.8"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %struct.elem*, %struct.elem** %23, align 8
  %25 = bitcast %"class.std::vector.7"* %20 to %"struct.std::_Vector_base.8"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %struct.elem*, %struct.elem** %27, align 8
  %29 = bitcast %"class.std::vector.7"* %20 to %"struct.std::_Vector_base.8"*
  %30 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %29) #3
  %31 = load i32, i32* @x.49
  %32 = load i32, i32* @y.50
  %33 = sub i32 %31, 907287161
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 907287161
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %109

; <label>:45:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIP4elemS0_EvT_S2_RSaIT0_E(%struct.elem* %24, %struct.elem* %28, %"class.std::allocator.9"* dereferenceable(1) %30)
          to label %46 unwind label %48

; <label>:46:                                     ; preds = %45
  %47 = bitcast %"class.std::vector.7"* %20 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EED2Ev(%"struct.std::_Vector_base.8"* %47) #3
  ret void

; <label>:48:                                     ; preds = %45
  %49 = load i32, i32* @x.49
  %50 = load i32, i32* @y.50
  %51 = add i32 %49, -612667086
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -612667086
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %124

; <label>:75:                                     ; preds = %48, %124
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %18, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %19, align 4
  %79 = bitcast %"class.std::vector.7"* %20 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EED2Ev(%"struct.std::_Vector_base.8"* %79) #3
  %80 = load i32, i32* @x.49
  %81 = load i32, i32* @y.50
  %82 = add i32 %80, 1020148705
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 1020148705
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  br i1 %104, label %106, label %124

; <label>:106:                                    ; preds = %75
  br label %107

; <label>:107:                                    ; preds = %106
  %108 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %108) #11
  unreachable

; <label>:109:                                    ; preds = %16, %1
  %110 = alloca %"class.std::vector.7"*, align 8
  %111 = alloca i8*
  %112 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %110, align 8
  %113 = load %"class.std::vector.7"*, %"class.std::vector.7"** %110, align 8
  %114 = bitcast %"class.std::vector.7"* %113 to %"struct.std::_Vector_base.8"*
  %115 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %114, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %115, i32 0, i32 0
  %117 = load %struct.elem*, %struct.elem** %116, align 8
  %118 = bitcast %"class.std::vector.7"* %113 to %"struct.std::_Vector_base.8"*
  %119 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %118, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %119, i32 0, i32 1
  %121 = load %struct.elem*, %struct.elem** %120, align 8
  %122 = bitcast %"class.std::vector.7"* %113 to %"struct.std::_Vector_base.8"*
  %123 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %122) #3
  br label %16

; <label>:124:                                    ; preds = %75, %48
  %125 = landingpad { i8*, i32 }
          catch i8* null
  %126 = extractvalue { i8*, i32 } %125, 0
  store i8* %126, i8** %18, align 8
  %127 = extractvalue { i8*, i32 } %125, 1
  store i32 %127, i32* %19, align 4
  %128 = bitcast %"class.std::vector.7"* %20 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EED2Ev(%"struct.std::_Vector_base.8"* %128) #3
  br label %75
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.17"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %2, align 8
  %3 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %2, align 8
  %4 = bitcast %"class.std::allocator.17"* %3 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.18"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.15"*, i64, %"class.std::vector.1"* dereferenceable(24), %"class.std::allocator.17"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.15"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.1"*, align 8
  %8 = alloca %"class.std::allocator.17"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.1"* %2, %"class.std::vector.1"** %7, align 8
  store %"class.std::allocator.17"* %3, %"class.std::allocator.17"** %8, align 8
  %11 = load %"class.std::vector.15"*, %"class.std::vector.15"** %5, align 8
  %12 = bitcast %"class.std::vector.15"* %11 to %"struct.std::_Vector_base.16"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.16"* %12, i64 %13, %"class.std::allocator.17"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector.1"*, %"class.std::vector.1"** %7, align 8
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.15"* %11, i64 %15, %"class.std::vector.1"* dereferenceable(24) %16)
          to label %17 unwind label %59

; <label>:17:                                     ; preds = %4
  %18 = load i32, i32* @x.53
  %19 = load i32, i32* @y.54
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %128

; <label>:43:                                     ; preds = %17, %128
  %44 = load i32, i32* @x.53
  %45 = load i32, i32* @y.54
  %46 = sub i32 %44, 1350816093
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1350816093
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %128

; <label>:58:                                     ; preds = %43
  ret void

; <label>:59:                                     ; preds = %4
  %60 = load i32, i32* @x.53
  %61 = load i32, i32* @y.54
  %62 = sub i32 %60, 1593948742
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 1593948742
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %129

; <label>:74:                                     ; preds = %59, %129
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %9, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %10, align 4
  %78 = bitcast %"class.std::vector.15"* %11 to %"struct.std::_Vector_base.16"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.16"* %78) #3
  %79 = load i32, i32* @x.53
  %80 = load i32, i32* @y.54
  %81 = sub i32 %79, 653260180
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 653260180
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %129

; <label>:93:                                     ; preds = %74
  br label %94

; <label>:94:                                     ; preds = %93
  %95 = load i32, i32* @x.53
  %96 = load i32, i32* @y.54
  %97 = add i32 %95, 1488703288
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, 1488703288
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  br i1 %107, label %109, label %134

; <label>:109:                                    ; preds = %94, %134
  %110 = load i8*, i8** %9, align 8
  %111 = load i32, i32* %10, align 4
  %112 = insertvalue { i8*, i32 } undef, i8* %110, 0
  %113 = insertvalue { i8*, i32 } %112, i32 %111, 1
  %114 = load i32, i32* @x.53
  %115 = load i32, i32* @y.54
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %134

; <label>:127:                                    ; preds = %109
  resume { i8*, i32 } %113

; <label>:128:                                    ; preds = %43, %17
  br label %43

; <label>:129:                                    ; preds = %74, %59
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %9, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %10, align 4
  %133 = bitcast %"class.std::vector.15"* %11 to %"struct.std::_Vector_base.16"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.16"* %133) #3
  br label %74

; <label>:134:                                    ; preds = %109, %94
  %135 = load i8*, i8** %9, align 8
  %136 = load i32, i32* %10, align 4
  %137 = insertvalue { i8*, i32 } undef, i8* %135, 0
  %138 = insertvalue { i8*, i32 } %137, i32 %136, 1
  br label %109
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.17"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.55
  %5 = load i32, i32* @y.56
  %6 = add i32 %4, 1455423634
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1455423634
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -841931215, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -841931215, label %18
    i32 1910922019, label %38
    i32 -766245510, label %57
    i32 -418879141, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1910922019, i32 -418879141
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %39, align 8
  %40 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %39, align 8
  %41 = bitcast %"class.std::allocator.17"* %40 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.18"* %41) #3
  %42 = load i32, i32* @x.55
  %43 = load i32, i32* @y.56
  %44 = sub i32 %42, 2022371635
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 2022371635
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -766245510, i32 -418879141
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %59, align 8
  %60 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %59, align 8
  %61 = bitcast %"class.std::allocator.17"* %60 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.18"* %61) #3
  store i32 1910922019, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE4pushEOS0_(%"class.std::priority_queue.6"*, %struct.elem* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::priority_queue.6"*, align 8
  %4 = alloca %struct.elem*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %7 = alloca %"struct.std::less.12", align 1
  store %"class.std::priority_queue.6"* %0, %"class.std::priority_queue.6"** %3, align 8
  store %struct.elem* %1, %struct.elem** %4, align 8
  %8 = load %"class.std::priority_queue.6"*, %"class.std::priority_queue.6"** %3, align 8
  %9 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %8, i32 0, i32 0
  %10 = load %struct.elem*, %struct.elem** %4, align 8
  %11 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %10) #3
  call void @_ZNSt6vectorI4elemSaIS0_EE9push_backEOS0_(%"class.std::vector.7"* %9, %struct.elem* dereferenceable(24) %11)
  %12 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %8, i32 0, i32 0
  %13 = call %struct.elem* @_ZNSt6vectorI4elemSaIS0_EE5beginEv(%"class.std::vector.7"* %12) #3
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  store %struct.elem* %13, %struct.elem** %14, align 8
  %15 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %8, i32 0, i32 0
  %16 = call %struct.elem* @_ZNSt6vectorI4elemSaIS0_EE3endEv(%"class.std::vector.7"* %15) #3
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %6, i32 0, i32 0
  store %struct.elem* %16, %struct.elem** %17, align 8
  %18 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %8, i32 0, i32 1
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  %20 = load %struct.elem*, %struct.elem** %19, align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %6, i32 0, i32 0
  %22 = load %struct.elem*, %struct.elem** %21, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.elem* %20, %struct.elem* %22)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.1"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.15"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.1"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.59
  %7 = load i32, i32* @y.60
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 393873219, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 393873219, label %19
    i32 368689263, label %39
    i32 -1127420931, label %63
    i32 -849099622, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 368689263, i32 -849099622
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.15"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::vector.15"*, %"class.std::vector.15"** %40, align 8
  %43 = bitcast %"class.std::vector.15"* %42 to %"struct.std::_Vector_base.16"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %"class.std::vector.1"*, %"class.std::vector.1"** %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = getelementptr inbounds %"class.std::vector.1", %"class.std::vector.1"* %46, i64 %47
  store %"class.std::vector.1"* %48, %"class.std::vector.1"** %3
  %49 = load i32, i32* @x.59
  %50 = load i32, i32* @y.60
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1127420931, i32 -849099622
  store i32 %62, i32* %15
  br label %75

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"class.std::vector.1"*, %"class.std::vector.1"** %3
  ret %"class.std::vector.1"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.std::vector.15"*, align 8
  %67 = alloca i64, align 8
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %66, align 8
  store i64 %1, i64* %67, align 8
  %68 = load %"class.std::vector.15"*, %"class.std::vector.15"** %66, align 8
  %69 = bitcast %"class.std::vector.15"* %68 to %"struct.std::_Vector_base.16"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"class.std::vector.1"*, %"class.std::vector.1"** %71, align 8
  %73 = load i64, i64* %67, align 8
  %74 = getelementptr inbounds %"class.std::vector.1", %"class.std::vector.1"* %72, i64 %73
  store i32 368689263, i32* %15
  br label %75

; <label>:75:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE5emptyEv(%"class.std::priority_queue.6"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.61
  %6 = load i32, i32* @y.62
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 299320325, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 299320325, label %18
    i32 2058792538, label %26
    i32 -647704104, label %58
    i32 851597490, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2058792538, i32 851597490
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::priority_queue.6"*, align 8
  store %"class.std::priority_queue.6"* %0, %"class.std::priority_queue.6"** %27, align 8
  %28 = load %"class.std::priority_queue.6"*, %"class.std::priority_queue.6"** %27, align 8
  %29 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %28, i32 0, i32 0
  %30 = call zeroext i1 @_ZNKSt6vectorI4elemSaIS0_EE5emptyEv(%"class.std::vector.7"* %29) #3
  store i1 %30, i1* %2
  %31 = load i32, i32* @x.61
  %32 = load i32, i32* @y.62
  %33 = sub i32 %31, 421108734
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 421108734
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -647704104, i32 851597490
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i1, i1* %2
  ret i1 %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::priority_queue.6"*, align 8
  store %"class.std::priority_queue.6"* %0, %"class.std::priority_queue.6"** %61, align 8
  %62 = load %"class.std::priority_queue.6"*, %"class.std::priority_queue.6"** %61, align 8
  %63 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %62, i32 0, i32 0
  %64 = call zeroext i1 @_ZNKSt6vectorI4elemSaIS0_EE5emptyEv(%"class.std::vector.7"* %63) #3
  store i32 2058792538, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.elem* @_ZNKSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE3topEv(%"class.std::priority_queue.6"*) #5 comdat align 2 {
  %2 = alloca %"class.std::priority_queue.6"*, align 8
  store %"class.std::priority_queue.6"* %0, %"class.std::priority_queue.6"** %2, align 8
  %3 = load %"class.std::priority_queue.6"*, %"class.std::priority_queue.6"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %3, i32 0, i32 0
  %5 = call dereferenceable(24) %struct.elem* @_ZNKSt6vectorI4elemSaIS0_EE5frontEv(%"class.std::vector.7"* %4) #3
  ret %struct.elem* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EE3popEv(%"class.std::priority_queue.6"*) #0 comdat align 2 {
  %2 = alloca %"class.std::priority_queue.6"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %5 = alloca %"struct.std::less.12", align 1
  store %"class.std::priority_queue.6"* %0, %"class.std::priority_queue.6"** %2, align 8
  %6 = load %"class.std::priority_queue.6"*, %"class.std::priority_queue.6"** %2, align 8
  %7 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %6, i32 0, i32 0
  %8 = call %struct.elem* @_ZNSt6vectorI4elemSaIS0_EE5beginEv(%"class.std::vector.7"* %7) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  store %struct.elem* %8, %struct.elem** %9, align 8
  %10 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %6, i32 0, i32 0
  %11 = call %struct.elem* @_ZNSt6vectorI4elemSaIS0_EE3endEv(%"class.std::vector.7"* %10) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %4, i32 0, i32 0
  store %struct.elem* %11, %struct.elem** %12, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %6, i32 0, i32 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  %15 = load %struct.elem*, %struct.elem** %14, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %4, i32 0, i32 0
  %17 = load %struct.elem*, %struct.elem** %16, align 8
  call void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.elem* %15, %struct.elem* %17)
  %18 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %6, i32 0, i32 0
  call void @_ZNSt6vectorI4elemSaIS0_EE8pop_backEv(%"class.std::vector.7"* %18) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 -59940069, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -59940069, label %16
    i32 1168070207, label %21
    i32 25260617, label %23
    i32 824941953, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp slt i64 %17, %18
  %20 = select i1 %19, i32 1168070207, i32 25260617
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 824941953, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i64*, i64** %6, align 8
  store i64* %24, i64** %5, align 8
  store i32 824941953, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i64*, i64** %5, align 8
  ret i64* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.15"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.15"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %2, align 8
  %5 = load %"class.std::vector.15"*, %"class.std::vector.15"** %2, align 8
  %6 = bitcast %"class.std::vector.15"* %5 to %"struct.std::_Vector_base.16"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.1"*, %"class.std::vector.1"** %8, align 8
  %10 = bitcast %"class.std::vector.15"* %5 to %"struct.std::_Vector_base.16"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.1"*, %"class.std::vector.1"** %12, align 8
  %14 = bitcast %"class.std::vector.15"* %5 to %"struct.std::_Vector_base.16"*
  %15 = call dereferenceable(1) %"class.std::allocator.17"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.16"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector.1"* %9, %"class.std::vector.1"* %13, %"class.std::allocator.17"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.15"* %5 to %"struct.std::_Vector_base.16"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.16"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.15"* %5 to %"struct.std::_Vector_base.16"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.16"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14priority_queueI4elemSt6vectorIS0_SaIS0_EESt4lessIS0_EED2Ev(%"class.std::priority_queue.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.71
  %5 = load i32, i32* @y.72
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 766285436, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 766285436, label %17
    i32 -295927566, label %25
    i32 160103773, label %44
    i32 -504330809, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -295927566, i32 -504330809
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::priority_queue.6"*, align 8
  store %"class.std::priority_queue.6"* %0, %"class.std::priority_queue.6"** %26, align 8
  %27 = load %"class.std::priority_queue.6"*, %"class.std::priority_queue.6"** %26, align 8
  %28 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %27, i32 0, i32 0
  call void @_ZNSt6vectorI4elemSaIS0_EED2Ev(%"class.std::vector.7"* %28) #3
  %29 = load i32, i32* @x.71
  %30 = load i32, i32* @y.72
  %31 = sub i32 %29, 1988985151
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1988985151
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 160103773, i32 -504330809
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"class.std::priority_queue.6"*, align 8
  store %"class.std::priority_queue.6"* %0, %"class.std::priority_queue.6"** %46, align 8
  %47 = load %"class.std::priority_queue.6"*, %"class.std::priority_queue.6"** %46, align 8
  %48 = getelementptr inbounds %"class.std::priority_queue.6", %"class.std::priority_queue.6"* %47, i32 0, i32 0
  call void @_ZNSt6vectorI4elemSaIS0_EED2Ev(%"class.std::vector.7"* %48) #3
  store i32 -295927566, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIiiEC2IiivEEOT_OT0_(%"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load i32*, i32** %5, align 8
  %10 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %9) #3
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load i32*, i32** %6, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %13) #3
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %12, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_(%"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load i32*, i32** %5, align 8
  %10 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %9) #3
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load i32*, i32** %6, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %13) #3
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind
declare double @pow(double, double) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxiEC2IxRivEEOT_OT0_(%"struct.std::pair.0"*, i64* dereferenceable(8), i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair.0"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %7, i32 0, i32 1
  %13 = load i32*, i32** %6, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %13) #3
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %12, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.85
  %5 = load i32, i32* @y.86
  %6 = sub i32 %4, 436540291
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 436540291
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1653571404, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1653571404, label %18
    i32 2046862772, label %38
    i32 52391240, label %57
    i32 -1603059386, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2046862772, i32 -1603059386
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %39, align 8
  %40 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.85
  %43 = load i32, i32* @y.86
  %44 = add i32 %42, 1248879084
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1248879084
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 52391240, i32 -1603059386
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %59, align 8
  %60 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %60, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %61)
  store i32 2046862772, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIxiEEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.std::pair.0"* null, %"struct.std::pair.0"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.std::pair.0"* null, %"struct.std::pair.0"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.std::pair.0"* null, %"struct.std::pair.0"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIxiEEC2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIxiES1_EvT_S3_RSaIT0_E(%"struct.std::pair.0"*, %"struct.std::pair.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.std::pair.0"*, align 8
  %5 = alloca %"struct.std::pair.0"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %4, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %4, align 8
  %8 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %5, align 8
  call void @_ZSt8_DestroyIPSt4pairIxiEEvT_S3_(%"struct.std::pair.0"* %7, %"struct.std::pair.0"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %13, align 8
  %15 = ptrtoint %"struct.std::pair.0"* %11 to i64
  %16 = ptrtoint %"struct.std::pair.0"* %14 to i64
  %17 = add i64 %15, -3220988692910549958
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -3220988692910549958
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 16
  invoke void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %5, %"struct.std::pair.0"* %8, i64 %21)
          to label %22 unwind label %77

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.99
  %24 = load i32, i32* @y.100
  %25 = sub i32 %23, -1743638085
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -1743638085
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %84

; <label>:49:                                     ; preds = %22, %84
  %50 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %50) #3
  %51 = load i32, i32* @x.99
  %52 = load i32, i32* @y.100
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %84

; <label>:76:                                     ; preds = %49
  ret void

; <label>:77:                                     ; preds = %1
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %3, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %4, align 4
  %81 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %81) #3
  br label %82

; <label>:82:                                     ; preds = %77
  %83 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %83) #11
  unreachable

; <label>:84:                                     ; preds = %49, %22
  %85 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %85) #3
  br label %49
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIxiEEvT_S3_(%"struct.std::pair.0"*, %"struct.std::pair.0"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.101
  %6 = load i32, i32* @y.102
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -210064531, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -210064531, label %18
    i32 359136648, label %26
    i32 460694349, label %46
    i32 -1209480930, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 359136648, i32 -1209480930
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::pair.0"*, align 8
  %28 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %27, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %28, align 8
  %29 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %27, align 8
  %30 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %28, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxiEEEvT_S5_(%"struct.std::pair.0"* %29, %"struct.std::pair.0"* %30)
  %31 = load i32, i32* @x.101
  %32 = load i32, i32* @y.102
  %33 = add i32 %31, -1828641497
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1828641497
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 460694349, i32 -1209480930
  store i32 %45, i32* %14
  br label %52

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca %"struct.std::pair.0"*, align 8
  %49 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %48, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %49, align 8
  %50 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %48, align 8
  %51 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %49, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxiEEEvT_S5_(%"struct.std::pair.0"* %50, %"struct.std::pair.0"* %51)
  store i32 359136648, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxiEEEvT_S5_(%"struct.std::pair.0"*, %"struct.std::pair.0"*) #5 comdat align 2 {
  %3 = alloca %"struct.std::pair.0"*, align 8
  %4 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %3, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"*, %"struct.std::pair.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::pair.0"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"struct.std::pair.0"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  store %"struct.std::pair.0"* %10, %"struct.std::pair.0"** %4
  %11 = alloca i32
  store i32 684769285, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 684769285, label %15
    i32 1649965476, label %19
    i32 -1759899908, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %4
  %17 = icmp ne %"struct.std::pair.0"* %16, null
  %18 = select i1 %17, i32 1649965476, i32 -1759899908
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %21 to %"class.std::allocator"*
  %23 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt4pairIxiEEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1) %22, %"struct.std::pair.0"* %23, i64 %24)
  store i32 -1759899908, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt4pairIxiEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxiEEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1), %"struct.std::pair.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"struct.std::pair.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* %8, %"struct.std::pair.0"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"*, %"struct.std::pair.0"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.111
  %7 = load i32, i32* @y.112
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1491628214, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1491628214, label %19
    i32 1566184448, label %27
    i32 1611523741, label %48
    i32 232362787, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1566184448, i32 232362787
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %29 = alloca %"struct.std::pair.0"*, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %28, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %28, align 8
  %32 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %29, align 8
  %33 = bitcast %"struct.std::pair.0"* %32 to i8*
  call void @_ZdlPv(i8* %33) #3
  %34 = load i32, i32* @x.111
  %35 = load i32, i32* @y.112
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1611523741, i32 232362787
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %51 = alloca %"struct.std::pair.0"*, align 8
  %52 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %50, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %51, align 8
  store i64 %2, i64* %52, align 8
  %53 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %50, align 8
  %54 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %51, align 8
  %55 = bitcast %"struct.std::pair.0"* %54 to i8*
  call void @_ZdlPv(i8* %55) #3
  store i32 1566184448, i32* %15
  br label %56

; <label>:56:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIxiEED2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorISt4pairIxiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  ret %"class.std::vector"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxiESaIS1_EEC2EOS3_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorISt4pairIxiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector"* %8 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EEC2EOS3_(%"struct.std::_Vector_base"* %6, %"struct.std::_Vector_base"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.std::pair.0"*, %"struct.std::pair.0"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.121
  %6 = load i32, i32* @y.122
  %7 = sub i32 %5, 1993512425
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1993512425
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1601140975, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %93
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1601140975, label %19
    i32 -629252308, label %39
    i32 -150981572, label %73
    i32 -1277911708, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %93

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -629252308, i32 -1277911708
  store i32 %38, i32* %15
  br label %93

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = alloca %"struct.std::less", align 1
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %46 = alloca %"struct.std::less", align 1
  %47 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %49, align 8
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %43 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessISt4pairIxiEEEENS0_15_Iter_comp_iterIT_EES7_()
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  %55 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %54, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %57 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %56, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_T0_(%"struct.std::pair.0"* %55, %"struct.std::pair.0"* %57)
  %58 = load i32, i32* @x.121
  %59 = load i32, i32* @y.122
  %60 = add i32 %58, 601083228
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 601083228
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -150981572, i32 -1277911708
  store i32 %72, i32* %15
  br label %93

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %76 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %77 = alloca %"struct.std::less", align 1
  %78 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %80 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %81 = alloca %"struct.std::less", align 1
  %82 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %75, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %83, align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %76, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %84, align 8
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator"* %78 to i8*
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator"* %79 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessISt4pairIxiEEEENS0_15_Iter_comp_iterIT_EES7_()
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %78, i32 0, i32 0
  %90 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %89, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %79, i32 0, i32 0
  %92 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %91, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_T0_(%"struct.std::pair.0"* %90, %"struct.std::pair.0"* %92)
  store i32 -629252308, i32* %15
  br label %93

; <label>:93:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE5beginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::pair.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.123
  %6 = load i32, i32* @y.124
  %7 = add i32 %5, 1063199629
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1063199629
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1643356842, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1643356842, label %19
    i32 -1765200534, label %39
    i32 604185465, label %63
    i32 1766947731, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1765200534, i32 1766947731
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  %42 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %43 = bitcast %"class.std::vector"* %42 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %44, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %40, %"struct.std::pair.0"** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %47 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %46, align 8
  store %"struct.std::pair.0"* %47, %"struct.std::pair.0"** %2
  %48 = load i32, i32* @x.123
  %49 = load i32, i32* @y.124
  %50 = add i32 %48, 537233546
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 537233546
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 604185465, i32 1766947731
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %2
  ret %"struct.std::pair.0"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %67 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %67, align 8
  %68 = load %"class.std::vector"*, %"class.std::vector"** %67, align 8
  %69 = bitcast %"class.std::vector"* %68 to %"struct.std::_Vector_base"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %70, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %66, %"struct.std::pair.0"** dereferenceable(8) %71) #3
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  %73 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %72, align 8
  store i32 -1765200534, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZNSt6vectorISt4pairIxiESaIS1_EE3endEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::pair.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.125
  %6 = load i32, i32* @y.126
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1028032967, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1028032967, label %18
    i32 -295563335, label %26
    i32 -1822549259, label %49
    i32 -979678462, label %51
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -295563335, i32 -979678462
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %28 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %31, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %27, %"struct.std::pair.0"** dereferenceable(8) %32) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  %34 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %33, align 8
  store %"struct.std::pair.0"* %34, %"struct.std::pair.0"** %2
  %35 = load i32, i32* @x.125
  %36 = load i32, i32* @y.126
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1822549259, i32 -979678462
  store i32 %48, i32* %14
  br label %60

; <label>:49:                                     ; preds = %15
  %50 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %2
  ret %"struct.std::pair.0"* %50

; <label>:51:                                     ; preds = %15
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %53 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %53, align 8
  %54 = load %"class.std::vector"*, %"class.std::vector"** %53, align 8
  %55 = bitcast %"class.std::vector"* %54 to %"struct.std::_Vector_base"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %56, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %52, %"struct.std::pair.0"** dereferenceable(8) %57) #3
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %52, i32 0, i32 0
  %59 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %58, align 8
  store i32 -295563335, i32* %14
  br label %60

; <label>:60:                                     ; preds = %51, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EEC2EOS3_(%"struct.std::_Vector_base"*, %"struct.std::_Vector_base"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store %"struct.std::_Vector_base"* %1, %"struct.std::_Vector_base"** %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaISt4pairIxiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %6, %"class.std::allocator"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %10, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaISt4pairIxiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  ret %"class.std::allocator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaISt4pairIxiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator"* dereferenceable(1) %7) #3
  call void @_ZNSaISt4pairIxiEEC2ERKS1_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.std::pair.0"* null, %"struct.std::pair.0"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.std::pair.0"* null, %"struct.std::pair.0"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.std::pair.0"* null, %"struct.std::pair.0"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt4pairIxiEEvRT_S4_(%"struct.std::pair.0"** dereferenceable(8) %6, %"struct.std::pair.0"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt4pairIxiEEvRT_S4_(%"struct.std::pair.0"** dereferenceable(8) %9, %"struct.std::pair.0"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt4pairIxiEEvRT_S4_(%"struct.std::pair.0"** dereferenceable(8) %12, %"struct.std::pair.0"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIxiEEC2ERKS1_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEEC2ERKS3_(%"class.__gnu_cxx::new_allocator"* %6, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEEC2ERKS3_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.137
  %6 = load i32, i32* @y.138
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 571518903, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 571518903, label %18
    i32 108348575, label %26
    i32 -1079899205, label %57
    i32 1297892413, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 108348575, i32 1297892413
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %28 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %27, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %30 = load i32, i32* @x.137
  %31 = load i32, i32* @y.138
  %32 = sub i32 %30, 6754375
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 6754375
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1079899205, i32 1297892413
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %60 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %59, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %60, align 8
  %61 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %59, align 8
  store i32 108348575, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt4pairIxiEEvRT_S4_(%"struct.std::pair.0"** dereferenceable(8), %"struct.std::pair.0"** dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.139
  %6 = load i32, i32* @y.140
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1345517739, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1345517739, label %18
    i32 -242915938, label %26
    i32 1787629012, label %55
    i32 607602085, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -242915938, i32 607602085
  store i32 %25, i32* %14
  br label %70

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::pair.0"**, align 8
  %28 = alloca %"struct.std::pair.0"**, align 8
  %29 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"** %0, %"struct.std::pair.0"*** %27, align 8
  store %"struct.std::pair.0"** %1, %"struct.std::pair.0"*** %28, align 8
  %30 = load %"struct.std::pair.0"**, %"struct.std::pair.0"*** %27, align 8
  %31 = call dereferenceable(8) %"struct.std::pair.0"** @_ZSt4moveIRPSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair.0"** dereferenceable(8) %30) #3
  %32 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %31, align 8
  store %"struct.std::pair.0"* %32, %"struct.std::pair.0"** %29, align 8
  %33 = load %"struct.std::pair.0"**, %"struct.std::pair.0"*** %28, align 8
  %34 = call dereferenceable(8) %"struct.std::pair.0"** @_ZSt4moveIRPSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair.0"** dereferenceable(8) %33) #3
  %35 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %34, align 8
  %36 = load %"struct.std::pair.0"**, %"struct.std::pair.0"*** %27, align 8
  store %"struct.std::pair.0"* %35, %"struct.std::pair.0"** %36, align 8
  %37 = call dereferenceable(8) %"struct.std::pair.0"** @_ZSt4moveIRPSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair.0"** dereferenceable(8) %29) #3
  %38 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %37, align 8
  %39 = load %"struct.std::pair.0"**, %"struct.std::pair.0"*** %28, align 8
  store %"struct.std::pair.0"* %38, %"struct.std::pair.0"** %39, align 8
  %40 = load i32, i32* @x.139
  %41 = load i32, i32* @y.140
  %42 = add i32 %40, 699989894
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 699989894
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1787629012, i32 607602085
  store i32 %54, i32* %14
  br label %70

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"struct.std::pair.0"**, align 8
  %58 = alloca %"struct.std::pair.0"**, align 8
  %59 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"** %0, %"struct.std::pair.0"*** %57, align 8
  store %"struct.std::pair.0"** %1, %"struct.std::pair.0"*** %58, align 8
  %60 = load %"struct.std::pair.0"**, %"struct.std::pair.0"*** %57, align 8
  %61 = call dereferenceable(8) %"struct.std::pair.0"** @_ZSt4moveIRPSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair.0"** dereferenceable(8) %60) #3
  %62 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %61, align 8
  store %"struct.std::pair.0"* %62, %"struct.std::pair.0"** %59, align 8
  %63 = load %"struct.std::pair.0"**, %"struct.std::pair.0"*** %58, align 8
  %64 = call dereferenceable(8) %"struct.std::pair.0"** @_ZSt4moveIRPSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair.0"** dereferenceable(8) %63) #3
  %65 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %64, align 8
  %66 = load %"struct.std::pair.0"**, %"struct.std::pair.0"*** %57, align 8
  store %"struct.std::pair.0"* %65, %"struct.std::pair.0"** %66, align 8
  %67 = call dereferenceable(8) %"struct.std::pair.0"** @_ZSt4moveIRPSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair.0"** dereferenceable(8) %59) #3
  %68 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %67, align 8
  %69 = load %"struct.std::pair.0"**, %"struct.std::pair.0"*** %58, align 8
  store %"struct.std::pair.0"* %68, %"struct.std::pair.0"** %69, align 8
  store i32 -242915938, i32* %14
  br label %70

; <label>:70:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair.0"** @_ZSt4moveIRPSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair.0"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::pair.0"**, align 8
  store %"struct.std::pair.0"** %0, %"struct.std::pair.0"*** %2, align 8
  %3 = load %"struct.std::pair.0"**, %"struct.std::pair.0"*** %2, align 8
  ret %"struct.std::pair.0"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_T0_(%"struct.std::pair.0"*, %"struct.std::pair.0"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %5 = alloca %"struct.std::pair.0"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"struct.std::pair.0"*
  %9 = alloca i64*
  %10 = alloca i64*
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %14 = alloca i1
  %15 = alloca i1
  %16 = load i32, i32* @x.143
  %17 = load i32, i32* @y.144
  %18 = sub i32 %16, 419878894
  %19 = sub i32 %18, 1
  %20 = add i32 %19, 419878894
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  store i1 %24, i1* %15
  %25 = icmp slt i32 %17, 10
  store i1 %25, i1* %14
  %26 = alloca i32
  store i32 1959340351, i32* %26
  br label %27

; <label>:27:                                     ; preds = %2, %313
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 1959340351, label %30
    i32 7553845, label %50
    i32 -1431686317, label %84
    i32 -548842858, label %87
    i32 -1817789542, label %115
    i32 1046674089, label %131
    i32 -316431486, label %132
    i32 -1427090576, label %145
    i32 -124556410, label %188
    i32 -1867246231, label %189
    i32 -1649689407, label %217
    i32 -954226051, label %241
    i32 -31804302, label %242
    i32 371163488, label %243
    i32 1509087001, label %258
    i32 404880247, label %259
  ]

; <label>:29:                                     ; preds = %27
  br label %313

; <label>:30:                                     ; preds = %27
  %31 = load volatile i1, i1* %15
  %32 = load volatile i1, i1* %14
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 7553845, i32 371163488
  store i32 %49, i32* %26
  br label %313

; <label>:50:                                     ; preds = %27
  %51 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %51, %"class.__gnu_cxx::__normal_iterator"** %13
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %52, %"class.__gnu_cxx::__normal_iterator"** %12
  %53 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %53, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %11
  %54 = alloca i64, align 8
  store i64* %54, i64** %10
  %55 = alloca i64, align 8
  store i64* %55, i64** %9
  %56 = alloca %"struct.std::pair.0", align 8
  store %"struct.std::pair.0"* %56, %"struct.std::pair.0"** %8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %57, %"class.__gnu_cxx::__normal_iterator"** %7
  %58 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %58, %"class.__gnu_cxx::__normal_iterator"** %6
  %59 = alloca %"struct.std::pair.0", align 8
  store %"struct.std::pair.0"* %59, %"struct.std::pair.0"** %5
  %60 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %60, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %4
  %61 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %61, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %62, align 8
  %63 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %63, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %64, align 8
  %65 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %66 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %67 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxiESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %66, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %65) #3
  %68 = icmp slt i64 %67, 2
  store i1 %68, i1* %3
  %69 = load i32, i32* @x.143
  %70 = load i32, i32* @y.144
  %71 = add i32 %69, -2109643306
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -2109643306
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 -1431686317, i32 371163488
  store i32 %83, i32* %26
  br label %313

; <label>:84:                                     ; preds = %27
  %85 = load volatile i1, i1* %3
  %86 = select i1 %85, i32 -548842858, i32 -316431486
  store i32 %86, i32* %26
  br label %313

; <label>:87:                                     ; preds = %27
  %88 = load i32, i32* @x.143
  %89 = load i32, i32* @y.144
  %90 = add i32 %88, 968843741
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, 968843741
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  %114 = select i1 %112, i32 -1817789542, i32 1509087001
  store i32 %114, i32* %26
  br label %313

; <label>:115:                                    ; preds = %27
  %116 = load i32, i32* @x.143
  %117 = load i32, i32* @y.144
  %118 = add i32 %116, -1160153083
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, -1160153083
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  %130 = select i1 %128, i32 1046674089, i32 1509087001
  store i32 %130, i32* %26
  br label %313

; <label>:131:                                    ; preds = %27
  store i32 -31804302, i32* %26
  br label %313

; <label>:132:                                    ; preds = %27
  %133 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %134 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %135 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxiESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %134, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %133) #3
  %136 = load volatile i64*, i64** %10
  store i64 %135, i64* %136, align 8
  %137 = load volatile i64*, i64** %10
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, -3533676945928595267
  %140 = sub i64 %139, 2
  %141 = sub i64 %140, -3533676945928595267
  %142 = sub nsw i64 %138, 2
  %143 = sdiv i64 %141, 2
  %144 = load volatile i64*, i64** %9
  store i64 %143, i64* %144, align 8
  store i32 -1427090576, i32* %26
  br label %313

; <label>:145:                                    ; preds = %27
  %146 = load volatile i64*, i64** %9
  %147 = load i64, i64* %146, align 8
  %148 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %149 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %148, i64 %147) #3
  %150 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %151 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %150, i32 0, i32 0
  store %"struct.std::pair.0"* %149, %"struct.std::pair.0"** %151, align 8
  %152 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %153 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %152) #3
  %154 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %153) #3
  %155 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %8
  %156 = bitcast %"struct.std::pair.0"* %155 to i8*
  %157 = bitcast %"struct.std::pair.0"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %156, i8* %157, i64 16, i32 8, i1 false)
  %158 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %159 = bitcast %"class.__gnu_cxx::__normal_iterator"* %158 to i8*
  %160 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %161 = bitcast %"class.__gnu_cxx::__normal_iterator"* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %159, i8* %161, i64 8, i32 8, i1 false)
  %162 = load volatile i64*, i64** %9
  %163 = load i64, i64* %162, align 8
  %164 = load volatile i64*, i64** %10
  %165 = load i64, i64* %164, align 8
  %166 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %8
  %167 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %166) #3
  %168 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %5
  %169 = bitcast %"struct.std::pair.0"* %168 to i8*
  %170 = bitcast %"struct.std::pair.0"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %169, i8* %170, i64 16, i32 8, i1 false)
  %171 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %4
  %172 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %171 to i8*
  %173 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %11
  %174 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %173 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %172, i8* %174, i64 1, i32 1, i1 false)
  %175 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %176 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %175, i32 0, i32 0
  %177 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %176, align 8
  %178 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %5
  %179 = bitcast %"struct.std::pair.0"* %178 to { i64, i32 }*
  %180 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %179, i32 0, i32 0
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %179, i32 0, i32 1
  %183 = load i32, i32* %182, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.0"* %177, i64 %163, i64 %165, i64 %181, i32 %183)
  %184 = load volatile i64*, i64** %9
  %185 = load i64, i64* %184, align 8
  %186 = icmp eq i64 %185, 0
  %187 = select i1 %186, i32 -124556410, i32 -1867246231
  store i32 %187, i32* %26
  br label %313

; <label>:188:                                    ; preds = %27
  store i32 -31804302, i32* %26
  br label %313

; <label>:189:                                    ; preds = %27
  %190 = load i32, i32* @x.143
  %191 = load i32, i32* @y.144
  %192 = add i32 %190, -248430981
  %193 = sub i32 %192, 1
  %194 = sub i32 %193, -248430981
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = xor i1 %198, true
  %201 = xor i1 %199, true
  %202 = xor i1 true, true
  %203 = and i1 %200, true
  %204 = and i1 %198, %202
  %205 = and i1 %201, true
  %206 = and i1 %199, %202
  %207 = or i1 %203, %204
  %208 = or i1 %205, %206
  %209 = xor i1 %207, %208
  %210 = or i1 %200, %201
  %211 = xor i1 %210, true
  %212 = or i1 true, %202
  %213 = and i1 %211, %212
  %214 = or i1 %209, %213
  %215 = or i1 %198, %199
  %216 = select i1 %214, i32 -1649689407, i32 404880247
  store i32 %216, i32* %26
  br label %313

; <label>:217:                                    ; preds = %27
  %218 = load volatile i64*, i64** %9
  %219 = load i64, i64* %218, align 8
  %220 = sub i64 0, %219
  %221 = sub i64 0, -1
  %222 = add i64 %220, %221
  %223 = sub i64 0, %222
  %224 = add nsw i64 %219, -1
  %225 = load volatile i64*, i64** %9
  store i64 %223, i64* %225, align 8
  %226 = load i32, i32* @x.143
  %227 = load i32, i32* @y.144
  %228 = sub i32 %226, 400306909
  %229 = sub i32 %228, 1
  %230 = add i32 %229, 400306909
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = and i1 %234, %235
  %237 = xor i1 %234, %235
  %238 = or i1 %236, %237
  %239 = or i1 %234, %235
  %240 = select i1 %238, i32 -954226051, i32 404880247
  store i32 %240, i32* %26
  br label %313

; <label>:241:                                    ; preds = %27
  store i32 -1427090576, i32* %26
  br label %313

; <label>:242:                                    ; preds = %27
  ret void

; <label>:243:                                    ; preds = %27
  %244 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %245 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %246 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %247 = alloca i64, align 8
  %248 = alloca i64, align 8
  %249 = alloca %"struct.std::pair.0", align 8
  %250 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %251 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %252 = alloca %"struct.std::pair.0", align 8
  %253 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %254 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %244, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %254, align 8
  %255 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %245, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %255, align 8
  %256 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxiESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %245, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %244) #3
  %257 = icmp slt i64 %256, 2
  store i32 7553845, i32* %26
  br label %313

; <label>:258:                                    ; preds = %27
  store i32 -1817789542, i32* %26
  br label %313

; <label>:259:                                    ; preds = %27
  %260 = load volatile i64*, i64** %9
  %261 = load i64, i64* %260, align 8
  %262 = sub i64 0, 3270256179562831633
  %263 = sub i64 %262, %261
  %264 = add i64 %263, 3270256179562831633
  %265 = sub i64 0, %261
  %266 = sub i64 0, -1
  %267 = sub i64 %264, %266
  %268 = add i64 %264, -1
  %269 = sub i64 %261, 561883011336014717
  %270 = sub i64 %269, -1
  %271 = add i64 %270, 561883011336014717
  %272 = sub i64 %261, -1
  %273 = mul i64 %271, -1
  %274 = add i64 0, 7984183110595109357
  %275 = sub i64 %274, %261
  %276 = sub i64 %275, 7984183110595109357
  %277 = sub i64 0, %261
  %278 = sub i64 0, %276
  %279 = sub i64 0, -1
  %280 = add i64 %278, %279
  %281 = sub i64 0, %280
  %282 = add i64 %276, -1
  %283 = shl i64 %261, -1
  %284 = sub i64 %261, -351430083360762825
  %285 = sub i64 %284, -1
  %286 = add i64 %285, -351430083360762825
  %287 = sub i64 %261, -1
  %288 = mul i64 %286, -1
  %289 = sub i64 %261, -5622265311012976439
  %290 = sub i64 %289, -1
  %291 = add i64 %290, -5622265311012976439
  %292 = sub i64 %261, -1
  %293 = mul i64 %291, -1
  %294 = sub i64 0, 5864993775418953435
  %295 = sub i64 %294, %261
  %296 = add i64 %295, 5864993775418953435
  %297 = sub i64 0, %261
  %298 = add i64 %296, -6556255480561904401
  %299 = add i64 %298, -1
  %300 = sub i64 %299, -6556255480561904401
  %301 = add i64 %296, -1
  %302 = shl i64 %261, -1
  %303 = sub i64 %261, -7558805958953762484
  %304 = sub i64 %303, -1
  %305 = add i64 %304, -7558805958953762484
  %306 = sub i64 %261, -1
  %307 = mul i64 %305, -1
  %308 = add i64 %261, 8223813281429379905
  %309 = add i64 %308, -1
  %310 = sub i64 %309, 8223813281429379905
  %311 = add nsw i64 %261, -1
  %312 = load volatile i64*, i64** %9
  store i64 %310, i64* %312, align 8
  store i32 -1649689407, i32* %26
  br label %313

; <label>:313:                                    ; preds = %259, %258, %243, %241, %217, %189, %188, %145, %132, %131, %115, %87, %84, %50, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessISt4pairIxiEEEENS0_15_Iter_comp_iterIT_EES7_() #0 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.145
  %4 = load i32, i32* @y.146
  %5 = sub i32 %3, -1633408586
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1633408586
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 68715527, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %72
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 68715527, label %17
    i32 954499565, label %37
    i32 1469623426, label %67
    i32 -270477822, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %72

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 954499565, i32 -270477822
  store i32 %36, i32* %13
  br label %72

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %39 = alloca %"struct.std::less", align 1
  %40 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessISt4pairIxiEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %38)
  %41 = load i32, i32* @x.145
  %42 = load i32, i32* @y.146
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1469623426, i32 -270477822
  store i32 %66, i32* %13
  br label %72

; <label>:67:                                     ; preds = %14
  ret void

; <label>:68:                                     ; preds = %14
  %69 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %70 = alloca %"struct.std::less", align 1
  %71 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessISt4pairIxiEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %69)
  store i32 954499565, i32* %13
  br label %72

; <label>:72:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPSt4pairIxiESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.147
  %7 = load i32, i32* @y.148
  %8 = add i32 %6, 1068620149
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1068620149
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1789441980, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %137
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1789441980, label %20
    i32 -1448747796, label %40
    i32 1009305529, label %70
    i32 303093582, label %72
  ]

; <label>:19:                                     ; preds = %17
  br label %137

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1448747796, i32 303093582
  store i32 %39, i32* %16
  br label %137

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %44 = call dereferenceable(8) %"struct.std::pair.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %43) #3
  %45 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %42, align 8
  %47 = call dereferenceable(8) %"struct.std::pair.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %46) #3
  %48 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %47, align 8
  %49 = ptrtoint %"struct.std::pair.0"* %45 to i64
  %50 = ptrtoint %"struct.std::pair.0"* %48 to i64
  %51 = add i64 %49, 7712243806004065648
  %52 = sub i64 %51, %50
  %53 = sub i64 %52, 7712243806004065648
  %54 = sub i64 %49, %50
  %55 = sdiv exact i64 %53, 16
  store i64 %55, i64* %3
  %56 = load i32, i32* @x.147
  %57 = load i32, i32* @y.148
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 1009305529, i32 303093582
  store i32 %69, i32* %16
  br label %137

; <label>:70:                                     ; preds = %17
  %71 = load volatile i64, i64* %3
  ret i64 %71

; <label>:72:                                     ; preds = %17
  %73 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %74 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %73, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %74, align 8
  %75 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %73, align 8
  %76 = call dereferenceable(8) %"struct.std::pair.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %75) #3
  %77 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %76, align 8
  %78 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %74, align 8
  %79 = call dereferenceable(8) %"struct.std::pair.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %78) #3
  %80 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %79, align 8
  %81 = ptrtoint %"struct.std::pair.0"* %77 to i64
  %82 = ptrtoint %"struct.std::pair.0"* %80 to i64
  %83 = add i64 0, -7909308434157350774
  %84 = sub i64 %83, %81
  %85 = sub i64 %84, -7909308434157350774
  %86 = sub i64 0, %81
  %87 = sub i64 0, %82
  %88 = sub i64 %85, %87
  %89 = add i64 %85, %82
  %90 = shl i64 %81, %82
  %91 = add i64 0, -2892884179846469757
  %92 = sub i64 %91, %81
  %93 = sub i64 %92, -2892884179846469757
  %94 = sub i64 0, %81
  %95 = sub i64 0, %82
  %96 = sub i64 %93, %95
  %97 = add i64 %93, %82
  %98 = sub i64 0, %81
  %99 = add i64 0, %98
  %100 = sub i64 0, %81
  %101 = sub i64 0, %82
  %102 = sub i64 %99, %101
  %103 = add i64 %99, %82
  %104 = sub i64 %81, -5619859932614301440
  %105 = sub i64 %104, %82
  %106 = add i64 %105, -5619859932614301440
  %107 = sub i64 %81, %82
  %108 = mul i64 %106, %82
  %109 = shl i64 %81, %82
  %110 = sub i64 0, %81
  %111 = add i64 0, %110
  %112 = sub i64 0, %81
  %113 = add i64 %111, 3042377275288665048
  %114 = add i64 %113, %82
  %115 = sub i64 %114, 3042377275288665048
  %116 = add i64 %111, %82
  %117 = sub i64 0, %81
  %118 = add i64 0, %117
  %119 = sub i64 0, %81
  %120 = sub i64 %118, -7445246610180433757
  %121 = add i64 %120, %82
  %122 = add i64 %121, -7445246610180433757
  %123 = add i64 %118, %82
  %124 = sub i64 0, %82
  %125 = add i64 %81, %124
  %126 = sub i64 %81, %82
  %127 = add i64 0, 5428065302057914170
  %128 = sub i64 %127, %125
  %129 = sub i64 %128, 5428065302057914170
  %130 = sub i64 0, %125
  %131 = sub i64 %129, -2230475674104731862
  %132 = add i64 %131, 16
  %133 = add i64 %132, -2230475674104731862
  %134 = add i64 %129, 16
  %135 = shl i64 %125, 16
  %136 = sdiv exact i64 %125, 16
  store i32 -1448747796, i32* %16
  br label %137

; <label>:137:                                    ; preds = %72, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.std::pair.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.149
  %6 = load i32, i32* @y.150
  %7 = sub i32 %5, 748891791
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 748891791
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1947801474, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1947801474, label %19
    i32 197184437, label %27
    i32 1664560927, label %44
    i32 826024118, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 197184437, i32 826024118
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %28, align 8
  %29 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %28, align 8
  store %"struct.std::pair.0"* %29, %"struct.std::pair.0"** %2
  %30 = load i32, i32* @x.149
  %31 = load i32, i32* @y.150
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1664560927, i32 826024118
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %2
  ret %"struct.std::pair.0"* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %47, align 8
  %48 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %47, align 8
  store i32 197184437, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::pair.0"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %9, i64 %10
  store %"struct.std::pair.0"* %11, %"struct.std::pair.0"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %3, %"struct.std::pair.0"** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %13 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %12, align 8
  ret %"struct.std::pair.0"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %4, align 8
  ret %"struct.std::pair.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.0"*, i64, i64, i64, i32) #0 comdat {
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"struct.std::pair.0", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %22 = alloca %"struct.std::pair.0", align 8
  %23 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %24 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %25 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %26, align 8
  %27 = bitcast %"struct.std::pair.0"* %9 to { i64, i32 }*
  %28 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 0
  store i64 %3, i64* %28, align 8
  %29 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 1
  store i32 %4, i32* %29, align 8
  store i64 %1, i64* %11, align 8
  store i64 %2, i64* %12, align 8
  %30 = load i64, i64* %11, align 8
  store i64 %30, i64* %13, align 8
  %31 = load i64, i64* %11, align 8
  store i64 %31, i64* %14, align 8
  %32 = alloca i32
  store i32 718164756, i32* %32
  br label %33

; <label>:33:                                     ; preds = %5, %307
  %34 = load i32, i32* %32
  switch i32 %34, label %35 [
    i32 718164756, label %36
    i32 989978919, label %51
    i32 431956900, label %87
    i32 -486846868, label %90
    i32 1720873521, label %113
    i32 41190608, label %120
    i32 -21218963, label %132
    i32 2200050, label %159
    i32 -2087377808, label %193
    i32 447560335, label %196
    i32 856214190, label %206
    i32 -2147305165, label %231
    i32 -693808441, label %248
    i32 2001164203, label %295
  ]

; <label>:35:                                     ; preds = %33
  br label %307

; <label>:36:                                     ; preds = %33
  %37 = load i32, i32* @x.155
  %38 = load i32, i32* @y.156
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 989978919, i32 -693808441
  store i32 %50, i32* %32
  br label %307

; <label>:51:                                     ; preds = %33
  %52 = load i64, i64* %14, align 8
  %53 = load i64, i64* %12, align 8
  %54 = sub i64 %53, -1056265649127871599
  %55 = sub i64 %54, 1
  %56 = add i64 %55, -1056265649127871599
  %57 = sub nsw i64 %53, 1
  %58 = sdiv i64 %56, 2
  %59 = icmp slt i64 %52, %58
  store i1 %59, i1* %7
  %60 = load i32, i32* @x.155
  %61 = load i32, i32* @y.156
  %62 = sub i32 %60, 1232753951
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 1232753951
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 431956900, i32 -693808441
  store i32 %86, i32* %32
  br label %307

; <label>:87:                                     ; preds = %33
  %88 = load volatile i1, i1* %7
  %89 = select i1 %88, i32 -486846868, i32 -21218963
  store i32 %89, i32* %32
  br label %307

; <label>:90:                                     ; preds = %33
  %91 = load i64, i64* %14, align 8
  %92 = sub i64 %91, 8677061550772506205
  %93 = add i64 %92, 1
  %94 = add i64 %93, 8677061550772506205
  %95 = add nsw i64 %91, 1
  %96 = mul nsw i64 2, %94
  store i64 %96, i64* %14, align 8
  %97 = load i64, i64* %14, align 8
  %98 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %97) #3
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %"struct.std::pair.0"* %98, %"struct.std::pair.0"** %99, align 8
  %100 = load i64, i64* %14, align 8
  %101 = sub i64 %100, -2777186704154355024
  %102 = sub i64 %101, 1
  %103 = add i64 %102, -2777186704154355024
  %104 = sub nsw i64 %100, 1
  %105 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %103) #3
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  store %"struct.std::pair.0"* %105, %"struct.std::pair.0"** %106, align 8
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %108 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %107, align 8
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %110 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %109, align 8
  %111 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessISt4pairIxiEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %10, %"struct.std::pair.0"* %108, %"struct.std::pair.0"* %110)
  %112 = select i1 %111, i32 1720873521, i32 41190608
  store i32 %112, i32* %32
  br label %307

; <label>:113:                                    ; preds = %33
  %114 = load i64, i64* %14, align 8
  %115 = sub i64 0, %114
  %116 = sub i64 0, -1
  %117 = add i64 %115, %116
  %118 = sub i64 0, %117
  %119 = add nsw i64 %114, -1
  store i64 %118, i64* %14, align 8
  store i32 41190608, i32* %32
  br label %307

; <label>:120:                                    ; preds = %33
  %121 = load i64, i64* %14, align 8
  %122 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %121) #3
  %123 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  store %"struct.std::pair.0"* %122, %"struct.std::pair.0"** %123, align 8
  %124 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %17) #3
  %125 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %124) #3
  %126 = load i64, i64* %11, align 8
  %127 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %126) #3
  %128 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  store %"struct.std::pair.0"* %127, %"struct.std::pair.0"** %128, align 8
  %129 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %18) #3
  %130 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNSt4pairIxiEaSEOS0_(%"struct.std::pair.0"* %129, %"struct.std::pair.0"* dereferenceable(16) %125) #3
  %131 = load i64, i64* %14, align 8
  store i64 %131, i64* %11, align 8
  store i32 718164756, i32* %32
  br label %307

; <label>:132:                                    ; preds = %33
  %133 = load i32, i32* @x.155
  %134 = load i32, i32* @y.156
  %135 = sub i32 0, 1
  %136 = add i32 %133, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 %133, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %134, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 true, true
  %145 = and i1 %142, true
  %146 = and i1 %140, %144
  %147 = and i1 %143, true
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 true, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  %158 = select i1 %156, i32 2200050, i32 2001164203
  store i32 %158, i32* %32
  br label %307

; <label>:159:                                    ; preds = %33
  %160 = load i64, i64* %12, align 8
  %161 = xor i64 1, -1
  %162 = xor i64 %160, %161
  %163 = and i64 %162, %160
  %164 = and i64 %160, 1
  %165 = icmp eq i64 %163, 0
  store i1 %165, i1* %6
  %166 = load i32, i32* @x.155
  %167 = load i32, i32* @y.156
  %168 = sub i32 %166, -134399698
  %169 = sub i32 %168, 1
  %170 = add i32 %169, -134399698
  %171 = sub i32 %166, 1
  %172 = mul i32 %166, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %167, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 true, true
  %179 = and i1 %176, true
  %180 = and i1 %174, %178
  %181 = and i1 %177, true
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 true, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  %192 = select i1 %190, i32 -2087377808, i32 2001164203
  store i32 %192, i32* %32
  br label %307

; <label>:193:                                    ; preds = %33
  %194 = load volatile i1, i1* %6
  %195 = select i1 %194, i32 447560335, i32 -2147305165
  store i32 %195, i32* %32
  br label %307

; <label>:196:                                    ; preds = %33
  %197 = load i64, i64* %14, align 8
  %198 = load i64, i64* %12, align 8
  %199 = sub i64 %198, 5950351580626663480
  %200 = sub i64 %199, 2
  %201 = add i64 %200, 5950351580626663480
  %202 = sub nsw i64 %198, 2
  %203 = sdiv i64 %201, 2
  %204 = icmp eq i64 %197, %203
  %205 = select i1 %204, i32 856214190, i32 -2147305165
  store i32 %205, i32* %32
  br label %307

; <label>:206:                                    ; preds = %33
  %207 = load i64, i64* %14, align 8
  %208 = add i64 %207, 6447400516567469857
  %209 = add i64 %208, 1
  %210 = sub i64 %209, 6447400516567469857
  %211 = add nsw i64 %207, 1
  %212 = mul nsw i64 2, %210
  store i64 %212, i64* %14, align 8
  %213 = load i64, i64* %14, align 8
  %214 = sub i64 0, 1
  %215 = add i64 %213, %214
  %216 = sub nsw i64 %213, 1
  %217 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %215) #3
  %218 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %"struct.std::pair.0"* %217, %"struct.std::pair.0"** %218, align 8
  %219 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %19) #3
  %220 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %219) #3
  %221 = load i64, i64* %11, align 8
  %222 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %8, i64 %221) #3
  %223 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  store %"struct.std::pair.0"* %222, %"struct.std::pair.0"** %223, align 8
  %224 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %20) #3
  %225 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNSt4pairIxiEaSEOS0_(%"struct.std::pair.0"* %224, %"struct.std::pair.0"* dereferenceable(16) %220) #3
  %226 = load i64, i64* %14, align 8
  %227 = add i64 %226, 121141615938435112
  %228 = sub i64 %227, 1
  %229 = sub i64 %228, 121141615938435112
  %230 = sub nsw i64 %226, 1
  store i64 %229, i64* %11, align 8
  store i32 -2147305165, i32* %32
  br label %307

; <label>:231:                                    ; preds = %33
  %232 = bitcast %"class.__gnu_cxx::__normal_iterator"* %21 to i8*
  %233 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %232, i8* %233, i64 8, i32 8, i1 false)
  %234 = load i64, i64* %11, align 8
  %235 = load i64, i64* %13, align 8
  %236 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %9) #3
  %237 = bitcast %"struct.std::pair.0"* %22 to i8*
  %238 = bitcast %"struct.std::pair.0"* %236 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %237, i8* %238, i64 16, i32 8, i1 false)
  %239 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %24 to i8*
  %240 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %239, i8* %240, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessISt4pairIxiEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE()
  %241 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  %242 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %241, align 8
  %243 = bitcast %"struct.std::pair.0"* %22 to { i64, i32 }*
  %244 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %243, i32 0, i32 0
  %245 = load i64, i64* %244, align 8
  %246 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %243, i32 0, i32 1
  %247 = load i32, i32* %246, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.0"* %242, i64 %234, i64 %235, i64 %245, i32 %247)
  ret void

; <label>:248:                                    ; preds = %33
  %249 = load i64, i64* %14, align 8
  %250 = load i64, i64* %12, align 8
  %251 = shl i64 %250, 1
  %252 = shl i64 %250, 1
  %253 = sub i64 0, 1
  %254 = add i64 %250, %253
  %255 = sub i64 %250, 1
  %256 = mul i64 %254, 1
  %257 = shl i64 %250, 1
  %258 = shl i64 %250, 1
  %259 = add i64 0, -3881979097468565910
  %260 = sub i64 %259, %250
  %261 = sub i64 %260, -3881979097468565910
  %262 = sub i64 0, %250
  %263 = sub i64 0, %261
  %264 = sub i64 0, 1
  %265 = add i64 %263, %264
  %266 = sub i64 0, %265
  %267 = add i64 %261, 1
  %268 = sub i64 %250, -5241895319786839373
  %269 = sub i64 %268, 1
  %270 = add i64 %269, -5241895319786839373
  %271 = sub i64 %250, 1
  %272 = mul i64 %270, 1
  %273 = add i64 0, -7302708387222095420
  %274 = sub i64 %273, %250
  %275 = sub i64 %274, -7302708387222095420
  %276 = sub i64 0, %250
  %277 = sub i64 %275, 4054324877729126809
  %278 = add i64 %277, 1
  %279 = add i64 %278, 4054324877729126809
  %280 = add i64 %275, 1
  %281 = sub i64 %250, 8859243368382548946
  %282 = sub i64 %281, 1
  %283 = add i64 %282, 8859243368382548946
  %284 = sub nsw i64 %250, 1
  %285 = sub i64 0, 2
  %286 = add i64 %283, %285
  %287 = sub i64 %283, 2
  %288 = mul i64 %286, 2
  %289 = sub i64 0, 2
  %290 = add i64 %283, %289
  %291 = sub i64 %283, 2
  %292 = mul i64 %290, 2
  %293 = sdiv i64 %283, 2
  %294 = icmp slt i64 %249, %293
  store i32 989978919, i32* %32
  br label %307

; <label>:295:                                    ; preds = %33
  %296 = load i64, i64* %12, align 8
  %297 = add i64 %296, 1486356247436736987
  %298 = sub i64 %297, 1
  %299 = sub i64 %298, 1486356247436736987
  %300 = sub i64 %296, 1
  %301 = mul i64 %299, 1
  %302 = xor i64 1, -1
  %303 = xor i64 %296, %302
  %304 = and i64 %303, %296
  %305 = and i64 %296, 1
  %306 = icmp eq i64 %304, 0
  store i32 2200050, i32* %32
  br label %307

; <label>:307:                                    ; preds = %295, %248, %206, %196, %193, %159, %132, %120, %113, %90, %87, %51, %36, %35
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"struct.std::pair.0"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.std::pair.0"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"struct.std::pair.0"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"struct.std::pair.0"** %1, %"struct.std::pair.0"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair.0"**, %"struct.std::pair.0"*** %4, align 8
  %8 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  store %"struct.std::pair.0"* %8, %"struct.std::pair.0"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessISt4pairIxiEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.std::pair.0"*, %"struct.std::pair.0"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %8, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %9 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %10 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9, i32 0, i32 0
  %11 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %12 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %13 = call zeroext i1 @_ZNKSt4lessISt4pairIxiEEclERKS1_S4_(%"struct.std::less"* %10, %"struct.std::pair.0"* dereferenceable(16) %11, %"struct.std::pair.0"* dereferenceable(16) %12)
  ret i1 %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.0"* @_ZNSt4pairIxiEaSEOS0_(%"struct.std::pair.0"*, %"struct.std::pair.0"* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca %"struct.std::pair.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.163
  %7 = load i32, i32* @y.164
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1985394093, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1985394093, label %19
    i32 533181736, label %27
    i32 -319589898, label %57
    i32 1497500927, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 533181736, i32 1497500927
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair.0"*, align 8
  %29 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %28, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %29, align 8
  %30 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %28, align 8
  store %"struct.std::pair.0"* %30, %"struct.std::pair.0"** %3
  %31 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %29, align 8
  %32 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %31, i32 0, i32 0
  %33 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %32) #3
  %34 = load i64, i64* %33, align 8
  %35 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %3
  %36 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %35, i32 0, i32 0
  store i64 %34, i64* %36, align 8
  %37 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %29, align 8
  %38 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %37, i32 0, i32 1
  %39 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %38) #3
  %40 = load i32, i32* %39, align 4
  %41 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %3
  %42 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %41, i32 0, i32 1
  store i32 %40, i32* %42, align 8
  %43 = load i32, i32* @x.163
  %44 = load i32, i32* @y.164
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -319589898, i32 1497500927
  store i32 %56, i32* %15
  br label %73

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %3
  ret %"struct.std::pair.0"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::pair.0"*, align 8
  %61 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %60, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %61, align 8
  %62 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %60, align 8
  %63 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %61, align 8
  %64 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %63, i32 0, i32 0
  %65 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %64) #3
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %62, i32 0, i32 0
  store i64 %66, i64* %67, align 8
  %68 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %61, align 8
  %69 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %68, i32 0, i32 1
  %70 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %69) #3
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %62, i32 0, i32 1
  store i32 %71, i32* %72, align 8
  store i32 533181736, i32* %15
  br label %73

; <label>:73:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.0"*, i64, i64, i64, i32) #0 comdat {
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %10 = alloca i64*
  %11 = alloca i64*
  %12 = alloca i64*
  %13 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*
  %14 = alloca %"struct.std::pair.0"*
  %15 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %16 = alloca i1
  %17 = alloca i1
  %18 = load i32, i32* @x.165
  %19 = load i32, i32* @y.166
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  store i1 %25, i1* %17
  %26 = icmp slt i32 %19, 10
  store i1 %26, i1* %16
  %27 = alloca i32
  store i32 -973542064, i32* %27
  %28 = alloca i1
  br label %29

; <label>:29:                                     ; preds = %5, %345
  %30 = load i32, i32* %27
  switch i32 %30, label %31 [
    i32 -973542064, label %32
    i32 -1383082055, label %52
    i32 -450502477, label %94
    i32 960883194, label %95
    i32 383900831, label %102
    i32 -773016209, label %115
    i32 -1065643704, label %118
    i32 -1550524791, label %134
    i32 456259940, label %190
    i32 152685830, label %191
    i32 749861774, label %203
    i32 1266594468, label %267
  ]

; <label>:31:                                     ; preds = %29
  br label %345

; <label>:32:                                     ; preds = %29
  %33 = load volatile i1, i1* %17
  %34 = load volatile i1, i1* %16
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 -1383082055, i32 749861774
  store i32 %51, i32* %27
  br label %345

; <label>:52:                                     ; preds = %29
  %53 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %53, %"class.__gnu_cxx::__normal_iterator"** %15
  %54 = alloca %"struct.std::pair.0", align 8
  store %"struct.std::pair.0"* %54, %"struct.std::pair.0"** %14
  %55 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %55, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %13
  %56 = alloca i64, align 8
  store i64* %56, i64** %12
  %57 = alloca i64, align 8
  store i64* %57, i64** %11
  %58 = alloca i64, align 8
  store i64* %58, i64** %10
  %59 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %59, %"class.__gnu_cxx::__normal_iterator"** %9
  %60 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %60, %"class.__gnu_cxx::__normal_iterator"** %8
  %61 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %61, %"class.__gnu_cxx::__normal_iterator"** %7
  %62 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %62, %"class.__gnu_cxx::__normal_iterator"** %6
  %63 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %63, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %64, align 8
  %65 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %14
  %66 = bitcast %"struct.std::pair.0"* %65 to { i64, i32 }*
  %67 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %66, i32 0, i32 0
  store i64 %3, i64* %67, align 8
  %68 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %66, i32 0, i32 1
  store i32 %4, i32* %68, align 8
  %69 = load volatile i64*, i64** %12
  store i64 %1, i64* %69, align 8
  %70 = load volatile i64*, i64** %11
  store i64 %2, i64* %70, align 8
  %71 = load volatile i64*, i64** %12
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %72, 9063739554018796331
  %74 = sub i64 %73, 1
  %75 = add i64 %74, 9063739554018796331
  %76 = sub nsw i64 %72, 1
  %77 = sdiv i64 %75, 2
  %78 = load volatile i64*, i64** %10
  store i64 %77, i64* %78, align 8
  %79 = load i32, i32* @x.165
  %80 = load i32, i32* @y.166
  %81 = sub i32 %79, 2008090771
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 2008090771
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 -450502477, i32 749861774
  store i32 %93, i32* %27
  br label %345

; <label>:94:                                     ; preds = %29
  store i32 960883194, i32* %27
  br label %345

; <label>:95:                                     ; preds = %29
  %96 = load volatile i64*, i64** %12
  %97 = load i64, i64* %96, align 8
  %98 = load volatile i64*, i64** %11
  %99 = load i64, i64* %98, align 8
  %100 = icmp sgt i64 %97, %99
  %101 = select i1 %100, i32 383900831, i32 -773016209
  store i32 %101, i32* %27
  store i1 false, i1* %28
  br label %345

; <label>:102:                                    ; preds = %29
  %103 = load volatile i64*, i64** %10
  %104 = load i64, i64* %103, align 8
  %105 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %106 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %105, i64 %104) #3
  %107 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %108 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %107, i32 0, i32 0
  store %"struct.std::pair.0"* %106, %"struct.std::pair.0"** %108, align 8
  %109 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %109, i32 0, i32 0
  %111 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %110, align 8
  %112 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %14
  %113 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %13
  %114 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessISt4pairIxiEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %113, %"struct.std::pair.0"* %111, %"struct.std::pair.0"* dereferenceable(16) %112)
  store i32 -773016209, i32* %27
  store i1 %114, i1* %28
  br label %345

; <label>:115:                                    ; preds = %29
  %116 = load i1, i1* %28
  %117 = select i1 %116, i32 -1065643704, i32 152685830
  store i32 %117, i32* %27
  br label %345

; <label>:118:                                    ; preds = %29
  %119 = load i32, i32* @x.165
  %120 = load i32, i32* @y.166
  %121 = add i32 %119, 378505213
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, 378505213
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 -1550524791, i32 1266594468
  store i32 %133, i32* %27
  br label %345

; <label>:134:                                    ; preds = %29
  %135 = load volatile i64*, i64** %10
  %136 = load i64, i64* %135, align 8
  %137 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %138 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %137, i64 %136) #3
  %139 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %140 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %139, i32 0, i32 0
  store %"struct.std::pair.0"* %138, %"struct.std::pair.0"** %140, align 8
  %141 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %142 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %141) #3
  %143 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %142) #3
  %144 = load volatile i64*, i64** %12
  %145 = load i64, i64* %144, align 8
  %146 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %147 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %146, i64 %145) #3
  %148 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %149 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %148, i32 0, i32 0
  store %"struct.std::pair.0"* %147, %"struct.std::pair.0"** %149, align 8
  %150 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %151 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %150) #3
  %152 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNSt4pairIxiEaSEOS0_(%"struct.std::pair.0"* %151, %"struct.std::pair.0"* dereferenceable(16) %143) #3
  %153 = load volatile i64*, i64** %10
  %154 = load i64, i64* %153, align 8
  %155 = load volatile i64*, i64** %12
  store i64 %154, i64* %155, align 8
  %156 = load volatile i64*, i64** %12
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 0, 1
  %159 = add i64 %157, %158
  %160 = sub nsw i64 %157, 1
  %161 = sdiv i64 %159, 2
  %162 = load volatile i64*, i64** %10
  store i64 %161, i64* %162, align 8
  %163 = load i32, i32* @x.165
  %164 = load i32, i32* @y.166
  %165 = sub i32 %163, 1705742188
  %166 = sub i32 %165, 1
  %167 = add i32 %166, 1705742188
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 false, true
  %176 = and i1 %173, false
  %177 = and i1 %171, %175
  %178 = and i1 %174, false
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 false, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  %189 = select i1 %187, i32 456259940, i32 1266594468
  store i32 %189, i32* %27
  br label %345

; <label>:190:                                    ; preds = %29
  store i32 960883194, i32* %27
  br label %345

; <label>:191:                                    ; preds = %29
  %192 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %14
  %193 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %192) #3
  %194 = load volatile i64*, i64** %12
  %195 = load i64, i64* %194, align 8
  %196 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %197 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %196, i64 %195) #3
  %198 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %199 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %198, i32 0, i32 0
  store %"struct.std::pair.0"* %197, %"struct.std::pair.0"** %199, align 8
  %200 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %201 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %200) #3
  %202 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNSt4pairIxiEaSEOS0_(%"struct.std::pair.0"* %201, %"struct.std::pair.0"* dereferenceable(16) %193) #3
  ret void

; <label>:203:                                    ; preds = %29
  %204 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %205 = alloca %"struct.std::pair.0", align 8
  %206 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %207 = alloca i64, align 8
  %208 = alloca i64, align 8
  %209 = alloca i64, align 8
  %210 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %211 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %212 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %213 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %214 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %204, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %214, align 8
  %215 = bitcast %"struct.std::pair.0"* %205 to { i64, i32 }*
  %216 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %215, i32 0, i32 0
  store i64 %3, i64* %216, align 8
  %217 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %215, i32 0, i32 1
  store i32 %4, i32* %217, align 8
  store i64 %1, i64* %207, align 8
  store i64 %2, i64* %208, align 8
  %218 = load i64, i64* %207, align 8
  %219 = shl i64 %218, 1
  %220 = shl i64 %218, 1
  %221 = sub i64 %218, -8815659544756294791
  %222 = sub i64 %221, 1
  %223 = add i64 %222, -8815659544756294791
  %224 = sub i64 %218, 1
  %225 = mul i64 %223, 1
  %226 = shl i64 %218, 1
  %227 = sub i64 0, %218
  %228 = add i64 0, %227
  %229 = sub i64 0, %218
  %230 = sub i64 0, 1
  %231 = sub i64 %228, %230
  %232 = add i64 %228, 1
  %233 = add i64 %218, 1122099816974162442
  %234 = sub i64 %233, 1
  %235 = sub i64 %234, 1122099816974162442
  %236 = sub nsw i64 %218, 1
  %237 = add i64 0, 4936774556229122312
  %238 = sub i64 %237, %235
  %239 = sub i64 %238, 4936774556229122312
  %240 = sub i64 0, %235
  %241 = sub i64 0, %239
  %242 = sub i64 0, 2
  %243 = add i64 %241, %242
  %244 = sub i64 0, %243
  %245 = add i64 %239, 2
  %246 = add i64 0, 4714701266554944653
  %247 = sub i64 %246, %235
  %248 = sub i64 %247, 4714701266554944653
  %249 = sub i64 0, %235
  %250 = sub i64 0, 2
  %251 = sub i64 %248, %250
  %252 = add i64 %248, 2
  %253 = sub i64 0, 2
  %254 = add i64 %235, %253
  %255 = sub i64 %235, 2
  %256 = mul i64 %254, 2
  %257 = shl i64 %235, 2
  %258 = add i64 0, 2065002171527786288
  %259 = sub i64 %258, %235
  %260 = sub i64 %259, 2065002171527786288
  %261 = sub i64 0, %235
  %262 = add i64 %260, -8300535376494070156
  %263 = add i64 %262, 2
  %264 = sub i64 %263, -8300535376494070156
  %265 = add i64 %260, 2
  %266 = sdiv i64 %235, 2
  store i64 %266, i64* %209, align 8
  store i32 -1383082055, i32* %27
  br label %345

; <label>:267:                                    ; preds = %29
  %268 = load volatile i64*, i64** %10
  %269 = load i64, i64* %268, align 8
  %270 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %271 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %270, i64 %269) #3
  %272 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %273 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %272, i32 0, i32 0
  store %"struct.std::pair.0"* %271, %"struct.std::pair.0"** %273, align 8
  %274 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %275 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %274) #3
  %276 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %275) #3
  %277 = load volatile i64*, i64** %12
  %278 = load i64, i64* %277, align 8
  %279 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %280 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %279, i64 %278) #3
  %281 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %282 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %281, i32 0, i32 0
  store %"struct.std::pair.0"* %280, %"struct.std::pair.0"** %282, align 8
  %283 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %284 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %283) #3
  %285 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNSt4pairIxiEaSEOS0_(%"struct.std::pair.0"* %284, %"struct.std::pair.0"* dereferenceable(16) %276) #3
  %286 = load volatile i64*, i64** %10
  %287 = load i64, i64* %286, align 8
  %288 = load volatile i64*, i64** %12
  store i64 %287, i64* %288, align 8
  %289 = load volatile i64*, i64** %12
  %290 = load i64, i64* %289, align 8
  %291 = shl i64 %290, 1
  %292 = add i64 %290, 516609664908868442
  %293 = sub i64 %292, 1
  %294 = sub i64 %293, 516609664908868442
  %295 = sub i64 %290, 1
  %296 = mul i64 %294, 1
  %297 = add i64 %290, 2698919142190494241
  %298 = sub i64 %297, 1
  %299 = sub i64 %298, 2698919142190494241
  %300 = sub i64 %290, 1
  %301 = mul i64 %299, 1
  %302 = add i64 %290, -8919937878156834931
  %303 = sub i64 %302, 1
  %304 = sub i64 %303, -8919937878156834931
  %305 = sub nsw i64 %290, 1
  %306 = sub i64 0, -1959093962407627741
  %307 = sub i64 %306, %304
  %308 = add i64 %307, -1959093962407627741
  %309 = sub i64 0, %304
  %310 = sub i64 %308, -6491893213060411239
  %311 = add i64 %310, 2
  %312 = add i64 %311, -6491893213060411239
  %313 = add i64 %308, 2
  %314 = sub i64 0, %304
  %315 = add i64 0, %314
  %316 = sub i64 0, %304
  %317 = add i64 %315, -8120396014680024467
  %318 = add i64 %317, 2
  %319 = sub i64 %318, -8120396014680024467
  %320 = add i64 %315, 2
  %321 = sub i64 0, 2
  %322 = add i64 %304, %321
  %323 = sub i64 %304, 2
  %324 = mul i64 %322, 2
  %325 = add i64 0, -1219102787650802584
  %326 = sub i64 %325, %304
  %327 = sub i64 %326, -1219102787650802584
  %328 = sub i64 0, %304
  %329 = sub i64 %327, -2260912487554106864
  %330 = add i64 %329, 2
  %331 = add i64 %330, -2260912487554106864
  %332 = add i64 %327, 2
  %333 = sub i64 0, 2
  %334 = add i64 %304, %333
  %335 = sub i64 %304, 2
  %336 = mul i64 %334, 2
  %337 = sub i64 0, %304
  %338 = add i64 0, %337
  %339 = sub i64 0, %304
  %340 = sub i64 0, 2
  %341 = sub i64 %338, %340
  %342 = add i64 %338, 2
  %343 = sdiv i64 %304, 2
  %344 = load volatile i64*, i64** %10
  store i64 %343, i64* %344, align 8
  store i32 -1550524791, i32* %27
  br label %345

; <label>:345:                                    ; preds = %267, %203, %190, %134, %118, %115, %102, %95, %94, %52, %32, %31
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessISt4pairIxiEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE() #0 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.167
  %4 = load i32, i32* @y.168
  %5 = add i32 %3, -577307294
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -577307294
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -328342432, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %51
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -328342432, label %17
    i32 1058762501, label %25
    i32 1153762974, label %45
    i32 -1862198511, label %46
  ]

; <label>:16:                                     ; preds = %14
  br label %51

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1058762501, i32 -1862198511
  store i32 %24, i32* %13
  br label %51

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %27 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %28 = alloca %"struct.std::less", align 1
  %29 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %27, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessISt4pairIxiEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %26)
  %30 = load i32, i32* @x.167
  %31 = load i32, i32* @y.168
  %32 = add i32 %30, -1402508246
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1402508246
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1153762974, i32 -1862198511
  store i32 %44, i32* %13
  br label %51

; <label>:45:                                     ; preds = %14
  ret void

; <label>:46:                                     ; preds = %14
  %47 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %48 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %49 = alloca %"struct.std::less", align 1
  %50 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %48, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessISt4pairIxiEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %47)
  store i32 1058762501, i32* %13
  br label %51

; <label>:51:                                     ; preds = %46, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessISt4pairIxiEEclERKS1_S4_(%"struct.std::less"*, %"struct.std::pair.0"* dereferenceable(16), %"struct.std::pair.0"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.169
  %8 = load i32, i32* @y.170
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -199156071, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %61
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -199156071, label %20
    i32 -154995737, label %28
    i32 -609215030, label %51
    i32 637774660, label %53
  ]

; <label>:19:                                     ; preds = %17
  br label %61

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -154995737, i32 637774660
  store i32 %27, i32* %16
  br label %61

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::less"*, align 8
  %30 = alloca %"struct.std::pair.0"*, align 8
  %31 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %29, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %30, align 8
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %31, align 8
  %32 = load %"struct.std::less"*, %"struct.std::less"** %29, align 8
  %33 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %30, align 8
  %34 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %31, align 8
  %35 = call zeroext i1 @_ZStltIxiEbRKSt4pairIT_T0_ES5_(%"struct.std::pair.0"* dereferenceable(16) %33, %"struct.std::pair.0"* dereferenceable(16) %34)
  store i1 %35, i1* %4
  %36 = load i32, i32* @x.169
  %37 = load i32, i32* @y.170
  %38 = sub i32 %36, -1528406952
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1528406952
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -609215030, i32 637774660
  store i32 %50, i32* %16
  br label %61

; <label>:51:                                     ; preds = %17
  %52 = load volatile i1, i1* %4
  ret i1 %52

; <label>:53:                                     ; preds = %17
  %54 = alloca %"struct.std::less"*, align 8
  %55 = alloca %"struct.std::pair.0"*, align 8
  %56 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %54, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %55, align 8
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %56, align 8
  %57 = load %"struct.std::less"*, %"struct.std::less"** %54, align 8
  %58 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %55, align 8
  %59 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %56, align 8
  %60 = call zeroext i1 @_ZStltIxiEbRKSt4pairIT_T0_ES5_(%"struct.std::pair.0"* dereferenceable(16) %58, %"struct.std::pair.0"* dereferenceable(16) %59)
  store i32 -154995737, i32* %16
  br label %61

; <label>:61:                                     ; preds = %53, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZStltIxiEbRKSt4pairIT_T0_ES5_(%"struct.std::pair.0"* dereferenceable(16), %"struct.std::pair.0"* dereferenceable(16)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"struct.std::pair.0"*, align 8
  %7 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %6, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %7, align 8
  %8 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %9 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %8, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %12 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %4
  %14 = alloca i32
  store i32 -347847107, i32* %14
  %15 = alloca i1
  %16 = alloca i1
  br label %17

; <label>:17:                                     ; preds = %2, %80
  %18 = load i32, i32* %14
  switch i32 %18, label %19 [
    i32 -347847107, label %20
    i32 -1163823310, label %25
    i32 -930974842, label %34
    i32 532459968, label %42
    i32 -1590217634, label %44
    i32 -2090026200, label %61
    i32 -391250555, label %77
    i32 281826543, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %80

; <label>:20:                                     ; preds = %17
  %21 = load volatile i64, i64* %5
  %22 = load volatile i64, i64* %4
  %23 = icmp slt i64 %21, %22
  %24 = select i1 %23, i32 -1590217634, i32 -1163823310
  store i32 %24, i32* %14
  store i1 true, i1* %16
  br label %80

; <label>:25:                                     ; preds = %17
  %26 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %27 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %30 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %29, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp slt i64 %28, %31
  %33 = select i1 %32, i32 532459968, i32 -930974842
  store i32 %33, i32* %14
  store i1 false, i1* %15
  br label %80

; <label>:34:                                     ; preds = %17
  %35 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %36 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %35, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %39 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %37, %40
  store i32 532459968, i32* %14
  store i1 %41, i1* %15
  br label %80

; <label>:42:                                     ; preds = %17
  %43 = load i1, i1* %15
  store i32 -1590217634, i32* %14
  store i1 %43, i1* %16
  br label %80

; <label>:44:                                     ; preds = %17
  %45 = load i1, i1* %16
  store i1 %45, i1* %3
  %46 = load i32, i32* @x.171
  %47 = load i32, i32* @y.172
  %48 = sub i32 %46, 157978209
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 157978209
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -2090026200, i32 281826543
  store i32 %60, i32* %14
  br label %80

; <label>:61:                                     ; preds = %17
  %62 = load i32, i32* @x.171
  %63 = load i32, i32* @y.172
  %64 = sub i32 %62, 252452868
  %65 = sub i32 %64, 1
  %66 = add i32 %65, 252452868
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 -391250555, i32 281826543
  store i32 %76, i32* %14
  br label %80

; <label>:77:                                     ; preds = %17
  %78 = load volatile i1, i1* %3
  ret i1 %78

; <label>:79:                                     ; preds = %17
  store i32 -2090026200, i32* %14
  br label %80

; <label>:80:                                     ; preds = %79, %61, %44, %42, %34, %25, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessISt4pairIxiEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.std::pair.0"*, %"struct.std::pair.0"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %6 = alloca %"struct.std::pair.0"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %7, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %6, align 8
  %8 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  %9 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, i32 0, i32 0
  %10 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %11 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %12 = call zeroext i1 @_ZNKSt4lessISt4pairIxiEEclERKS1_S4_(%"struct.std::less"* %9, %"struct.std::pair.0"* dereferenceable(16) %10, %"struct.std::pair.0"* dereferenceable(16) %11)
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessISt4pairIxiEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessISt4pairIxiEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.4"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.4"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.2"*, i64, %"class.std::allocator.3"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.2"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.3"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.3"* %2, %"class.std::allocator.3"** %6, align 8
  %9 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %6, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, %"class.std::allocator.3"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.2"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.183
  %20 = load i32, i32* @y.184
  %21 = add i32 %19, -1469060221
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -1469060221
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %64

; <label>:33:                                     ; preds = %18, %64
  %34 = load i8*, i8** %7, align 8
  %35 = load i32, i32* %8, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  %38 = load i32, i32* @x.183
  %39 = load i32, i32* @y.184
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %64

; <label>:63:                                     ; preds = %33
  resume { i8*, i32 } %37

; <label>:64:                                     ; preds = %33, %18
  %65 = load i8*, i8** %7, align 8
  %66 = load i32, i32* %8, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.1"*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::vector.1"*, %"class.std::vector.1"** %4, align 8
  %8 = bitcast %"class.std::vector.1"* %7 to %"struct.std::_Vector_base.2"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i64*, i64** %6, align 8
  %14 = bitcast %"class.std::vector.1"* %7 to %"struct.std::_Vector_base.2"*
  %15 = call dereferenceable(1) %"class.std::allocator.3"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.2"* %14) #3
  %16 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %11, i64 %12, i64* dereferenceable(8) %13, %"class.std::allocator.3"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.1"* %7 to %"struct.std::_Vector_base.2"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %18, i32 0, i32 1
  store i64* %16, i64** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.2"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.2"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %2, align 8
  %5 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = ptrtoint i64* %11 to i64
  %16 = ptrtoint i64* %14 to i64
  %17 = add i64 %15, 4150973921097648708
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 4150973921097648708
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.2"* %5, i64* %8, i64 %21)
          to label %22 unwind label %53

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.187
  %24 = load i32, i32* @y.188
  %25 = sub i32 %23, -1234193731
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -1234193731
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %101

; <label>:37:                                     ; preds = %22, %101
  %38 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %38) #3
  %39 = load i32, i32* @x.187
  %40 = load i32, i32* @y.188
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %101

; <label>:52:                                     ; preds = %37
  ret void

; <label>:53:                                     ; preds = %1
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %3, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %4, align 4
  %57 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %57) #3
  br label %58

; <label>:58:                                     ; preds = %53
  %59 = load i32, i32* @x.187
  %60 = load i32, i32* @y.188
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %103

; <label>:84:                                     ; preds = %58, %103
  %85 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %85) #11
  %86 = load i32, i32* @x.187
  %87 = load i32, i32* @y.188
  %88 = sub i32 %86, -452924870
  %89 = sub i32 %88, 1
  %90 = add i32 %89, -452924870
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %103

; <label>:100:                                    ; preds = %84
  unreachable

; <label>:101:                                    ; preds = %37, %22
  %102 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %102) #3
  br label %37

; <label>:103:                                    ; preds = %84, %58
  %104 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %104) #11
  br label %84
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.3"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.189
  %6 = load i32, i32* @y.190
  %7 = sub i32 %5, 1235182603
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1235182603
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2033093187, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2033093187, label %19
    i32 -1794585067, label %27
    i32 -1531890526, label %62
    i32 777374018, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1794585067, i32 777374018
  store i32 %26, i32* %15
  br label %72

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %29 = alloca %"class.std::allocator.3"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %28, align 8
  store %"class.std::allocator.3"* %1, %"class.std::allocator.3"** %29, align 8
  %30 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %30 to %"class.std::allocator.3"*
  %32 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %29, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.3"* %31, %"class.std::allocator.3"* dereferenceable(1) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %30, i32 0, i32 0
  store i64* null, i64** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %30, i32 0, i32 1
  store i64* null, i64** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %30, i32 0, i32 2
  store i64* null, i64** %35, align 8
  %36 = load i32, i32* @x.189
  %37 = load i32, i32* @y.190
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1531890526, i32 777374018
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %65 = alloca %"class.std::allocator.3"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %64, align 8
  store %"class.std::allocator.3"* %1, %"class.std::allocator.3"** %65, align 8
  %66 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %64, align 8
  %67 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66 to %"class.std::allocator.3"*
  %68 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %65, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.3"* %67, %"class.std::allocator.3"* dereferenceable(1) %68) #3
  %69 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66, i32 0, i32 0
  store i64* null, i64** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66, i32 0, i32 1
  store i64* null, i64** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66, i32 0, i32 2
  store i64* null, i64** %71, align 8
  store i32 -1794585067, i32* %15
  br label %72

; <label>:72:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.2"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.2"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.2"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %8, i32 0, i32 0
  store i64* %7, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 1
  store i64* %12, i64** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i64, i64* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20, i32 0, i32 2
  store i64* %19, i64** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.193
  %5 = load i32, i32* @y.194
  %6 = sub i32 %4, 1680852244
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1680852244
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -807372697, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -807372697, label %18
    i32 1594091572, label %26
    i32 1608584931, label %56
    i32 1427451184, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1594091572, i32 1427451184
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %28 to %"class.std::allocator.3"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.3"* %29) #3
  %30 = load i32, i32* @x.193
  %31 = load i32, i32* @y.194
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1608584931, i32 1427451184
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %58, align 8
  %59 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %59 to %"class.std::allocator.3"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.3"* %60) #3
  store i32 1594091572, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %1, %"class.__gnu_cxx::new_allocator.4"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.2"*, i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.2"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.197
  %10 = load i32, i32* @y.198
  %11 = sub i32 %9, 1270033281
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 1270033281
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 2027198263, i32* %19
  %20 = alloca i64*
  br label %21

; <label>:21:                                     ; preds = %2, %119
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 2027198263, label %24
    i32 -1766036760, label %44
    i32 702944416, label %67
    i32 -577253073, label %70
    i32 161879746, label %77
    i32 1254552465, label %78
    i32 1385134516, label %94
    i32 637937531, label %110
    i32 151463201, label %112
    i32 -426183239, label %118
  ]

; <label>:23:                                     ; preds = %21
  br label %119

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -1766036760, i32 151463201
  store i32 %43, i32* %19
  br label %119

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.2"*, align 8
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %45, align 8
  %47 = load volatile i64*, i64** %6
  store i64 %1, i64* %47, align 8
  %48 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %45, align 8
  store %"struct.std::_Vector_base.2"* %48, %"struct.std::_Vector_base.2"** %5
  %49 = load volatile i64*, i64** %6
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.197
  %53 = load i32, i32* @y.198
  %54 = sub i32 %52, 628892782
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 628892782
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 702944416, i32 151463201
  store i32 %66, i32* %19
  br label %119

; <label>:67:                                     ; preds = %21
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -577253073, i32 161879746
  store i32 %69, i32* %19
  br label %119

; <label>:70:                                     ; preds = %21
  %71 = load volatile %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %5
  %72 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %72 to %"class.std::allocator.3"*
  %74 = load volatile i64*, i64** %6
  %75 = load i64, i64* %74, align 8
  %76 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.3"* dereferenceable(1) %73, i64 %75)
  store i32 1254552465, i32* %19
  store i64* %76, i64** %20
  br label %119

; <label>:77:                                     ; preds = %21
  store i32 1254552465, i32* %19
  store i64* null, i64** %20
  br label %119

; <label>:78:                                     ; preds = %21
  %79 = load i64*, i64** %20
  store i64* %79, i64** %3
  %80 = load i32, i32* @x.197
  %81 = load i32, i32* @y.198
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 1385134516, i32 -426183239
  store i32 %93, i32* %19
  br label %119

; <label>:94:                                     ; preds = %21
  %95 = load i32, i32* @x.197
  %96 = load i32, i32* @y.198
  %97 = sub i32 %95, -801354653
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -801354653
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 637937531, i32 -426183239
  store i32 %109, i32* %19
  br label %119

; <label>:110:                                    ; preds = %21
  %111 = load volatile i64*, i64** %3
  ret i64* %111

; <label>:112:                                    ; preds = %21
  %113 = alloca %"struct.std::_Vector_base.2"*, align 8
  %114 = alloca i64, align 8
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %113, align 8
  store i64 %1, i64* %114, align 8
  %115 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %113, align 8
  %116 = load i64, i64* %114, align 8
  %117 = icmp ne i64 %116, 0
  store i32 -1766036760, i32* %19
  br label %119

; <label>:118:                                    ; preds = %21
  store i32 1385134516, i32* %19
  br label %119

; <label>:119:                                    ; preds = %118, %112, %94, %78, %77, %70, %67, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.3"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.3"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %3, align 8
  %6 = bitcast %"class.std::allocator.3"* %5 to %"class.__gnu_cxx::new_allocator.4"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.4"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.4"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.4"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 700880658, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 700880658, label %16
    i32 -552296270, label %21
    i32 1331431293, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -552296270, i32 1331431293
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i64*
  ret i64* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.4"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.203
  %5 = load i32, i32* @y.204
  %6 = sub i32 %4, 705591126
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 705591126
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -342220992, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %47
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -342220992, label %18
    i32 -1115233250, label %26
    i32 1075123774, label %43
    i32 1359068722, label %44
  ]

; <label>:17:                                     ; preds = %15
  br label %47

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1115233250, i32 1359068722
  store i32 %25, i32* %14
  br label %47

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %27, align 8
  %29 = load i32, i32* @x.203
  %30 = load i32, i32* @y.204
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1075123774, i32 1359068722
  store i32 %42, i32* %14
  br label %47

; <label>:43:                                     ; preds = %15
  ret i64 2305843009213693951

; <label>:44:                                     ; preds = %15
  %45 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %45, align 8
  store i32 -1115233250, i32* %14
  br label %47

; <label>:47:                                     ; preds = %44, %26, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #9

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator.3"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.3"*, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.3"* %3, %"class.std::allocator.3"** %8, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = call i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64* %9, i64 %10, i64* dereferenceable(8) %11)
  ret i64* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.3"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.2"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.2"*, align 8
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %2, align 8
  %3 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.3"*
  ret %"class.std::allocator.3"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %7, i64 %8, i64* dereferenceable(8) %9)
  ret i64* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #5 comdat {
  %4 = alloca i64*
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %12 = load i64, i64* %6, align 8
  store i64 %12, i64* %9, align 8
  %13 = alloca i32
  store i32 1272633792, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %150
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1272633792, label %17
    i32 150935954, label %21
    i32 -753941821, label %24
    i32 1895093634, label %39
    i32 1883864404, label %73
    i32 -25379604, label %74
    i32 -176849024, label %102
    i32 -2092192496, label %119
    i32 -302548587, label %121
    i32 -1292794754, label %148
  ]

; <label>:16:                                     ; preds = %14
  br label %150

; <label>:17:                                     ; preds = %14
  %18 = load i64, i64* %9, align 8
  %19 = icmp ugt i64 %18, 0
  %20 = select i1 %19, i32 150935954, i32 -25379604
  store i32 %20, i32* %13
  br label %150

; <label>:21:                                     ; preds = %14
  %22 = load i64, i64* %8, align 8
  %23 = load i64*, i64** %5, align 8
  store i64 %22, i64* %23, align 8
  store i32 -753941821, i32* %13
  br label %150

; <label>:24:                                     ; preds = %14
  %25 = load i32, i32* @x.215
  %26 = load i32, i32* @y.216
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 1895093634, i32 -302548587
  store i32 %38, i32* %13
  br label %150

; <label>:39:                                     ; preds = %14
  %40 = load i64, i64* %9, align 8
  %41 = sub i64 0, -1
  %42 = sub i64 %40, %41
  %43 = add i64 %40, -1
  store i64 %42, i64* %9, align 8
  %44 = load i64*, i64** %5, align 8
  %45 = getelementptr inbounds i64, i64* %44, i32 1
  store i64* %45, i64** %5, align 8
  %46 = load i32, i32* @x.215
  %47 = load i32, i32* @y.216
  %48 = sub i32 %46, 1582226457
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1582226457
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1883864404, i32 -302548587
  store i32 %72, i32* %13
  br label %150

; <label>:73:                                     ; preds = %14
  store i32 1272633792, i32* %13
  br label %150

; <label>:74:                                     ; preds = %14
  %75 = load i32, i32* @x.215
  %76 = load i32, i32* @y.216
  %77 = add i32 %75, 105369202
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, 105369202
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 -176849024, i32 -1292794754
  store i32 %101, i32* %13
  br label %150

; <label>:102:                                    ; preds = %14
  %103 = load i64*, i64** %5, align 8
  store i64* %103, i64** %4
  %104 = load i32, i32* @x.215
  %105 = load i32, i32* @y.216
  %106 = add i32 %104, 530658477
  %107 = sub i32 %106, 1
  %108 = sub i32 %107, 530658477
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 -2092192496, i32 -1292794754
  store i32 %118, i32* %13
  br label %150

; <label>:119:                                    ; preds = %14
  %120 = load volatile i64*, i64** %4
  ret i64* %120

; <label>:121:                                    ; preds = %14
  %122 = load i64, i64* %9, align 8
  %123 = add i64 0, -7079696792062336326
  %124 = sub i64 %123, %122
  %125 = sub i64 %124, -7079696792062336326
  %126 = sub i64 0, %122
  %127 = add i64 %125, 3303008151702173851
  %128 = add i64 %127, -1
  %129 = sub i64 %128, 3303008151702173851
  %130 = add i64 %125, -1
  %131 = shl i64 %122, -1
  %132 = sub i64 %122, -8304077812807102647
  %133 = sub i64 %132, -1
  %134 = add i64 %133, -8304077812807102647
  %135 = sub i64 %122, -1
  %136 = mul i64 %134, -1
  %137 = add i64 %122, 2907451190369034629
  %138 = sub i64 %137, -1
  %139 = sub i64 %138, 2907451190369034629
  %140 = sub i64 %122, -1
  %141 = mul i64 %139, -1
  %142 = sub i64 %122, 1788926566896555217
  %143 = add i64 %142, -1
  %144 = add i64 %143, 1788926566896555217
  %145 = add i64 %122, -1
  store i64 %144, i64* %9, align 8
  %146 = load i64*, i64** %5, align 8
  %147 = getelementptr inbounds i64, i64* %146, i32 1
  store i64* %147, i64** %5, align 8
  store i32 1895093634, i32* %13
  br label %150

; <label>:148:                                    ; preds = %14
  %149 = load i64*, i64** %5, align 8
  store i32 -176849024, i32* %13
  br label %150

; <label>:150:                                    ; preds = %148, %121, %102, %74, %73, %39, %24, %21, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #5 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.2"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"struct.std::_Vector_base.2"*
  %6 = alloca %"struct.std::_Vector_base.2"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %6, align 8
  store %"struct.std::_Vector_base.2"* %9, %"struct.std::_Vector_base.2"** %5
  %10 = load i64*, i64** %7, align 8
  store i64* %10, i64** %4
  %11 = alloca i32
  store i32 103122798, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %88
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 103122798, label %15
    i32 1727965727, label %19
    i32 -53502233, label %47
    i32 -329190137, label %80
    i32 1152911198, label %81
    i32 40768902, label %82
  ]

; <label>:14:                                     ; preds = %12
  br label %88

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %4
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 1727965727, i32 1152911198
  store i32 %18, i32* %11
  br label %88

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.221
  %21 = load i32, i32* @y.222
  %22 = sub i32 %20, -761317347
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -761317347
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -53502233, i32 40768902
  store i32 %46, i32* %11
  br label %88

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %49 to %"class.std::allocator.3"*
  %51 = load i64*, i64** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.3"* dereferenceable(1) %50, i64* %51, i64 %52)
  %53 = load i32, i32* @x.221
  %54 = load i32, i32* @y.222
  %55 = add i32 %53, -1685814124
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -1685814124
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -329190137, i32 40768902
  store i32 %79, i32* %11
  br label %88

; <label>:80:                                     ; preds = %12
  store i32 1152911198, i32* %11
  br label %88

; <label>:81:                                     ; preds = %12
  ret void

; <label>:82:                                     ; preds = %12
  %83 = load volatile %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %5
  %84 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %83, i32 0, i32 0
  %85 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %84 to %"class.std::allocator.3"*
  %86 = load i64*, i64** %7, align 8
  %87 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.3"* dereferenceable(1) %85, i64* %86, i64 %87)
  store i32 -53502233, i32* %11
  br label %88

; <label>:88:                                     ; preds = %82, %80, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.3"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.223
  %7 = load i32, i32* @y.224
  %8 = sub i32 %6, 2080528217
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2080528217
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -725688290, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %60
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -725688290, label %20
    i32 -353903429, label %28
    i32 -518419255, label %51
    i32 -629706435, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %60

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -353903429, i32 -629706435
  store i32 %27, i32* %16
  br label %60

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.3"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %29, align 8
  %33 = bitcast %"class.std::allocator.3"* %32 to %"class.__gnu_cxx::new_allocator.4"*
  %34 = load i64*, i64** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.4"* %33, i64* %34, i64 %35)
  %36 = load i32, i32* @x.223
  %37 = load i32, i32* @y.224
  %38 = sub i32 %36, -622972860
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -622972860
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -518419255, i32 -629706435
  store i32 %50, i32* %16
  br label %60

; <label>:51:                                     ; preds = %17
  ret void

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.3"*, align 8
  %54 = alloca i64*, align 8
  %55 = alloca i64, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %53, align 8
  store i64* %1, i64** %54, align 8
  store i64 %2, i64* %55, align 8
  %56 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %53, align 8
  %57 = bitcast %"class.std::allocator.3"* %56 to %"class.__gnu_cxx::new_allocator.4"*
  %58 = load i64*, i64** %54, align 8
  %59 = load i64, i64* %55, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.4"* %57, i64* %58, i64 %59)
  store i32 -353903429, i32* %16
  br label %60

; <label>:60:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.4"*, i64*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.3"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.3"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.3"* %2, %"class.std::allocator.3"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #5 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxiESaIS1_EE9push_backEOS1_(%"class.std::vector"*, %"struct.std::pair.0"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"struct.std::pair.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %4, align 8
  %7 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %6) #3
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector"* %5, %"struct.std::pair.0"* dereferenceable(16) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.std::pair.0"*, %"struct.std::pair.0"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.235
  %6 = load i32, i32* @y.236
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1196815444, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %160
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1196815444, label %18
    i32 -1423376111, label %38
    i32 -2092562805, label %89
    i32 1187750061, label %90
  ]

; <label>:17:                                     ; preds = %15
  br label %160

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1423376111, i32 1187750061
  store i32 %37, i32* %14
  br label %160

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"struct.std::less", align 1
  %42 = alloca %"struct.std::pair.0", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = alloca %"struct.std::pair.0", align 8
  %46 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %47 = alloca %"struct.std::less", align 1
  %48 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %49, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %50, align 8
  %51 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator"* %40, i64 1) #3
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  store %"struct.std::pair.0"* %51, %"struct.std::pair.0"** %52, align 8
  %53 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %43) #3
  %54 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %53) #3
  %55 = bitcast %"struct.std::pair.0"* %42 to i8*
  %56 = bitcast %"struct.std::pair.0"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 16, i32 8, i1 false)
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  %58 = bitcast %"class.__gnu_cxx::__normal_iterator"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 8, i1 false)
  %59 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxiESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %40, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %39) #3
  %60 = add i64 %59, 6112844242617802331
  %61 = sub i64 %60, 1
  %62 = sub i64 %61, 6112844242617802331
  %63 = sub nsw i64 %59, 1
  %64 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %42) #3
  %65 = bitcast %"struct.std::pair.0"* %45 to i8*
  %66 = bitcast %"struct.std::pair.0"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 16, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessISt4pairIxiEEEENS0_14_Iter_comp_valIT_EES7_()
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %68 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %67, align 8
  %69 = bitcast %"struct.std::pair.0"* %45 to { i64, i32 }*
  %70 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %69, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %69, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.0"* %68, i64 %62, i64 0, i64 %71, i32 %73)
  %74 = load i32, i32* @x.235
  %75 = load i32, i32* @y.236
  %76 = sub i32 %74, -1805292252
  %77 = sub i32 %76, 1
  %78 = add i32 %77, -1805292252
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  %88 = select i1 %86, i32 -2092562805, i32 1187750061
  store i32 %88, i32* %14
  br label %160

; <label>:89:                                     ; preds = %15
  ret void

; <label>:90:                                     ; preds = %15
  %91 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %92 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %93 = alloca %"struct.std::less", align 1
  %94 = alloca %"struct.std::pair.0", align 8
  %95 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %96 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %97 = alloca %"struct.std::pair.0", align 8
  %98 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %99 = alloca %"struct.std::less", align 1
  %100 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %101 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %91, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %101, align 8
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %92, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %102, align 8
  %103 = call %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator"* %92, i64 1) #3
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %95, i32 0, i32 0
  store %"struct.std::pair.0"* %103, %"struct.std::pair.0"** %104, align 8
  %105 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %95) #3
  %106 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %105) #3
  %107 = bitcast %"struct.std::pair.0"* %94 to i8*
  %108 = bitcast %"struct.std::pair.0"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 16, i32 8, i1 false)
  %109 = bitcast %"class.__gnu_cxx::__normal_iterator"* %96 to i8*
  %110 = bitcast %"class.__gnu_cxx::__normal_iterator"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %110, i64 8, i32 8, i1 false)
  %111 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxiESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %92, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %91) #3
  %112 = sub i64 0, %111
  %113 = add i64 0, %112
  %114 = sub i64 0, %111
  %115 = sub i64 0, 1
  %116 = sub i64 %113, %115
  %117 = add i64 %113, 1
  %118 = add i64 %111, -3423694400435385326
  %119 = sub i64 %118, 1
  %120 = sub i64 %119, -3423694400435385326
  %121 = sub i64 %111, 1
  %122 = mul i64 %120, 1
  %123 = shl i64 %111, 1
  %124 = add i64 0, -4055405744573151499
  %125 = sub i64 %124, %111
  %126 = sub i64 %125, -4055405744573151499
  %127 = sub i64 0, %111
  %128 = sub i64 %126, -2883728968811552317
  %129 = add i64 %128, 1
  %130 = add i64 %129, -2883728968811552317
  %131 = add i64 %126, 1
  %132 = sub i64 0, 1
  %133 = add i64 %111, %132
  %134 = sub i64 %111, 1
  %135 = mul i64 %133, 1
  %136 = shl i64 %111, 1
  %137 = sub i64 %111, 2110663545658097500
  %138 = sub i64 %137, 1
  %139 = add i64 %138, 2110663545658097500
  %140 = sub i64 %111, 1
  %141 = mul i64 %139, 1
  %142 = sub i64 0, 1
  %143 = add i64 %111, %142
  %144 = sub i64 %111, 1
  %145 = mul i64 %143, 1
  %146 = sub i64 %111, -8642833431042633579
  %147 = sub i64 %146, 1
  %148 = add i64 %147, -8642833431042633579
  %149 = sub nsw i64 %111, 1
  %150 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %94) #3
  %151 = bitcast %"struct.std::pair.0"* %97 to i8*
  %152 = bitcast %"struct.std::pair.0"* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %151, i8* %152, i64 16, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessISt4pairIxiEEEENS0_14_Iter_comp_valIT_EES7_()
  %153 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %96, i32 0, i32 0
  %154 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %153, align 8
  %155 = bitcast %"struct.std::pair.0"* %97 to { i64, i32 }*
  %156 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %155, i32 0, i32 0
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %155, i32 0, i32 1
  %159 = load i32, i32* %158, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.0"* %154, i64 %148, i64 0, i64 %157, i32 %159)
  store i32 -1423376111, i32* %14
  br label %160

; <label>:160:                                    ; preds = %90, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxiESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector"*, %"struct.std::pair.0"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair.0"*
  %4 = alloca %"struct.std::pair.0"*
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca %"struct.std::pair.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %7, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %8, %"class.std::vector"** %5
  %9 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %12, align 8
  store %"struct.std::pair.0"* %13, %"struct.std::pair.0"** %4
  %14 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %15 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %17, align 8
  store %"struct.std::pair.0"* %18, %"struct.std::pair.0"** %3
  %19 = alloca i32
  store i32 746944414, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %51
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 746944414, label %23
    i32 -1591094605, label %28
    i32 -2029600276, label %46
    i32 -1450494150, label %50
  ]

; <label>:22:                                     ; preds = %20
  br label %51

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %4
  %25 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %3
  %26 = icmp ne %"struct.std::pair.0"* %24, %25
  %27 = select i1 %26, i32 -1591094605, i32 -2029600276
  store i32 %27, i32* %19
  br label %51

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %31 to %"class.std::allocator"*
  %33 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %34 = bitcast %"class.std::vector"* %33 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %36, align 8
  %38 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %39 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt7forwardISt4pairIxiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.0"* dereferenceable(16) %38) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIxiEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %32, %"struct.std::pair.0"* %37, %"struct.std::pair.0"* dereferenceable(16) %39)
  %40 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %41 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %44, i32 1
  store %"struct.std::pair.0"* %45, %"struct.std::pair.0"** %43, align 8
  store i32 -1450494150, i32* %19
  br label %51

; <label>:46:                                     ; preds = %20
  %47 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %48 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt7forwardISt4pairIxiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.0"* dereferenceable(16) %47) #3
  %49 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorISt4pairIxiESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector"* %49, %"struct.std::pair.0"* dereferenceable(16) %48)
  store i32 -1450494150, i32* %19
  br label %51

; <label>:50:                                     ; preds = %20
  ret void

; <label>:51:                                     ; preds = %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxiEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1), %"struct.std::pair.0"*, %"struct.std::pair.0"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.239
  %7 = load i32, i32* @y.240
  %8 = add i32 %6, -1582518106
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1582518106
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 432770048, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 432770048, label %20
    i32 -1661882744, label %28
    i32 1832987046, label %63
    i32 -569324053, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1661882744, i32 -569324053
  store i32 %27, i32* %16
  br label %73

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator"*, align 8
  %30 = alloca %"struct.std::pair.0"*, align 8
  %31 = alloca %"struct.std::pair.0"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %29, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %30, align 8
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %31, align 8
  %32 = load %"class.std::allocator"*, %"class.std::allocator"** %29, align 8
  %33 = bitcast %"class.std::allocator"* %32 to %"class.__gnu_cxx::new_allocator"*
  %34 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %30, align 8
  %35 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %31, align 8
  %36 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt7forwardISt4pairIxiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.0"* dereferenceable(16) %35) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %33, %"struct.std::pair.0"* %34, %"struct.std::pair.0"* dereferenceable(16) %36)
  %37 = load i32, i32* @x.239
  %38 = load i32, i32* @y.240
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1832987046, i32 -569324053
  store i32 %62, i32* %16
  br label %73

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator"*, align 8
  %66 = alloca %"struct.std::pair.0"*, align 8
  %67 = alloca %"struct.std::pair.0"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %65, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %66, align 8
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %67, align 8
  %68 = load %"class.std::allocator"*, %"class.std::allocator"** %65, align 8
  %69 = bitcast %"class.std::allocator"* %68 to %"class.__gnu_cxx::new_allocator"*
  %70 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %66, align 8
  %71 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %67, align 8
  %72 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt7forwardISt4pairIxiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.0"* dereferenceable(16) %71) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %69, %"struct.std::pair.0"* %70, %"struct.std::pair.0"* dereferenceable(16) %72)
  store i32 -1661882744, i32* %16
  br label %73

; <label>:73:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.0"* @_ZSt7forwardISt4pairIxiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.0"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %2, align 8
  %3 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %2, align 8
  ret %"struct.std::pair.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxiESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector"*, %"struct.std::pair.0"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"struct.std::pair.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::pair.0"*, align 8
  %7 = alloca %"struct.std::pair.0"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %4, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.std::pair.0"* @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* %12, i64 %13)
  store %"struct.std::pair.0"* %14, %"struct.std::pair.0"** %6, align 8
  %15 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  store %"struct.std::pair.0"* %15, %"struct.std::pair.0"** %7, align 8
  %16 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %17 to %"class.std::allocator"*
  %19 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE4sizeEv(%"class.std::vector"* %10) #3
  %21 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %19, i64 %20
  %22 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %4, align 8
  %23 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt7forwardISt4pairIxiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.0"* dereferenceable(16) %22) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxiEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %18, %"struct.std::pair.0"* %21, %"struct.std::pair.0"* dereferenceable(16) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store %"struct.std::pair.0"* null, %"struct.std::pair.0"** %7, align 8
  %25 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %27, align 8
  %29 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %31, align 8
  %33 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %34 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %35 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %34) #3
  %36 = invoke %"struct.std::pair.0"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxiES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair.0"* %28, %"struct.std::pair.0"* %32, %"struct.std::pair.0"* %33, %"class.std::allocator"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store %"struct.std::pair.0"* %36, %"struct.std::pair.0"** %7, align 8
  %38 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %39 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %38, i32 1
  store %"struct.std::pair.0"* %39, %"struct.std::pair.0"** %7, align 8
  br label %237

; <label>:40:                                     ; preds = %24, %2
  %41 = load i32, i32* @x.243
  %42 = load i32, i32* @y.244
  %43 = sub i32 %41, 1877858907
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1877858907
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %333

; <label>:67:                                     ; preds = %40, %333
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %8, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %9, align 4
  %71 = load i32, i32* @x.243
  %72 = load i32, i32* @y.244
  %73 = add i32 %71, -1379463822
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -1379463822
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %333

; <label>:97:                                     ; preds = %67
  br label %98

; <label>:98:                                     ; preds = %97
  %99 = load i8*, i8** %8, align 8
  %100 = call i8* @__cxa_begin_catch(i8* %99) #3
  %101 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %102 = icmp ne %"struct.std::pair.0"* %101, null
  br i1 %102, label %145, label %103

; <label>:103:                                    ; preds = %98
  %104 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %105 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %104, i32 0, i32 0
  %106 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %105 to %"class.std::allocator"*
  %107 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %108 = call i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE4sizeEv(%"class.std::vector"* %10) #3
  %109 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %107, i64 %108
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxiEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* dereferenceable(1) %106, %"struct.std::pair.0"* %109)
          to label %110 unwind label %141

; <label>:110:                                    ; preds = %103
  %111 = load i32, i32* @x.243
  %112 = load i32, i32* @y.244
  %113 = sub i32 %111, -2124107621
  %114 = sub i32 %113, 1
  %115 = add i32 %114, -2124107621
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = and i1 %119, %120
  %122 = xor i1 %119, %120
  %123 = or i1 %121, %122
  %124 = or i1 %119, %120
  br i1 %123, label %125, label %337

; <label>:125:                                    ; preds = %110, %337
  %126 = load i32, i32* @x.243
  %127 = load i32, i32* @y.244
  %128 = add i32 %126, 816897564
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, 816897564
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  br i1 %138, label %140, label %337

; <label>:140:                                    ; preds = %125
  br label %191

; <label>:141:                                    ; preds = %195, %191, %189, %103
  %142 = landingpad { i8*, i32 }
          cleanup
  %143 = extractvalue { i8*, i32 } %142, 0
  store i8* %143, i8** %8, align 8
  %144 = extractvalue { i8*, i32 } %142, 1
  store i32 %144, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %196 unwind label %329

; <label>:145:                                    ; preds = %98
  %146 = load i32, i32* @x.243
  %147 = load i32, i32* @y.244
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  br i1 %157, label %159, label %338

; <label>:159:                                    ; preds = %145, %338
  %160 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %161 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %162 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %163 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %162) #3
  %164 = load i32, i32* @x.243
  %165 = load i32, i32* @y.244
  %166 = sub i32 0, 1
  %167 = add i32 %164, %166
  %168 = sub i32 %164, 1
  %169 = mul i32 %164, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %165, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 false, true
  %176 = and i1 %173, false
  %177 = and i1 %171, %175
  %178 = and i1 %174, false
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 false, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  br i1 %187, label %189, label %338

; <label>:189:                                    ; preds = %159
  invoke void @_ZSt8_DestroyIPSt4pairIxiES1_EvT_S3_RSaIT0_E(%"struct.std::pair.0"* %160, %"struct.std::pair.0"* %161, %"class.std::allocator"* dereferenceable(1) %163)
          to label %190 unwind label %141

; <label>:190:                                    ; preds = %189
  br label %191

; <label>:191:                                    ; preds = %190, %140
  %192 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %193 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %194 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %192, %"struct.std::pair.0"* %193, i64 %194)
          to label %195 unwind label %141

; <label>:195:                                    ; preds = %191
  invoke void @__cxa_rethrow() #12
          to label %332 unwind label %141

; <label>:196:                                    ; preds = %141
  %197 = load i32, i32* @x.243
  %198 = load i32, i32* @y.244
  %199 = sub i32 0, 1
  %200 = add i32 %197, %199
  %201 = sub i32 %197, 1
  %202 = mul i32 %197, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %198, 10
  %206 = and i1 %204, %205
  %207 = xor i1 %204, %205
  %208 = or i1 %206, %207
  %209 = or i1 %204, %205
  br i1 %208, label %210, label %343

; <label>:210:                                    ; preds = %196, %343
  %211 = load i32, i32* @x.243
  %212 = load i32, i32* @y.244
  %213 = sub i32 0, 1
  %214 = add i32 %211, %213
  %215 = sub i32 %211, 1
  %216 = mul i32 %211, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %212, 10
  %220 = xor i1 %218, true
  %221 = xor i1 %219, true
  %222 = xor i1 true, true
  %223 = and i1 %220, true
  %224 = and i1 %218, %222
  %225 = and i1 %221, true
  %226 = and i1 %219, %222
  %227 = or i1 %223, %224
  %228 = or i1 %225, %226
  %229 = xor i1 %227, %228
  %230 = or i1 %220, %221
  %231 = xor i1 %230, true
  %232 = or i1 true, %222
  %233 = and i1 %231, %232
  %234 = or i1 %229, %233
  %235 = or i1 %218, %219
  br i1 %234, label %236, label %343

; <label>:236:                                    ; preds = %210
  br label %282

; <label>:237:                                    ; preds = %37
  %238 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %239 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %238, i32 0, i32 0
  %240 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %239, i32 0, i32 0
  %241 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %240, align 8
  %242 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %242, i32 0, i32 0
  %244 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %243, i32 0, i32 1
  %245 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %244, align 8
  %246 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %247 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %246) #3
  call void @_ZSt8_DestroyIPSt4pairIxiES1_EvT_S3_RSaIT0_E(%"struct.std::pair.0"* %241, %"struct.std::pair.0"* %245, %"class.std::allocator"* dereferenceable(1) %247)
  %248 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %249 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %250 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %249, i32 0, i32 0
  %251 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %250, i32 0, i32 0
  %252 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %251, align 8
  %253 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %254 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %253, i32 0, i32 0
  %255 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %254, i32 0, i32 2
  %256 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %255, align 8
  %257 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %258 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %257, i32 0, i32 0
  %259 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %258, i32 0, i32 0
  %260 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %259, align 8
  %261 = ptrtoint %"struct.std::pair.0"* %256 to i64
  %262 = ptrtoint %"struct.std::pair.0"* %260 to i64
  %263 = add i64 %261, -9095851305030358448
  %264 = sub i64 %263, %262
  %265 = sub i64 %264, -9095851305030358448
  %266 = sub i64 %261, %262
  %267 = sdiv exact i64 %265, 16
  call void @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %248, %"struct.std::pair.0"* %252, i64 %267)
  %268 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %269 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %270 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %269, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %270, i32 0, i32 0
  store %"struct.std::pair.0"* %268, %"struct.std::pair.0"** %271, align 8
  %272 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %273 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %274 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %273, i32 0, i32 0
  %275 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %274, i32 0, i32 1
  store %"struct.std::pair.0"* %272, %"struct.std::pair.0"** %275, align 8
  %276 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %277 = load i64, i64* %5, align 8
  %278 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %276, i64 %277
  %279 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %280 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %279, i32 0, i32 0
  %281 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %280, i32 0, i32 2
  store %"struct.std::pair.0"* %278, %"struct.std::pair.0"** %281, align 8
  ret void

; <label>:282:                                    ; preds = %236
  %283 = load i32, i32* @x.243
  %284 = load i32, i32* @y.244
  %285 = add i32 %283, -973931930
  %286 = sub i32 %285, 1
  %287 = sub i32 %286, -973931930
  %288 = sub i32 %283, 1
  %289 = mul i32 %283, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %284, 10
  %293 = and i1 %291, %292
  %294 = xor i1 %291, %292
  %295 = or i1 %293, %294
  %296 = or i1 %291, %292
  br i1 %295, label %297, label %344

; <label>:297:                                    ; preds = %282, %344
  %298 = load i8*, i8** %8, align 8
  %299 = load i32, i32* %9, align 4
  %300 = insertvalue { i8*, i32 } undef, i8* %298, 0
  %301 = insertvalue { i8*, i32 } %300, i32 %299, 1
  %302 = load i32, i32* @x.243
  %303 = load i32, i32* @y.244
  %304 = add i32 %302, 759433096
  %305 = sub i32 %304, 1
  %306 = sub i32 %305, 759433096
  %307 = sub i32 %302, 1
  %308 = mul i32 %302, %306
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %303, 10
  %312 = xor i1 %310, true
  %313 = xor i1 %311, true
  %314 = xor i1 true, true
  %315 = and i1 %312, true
  %316 = and i1 %310, %314
  %317 = and i1 %313, true
  %318 = and i1 %311, %314
  %319 = or i1 %315, %316
  %320 = or i1 %317, %318
  %321 = xor i1 %319, %320
  %322 = or i1 %312, %313
  %323 = xor i1 %322, true
  %324 = or i1 true, %314
  %325 = and i1 %323, %324
  %326 = or i1 %321, %325
  %327 = or i1 %310, %311
  br i1 %326, label %328, label %344

; <label>:328:                                    ; preds = %297
  resume { i8*, i32 } %301

; <label>:329:                                    ; preds = %141
  %330 = landingpad { i8*, i32 }
          catch i8* null
  %331 = extractvalue { i8*, i32 } %330, 0
  call void @__clang_call_terminate(i8* %331) #11
  unreachable

; <label>:332:                                    ; preds = %195
  unreachable

; <label>:333:                                    ; preds = %67, %40
  %334 = landingpad { i8*, i32 }
          catch i8* null
  %335 = extractvalue { i8*, i32 } %334, 0
  store i8* %335, i8** %8, align 8
  %336 = extractvalue { i8*, i32 } %334, 1
  store i32 %336, i32* %9, align 4
  br label %67

; <label>:337:                                    ; preds = %125, %110
  br label %125

; <label>:338:                                    ; preds = %159, %145
  %339 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %340 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %341 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %342 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %341) #3
  br label %159

; <label>:343:                                    ; preds = %210, %196
  br label %210

; <label>:344:                                    ; preds = %297, %282
  %345 = load i8*, i8** %8, align 8
  %346 = load i32, i32* %9, align 4
  %347 = insertvalue { i8*, i32 } undef, i8* %345, 0
  %348 = insertvalue { i8*, i32 } %347, i32 %346, 1
  br label %297
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"*, %"struct.std::pair.0"*, %"struct.std::pair.0"* dereferenceable(16)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"struct.std::pair.0"*, align 8
  %6 = alloca %"struct.std::pair.0"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %5, align 8
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %5, align 8
  %9 = bitcast %"struct.std::pair.0"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.std::pair.0"*
  %11 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %12 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt7forwardISt4pairIxiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.0"* dereferenceable(16) %11) #3
  %13 = bitcast %"struct.std::pair.0"* %10 to i8*
  %14 = bitcast %"struct.std::pair.0"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector"*
  %8 = alloca %"class.std::vector"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  store %"class.std::vector"* %13, %"class.std::vector"** %7
  %14 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %15 = call i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE8max_sizeEv(%"class.std::vector"* %14) #3
  %16 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %17 = call i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE4sizeEv(%"class.std::vector"* %16) #3
  %18 = add i64 %15, -5996635584031505979
  %19 = sub i64 %18, %17
  %20 = sub i64 %19, -5996635584031505979
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 -1718999543, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %98
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -1718999543, label %28
    i32 -1607949265, label %33
    i32 -1703568813, label %35
    i32 -220127733, label %51
    i32 1544936086, label %57
    i32 -1490397685, label %60
    i32 1601278018, label %62
    i32 1761507711, label %79
    i32 151962426, label %95
    i32 1873149986, label %97
  ]

; <label>:27:                                     ; preds = %25
  br label %98

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 -1607949265, i32 -1703568813
  store i32 %32, i32* %23
  br label %98

; <label>:33:                                     ; preds = %25
  %34 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %34) #12
  unreachable

; <label>:35:                                     ; preds = %25
  %36 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %37 = call i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE4sizeEv(%"class.std::vector"* %36) #3
  %38 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %39 = call i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE4sizeEv(%"class.std::vector"* %38) #3
  store i64 %39, i64* %12, align 8
  %40 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %37, 3455018904765138765
  %43 = add i64 %42, %41
  %44 = add i64 %43, 3455018904765138765
  %45 = add i64 %37, %41
  store i64 %44, i64* %11, align 8
  %46 = load i64, i64* %11, align 8
  %47 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %48 = call i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE4sizeEv(%"class.std::vector"* %47) #3
  %49 = icmp ult i64 %46, %48
  %50 = select i1 %49, i32 1544936086, i32 -220127733
  store i32 %50, i32* %23
  br label %98

; <label>:51:                                     ; preds = %25
  %52 = load i64, i64* %11, align 8
  %53 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %54 = call i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE8max_sizeEv(%"class.std::vector"* %53) #3
  %55 = icmp ugt i64 %52, %54
  %56 = select i1 %55, i32 1544936086, i32 -1490397685
  store i32 %56, i32* %23
  br label %98

; <label>:57:                                     ; preds = %25
  %58 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %59 = call i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE8max_sizeEv(%"class.std::vector"* %58) #3
  store i32 1601278018, i32* %23
  store i64 %59, i64* %24
  br label %98

; <label>:60:                                     ; preds = %25
  %61 = load i64, i64* %11, align 8
  store i32 1601278018, i32* %23
  store i64 %61, i64* %24
  br label %98

; <label>:62:                                     ; preds = %25
  %63 = load i64, i64* %24
  store i64 %63, i64* %4
  %64 = load i32, i32* @x.247
  %65 = load i32, i32* @y.248
  %66 = sub i32 %64, 855594227
  %67 = sub i32 %66, 1
  %68 = add i32 %67, 855594227
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 1761507711, i32 1873149986
  store i32 %78, i32* %23
  br label %98

; <label>:79:                                     ; preds = %25
  %80 = load i32, i32* @x.247
  %81 = load i32, i32* @y.248
  %82 = add i32 %80, 183170264
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 183170264
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 151962426, i32 1873149986
  store i32 %94, i32* %23
  br label %98

; <label>:95:                                     ; preds = %25
  %96 = load volatile i64, i64* %4
  ret i64 %96

; <label>:97:                                     ; preds = %25
  store i32 1761507711, i32* %23
  br label %98

; <label>:98:                                     ; preds = %97, %79, %62, %60, %57, %51, %35, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZNSt12_Vector_baseISt4pairIxiESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair.0"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %8, %"struct.std::_Vector_base"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1733291558, i32* %10
  %11 = alloca %"struct.std::pair.0"*
  br label %12

; <label>:12:                                     ; preds = %2, %135
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1733291558, label %15
    i32 -378480281, label %19
    i32 -1526732823, label %47
    i32 -1561342966, label %80
    i32 -588831760, label %82
    i32 -1999863302, label %97
    i32 -1748843868, label %125
    i32 963288469, label %126
    i32 2140507270, label %128
    i32 974693384, label %134
  ]

; <label>:14:                                     ; preds = %12
  br label %135

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -378480281, i32 -588831760
  store i32 %18, i32* %10
  br label %135

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.249
  %21 = load i32, i32* @y.250
  %22 = sub i32 %20, -1620558980
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -1620558980
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -1526732823, i32 2140507270
  store i32 %46, i32* %10
  br label %135

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %49 to %"class.std::allocator"*
  %51 = load i64, i64* %7, align 8
  %52 = call %"struct.std::pair.0"* @_ZNSt16allocator_traitsISaISt4pairIxiEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1) %50, i64 %51)
  store %"struct.std::pair.0"* %52, %"struct.std::pair.0"** %3
  %53 = load i32, i32* @x.249
  %54 = load i32, i32* @y.250
  %55 = add i32 %53, -87768818
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -87768818
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -1561342966, i32 2140507270
  store i32 %79, i32* %10
  br label %135

; <label>:80:                                     ; preds = %12
  store i32 963288469, i32* %10
  %81 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %3
  store %"struct.std::pair.0"* %81, %"struct.std::pair.0"** %11
  br label %135

; <label>:82:                                     ; preds = %12
  %83 = load i32, i32* @x.249
  %84 = load i32, i32* @y.250
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 -1999863302, i32 974693384
  store i32 %96, i32* %10
  br label %135

; <label>:97:                                     ; preds = %12
  %98 = load i32, i32* @x.249
  %99 = load i32, i32* @y.250
  %100 = add i32 %98, -1852293186
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, -1852293186
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 -1748843868, i32 974693384
  store i32 %124, i32* %10
  br label %135

; <label>:125:                                    ; preds = %12
  store i32 963288469, i32* %10
  store %"struct.std::pair.0"* null, %"struct.std::pair.0"** %11
  br label %135

; <label>:126:                                    ; preds = %12
  %127 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %11
  ret %"struct.std::pair.0"* %127

; <label>:128:                                    ; preds = %12
  %129 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %130 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %129, i32 0, i32 0
  %131 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %130 to %"class.std::allocator"*
  %132 = load i64, i64* %7, align 8
  %133 = call %"struct.std::pair.0"* @_ZNSt16allocator_traitsISaISt4pairIxiEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1) %131, i64 %132)
  store i32 -1526732823, i32* %10
  br label %135

; <label>:134:                                    ; preds = %12
  store i32 -1999863302, i32* %10
  br label %135

; <label>:135:                                    ; preds = %134, %128, %125, %97, %82, %80, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %10, align 8
  %12 = ptrtoint %"struct.std::pair.0"* %7 to i64
  %13 = ptrtoint %"struct.std::pair.0"* %11 to i64
  %14 = add i64 %12, 6897904019425066045
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 6897904019425066045
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 16
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxiES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair.0"*, %"struct.std::pair.0"*, %"struct.std::pair.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.std::pair.0"*, align 8
  %6 = alloca %"struct.std::pair.0"*, align 8
  %7 = alloca %"struct.std::pair.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %5, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %6, align 8
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %5, align 8
  %12 = call %"struct.std::pair.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxiESt13move_iteratorIS2_EET0_T_(%"struct.std::pair.0"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %"struct.std::pair.0"* %12, %"struct.std::pair.0"** %13, align 8
  %14 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %15 = call %"struct.std::pair.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxiESt13move_iteratorIS2_EET0_T_(%"struct.std::pair.0"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %"struct.std::pair.0"* %15, %"struct.std::pair.0"** %16, align 8
  %17 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %21, align 8
  %23 = call %"struct.std::pair.0"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxiEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair.0"* %20, %"struct.std::pair.0"* %22, %"struct.std::pair.0"* %17, %"class.std::allocator"* dereferenceable(1) %18)
  ret %"struct.std::pair.0"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxiEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* dereferenceable(1), %"struct.std::pair.0"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.255
  %6 = load i32, i32* @y.256
  %7 = add i32 %5, -1642738666
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1642738666
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -452370313, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -452370313, label %19
    i32 -1923792858, label %27
    i32 1573803094, label %60
    i32 70339153, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1923792858, i32 70339153
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator"*, align 8
  %29 = alloca %"struct.std::pair.0"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %28, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %29, align 8
  %30 = load %"class.std::allocator"*, %"class.std::allocator"** %28, align 8
  %31 = bitcast %"class.std::allocator"* %30 to %"class.__gnu_cxx::new_allocator"*
  %32 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"* %31, %"struct.std::pair.0"* %32)
  %33 = load i32, i32* @x.255
  %34 = load i32, i32* @y.256
  %35 = sub i32 %33, -709216344
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -709216344
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1573803094, i32 70339153
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator"*, align 8
  %63 = alloca %"struct.std::pair.0"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %62, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %63, align 8
  %64 = load %"class.std::allocator"*, %"class.std::allocator"** %62, align 8
  %65 = bitcast %"class.std::allocator"* %64 to %"class.__gnu_cxx::new_allocator"*
  %66 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %63, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"* %65, %"struct.std::pair.0"* %66)
  store i32 -1923792858, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxiESaIS1_EE8max_sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt4pairIxiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt4pairIxiEEE8max_sizeERKS2_(%"class.std::allocator"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 -1092618404, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %85
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1092618404, label %16
    i32 2053955303, label %21
    i32 -44470929, label %23
    i32 -3087190, label %51
    i32 -2116968103, label %80
    i32 1520165566, label %81
    i32 -2124617235, label %83
  ]

; <label>:15:                                     ; preds = %13
  br label %85

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 2053955303, i32 -44470929
  store i32 %20, i32* %12
  br label %85

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 1520165566, i32* %12
  br label %85

; <label>:23:                                     ; preds = %13
  %24 = load i32, i32* @x.259
  %25 = load i32, i32* @y.260
  %26 = sub i32 %24, -1790898188
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -1790898188
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -3087190, i32 -2124617235
  store i32 %50, i32* %12
  br label %85

; <label>:51:                                     ; preds = %13
  %52 = load i64*, i64** %6, align 8
  store i64* %52, i64** %5, align 8
  %53 = load i32, i32* @x.259
  %54 = load i32, i32* @y.260
  %55 = add i32 %53, 239169521
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 239169521
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -2116968103, i32 -2124617235
  store i32 %79, i32* %12
  br label %85

; <label>:80:                                     ; preds = %13
  store i32 1520165566, i32* %12
  br label %85

; <label>:81:                                     ; preds = %13
  %82 = load i64*, i64** %5, align 8
  ret i64* %82

; <label>:83:                                     ; preds = %13
  %84 = load i64*, i64** %6, align 8
  store i64* %84, i64** %5, align 8
  store i32 -3087190, i32* %12
  br label %85

; <label>:85:                                     ; preds = %83, %80, %51, %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt4pairIxiEEE8max_sizeERKS2_(%"class.std::allocator"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt4pairIxiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZNSt16allocator_traitsISaISt4pairIxiEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::pair.0"* @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"struct.std::pair.0"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.269
  %9 = load i32, i32* @y.270
  %10 = sub i32 %8, -902159323
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -902159323
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1871965198, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %117
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1871965198, label %22
    i32 1604146401, label %30
    i32 277014135, label %55
    i32 -914204965, label %58
    i32 -1791806948, label %74
    i32 -555750258, label %101
    i32 -867606538, label %102
    i32 -1205103406, label %108
    i32 1761856575, label %116
  ]

; <label>:21:                                     ; preds = %19
  br label %117

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1604146401, i32 -1205103406
  store i32 %29, i32* %18
  br label %117

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  %33 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %31, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %33, align 8
  %35 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %31, align 8
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %35) #3
  %39 = icmp ugt i64 %37, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.269
  %41 = load i32, i32* @y.270
  %42 = add i32 %40, -71487110
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -71487110
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 277014135, i32 -1205103406
  store i32 %54, i32* %18
  br label %117

; <label>:55:                                     ; preds = %19
  %56 = load volatile i1, i1* %4
  %57 = select i1 %56, i32 -914204965, i32 -867606538
  store i32 %57, i32* %18
  br label %117

; <label>:58:                                     ; preds = %19
  %59 = load i32, i32* @x.269
  %60 = load i32, i32* @y.270
  %61 = add i32 %59, 941655794
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 941655794
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -1791806948, i32 1761856575
  store i32 %73, i32* %18
  br label %117

; <label>:74:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  %75 = load i32, i32* @x.269
  %76 = load i32, i32* @y.270
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  %100 = select i1 %98, i32 -555750258, i32 1761856575
  store i32 %100, i32* %18
  br label %117

; <label>:101:                                    ; preds = %19
  unreachable

; <label>:102:                                    ; preds = %19
  %103 = load volatile i64*, i64** %5
  %104 = load i64, i64* %103, align 8
  %105 = mul i64 %104, 16
  %106 = call i8* @_Znwm(i64 %105)
  %107 = bitcast i8* %106 to %"struct.std::pair.0"*
  ret %"struct.std::pair.0"* %107

; <label>:108:                                    ; preds = %19
  %109 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %110 = alloca i64, align 8
  %111 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %109, align 8
  store i64 %1, i64* %110, align 8
  store i8* %2, i8** %111, align 8
  %112 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %109, align 8
  %113 = load i64, i64* %110, align 8
  %114 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %112) #3
  %115 = icmp ugt i64 %113, %114
  store i32 1604146401, i32* %18
  br label %117

; <label>:116:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -1791806948, i32* %18
  br label %117

; <label>:117:                                    ; preds = %116, %108, %74, %58, %55, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxiEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair.0"*, %"struct.std::pair.0"*, %"struct.std::pair.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"struct.std::pair.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %12, align 8
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %20, align 8
  %22 = call %"struct.std::pair.0"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxiEES3_ET0_T_S6_S5_(%"struct.std::pair.0"* %19, %"struct.std::pair.0"* %21, %"struct.std::pair.0"* %17)
  ret %"struct.std::pair.0"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxiESt13move_iteratorIS2_EET0_T_(%"struct.std::pair.0"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %3, align 8
  %4 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt4pairIxiEEC2ES2_(%"class.std::move_iterator"* %2, %"struct.std::pair.0"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %5, align 8
  ret %"struct.std::pair.0"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxiEES3_ET0_T_S6_S5_(%"struct.std::pair.0"*, %"struct.std::pair.0"*, %"struct.std::pair.0"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.std::pair.0"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %11, align 8
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %19, align 8
  %21 = call %"struct.std::pair.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxiEES5_EET0_T_S8_S7_(%"struct.std::pair.0"* %18, %"struct.std::pair.0"* %20, %"struct.std::pair.0"* %16)
  ret %"struct.std::pair.0"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxiEES5_EET0_T_S8_S7_(%"struct.std::pair.0"*, %"struct.std::pair.0"*, %"struct.std::pair.0"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.std::pair.0"*, align 8
  %7 = alloca %"struct.std::pair.0"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %11, align 8
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %6, align 8
  %12 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  store %"struct.std::pair.0"* %12, %"struct.std::pair.0"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %117, %3
  %14 = invoke zeroext i1 @_ZStneIPSt4pairIxiEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %120

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %201

; <label>:16:                                     ; preds = %15
  %17 = load i32, i32* @x.277
  %18 = load i32, i32* @y.278
  %19 = add i32 %17, -1794032695
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -1794032695
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %412

; <label>:43:                                     ; preds = %16, %412
  %44 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %45 = call %"struct.std::pair.0"* @_ZSt11__addressofISt4pairIxiEEPT_RS2_(%"struct.std::pair.0"* dereferenceable(16) %44) #3
  %46 = load i32, i32* @x.277
  %47 = load i32, i32* @y.278
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %412

; <label>:71:                                     ; preds = %43
  %72 = invoke dereferenceable(16) %"struct.std::pair.0"* @_ZNKSt13move_iteratorIPSt4pairIxiEEdeEv(%"class.std::move_iterator"* %4)
          to label %73 unwind label %120

; <label>:73:                                     ; preds = %71
  %74 = load i32, i32* @x.277
  %75 = load i32, i32* @y.278
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %415

; <label>:87:                                     ; preds = %73, %415
  %88 = load i32, i32* @x.277
  %89 = load i32, i32* @y.278
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %415

; <label>:113:                                    ; preds = %87
  invoke void @_ZSt10_ConstructISt4pairIxiEJS1_EEvPT_DpOT0_(%"struct.std::pair.0"* %45, %"struct.std::pair.0"* dereferenceable(16) %72)
          to label %114 unwind label %120

; <label>:114:                                    ; preds = %113
  br label %115

; <label>:115:                                    ; preds = %114
  %116 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt4pairIxiEEppEv(%"class.std::move_iterator"* %4)
          to label %117 unwind label %120

; <label>:117:                                    ; preds = %115
  %118 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %119 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %118, i32 1
  store %"struct.std::pair.0"* %119, %"struct.std::pair.0"** %7, align 8
  br label %13

; <label>:120:                                    ; preds = %115, %113, %71, %13
  %121 = load i32, i32* @x.277
  %122 = load i32, i32* @y.278
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 true, true
  %133 = and i1 %130, true
  %134 = and i1 %128, %132
  %135 = and i1 %131, true
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 true, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %416

; <label>:146:                                    ; preds = %120, %416
  %147 = landingpad { i8*, i32 }
          catch i8* null
  %148 = extractvalue { i8*, i32 } %147, 0
  store i8* %148, i8** %8, align 8
  %149 = extractvalue { i8*, i32 } %147, 1
  store i32 %149, i32* %9, align 4
  %150 = load i32, i32* @x.277
  %151 = load i32, i32* @y.278
  %152 = sub i32 %150, 649079858
  %153 = sub i32 %152, 1
  %154 = add i32 %153, 649079858
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  br i1 %162, label %164, label %416

; <label>:164:                                    ; preds = %146
  br label %165

; <label>:165:                                    ; preds = %164
  %166 = load i8*, i8** %8, align 8
  %167 = call i8* @__cxa_begin_catch(i8* %166) #3
  %168 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %169 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt4pairIxiEEvT_S3_(%"struct.std::pair.0"* %168, %"struct.std::pair.0"* %169)
          to label %170 unwind label %203

; <label>:170:                                    ; preds = %165
  %171 = load i32, i32* @x.277
  %172 = load i32, i32* @y.278
  %173 = sub i32 %171, -691901577
  %174 = sub i32 %173, 1
  %175 = add i32 %174, -691901577
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %420

; <label>:185:                                    ; preds = %170, %420
  %186 = load i32, i32* @x.277
  %187 = load i32, i32* @y.278
  %188 = sub i32 %186, 1917344531
  %189 = sub i32 %188, 1
  %190 = add i32 %189, 1917344531
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = and i1 %194, %195
  %197 = xor i1 %194, %195
  %198 = or i1 %196, %197
  %199 = or i1 %194, %195
  br i1 %198, label %200, label %420

; <label>:200:                                    ; preds = %185
  invoke void @__cxa_rethrow() #12
          to label %370 unwind label %203

; <label>:201:                                    ; preds = %15
  %202 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  ret %"struct.std::pair.0"* %202

; <label>:203:                                    ; preds = %200, %165
  %204 = load i32, i32* @x.277
  %205 = load i32, i32* @y.278
  %206 = sub i32 0, 1
  %207 = add i32 %204, %206
  %208 = sub i32 %204, 1
  %209 = mul i32 %204, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %205, 10
  %213 = and i1 %211, %212
  %214 = xor i1 %211, %212
  %215 = or i1 %213, %214
  %216 = or i1 %211, %212
  br i1 %215, label %217, label %421

; <label>:217:                                    ; preds = %203, %421
  %218 = landingpad { i8*, i32 }
          cleanup
  %219 = extractvalue { i8*, i32 } %218, 0
  store i8* %219, i8** %8, align 8
  %220 = extractvalue { i8*, i32 } %218, 1
  store i32 %220, i32* %9, align 4
  %221 = load i32, i32* @x.277
  %222 = load i32, i32* @y.278
  %223 = add i32 %221, 791342577
  %224 = sub i32 %223, 1
  %225 = sub i32 %224, 791342577
  %226 = sub i32 %221, 1
  %227 = mul i32 %221, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %222, 10
  %231 = xor i1 %229, true
  %232 = xor i1 %230, true
  %233 = xor i1 true, true
  %234 = and i1 %231, true
  %235 = and i1 %229, %233
  %236 = and i1 %232, true
  %237 = and i1 %230, %233
  %238 = or i1 %234, %235
  %239 = or i1 %236, %237
  %240 = xor i1 %238, %239
  %241 = or i1 %231, %232
  %242 = xor i1 %241, true
  %243 = or i1 true, %233
  %244 = and i1 %242, %243
  %245 = or i1 %240, %244
  %246 = or i1 %229, %230
  br i1 %245, label %247, label %421

; <label>:247:                                    ; preds = %217
  invoke void @__cxa_end_catch()
          to label %248 unwind label %325

; <label>:248:                                    ; preds = %247
  br label %279
                                                  ; No predecessors!
  %250 = load i32, i32* @x.277
  %251 = load i32, i32* @y.278
  %252 = sub i32 0, 1
  %253 = add i32 %250, %252
  %254 = sub i32 %250, 1
  %255 = mul i32 %250, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %251, 10
  %259 = and i1 %257, %258
  %260 = xor i1 %257, %258
  %261 = or i1 %259, %260
  %262 = or i1 %257, %258
  br i1 %261, label %263, label %425

; <label>:263:                                    ; preds = %249, %425
  call void @llvm.trap()
  %264 = load i32, i32* @x.277
  %265 = load i32, i32* @y.278
  %266 = sub i32 %264, -1580149237
  %267 = sub i32 %266, 1
  %268 = add i32 %267, -1580149237
  %269 = sub i32 %264, 1
  %270 = mul i32 %264, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %265, 10
  %274 = and i1 %272, %273
  %275 = xor i1 %272, %273
  %276 = or i1 %274, %275
  %277 = or i1 %272, %273
  br i1 %276, label %278, label %425

; <label>:278:                                    ; preds = %263
  unreachable

; <label>:279:                                    ; preds = %248
  %280 = load i32, i32* @x.277
  %281 = load i32, i32* @y.278
  %282 = sub i32 %280, -744514901
  %283 = sub i32 %282, 1
  %284 = add i32 %283, -744514901
  %285 = sub i32 %280, 1
  %286 = mul i32 %280, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %281, 10
  %290 = xor i1 %288, true
  %291 = xor i1 %289, true
  %292 = xor i1 true, true
  %293 = and i1 %290, true
  %294 = and i1 %288, %292
  %295 = and i1 %291, true
  %296 = and i1 %289, %292
  %297 = or i1 %293, %294
  %298 = or i1 %295, %296
  %299 = xor i1 %297, %298
  %300 = or i1 %290, %291
  %301 = xor i1 %300, true
  %302 = or i1 true, %292
  %303 = and i1 %301, %302
  %304 = or i1 %299, %303
  %305 = or i1 %288, %289
  br i1 %304, label %306, label %426

; <label>:306:                                    ; preds = %279, %426
  %307 = load i8*, i8** %8, align 8
  %308 = load i32, i32* %9, align 4
  %309 = insertvalue { i8*, i32 } undef, i8* %307, 0
  %310 = insertvalue { i8*, i32 } %309, i32 %308, 1
  %311 = load i32, i32* @x.277
  %312 = load i32, i32* @y.278
  %313 = sub i32 0, 1
  %314 = add i32 %311, %313
  %315 = sub i32 %311, 1
  %316 = mul i32 %311, %314
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %312, 10
  %320 = and i1 %318, %319
  %321 = xor i1 %318, %319
  %322 = or i1 %320, %321
  %323 = or i1 %318, %319
  br i1 %322, label %324, label %426

; <label>:324:                                    ; preds = %306
  resume { i8*, i32 } %310

; <label>:325:                                    ; preds = %247
  %326 = load i32, i32* @x.277
  %327 = load i32, i32* @y.278
  %328 = add i32 %326, -275911366
  %329 = sub i32 %328, 1
  %330 = sub i32 %329, -275911366
  %331 = sub i32 %326, 1
  %332 = mul i32 %326, %330
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %327, 10
  %336 = xor i1 %334, true
  %337 = xor i1 %335, true
  %338 = xor i1 false, true
  %339 = and i1 %336, false
  %340 = and i1 %334, %338
  %341 = and i1 %337, false
  %342 = and i1 %335, %338
  %343 = or i1 %339, %340
  %344 = or i1 %341, %342
  %345 = xor i1 %343, %344
  %346 = or i1 %336, %337
  %347 = xor i1 %346, true
  %348 = or i1 false, %338
  %349 = and i1 %347, %348
  %350 = or i1 %345, %349
  %351 = or i1 %334, %335
  br i1 %350, label %352, label %431

; <label>:352:                                    ; preds = %325, %431
  %353 = landingpad { i8*, i32 }
          catch i8* null
  %354 = extractvalue { i8*, i32 } %353, 0
  call void @__clang_call_terminate(i8* %354) #11
  %355 = load i32, i32* @x.277
  %356 = load i32, i32* @y.278
  %357 = sub i32 %355, -1663109975
  %358 = sub i32 %357, 1
  %359 = add i32 %358, -1663109975
  %360 = sub i32 %355, 1
  %361 = mul i32 %355, %359
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %356, 10
  %365 = and i1 %363, %364
  %366 = xor i1 %363, %364
  %367 = or i1 %365, %366
  %368 = or i1 %363, %364
  br i1 %367, label %369, label %431

; <label>:369:                                    ; preds = %352
  unreachable

; <label>:370:                                    ; preds = %200
  %371 = load i32, i32* @x.277
  %372 = load i32, i32* @y.278
  %373 = sub i32 0, 1
  %374 = add i32 %371, %373
  %375 = sub i32 %371, 1
  %376 = mul i32 %371, %374
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %372, 10
  %380 = and i1 %378, %379
  %381 = xor i1 %378, %379
  %382 = or i1 %380, %381
  %383 = or i1 %378, %379
  br i1 %382, label %384, label %434

; <label>:384:                                    ; preds = %370, %434
  %385 = load i32, i32* @x.277
  %386 = load i32, i32* @y.278
  %387 = add i32 %385, -966202757
  %388 = sub i32 %387, 1
  %389 = sub i32 %388, -966202757
  %390 = sub i32 %385, 1
  %391 = mul i32 %385, %389
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %386, 10
  %395 = xor i1 %393, true
  %396 = xor i1 %394, true
  %397 = xor i1 false, true
  %398 = and i1 %395, false
  %399 = and i1 %393, %397
  %400 = and i1 %396, false
  %401 = and i1 %394, %397
  %402 = or i1 %398, %399
  %403 = or i1 %400, %401
  %404 = xor i1 %402, %403
  %405 = or i1 %395, %396
  %406 = xor i1 %405, true
  %407 = or i1 false, %397
  %408 = and i1 %406, %407
  %409 = or i1 %404, %408
  %410 = or i1 %393, %394
  br i1 %409, label %411, label %434

; <label>:411:                                    ; preds = %384
  unreachable

; <label>:412:                                    ; preds = %43, %16
  %413 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  %414 = call %"struct.std::pair.0"* @_ZSt11__addressofISt4pairIxiEEPT_RS2_(%"struct.std::pair.0"* dereferenceable(16) %413) #3
  br label %43

; <label>:415:                                    ; preds = %87, %73
  br label %87

; <label>:416:                                    ; preds = %146, %120
  %417 = landingpad { i8*, i32 }
          catch i8* null
  %418 = extractvalue { i8*, i32 } %417, 0
  store i8* %418, i8** %8, align 8
  %419 = extractvalue { i8*, i32 } %417, 1
  store i32 %419, i32* %9, align 4
  br label %146

; <label>:420:                                    ; preds = %185, %170
  br label %185

; <label>:421:                                    ; preds = %217, %203
  %422 = landingpad { i8*, i32 }
          cleanup
  %423 = extractvalue { i8*, i32 } %422, 0
  store i8* %423, i8** %8, align 8
  %424 = extractvalue { i8*, i32 } %422, 1
  store i32 %424, i32* %9, align 4
  br label %217

; <label>:425:                                    ; preds = %263, %249
  call void @llvm.trap()
  br label %263

; <label>:426:                                    ; preds = %306, %279
  %427 = load i8*, i8** %8, align 8
  %428 = load i32, i32* %9, align 4
  %429 = insertvalue { i8*, i32 } undef, i8* %427, 0
  %430 = insertvalue { i8*, i32 } %429, i32 %428, 1
  br label %306

; <label>:431:                                    ; preds = %352, %325
  %432 = landingpad { i8*, i32 }
          catch i8* null
  %433 = extractvalue { i8*, i32 } %432, 0
  call void @__clang_call_terminate(i8* %433) #11
  br label %352

; <label>:434:                                    ; preds = %384, %370
  br label %384
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt4pairIxiEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt4pairIxiEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 false, %8
  %10 = xor i1 false, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, false
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt4pairIxiEJS1_EEvPT_DpOT0_(%"struct.std::pair.0"*, %"struct.std::pair.0"* dereferenceable(16)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.281
  %6 = load i32, i32* @y.282
  %7 = add i32 %5, 1989671167
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1989671167
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -267870351, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -267870351, label %19
    i32 297906555, label %39
    i32 -258724882, label %63
    i32 1781470698, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 297906555, i32 1781470698
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair.0"*, align 8
  %41 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %40, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %41, align 8
  %42 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %40, align 8
  %43 = bitcast %"struct.std::pair.0"* %42 to i8*
  %44 = bitcast i8* %43 to %"struct.std::pair.0"*
  %45 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %41, align 8
  %46 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt7forwardISt4pairIxiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.0"* dereferenceable(16) %45) #3
  %47 = bitcast %"struct.std::pair.0"* %44 to i8*
  %48 = bitcast %"struct.std::pair.0"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false)
  %49 = load i32, i32* @x.281
  %50 = load i32, i32* @y.282
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -258724882, i32 1781470698
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::pair.0"*, align 8
  %66 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %65, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %66, align 8
  %67 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %65, align 8
  %68 = bitcast %"struct.std::pair.0"* %67 to i8*
  %69 = bitcast i8* %68 to %"struct.std::pair.0"*
  %70 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %66, align 8
  %71 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt7forwardISt4pairIxiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.0"* dereferenceable(16) %70) #3
  %72 = bitcast %"struct.std::pair.0"* %69 to i8*
  %73 = bitcast %"struct.std::pair.0"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 16, i32 8, i1 false)
  store i32 297906555, i32* %15
  br label %74

; <label>:74:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZSt11__addressofISt4pairIxiEEPT_RS2_(%"struct.std::pair.0"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.std::pair.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.283
  %6 = load i32, i32* @y.284
  %7 = add i32 %5, -452504351
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -452504351
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1691822676, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1691822676, label %19
    i32 -1588568854, label %39
    i32 -1067904438, label %59
    i32 1032128682, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1588568854, i32 1032128682
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %40, align 8
  %41 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %40, align 8
  %42 = bitcast %"struct.std::pair.0"* %41 to i8*
  %43 = bitcast i8* %42 to %"struct.std::pair.0"*
  store %"struct.std::pair.0"* %43, %"struct.std::pair.0"** %2
  %44 = load i32, i32* @x.283
  %45 = load i32, i32* @y.284
  %46 = sub i32 %44, 1837847413
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1837847413
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1067904438, i32 1032128682
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %2
  ret %"struct.std::pair.0"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::pair.0"*, align 8
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %62, align 8
  %63 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %62, align 8
  %64 = bitcast %"struct.std::pair.0"* %63 to i8*
  %65 = bitcast i8* %64 to %"struct.std::pair.0"*
  store i32 -1588568854, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.0"* @_ZNKSt13move_iteratorIPSt4pairIxiEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %4, align 8
  ret %"struct.std::pair.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt4pairIxiEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.287
  %6 = load i32, i32* @y.288
  %7 = add i32 %5, -1190662062
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1190662062
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1166436984, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1166436984, label %19
    i32 -1115176308, label %39
    i32 -438166780, label %73
    i32 -686235162, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1115176308, i32 -686235162
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %40, align 8
  %41 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %40, align 8
  store %"class.std::move_iterator"* %41, %"class.std::move_iterator"** %2
  %42 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %44, i32 1
  store %"struct.std::pair.0"* %45, %"struct.std::pair.0"** %43, align 8
  %46 = load i32, i32* @x.287
  %47 = load i32, i32* @y.288
  %48 = sub i32 %46, 1162238181
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1162238181
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -438166780, i32 -686235162
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  %74 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  ret %"class.std::move_iterator"* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %76, align 8
  %77 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %76, align 8
  %78 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %77, i32 0, i32 0
  %79 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %78, align 8
  %80 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %79, i32 1
  store %"struct.std::pair.0"* %80, %"struct.std::pair.0"** %78, align 8
  store i32 -1115176308, i32* %15
  br label %81

; <label>:81:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt4pairIxiEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"struct.std::pair.0"* @_ZNKSt13move_iteratorIPSt4pairIxiEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"struct.std::pair.0"* @_ZNKSt13move_iteratorIPSt4pairIxiEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"struct.std::pair.0"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZNKSt13move_iteratorIPSt4pairIxiEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %4, align 8
  ret %"struct.std::pair.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt4pairIxiEEC2ES2_(%"class.std::move_iterator"*, %"struct.std::pair.0"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"struct.std::pair.0"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %4, align 8
  store %"struct.std::pair.0"* %7, %"struct.std::pair.0"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxiEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"*, %"struct.std::pair.0"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"struct.std::pair.0"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  %6 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.std::pair.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.297
  %7 = load i32, i32* @y.298
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 526101418, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %107
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 526101418, label %19
    i32 -141081316, label %39
    i32 -351955511, label %68
    i32 -1710967915, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %107

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -141081316, i32 -1710967915
  store i32 %38, i32* %15
  br label %107

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"struct.std::pair.0"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  store i64 %1, i64* %42, align 8
  %44 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %46 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %45, align 8
  %47 = load i64, i64* %42, align 8
  %48 = sub i64 0, %47
  %49 = add i64 0, %48
  %50 = sub i64 0, %47
  %51 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %46, i64 %49
  store %"struct.std::pair.0"* %51, %"struct.std::pair.0"** %43, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %40, %"struct.std::pair.0"** dereferenceable(8) %43) #3
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %53 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %52, align 8
  store %"struct.std::pair.0"* %53, %"struct.std::pair.0"** %3
  %54 = load i32, i32* @x.297
  %55 = load i32, i32* @y.298
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -351955511, i32 -1710967915
  store i32 %67, i32* %15
  br label %107

; <label>:68:                                     ; preds = %16
  %69 = load volatile %"struct.std::pair.0"*, %"struct.std::pair.0"** %3
  ret %"struct.std::pair.0"* %69

; <label>:70:                                     ; preds = %16
  %71 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %72 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %73 = alloca i64, align 8
  %74 = alloca %"struct.std::pair.0"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %72, align 8
  store i64 %1, i64* %73, align 8
  %75 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %72, align 8
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %75, i32 0, i32 0
  %77 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %76, align 8
  %78 = load i64, i64* %73, align 8
  %79 = shl i64 0, %78
  %80 = shl i64 0, %78
  %81 = sub i64 0, 0
  %82 = add i64 0, %81
  %83 = sub i64 0, 0
  %84 = sub i64 0, %78
  %85 = sub i64 %82, %84
  %86 = add i64 %82, %78
  %87 = add i64 0, 6374508986968449837
  %88 = sub i64 %87, 0
  %89 = sub i64 %88, 6374508986968449837
  %90 = sub i64 0, 0
  %91 = add i64 %89, -5460993331423143417
  %92 = add i64 %91, %78
  %93 = sub i64 %92, -5460993331423143417
  %94 = add i64 %89, %78
  %95 = sub i64 0, %78
  %96 = add i64 0, %95
  %97 = sub i64 0, %78
  %98 = mul i64 %96, %78
  %99 = shl i64 0, %78
  %100 = sub i64 0, -5031118215919862287
  %101 = sub i64 %100, %78
  %102 = add i64 %101, -5031118215919862287
  %103 = sub i64 0, %78
  %104 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %77, i64 %102
  store %"struct.std::pair.0"* %104, %"struct.std::pair.0"** %74, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %71, %"struct.std::pair.0"** dereferenceable(8) %74) #3
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %71, i32 0, i32 0
  %106 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %105, align 8
  store i32 -141081316, i32* %15
  br label %107

; <label>:107:                                    ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessISt4pairIxiEEEENS0_14_Iter_comp_valIT_EES7_() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessISt4pairIxiEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt6vectorISt4pairIxiESaIS1_EE5emptyEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = call %"struct.std::pair.0"* @_ZNKSt6vectorISt4pairIxiESaIS1_EE5beginEv(%"class.std::vector"* %5) #3
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  store %"struct.std::pair.0"* %6, %"struct.std::pair.0"** %7, align 8
  %8 = call %"struct.std::pair.0"* @_ZNKSt6vectorISt4pairIxiESaIS1_EE3endEv(%"class.std::vector"* %5) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %4, i32 0, i32 0
  store %"struct.std::pair.0"* %8, %"struct.std::pair.0"** %9, align 8
  %10 = call zeroext i1 @_ZN9__gnu_cxxeqIPKSt4pairIxiESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.20"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator.20"* dereferenceable(8) %4) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPKSt4pairIxiESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.20"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.20"* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.303
  %7 = load i32, i32* @y.304
  %8 = add i32 %6, -1624361622
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1624361622
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1228564888, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1228564888, label %20
    i32 1110362241, label %28
    i32 1999109950, label %65
    i32 2074125008, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1110362241, i32 2074125008
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %1, %"class.__gnu_cxx::__normal_iterator.20"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %29, align 8
  %32 = call dereferenceable(8) %"struct.std::pair.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"* %31) #3
  %33 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %30, align 8
  %35 = call dereferenceable(8) %"struct.std::pair.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"* %34) #3
  %36 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %35, align 8
  %37 = icmp eq %"struct.std::pair.0"* %33, %36
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.303
  %39 = load i32, i32* @y.304
  %40 = sub i32 %38, 1283542981
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1283542981
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 1999109950, i32 2074125008
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i1, i1* %3
  ret i1 %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  %69 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %68, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %1, %"class.__gnu_cxx::__normal_iterator.20"** %69, align 8
  %70 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %68, align 8
  %71 = call dereferenceable(8) %"struct.std::pair.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"* %70) #3
  %72 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %71, align 8
  %73 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %69, align 8
  %74 = call dereferenceable(8) %"struct.std::pair.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"* %73) #3
  %75 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %74, align 8
  %76 = icmp eq %"struct.std::pair.0"* %72, %75
  store i32 1110362241, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZNKSt6vectorISt4pairIxiESaIS1_EE5beginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"struct.std::pair.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %8, align 8
  store %"struct.std::pair.0"* %9, %"struct.std::pair.0"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.20"* %2, %"struct.std::pair.0"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  %11 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %10, align 8
  ret %"struct.std::pair.0"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.0"* @_ZNKSt6vectorISt4pairIxiESaIS1_EE3endEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"struct.std::pair.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %8, align 8
  store %"struct.std::pair.0"* %9, %"struct.std::pair.0"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.20"* %2, %"struct.std::pair.0"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  %11 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %10, align 8
  ret %"struct.std::pair.0"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  ret %"struct.std::pair.0"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.20"*, %"struct.std::pair.0"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  %4 = alloca %"struct.std::pair.0"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %3, align 8
  store %"struct.std::pair.0"** %1, %"struct.std::pair.0"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair.0"**, %"struct.std::pair.0"*** %4, align 8
  %8 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %7, align 8
  store %"struct.std::pair.0"* %8, %"struct.std::pair.0"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.0"* @_ZNKSt6vectorISt4pairIxiESaIS1_EE5frontEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %5 = call %"struct.std::pair.0"* @_ZNKSt6vectorISt4pairIxiESaIS1_EE5beginEv(%"class.std::vector"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  store %"struct.std::pair.0"* %5, %"struct.std::pair.0"** %6, align 8
  %7 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.20"* %3) #3
  ret %"struct.std::pair.0"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.20"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %4, align 8
  ret %"struct.std::pair.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.std::pair.0"*, %"struct.std::pair.0"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.317
  %12 = load i32, i32* @y.318
  %13 = sub i32 %11, 354910404
  %14 = sub i32 %13, 1
  %15 = add i32 %14, 354910404
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 42323291, i32* %21
  br label %22

; <label>:22:                                     ; preds = %2, %176
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 42323291, label %25
    i32 -842740184, label %45
    i32 -403570846, label %90
    i32 -1431242254, label %93
    i32 274174492, label %117
    i32 1397369388, label %144
    i32 1010588679, label %160
    i32 -206238339, label %161
    i32 -324085109, label %175
  ]

; <label>:24:                                     ; preds = %22
  br label %176

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 -842740184, i32 -206238339
  store i32 %44, i32* %21
  br label %176

; <label>:45:                                     ; preds = %22
  %46 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %46, %"class.__gnu_cxx::__normal_iterator"** %8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %47, %"class.__gnu_cxx::__normal_iterator"** %7
  %48 = alloca %"struct.std::less", align 1
  %49 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %49, %"class.__gnu_cxx::__normal_iterator"** %6
  %50 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %50, %"class.__gnu_cxx::__normal_iterator"** %5
  %51 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %51, %"class.__gnu_cxx::__normal_iterator"** %4
  %52 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %53 = alloca %"struct.std::less", align 1
  %54 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %55 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %55, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %56, align 8
  %57 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %57, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %58, align 8
  %59 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %60 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %61 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxiESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %60, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %59) #3
  %62 = icmp sgt i64 %61, 1
  store i1 %62, i1* %3
  %63 = load i32, i32* @x.317
  %64 = load i32, i32* @y.318
  %65 = sub i32 %63, -553370078
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -553370078
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 false, true
  %76 = and i1 %73, false
  %77 = and i1 %71, %75
  %78 = and i1 %74, false
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 false, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  %89 = select i1 %87, i32 -403570846, i32 -206238339
  store i32 %89, i32* %21
  br label %176

; <label>:90:                                     ; preds = %22
  %91 = load volatile i1, i1* %3
  %92 = select i1 %91, i32 -1431242254, i32 274174492
  store i32 %92, i32* %21
  br label %176

; <label>:93:                                     ; preds = %22
  %94 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %95 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %94) #3
  %96 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator"* %96 to i8*
  %98 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %99, i64 8, i32 8, i1 false)
  %100 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator"* %100 to i8*
  %102 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %103 = bitcast %"class.__gnu_cxx::__normal_iterator"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %103, i64 8, i32 8, i1 false)
  %104 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator"* %104 to i8*
  %106 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %107, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessISt4pairIxiEEEENS0_15_Iter_comp_iterIT_EES7_()
  %108 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %108, i32 0, i32 0
  %110 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %109, align 8
  %111 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %111, i32 0, i32 0
  %113 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %112, align 8
  %114 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4
  %115 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %114, i32 0, i32 0
  %116 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %115, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_SE_T0_(%"struct.std::pair.0"* %110, %"struct.std::pair.0"* %113, %"struct.std::pair.0"* %116)
  store i32 274174492, i32* %21
  br label %176

; <label>:117:                                    ; preds = %22
  %118 = load i32, i32* @x.317
  %119 = load i32, i32* @y.318
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 false, true
  %130 = and i1 %127, false
  %131 = and i1 %125, %129
  %132 = and i1 %128, false
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 false, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  %143 = select i1 %141, i32 1397369388, i32 -324085109
  store i32 %143, i32* %21
  br label %176

; <label>:144:                                    ; preds = %22
  %145 = load i32, i32* @x.317
  %146 = load i32, i32* @y.318
  %147 = add i32 %145, 708735903
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, 708735903
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 1010588679, i32 -324085109
  store i32 %159, i32* %21
  br label %176

; <label>:160:                                    ; preds = %22
  ret void

; <label>:161:                                    ; preds = %22
  %162 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %163 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %164 = alloca %"struct.std::less", align 1
  %165 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %166 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %167 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %168 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %169 = alloca %"struct.std::less", align 1
  %170 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %171 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %162, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %171, align 8
  %172 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %163, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %172, align 8
  %173 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxiESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %163, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %162) #3
  %174 = icmp sgt i64 %173, 1
  store i32 -842740184, i32* %21
  br label %176

; <label>:175:                                    ; preds = %22
  store i32 1397369388, i32* %21
  br label %176

; <label>:176:                                    ; preds = %175, %161, %144, %117, %93, %90, %45, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxiESaIS1_EE8pop_backEv(%"class.std::vector"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %7, i32 -1
  store %"struct.std::pair.0"* %8, %"struct.std::pair.0"** %6, align 8
  %9 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %10 to %"class.std::allocator"*
  %12 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, int>, std::allocator<std::pair<long long, int> > >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %14, align 8
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxiEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* dereferenceable(1) %11, %"struct.std::pair.0"* %15)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %1
  ret void

; <label>:17:                                     ; preds = %1
  %18 = load i32, i32* @x.319
  %19 = load i32, i32* @y.320
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %60

; <label>:31:                                     ; preds = %17, %60
  %32 = landingpad { i8*, i32 }
          catch i8* null
  %33 = extractvalue { i8*, i32 } %32, 0
  call void @__clang_call_terminate(i8* %33) #11
  %34 = load i32, i32* @x.319
  %35 = load i32, i32* @y.320
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %60

; <label>:59:                                     ; preds = %31
  unreachable

; <label>:60:                                     ; preds = %31, %17
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #11
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.321
  %6 = load i32, i32* @y.322
  %7 = sub i32 %5, 1729934887
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1729934887
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1271043953, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1271043953, label %19
    i32 534192200, label %27
    i32 -633305455, label %49
    i32 2040627469, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 534192200, i32 2040627469
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %29, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %31, align 8
  %33 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %32, i32 -1
  store %"struct.std::pair.0"* %33, %"struct.std::pair.0"** %31, align 8
  %34 = load i32, i32* @x.321
  %35 = load i32, i32* @y.322
  %36 = sub i32 %34, 423018989
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 423018989
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -633305455, i32 2040627469
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  %50 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %53, i32 0, i32 0
  %55 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %54, align 8
  %56 = getelementptr inbounds %"struct.std::pair.0", %"struct.std::pair.0"* %55, i32 -1
  store %"struct.std::pair.0"* %56, %"struct.std::pair.0"** %54, align 8
  store i32 534192200, i32* %15
  br label %57

; <label>:57:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_SE_T0_(%"struct.std::pair.0"*, %"struct.std::pair.0"*, %"struct.std::pair.0"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca %"struct.std::pair.0", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"struct.std::pair.0", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair.0"* %0, %"struct.std::pair.0"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair.0"* %1, %"struct.std::pair.0"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.std::pair.0"* %2, %"struct.std::pair.0"** %14, align 8
  %15 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  %16 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %15) #3
  %17 = bitcast %"struct.std::pair.0"* %8 to i8*
  %18 = bitcast %"struct.std::pair.0"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 16, i32 8, i1 false)
  %19 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %20 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %19) #3
  %21 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %6) #3
  %22 = call dereferenceable(16) %"struct.std::pair.0"* @_ZNSt4pairIxiEaSEOS0_(%"struct.std::pair.0"* %21, %"struct.std::pair.0"* dereferenceable(16) %20) #3
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxiESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4) #3
  %26 = call dereferenceable(16) %"struct.std::pair.0"* @_ZSt4moveIRSt4pairIxiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.0"* dereferenceable(16) %8) #3
  %27 = bitcast %"struct.std::pair.0"* %10 to i8*
  %28 = bitcast %"struct.std::pair.0"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 16, i32 8, i1 false)
  %29 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %30 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 1, i32 1, i1 false)
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %32 = load %"struct.std::pair.0"*, %"struct.std::pair.0"** %31, align 8
  %33 = bitcast %"struct.std::pair.0"* %10 to { i64, i32 }*
  %34 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxiESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.0"* %32, i64 0, i64 %25, i64 %35, i32 %37)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4elemSaIS0_EEC2Ev(%"struct.std::_Vector_base.8"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.325
  %5 = load i32, i32* @y.326
  %6 = add i32 %4, -1820315706
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1820315706
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1237483037, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1237483037, label %18
    i32 576509901, label %38
    i32 -1594109459, label %56
    i32 -1832362513, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 576509901, i32 -1832362513
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %39, align 8
  %40 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.325
  %43 = load i32, i32* @y.326
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1594109459, i32 -1832362513
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %58, align 8
  %59 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %60)
  store i32 576509901, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %0, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %3 to %"class.std::allocator.9"*
  call void @_ZNSaI4elemEC2Ev(%"class.std::allocator.9"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %3, i32 0, i32 0
  store %struct.elem* null, %struct.elem** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %3, i32 0, i32 1
  store %struct.elem* null, %struct.elem** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %3, i32 0, i32 2
  store %struct.elem* null, %struct.elem** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI4elemEC2Ev(%"class.std::allocator.9"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  %4 = bitcast %"class.std::allocator.9"* %3 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorI4elemEC2Ev(%"class.__gnu_cxx::new_allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4elemEC2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.331
  %5 = load i32, i32* @y.332
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1860927694, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1860927694, label %17
    i32 740157140, label %37
    i32 -1709267768, label %55
    i32 -238418803, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 740157140, i32 -238418803
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %38, align 8
  %40 = load i32, i32* @x.331
  %41 = load i32, i32* @y.332
  %42 = sub i32 %40, -1163975448
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1163975448
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1709267768, i32 -238418803
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %57, align 8
  store i32 740157140, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP4elemS0_EvT_S2_RSaIT0_E(%struct.elem*, %struct.elem*, %"class.std::allocator.9"* dereferenceable(1)) #0 comdat {
  %4 = alloca %struct.elem*, align 8
  %5 = alloca %struct.elem*, align 8
  %6 = alloca %"class.std::allocator.9"*, align 8
  store %struct.elem* %0, %struct.elem** %4, align 8
  store %struct.elem* %1, %struct.elem** %5, align 8
  store %"class.std::allocator.9"* %2, %"class.std::allocator.9"** %6, align 8
  %7 = load %struct.elem*, %struct.elem** %4, align 8
  %8 = load %struct.elem*, %struct.elem** %5, align 8
  call void @_ZSt8_DestroyIP4elemEvT_S2_(%struct.elem* %7, %struct.elem* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %2, align 8
  %3 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %4 to %"class.std::allocator.9"*
  ret %"class.std::allocator.9"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4elemSaIS0_EED2Ev(%"struct.std::_Vector_base.8"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.337
  %3 = load i32, i32* @y.338
  %4 = add i32 %2, -684922282
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -684922282
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %114

; <label>:16:                                     ; preds = %1, %114
  %17 = alloca %"struct.std::_Vector_base.8"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %17, align 8
  %20 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %struct.elem*, %struct.elem** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %struct.elem*, %struct.elem** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %struct.elem*, %struct.elem** %28, align 8
  %30 = ptrtoint %struct.elem* %26 to i64
  %31 = ptrtoint %struct.elem* %29 to i64
  %32 = add i64 %30, -7278708666855472391
  %33 = sub i64 %32, %31
  %34 = sub i64 %33, -7278708666855472391
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 24
  %37 = load i32, i32* @x.337
  %38 = load i32, i32* @y.338
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %114

; <label>:50:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseI4elemSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.8"* %20, %struct.elem* %23, i64 %36)
          to label %51 unwind label %53

; <label>:51:                                     ; preds = %50
  %52 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %52) #3
  ret void

; <label>:53:                                     ; preds = %50
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %18, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %19, align 4
  %57 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %57) #3
  br label %58

; <label>:58:                                     ; preds = %53
  %59 = load i32, i32* @x.337
  %60 = load i32, i32* @y.338
  %61 = sub i32 %59, -1606079451
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -1606079451
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %172

; <label>:85:                                     ; preds = %58, %172
  %86 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %86) #11
  %87 = load i32, i32* @x.337
  %88 = load i32, i32* @y.338
  %89 = add i32 %87, -1182455450
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -1182455450
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %172

; <label>:113:                                    ; preds = %85
  unreachable

; <label>:114:                                    ; preds = %16, %1
  %115 = alloca %"struct.std::_Vector_base.8"*, align 8
  %116 = alloca i8*
  %117 = alloca i32
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %115, align 8
  %118 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %115, align 8
  %119 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %118, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %119, i32 0, i32 0
  %121 = load %struct.elem*, %struct.elem** %120, align 8
  %122 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %118, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %122, i32 0, i32 2
  %124 = load %struct.elem*, %struct.elem** %123, align 8
  %125 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %118, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %125, i32 0, i32 0
  %127 = load %struct.elem*, %struct.elem** %126, align 8
  %128 = ptrtoint %struct.elem* %124 to i64
  %129 = ptrtoint %struct.elem* %127 to i64
  %130 = shl i64 %128, %129
  %131 = add i64 0, 7735153174183298403
  %132 = sub i64 %131, %128
  %133 = sub i64 %132, 7735153174183298403
  %134 = sub i64 0, %128
  %135 = sub i64 0, %133
  %136 = sub i64 0, %129
  %137 = add i64 %135, %136
  %138 = sub i64 0, %137
  %139 = add i64 %133, %129
  %140 = sub i64 0, -8549417508636260966
  %141 = sub i64 %140, %128
  %142 = add i64 %141, -8549417508636260966
  %143 = sub i64 0, %128
  %144 = add i64 %142, -8398878316554296464
  %145 = add i64 %144, %129
  %146 = sub i64 %145, -8398878316554296464
  %147 = add i64 %142, %129
  %148 = sub i64 0, %129
  %149 = add i64 %128, %148
  %150 = sub i64 %128, %129
  %151 = mul i64 %149, %129
  %152 = sub i64 %128, 4391608549554743732
  %153 = sub i64 %152, %129
  %154 = add i64 %153, 4391608549554743732
  %155 = sub i64 %128, %129
  %156 = mul i64 %154, %129
  %157 = shl i64 %128, %129
  %158 = sub i64 %128, -7255697862934501819
  %159 = sub i64 %158, %129
  %160 = add i64 %159, -7255697862934501819
  %161 = sub i64 %128, %129
  %162 = mul i64 %160, %129
  %163 = sub i64 %128, 3438547376210326390
  %164 = sub i64 %163, %129
  %165 = add i64 %164, 3438547376210326390
  %166 = sub i64 %128, %129
  %167 = mul i64 %165, %129
  %168 = sub i64 0, %129
  %169 = add i64 %128, %168
  %170 = sub i64 %128, %129
  %171 = sdiv exact i64 %169, 24
  br label %16

; <label>:172:                                    ; preds = %85, %58
  %173 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %173) #11
  br label %85
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP4elemEvT_S2_(%struct.elem*, %struct.elem*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.339
  %6 = load i32, i32* @y.340
  %7 = add i32 %5, 512694901
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 512694901
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1340580778, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1340580778, label %19
    i32 -589663152, label %39
    i32 1650439699, label %59
    i32 1404834787, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -589663152, i32 1404834787
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.elem*, align 8
  %41 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %40, align 8
  store %struct.elem* %1, %struct.elem** %41, align 8
  %42 = load %struct.elem*, %struct.elem** %40, align 8
  %43 = load %struct.elem*, %struct.elem** %41, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP4elemEEvT_S4_(%struct.elem* %42, %struct.elem* %43)
  %44 = load i32, i32* @x.339
  %45 = load i32, i32* @y.340
  %46 = add i32 %44, 1405426757
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1405426757
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1650439699, i32 1404834787
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %struct.elem*, align 8
  %62 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %61, align 8
  store %struct.elem* %1, %struct.elem** %62, align 8
  %63 = load %struct.elem*, %struct.elem** %61, align 8
  %64 = load %struct.elem*, %struct.elem** %62, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP4elemEEvT_S4_(%struct.elem* %63, %struct.elem* %64)
  store i32 -589663152, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP4elemEEvT_S4_(%struct.elem*, %struct.elem*) #5 comdat align 2 {
  %3 = alloca %struct.elem*, align 8
  %4 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %3, align 8
  store %struct.elem* %1, %struct.elem** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4elemSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.8"*, %struct.elem*, i64) #0 comdat align 2 {
  %4 = alloca %struct.elem*
  %5 = alloca %"struct.std::_Vector_base.8"*
  %6 = alloca %"struct.std::_Vector_base.8"*, align 8
  %7 = alloca %struct.elem*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %6, align 8
  store %struct.elem* %1, %struct.elem** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %6, align 8
  store %"struct.std::_Vector_base.8"* %9, %"struct.std::_Vector_base.8"** %5
  %10 = load %struct.elem*, %struct.elem** %7, align 8
  store %struct.elem* %10, %struct.elem** %4
  %11 = alloca i32
  store i32 -2053236417, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -2053236417, label %15
    i32 -1077546289, label %19
    i32 -807058745, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %struct.elem*, %struct.elem** %4
  %17 = icmp ne %struct.elem* %16, null
  %18 = select i1 %17, i32 -1077546289, i32 -807058745
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %21 to %"class.std::allocator.9"*
  %23 = load %struct.elem*, %struct.elem** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaI4elemEE10deallocateERS1_PS0_m(%"class.std::allocator.9"* dereferenceable(1) %22, %struct.elem* %23, i64 %24)
  store i32 -807058745, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %0, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %3 to %"class.std::allocator.9"*
  call void @_ZNSaI4elemED2Ev(%"class.std::allocator.9"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4elemEE10deallocateERS1_PS0_m(%"class.std::allocator.9"* dereferenceable(1), %struct.elem*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.9"*, align 8
  %5 = alloca %struct.elem*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %4, align 8
  store %struct.elem* %1, %struct.elem** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  %8 = bitcast %"class.std::allocator.9"* %7 to %"class.__gnu_cxx::new_allocator.10"*
  %9 = load %struct.elem*, %struct.elem** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI4elemE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.10"* %8, %struct.elem* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4elemE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.10"*, %struct.elem*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %5 = alloca %struct.elem*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  store %struct.elem* %1, %struct.elem** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  %8 = load %struct.elem*, %struct.elem** %5, align 8
  %9 = bitcast %struct.elem* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI4elemED2Ev(%"class.std::allocator.9"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  %4 = bitcast %"class.std::allocator.9"* %3 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorI4elemED2Ev(%"class.__gnu_cxx::new_allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4elemED2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.7"* @_ZSt4moveIRSt6vectorI4elemSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.7"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %3 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  ret %"class.std::vector.7"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI4elemSaIS0_EEC2EOS2_(%"class.std::vector.7"*, %"class.std::vector.7"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store %"class.std::vector.7"* %1, %"class.std::vector.7"** %4, align 8
  %5 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %6 = bitcast %"class.std::vector.7"* %5 to %"struct.std::_Vector_base.8"*
  %7 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.7"* @_ZSt4moveIRSt6vectorI4elemSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::vector.7"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.7"* %8 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EEC2EOS2_(%"struct.std::_Vector_base.8"* %6, %"struct.std::_Vector_base.8"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.elem*, %struct.elem*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %5 = alloca %"struct.std::less.12", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %9 = alloca %"struct.std::less.12", align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %4, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %7 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI4elemEEENS0_15_Iter_comp_iterIT_EES6_()
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %6, i32 0, i32 0
  %18 = load %struct.elem*, %struct.elem** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %7, i32 0, i32 0
  %20 = load %struct.elem*, %struct.elem** %19, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_T0_(%struct.elem* %18, %struct.elem* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.elem* @_ZNSt6vectorI4elemSaIS0_EE5beginEv(%"class.std::vector.7"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %3 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  %4 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %5 = bitcast %"class.std::vector.7"* %4 to %"struct.std::_Vector_base.8"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.21"* %2, %struct.elem** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %2, i32 0, i32 0
  %9 = load %struct.elem*, %struct.elem** %8, align 8
  ret %struct.elem* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.elem* @_ZNSt6vectorI4elemSaIS0_EE3endEv(%"class.std::vector.7"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %3 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  %4 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %5 = bitcast %"class.std::vector.7"* %4 to %"struct.std::_Vector_base.8"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.21"* %2, %struct.elem** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %2, i32 0, i32 0
  %9 = load %struct.elem*, %struct.elem** %8, align 8
  ret %struct.elem* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4elemSaIS0_EEC2EOS2_(%"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.8"*, align 8
  %4 = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %3, align 8
  store %"struct.std::_Vector_base.8"* %1, %"struct.std::_Vector_base.8"** %4, align 8
  %5 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.9"* @_ZSt4moveIRSaI4elemEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.9"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_implC2EOS1_(%"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %6, %"class.std::allocator.9"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_impl12_M_swap_dataERS3_(%"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %10, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZSt4moveIRSaI4elemEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.9"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.9"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.367
  %6 = load i32, i32* @y.368
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1860000095, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1860000095, label %18
    i32 -824588472, label %26
    i32 -1454098519, label %55
    i32 -1045075434, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -824588472, i32 -1045075434
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %27, align 8
  %28 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %27, align 8
  store %"class.std::allocator.9"* %28, %"class.std::allocator.9"** %2
  %29 = load i32, i32* @x.367
  %30 = load i32, i32* @y.368
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1454098519, i32 -1045075434
  store i32 %54, i32* %14
  br label %60

; <label>:55:                                     ; preds = %15
  %56 = load volatile %"class.std::allocator.9"*, %"class.std::allocator.9"** %2
  ret %"class.std::allocator.9"* %56

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %58, align 8
  %59 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %58, align 8
  store i32 -824588472, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_implC2EOS1_(%"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %0, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %4, align 8
  %5 = load %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %5 to %"class.std::allocator.9"*
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.9"* @_ZSt4moveIRSaI4elemEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.9"* dereferenceable(1) %7) #3
  call void @_ZNSaI4elemEC2ERKS0_(%"class.std::allocator.9"* %6, %"class.std::allocator.9"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %5, i32 0, i32 0
  store %struct.elem* null, %struct.elem** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %5, i32 0, i32 1
  store %struct.elem* null, %struct.elem** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %5, i32 0, i32 2
  store %struct.elem* null, %struct.elem** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4elemSaIS0_EE12_Vector_impl12_M_swap_dataERS3_(%"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %0, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %1, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIP4elemEvRT_S3_(%struct.elem** dereferenceable(8) %6, %struct.elem** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIP4elemEvRT_S3_(%struct.elem** dereferenceable(8) %9, %struct.elem** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"*, %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIP4elemEvRT_S3_(%struct.elem** dereferenceable(8) %12, %struct.elem** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI4elemEC2ERKS0_(%"class.std::allocator.9"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.373
  %6 = load i32, i32* @y.374
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1632141650, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1632141650, label %18
    i32 1087612565, label %38
    i32 -301543258, label %72
    i32 472057974, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1087612565, i32 472057974
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.9"*, align 8
  %40 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %39, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %40, align 8
  %41 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %39, align 8
  %42 = bitcast %"class.std::allocator.9"* %41 to %"class.__gnu_cxx::new_allocator.10"*
  %43 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %40, align 8
  %44 = bitcast %"class.std::allocator.9"* %43 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorI4elemEC2ERKS2_(%"class.__gnu_cxx::new_allocator.10"* %42, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1) %44) #3
  %45 = load i32, i32* @x.373
  %46 = load i32, i32* @y.374
  %47 = add i32 %45, -1587165868
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1587165868
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -301543258, i32 472057974
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::allocator.9"*, align 8
  %75 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %74, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %75, align 8
  %76 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %74, align 8
  %77 = bitcast %"class.std::allocator.9"* %76 to %"class.__gnu_cxx::new_allocator.10"*
  %78 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %75, align 8
  %79 = bitcast %"class.std::allocator.9"* %78 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorI4elemEC2ERKS2_(%"class.__gnu_cxx::new_allocator.10"* %77, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1) %79) #3
  store i32 1087612565, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4elemEC2ERKS2_(%"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.375
  %6 = load i32, i32* @y.376
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1865234884, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1865234884, label %18
    i32 1222734750, label %26
    i32 1159269983, label %45
    i32 218857102, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1222734750, i32 218857102
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %28 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %27, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %1, %"class.__gnu_cxx::new_allocator.10"** %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %27, align 8
  %30 = load i32, i32* @x.375
  %31 = load i32, i32* @y.376
  %32 = add i32 %30, -496361078
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -496361078
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1159269983, i32 218857102
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %48 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %47, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %1, %"class.__gnu_cxx::new_allocator.10"** %48, align 8
  %49 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %47, align 8
  store i32 1222734750, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIP4elemEvRT_S3_(%struct.elem** dereferenceable(8), %struct.elem** dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.377
  %6 = load i32, i32* @y.378
  %7 = sub i32 %5, 1467684756
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1467684756
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 434478170, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 434478170, label %19
    i32 325368642, label %27
    i32 394582853, label %55
    i32 645434960, label %56
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 325368642, i32 645434960
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %struct.elem**, align 8
  %29 = alloca %struct.elem**, align 8
  %30 = alloca %struct.elem*, align 8
  store %struct.elem** %0, %struct.elem*** %28, align 8
  store %struct.elem** %1, %struct.elem*** %29, align 8
  %31 = load %struct.elem**, %struct.elem*** %28, align 8
  %32 = call dereferenceable(8) %struct.elem** @_ZSt4moveIRP4elemEONSt16remove_referenceIT_E4typeEOS4_(%struct.elem** dereferenceable(8) %31) #3
  %33 = load %struct.elem*, %struct.elem** %32, align 8
  store %struct.elem* %33, %struct.elem** %30, align 8
  %34 = load %struct.elem**, %struct.elem*** %29, align 8
  %35 = call dereferenceable(8) %struct.elem** @_ZSt4moveIRP4elemEONSt16remove_referenceIT_E4typeEOS4_(%struct.elem** dereferenceable(8) %34) #3
  %36 = load %struct.elem*, %struct.elem** %35, align 8
  %37 = load %struct.elem**, %struct.elem*** %28, align 8
  store %struct.elem* %36, %struct.elem** %37, align 8
  %38 = call dereferenceable(8) %struct.elem** @_ZSt4moveIRP4elemEONSt16remove_referenceIT_E4typeEOS4_(%struct.elem** dereferenceable(8) %30) #3
  %39 = load %struct.elem*, %struct.elem** %38, align 8
  %40 = load %struct.elem**, %struct.elem*** %29, align 8
  store %struct.elem* %39, %struct.elem** %40, align 8
  %41 = load i32, i32* @x.377
  %42 = load i32, i32* @y.378
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 394582853, i32 645434960
  store i32 %54, i32* %15
  br label %70

; <label>:55:                                     ; preds = %16
  ret void

; <label>:56:                                     ; preds = %16
  %57 = alloca %struct.elem**, align 8
  %58 = alloca %struct.elem**, align 8
  %59 = alloca %struct.elem*, align 8
  store %struct.elem** %0, %struct.elem*** %57, align 8
  store %struct.elem** %1, %struct.elem*** %58, align 8
  %60 = load %struct.elem**, %struct.elem*** %57, align 8
  %61 = call dereferenceable(8) %struct.elem** @_ZSt4moveIRP4elemEONSt16remove_referenceIT_E4typeEOS4_(%struct.elem** dereferenceable(8) %60) #3
  %62 = load %struct.elem*, %struct.elem** %61, align 8
  store %struct.elem* %62, %struct.elem** %59, align 8
  %63 = load %struct.elem**, %struct.elem*** %58, align 8
  %64 = call dereferenceable(8) %struct.elem** @_ZSt4moveIRP4elemEONSt16remove_referenceIT_E4typeEOS4_(%struct.elem** dereferenceable(8) %63) #3
  %65 = load %struct.elem*, %struct.elem** %64, align 8
  %66 = load %struct.elem**, %struct.elem*** %57, align 8
  store %struct.elem* %65, %struct.elem** %66, align 8
  %67 = call dereferenceable(8) %struct.elem** @_ZSt4moveIRP4elemEONSt16remove_referenceIT_E4typeEOS4_(%struct.elem** dereferenceable(8) %59) #3
  %68 = load %struct.elem*, %struct.elem** %67, align 8
  %69 = load %struct.elem**, %struct.elem*** %58, align 8
  store %struct.elem* %68, %struct.elem** %69, align 8
  store i32 325368642, i32* %15
  br label %70

; <label>:70:                                     ; preds = %56, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.elem** @_ZSt4moveIRP4elemEONSt16remove_referenceIT_E4typeEOS4_(%struct.elem** dereferenceable(8)) #5 comdat {
  %2 = alloca %struct.elem**, align 8
  store %struct.elem** %0, %struct.elem*** %2, align 8
  %3 = load %struct.elem**, %struct.elem*** %2, align 8
  ret %struct.elem** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_T0_(%struct.elem*, %struct.elem*) #0 comdat {
  %3 = alloca i64
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.elem, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %12 = alloca %struct.elem, align 8
  %13 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %4, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %15, align 8
  %16 = call i64 @_ZN9__gnu_cxxmiIP4elemSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8) %4) #3
  store i64 %16, i64* %3
  %17 = alloca i32
  store i32 1950261360, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1950261360, label %21
    i32 -592358335, label %25
    i32 -452887826, label %26
    i32 1759747807, label %34
    i32 -914518547, label %56
    i32 -1811054175, label %71
    i32 -1465305204, label %87
    i32 1104061079, label %88
    i32 -1177549913, label %93
    i32 -1472854075, label %94
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %3
  %23 = icmp slt i64 %22, 2
  %24 = select i1 %23, i32 -592358335, i32 -452887826
  store i32 %24, i32* %17
  br label %95

; <label>:25:                                     ; preds = %18
  store i32 -1177549913, i32* %17
  br label %95

; <label>:26:                                     ; preds = %18
  %27 = call i64 @_ZN9__gnu_cxxmiIP4elemSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8) %4) #3
  store i64 %27, i64* %7, align 8
  %28 = load i64, i64* %7, align 8
  %29 = add i64 %28, -8806891822940400386
  %30 = sub i64 %29, 2
  %31 = sub i64 %30, -8806891822940400386
  %32 = sub nsw i64 %28, 2
  %33 = sdiv i64 %31, 2
  store i64 %33, i64* %8, align 8
  store i32 1759747807, i32* %17
  br label %95

; <label>:34:                                     ; preds = %18
  %35 = load i64, i64* %8, align 8
  %36 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %4, i64 %35) #3
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %10, i32 0, i32 0
  store %struct.elem* %36, %struct.elem** %37, align 8
  %38 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %10) #3
  %39 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %38) #3
  %40 = bitcast %struct.elem* %9 to i8*
  %41 = bitcast %struct.elem* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 24, i32 8, i1 false)
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %11 to i8*
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = load i64, i64* %8, align 8
  %45 = load i64, i64* %7, align 8
  %46 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %9) #3
  %47 = bitcast %struct.elem* %12 to i8*
  %48 = bitcast %struct.elem* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 24, i32 8, i1 false)
  %49 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %13 to i8*
  %50 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 1, i32 1, i1 false)
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %11, i32 0, i32 0
  %52 = load %struct.elem*, %struct.elem** %51, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.elem* %52, i64 %44, i64 %45, %struct.elem* byval align 8 %12)
  %53 = load i64, i64* %8, align 8
  %54 = icmp eq i64 %53, 0
  %55 = select i1 %54, i32 -914518547, i32 1104061079
  store i32 %55, i32* %17
  br label %95

; <label>:56:                                     ; preds = %18
  %57 = load i32, i32* @x.381
  %58 = load i32, i32* @y.382
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -1811054175, i32 -1472854075
  store i32 %70, i32* %17
  br label %95

; <label>:71:                                     ; preds = %18
  %72 = load i32, i32* @x.381
  %73 = load i32, i32* @y.382
  %74 = sub i32 %72, -124429017
  %75 = sub i32 %74, 1
  %76 = add i32 %75, -124429017
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 -1465305204, i32 -1472854075
  store i32 %86, i32* %17
  br label %95

; <label>:87:                                     ; preds = %18
  store i32 -1177549913, i32* %17
  br label %95

; <label>:88:                                     ; preds = %18
  %89 = load i64, i64* %8, align 8
  %90 = sub i64 0, -1
  %91 = sub i64 %89, %90
  %92 = add nsw i64 %89, -1
  store i64 %91, i64* %8, align 8
  store i32 1759747807, i32* %17
  br label %95

; <label>:93:                                     ; preds = %18
  ret void

; <label>:94:                                     ; preds = %18
  store i32 -1811054175, i32* %17
  br label %95

; <label>:95:                                     ; preds = %94, %88, %87, %71, %56, %34, %26, %25, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI4elemEEENS0_15_Iter_comp_iterIT_EES6_() #0 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.383
  %4 = load i32, i32* @y.384
  %5 = add i32 %3, 731478642
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 731478642
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -1557996722, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1557996722, label %17
    i32 1070531947, label %25
    i32 1747953958, label %55
    i32 2030325894, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1070531947, i32 2030325894
  store i32 %24, i32* %13
  br label %60

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %27 = alloca %"struct.std::less.12", align 1
  %28 = alloca %"struct.std::less.12", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4elemEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %26)
  %29 = load i32, i32* @x.383
  %30 = load i32, i32* @y.384
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1747953958, i32 2030325894
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %58 = alloca %"struct.std::less.12", align 1
  %59 = alloca %"struct.std::less.12", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4elemEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %57)
  store i32 1070531947, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIP4elemSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %1, %"class.__gnu_cxx::__normal_iterator.21"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %3, align 8
  %6 = call dereferenceable(8) %struct.elem** @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.21"* %5) #3
  %7 = load %struct.elem*, %struct.elem** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %4, align 8
  %9 = call dereferenceable(8) %struct.elem** @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.21"* %8) #3
  %10 = load %struct.elem*, %struct.elem** %9, align 8
  %11 = ptrtoint %struct.elem* %7 to i64
  %12 = ptrtoint %struct.elem* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 24
  ret i64 %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24)) #5 comdat {
  %2 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %2, align 8
  %3 = load %struct.elem*, %struct.elem** %2, align 8
  ret %struct.elem* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.elem*, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %7, i32 0, i32 0
  %9 = load %struct.elem*, %struct.elem** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %struct.elem, %struct.elem* %9, i64 %10
  store %struct.elem* %11, %struct.elem** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.21"* %3, %struct.elem** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  %13 = load %struct.elem*, %struct.elem** %12, align 8
  ret %struct.elem* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"*) #5 comdat align 2 {
  %2 = alloca %struct.elem*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.391
  %6 = load i32, i32* @y.392
  %7 = add i32 %5, 1603620951
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1603620951
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 55616736, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 55616736, label %19
    i32 1742078977, label %27
    i32 -950536852, label %47
    i32 640190118, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1742078977, i32 640190118
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %29, i32 0, i32 0
  %31 = load %struct.elem*, %struct.elem** %30, align 8
  store %struct.elem* %31, %struct.elem** %2
  %32 = load i32, i32* @x.391
  %33 = load i32, i32* @y.392
  %34 = add i32 %32, 641925764
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 641925764
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -950536852, i32 640190118
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %struct.elem*, %struct.elem** %2
  ret %struct.elem* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %50, align 8
  %51 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %50, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %51, i32 0, i32 0
  %53 = load %struct.elem*, %struct.elem** %52, align 8
  store i32 1742078977, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.elem*, i64, i64, %struct.elem* byval align 8) #0 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*
  %9 = alloca %struct.elem*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.21"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.21"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.21"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.21"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.21"*
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.21"*
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.21"*
  %17 = alloca i64*
  %18 = alloca i64*
  %19 = alloca i64*
  %20 = alloca i64*
  %21 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.21"*
  %23 = alloca i1
  %24 = alloca i1
  %25 = load i32, i32* @x.393
  %26 = load i32, i32* @y.394
  %27 = sub i32 %25, -369021037
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -369021037
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  store i1 %33, i1* %24
  %34 = icmp slt i32 %26, 10
  store i1 %34, i1* %23
  %35 = alloca i32
  store i32 -1032727026, i32* %35
  br label %36

; <label>:36:                                     ; preds = %4, %530
  %37 = load i32, i32* %35
  switch i32 %37, label %38 [
    i32 -1032727026, label %39
    i32 -297035883, label %47
    i32 -16553969, label %102
    i32 -1270168689, label %103
    i32 -1643961500, label %118
    i32 -1712993608, label %142
    i32 1255902105, label %145
    i32 -11098851, label %179
    i32 -491093955, label %187
    i32 1064971899, label %210
    i32 -1476856546, label %225
    i32 826542252, label %260
    i32 1398161306, label %263
    i32 944304152, label %291
    i32 1293849162, label %329
    i32 1714917063, label %332
    i32 342411542, label %371
    i32 921737727, label %392
    i32 2050577217, label %413
    i32 478239429, label %478
    i32 -1076733052, label %491
  ]

; <label>:38:                                     ; preds = %36
  br label %530

; <label>:39:                                     ; preds = %36
  %40 = load volatile i1, i1* %24
  %41 = load volatile i1, i1* %23
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -297035883, i32 921737727
  store i32 %46, i32* %35
  br label %530

; <label>:47:                                     ; preds = %36
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %48, %"class.__gnu_cxx::__normal_iterator.21"** %22
  %49 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %49, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %21
  %50 = alloca i64, align 8
  store i64* %50, i64** %20
  %51 = alloca i64, align 8
  store i64* %51, i64** %19
  %52 = alloca i64, align 8
  store i64* %52, i64** %18
  %53 = alloca i64, align 8
  store i64* %53, i64** %17
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %54, %"class.__gnu_cxx::__normal_iterator.21"** %16
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %55, %"class.__gnu_cxx::__normal_iterator.21"** %15
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %56, %"class.__gnu_cxx::__normal_iterator.21"** %14
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %57, %"class.__gnu_cxx::__normal_iterator.21"** %13
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %58, %"class.__gnu_cxx::__normal_iterator.21"** %12
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %59, %"class.__gnu_cxx::__normal_iterator.21"** %11
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %60, %"class.__gnu_cxx::__normal_iterator.21"** %10
  %61 = alloca %struct.elem, align 8
  store %struct.elem* %61, %struct.elem** %9
  %62 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", align 1
  %63 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %63, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %8
  %64 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", align 1
  %65 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %22
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %65, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %66, align 8
  %67 = load volatile i64*, i64** %20
  store i64 %1, i64* %67, align 8
  %68 = load volatile i64*, i64** %19
  store i64 %2, i64* %68, align 8
  %69 = load volatile i64*, i64** %20
  %70 = load i64, i64* %69, align 8
  %71 = load volatile i64*, i64** %18
  store i64 %70, i64* %71, align 8
  %72 = load volatile i64*, i64** %20
  %73 = load i64, i64* %72, align 8
  %74 = load volatile i64*, i64** %17
  store i64 %73, i64* %74, align 8
  %75 = load i32, i32* @x.393
  %76 = load i32, i32* @y.394
  %77 = add i32 %75, -1074072323
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -1074072323
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 -16553969, i32 921737727
  store i32 %101, i32* %35
  br label %530

; <label>:102:                                    ; preds = %36
  store i32 -1270168689, i32* %35
  br label %530

; <label>:103:                                    ; preds = %36
  %104 = load i32, i32* @x.393
  %105 = load i32, i32* @y.394
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  %117 = select i1 %115, i32 -1643961500, i32 2050577217
  store i32 %117, i32* %35
  br label %530

; <label>:118:                                    ; preds = %36
  %119 = load volatile i64*, i64** %17
  %120 = load i64, i64* %119, align 8
  %121 = load volatile i64*, i64** %19
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 0, 1
  %124 = add i64 %122, %123
  %125 = sub nsw i64 %122, 1
  %126 = sdiv i64 %124, 2
  %127 = icmp slt i64 %120, %126
  store i1 %127, i1* %7
  %128 = load i32, i32* @x.393
  %129 = load i32, i32* @y.394
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  %141 = select i1 %139, i32 -1712993608, i32 2050577217
  store i32 %141, i32* %35
  br label %530

; <label>:142:                                    ; preds = %36
  %143 = load volatile i1, i1* %7
  %144 = select i1 %143, i32 1255902105, i32 1064971899
  store i32 %144, i32* %35
  br label %530

; <label>:145:                                    ; preds = %36
  %146 = load volatile i64*, i64** %17
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 842788086478407292
  %149 = add i64 %148, 1
  %150 = sub i64 %149, 842788086478407292
  %151 = add nsw i64 %147, 1
  %152 = mul nsw i64 2, %150
  %153 = load volatile i64*, i64** %17
  store i64 %152, i64* %153, align 8
  %154 = load volatile i64*, i64** %17
  %155 = load i64, i64* %154, align 8
  %156 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %22
  %157 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %156, i64 %155) #3
  %158 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %16
  %159 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %158, i32 0, i32 0
  store %struct.elem* %157, %struct.elem** %159, align 8
  %160 = load volatile i64*, i64** %17
  %161 = load i64, i64* %160, align 8
  %162 = sub i64 %161, -5247247961303615984
  %163 = sub i64 %162, 1
  %164 = add i64 %163, -5247247961303615984
  %165 = sub nsw i64 %161, 1
  %166 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %22
  %167 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %166, i64 %164) #3
  %168 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %15
  %169 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %168, i32 0, i32 0
  store %struct.elem* %167, %struct.elem** %169, align 8
  %170 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %16
  %171 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %170, i32 0, i32 0
  %172 = load %struct.elem*, %struct.elem** %171, align 8
  %173 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %15
  %174 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %173, i32 0, i32 0
  %175 = load %struct.elem*, %struct.elem** %174, align 8
  %176 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %21
  %177 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4elemEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %176, %struct.elem* %172, %struct.elem* %175)
  %178 = select i1 %177, i32 -11098851, i32 -491093955
  store i32 %178, i32* %35
  br label %530

; <label>:179:                                    ; preds = %36
  %180 = load volatile i64*, i64** %17
  %181 = load i64, i64* %180, align 8
  %182 = add i64 %181, 4509912808054996321
  %183 = add i64 %182, -1
  %184 = sub i64 %183, 4509912808054996321
  %185 = add nsw i64 %181, -1
  %186 = load volatile i64*, i64** %17
  store i64 %184, i64* %186, align 8
  store i32 -491093955, i32* %35
  br label %530

; <label>:187:                                    ; preds = %36
  %188 = load volatile i64*, i64** %17
  %189 = load i64, i64* %188, align 8
  %190 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %22
  %191 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %190, i64 %189) #3
  %192 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %14
  %193 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %192, i32 0, i32 0
  store %struct.elem* %191, %struct.elem** %193, align 8
  %194 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %14
  %195 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %194) #3
  %196 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %195) #3
  %197 = load volatile i64*, i64** %20
  %198 = load i64, i64* %197, align 8
  %199 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %22
  %200 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %199, i64 %198) #3
  %201 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %13
  %202 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %201, i32 0, i32 0
  store %struct.elem* %200, %struct.elem** %202, align 8
  %203 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %13
  %204 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %203) #3
  %205 = bitcast %struct.elem* %204 to i8*
  %206 = bitcast %struct.elem* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %205, i8* %206, i64 24, i32 8, i1 false)
  %207 = load volatile i64*, i64** %17
  %208 = load i64, i64* %207, align 8
  %209 = load volatile i64*, i64** %20
  store i64 %208, i64* %209, align 8
  store i32 -1270168689, i32* %35
  br label %530

; <label>:210:                                    ; preds = %36
  %211 = load i32, i32* @x.393
  %212 = load i32, i32* @y.394
  %213 = sub i32 0, 1
  %214 = add i32 %211, %213
  %215 = sub i32 %211, 1
  %216 = mul i32 %211, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %212, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  %224 = select i1 %222, i32 -1476856546, i32 478239429
  store i32 %224, i32* %35
  br label %530

; <label>:225:                                    ; preds = %36
  %226 = load volatile i64*, i64** %19
  %227 = load i64, i64* %226, align 8
  %228 = xor i64 1, -1
  %229 = xor i64 %227, %228
  %230 = and i64 %229, %227
  %231 = and i64 %227, 1
  %232 = icmp eq i64 %230, 0
  store i1 %232, i1* %6
  %233 = load i32, i32* @x.393
  %234 = load i32, i32* @y.394
  %235 = sub i32 %233, 1290029279
  %236 = sub i32 %235, 1
  %237 = add i32 %236, 1290029279
  %238 = sub i32 %233, 1
  %239 = mul i32 %233, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %234, 10
  %243 = xor i1 %241, true
  %244 = xor i1 %242, true
  %245 = xor i1 false, true
  %246 = and i1 %243, false
  %247 = and i1 %241, %245
  %248 = and i1 %244, false
  %249 = and i1 %242, %245
  %250 = or i1 %246, %247
  %251 = or i1 %248, %249
  %252 = xor i1 %250, %251
  %253 = or i1 %243, %244
  %254 = xor i1 %253, true
  %255 = or i1 false, %245
  %256 = and i1 %254, %255
  %257 = or i1 %252, %256
  %258 = or i1 %241, %242
  %259 = select i1 %257, i32 826542252, i32 478239429
  store i32 %259, i32* %35
  br label %530

; <label>:260:                                    ; preds = %36
  %261 = load volatile i1, i1* %6
  %262 = select i1 %261, i32 1398161306, i32 342411542
  store i32 %262, i32* %35
  br label %530

; <label>:263:                                    ; preds = %36
  %264 = load i32, i32* @x.393
  %265 = load i32, i32* @y.394
  %266 = sub i32 %264, -766430640
  %267 = sub i32 %266, 1
  %268 = add i32 %267, -766430640
  %269 = sub i32 %264, 1
  %270 = mul i32 %264, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %265, 10
  %274 = xor i1 %272, true
  %275 = xor i1 %273, true
  %276 = xor i1 true, true
  %277 = and i1 %274, true
  %278 = and i1 %272, %276
  %279 = and i1 %275, true
  %280 = and i1 %273, %276
  %281 = or i1 %277, %278
  %282 = or i1 %279, %280
  %283 = xor i1 %281, %282
  %284 = or i1 %274, %275
  %285 = xor i1 %284, true
  %286 = or i1 true, %276
  %287 = and i1 %285, %286
  %288 = or i1 %283, %287
  %289 = or i1 %272, %273
  %290 = select i1 %288, i32 944304152, i32 -1076733052
  store i32 %290, i32* %35
  br label %530

; <label>:291:                                    ; preds = %36
  %292 = load volatile i64*, i64** %17
  %293 = load i64, i64* %292, align 8
  %294 = load volatile i64*, i64** %19
  %295 = load i64, i64* %294, align 8
  %296 = sub i64 %295, 5213645739526597330
  %297 = sub i64 %296, 2
  %298 = add i64 %297, 5213645739526597330
  %299 = sub nsw i64 %295, 2
  %300 = sdiv i64 %298, 2
  %301 = icmp eq i64 %293, %300
  store i1 %301, i1* %5
  %302 = load i32, i32* @x.393
  %303 = load i32, i32* @y.394
  %304 = add i32 %302, 1206362145
  %305 = sub i32 %304, 1
  %306 = sub i32 %305, 1206362145
  %307 = sub i32 %302, 1
  %308 = mul i32 %302, %306
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %303, 10
  %312 = xor i1 %310, true
  %313 = xor i1 %311, true
  %314 = xor i1 false, true
  %315 = and i1 %312, false
  %316 = and i1 %310, %314
  %317 = and i1 %313, false
  %318 = and i1 %311, %314
  %319 = or i1 %315, %316
  %320 = or i1 %317, %318
  %321 = xor i1 %319, %320
  %322 = or i1 %312, %313
  %323 = xor i1 %322, true
  %324 = or i1 false, %314
  %325 = and i1 %323, %324
  %326 = or i1 %321, %325
  %327 = or i1 %310, %311
  %328 = select i1 %326, i32 1293849162, i32 -1076733052
  store i32 %328, i32* %35
  br label %530

; <label>:329:                                    ; preds = %36
  %330 = load volatile i1, i1* %5
  %331 = select i1 %330, i32 1714917063, i32 342411542
  store i32 %331, i32* %35
  br label %530

; <label>:332:                                    ; preds = %36
  %333 = load volatile i64*, i64** %17
  %334 = load i64, i64* %333, align 8
  %335 = sub i64 %334, -8930380639904262665
  %336 = add i64 %335, 1
  %337 = add i64 %336, -8930380639904262665
  %338 = add nsw i64 %334, 1
  %339 = mul nsw i64 2, %337
  %340 = load volatile i64*, i64** %17
  store i64 %339, i64* %340, align 8
  %341 = load volatile i64*, i64** %17
  %342 = load i64, i64* %341, align 8
  %343 = add i64 %342, -4231734951713312393
  %344 = sub i64 %343, 1
  %345 = sub i64 %344, -4231734951713312393
  %346 = sub nsw i64 %342, 1
  %347 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %22
  %348 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %347, i64 %345) #3
  %349 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %12
  %350 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %349, i32 0, i32 0
  store %struct.elem* %348, %struct.elem** %350, align 8
  %351 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %12
  %352 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %351) #3
  %353 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %352) #3
  %354 = load volatile i64*, i64** %20
  %355 = load i64, i64* %354, align 8
  %356 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %22
  %357 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %356, i64 %355) #3
  %358 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %11
  %359 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %358, i32 0, i32 0
  store %struct.elem* %357, %struct.elem** %359, align 8
  %360 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %11
  %361 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %360) #3
  %362 = bitcast %struct.elem* %361 to i8*
  %363 = bitcast %struct.elem* %353 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %362, i8* %363, i64 24, i32 8, i1 false)
  %364 = load volatile i64*, i64** %17
  %365 = load i64, i64* %364, align 8
  %366 = sub i64 %365, 3820150880631112919
  %367 = sub i64 %366, 1
  %368 = add i64 %367, 3820150880631112919
  %369 = sub nsw i64 %365, 1
  %370 = load volatile i64*, i64** %20
  store i64 %368, i64* %370, align 8
  store i32 342411542, i32* %35
  br label %530

; <label>:371:                                    ; preds = %36
  %372 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %10
  %373 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %372 to i8*
  %374 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %22
  %375 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %374 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %373, i8* %375, i64 8, i32 8, i1 false)
  %376 = load volatile i64*, i64** %20
  %377 = load i64, i64* %376, align 8
  %378 = load volatile i64*, i64** %18
  %379 = load i64, i64* %378, align 8
  %380 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %3) #3
  %381 = load volatile %struct.elem*, %struct.elem** %9
  %382 = bitcast %struct.elem* %381 to i8*
  %383 = bitcast %struct.elem* %380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %382, i8* %383, i64 24, i32 8, i1 false)
  %384 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %8
  %385 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %384 to i8*
  %386 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %21
  %387 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %386 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %385, i8* %387, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4elemEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE()
  %388 = load volatile %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %10
  %389 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %388, i32 0, i32 0
  %390 = load %struct.elem*, %struct.elem** %389, align 8
  %391 = load volatile %struct.elem*, %struct.elem** %9
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops14_Iter_comp_valISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.elem* %390, i64 %377, i64 %379, %struct.elem* byval align 8 %391)
  ret void

; <label>:392:                                    ; preds = %36
  %393 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %394 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %395 = alloca i64, align 8
  %396 = alloca i64, align 8
  %397 = alloca i64, align 8
  %398 = alloca i64, align 8
  %399 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %400 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %401 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %402 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %403 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %404 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %405 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %406 = alloca %struct.elem, align 8
  %407 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", align 1
  %408 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %409 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", align 1
  %410 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %393, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %410, align 8
  store i64 %1, i64* %395, align 8
  store i64 %2, i64* %396, align 8
  %411 = load i64, i64* %395, align 8
  store i64 %411, i64* %397, align 8
  %412 = load i64, i64* %395, align 8
  store i64 %412, i64* %398, align 8
  store i32 -297035883, i32* %35
  br label %530

; <label>:413:                                    ; preds = %36
  %414 = load volatile i64*, i64** %17
  %415 = load i64, i64* %414, align 8
  %416 = load volatile i64*, i64** %19
  %417 = load i64, i64* %416, align 8
  %418 = shl i64 %417, 1
  %419 = shl i64 %417, 1
  %420 = sub i64 %417, 2824335649901067449
  %421 = sub i64 %420, 1
  %422 = add i64 %421, 2824335649901067449
  %423 = sub i64 %417, 1
  %424 = mul i64 %422, 1
  %425 = sub i64 0, 1
  %426 = add i64 %417, %425
  %427 = sub i64 %417, 1
  %428 = mul i64 %426, 1
  %429 = sub i64 0, 1
  %430 = add i64 %417, %429
  %431 = sub i64 %417, 1
  %432 = mul i64 %430, 1
  %433 = sub i64 0, 1
  %434 = add i64 %417, %433
  %435 = sub nsw i64 %417, 1
  %436 = sub i64 0, 5227376842385899817
  %437 = sub i64 %436, %434
  %438 = add i64 %437, 5227376842385899817
  %439 = sub i64 0, %434
  %440 = sub i64 %438, 3655719613935775069
  %441 = add i64 %440, 2
  %442 = add i64 %441, 3655719613935775069
  %443 = add i64 %438, 2
  %444 = add i64 %434, -7232734777492768934
  %445 = sub i64 %444, 2
  %446 = sub i64 %445, -7232734777492768934
  %447 = sub i64 %434, 2
  %448 = mul i64 %446, 2
  %449 = shl i64 %434, 2
  %450 = shl i64 %434, 2
  %451 = sub i64 0, 2
  %452 = add i64 %434, %451
  %453 = sub i64 %434, 2
  %454 = mul i64 %452, 2
  %455 = sub i64 0, 2
  %456 = add i64 %434, %455
  %457 = sub i64 %434, 2
  %458 = mul i64 %456, 2
  %459 = sub i64 0, 7403874051891657951
  %460 = sub i64 %459, %434
  %461 = add i64 %460, 7403874051891657951
  %462 = sub i64 0, %434
  %463 = sub i64 0, 2
  %464 = sub i64 %461, %463
  %465 = add i64 %461, 2
  %466 = shl i64 %434, 2
  %467 = add i64 0, -6155757521353139317
  %468 = sub i64 %467, %434
  %469 = sub i64 %468, -6155757521353139317
  %470 = sub i64 0, %434
  %471 = sub i64 0, %469
  %472 = sub i64 0, 2
  %473 = add i64 %471, %472
  %474 = sub i64 0, %473
  %475 = add i64 %469, 2
  %476 = sdiv i64 %434, 2
  %477 = icmp slt i64 %415, %476
  store i32 -1643961500, i32* %35
  br label %530

; <label>:478:                                    ; preds = %36
  %479 = load volatile i64*, i64** %19
  %480 = load i64, i64* %479, align 8
  %481 = shl i64 %480, 1
  %482 = xor i64 %480, -1
  %483 = xor i64 1, -1
  %484 = xor i64 -6785325326821916761, -1
  %485 = or i64 %482, %483
  %486 = or i64 -6785325326821916761, %484
  %487 = xor i64 %485, -1
  %488 = and i64 %487, %486
  %489 = and i64 %480, 1
  %490 = icmp eq i64 %488, 0
  store i32 -1476856546, i32* %35
  br label %530

; <label>:491:                                    ; preds = %36
  %492 = load volatile i64*, i64** %17
  %493 = load i64, i64* %492, align 8
  %494 = load volatile i64*, i64** %19
  %495 = load i64, i64* %494, align 8
  %496 = sub i64 %495, -1111775808735019947
  %497 = sub i64 %496, 2
  %498 = add i64 %497, -1111775808735019947
  %499 = sub i64 %495, 2
  %500 = mul i64 %498, 2
  %501 = add i64 %495, 8714284803692904984
  %502 = sub i64 %501, 2
  %503 = sub i64 %502, 8714284803692904984
  %504 = sub i64 %495, 2
  %505 = mul i64 %503, 2
  %506 = add i64 0, 777985089476781312
  %507 = sub i64 %506, %495
  %508 = sub i64 %507, 777985089476781312
  %509 = sub i64 0, %495
  %510 = sub i64 0, %508
  %511 = sub i64 0, 2
  %512 = add i64 %510, %511
  %513 = sub i64 0, %512
  %514 = add i64 %508, 2
  %515 = add i64 %495, 8765453230895525365
  %516 = sub i64 %515, 2
  %517 = sub i64 %516, 8765453230895525365
  %518 = sub i64 %495, 2
  %519 = mul i64 %517, 2
  %520 = sub i64 0, 2
  %521 = add i64 %495, %520
  %522 = sub nsw i64 %495, 2
  %523 = sub i64 0, 2
  %524 = add i64 %521, %523
  %525 = sub i64 %521, 2
  %526 = mul i64 %524, 2
  %527 = shl i64 %521, 2
  %528 = sdiv i64 %521, 2
  %529 = icmp eq i64 %493, %528
  store i32 944304152, i32* %35
  br label %530

; <label>:530:                                    ; preds = %491, %478, %413, %392, %332, %329, %291, %263, %260, %225, %210, %187, %179, %145, %142, %118, %103, %102, %47, %39, %38
  br label %36
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.elem** @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.21"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  ret %struct.elem** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.21"*, %struct.elem** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  %4 = alloca %struct.elem**, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %3, align 8
  store %struct.elem** %1, %struct.elem*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  %7 = load %struct.elem**, %struct.elem*** %4, align 8
  %8 = load %struct.elem*, %struct.elem** %7, align 8
  store %struct.elem* %8, %struct.elem** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4elemEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEESC_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, %struct.elem*, %struct.elem*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.399
  %8 = load i32, i32* @y.400
  %9 = add i32 %7, 743527309
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 743527309
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 160503610, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %67
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 160503610, label %21
    i32 -1130384851, label %29
    i32 -1515969686, label %54
    i32 -1525719452, label %56
  ]

; <label>:20:                                     ; preds = %18
  br label %67

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1130384851, i32 -1525719452
  store i32 %28, i32* %17
  br label %67

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %32 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %30, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %33, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %31, i32 0, i32 0
  store %struct.elem* %2, %struct.elem** %34, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %32, align 8
  %35 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %32, align 8
  %36 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %35, i32 0, i32 0
  %37 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %30) #3
  %38 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %31) #3
  %39 = call zeroext i1 @_ZNKSt4lessI4elemEclERKS0_S3_(%"struct.std::less.12"* %36, %struct.elem* dereferenceable(24) %37, %struct.elem* dereferenceable(24) %38)
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.399
  %41 = load i32, i32* @y.400
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1515969686, i32 -1525719452
  store i32 %53, i32* %17
  br label %67

; <label>:54:                                     ; preds = %18
  %55 = load volatile i1, i1* %4
  ret i1 %55

; <label>:56:                                     ; preds = %18
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %59 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %57, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %60, align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %58, i32 0, i32 0
  store %struct.elem* %2, %struct.elem** %61, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %59, align 8
  %62 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %59, align 8
  %63 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %62, i32 0, i32 0
  %64 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %57) #3
  %65 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %58) #3
  %66 = call zeroext i1 @_ZNKSt4lessI4elemEclERKS0_S3_(%"struct.std::less.12"* %63, %struct.elem* dereferenceable(24) %64, %struct.elem* dereferenceable(24) %65)
  store i32 -1130384851, i32* %17
  br label %67

; <label>:67:                                     ; preds = %56, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops14_Iter_comp_valISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.elem*, i64, i64, %struct.elem* byval align 8) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %14, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  %15 = load i64, i64* %7, align 8
  %16 = sub i64 0, 1
  %17 = add i64 %15, %16
  %18 = sub nsw i64 %15, 1
  %19 = sdiv i64 %17, 2
  store i64 %19, i64* %9, align 8
  %20 = alloca i32
  store i32 -1817578065, i32* %20
  %21 = alloca i1
  br label %22

; <label>:22:                                     ; preds = %4, %214
  %23 = load i32, i32* %20
  switch i32 %23, label %24 [
    i32 -1817578065, label %25
    i32 -239230551, label %30
    i32 -1763804207, label %37
    i32 1515868089, label %40
    i32 368992890, label %68
    i32 1821678863, label %101
    i32 1768820324, label %102
    i32 -838106199, label %129
    i32 268844395, label %164
    i32 -55297837, label %165
    i32 328058625, label %206
  ]

; <label>:24:                                     ; preds = %22
  br label %214

; <label>:25:                                     ; preds = %22
  %26 = load i64, i64* %7, align 8
  %27 = load i64, i64* %8, align 8
  %28 = icmp sgt i64 %26, %27
  %29 = select i1 %28, i32 -239230551, i32 -1763804207
  store i32 %29, i32* %20
  store i1 false, i1* %21
  br label %214

; <label>:30:                                     ; preds = %22
  %31 = load i64, i64* %9, align 8
  %32 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %5, i64 %31) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %10, i32 0, i32 0
  store %struct.elem* %32, %struct.elem** %33, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %10, i32 0, i32 0
  %35 = load %struct.elem*, %struct.elem** %34, align 8
  %36 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4elemEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEES3_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.23"* %6, %struct.elem* %35, %struct.elem* dereferenceable(24) %3)
  store i32 -1763804207, i32* %20
  store i1 %36, i1* %21
  br label %214

; <label>:37:                                     ; preds = %22
  %38 = load i1, i1* %21
  %39 = select i1 %38, i32 1515868089, i32 1768820324
  store i32 %39, i32* %20
  br label %214

; <label>:40:                                     ; preds = %22
  %41 = load i32, i32* @x.401
  %42 = load i32, i32* @y.402
  %43 = add i32 %41, -1016210170
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1016210170
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 368992890, i32 -55297837
  store i32 %67, i32* %20
  br label %214

; <label>:68:                                     ; preds = %22
  %69 = load i64, i64* %9, align 8
  %70 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %5, i64 %69) #3
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %11, i32 0, i32 0
  store %struct.elem* %70, %struct.elem** %71, align 8
  %72 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %11) #3
  %73 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %72) #3
  %74 = load i64, i64* %7, align 8
  %75 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %5, i64 %74) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %12, i32 0, i32 0
  store %struct.elem* %75, %struct.elem** %76, align 8
  %77 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %12) #3
  %78 = bitcast %struct.elem* %77 to i8*
  %79 = bitcast %struct.elem* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 24, i32 8, i1 false)
  %80 = load i64, i64* %9, align 8
  store i64 %80, i64* %7, align 8
  %81 = load i64, i64* %7, align 8
  %82 = sub i64 0, 1
  %83 = add i64 %81, %82
  %84 = sub nsw i64 %81, 1
  %85 = sdiv i64 %83, 2
  store i64 %85, i64* %9, align 8
  %86 = load i32, i32* @x.401
  %87 = load i32, i32* @y.402
  %88 = sub i32 %86, -1696369359
  %89 = sub i32 %88, 1
  %90 = add i32 %89, -1696369359
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 1821678863, i32 -55297837
  store i32 %100, i32* %20
  br label %214

; <label>:101:                                    ; preds = %22
  store i32 -1817578065, i32* %20
  br label %214

; <label>:102:                                    ; preds = %22
  %103 = load i32, i32* @x.401
  %104 = load i32, i32* @y.402
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 -838106199, i32 328058625
  store i32 %128, i32* %20
  br label %214

; <label>:129:                                    ; preds = %22
  %130 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %3) #3
  %131 = load i64, i64* %7, align 8
  %132 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %5, i64 %131) #3
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %13, i32 0, i32 0
  store %struct.elem* %132, %struct.elem** %133, align 8
  %134 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %13) #3
  %135 = bitcast %struct.elem* %134 to i8*
  %136 = bitcast %struct.elem* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %136, i64 24, i32 8, i1 false)
  %137 = load i32, i32* @x.401
  %138 = load i32, i32* @y.402
  %139 = add i32 %137, 1718027869
  %140 = sub i32 %139, 1
  %141 = sub i32 %140, 1718027869
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 false, true
  %150 = and i1 %147, false
  %151 = and i1 %145, %149
  %152 = and i1 %148, false
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 false, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  %163 = select i1 %161, i32 268844395, i32 328058625
  store i32 %163, i32* %20
  br label %214

; <label>:164:                                    ; preds = %22
  ret void

; <label>:165:                                    ; preds = %22
  %166 = load i64, i64* %9, align 8
  %167 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %5, i64 %166) #3
  %168 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %11, i32 0, i32 0
  store %struct.elem* %167, %struct.elem** %168, align 8
  %169 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %11) #3
  %170 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %169) #3
  %171 = load i64, i64* %7, align 8
  %172 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %5, i64 %171) #3
  %173 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %12, i32 0, i32 0
  store %struct.elem* %172, %struct.elem** %173, align 8
  %174 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %12) #3
  %175 = bitcast %struct.elem* %174 to i8*
  %176 = bitcast %struct.elem* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %176, i64 24, i32 8, i1 false)
  %177 = load i64, i64* %9, align 8
  store i64 %177, i64* %7, align 8
  %178 = load i64, i64* %7, align 8
  %179 = shl i64 %178, 1
  %180 = sub i64 0, 1
  %181 = add i64 %178, %180
  %182 = sub nsw i64 %178, 1
  %183 = shl i64 %181, 2
  %184 = sub i64 0, %181
  %185 = add i64 0, %184
  %186 = sub i64 0, %181
  %187 = sub i64 0, %185
  %188 = sub i64 0, 2
  %189 = add i64 %187, %188
  %190 = sub i64 0, %189
  %191 = add i64 %185, 2
  %192 = sub i64 0, 2
  %193 = add i64 %181, %192
  %194 = sub i64 %181, 2
  %195 = mul i64 %193, 2
  %196 = shl i64 %181, 2
  %197 = shl i64 %181, 2
  %198 = shl i64 %181, 2
  %199 = sub i64 %181, 1287808232284589166
  %200 = sub i64 %199, 2
  %201 = add i64 %200, 1287808232284589166
  %202 = sub i64 %181, 2
  %203 = mul i64 %201, 2
  %204 = shl i64 %181, 2
  %205 = sdiv i64 %181, 2
  store i64 %205, i64* %9, align 8
  store i32 368992890, i32* %20
  br label %214

; <label>:206:                                    ; preds = %22
  %207 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %3) #3
  %208 = load i64, i64* %7, align 8
  %209 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEplEl(%"class.__gnu_cxx::__normal_iterator.21"* %5, i64 %208) #3
  %210 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %13, i32 0, i32 0
  store %struct.elem* %209, %struct.elem** %210, align 8
  %211 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %13) #3
  %212 = bitcast %struct.elem* %211 to i8*
  %213 = bitcast %struct.elem* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %212, i8* %213, i64 24, i32 8, i1 false)
  store i32 -838106199, i32* %20
  br label %214

; <label>:214:                                    ; preds = %206, %165, %129, %102, %101, %68, %40, %37, %30, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4elemEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS6_EE() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %3 = alloca %"struct.std::less.12", align 1
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %2, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4elemEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.23"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessI4elemEclERKS0_S3_(%"struct.std::less.12"*, %struct.elem* dereferenceable(24), %struct.elem* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"struct.std::less.12"*, align 8
  %5 = alloca %struct.elem*, align 8
  %6 = alloca %struct.elem*, align 8
  store %"struct.std::less.12"* %0, %"struct.std::less.12"** %4, align 8
  store %struct.elem* %1, %struct.elem** %5, align 8
  store %struct.elem* %2, %struct.elem** %6, align 8
  %7 = load %"struct.std::less.12"*, %"struct.std::less.12"** %4, align 8
  %8 = load %struct.elem*, %struct.elem** %5, align 8
  %9 = load %struct.elem*, %struct.elem** %6, align 8
  %10 = call zeroext i1 @_ZNK4elemltERKS_(%struct.elem* %8, %struct.elem* dereferenceable(24) %9)
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK4elemltERKS_(%struct.elem*, %struct.elem* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.407
  %7 = load i32, i32* @y.408
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1680510610, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %87
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1680510610, label %19
    i32 -828035446, label %39
    i32 -2086211300, label %75
    i32 -1606525081, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %87

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -828035446, i32 -1606525081
  store i32 %38, i32* %15
  br label %87

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.elem*, align 8
  %41 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %40, align 8
  store %struct.elem* %1, %struct.elem** %41, align 8
  %42 = load %struct.elem*, %struct.elem** %40, align 8
  %43 = load %struct.elem*, %struct.elem** %41, align 8
  %44 = getelementptr inbounds %struct.elem, %struct.elem* %43, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %struct.elem, %struct.elem* %42, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp slt i64 %45, %47
  store i1 %48, i1* %3
  %49 = load i32, i32* @x.407
  %50 = load i32, i32* @y.408
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -2086211300, i32 -1606525081
  store i32 %74, i32* %15
  br label %87

; <label>:75:                                     ; preds = %16
  %76 = load volatile i1, i1* %3
  ret i1 %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %struct.elem*, align 8
  %79 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %78, align 8
  store %struct.elem* %1, %struct.elem** %79, align 8
  %80 = load %struct.elem*, %struct.elem** %78, align 8
  %81 = load %struct.elem*, %struct.elem** %79, align 8
  %82 = getelementptr inbounds %struct.elem, %struct.elem* %81, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %struct.elem, %struct.elem* %80, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = icmp slt i64 %83, %85
  store i32 -828035446, i32* %15
  br label %87

; <label>:87:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4elemEEclINS_17__normal_iteratorIPS3_St6vectorIS3_SaIS3_EEEES3_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.23"*, %struct.elem*, %struct.elem* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.409
  %8 = load i32, i32* @y.410
  %9 = add i32 %7, 1043837295
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1043837295
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -61745515, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %65
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -61745515, label %21
    i32 2090471692, label %29
    i32 -1090044666, label %53
    i32 -809192328, label %55
  ]

; <label>:20:                                     ; preds = %18
  br label %65

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 2090471692, i32 -809192328
  store i32 %28, i32* %17
  br label %65

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %31 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"*, align 8
  %32 = alloca %struct.elem*, align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %30, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %33, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"** %31, align 8
  store %struct.elem* %2, %struct.elem** %32, align 8
  %34 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"** %31, align 8
  %35 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"* %34, i32 0, i32 0
  %36 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %30) #3
  %37 = load %struct.elem*, %struct.elem** %32, align 8
  %38 = call zeroext i1 @_ZNKSt4lessI4elemEclERKS0_S3_(%"struct.std::less.12"* %35, %struct.elem* dereferenceable(24) %36, %struct.elem* dereferenceable(24) %37)
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.409
  %40 = load i32, i32* @y.410
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1090044666, i32 -809192328
  store i32 %52, i32* %17
  br label %65

; <label>:53:                                     ; preds = %18
  %54 = load volatile i1, i1* %4
  ret i1 %54

; <label>:55:                                     ; preds = %18
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %57 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"*, align 8
  %58 = alloca %struct.elem*, align 8
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %56, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %59, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"** %57, align 8
  store %struct.elem* %2, %struct.elem** %58, align 8
  %60 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"** %57, align 8
  %61 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"* %60, i32 0, i32 0
  %62 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %56) #3
  %63 = load %struct.elem*, %struct.elem** %58, align 8
  %64 = call zeroext i1 @_ZNKSt4lessI4elemEclERKS0_S3_(%"struct.std::less.12"* %61, %struct.elem* dereferenceable(24) %62, %struct.elem* dereferenceable(24) %63)
  store i32 2090471692, i32* %17
  br label %65

; <label>:65:                                     ; preds = %55, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4elemEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.23"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::less.12", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", %"struct.__gnu_cxx::__ops::_Iter_comp_val.23"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessI4elemEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.413
  %5 = load i32, i32* @y.414
  %6 = sub i32 %4, -1998866088
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1998866088
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 579287724, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 579287724, label %18
    i32 -277448421, label %38
    i32 -1250098137, label %70
    i32 1572827977, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -277448421, i32 1572827977
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::less.12", align 1
  %40 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %40, align 8
  %41 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %40, align 8
  %42 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %41, i32 0, i32 0
  %43 = load i32, i32* @x.413
  %44 = load i32, i32* @y.414
  %45 = add i32 %43, -251208722
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -251208722
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1250098137, i32 1572827977
  store i32 %69, i32* %14
  br label %76

; <label>:70:                                     ; preds = %15
  ret void

; <label>:71:                                     ; preds = %15
  %72 = alloca %"struct.std::less.12", align 1
  %73 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %73, align 8
  %74 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"** %73, align 8
  %75 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %74, i32 0, i32 0
  store i32 -277448421, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.16"*, i64, %"class.std::allocator.17"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.16"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.17"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.17"* %2, %"class.std::allocator.17"** %6, align 8
  %9 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10, %"class.std::allocator.17"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.16"* %9, i64 %12)
          to label %13 unwind label %55

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.419
  %15 = load i32, i32* @y.420
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %105

; <label>:27:                                     ; preds = %13, %105
  %28 = load i32, i32* @x.419
  %29 = load i32, i32* @y.420
  %30 = sub i32 %28, 603110950
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 603110950
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %105

; <label>:54:                                     ; preds = %27
  ret void

; <label>:55:                                     ; preds = %3
  %56 = load i32, i32* @x.419
  %57 = load i32, i32* @y.420
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %106

; <label>:69:                                     ; preds = %55, %106
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %7, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10) #3
  %73 = load i32, i32* @x.419
  %74 = load i32, i32* @y.420
  %75 = sub i32 %73, 1850462722
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 1850462722
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  br i1 %97, label %99, label %106

; <label>:99:                                     ; preds = %69
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i8*, i8** %7, align 8
  %102 = load i32, i32* %8, align 4
  %103 = insertvalue { i8*, i32 } undef, i8* %101, 0
  %104 = insertvalue { i8*, i32 } %103, i32 %102, 1
  resume { i8*, i32 } %104

; <label>:105:                                    ; preds = %27, %13
  br label %27

; <label>:106:                                    ; preds = %69, %55
  %107 = landingpad { i8*, i32 }
          cleanup
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %7, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10) #3
  br label %69
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.15"*, i64, %"class.std::vector.1"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.15"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.15"* %0, %"class.std::vector.15"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.1"* %2, %"class.std::vector.1"** %6, align 8
  %7 = load %"class.std::vector.15"*, %"class.std::vector.15"** %4, align 8
  %8 = bitcast %"class.std::vector.15"* %7 to %"struct.std::_Vector_base.16"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.1"*, %"class.std::vector.1"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"class.std::vector.1"*, %"class.std::vector.1"** %6, align 8
  %14 = bitcast %"class.std::vector.15"* %7 to %"struct.std::_Vector_base.16"*
  %15 = call dereferenceable(1) %"class.std::allocator.17"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.16"* %14) #3
  %16 = call %"class.std::vector.1"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.1"* %11, i64 %12, %"class.std::vector.1"* dereferenceable(24) %13, %"class.std::allocator.17"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.15"* %7 to %"struct.std::_Vector_base.16"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %18, i32 0, i32 1
  store %"class.std::vector.1"* %16, %"class.std::vector.1"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.16"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.423
  %3 = load i32, i32* @y.424
  %4 = add i32 %2, 875311172
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 875311172
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %156

; <label>:28:                                     ; preds = %1, %156
  %29 = alloca %"struct.std::_Vector_base.16"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %29, align 8
  %32 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::vector.1"*, %"class.std::vector.1"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load %"class.std::vector.1"*, %"class.std::vector.1"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"class.std::vector.1"*, %"class.std::vector.1"** %40, align 8
  %42 = ptrtoint %"class.std::vector.1"* %38 to i64
  %43 = ptrtoint %"class.std::vector.1"* %41 to i64
  %44 = sub i64 %42, 6918996660404589065
  %45 = sub i64 %44, %43
  %46 = add i64 %45, 6918996660404589065
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 24
  %49 = load i32, i32* @x.423
  %50 = load i32, i32* @y.424
  %51 = add i32 %49, 1935249016
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1935249016
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %156

; <label>:63:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.16"* %32, %"class.std::vector.1"* %35, i64 %48)
          to label %64 unwind label %66

; <label>:64:                                     ; preds = %63
  %65 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %65) #3
  ret void

; <label>:66:                                     ; preds = %63
  %67 = load i32, i32* @x.423
  %68 = load i32, i32* @y.424
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %212

; <label>:92:                                     ; preds = %66, %212
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %30, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %31, align 4
  %96 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %96) #3
  %97 = load i32, i32* @x.423
  %98 = load i32, i32* @y.424
  %99 = add i32 %97, -185846797
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, -185846797
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %212

; <label>:111:                                    ; preds = %92
  br label %112

; <label>:112:                                    ; preds = %111
  %113 = load i32, i32* @x.423
  %114 = load i32, i32* @y.424
  %115 = add i32 %113, -1820893851
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, -1820893851
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %217

; <label>:127:                                    ; preds = %112, %217
  %128 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %128) #11
  %129 = load i32, i32* @x.423
  %130 = load i32, i32* @y.424
  %131 = add i32 %129, 1677153262
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, 1677153262
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 true, true
  %142 = and i1 %139, true
  %143 = and i1 %137, %141
  %144 = and i1 %140, true
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 true, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %217

; <label>:155:                                    ; preds = %127
  unreachable

; <label>:156:                                    ; preds = %28, %1
  %157 = alloca %"struct.std::_Vector_base.16"*, align 8
  %158 = alloca i8*
  %159 = alloca i32
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %157, align 8
  %160 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %157, align 8
  %161 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %161, i32 0, i32 0
  %163 = load %"class.std::vector.1"*, %"class.std::vector.1"** %162, align 8
  %164 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %160, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %164, i32 0, i32 2
  %166 = load %"class.std::vector.1"*, %"class.std::vector.1"** %165, align 8
  %167 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %160, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %167, i32 0, i32 0
  %169 = load %"class.std::vector.1"*, %"class.std::vector.1"** %168, align 8
  %170 = ptrtoint %"class.std::vector.1"* %166 to i64
  %171 = ptrtoint %"class.std::vector.1"* %169 to i64
  %172 = shl i64 %170, %171
  %173 = add i64 0, -1141056602326653837
  %174 = sub i64 %173, %170
  %175 = sub i64 %174, -1141056602326653837
  %176 = sub i64 0, %170
  %177 = sub i64 0, %171
  %178 = sub i64 %175, %177
  %179 = add i64 %175, %171
  %180 = sub i64 %170, 8265104800339630821
  %181 = sub i64 %180, %171
  %182 = add i64 %181, 8265104800339630821
  %183 = sub i64 %170, %171
  %184 = mul i64 %182, %171
  %185 = add i64 0, -5689688196595007516
  %186 = sub i64 %185, %170
  %187 = sub i64 %186, -5689688196595007516
  %188 = sub i64 0, %170
  %189 = sub i64 0, %171
  %190 = sub i64 %187, %189
  %191 = add i64 %187, %171
  %192 = sub i64 %170, -7835278525637916942
  %193 = sub i64 %192, %171
  %194 = add i64 %193, -7835278525637916942
  %195 = sub i64 %170, %171
  %196 = shl i64 %194, 24
  %197 = sub i64 0, %194
  %198 = add i64 0, %197
  %199 = sub i64 0, %194
  %200 = sub i64 0, 24
  %201 = sub i64 %198, %200
  %202 = add i64 %198, 24
  %203 = add i64 0, 3913445800388246313
  %204 = sub i64 %203, %194
  %205 = sub i64 %204, 3913445800388246313
  %206 = sub i64 0, %194
  %207 = add i64 %205, 945511024271639447
  %208 = add i64 %207, 24
  %209 = sub i64 %208, 945511024271639447
  %210 = add i64 %205, 24
  %211 = sdiv exact i64 %194, 24
  br label %28

; <label>:212:                                    ; preds = %92, %66
  %213 = landingpad { i8*, i32 }
          catch i8* null
  %214 = extractvalue { i8*, i32 } %213, 0
  store i8* %214, i8** %30, align 8
  %215 = extractvalue { i8*, i32 } %213, 1
  store i32 %215, i32* %31, align 4
  %216 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %216) #3
  br label %92

; <label>:217:                                    ; preds = %127, %112
  %218 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %218) #11
  br label %127
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"class.std::allocator.17"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.17"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.17"* %1, %"class.std::allocator.17"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5 to %"class.std::allocator.17"*
  %7 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %4, align 8
  call void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.17"* %6, %"class.std::allocator.17"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.1"* null, %"class.std::vector.1"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.1"* null, %"class.std::vector.1"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.1"* null, %"class.std::vector.1"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.16"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.16"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.1"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.16"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.1"* %7, %"class.std::vector.1"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.1"*, %"class.std::vector.1"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.1"* %12, %"class.std::vector.1"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.1"*, %"class.std::vector.1"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.1", %"class.std::vector.1"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.1"* %19, %"class.std::vector.1"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3 to %"class.std::allocator.17"*
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.17"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.17"*, %"class.std::allocator.17"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.431
  %6 = load i32, i32* @y.432
  %7 = add i32 %5, -90850984
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -90850984
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1725914222, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1725914222, label %19
    i32 1535098777, label %27
    i32 -2024320309, label %61
    i32 -1053147314, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1535098777, i32 -1053147314
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.17"*, align 8
  %29 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %28, align 8
  store %"class.std::allocator.17"* %1, %"class.std::allocator.17"** %29, align 8
  %30 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %28, align 8
  %31 = bitcast %"class.std::allocator.17"* %30 to %"class.__gnu_cxx::new_allocator.18"*
  %32 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %29, align 8
  %33 = bitcast %"class.std::allocator.17"* %32 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.18"* %31, %"class.__gnu_cxx::new_allocator.18"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.431
  %35 = load i32, i32* @y.432
  %36 = add i32 %34, -2010673141
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -2010673141
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -2024320309, i32 -1053147314
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator.17"*, align 8
  %64 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %63, align 8
  store %"class.std::allocator.17"* %1, %"class.std::allocator.17"** %64, align 8
  %65 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %63, align 8
  %66 = bitcast %"class.std::allocator.17"* %65 to %"class.__gnu_cxx::new_allocator.18"*
  %67 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %64, align 8
  %68 = bitcast %"class.std::allocator.17"* %67 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.18"* %66, %"class.__gnu_cxx::new_allocator.18"* dereferenceable(1) %68) #3
  store i32 1535098777, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %1, %"class.__gnu_cxx::new_allocator.18"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.1"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.16"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.16"*
  %5 = alloca %"struct.std::_Vector_base.16"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %5, align 8
  store %"struct.std::_Vector_base.16"* %7, %"struct.std::_Vector_base.16"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 1004978349, i32* %9
  %10 = alloca %"class.std::vector.1"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1004978349, label %14
    i32 1229598632, label %18
    i32 1678873861, label %24
    i32 13610095, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1229598632, i32 1678873861
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %20 to %"class.std::allocator.17"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::vector.1"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.17"* dereferenceable(1) %21, i64 %22)
  store i32 13610095, i32* %9
  store %"class.std::vector.1"* %23, %"class.std::vector.1"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 13610095, i32* %9
  store %"class.std::vector.1"* null, %"class.std::vector.1"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"class.std::vector.1"*, %"class.std::vector.1"** %10
  ret %"class.std::vector.1"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.1"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.17"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.17"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %3, align 8
  %6 = bitcast %"class.std::allocator.17"* %5 to %"class.__gnu_cxx::new_allocator.18"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.1"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"* %6, i64 %7, i8* null)
  ret %"class.std::vector.1"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.1"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 551160323, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 551160323, label %16
    i32 1374954424, label %21
    i32 -1922487733, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1374954424, i32 -1922487733
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.1"*
  ret %"class.std::vector.1"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.441
  %5 = load i32, i32* @y.442
  %6 = sub i32 %4, 1441298518
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1441298518
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2122432011, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2122432011, label %18
    i32 961369591, label %26
    i32 251284705, label %44
    i32 1420147823, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 961369591, i32 1420147823
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %27, align 8
  %29 = load i32, i32* @x.441
  %30 = load i32, i32* @y.442
  %31 = add i32 %29, -1220726054
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1220726054
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 251284705, i32 1420147823
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %46, align 8
  store i32 961369591, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.1"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.1"*, i64, %"class.std::vector.1"* dereferenceable(24), %"class.std::allocator.17"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.1"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.1"*, align 8
  %8 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.1"* %2, %"class.std::vector.1"** %7, align 8
  store %"class.std::allocator.17"* %3, %"class.std::allocator.17"** %8, align 8
  %9 = load %"class.std::vector.1"*, %"class.std::vector.1"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.1"*, %"class.std::vector.1"** %7, align 8
  %12 = call %"class.std::vector.1"* @_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.1"* %9, i64 %10, %"class.std::vector.1"* dereferenceable(24) %11)
  ret %"class.std::vector.1"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.17"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.16"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.16"*, align 8
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %2, align 8
  %3 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %4 to %"class.std::allocator.17"*
  ret %"class.std::allocator.17"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.1"* @_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.1"*, i64, %"class.std::vector.1"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.1"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.1"* %2, %"class.std::vector.1"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.1"*, %"class.std::vector.1"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.1"*, %"class.std::vector.1"** %6, align 8
  %11 = call %"class.std::vector.1"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.1"* %8, i64 %9, %"class.std::vector.1"* dereferenceable(24) %10)
  ret %"class.std::vector.1"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.1"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.1"*, i64, %"class.std::vector.1"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.449
  %5 = load i32, i32* @y.450
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %301

; <label>:29:                                     ; preds = %3, %301
  %30 = alloca %"class.std::vector.1"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::vector.1"*, align 8
  %33 = alloca %"class.std::vector.1"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::vector.1"* %2, %"class.std::vector.1"** %32, align 8
  %36 = load %"class.std::vector.1"*, %"class.std::vector.1"** %30, align 8
  store %"class.std::vector.1"* %36, %"class.std::vector.1"** %33, align 8
  %37 = load i32, i32* @x.449
  %38 = load i32, i32* @y.450
  %39 = add i32 %37, -227593107
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -227593107
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %301

; <label>:51:                                     ; preds = %29
  br label %52

; <label>:52:                                     ; preds = %100, %51
  %53 = load i64, i64* %31, align 8
  %54 = icmp ugt i64 %53, 0
  br i1 %54, label %55, label %201

; <label>:55:                                     ; preds = %52
  %56 = load %"class.std::vector.1"*, %"class.std::vector.1"** %33, align 8
  %57 = call %"class.std::vector.1"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.1"* dereferenceable(24) %56) #3
  %58 = load %"class.std::vector.1"*, %"class.std::vector.1"** %32, align 8
  invoke void @_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.1"* %57, %"class.std::vector.1"* dereferenceable(24) %58)
          to label %59 unwind label %109

; <label>:59:                                     ; preds = %55
  %60 = load i32, i32* @x.449
  %61 = load i32, i32* @y.450
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %309

; <label>:73:                                     ; preds = %59, %309
  %74 = load i32, i32* @x.449
  %75 = load i32, i32* @y.450
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  br i1 %97, label %99, label %309

; <label>:99:                                     ; preds = %73
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i64, i64* %31, align 8
  %102 = sub i64 0, %101
  %103 = sub i64 0, -1
  %104 = add i64 %102, %103
  %105 = sub i64 0, %104
  %106 = add i64 %101, -1
  store i64 %105, i64* %31, align 8
  %107 = load %"class.std::vector.1"*, %"class.std::vector.1"** %33, align 8
  %108 = getelementptr inbounds %"class.std::vector.1", %"class.std::vector.1"* %107, i32 1
  store %"class.std::vector.1"* %108, %"class.std::vector.1"** %33, align 8
  br label %52

; <label>:109:                                    ; preds = %55
  %110 = load i32, i32* @x.449
  %111 = load i32, i32* @y.450
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 true, true
  %122 = and i1 %119, true
  %123 = and i1 %117, %121
  %124 = and i1 %120, true
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 true, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %310

; <label>:135:                                    ; preds = %109, %310
  %136 = landingpad { i8*, i32 }
          catch i8* null
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %34, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %35, align 4
  %139 = load i32, i32* @x.449
  %140 = load i32, i32* @y.450
  %141 = sub i32 0, 1
  %142 = add i32 %139, %141
  %143 = sub i32 %139, 1
  %144 = mul i32 %139, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %140, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  br i1 %150, label %152, label %310

; <label>:152:                                    ; preds = %135
  br label %153

; <label>:153:                                    ; preds = %152
  %154 = load i32, i32* @x.449
  %155 = load i32, i32* @y.450
  %156 = sub i32 %154, -20979519
  %157 = sub i32 %156, 1
  %158 = add i32 %157, -20979519
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = and i1 %162, %163
  %165 = xor i1 %162, %163
  %166 = or i1 %164, %165
  %167 = or i1 %162, %163
  br i1 %166, label %168, label %314

; <label>:168:                                    ; preds = %153, %314
  %169 = load i8*, i8** %34, align 8
  %170 = call i8* @__cxa_begin_catch(i8* %169) #3
  %171 = load %"class.std::vector.1"*, %"class.std::vector.1"** %30, align 8
  %172 = load %"class.std::vector.1"*, %"class.std::vector.1"** %33, align 8
  %173 = load i32, i32* @x.449
  %174 = load i32, i32* @y.450
  %175 = add i32 %173, 1512758334
  %176 = sub i32 %175, 1
  %177 = sub i32 %176, 1512758334
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = xor i1 %181, true
  %184 = xor i1 %182, true
  %185 = xor i1 true, true
  %186 = and i1 %183, true
  %187 = and i1 %181, %185
  %188 = and i1 %184, true
  %189 = and i1 %182, %185
  %190 = or i1 %186, %187
  %191 = or i1 %188, %189
  %192 = xor i1 %190, %191
  %193 = or i1 %183, %184
  %194 = xor i1 %193, true
  %195 = or i1 true, %185
  %196 = and i1 %194, %195
  %197 = or i1 %192, %196
  %198 = or i1 %181, %182
  br i1 %197, label %199, label %314

; <label>:199:                                    ; preds = %168
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.1"* %171, %"class.std::vector.1"* %172)
          to label %200 unwind label %203

; <label>:200:                                    ; preds = %199
  invoke void @__cxa_rethrow() #12
          to label %300 unwind label %203

; <label>:201:                                    ; preds = %52
  %202 = load %"class.std::vector.1"*, %"class.std::vector.1"** %33, align 8
  ret %"class.std::vector.1"* %202

; <label>:203:                                    ; preds = %200, %199
  %204 = landingpad { i8*, i32 }
          cleanup
  %205 = extractvalue { i8*, i32 } %204, 0
  store i8* %205, i8** %34, align 8
  %206 = extractvalue { i8*, i32 } %204, 1
  store i32 %206, i32* %35, align 4
  invoke void @__cxa_end_catch()
          to label %207 unwind label %297

; <label>:207:                                    ; preds = %203
  %208 = load i32, i32* @x.449
  %209 = load i32, i32* @y.450
  %210 = add i32 %208, 766128281
  %211 = sub i32 %210, 1
  %212 = sub i32 %211, 766128281
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = xor i1 %216, true
  %219 = xor i1 %217, true
  %220 = xor i1 false, true
  %221 = and i1 %218, false
  %222 = and i1 %216, %220
  %223 = and i1 %219, false
  %224 = and i1 %217, %220
  %225 = or i1 %221, %222
  %226 = or i1 %223, %224
  %227 = xor i1 %225, %226
  %228 = or i1 %218, %219
  %229 = xor i1 %228, true
  %230 = or i1 false, %220
  %231 = and i1 %229, %230
  %232 = or i1 %227, %231
  %233 = or i1 %216, %217
  br i1 %232, label %234, label %319

; <label>:234:                                    ; preds = %207, %319
  %235 = load i32, i32* @x.449
  %236 = load i32, i32* @y.450
  %237 = add i32 %235, 706409496
  %238 = sub i32 %237, 1
  %239 = sub i32 %238, 706409496
  %240 = sub i32 %235, 1
  %241 = mul i32 %235, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %236, 10
  %245 = and i1 %243, %244
  %246 = xor i1 %243, %244
  %247 = or i1 %245, %246
  %248 = or i1 %243, %244
  br i1 %247, label %249, label %319

; <label>:249:                                    ; preds = %234
  br label %292
                                                  ; No predecessors!
  %251 = load i32, i32* @x.449
  %252 = load i32, i32* @y.450
  %253 = add i32 %251, 1855857436
  %254 = sub i32 %253, 1
  %255 = sub i32 %254, 1855857436
  %256 = sub i32 %251, 1
  %257 = mul i32 %251, %255
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %252, 10
  %261 = xor i1 %259, true
  %262 = xor i1 %260, true
  %263 = xor i1 true, true
  %264 = and i1 %261, true
  %265 = and i1 %259, %263
  %266 = and i1 %262, true
  %267 = and i1 %260, %263
  %268 = or i1 %264, %265
  %269 = or i1 %266, %267
  %270 = xor i1 %268, %269
  %271 = or i1 %261, %262
  %272 = xor i1 %271, true
  %273 = or i1 true, %263
  %274 = and i1 %272, %273
  %275 = or i1 %270, %274
  %276 = or i1 %259, %260
  br i1 %275, label %277, label %320

; <label>:277:                                    ; preds = %250, %320
  call void @llvm.trap()
  %278 = load i32, i32* @x.449
  %279 = load i32, i32* @y.450
  %280 = sub i32 0, 1
  %281 = add i32 %278, %280
  %282 = sub i32 %278, 1
  %283 = mul i32 %278, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %279, 10
  %287 = and i1 %285, %286
  %288 = xor i1 %285, %286
  %289 = or i1 %287, %288
  %290 = or i1 %285, %286
  br i1 %289, label %291, label %320

; <label>:291:                                    ; preds = %277
  unreachable

; <label>:292:                                    ; preds = %249
  %293 = load i8*, i8** %34, align 8
  %294 = load i32, i32* %35, align 4
  %295 = insertvalue { i8*, i32 } undef, i8* %293, 0
  %296 = insertvalue { i8*, i32 } %295, i32 %294, 1
  resume { i8*, i32 } %296

; <label>:297:                                    ; preds = %203
  %298 = landingpad { i8*, i32 }
          catch i8* null
  %299 = extractvalue { i8*, i32 } %298, 0
  call void @__clang_call_terminate(i8* %299) #11
  unreachable

; <label>:300:                                    ; preds = %200
  unreachable

; <label>:301:                                    ; preds = %29, %3
  %302 = alloca %"class.std::vector.1"*, align 8
  %303 = alloca i64, align 8
  %304 = alloca %"class.std::vector.1"*, align 8
  %305 = alloca %"class.std::vector.1"*, align 8
  %306 = alloca i8*
  %307 = alloca i32
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %302, align 8
  store i64 %1, i64* %303, align 8
  store %"class.std::vector.1"* %2, %"class.std::vector.1"** %304, align 8
  %308 = load %"class.std::vector.1"*, %"class.std::vector.1"** %302, align 8
  store %"class.std::vector.1"* %308, %"class.std::vector.1"** %305, align 8
  br label %29

; <label>:309:                                    ; preds = %73, %59
  br label %73

; <label>:310:                                    ; preds = %135, %109
  %311 = landingpad { i8*, i32 }
          catch i8* null
  %312 = extractvalue { i8*, i32 } %311, 0
  store i8* %312, i8** %34, align 8
  %313 = extractvalue { i8*, i32 } %311, 1
  store i32 %313, i32* %35, align 4
  br label %135

; <label>:314:                                    ; preds = %168, %153
  %315 = load i8*, i8** %34, align 8
  %316 = call i8* @__cxa_begin_catch(i8* %315) #3
  %317 = load %"class.std::vector.1"*, %"class.std::vector.1"** %30, align 8
  %318 = load %"class.std::vector.1"*, %"class.std::vector.1"** %33, align 8
  br label %168

; <label>:319:                                    ; preds = %234, %207
  br label %234

; <label>:320:                                    ; preds = %277, %250
  call void @llvm.trap()
  br label %277
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.1"*, %"class.std::vector.1"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.1"*, align 8
  %4 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %3, align 8
  store %"class.std::vector.1"* %1, %"class.std::vector.1"** %4, align 8
  %5 = load %"class.std::vector.1"*, %"class.std::vector.1"** %3, align 8
  %6 = bitcast %"class.std::vector.1"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.1"*
  %8 = load %"class.std::vector.1"*, %"class.std::vector.1"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.1"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.1"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.1"* %7, %"class.std::vector.1"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.1"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.1"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.1"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.453
  %6 = load i32, i32* @y.454
  %7 = sub i32 %5, 1442694114
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1442694114
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1453558721, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1453558721, label %19
    i32 -2088354166, label %39
    i32 484525747, label %58
    i32 641865904, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2088354166, i32 641865904
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %40, align 8
  %41 = load %"class.std::vector.1"*, %"class.std::vector.1"** %40, align 8
  %42 = bitcast %"class.std::vector.1"* %41 to i8*
  %43 = bitcast i8* %42 to %"class.std::vector.1"*
  store %"class.std::vector.1"* %43, %"class.std::vector.1"** %2
  %44 = load i32, i32* @x.453
  %45 = load i32, i32* @y.454
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 484525747, i32 641865904
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::vector.1"*, %"class.std::vector.1"** %2
  ret %"class.std::vector.1"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %61, align 8
  %62 = load %"class.std::vector.1"*, %"class.std::vector.1"** %61, align 8
  %63 = bitcast %"class.std::vector.1"* %62 to i8*
  %64 = bitcast i8* %63 to %"class.std::vector.1"*
  store i32 -2088354166, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.1"*, %"class.std::vector.1"*) #0 comdat {
  %3 = alloca %"class.std::vector.1"*, align 8
  %4 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %3, align 8
  store %"class.std::vector.1"* %1, %"class.std::vector.1"** %4, align 8
  %5 = load %"class.std::vector.1"*, %"class.std::vector.1"** %3, align 8
  %6 = load %"class.std::vector.1"*, %"class.std::vector.1"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector.1"* %5, %"class.std::vector.1"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.1"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.1"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.1"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.457
  %6 = load i32, i32* @y.458
  %7 = sub i32 %5, 942272691
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 942272691
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -109073545, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -109073545, label %19
    i32 1410125324, label %27
    i32 1795540179, label %45
    i32 -554112412, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1410125324, i32 -554112412
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %28, align 8
  %29 = load %"class.std::vector.1"*, %"class.std::vector.1"** %28, align 8
  store %"class.std::vector.1"* %29, %"class.std::vector.1"** %2
  %30 = load i32, i32* @x.457
  %31 = load i32, i32* @y.458
  %32 = sub i32 %30, 1947328905
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1947328905
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1795540179, i32 -554112412
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"class.std::vector.1"*, %"class.std::vector.1"** %2
  ret %"class.std::vector.1"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %48, align 8
  %49 = load %"class.std::vector.1"*, %"class.std::vector.1"** %48, align 8
  store i32 1410125324, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.1"*, %"class.std::vector.1"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.459
  %4 = load i32, i32* @y.460
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %230

; <label>:28:                                     ; preds = %2, %230
  %29 = alloca %"class.std::vector.1"*, align 8
  %30 = alloca %"class.std::vector.1"*, align 8
  %31 = alloca %"class.std::allocator.3", align 1
  %32 = alloca i8*
  %33 = alloca i32
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %29, align 8
  store %"class.std::vector.1"* %1, %"class.std::vector.1"** %30, align 8
  %36 = load %"class.std::vector.1"*, %"class.std::vector.1"** %29, align 8
  %37 = bitcast %"class.std::vector.1"* %36 to %"struct.std::_Vector_base.2"*
  %38 = load %"class.std::vector.1"*, %"class.std::vector.1"** %30, align 8
  %39 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.1"* %38) #3
  %40 = load %"class.std::vector.1"*, %"class.std::vector.1"** %30, align 8
  %41 = bitcast %"class.std::vector.1"* %40 to %"struct.std::_Vector_base.2"*
  %42 = call dereferenceable(1) %"class.std::allocator.3"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.2"* %41) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.3"* sret %31, %"class.std::allocator.3"* dereferenceable(1) %42)
  %43 = load i32, i32* @x.459
  %44 = load i32, i32* @y.460
  %45 = sub i32 %43, 100911328
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 100911328
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %230

; <label>:57:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.2"* %37, i64 %39, %"class.std::allocator.3"* dereferenceable(1) %31)
          to label %58 unwind label %162

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.459
  %60 = load i32, i32* @y.460
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %245

; <label>:84:                                     ; preds = %58, %245
  call void @_ZNSaIxED2Ev(%"class.std::allocator.3"* %31) #3
  %85 = load %"class.std::vector.1"*, %"class.std::vector.1"** %30, align 8
  %86 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector.1"* %85) #3
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %34, i32 0, i32 0
  store i64* %86, i64** %87, align 8
  %88 = load %"class.std::vector.1"*, %"class.std::vector.1"** %30, align 8
  %89 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector.1"* %88) #3
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %35, i32 0, i32 0
  store i64* %89, i64** %90, align 8
  %91 = bitcast %"class.std::vector.1"* %36 to %"struct.std::_Vector_base.2"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %92, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = bitcast %"class.std::vector.1"* %36 to %"struct.std::_Vector_base.2"*
  %96 = call dereferenceable(1) %"class.std::allocator.3"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.2"* %95) #3
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %34, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %35, i32 0, i32 0
  %100 = load i64*, i64** %99, align 8
  %101 = load i32, i32* @x.459
  %102 = load i32, i32* @y.460
  %103 = add i32 %101, 124531950
  %104 = sub i32 %103, 1
  %105 = sub i32 %104, 124531950
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 true, true
  %114 = and i1 %111, true
  %115 = and i1 %109, %113
  %116 = and i1 %112, true
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 true, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  br i1 %125, label %127, label %245

; <label>:127:                                    ; preds = %84
  %128 = invoke i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64* %98, i64* %100, i64* %94, %"class.std::allocator.3"* dereferenceable(1) %96)
          to label %129 unwind label %166

; <label>:129:                                    ; preds = %127
  %130 = load i32, i32* @x.459
  %131 = load i32, i32* @y.460
  %132 = sub i32 %130, -17665543
  %133 = sub i32 %132, 1
  %134 = add i32 %133, -17665543
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = and i1 %138, %139
  %141 = xor i1 %138, %139
  %142 = or i1 %140, %141
  %143 = or i1 %138, %139
  br i1 %142, label %144, label %262

; <label>:144:                                    ; preds = %129, %262
  %145 = bitcast %"class.std::vector.1"* %36 to %"struct.std::_Vector_base.2"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %146, i32 0, i32 1
  store i64* %128, i64** %147, align 8
  %148 = load i32, i32* @x.459
  %149 = load i32, i32* @y.460
  %150 = sub i32 0, 1
  %151 = add i32 %148, %150
  %152 = sub i32 %148, 1
  %153 = mul i32 %148, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %149, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  br i1 %159, label %161, label %262

; <label>:161:                                    ; preds = %144
  ret void

; <label>:162:                                    ; preds = %57
  %163 = landingpad { i8*, i32 }
          cleanup
  %164 = extractvalue { i8*, i32 } %163, 0
  store i8* %164, i8** %32, align 8
  %165 = extractvalue { i8*, i32 } %163, 1
  store i32 %165, i32* %33, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.3"* %31) #3
  br label %171

; <label>:166:                                    ; preds = %127
  %167 = landingpad { i8*, i32 }
          cleanup
  %168 = extractvalue { i8*, i32 } %167, 0
  store i8* %168, i8** %32, align 8
  %169 = extractvalue { i8*, i32 } %167, 1
  store i32 %169, i32* %33, align 4
  %170 = bitcast %"class.std::vector.1"* %36 to %"struct.std::_Vector_base.2"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.2"* %170) #3
  br label %171

; <label>:171:                                    ; preds = %166, %162
  %172 = load i32, i32* @x.459
  %173 = load i32, i32* @y.460
  %174 = add i32 %172, 1130930272
  %175 = sub i32 %174, 1
  %176 = sub i32 %175, 1130930272
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 false, true
  %185 = and i1 %182, false
  %186 = and i1 %180, %184
  %187 = and i1 %183, false
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 false, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  br i1 %196, label %198, label %266

; <label>:198:                                    ; preds = %171, %266
  %199 = load i8*, i8** %32, align 8
  %200 = load i32, i32* %33, align 4
  %201 = insertvalue { i8*, i32 } undef, i8* %199, 0
  %202 = insertvalue { i8*, i32 } %201, i32 %200, 1
  %203 = load i32, i32* @x.459
  %204 = load i32, i32* @y.460
  %205 = add i32 %203, -805026283
  %206 = sub i32 %205, 1
  %207 = sub i32 %206, -805026283
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = xor i1 %211, true
  %214 = xor i1 %212, true
  %215 = xor i1 false, true
  %216 = and i1 %213, false
  %217 = and i1 %211, %215
  %218 = and i1 %214, false
  %219 = and i1 %212, %215
  %220 = or i1 %216, %217
  %221 = or i1 %218, %219
  %222 = xor i1 %220, %221
  %223 = or i1 %213, %214
  %224 = xor i1 %223, true
  %225 = or i1 false, %215
  %226 = and i1 %224, %225
  %227 = or i1 %222, %226
  %228 = or i1 %211, %212
  br i1 %227, label %229, label %266

; <label>:229:                                    ; preds = %198
  resume { i8*, i32 } %202

; <label>:230:                                    ; preds = %28, %2
  %231 = alloca %"class.std::vector.1"*, align 8
  %232 = alloca %"class.std::vector.1"*, align 8
  %233 = alloca %"class.std::allocator.3", align 1
  %234 = alloca i8*
  %235 = alloca i32
  %236 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %237 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %231, align 8
  store %"class.std::vector.1"* %1, %"class.std::vector.1"** %232, align 8
  %238 = load %"class.std::vector.1"*, %"class.std::vector.1"** %231, align 8
  %239 = bitcast %"class.std::vector.1"* %238 to %"struct.std::_Vector_base.2"*
  %240 = load %"class.std::vector.1"*, %"class.std::vector.1"** %232, align 8
  %241 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.1"* %240) #3
  %242 = load %"class.std::vector.1"*, %"class.std::vector.1"** %232, align 8
  %243 = bitcast %"class.std::vector.1"* %242 to %"struct.std::_Vector_base.2"*
  %244 = call dereferenceable(1) %"class.std::allocator.3"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.2"* %243) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.3"* sret %233, %"class.std::allocator.3"* dereferenceable(1) %244)
  br label %28

; <label>:245:                                    ; preds = %84, %58
  call void @_ZNSaIxED2Ev(%"class.std::allocator.3"* %31) #3
  %246 = load %"class.std::vector.1"*, %"class.std::vector.1"** %30, align 8
  %247 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector.1"* %246) #3
  %248 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %34, i32 0, i32 0
  store i64* %247, i64** %248, align 8
  %249 = load %"class.std::vector.1"*, %"class.std::vector.1"** %30, align 8
  %250 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector.1"* %249) #3
  %251 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %35, i32 0, i32 0
  store i64* %250, i64** %251, align 8
  %252 = bitcast %"class.std::vector.1"* %36 to %"struct.std::_Vector_base.2"*
  %253 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %252, i32 0, i32 0
  %254 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %253, i32 0, i32 0
  %255 = load i64*, i64** %254, align 8
  %256 = bitcast %"class.std::vector.1"* %36 to %"struct.std::_Vector_base.2"*
  %257 = call dereferenceable(1) %"class.std::allocator.3"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.2"* %256) #3
  %258 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %34, i32 0, i32 0
  %259 = load i64*, i64** %258, align 8
  %260 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %35, i32 0, i32 0
  %261 = load i64*, i64** %260, align 8
  br label %84

; <label>:262:                                    ; preds = %144, %129
  %263 = bitcast %"class.std::vector.1"* %36 to %"struct.std::_Vector_base.2"*
  %264 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %263, i32 0, i32 0
  %265 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %264, i32 0, i32 1
  store i64* %128, i64** %265, align 8
  br label %144

; <label>:266:                                    ; preds = %198, %171
  %267 = load i8*, i8** %32, align 8
  %268 = load i32, i32* %33, align 4
  %269 = insertvalue { i8*, i32 } undef, i8* %267, 0
  %270 = insertvalue { i8*, i32 } %269, i32 %268, 1
  br label %198
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.1"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.461
  %6 = load i32, i32* @y.462
  %7 = add i32 %5, -1884582770
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1884582770
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 78422286, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %142
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 78422286, label %19
    i32 1507015597, label %27
    i32 1384317353, label %60
    i32 1070151858, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %142

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1507015597, i32 1070151858
  store i32 %26, i32* %15
  br label %142

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %28, align 8
  %29 = load %"class.std::vector.1"*, %"class.std::vector.1"** %28, align 8
  %30 = bitcast %"class.std::vector.1"* %29 to %"struct.std::_Vector_base.2"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load i64*, i64** %32, align 8
  %34 = bitcast %"class.std::vector.1"* %29 to %"struct.std::_Vector_base.2"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = ptrtoint i64* %33 to i64
  %39 = ptrtoint i64* %37 to i64
  %40 = sub i64 %38, 5950172971550954984
  %41 = sub i64 %40, %39
  %42 = add i64 %41, 5950172971550954984
  %43 = sub i64 %38, %39
  %44 = sdiv exact i64 %42, 8
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.461
  %46 = load i32, i32* @y.462
  %47 = add i32 %45, -769166960
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -769166960
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1384317353, i32 1070151858
  store i32 %59, i32* %15
  br label %142

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %63, align 8
  %64 = load %"class.std::vector.1"*, %"class.std::vector.1"** %63, align 8
  %65 = bitcast %"class.std::vector.1"* %64 to %"struct.std::_Vector_base.2"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66, i32 0, i32 1
  %68 = load i64*, i64** %67, align 8
  %69 = bitcast %"class.std::vector.1"* %64 to %"struct.std::_Vector_base.2"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = ptrtoint i64* %68 to i64
  %74 = ptrtoint i64* %72 to i64
  %75 = sub i64 0, 7968844925591097154
  %76 = sub i64 %75, %73
  %77 = add i64 %76, 7968844925591097154
  %78 = sub i64 0, %73
  %79 = add i64 %77, 831513241693237768
  %80 = add i64 %79, %74
  %81 = sub i64 %80, 831513241693237768
  %82 = add i64 %77, %74
  %83 = add i64 0, 6763798524574014917
  %84 = sub i64 %83, %73
  %85 = sub i64 %84, 6763798524574014917
  %86 = sub i64 0, %73
  %87 = sub i64 0, %74
  %88 = sub i64 %85, %87
  %89 = add i64 %85, %74
  %90 = sub i64 0, %73
  %91 = add i64 0, %90
  %92 = sub i64 0, %73
  %93 = add i64 %91, 8648244643215400421
  %94 = add i64 %93, %74
  %95 = sub i64 %94, 8648244643215400421
  %96 = add i64 %91, %74
  %97 = sub i64 0, -5796386691489213387
  %98 = sub i64 %97, %73
  %99 = add i64 %98, -5796386691489213387
  %100 = sub i64 0, %73
  %101 = sub i64 0, %74
  %102 = sub i64 %99, %101
  %103 = add i64 %99, %74
  %104 = sub i64 0, -3912754166170827191
  %105 = sub i64 %104, %73
  %106 = add i64 %105, -3912754166170827191
  %107 = sub i64 0, %73
  %108 = sub i64 %106, -2114100064398284755
  %109 = add i64 %108, %74
  %110 = add i64 %109, -2114100064398284755
  %111 = add i64 %106, %74
  %112 = sub i64 0, 8463541569552272013
  %113 = sub i64 %112, %73
  %114 = add i64 %113, 8463541569552272013
  %115 = sub i64 0, %73
  %116 = sub i64 %114, 8172321918797308382
  %117 = add i64 %116, %74
  %118 = add i64 %117, 8172321918797308382
  %119 = add i64 %114, %74
  %120 = shl i64 %73, %74
  %121 = sub i64 0, %74
  %122 = add i64 %73, %121
  %123 = sub i64 %73, %74
  %124 = shl i64 %122, 8
  %125 = add i64 0, 2216605522567708282
  %126 = sub i64 %125, %122
  %127 = sub i64 %126, 2216605522567708282
  %128 = sub i64 0, %122
  %129 = sub i64 0, 8
  %130 = sub i64 %127, %129
  %131 = add i64 %127, 8
  %132 = shl i64 %122, 8
  %133 = sub i64 0, -4966756143949892027
  %134 = sub i64 %133, %122
  %135 = add i64 %134, -4966756143949892027
  %136 = sub i64 0, %122
  %137 = sub i64 %135, -499518466558550928
  %138 = add i64 %137, 8
  %139 = add i64 %138, -499518466558550928
  %140 = add i64 %135, 8
  %141 = sdiv exact i64 %122, 8
  store i32 1507015597, i32* %15
  br label %142

; <label>:142:                                    ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.3"* noalias sret, %"class.std::allocator.3"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %1, %"class.std::allocator.3"** %3, align 8
  %4 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.3"* sret %0, %"class.std::allocator.3"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.3"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.2"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.2"*, align 8
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %2, align 8
  %3 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.3"*
  ret %"class.std::allocator.3"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.3"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.467
  %9 = load i32, i32* @y.468
  %10 = add i32 %8, -38179306
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -38179306
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -779630456, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %96
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -779630456, label %22
    i32 2038497411, label %42
    i32 2102010951, label %75
    i32 -1134217321, label %77
  ]

; <label>:21:                                     ; preds = %19
  br label %96

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 2038497411, i32 -1134217321
  store i32 %41, i32* %18
  br label %96

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %45 = alloca i64*, align 8
  %46 = alloca %"class.std::allocator.3"*, align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %43, i32 0, i32 0
  store i64* %0, i64** %49, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %44, i32 0, i32 0
  store i64* %1, i64** %50, align 8
  store i64* %2, i64** %45, align 8
  store %"class.std::allocator.3"* %3, %"class.std::allocator.3"** %46, align 8
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %47 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %48 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = load i64*, i64** %45, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %47, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %48, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %57, i64* %59, i64* %55)
  store i64* %60, i64** %5
  %61 = load i32, i32* @x.467
  %62 = load i32, i32* @y.468
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 2102010951, i32 -1134217321
  store i32 %74, i32* %18
  br label %96

; <label>:75:                                     ; preds = %19
  %76 = load volatile i64*, i64** %5
  ret i64* %76

; <label>:77:                                     ; preds = %19
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %80 = alloca i64*, align 8
  %81 = alloca %"class.std::allocator.3"*, align 8
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %78, i32 0, i32 0
  store i64* %0, i64** %84, align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %79, i32 0, i32 0
  store i64* %1, i64** %85, align 8
  store i64* %2, i64** %80, align 8
  store %"class.std::allocator.3"* %3, %"class.std::allocator.3"** %81, align 8
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %82 to i8*
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %83 to i8*
  %89 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load i64*, i64** %80, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %82, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %83, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %92, i64* %94, i64* %90)
  store i32 2038497411, i32* %18
  br label %96

; <label>:96:                                     ; preds = %77, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector.1"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %3 = alloca %"class.std::vector.1"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %3, align 8
  %5 = load %"class.std::vector.1"*, %"class.std::vector.1"** %3, align 8
  %6 = bitcast %"class.std::vector.1"* %5 to %"struct.std::_Vector_base.2"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.24"* %2, i64** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector.1"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %3 = alloca %"class.std::vector.1"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %3, align 8
  %5 = load %"class.std::vector.1"*, %"class.std::vector.1"** %3, align 8
  %6 = bitcast %"class.std::vector.1"* %5 to %"struct.std::_Vector_base.2"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.24"* %2, i64** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.3"* noalias sret, %"class.std::allocator.3"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.473
  %6 = load i32, i32* @y.474
  %7 = add i32 %5, -486463963
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -486463963
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -811590489, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -811590489, label %19
    i32 -1619147336, label %39
    i32 786572921, label %57
    i32 1169354154, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1619147336, i32 1169354154
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %1, %"class.std::allocator.3"** %40, align 8
  %41 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %40, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.3"* %0, %"class.std::allocator.3"* dereferenceable(1) %41) #3
  %42 = load i32, i32* @x.473
  %43 = load i32, i32* @y.474
  %44 = add i32 %42, -182541658
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -182541658
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 786572921, i32 1169354154
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %1, %"class.std::allocator.3"** %59, align 8
  %60 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %59, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.3"* %0, %"class.std::allocator.3"* dereferenceable(1) %60) #3
  store i32 -1619147336, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2ERKS_(%"class.std::allocator.3"*, %"class.std::allocator.3"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.3"*, align 8
  %4 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %3, align 8
  store %"class.std::allocator.3"* %1, %"class.std::allocator.3"** %4, align 8
  %5 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %3, align 8
  %6 = bitcast %"class.std::allocator.3"* %5 to %"class.__gnu_cxx::new_allocator.4"*
  %7 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %4, align 8
  %8 = bitcast %"class.std::allocator.3"* %7 to %"class.__gnu_cxx::new_allocator.4"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.4"* %6, %"class.__gnu_cxx::new_allocator.4"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %4, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %8, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %7, i32 0, i32 0
  store i64* %17, i64** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %9, i32 0, i32 0
  store i64* %23, i64** %24, align 8
  %25 = load i64*, i64** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %7, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %9, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64* %27, i64* %29, i64* %25)
  ret i64* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %21)
  %23 = call i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64* %15, i64* %20, i64* %22)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %3, i32 0, i32 0
  store i64* %0, i64** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %4, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %2, i32 0, i32 0
  store i64* %10, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.487
  %8 = load i32, i32* @y.488
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 285477165, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %87
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 285477165, label %20
    i32 335287950, label %40
    i32 255077128, label %76
    i32 888090315, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %87

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 335287950, i32 888090315
  store i32 %39, i32* %16
  br label %87

; <label>:40:                                     ; preds = %17
  %41 = alloca i64*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64*, align 8
  %44 = alloca i8, align 1
  store i64* %0, i64** %41, align 8
  store i64* %1, i64** %42, align 8
  store i64* %2, i64** %43, align 8
  store i8 1, i8* %44, align 1
  %45 = load i64*, i64** %41, align 8
  %46 = load i64*, i64** %42, align 8
  %47 = load i64*, i64** %43, align 8
  %48 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %45, i64* %46, i64* %47)
  store i64* %48, i64** %4
  %49 = load i32, i32* @x.487
  %50 = load i32, i32* @y.488
  %51 = sub i32 %49, -159252122
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -159252122
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 255077128, i32 888090315
  store i32 %75, i32* %16
  br label %87

; <label>:76:                                     ; preds = %17
  %77 = load volatile i64*, i64** %4
  ret i64* %77

; <label>:78:                                     ; preds = %17
  %79 = alloca i64*, align 8
  %80 = alloca i64*, align 8
  %81 = alloca i64*, align 8
  %82 = alloca i8, align 1
  store i64* %0, i64** %79, align 8
  store i64* %1, i64** %80, align 8
  store i64* %2, i64** %81, align 8
  store i8 1, i8* %82, align 1
  %83 = load i64*, i64** %79, align 8
  %84 = load i64*, i64** %80, align 8
  %85 = load i64*, i64** %81, align 8
  %86 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %83, i64* %84, i64* %85)
  store i32 335287950, i32* %16
  br label %87

; <label>:87:                                     ; preds = %78, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #5 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  %10 = load i64*, i64** %7, align 8
  %11 = load i64*, i64** %6, align 8
  %12 = ptrtoint i64* %10 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 %12, 6803392922614820180
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 6803392922614820180
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 -1524493297, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %87
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1524493297, label %24
    i32 -1978501199, label %28
    i32 -1501881952, label %35
    i32 -339527784, label %51
    i32 -1443870134, label %81
    i32 1556536894, label %83
  ]

; <label>:23:                                     ; preds = %21
  br label %87

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 -1978501199, i32 -1501881952
  store i32 %27, i32* %20
  br label %87

; <label>:28:                                     ; preds = %21
  %29 = load i64*, i64** %8, align 8
  %30 = bitcast i64* %29 to i8*
  %31 = load i64*, i64** %6, align 8
  %32 = bitcast i64* %31 to i8*
  %33 = load i64, i64* %9, align 8
  %34 = mul i64 8, %33
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %30, i8* %32, i64 %34, i32 8, i1 false)
  store i32 -1501881952, i32* %20
  br label %87

; <label>:35:                                     ; preds = %21
  %36 = load i32, i32* @x.491
  %37 = load i32, i32* @y.492
  %38 = sub i32 %36, -587006080
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -587006080
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -339527784, i32 1556536894
  store i32 %50, i32* %20
  br label %87

; <label>:51:                                     ; preds = %21
  %52 = load i64*, i64** %8, align 8
  %53 = load i64, i64* %9, align 8
  %54 = getelementptr inbounds i64, i64* %52, i64 %53
  store i64* %54, i64** %4
  %55 = load i32, i32* @x.491
  %56 = load i32, i32* @y.492
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -1443870134, i32 1556536894
  store i32 %80, i32* %20
  br label %87

; <label>:81:                                     ; preds = %21
  %82 = load volatile i64*, i64** %4
  ret i64* %82

; <label>:83:                                     ; preds = %21
  %84 = load i64*, i64** %8, align 8
  %85 = load i64, i64* %9, align 8
  %86 = getelementptr inbounds i64, i64* %84, i64 %85
  store i32 -339527784, i32* %20
  br label %87

; <label>:87:                                     ; preds = %83, %51, %35, %28, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %2) #3
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca i64**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.495
  %6 = load i32, i32* @y.496
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1432086943, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1432086943, label %18
    i32 1211606860, label %26
    i32 -1912639337, label %57
    i32 -1193589630, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1211606860, i32 -1193589630
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %28, i32 0, i32 0
  store i64** %29, i64*** %2
  %30 = load i32, i32* @x.495
  %31 = load i32, i32* @y.496
  %32 = add i32 %30, -406716137
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -406716137
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1912639337, i32 -1193589630
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile i64**, i64*** %2
  ret i64** %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %60, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %61, i32 0, i32 0
  store i32 1211606860, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %3, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %2, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  ret i64* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.24"*, i64** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %4 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  store i64** %1, i64*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  %7 = load i64**, i64*** %4, align 8
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector.1"*, %"class.std::vector.1"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.1"*, align 8
  %4 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %3, align 8
  store %"class.std::vector.1"* %1, %"class.std::vector.1"** %4, align 8
  %5 = alloca i32
  store i32 1070042902, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %125
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 1070042902, label %9
    i32 1097760896, label %14
    i32 1453077216, label %17
    i32 -2126107611, label %45
    i32 -511438607, label %75
    i32 1578972939, label %76
    i32 271398158, label %104
    i32 -934335817, label %120
    i32 -771439390, label %121
    i32 -730887077, label %124
  ]

; <label>:8:                                      ; preds = %6
  br label %125

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector.1"*, %"class.std::vector.1"** %3, align 8
  %11 = load %"class.std::vector.1"*, %"class.std::vector.1"** %4, align 8
  %12 = icmp ne %"class.std::vector.1"* %10, %11
  %13 = select i1 %12, i32 1097760896, i32 1578972939
  store i32 %13, i32* %5
  br label %125

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::vector.1"*, %"class.std::vector.1"** %3, align 8
  %16 = call %"class.std::vector.1"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.1"* dereferenceable(24) %15) #3
  call void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector.1"* %16)
  store i32 1453077216, i32* %5
  br label %125

; <label>:17:                                     ; preds = %6
  %18 = load i32, i32* @x.501
  %19 = load i32, i32* @y.502
  %20 = sub i32 %18, -1211303942
  %21 = sub i32 %20, 1
  %22 = add i32 %21, -1211303942
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 -2126107611, i32 -771439390
  store i32 %44, i32* %5
  br label %125

; <label>:45:                                     ; preds = %6
  %46 = load %"class.std::vector.1"*, %"class.std::vector.1"** %3, align 8
  %47 = getelementptr inbounds %"class.std::vector.1", %"class.std::vector.1"* %46, i32 1
  store %"class.std::vector.1"* %47, %"class.std::vector.1"** %3, align 8
  %48 = load i32, i32* @x.501
  %49 = load i32, i32* @y.502
  %50 = add i32 %48, -1970757350
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1970757350
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -511438607, i32 -771439390
  store i32 %74, i32* %5
  br label %125

; <label>:75:                                     ; preds = %6
  store i32 1070042902, i32* %5
  br label %125

; <label>:76:                                     ; preds = %6
  %77 = load i32, i32* @x.501
  %78 = load i32, i32* @y.502
  %79 = sub i32 %77, -1578114771
  %80 = sub i32 %79, 1
  %81 = add i32 %80, -1578114771
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 271398158, i32 -730887077
  store i32 %103, i32* %5
  br label %125

; <label>:104:                                    ; preds = %6
  %105 = load i32, i32* @x.501
  %106 = load i32, i32* @y.502
  %107 = sub i32 %105, 176239552
  %108 = sub i32 %107, 1
  %109 = add i32 %108, 176239552
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  %119 = select i1 %117, i32 -934335817, i32 -730887077
  store i32 %119, i32* %5
  br label %125

; <label>:120:                                    ; preds = %6
  ret void

; <label>:121:                                    ; preds = %6
  %122 = load %"class.std::vector.1"*, %"class.std::vector.1"** %3, align 8
  %123 = getelementptr inbounds %"class.std::vector.1", %"class.std::vector.1"* %122, i32 1
  store %"class.std::vector.1"* %123, %"class.std::vector.1"** %3, align 8
  store i32 -2126107611, i32* %5
  br label %125

; <label>:124:                                    ; preds = %6
  store i32 271398158, i32* %5
  br label %125

; <label>:125:                                    ; preds = %124, %121, %104, %76, %75, %45, %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector.1"*) #5 comdat {
  %2 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %2, align 8
  %3 = load %"class.std::vector.1"*, %"class.std::vector.1"** %2, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.1"* %3) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.16"*, %"class.std::vector.1"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.1"*
  %5 = alloca %"struct.std::_Vector_base.16"*
  %6 = alloca %"struct.std::_Vector_base.16"*, align 8
  %7 = alloca %"class.std::vector.1"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.16"* %0, %"struct.std::_Vector_base.16"** %6, align 8
  store %"class.std::vector.1"* %1, %"class.std::vector.1"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %6, align 8
  store %"struct.std::_Vector_base.16"* %9, %"struct.std::_Vector_base.16"** %5
  %10 = load %"class.std::vector.1"*, %"class.std::vector.1"** %7, align 8
  store %"class.std::vector.1"* %10, %"class.std::vector.1"** %4
  %11 = alloca i32
  store i32 1426327193, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %71
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1426327193, label %15
    i32 -454358775, label %19
    i32 673126777, label %25
    i32 1967342338, label %53
    i32 857106522, label %69
    i32 -931883565, label %70
  ]

; <label>:14:                                     ; preds = %12
  br label %71

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.1"*, %"class.std::vector.1"** %4
  %17 = icmp ne %"class.std::vector.1"* %16, null
  %18 = select i1 %17, i32 -454358775, i32 673126777
  store i32 %18, i32* %11
  br label %71

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.16"*, %"struct.std::_Vector_base.16"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.16", %"struct.std::_Vector_base.16"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %21 to %"class.std::allocator.17"*
  %23 = load %"class.std::vector.1"*, %"class.std::vector.1"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.17"* dereferenceable(1) %22, %"class.std::vector.1"* %23, i64 %24)
  store i32 673126777, i32* %11
  br label %71

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.505
  %27 = load i32, i32* @y.506
  %28 = add i32 %26, -2009616853
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -2009616853
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 1967342338, i32 -931883565
  store i32 %52, i32* %11
  br label %71

; <label>:53:                                     ; preds = %12
  %54 = load i32, i32* @x.505
  %55 = load i32, i32* @y.506
  %56 = sub i32 %54, 713784297
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 713784297
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 857106522, i32 -931883565
  store i32 %68, i32* %11
  br label %71

; <label>:69:                                     ; preds = %12
  ret void

; <label>:70:                                     ; preds = %12
  store i32 1967342338, i32* %11
  br label %71

; <label>:71:                                     ; preds = %70, %53, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.17"* dereferenceable(1), %"class.std::vector.1"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.17"*, align 8
  %5 = alloca %"class.std::vector.1"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %4, align 8
  store %"class.std::vector.1"* %1, %"class.std::vector.1"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %4, align 8
  %8 = bitcast %"class.std::allocator.17"* %7 to %"class.__gnu_cxx::new_allocator.18"*
  %9 = load %"class.std::vector.1"*, %"class.std::vector.1"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.18"* %8, %"class.std::vector.1"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.18"*, %"class.std::vector.1"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %5 = alloca %"class.std::vector.1"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %4, align 8
  store %"class.std::vector.1"* %1, %"class.std::vector.1"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %4, align 8
  %8 = load %"class.std::vector.1"*, %"class.std::vector.1"** %5, align 8
  %9 = bitcast %"class.std::vector.1"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector.1"*, %"class.std::vector.1"*, %"class.std::allocator.17"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.1"*, align 8
  %5 = alloca %"class.std::vector.1"*, align 8
  %6 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %4, align 8
  store %"class.std::vector.1"* %1, %"class.std::vector.1"** %5, align 8
  store %"class.std::allocator.17"* %2, %"class.std::allocator.17"** %6, align 8
  %7 = load %"class.std::vector.1"*, %"class.std::vector.1"** %4, align 8
  %8 = load %"class.std::vector.1"*, %"class.std::vector.1"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.1"* %7, %"class.std::vector.1"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI4elemSaIS0_EE9push_backEOS0_(%"class.std::vector.7"*, %struct.elem* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca %struct.elem*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store %struct.elem* %1, %struct.elem** %4, align 8
  %5 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %6 = load %struct.elem*, %struct.elem** %4, align 8
  %7 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %6) #3
  call void @_ZNSt6vectorI4elemSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::vector.7"* %5, %struct.elem* dereferenceable(24) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.elem*, %struct.elem*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %5 = alloca %"struct.std::less.12", align 1
  %6 = alloca %struct.elem, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %9 = alloca %struct.elem, align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", align 1
  %11 = alloca %"struct.std::less.12", align 1
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %4, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %14, align 8
  %15 = call %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.21"* %4, i64 1) #3
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %7, i32 0, i32 0
  store %struct.elem* %15, %struct.elem** %16, align 8
  %17 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %7) #3
  %18 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %17) #3
  %19 = bitcast %struct.elem* %6 to i8*
  %20 = bitcast %struct.elem* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 24, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %8 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = call i64 @_ZN9__gnu_cxxmiIP4elemSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8) %3) #3
  %24 = sub i64 0, 1
  %25 = add i64 %23, %24
  %26 = sub nsw i64 %23, 1
  %27 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %6) #3
  %28 = bitcast %struct.elem* %9 to i8*
  %29 = bitcast %struct.elem* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 24, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4elemEEENS0_14_Iter_comp_valIT_EES6_()
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %8, i32 0, i32 0
  %31 = load %struct.elem*, %struct.elem** %30, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops14_Iter_comp_valISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.elem* %31, i64 %25, i64 0, %struct.elem* byval align 8 %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI4elemSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::vector.7"*, %struct.elem* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.7"*
  %5 = alloca %struct.elem**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.517
  %9 = load i32, i32* @y.518
  %10 = sub i32 %8, -1294840689
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1294840689
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1440106221, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %145
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1440106221, label %22
    i32 2075226492, label %42
    i32 -1326772055, label %72
    i32 -1139093853, label %75
    i32 -279580822, label %94
    i32 578672205, label %99
    i32 1993783229, label %115
    i32 1744752134, label %130
    i32 -1656445683, label %131
    i32 1281485416, label %144
  ]

; <label>:21:                                     ; preds = %19
  br label %145

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 2075226492, i32 -1656445683
  store i32 %41, i32* %18
  br label %145

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector.7"*, align 8
  %44 = alloca %struct.elem*, align 8
  store %struct.elem** %44, %struct.elem*** %5
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %43, align 8
  %45 = load volatile %struct.elem**, %struct.elem*** %5
  store %struct.elem* %1, %struct.elem** %45, align 8
  %46 = load %"class.std::vector.7"*, %"class.std::vector.7"** %43, align 8
  store %"class.std::vector.7"* %46, %"class.std::vector.7"** %4
  %47 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %4
  %48 = bitcast %"class.std::vector.7"* %47 to %"struct.std::_Vector_base.8"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %49, i32 0, i32 1
  %51 = load %struct.elem*, %struct.elem** %50, align 8
  %52 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %4
  %53 = bitcast %"class.std::vector.7"* %52 to %"struct.std::_Vector_base.8"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %54, i32 0, i32 2
  %56 = load %struct.elem*, %struct.elem** %55, align 8
  %57 = icmp ne %struct.elem* %51, %56
  store i1 %57, i1* %3
  %58 = load i32, i32* @x.517
  %59 = load i32, i32* @y.518
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 -1326772055, i32 -1656445683
  store i32 %71, i32* %18
  br label %145

; <label>:72:                                     ; preds = %19
  %73 = load volatile i1, i1* %3
  %74 = select i1 %73, i32 -1139093853, i32 -279580822
  store i32 %74, i32* %18
  br label %145

; <label>:75:                                     ; preds = %19
  %76 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %4
  %77 = bitcast %"class.std::vector.7"* %76 to %"struct.std::_Vector_base.8"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %77, i32 0, i32 0
  %79 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %78 to %"class.std::allocator.9"*
  %80 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %4
  %81 = bitcast %"class.std::vector.7"* %80 to %"struct.std::_Vector_base.8"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %82, i32 0, i32 1
  %84 = load %struct.elem*, %struct.elem** %83, align 8
  %85 = load volatile %struct.elem**, %struct.elem*** %5
  %86 = load %struct.elem*, %struct.elem** %85, align 8
  %87 = call dereferenceable(24) %struct.elem* @_ZSt7forwardI4elemEOT_RNSt16remove_referenceIS1_E4typeE(%struct.elem* dereferenceable(24) %86) #3
  call void @_ZNSt16allocator_traitsISaI4elemEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1) %79, %struct.elem* %84, %struct.elem* dereferenceable(24) %87)
  %88 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %4
  %89 = bitcast %"class.std::vector.7"* %88 to %"struct.std::_Vector_base.8"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %90, i32 0, i32 1
  %92 = load %struct.elem*, %struct.elem** %91, align 8
  %93 = getelementptr inbounds %struct.elem, %struct.elem* %92, i32 1
  store %struct.elem* %93, %struct.elem** %91, align 8
  store i32 578672205, i32* %18
  br label %145

; <label>:94:                                     ; preds = %19
  %95 = load volatile %struct.elem**, %struct.elem*** %5
  %96 = load %struct.elem*, %struct.elem** %95, align 8
  %97 = call dereferenceable(24) %struct.elem* @_ZSt7forwardI4elemEOT_RNSt16remove_referenceIS1_E4typeE(%struct.elem* dereferenceable(24) %96) #3
  %98 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %4
  call void @_ZNSt6vectorI4elemSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_(%"class.std::vector.7"* %98, %struct.elem* dereferenceable(24) %97)
  store i32 578672205, i32* %18
  br label %145

; <label>:99:                                     ; preds = %19
  %100 = load i32, i32* @x.517
  %101 = load i32, i32* @y.518
  %102 = sub i32 %100, 838412236
  %103 = sub i32 %102, 1
  %104 = add i32 %103, 838412236
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  %114 = select i1 %112, i32 1993783229, i32 1281485416
  store i32 %114, i32* %18
  br label %145

; <label>:115:                                    ; preds = %19
  %116 = load i32, i32* @x.517
  %117 = load i32, i32* @y.518
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  %129 = select i1 %127, i32 1744752134, i32 1281485416
  store i32 %129, i32* %18
  br label %145

; <label>:130:                                    ; preds = %19
  ret void

; <label>:131:                                    ; preds = %19
  %132 = alloca %"class.std::vector.7"*, align 8
  %133 = alloca %struct.elem*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %132, align 8
  store %struct.elem* %1, %struct.elem** %133, align 8
  %134 = load %"class.std::vector.7"*, %"class.std::vector.7"** %132, align 8
  %135 = bitcast %"class.std::vector.7"* %134 to %"struct.std::_Vector_base.8"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %135, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %136, i32 0, i32 1
  %138 = load %struct.elem*, %struct.elem** %137, align 8
  %139 = bitcast %"class.std::vector.7"* %134 to %"struct.std::_Vector_base.8"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %139, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %140, i32 0, i32 2
  %142 = load %struct.elem*, %struct.elem** %141, align 8
  %143 = icmp ne %struct.elem* %138, %142
  store i32 2075226492, i32* %18
  br label %145

; <label>:144:                                    ; preds = %19
  store i32 1993783229, i32* %18
  br label %145

; <label>:145:                                    ; preds = %144, %131, %115, %99, %94, %75, %72, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4elemEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1), %struct.elem*, %struct.elem* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.9"*, align 8
  %5 = alloca %struct.elem*, align 8
  %6 = alloca %struct.elem*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %4, align 8
  store %struct.elem* %1, %struct.elem** %5, align 8
  store %struct.elem* %2, %struct.elem** %6, align 8
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  %8 = bitcast %"class.std::allocator.9"* %7 to %"class.__gnu_cxx::new_allocator.10"*
  %9 = load %struct.elem*, %struct.elem** %5, align 8
  %10 = load %struct.elem*, %struct.elem** %6, align 8
  %11 = call dereferenceable(24) %struct.elem* @_ZSt7forwardI4elemEOT_RNSt16remove_referenceIS1_E4typeE(%struct.elem* dereferenceable(24) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorI4elemE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.10"* %8, %struct.elem* %9, %struct.elem* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.elem* @_ZSt7forwardI4elemEOT_RNSt16remove_referenceIS1_E4typeE(%struct.elem* dereferenceable(24)) #5 comdat {
  %2 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %2, align 8
  %3 = load %struct.elem*, %struct.elem** %2, align 8
  ret %struct.elem* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI4elemSaIS0_EE19_M_emplace_back_auxIJS0_EEEvDpOT_(%"class.std::vector.7"*, %struct.elem* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.523
  %4 = load i32, i32* @y.524
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %451

; <label>:28:                                     ; preds = %2, %451
  %29 = alloca %"class.std::vector.7"*, align 8
  %30 = alloca %struct.elem*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %struct.elem*, align 8
  %33 = alloca %struct.elem*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %29, align 8
  store %struct.elem* %1, %struct.elem** %30, align 8
  %36 = load %"class.std::vector.7"*, %"class.std::vector.7"** %29, align 8
  %37 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.7"* %36, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %37, i64* %31, align 8
  %38 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %39 = load i64, i64* %31, align 8
  %40 = call %struct.elem* @_ZNSt12_Vector_baseI4elemSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.8"* %38, i64 %39)
  store %struct.elem* %40, %struct.elem** %32, align 8
  %41 = load %struct.elem*, %struct.elem** %32, align 8
  store %struct.elem* %41, %struct.elem** %33, align 8
  %42 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %43 to %"class.std::allocator.9"*
  %45 = load %struct.elem*, %struct.elem** %32, align 8
  %46 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE4sizeEv(%"class.std::vector.7"* %36) #3
  %47 = getelementptr inbounds %struct.elem, %struct.elem* %45, i64 %46
  %48 = load %struct.elem*, %struct.elem** %30, align 8
  %49 = call dereferenceable(24) %struct.elem* @_ZSt7forwardI4elemEOT_RNSt16remove_referenceIS1_E4typeE(%struct.elem* dereferenceable(24) %48) #3
  %50 = load i32, i32* @x.523
  %51 = load i32, i32* @y.524
  %52 = add i32 %50, -2091931288
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -2091931288
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %451

; <label>:76:                                     ; preds = %28
  invoke void @_ZNSt16allocator_traitsISaI4elemEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1) %44, %struct.elem* %47, %struct.elem* dereferenceable(24) %49)
          to label %77 unwind label %146

; <label>:77:                                     ; preds = %76
  %78 = load i32, i32* @x.523
  %79 = load i32, i32* @y.524
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %473

; <label>:103:                                    ; preds = %77, %473
  store %struct.elem* null, %struct.elem** %33, align 8
  %104 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %105 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %105, i32 0, i32 0
  %107 = load %struct.elem*, %struct.elem** %106, align 8
  %108 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %109, i32 0, i32 1
  %111 = load %struct.elem*, %struct.elem** %110, align 8
  %112 = load %struct.elem*, %struct.elem** %32, align 8
  %113 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %114 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %113) #3
  %115 = load i32, i32* @x.523
  %116 = load i32, i32* @y.524
  %117 = sub i32 %115, -1401124220
  %118 = sub i32 %117, 1
  %119 = add i32 %118, -1401124220
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 true, true
  %128 = and i1 %125, true
  %129 = and i1 %123, %127
  %130 = and i1 %126, true
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 true, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  br i1 %139, label %141, label %473

; <label>:141:                                    ; preds = %103
  %142 = invoke %struct.elem* @_ZSt34__uninitialized_move_if_noexcept_aIP4elemS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.elem* %107, %struct.elem* %111, %struct.elem* %112, %"class.std::allocator.9"* dereferenceable(1) %114)
          to label %143 unwind label %146

; <label>:143:                                    ; preds = %141
  store %struct.elem* %142, %struct.elem** %33, align 8
  %144 = load %struct.elem*, %struct.elem** %33, align 8
  %145 = getelementptr inbounds %struct.elem, %struct.elem* %144, i32 1
  store %struct.elem* %145, %struct.elem** %33, align 8
  br label %356

; <label>:146:                                    ; preds = %141, %76
  %147 = landingpad { i8*, i32 }
          catch i8* null
  %148 = extractvalue { i8*, i32 } %147, 0
  store i8* %148, i8** %34, align 8
  %149 = extractvalue { i8*, i32 } %147, 1
  store i32 %149, i32* %35, align 4
  br label %150

; <label>:150:                                    ; preds = %146
  %151 = load i32, i32* @x.523
  %152 = load i32, i32* @y.524
  %153 = sub i32 %151, 1496261706
  %154 = sub i32 %153, 1
  %155 = add i32 %154, 1496261706
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 true, true
  %164 = and i1 %161, true
  %165 = and i1 %159, %163
  %166 = and i1 %162, true
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 true, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %485

; <label>:177:                                    ; preds = %150, %485
  %178 = load i8*, i8** %34, align 8
  %179 = call i8* @__cxa_begin_catch(i8* %178) #3
  %180 = load %struct.elem*, %struct.elem** %33, align 8
  %181 = icmp ne %struct.elem* %180, null
  %182 = load i32, i32* @x.523
  %183 = load i32, i32* @y.524
  %184 = sub i32 0, 1
  %185 = add i32 %182, %184
  %186 = sub i32 %182, 1
  %187 = mul i32 %182, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %183, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 true, true
  %194 = and i1 %191, true
  %195 = and i1 %189, %193
  %196 = and i1 %192, true
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 true, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  br i1 %205, label %207, label %485

; <label>:207:                                    ; preds = %177
  br i1 %181, label %262, label %208

; <label>:208:                                    ; preds = %207
  %209 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %210 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %209, i32 0, i32 0
  %211 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %210 to %"class.std::allocator.9"*
  %212 = load %struct.elem*, %struct.elem** %32, align 8
  %213 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE4sizeEv(%"class.std::vector.7"* %36) #3
  %214 = getelementptr inbounds %struct.elem, %struct.elem* %212, i64 %213
  invoke void @_ZNSt16allocator_traitsISaI4elemEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.9"* dereferenceable(1) %211, %struct.elem* %214)
          to label %215 unwind label %258

; <label>:215:                                    ; preds = %208
  %216 = load i32, i32* @x.523
  %217 = load i32, i32* @y.524
  %218 = add i32 %216, -715218749
  %219 = sub i32 %218, 1
  %220 = sub i32 %219, -715218749
  %221 = sub i32 %216, 1
  %222 = mul i32 %216, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %217, 10
  %226 = and i1 %224, %225
  %227 = xor i1 %224, %225
  %228 = or i1 %226, %227
  %229 = or i1 %224, %225
  br i1 %228, label %230, label %490

; <label>:230:                                    ; preds = %215, %490
  %231 = load i32, i32* @x.523
  %232 = load i32, i32* @y.524
  %233 = sub i32 %231, 1207207480
  %234 = sub i32 %233, 1
  %235 = add i32 %234, 1207207480
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 false, true
  %244 = and i1 %241, false
  %245 = and i1 %239, %243
  %246 = and i1 %242, false
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 false, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  br i1 %255, label %257, label %490

; <label>:257:                                    ; preds = %230
  br label %350

; <label>:258:                                    ; preds = %354, %350, %294, %208
  %259 = landingpad { i8*, i32 }
          cleanup
  %260 = extractvalue { i8*, i32 } %259, 0
  store i8* %260, i8** %34, align 8
  %261 = extractvalue { i8*, i32 } %259, 1
  store i32 %261, i32* %35, align 4
  invoke void @__cxa_end_catch()
          to label %355 unwind label %447

; <label>:262:                                    ; preds = %207
  %263 = load i32, i32* @x.523
  %264 = load i32, i32* @y.524
  %265 = sub i32 0, 1
  %266 = add i32 %263, %265
  %267 = sub i32 %263, 1
  %268 = mul i32 %263, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %264, 10
  %272 = and i1 %270, %271
  %273 = xor i1 %270, %271
  %274 = or i1 %272, %273
  %275 = or i1 %270, %271
  br i1 %274, label %276, label %491

; <label>:276:                                    ; preds = %262, %491
  %277 = load %struct.elem*, %struct.elem** %32, align 8
  %278 = load %struct.elem*, %struct.elem** %33, align 8
  %279 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %280 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %279) #3
  %281 = load i32, i32* @x.523
  %282 = load i32, i32* @y.524
  %283 = sub i32 0, 1
  %284 = add i32 %281, %283
  %285 = sub i32 %281, 1
  %286 = mul i32 %281, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %282, 10
  %290 = and i1 %288, %289
  %291 = xor i1 %288, %289
  %292 = or i1 %290, %291
  %293 = or i1 %288, %289
  br i1 %292, label %294, label %491

; <label>:294:                                    ; preds = %276
  invoke void @_ZSt8_DestroyIP4elemS0_EvT_S2_RSaIT0_E(%struct.elem* %277, %struct.elem* %278, %"class.std::allocator.9"* dereferenceable(1) %280)
          to label %295 unwind label %258

; <label>:295:                                    ; preds = %294
  %296 = load i32, i32* @x.523
  %297 = load i32, i32* @y.524
  %298 = sub i32 %296, -161053494
  %299 = sub i32 %298, 1
  %300 = add i32 %299, -161053494
  %301 = sub i32 %296, 1
  %302 = mul i32 %296, %300
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %297, 10
  %306 = xor i1 %304, true
  %307 = xor i1 %305, true
  %308 = xor i1 true, true
  %309 = and i1 %306, true
  %310 = and i1 %304, %308
  %311 = and i1 %307, true
  %312 = and i1 %305, %308
  %313 = or i1 %309, %310
  %314 = or i1 %311, %312
  %315 = xor i1 %313, %314
  %316 = or i1 %306, %307
  %317 = xor i1 %316, true
  %318 = or i1 true, %308
  %319 = and i1 %317, %318
  %320 = or i1 %315, %319
  %321 = or i1 %304, %305
  br i1 %320, label %322, label %496

; <label>:322:                                    ; preds = %295, %496
  %323 = load i32, i32* @x.523
  %324 = load i32, i32* @y.524
  %325 = sub i32 %323, 1551665305
  %326 = sub i32 %325, 1
  %327 = add i32 %326, 1551665305
  %328 = sub i32 %323, 1
  %329 = mul i32 %323, %327
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %324, 10
  %333 = xor i1 %331, true
  %334 = xor i1 %332, true
  %335 = xor i1 true, true
  %336 = and i1 %333, true
  %337 = and i1 %331, %335
  %338 = and i1 %334, true
  %339 = and i1 %332, %335
  %340 = or i1 %336, %337
  %341 = or i1 %338, %339
  %342 = xor i1 %340, %341
  %343 = or i1 %333, %334
  %344 = xor i1 %343, true
  %345 = or i1 true, %335
  %346 = and i1 %344, %345
  %347 = or i1 %342, %346
  %348 = or i1 %331, %332
  br i1 %347, label %349, label %496

; <label>:349:                                    ; preds = %322
  br label %350

; <label>:350:                                    ; preds = %349, %257
  %351 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %352 = load %struct.elem*, %struct.elem** %32, align 8
  %353 = load i64, i64* %31, align 8
  invoke void @_ZNSt12_Vector_baseI4elemSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.8"* %351, %struct.elem* %352, i64 %353)
          to label %354 unwind label %258

; <label>:354:                                    ; preds = %350
  invoke void @__cxa_rethrow() #12
          to label %450 unwind label %258

; <label>:355:                                    ; preds = %258
  br label %442

; <label>:356:                                    ; preds = %143
  %357 = load i32, i32* @x.523
  %358 = load i32, i32* @y.524
  %359 = sub i32 %357, 976767055
  %360 = sub i32 %359, 1
  %361 = add i32 %360, 976767055
  %362 = sub i32 %357, 1
  %363 = mul i32 %357, %361
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %358, 10
  %367 = and i1 %365, %366
  %368 = xor i1 %365, %366
  %369 = or i1 %367, %368
  %370 = or i1 %365, %366
  br i1 %369, label %371, label %497

; <label>:371:                                    ; preds = %356, %497
  %372 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %373 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %372, i32 0, i32 0
  %374 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %373, i32 0, i32 0
  %375 = load %struct.elem*, %struct.elem** %374, align 8
  %376 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %377 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %376, i32 0, i32 0
  %378 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %377, i32 0, i32 1
  %379 = load %struct.elem*, %struct.elem** %378, align 8
  %380 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %381 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %380) #3
  call void @_ZSt8_DestroyIP4elemS0_EvT_S2_RSaIT0_E(%struct.elem* %375, %struct.elem* %379, %"class.std::allocator.9"* dereferenceable(1) %381)
  %382 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %383 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %384 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %383, i32 0, i32 0
  %385 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %384, i32 0, i32 0
  %386 = load %struct.elem*, %struct.elem** %385, align 8
  %387 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %388 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %387, i32 0, i32 0
  %389 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %388, i32 0, i32 2
  %390 = load %struct.elem*, %struct.elem** %389, align 8
  %391 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %392 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %391, i32 0, i32 0
  %393 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %392, i32 0, i32 0
  %394 = load %struct.elem*, %struct.elem** %393, align 8
  %395 = ptrtoint %struct.elem* %390 to i64
  %396 = ptrtoint %struct.elem* %394 to i64
  %397 = add i64 %395, -3646531807074401289
  %398 = sub i64 %397, %396
  %399 = sub i64 %398, -3646531807074401289
  %400 = sub i64 %395, %396
  %401 = sdiv exact i64 %399, 24
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.8"* %382, %struct.elem* %386, i64 %401)
  %402 = load %struct.elem*, %struct.elem** %32, align 8
  %403 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %404 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %403, i32 0, i32 0
  %405 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %404, i32 0, i32 0
  store %struct.elem* %402, %struct.elem** %405, align 8
  %406 = load %struct.elem*, %struct.elem** %33, align 8
  %407 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %408 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %407, i32 0, i32 0
  %409 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %408, i32 0, i32 1
  store %struct.elem* %406, %struct.elem** %409, align 8
  %410 = load %struct.elem*, %struct.elem** %32, align 8
  %411 = load i64, i64* %31, align 8
  %412 = getelementptr inbounds %struct.elem, %struct.elem* %410, i64 %411
  %413 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %414 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %413, i32 0, i32 0
  %415 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %414, i32 0, i32 2
  store %struct.elem* %412, %struct.elem** %415, align 8
  %416 = load i32, i32* @x.523
  %417 = load i32, i32* @y.524
  %418 = sub i32 0, 1
  %419 = add i32 %416, %418
  %420 = sub i32 %416, 1
  %421 = mul i32 %416, %419
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %417, 10
  %425 = xor i1 %423, true
  %426 = xor i1 %424, true
  %427 = xor i1 false, true
  %428 = and i1 %425, false
  %429 = and i1 %423, %427
  %430 = and i1 %426, false
  %431 = and i1 %424, %427
  %432 = or i1 %428, %429
  %433 = or i1 %430, %431
  %434 = xor i1 %432, %433
  %435 = or i1 %425, %426
  %436 = xor i1 %435, true
  %437 = or i1 false, %427
  %438 = and i1 %436, %437
  %439 = or i1 %434, %438
  %440 = or i1 %423, %424
  br i1 %439, label %441, label %497

; <label>:441:                                    ; preds = %371
  ret void

; <label>:442:                                    ; preds = %355
  %443 = load i8*, i8** %34, align 8
  %444 = load i32, i32* %35, align 4
  %445 = insertvalue { i8*, i32 } undef, i8* %443, 0
  %446 = insertvalue { i8*, i32 } %445, i32 %444, 1
  resume { i8*, i32 } %446

; <label>:447:                                    ; preds = %258
  %448 = landingpad { i8*, i32 }
          catch i8* null
  %449 = extractvalue { i8*, i32 } %448, 0
  call void @__clang_call_terminate(i8* %449) #11
  unreachable

; <label>:450:                                    ; preds = %354
  unreachable

; <label>:451:                                    ; preds = %28, %2
  %452 = alloca %"class.std::vector.7"*, align 8
  %453 = alloca %struct.elem*, align 8
  %454 = alloca i64, align 8
  %455 = alloca %struct.elem*, align 8
  %456 = alloca %struct.elem*, align 8
  %457 = alloca i8*
  %458 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %452, align 8
  store %struct.elem* %1, %struct.elem** %453, align 8
  %459 = load %"class.std::vector.7"*, %"class.std::vector.7"** %452, align 8
  %460 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.7"* %459, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %460, i64* %454, align 8
  %461 = bitcast %"class.std::vector.7"* %459 to %"struct.std::_Vector_base.8"*
  %462 = load i64, i64* %454, align 8
  %463 = call %struct.elem* @_ZNSt12_Vector_baseI4elemSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.8"* %461, i64 %462)
  store %struct.elem* %463, %struct.elem** %455, align 8
  %464 = load %struct.elem*, %struct.elem** %455, align 8
  store %struct.elem* %464, %struct.elem** %456, align 8
  %465 = bitcast %"class.std::vector.7"* %459 to %"struct.std::_Vector_base.8"*
  %466 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %465, i32 0, i32 0
  %467 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %466 to %"class.std::allocator.9"*
  %468 = load %struct.elem*, %struct.elem** %455, align 8
  %469 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE4sizeEv(%"class.std::vector.7"* %459) #3
  %470 = getelementptr inbounds %struct.elem, %struct.elem* %468, i64 %469
  %471 = load %struct.elem*, %struct.elem** %453, align 8
  %472 = call dereferenceable(24) %struct.elem* @_ZSt7forwardI4elemEOT_RNSt16remove_referenceIS1_E4typeE(%struct.elem* dereferenceable(24) %471) #3
  br label %28

; <label>:473:                                    ; preds = %103, %77
  store %struct.elem* null, %struct.elem** %33, align 8
  %474 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %475 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %474, i32 0, i32 0
  %476 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %475, i32 0, i32 0
  %477 = load %struct.elem*, %struct.elem** %476, align 8
  %478 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %479 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %478, i32 0, i32 0
  %480 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %479, i32 0, i32 1
  %481 = load %struct.elem*, %struct.elem** %480, align 8
  %482 = load %struct.elem*, %struct.elem** %32, align 8
  %483 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %484 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %483) #3
  br label %103

; <label>:485:                                    ; preds = %177, %150
  %486 = load i8*, i8** %34, align 8
  %487 = call i8* @__cxa_begin_catch(i8* %486) #3
  %488 = load %struct.elem*, %struct.elem** %33, align 8
  %489 = icmp ne %struct.elem* %488, null
  br label %177

; <label>:490:                                    ; preds = %230, %215
  br label %230

; <label>:491:                                    ; preds = %276, %262
  %492 = load %struct.elem*, %struct.elem** %32, align 8
  %493 = load %struct.elem*, %struct.elem** %33, align 8
  %494 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %495 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %494) #3
  br label %276

; <label>:496:                                    ; preds = %322, %295
  br label %322

; <label>:497:                                    ; preds = %371, %356
  %498 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %499 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %498, i32 0, i32 0
  %500 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %499, i32 0, i32 0
  %501 = load %struct.elem*, %struct.elem** %500, align 8
  %502 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %503 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %502, i32 0, i32 0
  %504 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %503, i32 0, i32 1
  %505 = load %struct.elem*, %struct.elem** %504, align 8
  %506 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %507 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %506) #3
  call void @_ZSt8_DestroyIP4elemS0_EvT_S2_RSaIT0_E(%struct.elem* %501, %struct.elem* %505, %"class.std::allocator.9"* dereferenceable(1) %507)
  %508 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %509 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %510 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %509, i32 0, i32 0
  %511 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %510, i32 0, i32 0
  %512 = load %struct.elem*, %struct.elem** %511, align 8
  %513 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %514 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %513, i32 0, i32 0
  %515 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %514, i32 0, i32 2
  %516 = load %struct.elem*, %struct.elem** %515, align 8
  %517 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %518 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %517, i32 0, i32 0
  %519 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %518, i32 0, i32 0
  %520 = load %struct.elem*, %struct.elem** %519, align 8
  %521 = ptrtoint %struct.elem* %516 to i64
  %522 = ptrtoint %struct.elem* %520 to i64
  %523 = shl i64 %521, %522
  %524 = sub i64 0, %522
  %525 = add i64 %521, %524
  %526 = sub i64 %521, %522
  %527 = shl i64 %525, 24
  %528 = sdiv exact i64 %525, 24
  call void @_ZNSt12_Vector_baseI4elemSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.8"* %508, %struct.elem* %512, i64 %528)
  %529 = load %struct.elem*, %struct.elem** %32, align 8
  %530 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %531 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %530, i32 0, i32 0
  %532 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %531, i32 0, i32 0
  store %struct.elem* %529, %struct.elem** %532, align 8
  %533 = load %struct.elem*, %struct.elem** %33, align 8
  %534 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %535 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %534, i32 0, i32 0
  %536 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %535, i32 0, i32 1
  store %struct.elem* %533, %struct.elem** %536, align 8
  %537 = load %struct.elem*, %struct.elem** %32, align 8
  %538 = load i64, i64* %31, align 8
  %539 = getelementptr inbounds %struct.elem, %struct.elem* %537, i64 %538
  %540 = bitcast %"class.std::vector.7"* %36 to %"struct.std::_Vector_base.8"*
  %541 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %540, i32 0, i32 0
  %542 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %541, i32 0, i32 2
  store %struct.elem* %539, %struct.elem** %542, align 8
  br label %371
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4elemE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.10"*, %struct.elem*, %struct.elem* dereferenceable(24)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %5 = alloca %struct.elem*, align 8
  %6 = alloca %struct.elem*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  store %struct.elem* %1, %struct.elem** %5, align 8
  store %struct.elem* %2, %struct.elem** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  %8 = load %struct.elem*, %struct.elem** %5, align 8
  %9 = bitcast %struct.elem* %8 to i8*
  %10 = bitcast i8* %9 to %struct.elem*
  %11 = load %struct.elem*, %struct.elem** %6, align 8
  %12 = call dereferenceable(24) %struct.elem* @_ZSt7forwardI4elemEOT_RNSt16remove_referenceIS1_E4typeE(%struct.elem* dereferenceable(24) %11) #3
  %13 = bitcast %struct.elem* %10 to i8*
  %14 = bitcast %struct.elem* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI4elemSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.7"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"class.std::vector.7"*
  %8 = alloca i64*
  %9 = alloca i64*
  %10 = alloca i8**
  %11 = alloca i64*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.527
  %15 = load i32, i32* @y.528
  %16 = sub i32 %14, -541001987
  %17 = sub i32 %16, 1
  %18 = add i32 %17, -541001987
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 685950403, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %307
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 685950403, label %29
    i32 208214392, label %49
    i32 535278478, label %84
    i32 -904497912, label %87
    i32 1957111523, label %115
    i32 1413644730, label %133
    i32 1175783481, label %134
    i32 -957743014, label %154
    i32 -607778655, label %170
    i32 2036750042, label %203
    i32 -1753035137, label %206
    i32 -1257941724, label %209
    i32 -1452867330, label %212
    i32 1935672848, label %228
    i32 -585463666, label %256
    i32 651852937, label %258
    i32 -379342271, label %297
    i32 -1964294106, label %300
    i32 -1219194770, label %306
  ]

; <label>:28:                                     ; preds = %26
  br label %307

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %13
  %31 = load volatile i1, i1* %12
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 208214392, i32 651852937
  store i32 %48, i32* %24
  br label %307

; <label>:49:                                     ; preds = %26
  %50 = alloca %"class.std::vector.7"*, align 8
  %51 = alloca i64, align 8
  store i64* %51, i64** %11
  %52 = alloca i8*, align 8
  store i8** %52, i8*** %10
  %53 = alloca i64, align 8
  store i64* %53, i64** %9
  %54 = alloca i64, align 8
  store i64* %54, i64** %8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %50, align 8
  %55 = load volatile i64*, i64** %11
  store i64 %1, i64* %55, align 8
  %56 = load volatile i8**, i8*** %10
  store i8* %2, i8** %56, align 8
  %57 = load %"class.std::vector.7"*, %"class.std::vector.7"** %50, align 8
  store %"class.std::vector.7"* %57, %"class.std::vector.7"** %7
  %58 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %7
  %59 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE8max_sizeEv(%"class.std::vector.7"* %58) #3
  %60 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %7
  %61 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE4sizeEv(%"class.std::vector.7"* %60) #3
  %62 = sub i64 %59, -3009226841362024560
  %63 = sub i64 %62, %61
  %64 = add i64 %63, -3009226841362024560
  %65 = sub i64 %59, %61
  %66 = load volatile i64*, i64** %11
  %67 = load i64, i64* %66, align 8
  %68 = icmp ult i64 %64, %67
  store i1 %68, i1* %6
  %69 = load i32, i32* @x.527
  %70 = load i32, i32* @y.528
  %71 = sub i32 %69, -1815533344
  %72 = sub i32 %71, 1
  %73 = add i32 %72, -1815533344
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 535278478, i32 651852937
  store i32 %83, i32* %24
  br label %307

; <label>:84:                                     ; preds = %26
  %85 = load volatile i1, i1* %6
  %86 = select i1 %85, i32 -904497912, i32 1175783481
  store i32 %86, i32* %24
  br label %307

; <label>:87:                                     ; preds = %26
  %88 = load i32, i32* @x.527
  %89 = load i32, i32* @y.528
  %90 = add i32 %88, 709676766
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, 709676766
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  %114 = select i1 %112, i32 1957111523, i32 -379342271
  store i32 %114, i32* %24
  br label %307

; <label>:115:                                    ; preds = %26
  %116 = load volatile i8**, i8*** %10
  %117 = load i8*, i8** %116, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %117) #12
  %118 = load i32, i32* @x.527
  %119 = load i32, i32* @y.528
  %120 = sub i32 %118, -496731722
  %121 = sub i32 %120, 1
  %122 = add i32 %121, -496731722
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  %132 = select i1 %130, i32 1413644730, i32 -379342271
  store i32 %132, i32* %24
  br label %307

; <label>:133:                                    ; preds = %26
  unreachable

; <label>:134:                                    ; preds = %26
  %135 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %7
  %136 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE4sizeEv(%"class.std::vector.7"* %135) #3
  %137 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %7
  %138 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE4sizeEv(%"class.std::vector.7"* %137) #3
  %139 = load volatile i64*, i64** %8
  store i64 %138, i64* %139, align 8
  %140 = load volatile i64*, i64** %11
  %141 = load volatile i64*, i64** %8
  %142 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %141, i64* dereferenceable(8) %140)
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 0, %143
  %145 = sub i64 %136, %144
  %146 = add i64 %136, %143
  %147 = load volatile i64*, i64** %9
  store i64 %145, i64* %147, align 8
  %148 = load volatile i64*, i64** %9
  %149 = load i64, i64* %148, align 8
  %150 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %7
  %151 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE4sizeEv(%"class.std::vector.7"* %150) #3
  %152 = icmp ult i64 %149, %151
  %153 = select i1 %152, i32 -1753035137, i32 -957743014
  store i32 %153, i32* %24
  br label %307

; <label>:154:                                    ; preds = %26
  %155 = load i32, i32* @x.527
  %156 = load i32, i32* @y.528
  %157 = add i32 %155, 645428894
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, 645428894
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  %169 = select i1 %167, i32 -607778655, i32 -1964294106
  store i32 %169, i32* %24
  br label %307

; <label>:170:                                    ; preds = %26
  %171 = load volatile i64*, i64** %9
  %172 = load i64, i64* %171, align 8
  %173 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %7
  %174 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE8max_sizeEv(%"class.std::vector.7"* %173) #3
  %175 = icmp ugt i64 %172, %174
  store i1 %175, i1* %5
  %176 = load i32, i32* @x.527
  %177 = load i32, i32* @y.528
  %178 = sub i32 %176, 1783722812
  %179 = sub i32 %178, 1
  %180 = add i32 %179, 1783722812
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = xor i1 %184, true
  %187 = xor i1 %185, true
  %188 = xor i1 true, true
  %189 = and i1 %186, true
  %190 = and i1 %184, %188
  %191 = and i1 %187, true
  %192 = and i1 %185, %188
  %193 = or i1 %189, %190
  %194 = or i1 %191, %192
  %195 = xor i1 %193, %194
  %196 = or i1 %186, %187
  %197 = xor i1 %196, true
  %198 = or i1 true, %188
  %199 = and i1 %197, %198
  %200 = or i1 %195, %199
  %201 = or i1 %184, %185
  %202 = select i1 %200, i32 2036750042, i32 -1964294106
  store i32 %202, i32* %24
  br label %307

; <label>:203:                                    ; preds = %26
  %204 = load volatile i1, i1* %5
  %205 = select i1 %204, i32 -1753035137, i32 -1257941724
  store i32 %205, i32* %24
  br label %307

; <label>:206:                                    ; preds = %26
  %207 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %7
  %208 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE8max_sizeEv(%"class.std::vector.7"* %207) #3
  store i32 -1452867330, i32* %24
  store i64 %208, i64* %25
  br label %307

; <label>:209:                                    ; preds = %26
  %210 = load volatile i64*, i64** %9
  %211 = load i64, i64* %210, align 8
  store i32 -1452867330, i32* %24
  store i64 %211, i64* %25
  br label %307

; <label>:212:                                    ; preds = %26
  %213 = load i64, i64* %25
  store i64 %213, i64* %4
  %214 = load i32, i32* @x.527
  %215 = load i32, i32* @y.528
  %216 = sub i32 0, 1
  %217 = add i32 %214, %216
  %218 = sub i32 %214, 1
  %219 = mul i32 %214, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %215, 10
  %223 = and i1 %221, %222
  %224 = xor i1 %221, %222
  %225 = or i1 %223, %224
  %226 = or i1 %221, %222
  %227 = select i1 %225, i32 1935672848, i32 -1219194770
  store i32 %227, i32* %24
  br label %307

; <label>:228:                                    ; preds = %26
  %229 = load i32, i32* @x.527
  %230 = load i32, i32* @y.528
  %231 = add i32 %229, -2033237306
  %232 = sub i32 %231, 1
  %233 = sub i32 %232, -2033237306
  %234 = sub i32 %229, 1
  %235 = mul i32 %229, %233
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %230, 10
  %239 = xor i1 %237, true
  %240 = xor i1 %238, true
  %241 = xor i1 true, true
  %242 = and i1 %239, true
  %243 = and i1 %237, %241
  %244 = and i1 %240, true
  %245 = and i1 %238, %241
  %246 = or i1 %242, %243
  %247 = or i1 %244, %245
  %248 = xor i1 %246, %247
  %249 = or i1 %239, %240
  %250 = xor i1 %249, true
  %251 = or i1 true, %241
  %252 = and i1 %250, %251
  %253 = or i1 %248, %252
  %254 = or i1 %237, %238
  %255 = select i1 %253, i32 -585463666, i32 -1219194770
  store i32 %255, i32* %24
  br label %307

; <label>:256:                                    ; preds = %26
  %257 = load volatile i64, i64* %4
  ret i64 %257

; <label>:258:                                    ; preds = %26
  %259 = alloca %"class.std::vector.7"*, align 8
  %260 = alloca i64, align 8
  %261 = alloca i8*, align 8
  %262 = alloca i64, align 8
  %263 = alloca i64, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %259, align 8
  store i64 %1, i64* %260, align 8
  store i8* %2, i8** %261, align 8
  %264 = load %"class.std::vector.7"*, %"class.std::vector.7"** %259, align 8
  %265 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE8max_sizeEv(%"class.std::vector.7"* %264) #3
  %266 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE4sizeEv(%"class.std::vector.7"* %264) #3
  %267 = sub i64 0, %266
  %268 = add i64 %265, %267
  %269 = sub i64 %265, %266
  %270 = mul i64 %268, %266
  %271 = add i64 0, 5817041531786414913
  %272 = sub i64 %271, %265
  %273 = sub i64 %272, 5817041531786414913
  %274 = sub i64 0, %265
  %275 = sub i64 0, %266
  %276 = sub i64 %273, %275
  %277 = add i64 %273, %266
  %278 = add i64 0, 5424878293316311095
  %279 = sub i64 %278, %265
  %280 = sub i64 %279, 5424878293316311095
  %281 = sub i64 0, %265
  %282 = sub i64 0, %266
  %283 = sub i64 %280, %282
  %284 = add i64 %280, %266
  %285 = add i64 %265, -6347977767182262228
  %286 = sub i64 %285, %266
  %287 = sub i64 %286, -6347977767182262228
  %288 = sub i64 %265, %266
  %289 = mul i64 %287, %266
  %290 = shl i64 %265, %266
  %291 = sub i64 %265, -7490847618016594205
  %292 = sub i64 %291, %266
  %293 = add i64 %292, -7490847618016594205
  %294 = sub i64 %265, %266
  %295 = load i64, i64* %260, align 8
  %296 = icmp ult i64 %293, %295
  store i32 208214392, i32* %24
  br label %307

; <label>:297:                                    ; preds = %26
  %298 = load volatile i8**, i8*** %10
  %299 = load i8*, i8** %298, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %299) #12
  store i32 1957111523, i32* %24
  br label %307

; <label>:300:                                    ; preds = %26
  %301 = load volatile i64*, i64** %9
  %302 = load i64, i64* %301, align 8
  %303 = load volatile %"class.std::vector.7"*, %"class.std::vector.7"** %7
  %304 = call i64 @_ZNKSt6vectorI4elemSaIS0_EE8max_sizeEv(%"class.std::vector.7"* %303) #3
  %305 = icmp ugt i64 %302, %304
  store i32 -607778655, i32* %24
  br label %307

; <label>:306:                                    ; preds = %26
  store i32 1935672848, i32* %24
  br label %307

; <label>:307:                                    ; preds = %306, %300, %297, %258, %228, %212, %209, %206, %203, %170, %154, %134, %115, %87, %84, %49, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZNSt12_Vector_baseI4elemSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.8"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.8"*
  %5 = alloca %"struct.std::_Vector_base.8"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %5, align 8
  store %"struct.std::_Vector_base.8"* %7, %"struct.std::_Vector_base.8"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -1970495112, i32* %9
  %10 = alloca %struct.elem*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -1970495112, label %14
    i32 1885569882, label %18
    i32 1876146087, label %24
    i32 1648682396, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1885569882, i32 1876146087
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %20 to %"class.std::allocator.9"*
  %22 = load i64, i64* %6, align 8
  %23 = call %struct.elem* @_ZNSt16allocator_traitsISaI4elemEE8allocateERS1_m(%"class.std::allocator.9"* dereferenceable(1) %21, i64 %22)
  store i32 1648682396, i32* %9
  store %struct.elem* %23, %struct.elem** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1648682396, i32* %9
  store %struct.elem* null, %struct.elem** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %struct.elem*, %struct.elem** %10
  ret %struct.elem* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI4elemSaIS0_EE4sizeEv(%"class.std::vector.7"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %3 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  %4 = bitcast %"class.std::vector.7"* %3 to %"struct.std::_Vector_base.8"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %struct.elem*, %struct.elem** %6, align 8
  %8 = bitcast %"class.std::vector.7"* %3 to %"struct.std::_Vector_base.8"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %struct.elem*, %struct.elem** %10, align 8
  %12 = ptrtoint %struct.elem* %7 to i64
  %13 = ptrtoint %struct.elem* %11 to i64
  %14 = add i64 %12, 4240437662553737985
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 4240437662553737985
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZSt34__uninitialized_move_if_noexcept_aIP4elemS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.elem*, %struct.elem*, %struct.elem*, %"class.std::allocator.9"* dereferenceable(1)) #0 comdat {
  %5 = alloca %struct.elem*, align 8
  %6 = alloca %struct.elem*, align 8
  %7 = alloca %struct.elem*, align 8
  %8 = alloca %"class.std::allocator.9"*, align 8
  %9 = alloca %"class.std::move_iterator.25", align 8
  %10 = alloca %"class.std::move_iterator.25", align 8
  store %struct.elem* %0, %struct.elem** %5, align 8
  store %struct.elem* %1, %struct.elem** %6, align 8
  store %struct.elem* %2, %struct.elem** %7, align 8
  store %"class.std::allocator.9"* %3, %"class.std::allocator.9"** %8, align 8
  %11 = load %struct.elem*, %struct.elem** %5, align 8
  %12 = call %struct.elem* @_ZSt32__make_move_if_noexcept_iteratorIP4elemSt13move_iteratorIS1_EET0_T_(%struct.elem* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %9, i32 0, i32 0
  store %struct.elem* %12, %struct.elem** %13, align 8
  %14 = load %struct.elem*, %struct.elem** %6, align 8
  %15 = call %struct.elem* @_ZSt32__make_move_if_noexcept_iteratorIP4elemSt13move_iteratorIS1_EET0_T_(%struct.elem* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %10, i32 0, i32 0
  store %struct.elem* %15, %struct.elem** %16, align 8
  %17 = load %struct.elem*, %struct.elem** %7, align 8
  %18 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %9, i32 0, i32 0
  %20 = load %struct.elem*, %struct.elem** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %10, i32 0, i32 0
  %22 = load %struct.elem*, %struct.elem** %21, align 8
  %23 = call %struct.elem* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP4elemES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.elem* %20, %struct.elem* %22, %struct.elem* %17, %"class.std::allocator.9"* dereferenceable(1) %18)
  ret %struct.elem* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4elemEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.9"* dereferenceable(1), %struct.elem*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.535
  %6 = load i32, i32* @y.536
  %7 = add i32 %5, -910285557
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -910285557
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1447058375, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1447058375, label %19
    i32 -1593121626, label %39
    i32 -1657862100, label %71
    i32 -1067328381, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1593121626, i32 -1067328381
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.9"*, align 8
  %41 = alloca %struct.elem*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %40, align 8
  store %struct.elem* %1, %struct.elem** %41, align 8
  %42 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %40, align 8
  %43 = bitcast %"class.std::allocator.9"* %42 to %"class.__gnu_cxx::new_allocator.10"*
  %44 = load %struct.elem*, %struct.elem** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI4elemE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.10"* %43, %struct.elem* %44)
  %45 = load i32, i32* @x.535
  %46 = load i32, i32* @y.536
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1657862100, i32 -1067328381
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::allocator.9"*, align 8
  %74 = alloca %struct.elem*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %73, align 8
  store %struct.elem* %1, %struct.elem** %74, align 8
  %75 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %73, align 8
  %76 = bitcast %"class.std::allocator.9"* %75 to %"class.__gnu_cxx::new_allocator.10"*
  %77 = load %struct.elem*, %struct.elem** %74, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI4elemE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.10"* %76, %struct.elem* %77)
  store i32 -1593121626, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI4elemSaIS0_EE8max_sizeEv(%"class.std::vector.7"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %3 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  %4 = bitcast %"class.std::vector.7"* %3 to %"struct.std::_Vector_base.8"*
  %5 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNKSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaI4elemEE8max_sizeERKS1_(%"class.std::allocator.9"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaI4elemEE8max_sizeERKS1_(%"class.std::allocator.9"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.539
  %6 = load i32, i32* @y.540
  %7 = add i32 %5, -495926047
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -495926047
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2078597094, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2078597094, label %19
    i32 -959207828, label %39
    i32 869177179, label %71
    i32 414123845, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -959207828, i32 414123845
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %40, align 8
  %41 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %40, align 8
  %42 = bitcast %"class.std::allocator.9"* %41 to %"class.__gnu_cxx::new_allocator.10"*
  %43 = call i64 @_ZNK9__gnu_cxx13new_allocatorI4elemE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.539
  %45 = load i32, i32* @y.540
  %46 = sub i32 %44, 1745277565
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1745277565
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 869177179, i32 414123845
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %74, align 8
  %75 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %74, align 8
  %76 = bitcast %"class.std::allocator.9"* %75 to %"class.__gnu_cxx::new_allocator.10"*
  %77 = call i64 @_ZNK9__gnu_cxx13new_allocatorI4elemE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %76) #3
  store i32 -959207828, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNKSt12_Vector_baseI4elemSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %2, align 8
  %3 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %4 to %"class.std::allocator.9"*
  ret %"class.std::allocator.9"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI4elemE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZNSt16allocator_traitsISaI4elemEE8allocateERS1_m(%"class.std::allocator.9"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  %6 = bitcast %"class.std::allocator.9"* %5 to %"class.__gnu_cxx::new_allocator.10"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.elem* @_ZN9__gnu_cxx13new_allocatorI4elemE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"* %6, i64 %7, i8* null)
  ret %struct.elem* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZN9__gnu_cxx13new_allocatorI4elemE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorI4elemE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -757442011, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -757442011, label %16
    i32 1236168079, label %21
    i32 418975963, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1236168079, i32 418975963
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %struct.elem*
  ret %struct.elem* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP4elemES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.elem*, %struct.elem*, %struct.elem*, %"class.std::allocator.9"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.25", align 8
  %6 = alloca %"class.std::move_iterator.25", align 8
  %7 = alloca %struct.elem*, align 8
  %8 = alloca %"class.std::allocator.9"*, align 8
  %9 = alloca %"class.std::move_iterator.25", align 8
  %10 = alloca %"class.std::move_iterator.25", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %5, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %6, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %12, align 8
  store %struct.elem* %2, %struct.elem** %7, align 8
  store %"class.std::allocator.9"* %3, %"class.std::allocator.9"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.25"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.25"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.25"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %struct.elem*, %struct.elem** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %9, i32 0, i32 0
  %19 = load %struct.elem*, %struct.elem** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %10, i32 0, i32 0
  %21 = load %struct.elem*, %struct.elem** %20, align 8
  %22 = call %struct.elem* @_ZSt18uninitialized_copyISt13move_iteratorIP4elemES2_ET0_T_S5_S4_(%struct.elem* %19, %struct.elem* %21, %struct.elem* %17)
  ret %struct.elem* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZSt32__make_move_if_noexcept_iteratorIP4elemSt13move_iteratorIS1_EET0_T_(%struct.elem*) #0 comdat {
  %2 = alloca %struct.elem*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.551
  %6 = load i32, i32* @y.552
  %7 = sub i32 %5, -953612792
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -953612792
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 810308215, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 810308215, label %19
    i32 595664982, label %27
    i32 1152955484, label %47
    i32 1512421928, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 595664982, i32 1512421928
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.25", align 8
  %29 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %29, align 8
  %30 = load %struct.elem*, %struct.elem** %29, align 8
  call void @_ZNSt13move_iteratorIP4elemEC2ES1_(%"class.std::move_iterator.25"* %28, %struct.elem* %30)
  %31 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %28, i32 0, i32 0
  %32 = load %struct.elem*, %struct.elem** %31, align 8
  store %struct.elem* %32, %struct.elem** %2
  %33 = load i32, i32* @x.551
  %34 = load i32, i32* @y.552
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1152955484, i32 1512421928
  store i32 %46, i32* %15
  br label %55

; <label>:47:                                     ; preds = %16
  %48 = load volatile %struct.elem*, %struct.elem** %2
  ret %struct.elem* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::move_iterator.25", align 8
  %51 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %51, align 8
  %52 = load %struct.elem*, %struct.elem** %51, align 8
  call void @_ZNSt13move_iteratorIP4elemEC2ES1_(%"class.std::move_iterator.25"* %50, %struct.elem* %52)
  %53 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %50, i32 0, i32 0
  %54 = load %struct.elem*, %struct.elem** %53, align 8
  store i32 595664982, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZSt18uninitialized_copyISt13move_iteratorIP4elemES2_ET0_T_S5_S4_(%struct.elem*, %struct.elem*, %struct.elem*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.25", align 8
  %5 = alloca %"class.std::move_iterator.25", align 8
  %6 = alloca %struct.elem*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.25", align 8
  %9 = alloca %"class.std::move_iterator.25", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %4, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %5, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %11, align 8
  store %struct.elem* %2, %struct.elem** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.25"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.25"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.25"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %struct.elem*, %struct.elem** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %8, i32 0, i32 0
  %18 = load %struct.elem*, %struct.elem** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %9, i32 0, i32 0
  %20 = load %struct.elem*, %struct.elem** %19, align 8
  %21 = call %struct.elem* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP4elemES4_EET0_T_S7_S6_(%struct.elem* %18, %struct.elem* %20, %struct.elem* %16)
  ret %struct.elem* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP4elemES4_EET0_T_S7_S6_(%struct.elem*, %struct.elem*, %struct.elem*) #0 comdat align 2 {
  %4 = alloca %struct.elem*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.555
  %8 = load i32, i32* @y.556
  %9 = add i32 %7, 1561077622
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1561077622
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 2093951566, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %105
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 2093951566, label %21
    i32 1053434610, label %41
    i32 -1561160421, label %85
    i32 1485048904, label %87
  ]

; <label>:20:                                     ; preds = %18
  br label %105

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1053434610, i32 1485048904
  store i32 %40, i32* %17
  br label %105

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.25", align 8
  %43 = alloca %"class.std::move_iterator.25", align 8
  %44 = alloca %struct.elem*, align 8
  %45 = alloca %"class.std::move_iterator.25", align 8
  %46 = alloca %"class.std::move_iterator.25", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %42, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %43, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %48, align 8
  store %struct.elem* %2, %struct.elem** %44, align 8
  %49 = bitcast %"class.std::move_iterator.25"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.25"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator.25"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator.25"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load %struct.elem*, %struct.elem** %44, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %45, i32 0, i32 0
  %55 = load %struct.elem*, %struct.elem** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %46, i32 0, i32 0
  %57 = load %struct.elem*, %struct.elem** %56, align 8
  %58 = call %struct.elem* @_ZSt4copyISt13move_iteratorIP4elemES2_ET0_T_S5_S4_(%struct.elem* %55, %struct.elem* %57, %struct.elem* %53)
  store %struct.elem* %58, %struct.elem** %4
  %59 = load i32, i32* @x.555
  %60 = load i32, i32* @y.556
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1561160421, i32 1485048904
  store i32 %84, i32* %17
  br label %105

; <label>:85:                                     ; preds = %18
  %86 = load volatile %struct.elem*, %struct.elem** %4
  ret %struct.elem* %86

; <label>:87:                                     ; preds = %18
  %88 = alloca %"class.std::move_iterator.25", align 8
  %89 = alloca %"class.std::move_iterator.25", align 8
  %90 = alloca %struct.elem*, align 8
  %91 = alloca %"class.std::move_iterator.25", align 8
  %92 = alloca %"class.std::move_iterator.25", align 8
  %93 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %88, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %93, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %89, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %94, align 8
  store %struct.elem* %2, %struct.elem** %90, align 8
  %95 = bitcast %"class.std::move_iterator.25"* %91 to i8*
  %96 = bitcast %"class.std::move_iterator.25"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = bitcast %"class.std::move_iterator.25"* %92 to i8*
  %98 = bitcast %"class.std::move_iterator.25"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = load %struct.elem*, %struct.elem** %90, align 8
  %100 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %91, i32 0, i32 0
  %101 = load %struct.elem*, %struct.elem** %100, align 8
  %102 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %92, i32 0, i32 0
  %103 = load %struct.elem*, %struct.elem** %102, align 8
  %104 = call %struct.elem* @_ZSt4copyISt13move_iteratorIP4elemES2_ET0_T_S5_S4_(%struct.elem* %101, %struct.elem* %103, %struct.elem* %99)
  store i32 1053434610, i32* %17
  br label %105

; <label>:105:                                    ; preds = %87, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZSt4copyISt13move_iteratorIP4elemES2_ET0_T_S5_S4_(%struct.elem*, %struct.elem*, %struct.elem*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.25", align 8
  %5 = alloca %"class.std::move_iterator.25", align 8
  %6 = alloca %struct.elem*, align 8
  %7 = alloca %"class.std::move_iterator.25", align 8
  %8 = alloca %"class.std::move_iterator.25", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %4, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %5, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %10, align 8
  store %struct.elem* %2, %struct.elem** %6, align 8
  %11 = bitcast %"class.std::move_iterator.25"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.25"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %7, i32 0, i32 0
  %14 = load %struct.elem*, %struct.elem** %13, align 8
  %15 = call %struct.elem* @_ZSt12__miter_baseISt13move_iteratorIP4elemEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.elem* %14)
  %16 = bitcast %"class.std::move_iterator.25"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %8, i32 0, i32 0
  %19 = load %struct.elem*, %struct.elem** %18, align 8
  %20 = call %struct.elem* @_ZSt12__miter_baseISt13move_iteratorIP4elemEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.elem* %19)
  %21 = load %struct.elem*, %struct.elem** %6, align 8
  %22 = call %struct.elem* @_ZSt14__copy_move_a2ILb1EP4elemS1_ET1_T0_S3_S2_(%struct.elem* %15, %struct.elem* %20, %struct.elem* %21)
  ret %struct.elem* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZSt14__copy_move_a2ILb1EP4elemS1_ET1_T0_S3_S2_(%struct.elem*, %struct.elem*, %struct.elem*) #0 comdat {
  %4 = alloca %struct.elem*, align 8
  %5 = alloca %struct.elem*, align 8
  %6 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %4, align 8
  store %struct.elem* %1, %struct.elem** %5, align 8
  store %struct.elem* %2, %struct.elem** %6, align 8
  %7 = load %struct.elem*, %struct.elem** %4, align 8
  %8 = call %struct.elem* @_ZSt12__niter_baseIP4elemENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.elem* %7)
  %9 = load %struct.elem*, %struct.elem** %5, align 8
  %10 = call %struct.elem* @_ZSt12__niter_baseIP4elemENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.elem* %9)
  %11 = load %struct.elem*, %struct.elem** %6, align 8
  %12 = call %struct.elem* @_ZSt12__niter_baseIP4elemENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.elem* %11)
  %13 = call %struct.elem* @_ZSt13__copy_move_aILb1EP4elemS1_ET1_T0_S3_S2_(%struct.elem* %8, %struct.elem* %10, %struct.elem* %12)
  ret %struct.elem* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZSt12__miter_baseISt13move_iteratorIP4elemEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.elem*) #0 comdat {
  %2 = alloca %struct.elem*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.561
  %6 = load i32, i32* @y.562
  %7 = sub i32 %5, -2135237623
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2135237623
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1243295825, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1243295825, label %19
    i32 -1173594205, label %27
    i32 1038285855, label %62
    i32 2123211510, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1173594205, i32 2123211510
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.25", align 8
  %29 = alloca %"class.std::move_iterator.25", align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %28, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %30, align 8
  %31 = bitcast %"class.std::move_iterator.25"* %29 to i8*
  %32 = bitcast %"class.std::move_iterator.25"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %29, i32 0, i32 0
  %34 = load %struct.elem*, %struct.elem** %33, align 8
  %35 = call %struct.elem* @_ZNSt10_Iter_baseISt13move_iteratorIP4elemELb1EE7_S_baseES3_(%struct.elem* %34)
  store %struct.elem* %35, %struct.elem** %2
  %36 = load i32, i32* @x.561
  %37 = load i32, i32* @y.562
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1038285855, i32 2123211510
  store i32 %61, i32* %15
  br label %73

; <label>:62:                                     ; preds = %16
  %63 = load volatile %struct.elem*, %struct.elem** %2
  ret %struct.elem* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.std::move_iterator.25", align 8
  %66 = alloca %"class.std::move_iterator.25", align 8
  %67 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %65, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %67, align 8
  %68 = bitcast %"class.std::move_iterator.25"* %66 to i8*
  %69 = bitcast %"class.std::move_iterator.25"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %66, i32 0, i32 0
  %71 = load %struct.elem*, %struct.elem** %70, align 8
  %72 = call %struct.elem* @_ZNSt10_Iter_baseISt13move_iteratorIP4elemELb1EE7_S_baseES3_(%struct.elem* %71)
  store i32 -1173594205, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZSt13__copy_move_aILb1EP4elemS1_ET1_T0_S3_S2_(%struct.elem*, %struct.elem*, %struct.elem*) #0 comdat {
  %4 = alloca %struct.elem*, align 8
  %5 = alloca %struct.elem*, align 8
  %6 = alloca %struct.elem*, align 8
  %7 = alloca i8, align 1
  store %struct.elem* %0, %struct.elem** %4, align 8
  store %struct.elem* %1, %struct.elem** %5, align 8
  store %struct.elem* %2, %struct.elem** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.elem*, %struct.elem** %4, align 8
  %9 = load %struct.elem*, %struct.elem** %5, align 8
  %10 = load %struct.elem*, %struct.elem** %6, align 8
  %11 = call %struct.elem* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI4elemEEPT_PKS4_S7_S5_(%struct.elem* %8, %struct.elem* %9, %struct.elem* %10)
  ret %struct.elem* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZSt12__niter_baseIP4elemENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.elem*) #0 comdat {
  %2 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %2, align 8
  %3 = load %struct.elem*, %struct.elem** %2, align 8
  %4 = call %struct.elem* @_ZNSt10_Iter_baseIP4elemLb0EE7_S_baseES1_(%struct.elem* %3)
  ret %struct.elem* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.elem* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI4elemEEPT_PKS4_S7_S5_(%struct.elem*, %struct.elem*, %struct.elem*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %struct.elem*, align 8
  %6 = alloca %struct.elem*, align 8
  %7 = alloca %struct.elem*, align 8
  %8 = alloca i64, align 8
  store %struct.elem* %0, %struct.elem** %5, align 8
  store %struct.elem* %1, %struct.elem** %6, align 8
  store %struct.elem* %2, %struct.elem** %7, align 8
  %9 = load %struct.elem*, %struct.elem** %6, align 8
  %10 = load %struct.elem*, %struct.elem** %5, align 8
  %11 = ptrtoint %struct.elem* %9 to i64
  %12 = ptrtoint %struct.elem* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 24
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 -391917727, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %99
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -391917727, label %22
    i32 914845295, label %26
    i32 1581339692, label %42
    i32 -2039518969, label %76
    i32 -1266704202, label %77
    i32 847668715, label %81
  ]

; <label>:21:                                     ; preds = %19
  br label %99

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 914845295, i32 -1266704202
  store i32 %25, i32* %18
  br label %99

; <label>:26:                                     ; preds = %19
  %27 = load i32, i32* @x.567
  %28 = load i32, i32* @y.568
  %29 = sub i32 %27, 1307650545
  %30 = sub i32 %29, 1
  %31 = add i32 %30, 1307650545
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 1581339692, i32 847668715
  store i32 %41, i32* %18
  br label %99

; <label>:42:                                     ; preds = %19
  %43 = load %struct.elem*, %struct.elem** %7, align 8
  %44 = bitcast %struct.elem* %43 to i8*
  %45 = load %struct.elem*, %struct.elem** %5, align 8
  %46 = bitcast %struct.elem* %45 to i8*
  %47 = load i64, i64* %8, align 8
  %48 = mul i64 24, %47
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %44, i8* %46, i64 %48, i32 8, i1 false)
  %49 = load i32, i32* @x.567
  %50 = load i32, i32* @y.568
  %51 = add i32 %49, -1966662939
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -1966662939
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -2039518969, i32 847668715
  store i32 %75, i32* %18
  br label %99

; <label>:76:                                     ; preds = %19
  store i32 -1266704202, i32* %18
  br label %99

; <label>:77:                                     ; preds = %19
  %78 = load %struct.elem*, %struct.elem** %7, align 8
  %79 = load i64, i64* %8, align 8
  %80 = getelementptr inbounds %struct.elem, %struct.elem* %78, i64 %79
  ret %struct.elem* %80

; <label>:81:                                     ; preds = %19
  %82 = load %struct.elem*, %struct.elem** %7, align 8
  %83 = bitcast %struct.elem* %82 to i8*
  %84 = load %struct.elem*, %struct.elem** %5, align 8
  %85 = bitcast %struct.elem* %84 to i8*
  %86 = load i64, i64* %8, align 8
  %87 = sub i64 0, %86
  %88 = add i64 24, %87
  %89 = sub i64 24, %86
  %90 = mul i64 %88, %86
  %91 = add i64 0, -365003833978262516
  %92 = sub i64 %91, 24
  %93 = sub i64 %92, -365003833978262516
  %94 = sub i64 0, 24
  %95 = sub i64 0, %86
  %96 = sub i64 %93, %95
  %97 = add i64 %93, %86
  %98 = mul i64 24, %86
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %83, i8* %85, i64 %98, i32 8, i1 false)
  store i32 1581339692, i32* %18
  br label %99

; <label>:99:                                     ; preds = %81, %76, %42, %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.elem* @_ZNSt10_Iter_baseIP4elemLb0EE7_S_baseES1_(%struct.elem*) #5 comdat align 2 {
  %2 = alloca %struct.elem*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.569
  %6 = load i32, i32* @y.570
  %7 = sub i32 %5, 2042406325
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2042406325
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -287905042, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -287905042, label %19
    i32 723622032, label %39
    i32 1160644267, label %69
    i32 -248351028, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 723622032, i32 -248351028
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %40, align 8
  %41 = load %struct.elem*, %struct.elem** %40, align 8
  store %struct.elem* %41, %struct.elem** %2
  %42 = load i32, i32* @x.569
  %43 = load i32, i32* @y.570
  %44 = add i32 %42, 542915747
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 542915747
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1160644267, i32 -248351028
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile %struct.elem*, %struct.elem** %2
  ret %struct.elem* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %struct.elem*, align 8
  store %struct.elem* %0, %struct.elem** %72, align 8
  %73 = load %struct.elem*, %struct.elem** %72, align 8
  store i32 723622032, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.elem* @_ZNSt10_Iter_baseISt13move_iteratorIP4elemELb1EE7_S_baseES3_(%struct.elem*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.25", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %2, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %3, align 8
  %4 = call %struct.elem* @_ZNKSt13move_iteratorIP4elemE4baseEv(%"class.std::move_iterator.25"* %2)
  ret %struct.elem* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.elem* @_ZNKSt13move_iteratorIP4elemE4baseEv(%"class.std::move_iterator.25"*) #5 comdat align 2 {
  %2 = alloca %struct.elem*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.573
  %6 = load i32, i32* @y.574
  %7 = add i32 %5, 1711110161
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1711110161
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 445386763, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 445386763, label %19
    i32 -917338698, label %27
    i32 602482026, label %59
    i32 -447760291, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -917338698, i32 -447760291
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.25"*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %28, align 8
  %29 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %29, i32 0, i32 0
  %31 = load %struct.elem*, %struct.elem** %30, align 8
  store %struct.elem* %31, %struct.elem** %2
  %32 = load i32, i32* @x.573
  %33 = load i32, i32* @y.574
  %34 = sub i32 %32, -435673778
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -435673778
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 602482026, i32 -447760291
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %struct.elem*, %struct.elem** %2
  ret %struct.elem* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.25"*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %62, align 8
  %63 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %63, i32 0, i32 0
  %65 = load %struct.elem*, %struct.elem** %64, align 8
  store i32 -917338698, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIP4elemEC2ES1_(%"class.std::move_iterator.25"*, %struct.elem*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.575
  %6 = load i32, i32* @y.576
  %7 = sub i32 %5, -1054106788
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1054106788
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1907518141, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1907518141, label %19
    i32 235320500, label %27
    i32 -313288258, label %60
    i32 -861324073, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 235320500, i32 -861324073
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.25"*, align 8
  %29 = alloca %struct.elem*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %28, align 8
  store %struct.elem* %1, %struct.elem** %29, align 8
  %30 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %30, i32 0, i32 0
  %32 = load %struct.elem*, %struct.elem** %29, align 8
  store %struct.elem* %32, %struct.elem** %31, align 8
  %33 = load i32, i32* @x.575
  %34 = load i32, i32* @y.576
  %35 = add i32 %33, -1235919851
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1235919851
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -313288258, i32 -861324073
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.25"*, align 8
  %63 = alloca %struct.elem*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %62, align 8
  store %struct.elem* %1, %struct.elem** %63, align 8
  %64 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %62, align 8
  %65 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %64, i32 0, i32 0
  %66 = load %struct.elem*, %struct.elem** %63, align 8
  store %struct.elem* %66, %struct.elem** %65, align 8
  store i32 235320500, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4elemE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.10"*, %struct.elem*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %4 = alloca %struct.elem*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %3, align 8
  store %struct.elem* %1, %struct.elem** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %3, align 8
  %6 = load %struct.elem*, %struct.elem** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.21"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.elem*, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %7, i32 0, i32 0
  %9 = load %struct.elem*, %struct.elem** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = sub i64 0, %10
  %12 = add i64 0, %11
  %13 = sub i64 0, %10
  %14 = getelementptr inbounds %struct.elem, %struct.elem* %9, i64 %12
  store %struct.elem* %14, %struct.elem** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.21"* %3, %struct.elem** dereferenceable(8) %6) #3
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  %16 = load %struct.elem*, %struct.elem** %15, align 8
  ret %struct.elem* %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessI4elemEEENS0_14_Iter_comp_valIT_EES6_() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.23", align 1
  %2 = alloca %"struct.std::less.12", align 1
  %3 = alloca %"struct.std::less.12", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessI4elemEEC2ES4_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.23"* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt6vectorI4elemSaIS0_EE5emptyEv(%"class.std::vector.7"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.583
  %6 = load i32, i32* @y.584
  %7 = add i32 %5, 1387766631
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1387766631
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1880342120, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1880342120, label %19
    i32 -1106624129, label %27
    i32 240843887, label %52
    i32 11413764, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1106624129, i32 11413764
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.7"*, align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %28, align 8
  %31 = load %"class.std::vector.7"*, %"class.std::vector.7"** %28, align 8
  %32 = call %struct.elem* @_ZNKSt6vectorI4elemSaIS0_EE5beginEv(%"class.std::vector.7"* %31) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %29, i32 0, i32 0
  store %struct.elem* %32, %struct.elem** %33, align 8
  %34 = call %struct.elem* @_ZNKSt6vectorI4elemSaIS0_EE3endEv(%"class.std::vector.7"* %31) #3
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %30, i32 0, i32 0
  store %struct.elem* %34, %struct.elem** %35, align 8
  %36 = call zeroext i1 @_ZN9__gnu_cxxeqIPK4elemSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.26"* dereferenceable(8) %29, %"class.__gnu_cxx::__normal_iterator.26"* dereferenceable(8) %30) #3
  store i1 %36, i1* %2
  %37 = load i32, i32* @x.583
  %38 = load i32, i32* @y.584
  %39 = add i32 %37, 1732314609
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1732314609
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 240843887, i32 11413764
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  %53 = load volatile i1, i1* %2
  ret i1 %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"class.std::vector.7"*, align 8
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %55, align 8
  %58 = load %"class.std::vector.7"*, %"class.std::vector.7"** %55, align 8
  %59 = call %struct.elem* @_ZNKSt6vectorI4elemSaIS0_EE5beginEv(%"class.std::vector.7"* %58) #3
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %56, i32 0, i32 0
  store %struct.elem* %59, %struct.elem** %60, align 8
  %61 = call %struct.elem* @_ZNKSt6vectorI4elemSaIS0_EE3endEv(%"class.std::vector.7"* %58) #3
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %57, i32 0, i32 0
  store %struct.elem* %61, %struct.elem** %62, align 8
  %63 = call zeroext i1 @_ZN9__gnu_cxxeqIPK4elemSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.26"* dereferenceable(8) %56, %"class.__gnu_cxx::__normal_iterator.26"* dereferenceable(8) %57) #3
  store i32 -1106624129, i32* %15
  br label %64

; <label>:64:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPK4elemSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.26"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.26"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.26"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.26"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.26"* %0, %"class.__gnu_cxx::__normal_iterator.26"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.26"* %1, %"class.__gnu_cxx::__normal_iterator.26"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.26"*, %"class.__gnu_cxx::__normal_iterator.26"** %3, align 8
  %6 = call dereferenceable(8) %struct.elem** @_ZNK9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.26"* %5) #3
  %7 = load %struct.elem*, %struct.elem** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.26"*, %"class.__gnu_cxx::__normal_iterator.26"** %4, align 8
  %9 = call dereferenceable(8) %struct.elem** @_ZNK9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.26"* %8) #3
  %10 = load %struct.elem*, %struct.elem** %9, align 8
  %11 = icmp eq %struct.elem* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.elem* @_ZNKSt6vectorI4elemSaIS0_EE5beginEv(%"class.std::vector.7"*) #5 comdat align 2 {
  %2 = alloca %struct.elem*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.587
  %6 = load i32, i32* @y.588
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1685743638, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1685743638, label %18
    i32 294199265, label %38
    i32 1207324495, label %63
    i32 -241312815, label %65
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 294199265, i32 -241312815
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %40 = alloca %"class.std::vector.7"*, align 8
  %41 = alloca %struct.elem*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %40, align 8
  %42 = load %"class.std::vector.7"*, %"class.std::vector.7"** %40, align 8
  %43 = bitcast %"class.std::vector.7"* %42 to %"struct.std::_Vector_base.8"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %struct.elem*, %struct.elem** %45, align 8
  store %struct.elem* %46, %struct.elem** %41, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.26"* %39, %struct.elem** dereferenceable(8) %41) #3
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %39, i32 0, i32 0
  %48 = load %struct.elem*, %struct.elem** %47, align 8
  store %struct.elem* %48, %struct.elem** %2
  %49 = load i32, i32* @x.587
  %50 = load i32, i32* @y.588
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1207324495, i32 -241312815
  store i32 %62, i32* %14
  br label %76

; <label>:63:                                     ; preds = %15
  %64 = load volatile %struct.elem*, %struct.elem** %2
  ret %struct.elem* %64

; <label>:65:                                     ; preds = %15
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %67 = alloca %"class.std::vector.7"*, align 8
  %68 = alloca %struct.elem*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %67, align 8
  %69 = load %"class.std::vector.7"*, %"class.std::vector.7"** %67, align 8
  %70 = bitcast %"class.std::vector.7"* %69 to %"struct.std::_Vector_base.8"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load %struct.elem*, %struct.elem** %72, align 8
  store %struct.elem* %73, %struct.elem** %68, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.26"* %66, %struct.elem** dereferenceable(8) %68) #3
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %66, i32 0, i32 0
  %75 = load %struct.elem*, %struct.elem** %74, align 8
  store i32 294199265, i32* %14
  br label %76

; <label>:76:                                     ; preds = %65, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.elem* @_ZNKSt6vectorI4elemSaIS0_EE3endEv(%"class.std::vector.7"*) #5 comdat align 2 {
  %2 = alloca %struct.elem*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.589
  %6 = load i32, i32* @y.590
  %7 = sub i32 %5, 1016336699
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1016336699
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1320575662, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %90
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1320575662, label %19
    i32 1398234823, label %39
    i32 -1107330754, label %77
    i32 -1963803734, label %79
  ]

; <label>:18:                                     ; preds = %16
  br label %90

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1398234823, i32 -1963803734
  store i32 %38, i32* %15
  br label %90

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %41 = alloca %"class.std::vector.7"*, align 8
  %42 = alloca %struct.elem*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %41, align 8
  %43 = load %"class.std::vector.7"*, %"class.std::vector.7"** %41, align 8
  %44 = bitcast %"class.std::vector.7"* %43 to %"struct.std::_Vector_base.8"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %45, i32 0, i32 1
  %47 = load %struct.elem*, %struct.elem** %46, align 8
  store %struct.elem* %47, %struct.elem** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.26"* %40, %struct.elem** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %40, i32 0, i32 0
  %49 = load %struct.elem*, %struct.elem** %48, align 8
  store %struct.elem* %49, %struct.elem** %2
  %50 = load i32, i32* @x.589
  %51 = load i32, i32* @y.590
  %52 = add i32 %50, -1148047722
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -1148047722
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1107330754, i32 -1963803734
  store i32 %76, i32* %15
  br label %90

; <label>:77:                                     ; preds = %16
  %78 = load volatile %struct.elem*, %struct.elem** %2
  ret %struct.elem* %78

; <label>:79:                                     ; preds = %16
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  %81 = alloca %"class.std::vector.7"*, align 8
  %82 = alloca %struct.elem*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %81, align 8
  %83 = load %"class.std::vector.7"*, %"class.std::vector.7"** %81, align 8
  %84 = bitcast %"class.std::vector.7"* %83 to %"struct.std::_Vector_base.8"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %85, i32 0, i32 1
  %87 = load %struct.elem*, %struct.elem** %86, align 8
  store %struct.elem* %87, %struct.elem** %82, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.26"* %80, %struct.elem** dereferenceable(8) %82) #3
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %80, i32 0, i32 0
  %89 = load %struct.elem*, %struct.elem** %88, align 8
  store i32 1398234823, i32* %15
  br label %90

; <label>:90:                                     ; preds = %79, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.elem** @_ZNK9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.26"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.26"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.26"* %0, %"class.__gnu_cxx::__normal_iterator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.26"*, %"class.__gnu_cxx::__normal_iterator.26"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %3, i32 0, i32 0
  ret %struct.elem** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.26"*, %struct.elem** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.593
  %6 = load i32, i32* @y.594
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1270452193, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1270452193, label %18
    i32 1556186156, label %38
    i32 1605438065, label %59
    i32 -1222465823, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1556186156, i32 -1222465823
  store i32 %37, i32* %14
  br label %67

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.26"*, align 8
  %40 = alloca %struct.elem**, align 8
  store %"class.__gnu_cxx::__normal_iterator.26"* %0, %"class.__gnu_cxx::__normal_iterator.26"** %39, align 8
  store %struct.elem** %1, %struct.elem*** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.26"*, %"class.__gnu_cxx::__normal_iterator.26"** %39, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %41, i32 0, i32 0
  %43 = load %struct.elem**, %struct.elem*** %40, align 8
  %44 = load %struct.elem*, %struct.elem** %43, align 8
  store %struct.elem* %44, %struct.elem** %42, align 8
  %45 = load i32, i32* @x.593
  %46 = load i32, i32* @y.594
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1605438065, i32 -1222465823
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.26"*, align 8
  %62 = alloca %struct.elem**, align 8
  store %"class.__gnu_cxx::__normal_iterator.26"* %0, %"class.__gnu_cxx::__normal_iterator.26"** %61, align 8
  store %struct.elem** %1, %struct.elem*** %62, align 8
  %63 = load %"class.__gnu_cxx::__normal_iterator.26"*, %"class.__gnu_cxx::__normal_iterator.26"** %61, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %63, i32 0, i32 0
  %65 = load %struct.elem**, %struct.elem*** %62, align 8
  %66 = load %struct.elem*, %struct.elem** %65, align 8
  store %struct.elem* %66, %struct.elem** %64, align 8
  store i32 1556186156, i32* %14
  br label %67

; <label>:67:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.elem* @_ZNKSt6vectorI4elemSaIS0_EE5frontEv(%"class.std::vector.7"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.7"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.26", align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %4 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  %5 = call %struct.elem* @_ZNKSt6vectorI4elemSaIS0_EE5beginEv(%"class.std::vector.7"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %3, i32 0, i32 0
  store %struct.elem* %5, %struct.elem** %6, align 8
  %7 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.26"* %3) #3
  ret %struct.elem* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIPK4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.26"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.26"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.26"* %0, %"class.__gnu_cxx::__normal_iterator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.26"*, %"class.__gnu_cxx::__normal_iterator.26"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.26", %"class.__gnu_cxx::__normal_iterator.26"* %3, i32 0, i32 0
  %5 = load %struct.elem*, %struct.elem** %4, align 8
  ret %struct.elem* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEESt4lessIS2_EEvT_SA_T0_(%struct.elem*, %struct.elem*) #0 comdat {
  %3 = alloca i64
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %6 = alloca %"struct.std::less.12", align 1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %11 = alloca %"struct.std::less.12", align 1
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %4, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %14, align 8
  %15 = call i64 @_ZN9__gnu_cxxmiIP4elemSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8) %4) #3
  store i64 %15, i64* %3
  %16 = alloca i32
  store i32 367012796, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 367012796, label %20
    i32 -692121304, label %24
    i32 1140735961, label %38
    i32 2015508344, label %54
    i32 -281351799, label %82
    i32 -1377656885, label %83
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i64, i64* %3
  %22 = icmp sgt i64 %21, 1
  %23 = select i1 %22, i32 -692121304, i32 1140735961
  store i32 %23, i32* %16
  br label %84

; <label>:24:                                     ; preds = %17
  %25 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.21"* @_ZN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.21"* %5) #3
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %7 to i8*
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %8 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %9 to i8*
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessI4elemEEENS0_15_Iter_comp_iterIT_EES6_()
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %7, i32 0, i32 0
  %33 = load %struct.elem*, %struct.elem** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %8, i32 0, i32 0
  %35 = load %struct.elem*, %struct.elem** %34, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %9, i32 0, i32 0
  %37 = load %struct.elem*, %struct.elem** %36, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_SD_T0_(%struct.elem* %33, %struct.elem* %35, %struct.elem* %37)
  store i32 1140735961, i32* %16
  br label %84

; <label>:38:                                     ; preds = %17
  %39 = load i32, i32* @x.599
  %40 = load i32, i32* @y.600
  %41 = add i32 %39, 903210797
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 903210797
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 2015508344, i32 -1377656885
  store i32 %53, i32* %16
  br label %84

; <label>:54:                                     ; preds = %17
  %55 = load i32, i32* @x.599
  %56 = load i32, i32* @y.600
  %57 = sub i32 %55, -527141767
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -527141767
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -281351799, i32 -1377656885
  store i32 %81, i32* %16
  br label %84

; <label>:82:                                     ; preds = %17
  ret void

; <label>:83:                                     ; preds = %17
  store i32 2015508344, i32* %16
  br label %84

; <label>:84:                                     ; preds = %83, %54, %38, %24, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI4elemSaIS0_EE8pop_backEv(%"class.std::vector.7"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.601
  %3 = load i32, i32* @y.602
  %4 = sub i32 %2, -1736604641
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1736604641
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %74

; <label>:28:                                     ; preds = %1, %74
  %29 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %29, align 8
  %30 = load %"class.std::vector.7"*, %"class.std::vector.7"** %29, align 8
  %31 = bitcast %"class.std::vector.7"* %30 to %"struct.std::_Vector_base.8"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %32, i32 0, i32 1
  %34 = load %struct.elem*, %struct.elem** %33, align 8
  %35 = getelementptr inbounds %struct.elem, %struct.elem* %34, i32 -1
  store %struct.elem* %35, %struct.elem** %33, align 8
  %36 = bitcast %"class.std::vector.7"* %30 to %"struct.std::_Vector_base.8"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %37 to %"class.std::allocator.9"*
  %39 = bitcast %"class.std::vector.7"* %30 to %"struct.std::_Vector_base.8"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %40, i32 0, i32 1
  %42 = load %struct.elem*, %struct.elem** %41, align 8
  %43 = load i32, i32* @x.601
  %44 = load i32, i32* @y.602
  %45 = add i32 %43, -1049159295
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1049159295
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %74

; <label>:69:                                     ; preds = %28
  invoke void @_ZNSt16allocator_traitsISaI4elemEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.9"* dereferenceable(1) %38, %struct.elem* %42)
          to label %70 unwind label %71

; <label>:70:                                     ; preds = %69
  ret void

; <label>:71:                                     ; preds = %69
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  call void @__clang_call_terminate(i8* %73) #11
  unreachable

; <label>:74:                                     ; preds = %28, %1
  %75 = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %75, align 8
  %76 = load %"class.std::vector.7"*, %"class.std::vector.7"** %75, align 8
  %77 = bitcast %"class.std::vector.7"* %76 to %"struct.std::_Vector_base.8"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %78, i32 0, i32 1
  %80 = load %struct.elem*, %struct.elem** %79, align 8
  %81 = getelementptr inbounds %struct.elem, %struct.elem* %80, i32 -1
  store %struct.elem* %81, %struct.elem** %79, align 8
  %82 = bitcast %"class.std::vector.7"* %76 to %"struct.std::_Vector_base.8"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %82, i32 0, i32 0
  %84 = bitcast %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %83 to %"class.std::allocator.9"*
  %85 = bitcast %"class.std::vector.7"* %76 to %"struct.std::_Vector_base.8"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %85, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl", %"struct.std::_Vector_base<elem, std::allocator<elem> >::_Vector_impl"* %86, i32 0, i32 1
  %88 = load %struct.elem*, %struct.elem** %87, align 8
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.21"* @_ZN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.21"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  %5 = load %struct.elem*, %struct.elem** %4, align 8
  %6 = getelementptr inbounds %struct.elem, %struct.elem* %5, i32 -1
  store %struct.elem* %6, %struct.elem** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.21"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_SD_SD_T0_(%struct.elem*, %struct.elem*, %struct.elem*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %8 = alloca %struct.elem, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %10 = alloca %struct.elem, align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %4, i32 0, i32 0
  store %struct.elem* %0, %struct.elem** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  store %struct.elem* %1, %struct.elem** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %6, i32 0, i32 0
  store %struct.elem* %2, %struct.elem** %14, align 8
  %15 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %6) #3
  %16 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %15) #3
  %17 = bitcast %struct.elem* %8 to i8*
  %18 = bitcast %struct.elem* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 24, i32 8, i1 false)
  %19 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %4) #3
  %20 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %19) #3
  %21 = call dereferenceable(24) %struct.elem* @_ZNK9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %6) #3
  %22 = bitcast %struct.elem* %21 to i8*
  %23 = bitcast %struct.elem* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 24, i32 8, i1 false)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %9 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = call i64 @_ZN9__gnu_cxxmiIP4elemSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.21"* dereferenceable(8) %4) #3
  %27 = call dereferenceable(24) %struct.elem* @_ZSt4moveIR4elemEONSt16remove_referenceIT_E4typeEOS3_(%struct.elem* dereferenceable(24) %8) #3
  %28 = bitcast %struct.elem* %10 to i8*
  %29 = bitcast %struct.elem* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 24, i32 8, i1 false)
  %30 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %11 to i8*
  %31 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter.22"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 1, i32 1, i1 false)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %9, i32 0, i32 0
  %33 = load %struct.elem*, %struct.elem** %32, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP4elemSt6vectorIS2_SaIS2_EEEElS2_NS0_5__ops15_Iter_comp_iterISt4lessIS2_EEEEvT_T0_SE_T1_T2_(%struct.elem* %33, i64 0, i64 %26, %struct.elem* byval align 8 %10)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s701323901.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
