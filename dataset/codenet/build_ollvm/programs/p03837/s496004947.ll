; ModuleID = 'Project_CodeNet_C++1400/p03837/s496004947.cpp'
source_filename = "Project_CodeNet_C++1400/p03837/s496004947.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" = type { %"class.std::vector"*, %"class.std::vector"*, %"class.std::vector"* }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::piecewise_construct_t" = type { i8 }
%class.UnionFind = type { %"class.std::vector.9", %"class.std::vector.9", %"class.std::vector.9" }
%"class.std::vector.9" = type { %"struct.std::_Vector_base.10" }
%"struct.std::_Vector_base.10" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"struct.std::pair" = type <{ %"class.std::map", i8, [7 x i8] }>
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree_iterator.30" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree_const_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i64* }
%"class.std::tuple.31" = type { i8 }
%"struct.std::pair.27" = type { i64, i64 }
%"class.std::tuple.34" = type { %"struct.std::_Tuple_impl.35" }
%"struct.std::_Tuple_impl.35" = type { %"struct.std::_Head_base.36" }
%"struct.std::_Head_base.36" = type { i64* }
%"struct.std::pair.8" = type { i64, i64 }
%"class.std::allocator.11" = type { i8 }
%"class.__gnu_cxx::new_allocator.12" = type { i8 }
%"class.std::vector.14" = type { %"struct.std::_Vector_base.15" }
%"struct.std::_Vector_base.15" = type { %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl" = type { %"class.std::map.19"*, %"class.std::map.19"*, %"class.std::map.19"* }
%"class.std::map.19" = type { %"class.std::_Rb_tree.20" }
%"class.std::_Rb_tree.20" = type { %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"class.std::allocator.16" = type { i8 }
%"struct.std::pair.24" = type <{ i64, i8, [7 x i8] }>
%"struct.std::_Rb_tree_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair.26" = type { i64, %"struct.std::pair.24" }
%"class.__gnu_cxx::new_allocator.17" = type { i8 }
%"struct.std::_Rb_tree_const_iterator.37" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree_node.28" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.29" }
%"struct.__gnu_cxx::__aligned_membuf.29" = type { [24 x i8] }
%"class.std::allocator.5" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [16 x i8] }
%"class.std::allocator.21" = type { i8 }
%"class.__gnu_cxx::new_allocator.22" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { i64* }
%"struct.std::pair.32" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Select1st" = type { i8 }
%"struct.std::_Index_tuple" = type { i8 }
%"struct.std::_Index_tuple.33" = type { i8 }
%"struct.std::_Select1st.38" = type { i8 }
%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node" = type { %"class.std::_Rb_tree.20"* }

$_ZNSaIxEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2EmRKS0_ = comdat any

$_ZNSaIxED2Ev = comdat any

$_ZNSt6vectorIxSaIxEED2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_ = comdat any

$_ZNSaISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaISt6vectorIxSaIxEEED2Ev = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIxSaIxEEixEm = comdat any

$_ZNSt4pairISt3mapIxxSt4lessIxESaIS_IKxxEEEbEC2Ev = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixEOx = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixERS3_ = comdat any

$_ZNSt4pairISt3mapIxxSt4lessIxESaIS_IKxxEEEbED2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZSt3absx = comdat any

$_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEEC2Ev = comdat any

$_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEC2EmRKS9_ = comdat any

$_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEED2Ev = comdat any

$_ZSt9make_pairIRxbESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_ = comdat any

$_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEixEm = comdat any

$_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEixERS4_ = comdat any

$_ZNSt4pairIxbEaSEOS0_ = comdat any

$_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEC2ERKS7_ = comdat any

$_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE5beginEv = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEneERKS4_ = comdat any

$_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE3endEv = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEptEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEppEi = comdat any

$_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEED2Ev = comdat any

$_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EED2Ev = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE7destroyIS3_EEvRS5_PT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE7destroyIS4_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE10deallocateEPS5_m = comdat any

$_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt4pairIxbEC2IRxbvEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE7destroyIS4_EEvRS6_PT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE7destroyIS5_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE10deallocateEPS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIxSaIxEE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseIxSaIxEED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPxmET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_ = comdat any

$_ZSt6fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx = comdat any

$_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIxSaIxEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_ = comdat any

$_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt6vectorIxSaIxEEC2ERKS1_ = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIxSaIxEE5beginEv = comdat any

$_ZNKSt6vectorIxSaIxEE3endEv = comdat any

$_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaIxEC2ERKS_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_ = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_ = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv = comdat any

$_ZNKSt3mapIxxSt4lessIxESaISt4pairIKxxEEE8key_compEv = comdat any

$_ZNKSt4lessIxEclERKxS2_ = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E = comdat any

$_ZSt16forward_as_tupleIJxEESt5tupleIJDpOT_EES3_ = comdat any

$_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11lower_boundERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE3endEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8key_compEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvRS5_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJOxEEC2EOS1_ = comdat any

$_ZNSt4pairIKxxEC2IJOxEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJOxEEC2EOS1_ = comdat any

$_ZSt7forwardIOxEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJOxEE7_M_headERS1_ = comdat any

$_ZNSt10_Head_baseILm0EOxLb0EEC2IxEEOT_ = comdat any

$_ZNSt10_Head_baseILm0EOxLb0EE7_M_headERS1_ = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt4pairIKxxEC2IJOxEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJOxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_ = comdat any

$_ZSt12__get_helperILm0EOxJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxxEE13_M_const_castEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE4sizeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEppEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_ = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt5tupleIJOxEEC2IJxEvEEDpOT_ = comdat any

$_ZNSt11_Tuple_implILm0EJOxEEC2IxEEOT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_ = comdat any

$_ZNSt5tupleIJRKxEEC2ES1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJRKxEEC2EOS2_ = comdat any

$_ZNSt4pairIKxxEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_ = comdat any

$_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_ = comdat any

$_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_ = comdat any

$_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_ = comdat any

$_ZNSt4pairIKxxEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_ = comdat any

$_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPimET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEC2EmRKS9_ = comdat any

$_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE12_Vector_implC2ERKS9_ = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEEC2ERKS8_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEEC2ERKSA_ = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEE8allocateERS9_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEmS8_ET_SA_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEmET_SA_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3mapIxSt4pairIxbESt4lessIxESaIS3_IKxS4_EEEmEET_SC_T0_ = comdat any

$_ZSt10_ConstructISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEPT_RS9_ = comdat any

$_ZSt8_DestroyIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEvT_SA_ = comdat any

$_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EE13_M_initializeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEEC2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3mapIxSt4pairIxbESt4lessIxESaIS3_IKxS4_EEEEEvT_SC_ = comdat any

$_ZSt8_DestroyISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE13_M_deallocateEPS8_m = comdat any

$_ZNSt16allocator_traitsISaISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEE10deallocateERS9_PS8_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEE10deallocateEPS9_m = comdat any

$_ZSt8_DestroyIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEES8_EvT_SA_RSaIT0_E = comdat any

$_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE11lower_boundERS4_ = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEeqERKS4_ = comdat any

$_ZNKSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE8key_compEv = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEdeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESE_IJEEEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EDpOT_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIKxS0_IxbEEEC2ERKSt17_Rb_tree_iteratorIS3_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11lower_boundERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS3_ESC_RS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_M_endEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNKSt10_Select1stISt4pairIKxS0_IxbEEEclERKS3_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_valueEPKSt13_Rb_tree_nodeIS3_E = comdat any

$_ZNKSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE7_M_addrEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8key_compEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESE_IJEEEEEPSt13_Rb_tree_nodeIS3_EDpOT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSB_PSt13_Rb_tree_nodeIS3_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESE_IJEEEEEvPSt13_Rb_tree_nodeIS3_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESC_IJEEEEEvRS6_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESC_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt4pairIKxS_IxbEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES6_IJDpT0_EE = comdat any

$_ZNSt4pairIKxS_IxbEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS5_IJDpT1_EESt12_Index_tupleIJXspT0_EEESE_IJXspT2_EEE = comdat any

$_ZNSt4pairIxbEC2Ev = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxS0_IxbEEE13_M_const_castEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE4sizeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_rightmostEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE24_M_get_insert_unique_posERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_leftmostEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEmmEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEppEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxS_IxbEEESA_vEEOT_OT0_ = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEOT_RNSt16remove_referenceIS8_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EEC2ERKS9_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEEE17_S_select_on_copyERKS7_ = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EEC2ERKS7_OSaISt13_Rb_tree_nodeIS3_EE = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEED2Ev = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_rootEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_copyEPKSt13_Rb_tree_nodeIS3_EPSB_ = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_rootEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE10_S_minimumEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE10_S_maximumEPSt18_Rb_tree_node_base = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE37select_on_container_copy_constructionERKS6_ = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEEC2ERKS5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEEC2ERKS7_ = comdat any

$_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEEONSt16remove_referenceIT_E4typeEOS9_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_Alloc_nodeC2ERS9_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_copyINS9_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS3_EPKSD_SE_RT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_M_clone_nodeINS9_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS3_EPKSD_RT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_ = comdat any

$_ZSt7forwardIRKSt4pairIKxS0_IxbEEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE9constructIS5_JRKS5_EEEvPT_DpOT0_ = comdat any

$_ZNSt18_Rb_tree_node_base10_S_minimumEPS_ = comdat any

$_ZNSt18_Rb_tree_node_base10_S_maximumEPS_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE3endEv = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@FacMod = global %"class.std::vector" zeroinitializer, align 8
@InvMod = global %"class.std::vector" zeroinitializer, align 8
@FacInvMod = global %"class.std::vector" zeroinitializer, align 8
@Com = global %"class.std::vector.0" zeroinitializer, align 8
@ComK = global %"class.std::vector" zeroinitializer, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s496004947.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0
@x.622 = common global i32 0
@y.623 = common global i32 0
@x.624 = common global i32 0
@y.625 = common global i32 0
@x.626 = common global i32 0
@y.627 = common global i32 0
@x.628 = common global i32 0
@y.629 = common global i32 0
@x.630 = common global i32 0
@y.631 = common global i32 0
@x.632 = common global i32 0
@y.633 = common global i32 0
@x.634 = common global i32 0
@y.635 = common global i32 0
@x.636 = common global i32 0
@y.637 = common global i32 0
@x.638 = common global i32 0
@y.639 = common global i32 0
@x.640 = common global i32 0
@y.641 = common global i32 0
@x.642 = common global i32 0
@y.643 = common global i32 0
@x.644 = common global i32 0
@y.645 = common global i32 0
@x.646 = common global i32 0
@y.647 = common global i32 0
@x.648 = common global i32 0
@y.649 = common global i32 0
@x.650 = common global i32 0
@y.651 = common global i32 0
@x.652 = common global i32 0
@y.653 = common global i32 0
@x.654 = common global i32 0
@y.655 = common global i32 0
@x.656 = common global i32 0
@y.657 = common global i32 0
@x.658 = common global i32 0
@y.659 = common global i32 0
@x.660 = common global i32 0
@y.661 = common global i32 0
@x.662 = common global i32 0
@y.663 = common global i32 0
@x.664 = common global i32 0
@y.665 = common global i32 0
@x.666 = common global i32 0
@y.667 = common global i32 0
@x.668 = common global i32 0
@y.669 = common global i32 0
@x.670 = common global i32 0
@y.671 = common global i32 0
@x.672 = common global i32 0
@y.673 = common global i32 0
@x.674 = common global i32 0
@y.675 = common global i32 0
@x.676 = common global i32 0
@y.677 = common global i32 0
@x.678 = common global i32 0
@y.679 = common global i32 0
@x.680 = common global i32 0
@y.681 = common global i32 0
@x.682 = common global i32 0
@y.683 = common global i32 0
@x.684 = common global i32 0
@y.685 = common global i32 0
@x.686 = common global i32 0
@y.687 = common global i32 0
@x.688 = common global i32 0
@y.689 = common global i32 0
@x.690 = common global i32 0
@y.691 = common global i32 0
@x.692 = common global i32 0
@y.693 = common global i32 0
@x.694 = common global i32 0
@y.695 = common global i32 0
@x.696 = common global i32 0
@y.697 = common global i32 0
@x.698 = common global i32 0
@y.699 = common global i32 0
@x.700 = common global i32 0
@y.701 = common global i32 0
@x.702 = common global i32 0
@y.703 = common global i32 0
@x.704 = common global i32 0
@y.705 = common global i32 0
@x.706 = common global i32 0
@y.707 = common global i32 0
@x.708 = common global i32 0
@y.709 = common global i32 0
@x.710 = common global i32 0
@y.711 = common global i32 0
@x.712 = common global i32 0
@y.713 = common global i32 0
@x.714 = common global i32 0
@y.715 = common global i32 0
@x.716 = common global i32 0
@y.717 = common global i32 0
@x.718 = common global i32 0
@y.719 = common global i32 0
@x.720 = common global i32 0
@y.721 = common global i32 0
@x.722 = common global i32 0
@y.723 = common global i32 0
@x.724 = common global i32 0
@y.725 = common global i32 0
@x.726 = common global i32 0
@y.727 = common global i32 0
@x.728 = common global i32 0
@y.729 = common global i32 0
@x.730 = common global i32 0
@y.731 = common global i32 0
@x.732 = common global i32 0
@y.733 = common global i32 0
@x.734 = common global i32 0
@y.735 = common global i32 0
@x.736 = common global i32 0
@y.737 = common global i32 0
@x.738 = common global i32 0
@y.739 = common global i32 0
@x.740 = common global i32 0
@y.741 = common global i32 0
@x.742 = common global i32 0
@y.743 = common global i32 0
@x.744 = common global i32 0
@y.745 = common global i32 0
@x.746 = common global i32 0
@y.747 = common global i32 0
@x.748 = common global i32 0
@y.749 = common global i32 0
@x.750 = common global i32 0
@y.751 = common global i32 0
@x.752 = common global i32 0
@y.753 = common global i32 0
@x.754 = common global i32 0
@y.755 = common global i32 0
@x.756 = common global i32 0
@y.757 = common global i32 0
@x.758 = common global i32 0
@y.759 = common global i32 0
@x.760 = common global i32 0
@y.761 = common global i32 0
@x.762 = common global i32 0
@y.763 = common global i32 0
@x.764 = common global i32 0
@y.765 = common global i32 0
@x.766 = common global i32 0
@y.767 = common global i32 0
@x.768 = common global i32 0
@y.769 = common global i32 0
@x.770 = common global i32 0
@y.771 = common global i32 0
@x.772 = common global i32 0
@y.773 = common global i32 0
@x.774 = common global i32 0
@y.775 = common global i32 0
@x.776 = common global i32 0
@y.777 = common global i32 0
@x.778 = common global i32 0
@y.779 = common global i32 0
@x.780 = common global i32 0
@y.781 = common global i32 0
@x.782 = common global i32 0
@y.783 = common global i32 0
@x.784 = common global i32 0
@y.785 = common global i32 0
@x.786 = common global i32 0
@y.787 = common global i32 0
@x.788 = common global i32 0
@y.789 = common global i32 0
@x.790 = common global i32 0
@y.791 = common global i32 0
@x.792 = common global i32 0
@y.793 = common global i32 0
@x.794 = common global i32 0
@y.795 = common global i32 0
@x.796 = common global i32 0
@y.797 = common global i32 0
@x.798 = common global i32 0
@y.799 = common global i32 0
@x.800 = common global i32 0
@y.801 = common global i32 0
@x.802 = common global i32 0
@y.803 = common global i32 0
@x.804 = common global i32 0
@y.805 = common global i32 0
@x.806 = common global i32 0
@y.807 = common global i32 0
@x.808 = common global i32 0
@y.809 = common global i32 0
@x.810 = common global i32 0
@y.811 = common global i32 0
@x.812 = common global i32 0
@y.813 = common global i32 0
@x.814 = common global i32 0
@y.815 = common global i32 0
@x.816 = common global i32 0
@y.817 = common global i32 0
@x.818 = common global i32 0
@y.819 = common global i32 0
@x.820 = common global i32 0
@y.821 = common global i32 0

@_ZN9UnionFindC1Ei = alias void (%class.UnionFind*, i32), void (%class.UnionFind*, i32)* @_ZN9UnionFindC2Ei

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.6
  %2 = load i32, i32* @y.7
  %3 = sub i32 %1, -1387391912
  %4 = sub i32 %3, 1
  %5 = add i32 %4, -1387391912
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %69

; <label>:27:                                     ; preds = %0, %69
  %28 = alloca %"class.std::allocator", align 1
  %29 = alloca i8*
  %30 = alloca i32
  call void @_ZNSaIxEC2Ev(%"class.std::allocator"* %28) #3
  %31 = load i32, i32* @x.6
  %32 = load i32, i32* @y.7
  %33 = add i32 %31, 58976566
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 58976566
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %69

; <label>:57:                                     ; preds = %27
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKS0_(%"class.std::vector"* @FacMod, i64 1000000, %"class.std::allocator"* dereferenceable(1) %28)
          to label %58 unwind label %60

; <label>:58:                                     ; preds = %57
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %28) #3
  %59 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorIxSaIxEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @FacMod to i8*), i8* @__dso_handle) #3
  ret void

; <label>:60:                                     ; preds = %57
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %29, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %30, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %28) #3
  br label %64

; <label>:64:                                     ; preds = %60
  %65 = load i8*, i8** %29, align 8
  %66 = load i32, i32* %30, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68

; <label>:69:                                     ; preds = %27, %0
  %70 = alloca %"class.std::allocator", align 1
  %71 = alloca i8*
  %72 = alloca i32
  call void @_ZNSaIxEC2Ev(%"class.std::allocator"* %70) #3
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EmRKS0_(%"class.std::vector"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base"* %10, i64 %11, %"class.std::allocator"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorIxSaIxEE21_M_default_initializeEm(%"class.std::vector"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.10
  %17 = load i32, i32* @y.11
  %18 = add i32 %16, 172771680
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, 172771680
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %120

; <label>:42:                                     ; preds = %15, %120
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %7, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %8, align 4
  %46 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %46) #3
  %47 = load i32, i32* @x.10
  %48 = load i32, i32* @y.11
  %49 = add i32 %47, 1644389816
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 1644389816
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %120

; <label>:73:                                     ; preds = %42
  br label %74

; <label>:74:                                     ; preds = %73
  %75 = load i32, i32* @x.10
  %76 = load i32, i32* @y.11
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %125

; <label>:100:                                    ; preds = %74, %125
  %101 = load i8*, i8** %7, align 8
  %102 = load i32, i32* %8, align 4
  %103 = insertvalue { i8*, i32 } undef, i8* %101, 0
  %104 = insertvalue { i8*, i32 } %103, i32 %102, 1
  %105 = load i32, i32* @x.10
  %106 = load i32, i32* @y.11
  %107 = sub i32 %105, -1233041727
  %108 = sub i32 %107, 1
  %109 = add i32 %108, -1233041727
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  br i1 %117, label %119, label %125

; <label>:119:                                    ; preds = %100
  resume { i8*, i32 } %104

; <label>:120:                                    ; preds = %42, %15
  %121 = landingpad { i8*, i32 }
          cleanup
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %7, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %8, align 4
  %124 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %124) #3
  br label %42

; <label>:125:                                    ; preds = %100, %74
  %126 = load i8*, i8** %7, align 8
  %127 = load i32, i32* %8, align 4
  %128 = insertvalue { i8*, i32 } undef, i8* %126, 0
  %129 = insertvalue { i8*, i32 } %128, i32 %127, 1
  br label %100
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.14
  %20 = load i32, i32* @y.15
  %21 = add i32 %19, -528866165
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -528866165
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %67

; <label>:45:                                     ; preds = %18, %67
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %3, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %4, align 4
  %49 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %49) #3
  %50 = load i32, i32* @x.14
  %51 = load i32, i32* @y.15
  %52 = sub i32 %50, -634701100
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -634701100
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %67

; <label>:64:                                     ; preds = %45
  br label %65

; <label>:65:                                     ; preds = %64
  %66 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %66) #11
  unreachable

; <label>:67:                                     ; preds = %45, %18
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %3, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %4, align 4
  %71 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %71) #3
  br label %45
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.2() #0 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"class.std::allocator", align 1
  %2 = alloca i8*
  %3 = alloca i32
  call void @_ZNSaIxEC2Ev(%"class.std::allocator"* %1) #3
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKS0_(%"class.std::vector"* @InvMod, i64 1000000, %"class.std::allocator"* dereferenceable(1) %1)
          to label %4 unwind label %6

; <label>:4:                                      ; preds = %0
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %1) #3
  %5 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorIxSaIxEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @InvMod to i8*), i8* @__dso_handle) #3
  ret void

; <label>:6:                                      ; preds = %0
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %2, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %3, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %1) #3
  br label %10

; <label>:10:                                     ; preds = %6
  %11 = load i8*, i8** %2, align 8
  %12 = load i32, i32* %3, align 4
  %13 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.3() #0 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.18
  %2 = load i32, i32* @y.19
  %3 = sub i32 %1, -334772699
  %4 = sub i32 %3, 1
  %5 = add i32 %4, -334772699
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %56

; <label>:27:                                     ; preds = %0, %56
  %28 = alloca %"class.std::allocator", align 1
  %29 = alloca i8*
  %30 = alloca i32
  call void @_ZNSaIxEC2Ev(%"class.std::allocator"* %28) #3
  %31 = load i32, i32* @x.18
  %32 = load i32, i32* @y.19
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %56

; <label>:44:                                     ; preds = %27
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKS0_(%"class.std::vector"* @FacInvMod, i64 1000000, %"class.std::allocator"* dereferenceable(1) %28)
          to label %45 unwind label %47

; <label>:45:                                     ; preds = %44
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %28) #3
  %46 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorIxSaIxEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @FacInvMod to i8*), i8* @__dso_handle) #3
  ret void

; <label>:47:                                     ; preds = %44
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %29, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %30, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %28) #3
  br label %51

; <label>:51:                                     ; preds = %47
  %52 = load i8*, i8** %29, align 8
  %53 = load i32, i32* %30, align 4
  %54 = insertvalue { i8*, i32 } undef, i8* %52, 0
  %55 = insertvalue { i8*, i32 } %54, i32 %53, 1
  resume { i8*, i32 } %55

; <label>:56:                                     ; preds = %27, %0
  %57 = alloca %"class.std::allocator", align 1
  %58 = alloca i8*
  %59 = alloca i32
  call void @_ZNSaIxEC2Ev(%"class.std::allocator"* %57) #3
  br label %27
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.4() #0 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"class.std::vector", align 8
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::allocator", align 1
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca %"class.std::allocator.2", align 1
  store i64 0, i64* %2, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator"* %3) #3
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector"* %1, i64 3001, i64* dereferenceable(8) %2, %"class.std::allocator"* dereferenceable(1) %3)
          to label %7 unwind label %10

; <label>:7:                                      ; preds = %0
  call void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.2"* %6) #3
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.0"* @Com, i64 3001, %"class.std::vector"* dereferenceable(24) %1, %"class.std::allocator.2"* dereferenceable(1) %6)
          to label %8 unwind label %14

; <label>:8:                                      ; preds = %7
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.2"* %6) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %1) #3
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %3) #3
  %9 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.0"*)* @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.0"* @Com to i8*), i8* @__dso_handle) #3
  ret void

; <label>:10:                                     ; preds = %0
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %4, align 8
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %5, align 4
  br label %60

; <label>:14:                                     ; preds = %7
  %15 = load i32, i32* @x.20
  %16 = load i32, i32* @y.21
  %17 = add i32 %15, -1318086002
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, -1318086002
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %66

; <label>:41:                                     ; preds = %14, %66
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %4, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %5, align 4
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.2"* %6) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %1) #3
  %45 = load i32, i32* @x.20
  %46 = load i32, i32* @y.21
  %47 = add i32 %45, -895925696
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -895925696
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %66

; <label>:59:                                     ; preds = %41
  br label %60

; <label>:60:                                     ; preds = %59, %10
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %3) #3
  br label %61

; <label>:61:                                     ; preds = %60
  %62 = load i8*, i8** %4, align 8
  %63 = load i32, i32* %5, align 4
  %64 = insertvalue { i8*, i32 } undef, i8* %62, 0
  %65 = insertvalue { i8*, i32 } %64, i32 %63, 1
  resume { i8*, i32 } %65

; <label>:66:                                     ; preds = %41, %14
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %4, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %5, align 4
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.2"* %6) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %1) #3
  br label %41
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector"*, i64, i64* dereferenceable(8), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i64*, i64** %7, align 8
  invoke void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector"* %11, i64 %15, i64* dereferenceable(8) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.0"*, i64, %"class.std::vector"* dereferenceable(24), %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %12 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.1"* %12, i64 %13, %"class.std::allocator.2"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.0"* %11, i64 %15, %"class.std::vector"* dereferenceable(24) %16)
          to label %17 unwind label %60

; <label>:17:                                     ; preds = %4
  %18 = load i32, i32* @x.26
  %19 = load i32, i32* @y.27
  %20 = add i32 %18, -775623174
  %21 = sub i32 %20, 1
  %22 = sub i32 %21, -775623174
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %70

; <label>:32:                                     ; preds = %17, %70
  %33 = load i32, i32* @x.26
  %34 = load i32, i32* @y.27
  %35 = add i32 %33, -770298389
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -770298389
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %70

; <label>:59:                                     ; preds = %32
  ret void

; <label>:60:                                     ; preds = %4
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %9, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %10, align 4
  %64 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %64) #3
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i8*, i8** %9, align 8
  %67 = load i32, i32* %10, align 4
  %68 = insertvalue { i8*, i32 } undef, i8* %66, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  resume { i8*, i32 } %69

; <label>:70:                                     ; preds = %32, %17
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector"* %9, %"class.std::vector"* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %71

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.30
  %18 = load i32, i32* @y.31
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %149

; <label>:42:                                     ; preds = %16, %149
  %43 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %43) #3
  %44 = load i32, i32* @x.30
  %45 = load i32, i32* @y.31
  %46 = add i32 %44, -108463833
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -108463833
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %149

; <label>:70:                                     ; preds = %42
  ret void

; <label>:71:                                     ; preds = %1
  %72 = load i32, i32* @x.30
  %73 = load i32, i32* @y.31
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %151

; <label>:85:                                     ; preds = %71, %151
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %3, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %4, align 4
  %89 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %89) #3
  %90 = load i32, i32* @x.30
  %91 = load i32, i32* @y.31
  %92 = add i32 %90, -2094234027
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, -2094234027
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %151

; <label>:104:                                    ; preds = %85
  br label %105

; <label>:105:                                    ; preds = %104
  %106 = load i32, i32* @x.30
  %107 = load i32, i32* @y.31
  %108 = sub i32 %106, 621613865
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 621613865
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  br i1 %118, label %120, label %156

; <label>:120:                                    ; preds = %105, %156
  %121 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %121) #11
  %122 = load i32, i32* @x.30
  %123 = load i32, i32* @y.31
  %124 = add i32 %122, 84617479
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, 84617479
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  br i1 %146, label %148, label %156

; <label>:148:                                    ; preds = %120
  unreachable

; <label>:149:                                    ; preds = %42, %16
  %150 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %150) #3
  br label %42

; <label>:151:                                    ; preds = %85, %71
  %152 = landingpad { i8*, i32 }
          catch i8* null
  %153 = extractvalue { i8*, i32 } %152, 0
  store i8* %153, i8** %3, align 8
  %154 = extractvalue { i8*, i32 } %152, 1
  store i32 %154, i32* %4, align 4
  %155 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %155) #3
  br label %85

; <label>:156:                                    ; preds = %120, %105
  %157 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %157) #11
  br label %120
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.5() #0 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"class.std::allocator", align 1
  %2 = alloca i8*
  %3 = alloca i32
  call void @_ZNSaIxEC2Ev(%"class.std::allocator"* %1) #3
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKS0_(%"class.std::vector"* @ComK, i64 10000000, %"class.std::allocator"* dereferenceable(1) %1)
          to label %4 unwind label %6

; <label>:4:                                      ; preds = %0
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %1) #3
  %5 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorIxSaIxEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @ComK to i8*), i8* @__dso_handle) #3
  ret void

; <label>:6:                                      ; preds = %0
  %7 = load i32, i32* @x.32
  %8 = load i32, i32* @y.33
  %9 = add i32 %7, 1644629500
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1644629500
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = and i1 %15, %16
  %18 = xor i1 %15, %16
  %19 = or i1 %17, %18
  %20 = or i1 %15, %16
  br i1 %19, label %21, label %56

; <label>:21:                                     ; preds = %6, %56
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %2, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %3, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %1) #3
  %25 = load i32, i32* @x.32
  %26 = load i32, i32* @y.33
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %56

; <label>:50:                                     ; preds = %21
  br label %51

; <label>:51:                                     ; preds = %50
  %52 = load i8*, i8** %2, align 8
  %53 = load i32, i32* %3, align 4
  %54 = insertvalue { i8*, i32 } undef, i8* %52, 0
  %55 = insertvalue { i8*, i32 } %54, i32 %53, 1
  resume { i8*, i32 } %55

; <label>:56:                                     ; preds = %21, %6
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %2, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %3, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %1) #3
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define void @_Z9DPComInitv() #4 {
  %1 = alloca i1
  %2 = alloca i1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  %6 = alloca i32
  store i32 290923496, i32* %6
  br label %7

; <label>:7:                                      ; preds = %0, %478
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 290923496, label %10
    i32 1839503373, label %37
    i32 -840983225, label %67
    i32 1194689041, label %70
    i32 -1915429448, label %98
    i32 1783779664, label %129
    i32 -1644112218, label %130
    i32 473229899, label %136
    i32 237951833, label %137
    i32 -146594894, label %152
    i32 1964757243, label %170
    i32 1975358212, label %173
    i32 1640541882, label %174
    i32 1052361175, label %178
    i32 -1446603253, label %216
    i32 -2031786890, label %244
    i32 -1906614758, label %276
    i32 -1168115179, label %277
    i32 962159862, label %304
    i32 -1617455231, label %332
    i32 1937168908, label %333
    i32 1603601836, label %360
    i32 -154612749, label %381
    i32 867432039, label %382
    i32 -1744610319, label %383
    i32 1217076509, label %386
    i32 211088697, label %391
    i32 -529706888, label %394
    i32 501229242, label %421
    i32 -1346186993, label %422
  ]

; <label>:9:                                      ; preds = %7
  br label %478

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.34
  %12 = load i32, i32* @y.35
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1839503373, i32 -1744610319
  store i32 %36, i32* %6
  br label %478

; <label>:37:                                     ; preds = %7
  %38 = load i32, i32* %3, align 4
  %39 = icmp slt i32 %38, 3001
  store i1 %39, i1* %2
  %40 = load i32, i32* @x.34
  %41 = load i32, i32* @y.35
  %42 = add i32 %40, 1625643659
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1625643659
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -840983225, i32 -1744610319
  store i32 %66, i32* %6
  br label %478

; <label>:67:                                     ; preds = %7
  %68 = load volatile i1, i1* %2
  %69 = select i1 %68, i32 1194689041, i32 473229899
  store i32 %69, i32* %6
  br label %478

; <label>:70:                                     ; preds = %7
  %71 = load i32, i32* @x.34
  %72 = load i32, i32* @y.35
  %73 = add i32 %71, -1500975071
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -1500975071
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -1915429448, i32 1217076509
  store i32 %97, i32* %6
  br label %478

; <label>:98:                                     ; preds = %7
  %99 = load i32, i32* %3, align 4
  %100 = sext i32 %99 to i64
  %101 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* @Com, i64 %100) #3
  %102 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %101, i64 0) #3
  store i64 1, i64* %102, align 8
  %103 = load i32, i32* @x.34
  %104 = load i32, i32* @y.35
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 1783779664, i32 1217076509
  store i32 %128, i32* %6
  br label %478

; <label>:129:                                    ; preds = %7
  store i32 -1644112218, i32* %6
  br label %478

; <label>:130:                                    ; preds = %7
  %131 = load i32, i32* %3, align 4
  %132 = sub i32 %131, 1988969149
  %133 = add i32 %132, 1
  %134 = add i32 %133, 1988969149
  %135 = add nsw i32 %131, 1
  store i32 %134, i32* %3, align 4
  store i32 290923496, i32* %6
  br label %478

; <label>:136:                                    ; preds = %7
  store i32 1, i32* %4, align 4
  store i32 237951833, i32* %6
  br label %478

; <label>:137:                                    ; preds = %7
  %138 = load i32, i32* @x.34
  %139 = load i32, i32* @y.35
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  %151 = select i1 %149, i32 -146594894, i32 211088697
  store i32 %151, i32* %6
  br label %478

; <label>:152:                                    ; preds = %7
  %153 = load i32, i32* %4, align 4
  %154 = icmp slt i32 %153, 3001
  store i1 %154, i1* %1
  %155 = load i32, i32* @x.34
  %156 = load i32, i32* @y.35
  %157 = add i32 %155, -395118023
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, -395118023
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  %169 = select i1 %167, i32 1964757243, i32 211088697
  store i32 %169, i32* %6
  br label %478

; <label>:170:                                    ; preds = %7
  %171 = load volatile i1, i1* %1
  %172 = select i1 %171, i32 1975358212, i32 867432039
  store i32 %172, i32* %6
  br label %478

; <label>:173:                                    ; preds = %7
  store i32 1, i32* %5, align 4
  store i32 1640541882, i32* %6
  br label %478

; <label>:174:                                    ; preds = %7
  %175 = load i32, i32* %5, align 4
  %176 = icmp slt i32 %175, 3001
  %177 = select i1 %176, i32 1052361175, i32 -1168115179
  store i32 %177, i32* %6
  br label %478

; <label>:178:                                    ; preds = %7
  %179 = load i32, i32* %4, align 4
  %180 = sub i32 %179, -1679222632
  %181 = sub i32 %180, 1
  %182 = add i32 %181, -1679222632
  %183 = sub nsw i32 %179, 1
  %184 = sext i32 %182 to i64
  %185 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* @Com, i64 %184) #3
  %186 = load i32, i32* %5, align 4
  %187 = sub i32 %186, 219737715
  %188 = sub i32 %187, 1
  %189 = add i32 %188, 219737715
  %190 = sub nsw i32 %186, 1
  %191 = sext i32 %189 to i64
  %192 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %185, i64 %191) #3
  %193 = load i64, i64* %192, align 8
  %194 = load i32, i32* %4, align 4
  %195 = add i32 %194, 1597285702
  %196 = sub i32 %195, 1
  %197 = sub i32 %196, 1597285702
  %198 = sub nsw i32 %194, 1
  %199 = sext i32 %197 to i64
  %200 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* @Com, i64 %199) #3
  %201 = load i32, i32* %5, align 4
  %202 = sext i32 %201 to i64
  %203 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %200, i64 %202) #3
  %204 = load i64, i64* %203, align 8
  %205 = sub i64 %193, 4152324764739151220
  %206 = add i64 %205, %204
  %207 = add i64 %206, 4152324764739151220
  %208 = add nsw i64 %193, %204
  %209 = srem i64 %207, 1000000007
  %210 = load i32, i32* %4, align 4
  %211 = sext i32 %210 to i64
  %212 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* @Com, i64 %211) #3
  %213 = load i32, i32* %5, align 4
  %214 = sext i32 %213 to i64
  %215 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %212, i64 %214) #3
  store i64 %209, i64* %215, align 8
  store i32 -1446603253, i32* %6
  br label %478

; <label>:216:                                    ; preds = %7
  %217 = load i32, i32* @x.34
  %218 = load i32, i32* @y.35
  %219 = add i32 %217, -137829989
  %220 = sub i32 %219, 1
  %221 = sub i32 %220, -137829989
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 true, true
  %230 = and i1 %227, true
  %231 = and i1 %225, %229
  %232 = and i1 %228, true
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 true, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  %243 = select i1 %241, i32 -2031786890, i32 -529706888
  store i32 %243, i32* %6
  br label %478

; <label>:244:                                    ; preds = %7
  %245 = load i32, i32* %5, align 4
  %246 = sub i32 0, 1
  %247 = sub i32 %245, %246
  %248 = add nsw i32 %245, 1
  store i32 %247, i32* %5, align 4
  %249 = load i32, i32* @x.34
  %250 = load i32, i32* @y.35
  %251 = add i32 %249, 748519451
  %252 = sub i32 %251, 1
  %253 = sub i32 %252, 748519451
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = xor i1 %257, true
  %260 = xor i1 %258, true
  %261 = xor i1 true, true
  %262 = and i1 %259, true
  %263 = and i1 %257, %261
  %264 = and i1 %260, true
  %265 = and i1 %258, %261
  %266 = or i1 %262, %263
  %267 = or i1 %264, %265
  %268 = xor i1 %266, %267
  %269 = or i1 %259, %260
  %270 = xor i1 %269, true
  %271 = or i1 true, %261
  %272 = and i1 %270, %271
  %273 = or i1 %268, %272
  %274 = or i1 %257, %258
  %275 = select i1 %273, i32 -1906614758, i32 -529706888
  store i32 %275, i32* %6
  br label %478

; <label>:276:                                    ; preds = %7
  store i32 1640541882, i32* %6
  br label %478

; <label>:277:                                    ; preds = %7
  %278 = load i32, i32* @x.34
  %279 = load i32, i32* @y.35
  %280 = sub i32 0, 1
  %281 = add i32 %278, %280
  %282 = sub i32 %278, 1
  %283 = mul i32 %278, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %279, 10
  %287 = xor i1 %285, true
  %288 = xor i1 %286, true
  %289 = xor i1 false, true
  %290 = and i1 %287, false
  %291 = and i1 %285, %289
  %292 = and i1 %288, false
  %293 = and i1 %286, %289
  %294 = or i1 %290, %291
  %295 = or i1 %292, %293
  %296 = xor i1 %294, %295
  %297 = or i1 %287, %288
  %298 = xor i1 %297, true
  %299 = or i1 false, %289
  %300 = and i1 %298, %299
  %301 = or i1 %296, %300
  %302 = or i1 %285, %286
  %303 = select i1 %301, i32 962159862, i32 501229242
  store i32 %303, i32* %6
  br label %478

; <label>:304:                                    ; preds = %7
  %305 = load i32, i32* @x.34
  %306 = load i32, i32* @y.35
  %307 = add i32 %305, -819624566
  %308 = sub i32 %307, 1
  %309 = sub i32 %308, -819624566
  %310 = sub i32 %305, 1
  %311 = mul i32 %305, %309
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %306, 10
  %315 = xor i1 %313, true
  %316 = xor i1 %314, true
  %317 = xor i1 false, true
  %318 = and i1 %315, false
  %319 = and i1 %313, %317
  %320 = and i1 %316, false
  %321 = and i1 %314, %317
  %322 = or i1 %318, %319
  %323 = or i1 %320, %321
  %324 = xor i1 %322, %323
  %325 = or i1 %315, %316
  %326 = xor i1 %325, true
  %327 = or i1 false, %317
  %328 = and i1 %326, %327
  %329 = or i1 %324, %328
  %330 = or i1 %313, %314
  %331 = select i1 %329, i32 -1617455231, i32 501229242
  store i32 %331, i32* %6
  br label %478

; <label>:332:                                    ; preds = %7
  store i32 1937168908, i32* %6
  br label %478

; <label>:333:                                    ; preds = %7
  %334 = load i32, i32* @x.34
  %335 = load i32, i32* @y.35
  %336 = sub i32 0, 1
  %337 = add i32 %334, %336
  %338 = sub i32 %334, 1
  %339 = mul i32 %334, %337
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %335, 10
  %343 = xor i1 %341, true
  %344 = xor i1 %342, true
  %345 = xor i1 false, true
  %346 = and i1 %343, false
  %347 = and i1 %341, %345
  %348 = and i1 %344, false
  %349 = and i1 %342, %345
  %350 = or i1 %346, %347
  %351 = or i1 %348, %349
  %352 = xor i1 %350, %351
  %353 = or i1 %343, %344
  %354 = xor i1 %353, true
  %355 = or i1 false, %345
  %356 = and i1 %354, %355
  %357 = or i1 %352, %356
  %358 = or i1 %341, %342
  %359 = select i1 %357, i32 1603601836, i32 -1346186993
  store i32 %359, i32* %6
  br label %478

; <label>:360:                                    ; preds = %7
  %361 = load i32, i32* %4, align 4
  %362 = sub i32 %361, -1399096581
  %363 = add i32 %362, 1
  %364 = add i32 %363, -1399096581
  %365 = add nsw i32 %361, 1
  store i32 %364, i32* %4, align 4
  %366 = load i32, i32* @x.34
  %367 = load i32, i32* @y.35
  %368 = add i32 %366, 2037272762
  %369 = sub i32 %368, 1
  %370 = sub i32 %369, 2037272762
  %371 = sub i32 %366, 1
  %372 = mul i32 %366, %370
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %367, 10
  %376 = and i1 %374, %375
  %377 = xor i1 %374, %375
  %378 = or i1 %376, %377
  %379 = or i1 %374, %375
  %380 = select i1 %378, i32 -154612749, i32 -1346186993
  store i32 %380, i32* %6
  br label %478

; <label>:381:                                    ; preds = %7
  store i32 237951833, i32* %6
  br label %478

; <label>:382:                                    ; preds = %7
  ret void

; <label>:383:                                    ; preds = %7
  %384 = load i32, i32* %3, align 4
  %385 = icmp slt i32 %384, 3001
  store i32 1839503373, i32* %6
  br label %478

; <label>:386:                                    ; preds = %7
  %387 = load i32, i32* %3, align 4
  %388 = sext i32 %387 to i64
  %389 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* @Com, i64 %388) #3
  %390 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %389, i64 0) #3
  store i64 1, i64* %390, align 8
  store i32 -1915429448, i32* %6
  br label %478

; <label>:391:                                    ; preds = %7
  %392 = load i32, i32* %4, align 4
  %393 = icmp slt i32 %392, 3001
  store i32 -146594894, i32* %6
  br label %478

; <label>:394:                                    ; preds = %7
  %395 = load i32, i32* %5, align 4
  %396 = add i32 %395, 1673399425
  %397 = sub i32 %396, 1
  %398 = sub i32 %397, 1673399425
  %399 = sub i32 %395, 1
  %400 = mul i32 %398, 1
  %401 = shl i32 %395, 1
  %402 = sub i32 0, -1138531472
  %403 = sub i32 %402, %395
  %404 = add i32 %403, -1138531472
  %405 = sub i32 0, %395
  %406 = add i32 %404, 146310711
  %407 = add i32 %406, 1
  %408 = sub i32 %407, 146310711
  %409 = add i32 %404, 1
  %410 = sub i32 0, %395
  %411 = add i32 0, %410
  %412 = sub i32 0, %395
  %413 = sub i32 0, %411
  %414 = sub i32 0, 1
  %415 = add i32 %413, %414
  %416 = sub i32 0, %415
  %417 = add i32 %411, 1
  %418 = sub i32 0, 1
  %419 = sub i32 %395, %418
  %420 = add nsw i32 %395, 1
  store i32 %419, i32* %5, align 4
  store i32 -2031786890, i32* %6
  br label %478

; <label>:421:                                    ; preds = %7
  store i32 962159862, i32* %6
  br label %478

; <label>:422:                                    ; preds = %7
  %423 = load i32, i32* %4, align 4
  %424 = shl i32 %423, 1
  %425 = sub i32 0, %423
  %426 = add i32 0, %425
  %427 = sub i32 0, %423
  %428 = sub i32 0, %426
  %429 = sub i32 0, 1
  %430 = add i32 %428, %429
  %431 = sub i32 0, %430
  %432 = add i32 %426, 1
  %433 = sub i32 0, -1792247870
  %434 = sub i32 %433, %423
  %435 = add i32 %434, -1792247870
  %436 = sub i32 0, %423
  %437 = sub i32 0, 1
  %438 = sub i32 %435, %437
  %439 = add i32 %435, 1
  %440 = sub i32 0, %423
  %441 = add i32 0, %440
  %442 = sub i32 0, %423
  %443 = add i32 %441, -624791524
  %444 = add i32 %443, 1
  %445 = sub i32 %444, -624791524
  %446 = add i32 %441, 1
  %447 = add i32 0, 1426616896
  %448 = sub i32 %447, %423
  %449 = sub i32 %448, 1426616896
  %450 = sub i32 0, %423
  %451 = sub i32 0, 1
  %452 = sub i32 %449, %451
  %453 = add i32 %449, 1
  %454 = sub i32 0, 1
  %455 = add i32 %423, %454
  %456 = sub i32 %423, 1
  %457 = mul i32 %455, 1
  %458 = sub i32 0, %423
  %459 = add i32 0, %458
  %460 = sub i32 0, %423
  %461 = sub i32 %459, 1719119539
  %462 = add i32 %461, 1
  %463 = add i32 %462, 1719119539
  %464 = add i32 %459, 1
  %465 = shl i32 %423, 1
  %466 = sub i32 0, 1810963476
  %467 = sub i32 %466, %423
  %468 = add i32 %467, 1810963476
  %469 = sub i32 0, %423
  %470 = sub i32 0, 1
  %471 = sub i32 %468, %470
  %472 = add i32 %468, 1
  %473 = sub i32 0, %423
  %474 = sub i32 0, 1
  %475 = add i32 %473, %474
  %476 = sub i32 0, %475
  %477 = add nsw i32 %423, 1
  store i32 %476, i32* %4, align 4
  store i32 1603601836, i32* %6
  br label %478

; <label>:478:                                    ; preds = %422, %421, %394, %391, %386, %383, %381, %360, %333, %332, %304, %277, %276, %244, %216, %178, %174, %173, %170, %152, %137, %136, %130, %129, %98, %70, %67, %37, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %9, i64 %10
  ret %"class.std::vector"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.38
  %7 = load i32, i32* @y.39
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 498282803, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 498282803, label %19
    i32 196454390, label %39
    i32 1413891556, label %76
    i32 -859469169, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 196454390, i32 -859469169
  store i32 %38, i32* %15
  br label %88

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %43 = bitcast %"class.std::vector"* %42 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = getelementptr inbounds i64, i64* %46, i64 %47
  store i64* %48, i64** %3
  %49 = load i32, i32* @x.38
  %50 = load i32, i32* @y.39
  %51 = add i32 %49, 664565944
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 664565944
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1413891556, i32 -859469169
  store i32 %75, i32* %15
  br label %88

; <label>:76:                                     ; preds = %16
  %77 = load volatile i64*, i64** %3
  ret i64* %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.std::vector"*, align 8
  %80 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %79, align 8
  store i64 %1, i64* %80, align 8
  %81 = load %"class.std::vector"*, %"class.std::vector"** %79, align 8
  %82 = bitcast %"class.std::vector"* %81 to %"struct.std::_Vector_base"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = load i64, i64* %80, align 8
  %87 = getelementptr inbounds i64, i64* %85, i64 %86
  store i32 196454390, i32* %15
  br label %88

; <label>:88:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define void @_Z8ComKInitx(i64) #4 {
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  store i64 %0, i64* %2, align 8
  store i32 0, i32* %3, align 4
  %4 = alloca i32
  store i32 125444081, i32* %4
  br label %5

; <label>:5:                                      ; preds = %1, %177
  %6 = load i32, i32* %4
  switch i32 %6, label %7 [
    i32 125444081, label %8
    i32 1888820896, label %12
    i32 634812140, label %16
    i32 846667759, label %23
    i32 593617669, label %51
    i32 1344578857, label %55
    i32 -1449702708, label %70
    i32 1502750168, label %100
    i32 -83795670, label %101
    i32 -1341394157, label %108
    i32 -1066736964, label %114
    i32 57498490, label %126
    i32 1122197762, label %130
    i32 -600463739, label %131
    i32 -1144355970, label %132
    i32 -1749549471, label %148
    i32 -2116144758, label %164
    i32 2071027215, label %165
    i32 1751170279, label %171
    i32 -694269073, label %172
    i32 -345944877, label %176
  ]

; <label>:7:                                      ; preds = %5
  br label %177

; <label>:8:                                      ; preds = %5
  %9 = load i32, i32* %3, align 4
  %10 = icmp sle i32 %9, 10000000
  %11 = select i1 %10, i32 1888820896, i32 1751170279
  store i32 %11, i32* %4
  br label %177

; <label>:12:                                     ; preds = %5
  %13 = load i32, i32* %3, align 4
  %14 = icmp slt i32 0, %13
  %15 = select i1 %14, i32 634812140, i32 593617669
  store i32 %15, i32* %4
  br label %177

; <label>:16:                                     ; preds = %5
  %17 = load i32, i32* %3, align 4
  %18 = sext i32 %17 to i64
  %19 = load i64, i64* %2, align 8
  %20 = sdiv i64 %19, 2
  %21 = icmp sle i64 %18, %20
  %22 = select i1 %21, i32 846667759, i32 593617669
  store i32 %22, i32* %4
  br label %177

; <label>:23:                                     ; preds = %5
  %24 = load i32, i32* %3, align 4
  %25 = add i32 %24, -416740157
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -416740157
  %28 = sub nsw i32 %24, 1
  %29 = sext i32 %27 to i64
  %30 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @ComK, i64 %29) #3
  %31 = load i64, i64* %30, align 8
  %32 = load i64, i64* %2, align 8
  %33 = load i32, i32* %3, align 4
  %34 = sext i32 %33 to i64
  %35 = add i64 %32, -172631142257798812
  %36 = sub i64 %35, %34
  %37 = sub i64 %36, -172631142257798812
  %38 = sub nsw i64 %32, %34
  %39 = sub i64 %37, -1654716897253136621
  %40 = add i64 %39, 1
  %41 = add i64 %40, -1654716897253136621
  %42 = add nsw i64 %37, 1
  %43 = mul nsw i64 %31, %41
  %44 = load i32, i32* %3, align 4
  %45 = sext i32 %44 to i64
  %46 = sdiv i64 %43, %45
  %47 = srem i64 %46, 1000000007
  %48 = load i32, i32* %3, align 4
  %49 = sext i32 %48 to i64
  %50 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @ComK, i64 %49) #3
  store i64 %47, i64* %50, align 8
  store i32 -1144355970, i32* %4
  br label %177

; <label>:51:                                     ; preds = %5
  %52 = load i32, i32* %3, align 4
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, i32 1344578857, i32 -83795670
  store i32 %54, i32* %4
  br label %177

; <label>:55:                                     ; preds = %5
  %56 = load i32, i32* @x.40
  %57 = load i32, i32* @y.41
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -1449702708, i32 -694269073
  store i32 %69, i32* %4
  br label %177

; <label>:70:                                     ; preds = %5
  %71 = load i32, i32* %3, align 4
  %72 = sext i32 %71 to i64
  %73 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @ComK, i64 %72) #3
  store i64 1, i64* %73, align 8
  %74 = load i32, i32* @x.40
  %75 = load i32, i32* @y.41
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 1502750168, i32 -694269073
  store i32 %99, i32* %4
  br label %177

; <label>:100:                                    ; preds = %5
  store i32 -600463739, i32* %4
  br label %177

; <label>:101:                                    ; preds = %5
  %102 = load i64, i64* %2, align 8
  %103 = sdiv i64 %102, 2
  %104 = load i32, i32* %3, align 4
  %105 = sext i32 %104 to i64
  %106 = icmp slt i64 %103, %105
  %107 = select i1 %106, i32 -1341394157, i32 57498490
  store i32 %107, i32* %4
  br label %177

; <label>:108:                                    ; preds = %5
  %109 = load i32, i32* %3, align 4
  %110 = sext i32 %109 to i64
  %111 = load i64, i64* %2, align 8
  %112 = icmp sle i64 %110, %111
  %113 = select i1 %112, i32 -1066736964, i32 57498490
  store i32 %113, i32* %4
  br label %177

; <label>:114:                                    ; preds = %5
  %115 = load i64, i64* %2, align 8
  %116 = load i32, i32* %3, align 4
  %117 = sext i32 %116 to i64
  %118 = sub i64 0, %117
  %119 = add i64 %115, %118
  %120 = sub nsw i64 %115, %117
  %121 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @ComK, i64 %119) #3
  %122 = load i64, i64* %121, align 8
  %123 = load i32, i32* %3, align 4
  %124 = sext i32 %123 to i64
  %125 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @ComK, i64 %124) #3
  store i64 %122, i64* %125, align 8
  store i32 1122197762, i32* %4
  br label %177

; <label>:126:                                    ; preds = %5
  %127 = load i32, i32* %3, align 4
  %128 = sext i32 %127 to i64
  %129 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @ComK, i64 %128) #3
  store i64 -1, i64* %129, align 8
  store i32 1122197762, i32* %4
  br label %177

; <label>:130:                                    ; preds = %5
  store i32 -600463739, i32* %4
  br label %177

; <label>:131:                                    ; preds = %5
  store i32 -1144355970, i32* %4
  br label %177

; <label>:132:                                    ; preds = %5
  %133 = load i32, i32* @x.40
  %134 = load i32, i32* @y.41
  %135 = add i32 %133, -409234056
  %136 = sub i32 %135, 1
  %137 = sub i32 %136, -409234056
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = and i1 %141, %142
  %144 = xor i1 %141, %142
  %145 = or i1 %143, %144
  %146 = or i1 %141, %142
  %147 = select i1 %145, i32 -1749549471, i32 -345944877
  store i32 %147, i32* %4
  br label %177

; <label>:148:                                    ; preds = %5
  %149 = load i32, i32* @x.40
  %150 = load i32, i32* @y.41
  %151 = add i32 %149, 367873458
  %152 = sub i32 %151, 1
  %153 = sub i32 %152, 367873458
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = and i1 %157, %158
  %160 = xor i1 %157, %158
  %161 = or i1 %159, %160
  %162 = or i1 %157, %158
  %163 = select i1 %161, i32 -2116144758, i32 -345944877
  store i32 %163, i32* %4
  br label %177

; <label>:164:                                    ; preds = %5
  store i32 2071027215, i32* %4
  br label %177

; <label>:165:                                    ; preds = %5
  %166 = load i32, i32* %3, align 4
  %167 = sub i32 %166, -1333877322
  %168 = add i32 %167, 1
  %169 = add i32 %168, -1333877322
  %170 = add nsw i32 %166, 1
  store i32 %169, i32* %3, align 4
  store i32 125444081, i32* %4
  br label %177

; <label>:171:                                    ; preds = %5
  ret void

; <label>:172:                                    ; preds = %5
  %173 = load i32, i32* %3, align 4
  %174 = sext i32 %173 to i64
  %175 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @ComK, i64 %174) #3
  store i64 1, i64* %175, align 8
  store i32 -1449702708, i32* %4
  br label %177

; <label>:176:                                    ; preds = %5
  store i32 -1749549471, i32* %4
  br label %177

; <label>:177:                                    ; preds = %176, %172, %165, %164, %148, %132, %131, %130, %126, %114, %108, %101, %100, %70, %55, %51, %23, %16, %12, %8, %7
  br label %5
}

; Function Attrs: noinline nounwind uwtable
define void @_Z7ComInitv() #4 {
  %1 = alloca i1
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.42
  %6 = load i32, i32* @y.43
  %7 = add i32 %5, 1877155482
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1877155482
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1361443776, i32* %15
  br label %16

; <label>:16:                                     ; preds = %0, %172
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1361443776, label %19
    i32 -228286892, label %27
    i32 1408140242, label %51
    i32 1014703714, label %52
    i32 -279135517, label %67
    i32 1871512036, label %85
    i32 -495024793, label %88
    i32 883341369, label %152
    i32 -702311134, label %159
    i32 -1761659733, label %160
    i32 -1167383751, label %168
  ]

; <label>:18:                                     ; preds = %16
  br label %172

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -228286892, i32 -1761659733
  store i32 %26, i32* %15
  br label %172

; <label>:27:                                     ; preds = %16
  %28 = alloca i32, align 4
  store i32* %28, i32** %2
  %29 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacMod, i64 1) #3
  store i64 1, i64* %29, align 8
  %30 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacMod, i64 0) #3
  store i64 1, i64* %30, align 8
  %31 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @InvMod, i64 0) #3
  store i64 0, i64* %31, align 8
  %32 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @InvMod, i64 1) #3
  store i64 1, i64* %32, align 8
  %33 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacInvMod, i64 1) #3
  store i64 1, i64* %33, align 8
  %34 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacInvMod, i64 0) #3
  store i64 1, i64* %34, align 8
  %35 = load volatile i32*, i32** %2
  store i32 2, i32* %35, align 4
  %36 = load i32, i32* @x.42
  %37 = load i32, i32* @y.43
  %38 = add i32 %36, -41089590
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -41089590
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 1408140242, i32 -1761659733
  store i32 %50, i32* %15
  br label %172

; <label>:51:                                     ; preds = %16
  store i32 1014703714, i32* %15
  br label %172

; <label>:52:                                     ; preds = %16
  %53 = load i32, i32* @x.42
  %54 = load i32, i32* @y.43
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -279135517, i32 -1167383751
  store i32 %66, i32* %15
  br label %172

; <label>:67:                                     ; preds = %16
  %68 = load volatile i32*, i32** %2
  %69 = load i32, i32* %68, align 4
  %70 = icmp slt i32 %69, 1000000
  store i1 %70, i1* %1
  %71 = load i32, i32* @x.42
  %72 = load i32, i32* @y.43
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 1871512036, i32 -1167383751
  store i32 %84, i32* %15
  br label %172

; <label>:85:                                     ; preds = %16
  %86 = load volatile i1, i1* %1
  %87 = select i1 %86, i32 -495024793, i32 -702311134
  store i32 %87, i32* %15
  br label %172

; <label>:88:                                     ; preds = %16
  %89 = load volatile i32*, i32** %2
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, -728664515
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, -728664515
  %94 = sub nsw i32 %90, 1
  %95 = sext i32 %93 to i64
  %96 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacMod, i64 %95) #3
  %97 = load i64, i64* %96, align 8
  %98 = load volatile i32*, i32** %2
  %99 = load i32, i32* %98, align 4
  %100 = sext i32 %99 to i64
  %101 = mul nsw i64 %97, %100
  %102 = srem i64 %101, 1000000007
  %103 = load volatile i32*, i32** %2
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacMod, i64 %105) #3
  store i64 %102, i64* %106, align 8
  %107 = load volatile i32*, i32** %2
  %108 = load i32, i32* %107, align 4
  %109 = sext i32 %108 to i64
  %110 = srem i64 1000000007, %109
  %111 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @InvMod, i64 %110) #3
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 0, 49321886046990723
  %114 = sub i64 %113, %112
  %115 = add i64 %114, 49321886046990723
  %116 = sub nsw i64 0, %112
  %117 = load volatile i32*, i32** %2
  %118 = load i32, i32* %117, align 4
  %119 = sext i32 %118 to i64
  %120 = sdiv i64 1000000007, %119
  %121 = mul nsw i64 %115, %120
  %122 = srem i64 %121, 1000000007
  %123 = sub i64 0, %122
  %124 = sub i64 0, 1000000007
  %125 = add i64 %123, %124
  %126 = sub i64 0, %125
  %127 = add nsw i64 %122, 1000000007
  %128 = load volatile i32*, i32** %2
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @InvMod, i64 %130) #3
  store i64 %126, i64* %131, align 8
  %132 = load volatile i32*, i32** %2
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, 1534453661
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, 1534453661
  %137 = sub nsw i32 %133, 1
  %138 = sext i32 %136 to i64
  %139 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacInvMod, i64 %138) #3
  %140 = load i64, i64* %139, align 8
  %141 = load volatile i32*, i32** %2
  %142 = load i32, i32* %141, align 4
  %143 = sext i32 %142 to i64
  %144 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @InvMod, i64 %143) #3
  %145 = load i64, i64* %144, align 8
  %146 = mul nsw i64 %140, %145
  %147 = srem i64 %146, 1000000007
  %148 = load volatile i32*, i32** %2
  %149 = load i32, i32* %148, align 4
  %150 = sext i32 %149 to i64
  %151 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacInvMod, i64 %150) #3
  store i64 %147, i64* %151, align 8
  store i32 883341369, i32* %15
  br label %172

; <label>:152:                                    ; preds = %16
  %153 = load volatile i32*, i32** %2
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 0, 1
  %156 = sub i32 %154, %155
  %157 = add nsw i32 %154, 1
  %158 = load volatile i32*, i32** %2
  store i32 %156, i32* %158, align 4
  store i32 1014703714, i32* %15
  br label %172

; <label>:159:                                    ; preds = %16
  ret void

; <label>:160:                                    ; preds = %16
  %161 = alloca i32, align 4
  %162 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacMod, i64 1) #3
  store i64 1, i64* %162, align 8
  %163 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacMod, i64 0) #3
  store i64 1, i64* %163, align 8
  %164 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @InvMod, i64 0) #3
  store i64 0, i64* %164, align 8
  %165 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @InvMod, i64 1) #3
  store i64 1, i64* %165, align 8
  %166 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacInvMod, i64 1) #3
  store i64 1, i64* %166, align 8
  %167 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacInvMod, i64 0) #3
  store i64 1, i64* %167, align 8
  store i32 2, i32* %161, align 4
  store i32 -228286892, i32* %15
  br label %172

; <label>:168:                                    ; preds = %16
  %169 = load volatile i32*, i32** %2
  %170 = load i32, i32* %169, align 4
  %171 = icmp slt i32 %170, 1000000
  store i32 -279135517, i32* %15
  br label %172

; <label>:172:                                    ; preds = %168, %160, %152, %88, %85, %67, %52, %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z6ComModii(i32, i32) #4 {
  %3 = alloca i64
  %4 = alloca i32
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  %8 = load i32, i32* %6, align 4
  store i32 %8, i32* %4
  %9 = alloca i32
  store i32 1498477934, i32* %9
  br label %10

; <label>:10:                                     ; preds = %2, %98
  %11 = load i32, i32* %9
  switch i32 %11, label %12 [
    i32 1498477934, label %13
    i32 811464533, label %17
    i32 700239677, label %21
    i32 -270163402, label %26
    i32 1017183221, label %48
    i32 2050792632, label %49
    i32 254098795, label %65
    i32 1797658566, label %94
    i32 -2054030430, label %96
  ]

; <label>:12:                                     ; preds = %10
  br label %98

; <label>:13:                                     ; preds = %10
  %14 = load volatile i32, i32* %4
  %15 = icmp sge i32 %14, 0
  %16 = select i1 %15, i32 811464533, i32 1017183221
  store i32 %16, i32* %9
  br label %98

; <label>:17:                                     ; preds = %10
  %18 = load i32, i32* %7, align 4
  %19 = icmp sge i32 %18, 0
  %20 = select i1 %19, i32 700239677, i32 1017183221
  store i32 %20, i32* %9
  br label %98

; <label>:21:                                     ; preds = %10
  %22 = load i32, i32* %6, align 4
  %23 = load i32, i32* %7, align 4
  %24 = icmp sge i32 %22, %23
  %25 = select i1 %24, i32 -270163402, i32 1017183221
  store i32 %25, i32* %9
  br label %98

; <label>:26:                                     ; preds = %10
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacMod, i64 %28) #3
  %30 = load i64, i64* %29, align 8
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacInvMod, i64 %32) #3
  %34 = load i64, i64* %33, align 8
  %35 = load i32, i32* %6, align 4
  %36 = load i32, i32* %7, align 4
  %37 = add i32 %35, 695168986
  %38 = sub i32 %37, %36
  %39 = sub i32 %38, 695168986
  %40 = sub nsw i32 %35, %36
  %41 = sext i32 %39 to i64
  %42 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* @FacInvMod, i64 %41) #3
  %43 = load i64, i64* %42, align 8
  %44 = mul nsw i64 %34, %43
  %45 = srem i64 %44, 1000000007
  %46 = mul nsw i64 %30, %45
  %47 = srem i64 %46, 1000000007
  store i64 %47, i64* %5, align 8
  store i32 2050792632, i32* %9
  br label %98

; <label>:48:                                     ; preds = %10
  store i64 0, i64* %5, align 8
  store i32 2050792632, i32* %9
  br label %98

; <label>:49:                                     ; preds = %10
  %50 = load i32, i32* @x.44
  %51 = load i32, i32* @y.45
  %52 = sub i32 %50, -514688521
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -514688521
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 254098795, i32 -2054030430
  store i32 %64, i32* %9
  br label %98

; <label>:65:                                     ; preds = %10
  %66 = load i64, i64* %5, align 8
  store i64 %66, i64* %3
  %67 = load i32, i32* @x.44
  %68 = load i32, i32* @y.45
  %69 = add i32 %67, 1543981626
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 1543981626
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 1797658566, i32 -2054030430
  store i32 %93, i32* %9
  br label %98

; <label>:94:                                     ; preds = %10
  %95 = load volatile i64, i64* %3
  ret i64 %95

; <label>:96:                                     ; preds = %10
  %97 = load i64, i64* %5, align 8
  store i32 254098795, i32* %9
  br label %98

; <label>:98:                                     ; preds = %96, %65, %49, %48, %26, %21, %17, %13, %12
  br label %10
}

; Function Attrs: noinline uwtable
define i64 @_Z5powerxx(i64, i64) #0 {
  %3 = alloca i64
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i64 %0, i64* %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %3
  %8 = alloca i32
  store i32 1960868137, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %49
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 1960868137, label %12
    i32 -253591473, label %16
    i32 1992715651, label %17
    i32 -696399895, label %21
    i32 -1813773540, label %22
    i32 -1591355829, label %27
    i32 2053582722, label %37
    i32 675199607, label %47
  ]

; <label>:11:                                     ; preds = %9
  br label %49

; <label>:12:                                     ; preds = %9
  %13 = load volatile i64, i64* %3
  %14 = icmp slt i64 %13, 0
  %15 = select i1 %14, i32 -253591473, i32 1992715651
  store i32 %15, i32* %8
  br label %49

; <label>:16:                                     ; preds = %9
  store i64 0, i64* %4, align 8
  store i32 675199607, i32* %8
  br label %49

; <label>:17:                                     ; preds = %9
  %18 = load i64, i64* %6, align 8
  %19 = icmp eq i64 %18, 0
  %20 = select i1 %19, i32 -696399895, i32 -1813773540
  store i32 %20, i32* %8
  br label %49

; <label>:21:                                     ; preds = %9
  store i64 1, i64* %4, align 8
  store i32 675199607, i32* %8
  br label %49

; <label>:22:                                     ; preds = %9
  %23 = load i64, i64* %6, align 8
  %24 = srem i64 %23, 2
  %25 = icmp eq i64 %24, 0
  %26 = select i1 %25, i32 -1591355829, i32 2053582722
  store i32 %26, i32* %8
  br label %49

; <label>:27:                                     ; preds = %9
  %28 = load i64, i64* %5, align 8
  %29 = load i64, i64* %6, align 8
  %30 = sdiv i64 %29, 2
  %31 = call i64 @_Z5powerxx(i64 %28, i64 %30)
  %32 = load i64, i64* %5, align 8
  %33 = load i64, i64* %6, align 8
  %34 = sdiv i64 %33, 2
  %35 = call i64 @_Z5powerxx(i64 %32, i64 %34)
  %36 = mul nsw i64 %31, %35
  store i64 %36, i64* %4, align 8
  store i32 675199607, i32* %8
  br label %49

; <label>:37:                                     ; preds = %9
  %38 = load i64, i64* %5, align 8
  %39 = load i64, i64* %6, align 8
  %40 = sub i64 %39, -8443139929028121997
  %41 = sub i64 %40, 1
  %42 = add i64 %41, -8443139929028121997
  %43 = sub nsw i64 %39, 1
  %44 = call i64 @_Z5powerxx(i64 %38, i64 %42)
  %45 = load i64, i64* %5, align 8
  %46 = mul nsw i64 %44, %45
  store i64 %46, i64* %4, align 8
  store i32 675199607, i32* %8
  br label %49

; <label>:47:                                     ; preds = %9
  %48 = load i64, i64* %4, align 8
  ret i64 %48

; <label>:49:                                     ; preds = %37, %27, %22, %21, %17, %16, %12, %11
  br label %9
}

; Function Attrs: noinline uwtable
define i64 @_Z6mpowerxxx(i64, i64, i64) #0 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store i64 %0, i64* %7, align 8
  store i64 %1, i64* %8, align 8
  store i64 %2, i64* %9, align 8
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = alloca i32
  store i32 1951388557, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %247
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1951388557, label %15
    i32 -2020470242, label %19
    i32 1717066316, label %20
    i32 1873291209, label %24
    i32 1804670583, label %25
    i32 -62514624, label %30
    i32 1653388770, label %46
    i32 838750459, label %74
    i32 -269937120, label %75
    i32 -1767606530, label %87
    i32 585050293, label %114
    i32 1716836439, label %143
    i32 -1430513797, label %145
    i32 1963942402, label %245
  ]

; <label>:14:                                     ; preds = %12
  br label %247

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %5
  %17 = icmp slt i64 %16, 0
  %18 = select i1 %17, i32 -2020470242, i32 1717066316
  store i32 %18, i32* %11
  br label %247

; <label>:19:                                     ; preds = %12
  store i64 0, i64* %6, align 8
  store i32 -1767606530, i32* %11
  br label %247

; <label>:20:                                     ; preds = %12
  %21 = load i64, i64* %8, align 8
  %22 = icmp eq i64 %21, 0
  %23 = select i1 %22, i32 1873291209, i32 1804670583
  store i32 %23, i32* %11
  br label %247

; <label>:24:                                     ; preds = %12
  store i64 1, i64* %6, align 8
  store i32 -1767606530, i32* %11
  br label %247

; <label>:25:                                     ; preds = %12
  %26 = load i64, i64* %8, align 8
  %27 = srem i64 %26, 2
  %28 = icmp eq i64 %27, 0
  %29 = select i1 %28, i32 -62514624, i32 -269937120
  store i32 %29, i32* %11
  br label %247

; <label>:30:                                     ; preds = %12
  %31 = load i32, i32* @x.48
  %32 = load i32, i32* @y.49
  %33 = add i32 %31, 1543535034
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1543535034
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1653388770, i32 -1430513797
  store i32 %45, i32* %11
  br label %247

; <label>:46:                                     ; preds = %12
  %47 = load i64, i64* %7, align 8
  %48 = load i64, i64* %8, align 8
  %49 = sdiv i64 %48, 2
  %50 = load i64, i64* %9, align 8
  %51 = call i64 @_Z6mpowerxxx(i64 %47, i64 %49, i64 %50)
  %52 = load i64, i64* %7, align 8
  %53 = load i64, i64* %8, align 8
  %54 = sdiv i64 %53, 2
  %55 = load i64, i64* %9, align 8
  %56 = call i64 @_Z6mpowerxxx(i64 %52, i64 %54, i64 %55)
  %57 = mul nsw i64 %51, %56
  %58 = load i64, i64* %9, align 8
  %59 = srem i64 %57, %58
  store i64 %59, i64* %6, align 8
  %60 = load i32, i32* @x.48
  %61 = load i32, i32* @y.49
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 838750459, i32 -1430513797
  store i32 %73, i32* %11
  br label %247

; <label>:74:                                     ; preds = %12
  store i32 -1767606530, i32* %11
  br label %247

; <label>:75:                                     ; preds = %12
  %76 = load i64, i64* %7, align 8
  %77 = load i64, i64* %8, align 8
  %78 = sub i64 0, 1
  %79 = add i64 %77, %78
  %80 = sub nsw i64 %77, 1
  %81 = load i64, i64* %9, align 8
  %82 = call i64 @_Z6mpowerxxx(i64 %76, i64 %79, i64 %81)
  %83 = load i64, i64* %7, align 8
  %84 = mul nsw i64 %82, %83
  %85 = load i64, i64* %9, align 8
  %86 = srem i64 %84, %85
  store i64 %86, i64* %6, align 8
  store i32 -1767606530, i32* %11
  br label %247

; <label>:87:                                     ; preds = %12
  %88 = load i32, i32* @x.48
  %89 = load i32, i32* @y.49
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 585050293, i32 1963942402
  store i32 %113, i32* %11
  br label %247

; <label>:114:                                    ; preds = %12
  %115 = load i64, i64* %6, align 8
  store i64 %115, i64* %4
  %116 = load i32, i32* @x.48
  %117 = load i32, i32* @y.49
  %118 = sub i32 %116, 1161528366
  %119 = sub i32 %118, 1
  %120 = add i32 %119, 1161528366
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 1716836439, i32 1963942402
  store i32 %142, i32* %11
  br label %247

; <label>:143:                                    ; preds = %12
  %144 = load volatile i64, i64* %4
  ret i64 %144

; <label>:145:                                    ; preds = %12
  %146 = load i64, i64* %7, align 8
  %147 = load i64, i64* %8, align 8
  %148 = sub i64 0, -2732290698780035781
  %149 = sub i64 %148, %147
  %150 = add i64 %149, -2732290698780035781
  %151 = sub i64 0, %147
  %152 = add i64 %150, 6717542728047090855
  %153 = add i64 %152, 2
  %154 = sub i64 %153, 6717542728047090855
  %155 = add i64 %150, 2
  %156 = add i64 %147, 4757815499528738436
  %157 = sub i64 %156, 2
  %158 = sub i64 %157, 4757815499528738436
  %159 = sub i64 %147, 2
  %160 = mul i64 %158, 2
  %161 = add i64 0, 1651677175468734940
  %162 = sub i64 %161, %147
  %163 = sub i64 %162, 1651677175468734940
  %164 = sub i64 0, %147
  %165 = sub i64 0, 2
  %166 = sub i64 %163, %165
  %167 = add i64 %163, 2
  %168 = sdiv i64 %147, 2
  %169 = load i64, i64* %9, align 8
  %170 = call i64 @_Z6mpowerxxx(i64 %146, i64 %168, i64 %169)
  %171 = load i64, i64* %7, align 8
  %172 = load i64, i64* %8, align 8
  %173 = sub i64 0, 2
  %174 = add i64 %172, %173
  %175 = sub i64 %172, 2
  %176 = mul i64 %174, 2
  %177 = shl i64 %172, 2
  %178 = shl i64 %172, 2
  %179 = add i64 %172, 8314063468441164039
  %180 = sub i64 %179, 2
  %181 = sub i64 %180, 8314063468441164039
  %182 = sub i64 %172, 2
  %183 = mul i64 %181, 2
  %184 = sub i64 0, %172
  %185 = add i64 0, %184
  %186 = sub i64 0, %172
  %187 = sub i64 %185, 5200878862179981537
  %188 = add i64 %187, 2
  %189 = add i64 %188, 5200878862179981537
  %190 = add i64 %185, 2
  %191 = shl i64 %172, 2
  %192 = sub i64 0, -4970776109761945890
  %193 = sub i64 %192, %172
  %194 = add i64 %193, -4970776109761945890
  %195 = sub i64 0, %172
  %196 = add i64 %194, -3704764706667977769
  %197 = add i64 %196, 2
  %198 = sub i64 %197, -3704764706667977769
  %199 = add i64 %194, 2
  %200 = sub i64 0, -2310309850134438533
  %201 = sub i64 %200, %172
  %202 = add i64 %201, -2310309850134438533
  %203 = sub i64 0, %172
  %204 = sub i64 0, %202
  %205 = sub i64 0, 2
  %206 = add i64 %204, %205
  %207 = sub i64 0, %206
  %208 = add i64 %202, 2
  %209 = sdiv i64 %172, 2
  %210 = load i64, i64* %9, align 8
  %211 = call i64 @_Z6mpowerxxx(i64 %171, i64 %209, i64 %210)
  %212 = shl i64 %170, %211
  %213 = add i64 %170, 5893714421448031725
  %214 = sub i64 %213, %211
  %215 = sub i64 %214, 5893714421448031725
  %216 = sub i64 %170, %211
  %217 = mul i64 %215, %211
  %218 = sub i64 0, %170
  %219 = add i64 0, %218
  %220 = sub i64 0, %170
  %221 = sub i64 %219, 4157226995841083740
  %222 = add i64 %221, %211
  %223 = add i64 %222, 4157226995841083740
  %224 = add i64 %219, %211
  %225 = add i64 0, -481420471992638047
  %226 = sub i64 %225, %170
  %227 = sub i64 %226, -481420471992638047
  %228 = sub i64 0, %170
  %229 = sub i64 0, %227
  %230 = sub i64 0, %211
  %231 = add i64 %229, %230
  %232 = sub i64 0, %231
  %233 = add i64 %227, %211
  %234 = shl i64 %170, %211
  %235 = mul nsw i64 %170, %211
  %236 = load i64, i64* %9, align 8
  %237 = add i64 0, -1233720170701213293
  %238 = sub i64 %237, %235
  %239 = sub i64 %238, -1233720170701213293
  %240 = sub i64 0, %235
  %241 = sub i64 0, %236
  %242 = sub i64 %239, %241
  %243 = add i64 %239, %236
  %244 = srem i64 %235, %236
  store i64 %244, i64* %6, align 8
  store i32 1653388770, i32* %11
  br label %247

; <label>:245:                                    ; preds = %12
  %246 = load i64, i64* %6, align 8
  store i32 585050293, i32* %11
  br label %247

; <label>:247:                                    ; preds = %245, %145, %114, %87, %75, %74, %46, %30, %25, %24, %20, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define i64 @_Z3GCDxx(i64, i64) #0 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.50
  %10 = load i32, i32* @y.51
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -306063996, i32* %18
  %19 = alloca i64
  br label %20

; <label>:20:                                     ; preds = %2, %146
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -306063996, label %23
    i32 206835480, label %43
    i32 -936847352, label %78
    i32 -888416023, label %81
    i32 1133239282, label %90
    i32 406324577, label %117
    i32 1440865513, label %134
    i32 -884078043, label %136
    i32 255900710, label %138
    i32 -251990559, label %143
  ]

; <label>:22:                                     ; preds = %20
  br label %146

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 206835480, i32 255900710
  store i32 %42, i32* %18
  br label %146

; <label>:43:                                     ; preds = %20
  %44 = alloca i64, align 8
  store i64* %44, i64** %6
  %45 = alloca i64, align 8
  store i64* %45, i64** %5
  %46 = load volatile i64*, i64** %6
  store i64 %0, i64* %46, align 8
  %47 = load volatile i64*, i64** %5
  store i64 %1, i64* %47, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.50
  %52 = load i32, i32* @y.51
  %53 = sub i32 %51, -530248407
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -530248407
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -936847352, i32 255900710
  store i32 %77, i32* %18
  br label %146

; <label>:78:                                     ; preds = %20
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 -888416023, i32 1133239282
  store i32 %80, i32* %18
  br label %146

; <label>:81:                                     ; preds = %20
  %82 = load volatile i64*, i64** %5
  %83 = load i64, i64* %82, align 8
  %84 = load volatile i64*, i64** %6
  %85 = load i64, i64* %84, align 8
  %86 = load volatile i64*, i64** %5
  %87 = load i64, i64* %86, align 8
  %88 = srem i64 %85, %87
  %89 = call i64 @_Z3GCDxx(i64 %83, i64 %88)
  store i32 -884078043, i32* %18
  store i64 %89, i64* %19
  br label %146

; <label>:90:                                     ; preds = %20
  %91 = load i32, i32* @x.50
  %92 = load i32, i32* @y.51
  %93 = sub i32 0, 1
  %94 = add i32 %91, %93
  %95 = sub i32 %91, 1
  %96 = mul i32 %91, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %92, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 406324577, i32 -251990559
  store i32 %116, i32* %18
  br label %146

; <label>:117:                                    ; preds = %20
  %118 = load volatile i64*, i64** %6
  %119 = load i64, i64* %118, align 8
  store i64 %119, i64* %3
  %120 = load i32, i32* @x.50
  %121 = load i32, i32* @y.51
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 1440865513, i32 -251990559
  store i32 %133, i32* %18
  br label %146

; <label>:134:                                    ; preds = %20
  store i32 -884078043, i32* %18
  %135 = load volatile i64, i64* %3
  store i64 %135, i64* %19
  br label %146

; <label>:136:                                    ; preds = %20
  %137 = load i64, i64* %19
  ret i64 %137

; <label>:138:                                    ; preds = %20
  %139 = alloca i64, align 8
  %140 = alloca i64, align 8
  store i64 %0, i64* %139, align 8
  store i64 %1, i64* %140, align 8
  %141 = load i64, i64* %140, align 8
  %142 = icmp ne i64 %141, 0
  store i32 206835480, i32* %18
  br label %146

; <label>:143:                                    ; preds = %20
  %144 = load volatile i64*, i64** %6
  %145 = load i64, i64* %144, align 8
  store i32 406324577, i32* %18
  br label %146

; <label>:146:                                    ; preds = %143, %138, %134, %117, %90, %81, %78, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define i64 @_Z3LCMxx(i64, i64) #0 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.52
  %7 = load i32, i32* @y.53
  %8 = sub i32 %6, 718407178
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 718407178
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2125596663, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %126
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2125596663, label %20
    i32 -356869222, label %40
    i32 1255138387, label %77
    i32 23794648, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %126

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -356869222, i32 23794648
  store i32 %39, i32* %16
  br label %126

; <label>:40:                                     ; preds = %17
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  store i64 %0, i64* %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load i64, i64* %41, align 8
  %44 = load i64, i64* %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = call i64 @_Z3GCDxx(i64 %44, i64 %45)
  %47 = sdiv i64 %43, %46
  %48 = load i64, i64* %42, align 8
  %49 = mul nsw i64 %47, %48
  store i64 %49, i64* %3
  %50 = load i32, i32* @x.52
  %51 = load i32, i32* @y.53
  %52 = add i32 %50, -844432192
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -844432192
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1255138387, i32 23794648
  store i32 %76, i32* %16
  br label %126

; <label>:77:                                     ; preds = %17
  %78 = load volatile i64, i64* %3
  ret i64 %78

; <label>:79:                                     ; preds = %17
  %80 = alloca i64, align 8
  %81 = alloca i64, align 8
  store i64 %0, i64* %80, align 8
  store i64 %1, i64* %81, align 8
  %82 = load i64, i64* %80, align 8
  %83 = load i64, i64* %80, align 8
  %84 = load i64, i64* %81, align 8
  %85 = call i64 @_Z3GCDxx(i64 %83, i64 %84)
  %86 = add i64 0, -2799985032071019405
  %87 = sub i64 %86, %82
  %88 = sub i64 %87, -2799985032071019405
  %89 = sub i64 0, %82
  %90 = add i64 %88, 7454978385821945782
  %91 = add i64 %90, %85
  %92 = sub i64 %91, 7454978385821945782
  %93 = add i64 %88, %85
  %94 = add i64 0, -1031221077649160959
  %95 = sub i64 %94, %82
  %96 = sub i64 %95, -1031221077649160959
  %97 = sub i64 0, %82
  %98 = add i64 %96, 920794118659609484
  %99 = add i64 %98, %85
  %100 = sub i64 %99, 920794118659609484
  %101 = add i64 %96, %85
  %102 = add i64 %82, -285642730282048934
  %103 = sub i64 %102, %85
  %104 = sub i64 %103, -285642730282048934
  %105 = sub i64 %82, %85
  %106 = mul i64 %104, %85
  %107 = sub i64 0, %82
  %108 = add i64 0, %107
  %109 = sub i64 0, %82
  %110 = sub i64 %108, 4448170104284773575
  %111 = add i64 %110, %85
  %112 = add i64 %111, 4448170104284773575
  %113 = add i64 %108, %85
  %114 = sub i64 %82, -2737070946304191428
  %115 = sub i64 %114, %85
  %116 = add i64 %115, -2737070946304191428
  %117 = sub i64 %82, %85
  %118 = mul i64 %116, %85
  %119 = shl i64 %82, %85
  %120 = sdiv i64 %82, %85
  %121 = load i64, i64* %81, align 8
  %122 = shl i64 %120, %121
  %123 = shl i64 %120, %121
  %124 = shl i64 %120, %121
  %125 = mul nsw i64 %120, %121
  store i32 -356869222, i32* %16
  br label %126

; <label>:126:                                    ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define void @_Z18PrimeFactorizationx(%"struct.std::pair"* noalias sret, i64) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i1, align 1
  %5 = alloca i64, align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i64, align 8
  store i64 %1, i64* %3, align 8
  store i1 false, i1* %4, align 1
  call void @_ZNSt4pairISt3mapIxxSt4lessIxESaIS_IKxxEEEbEC2Ev(%"struct.std::pair"* %0)
  %9 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i32 0, i32 1
  store i8 1, i8* %9, align 8
  %10 = load i64, i64* %3, align 8
  %11 = icmp ne i64 %10, 2
  br i1 %11, label %12, label %117

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.54
  %14 = load i32, i32* @y.55
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %14, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %304

; <label>:38:                                     ; preds = %12, %304
  %39 = load i32, i32* @x.54
  %40 = load i32, i32* @y.55
  %41 = sub i32 %39, 1780758741
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 1780758741
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %304

; <label>:65:                                     ; preds = %38
  br label %66

; <label>:66:                                     ; preds = %111, %65
  %67 = load i64, i64* %3, align 8
  %68 = srem i64 %67, 2
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %116

; <label>:70:                                     ; preds = %66
  %71 = load i64, i64* %3, align 8
  %72 = sdiv i64 %71, 2
  store i64 %72, i64* %3, align 8
  %73 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i32 0, i32 0
  store i64 2, i64* %5, align 8
  %74 = invoke dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixEOx(%"class.std::map"* %73, i64* dereferenceable(8) %5)
          to label %75 unwind label %112

; <label>:75:                                     ; preds = %70
  %76 = load i32, i32* @x.54
  %77 = load i32, i32* @y.55
  %78 = add i32 %76, 727226311
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, 727226311
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %305

; <label>:90:                                     ; preds = %75, %305
  %91 = load i64, i64* %74, align 8
  %92 = sub i64 %91, -3197191205289475227
  %93 = add i64 %92, 1
  %94 = add i64 %93, -3197191205289475227
  %95 = add nsw i64 %91, 1
  store i64 %94, i64* %74, align 8
  %96 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i32 0, i32 1
  store i8 0, i8* %96, align 8
  %97 = load i32, i32* @x.54
  %98 = load i32, i32* @y.55
  %99 = add i32 %97, -999082816
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, -999082816
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %305

; <label>:111:                                    ; preds = %90
  br label %66

; <label>:112:                                    ; preds = %245, %130, %70
  %113 = landingpad { i8*, i32 }
          cleanup
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %6, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %7, align 4
  call void @_ZNSt4pairISt3mapIxxSt4lessIxESaIS_IKxxEEEbED2Ev(%"struct.std::pair"* %0) #3
  br label %258

; <label>:116:                                    ; preds = %66
  br label %117

; <label>:117:                                    ; preds = %116, %2
  store i64 3, i64* %8, align 8
  br label %118

; <label>:118:                                    ; preds = %196, %117
  %119 = load i64, i64* %8, align 8
  %120 = load i64, i64* %8, align 8
  %121 = mul nsw i64 %119, %120
  %122 = load i64, i64* %3, align 8
  %123 = icmp sle i64 %121, %122
  br i1 %123, label %124, label %201

; <label>:124:                                    ; preds = %118
  br label %125

; <label>:125:                                    ; preds = %194, %124
  %126 = load i64, i64* %3, align 8
  %127 = load i64, i64* %8, align 8
  %128 = srem i64 %126, %127
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %195

; <label>:130:                                    ; preds = %125
  %131 = load i64, i64* %8, align 8
  %132 = load i64, i64* %3, align 8
  %133 = sdiv i64 %132, %131
  store i64 %133, i64* %3, align 8
  %134 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i32 0, i32 0
  %135 = invoke dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixERS3_(%"class.std::map"* %134, i64* dereferenceable(8) %8)
          to label %136 unwind label %112

; <label>:136:                                    ; preds = %130
  %137 = load i32, i32* @x.54
  %138 = load i32, i32* @y.55
  %139 = sub i32 0, 1
  %140 = add i32 %137, %139
  %141 = sub i32 %137, 1
  %142 = mul i32 %137, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %138, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 true, true
  %149 = and i1 %146, true
  %150 = and i1 %144, %148
  %151 = and i1 %147, true
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 true, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  br i1 %160, label %162, label %313

; <label>:162:                                    ; preds = %136, %313
  %163 = load i64, i64* %135, align 8
  %164 = sub i64 %163, 4238972965501290924
  %165 = add i64 %164, 1
  %166 = add i64 %165, 4238972965501290924
  %167 = add nsw i64 %163, 1
  store i64 %166, i64* %135, align 8
  %168 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i32 0, i32 1
  store i8 0, i8* %168, align 8
  %169 = load i32, i32* @x.54
  %170 = load i32, i32* @y.55
  %171 = sub i32 0, 1
  %172 = add i32 %169, %171
  %173 = sub i32 %169, 1
  %174 = mul i32 %169, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %170, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 false, true
  %181 = and i1 %178, false
  %182 = and i1 %176, %180
  %183 = and i1 %179, false
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 false, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  br i1 %192, label %194, label %313

; <label>:194:                                    ; preds = %162
  br label %125

; <label>:195:                                    ; preds = %125
  br label %196

; <label>:196:                                    ; preds = %195
  %197 = load i64, i64* %8, align 8
  %198 = sub i64 0, 2
  %199 = sub i64 %197, %198
  %200 = add nsw i64 %197, 2
  store i64 %199, i64* %8, align 8
  br label %118

; <label>:201:                                    ; preds = %118
  %202 = load i32, i32* @x.54
  %203 = load i32, i32* @y.55
  %204 = sub i32 0, 1
  %205 = add i32 %202, %204
  %206 = sub i32 %202, 1
  %207 = mul i32 %202, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %203, 10
  %211 = xor i1 %209, true
  %212 = xor i1 %210, true
  %213 = xor i1 true, true
  %214 = and i1 %211, true
  %215 = and i1 %209, %213
  %216 = and i1 %212, true
  %217 = and i1 %210, %213
  %218 = or i1 %214, %215
  %219 = or i1 %216, %217
  %220 = xor i1 %218, %219
  %221 = or i1 %211, %212
  %222 = xor i1 %221, true
  %223 = or i1 true, %213
  %224 = and i1 %222, %223
  %225 = or i1 %220, %224
  %226 = or i1 %209, %210
  br i1 %225, label %227, label %338

; <label>:227:                                    ; preds = %201, %338
  %228 = load i64, i64* %3, align 8
  %229 = icmp ne i64 %228, 1
  %230 = load i32, i32* @x.54
  %231 = load i32, i32* @y.55
  %232 = sub i32 %230, 2020622459
  %233 = sub i32 %232, 1
  %234 = add i32 %233, 2020622459
  %235 = sub i32 %230, 1
  %236 = mul i32 %230, %234
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %231, 10
  %240 = and i1 %238, %239
  %241 = xor i1 %238, %239
  %242 = or i1 %240, %241
  %243 = or i1 %238, %239
  br i1 %242, label %244, label %338

; <label>:244:                                    ; preds = %227
  br i1 %229, label %245, label %254

; <label>:245:                                    ; preds = %244
  %246 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i32 0, i32 0
  %247 = invoke dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixERS3_(%"class.std::map"* %246, i64* dereferenceable(8) %3)
          to label %248 unwind label %112

; <label>:248:                                    ; preds = %245
  %249 = load i64, i64* %247, align 8
  %250 = add i64 %249, -1756933911782201735
  %251 = add i64 %250, 1
  %252 = sub i64 %251, -1756933911782201735
  %253 = add nsw i64 %249, 1
  store i64 %252, i64* %247, align 8
  br label %254

; <label>:254:                                    ; preds = %248, %244
  store i1 true, i1* %4, align 1
  %255 = load i1, i1* %4, align 1
  br i1 %255, label %257, label %256

; <label>:256:                                    ; preds = %254
  call void @_ZNSt4pairISt3mapIxxSt4lessIxESaIS_IKxxEEEbED2Ev(%"struct.std::pair"* %0) #3
  br label %257

; <label>:257:                                    ; preds = %256, %254
  ret void

; <label>:258:                                    ; preds = %112
  %259 = load i32, i32* @x.54
  %260 = load i32, i32* @y.55
  %261 = sub i32 0, 1
  %262 = add i32 %259, %261
  %263 = sub i32 %259, 1
  %264 = mul i32 %259, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %260, 10
  %268 = xor i1 %266, true
  %269 = xor i1 %267, true
  %270 = xor i1 false, true
  %271 = and i1 %268, false
  %272 = and i1 %266, %270
  %273 = and i1 %269, false
  %274 = and i1 %267, %270
  %275 = or i1 %271, %272
  %276 = or i1 %273, %274
  %277 = xor i1 %275, %276
  %278 = or i1 %268, %269
  %279 = xor i1 %278, true
  %280 = or i1 false, %270
  %281 = and i1 %279, %280
  %282 = or i1 %277, %281
  %283 = or i1 %266, %267
  br i1 %282, label %284, label %341

; <label>:284:                                    ; preds = %258, %341
  %285 = load i8*, i8** %6, align 8
  %286 = load i32, i32* %7, align 4
  %287 = insertvalue { i8*, i32 } undef, i8* %285, 0
  %288 = insertvalue { i8*, i32 } %287, i32 %286, 1
  %289 = load i32, i32* @x.54
  %290 = load i32, i32* @y.55
  %291 = sub i32 %289, -1126800105
  %292 = sub i32 %291, 1
  %293 = add i32 %292, -1126800105
  %294 = sub i32 %289, 1
  %295 = mul i32 %289, %293
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %290, 10
  %299 = and i1 %297, %298
  %300 = xor i1 %297, %298
  %301 = or i1 %299, %300
  %302 = or i1 %297, %298
  br i1 %301, label %303, label %341

; <label>:303:                                    ; preds = %284
  resume { i8*, i32 } %288

; <label>:304:                                    ; preds = %38, %12
  br label %38

; <label>:305:                                    ; preds = %90, %75
  %306 = load i64, i64* %74, align 8
  %307 = shl i64 %306, 1
  %308 = add i64 %306, 9018692525499504720
  %309 = add i64 %308, 1
  %310 = sub i64 %309, 9018692525499504720
  %311 = add nsw i64 %306, 1
  store i64 %310, i64* %74, align 8
  %312 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i32 0, i32 1
  store i8 0, i8* %312, align 8
  br label %90

; <label>:313:                                    ; preds = %162, %136
  %314 = load i64, i64* %135, align 8
  %315 = shl i64 %314, 1
  %316 = shl i64 %314, 1
  %317 = add i64 0, -3074688519316174313
  %318 = sub i64 %317, %314
  %319 = sub i64 %318, -3074688519316174313
  %320 = sub i64 0, %314
  %321 = add i64 %319, -6035283555200372248
  %322 = add i64 %321, 1
  %323 = sub i64 %322, -6035283555200372248
  %324 = add i64 %319, 1
  %325 = shl i64 %314, 1
  %326 = add i64 0, 8698403416494067461
  %327 = sub i64 %326, %314
  %328 = sub i64 %327, 8698403416494067461
  %329 = sub i64 0, %314
  %330 = add i64 %328, 6107132885875706158
  %331 = add i64 %330, 1
  %332 = sub i64 %331, 6107132885875706158
  %333 = add i64 %328, 1
  %334 = sub i64 0, 1
  %335 = sub i64 %314, %334
  %336 = add nsw i64 %314, 1
  store i64 %335, i64* %135, align 8
  %337 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %0, i32 0, i32 1
  store i8 0, i8* %337, align 8
  br label %162

; <label>:338:                                    ; preds = %227, %201
  %339 = load i64, i64* %3, align 8
  %340 = icmp ne i64 %339, 1
  br label %227

; <label>:341:                                    ; preds = %284, %258
  %342 = load i8*, i8** %6, align 8
  %343 = load i32, i32* %7, align 4
  %344 = insertvalue { i8*, i32 } undef, i8* %342, 0
  %345 = insertvalue { i8*, i32 } %344, i32 %343, 1
  br label %284
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt3mapIxxSt4lessIxESaIS_IKxxEEEbEC2Ev(%"struct.std::pair"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i32 0, i32 0
  call void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEC2Ev(%"class.std::map"* %4) #3
  %5 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i32 0, i32 1
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixEOx(%"class.std::map"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::map"*
  %5 = alloca %"class.std::map"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %8 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %9 = alloca %"struct.std::less", align 1
  %10 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %11 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %12 = alloca %"class.std::tuple", align 8
  %13 = alloca %"class.std::tuple.31", align 1
  store %"class.std::map"* %0, %"class.std::map"** %5, align 8
  store i64* %1, i64** %6, align 8
  %14 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  store %"class.std::map"* %14, %"class.std::map"** %4
  %15 = load i64*, i64** %6, align 8
  %16 = load volatile %"class.std::map"*, %"class.std::map"** %4
  %17 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_(%"class.std::map"* %16, i64* dereferenceable(8) %15)
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %19 = load volatile %"class.std::map"*, %"class.std::map"** %4
  %20 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv(%"class.std::map"* %19) #3
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %8, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %22 = alloca i32
  store i32 -243886587, i32* %22
  %23 = alloca i1
  br label %24

; <label>:24:                                     ; preds = %2, %137
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -243886587, label %27
    i32 -1979971726, label %30
    i32 1223468824, label %36
    i32 -1326151048, label %52
    i32 419532159, label %68
    i32 -1498803034, label %71
    i32 791581232, label %87
    i32 -980695554, label %117
    i32 -1391053876, label %118
    i32 -1427472705, label %121
    i32 1567002873, label %122
  ]

; <label>:26:                                     ; preds = %24
  br label %137

; <label>:27:                                     ; preds = %24
  %28 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator.30"* %7, %"struct.std::_Rb_tree_iterator.30"* dereferenceable(8) %8) #3
  %29 = select i1 %28, i32 1223468824, i32 -1979971726
  store i32 %29, i32* %22
  store i1 true, i1* %23
  br label %137

; <label>:30:                                     ; preds = %24
  %31 = load volatile %"class.std::map"*, %"class.std::map"** %4
  call void @_ZNKSt3mapIxxSt4lessIxESaISt4pairIKxxEEE8key_compEv(%"class.std::map"* %31)
  %32 = load i64*, i64** %6, align 8
  %33 = call dereferenceable(16) %"struct.std::pair.27"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator.30"* %7) #3
  %34 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %33, i32 0, i32 0
  %35 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %9, i64* dereferenceable(8) %32, i64* dereferenceable(8) %34)
  store i32 1223468824, i32* %22
  store i1 %35, i1* %23
  br label %137

; <label>:36:                                     ; preds = %24
  %37 = load i1, i1* %23
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.58
  %39 = load i32, i32* @y.59
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -1326151048, i32 -1427472705
  store i32 %51, i32* %22
  br label %137

; <label>:52:                                     ; preds = %24
  %53 = load i32, i32* @x.58
  %54 = load i32, i32* @y.59
  %55 = add i32 %53, -120049338
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -120049338
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 419532159, i32 -1427472705
  store i32 %67, i32* %22
  br label %137

; <label>:68:                                     ; preds = %24
  %69 = load volatile i1, i1* %3
  %70 = select i1 %69, i32 -1498803034, i32 -1391053876
  store i32 %70, i32* %22
  br label %137

; <label>:71:                                     ; preds = %24
  %72 = load i32, i32* @x.58
  %73 = load i32, i32* @y.59
  %74 = sub i32 %72, 1592702429
  %75 = sub i32 %74, 1
  %76 = add i32 %75, 1592702429
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 791581232, i32 1567002873
  store i32 %86, i32* %22
  br label %137

; <label>:87:                                     ; preds = %24
  %88 = load volatile %"class.std::map"*, %"class.std::map"** %4
  %89 = getelementptr inbounds %"class.std::map", %"class.std::map"* %88, i32 0, i32 0
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator"* %11, %"struct.std::_Rb_tree_iterator.30"* dereferenceable(8) %7) #3
  %90 = load i64*, i64** %6, align 8
  %91 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %90) #3
  %92 = call i64* @_ZSt16forward_as_tupleIJxEESt5tupleIJDpOT_EES3_(i64* dereferenceable(8) %91) #3
  %93 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %12, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %94, i32 0, i32 0
  store i64* %92, i64** %95, align 8
  %96 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  %97 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %96, align 8
  %98 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"* %89, %"struct.std::_Rb_tree_node_base"* %97, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %12, %"class.std::tuple.31"* dereferenceable(1) %13)
  %99 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %98, %"struct.std::_Rb_tree_node_base"** %99, align 8
  %100 = bitcast %"struct.std::_Rb_tree_iterator.30"* %7 to i8*
  %101 = bitcast %"struct.std::_Rb_tree_iterator.30"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = load i32, i32* @x.58
  %103 = load i32, i32* @y.59
  %104 = sub i32 %102, -1624031795
  %105 = sub i32 %104, 1
  %106 = add i32 %105, -1624031795
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 -980695554, i32 1567002873
  store i32 %116, i32* %22
  br label %137

; <label>:117:                                    ; preds = %24
  store i32 -1391053876, i32* %22
  br label %137

; <label>:118:                                    ; preds = %24
  %119 = call dereferenceable(16) %"struct.std::pair.27"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator.30"* %7) #3
  %120 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %119, i32 0, i32 1
  ret i64* %120

; <label>:121:                                    ; preds = %24
  store i32 -1326151048, i32* %22
  br label %137

; <label>:122:                                    ; preds = %24
  %123 = load volatile %"class.std::map"*, %"class.std::map"** %4
  %124 = getelementptr inbounds %"class.std::map", %"class.std::map"* %123, i32 0, i32 0
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator"* %11, %"struct.std::_Rb_tree_iterator.30"* dereferenceable(8) %7) #3
  %125 = load i64*, i64** %6, align 8
  %126 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %125) #3
  %127 = call i64* @_ZSt16forward_as_tupleIJxEESt5tupleIJDpOT_EES3_(i64* dereferenceable(8) %126) #3
  %128 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %12, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %128, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %129, i32 0, i32 0
  store i64* %127, i64** %130, align 8
  %131 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  %132 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %131, align 8
  %133 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"* %124, %"struct.std::_Rb_tree_node_base"* %132, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %12, %"class.std::tuple.31"* dereferenceable(1) %13)
  %134 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %133, %"struct.std::_Rb_tree_node_base"** %134, align 8
  %135 = bitcast %"struct.std::_Rb_tree_iterator.30"* %7 to i8*
  %136 = bitcast %"struct.std::_Rb_tree_iterator.30"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %136, i64 8, i32 8, i1 false)
  store i32 791581232, i32* %22
  br label %137

; <label>:137:                                    ; preds = %122, %121, %117, %87, %71, %68, %52, %36, %30, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixERS3_(%"class.std::map"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca %"class.std::map"*
  %5 = alloca %"class.std::map"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %8 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %9 = alloca %"struct.std::less", align 1
  %10 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %11 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %12 = alloca %"class.std::tuple.34", align 8
  %13 = alloca %"class.std::tuple.31", align 1
  store %"class.std::map"* %0, %"class.std::map"** %5, align 8
  store i64* %1, i64** %6, align 8
  %14 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  store %"class.std::map"* %14, %"class.std::map"** %4
  %15 = load i64*, i64** %6, align 8
  %16 = load volatile %"class.std::map"*, %"class.std::map"** %4
  %17 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_(%"class.std::map"* %16, i64* dereferenceable(8) %15)
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %19 = load volatile %"class.std::map"*, %"class.std::map"** %4
  %20 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv(%"class.std::map"* %19) #3
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %8, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %22 = alloca i32
  store i32 1992960162, i32* %22
  %23 = alloca i1
  br label %24

; <label>:24:                                     ; preds = %2, %111
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 1992960162, label %27
    i32 -404006431, label %30
    i32 623634637, label %36
    i32 1116455415, label %39
    i32 1975696298, label %49
    i32 558810328, label %76
    i32 -482865998, label %106
    i32 1574684692, label %108
  ]

; <label>:26:                                     ; preds = %24
  br label %111

; <label>:27:                                     ; preds = %24
  %28 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator.30"* %7, %"struct.std::_Rb_tree_iterator.30"* dereferenceable(8) %8) #3
  %29 = select i1 %28, i32 623634637, i32 -404006431
  store i32 %29, i32* %22
  store i1 true, i1* %23
  br label %111

; <label>:30:                                     ; preds = %24
  %31 = load volatile %"class.std::map"*, %"class.std::map"** %4
  call void @_ZNKSt3mapIxxSt4lessIxESaISt4pairIKxxEEE8key_compEv(%"class.std::map"* %31)
  %32 = load i64*, i64** %6, align 8
  %33 = call dereferenceable(16) %"struct.std::pair.27"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator.30"* %7) #3
  %34 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %33, i32 0, i32 0
  %35 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %9, i64* dereferenceable(8) %32, i64* dereferenceable(8) %34)
  store i32 623634637, i32* %22
  store i1 %35, i1* %23
  br label %111

; <label>:36:                                     ; preds = %24
  %37 = load i1, i1* %23
  %38 = select i1 %37, i32 1116455415, i32 1975696298
  store i32 %38, i32* %22
  br label %111

; <label>:39:                                     ; preds = %24
  %40 = load volatile %"class.std::map"*, %"class.std::map"** %4
  %41 = getelementptr inbounds %"class.std::map", %"class.std::map"* %40, i32 0, i32 0
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator"* %11, %"struct.std::_Rb_tree_iterator.30"* dereferenceable(8) %7) #3
  %42 = load i64*, i64** %6, align 8
  call void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple.34"* %12, i64* dereferenceable(8) %42)
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"* %41, %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple.34"* dereferenceable(8) %12, %"class.std::tuple.31"* dereferenceable(1) %13)
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %46, align 8
  %47 = bitcast %"struct.std::_Rb_tree_iterator.30"* %7 to i8*
  %48 = bitcast %"struct.std::_Rb_tree_iterator.30"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  store i32 1975696298, i32* %22
  br label %111

; <label>:49:                                     ; preds = %24
  %50 = load i32, i32* @x.60
  %51 = load i32, i32* @y.61
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 558810328, i32 1574684692
  store i32 %75, i32* %22
  br label %111

; <label>:76:                                     ; preds = %24
  %77 = call dereferenceable(16) %"struct.std::pair.27"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator.30"* %7) #3
  %78 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %77, i32 0, i32 1
  store i64* %78, i64** %3
  %79 = load i32, i32* @x.60
  %80 = load i32, i32* @y.61
  %81 = sub i32 %79, -170729739
  %82 = sub i32 %81, 1
  %83 = add i32 %82, -170729739
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  %105 = select i1 %103, i32 -482865998, i32 1574684692
  store i32 %105, i32* %22
  br label %111

; <label>:106:                                    ; preds = %24
  %107 = load volatile i64*, i64** %3
  ret i64* %107

; <label>:108:                                    ; preds = %24
  %109 = call dereferenceable(16) %"struct.std::pair.27"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator.30"* %7) #3
  %110 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %109, i32 0, i32 1
  store i32 558810328, i32* %22
  br label %111

; <label>:111:                                    ; preds = %108, %76, %49, %39, %36, %30, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt3mapIxxSt4lessIxESaIS_IKxxEEEbED2Ev(%"struct.std::pair"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %3, i32 0, i32 0
  call void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev(%"class.std::map"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @_Z17compare_by_secondSt4pairIxxES0_(i64, i64, i64, i64) #4 {
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"struct.std::pair.8", align 8
  %9 = alloca %"struct.std::pair.8", align 8
  %10 = bitcast %"struct.std::pair.8"* %8 to { i64, i64 }*
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %1, i64* %12, align 8
  %13 = bitcast %"struct.std::pair.8"* %9 to { i64, i64 }*
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0
  store i64 %2, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.std::pair.8", %"struct.std::pair.8"* %8, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %7
  %18 = getelementptr inbounds %"struct.std::pair.8", %"struct.std::pair.8"* %9, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %6
  %20 = alloca i32
  store i32 -774458221, i32* %20
  %21 = alloca i1
  br label %22

; <label>:22:                                     ; preds = %4, %106
  %23 = load i32, i32* %20
  switch i32 %23, label %24 [
    i32 -774458221, label %25
    i32 1738470851, label %30
    i32 561253114, label %36
    i32 -15088313, label %63
    i32 -1742049344, label %96
    i32 -956175326, label %98
    i32 -1205597501, label %100
  ]

; <label>:24:                                     ; preds = %22
  br label %106

; <label>:25:                                     ; preds = %22
  %26 = load volatile i64, i64* %7
  %27 = load volatile i64, i64* %6
  %28 = icmp ne i64 %26, %27
  %29 = select i1 %28, i32 1738470851, i32 561253114
  store i32 %29, i32* %20
  br label %106

; <label>:30:                                     ; preds = %22
  %31 = getelementptr inbounds %"struct.std::pair.8", %"struct.std::pair.8"* %8, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.std::pair.8", %"struct.std::pair.8"* %9, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp slt i64 %32, %34
  store i32 -956175326, i32* %20
  store i1 %35, i1* %21
  br label %106

; <label>:36:                                     ; preds = %22
  %37 = load i32, i32* @x.64
  %38 = load i32, i32* @y.65
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -15088313, i32 -1205597501
  store i32 %62, i32* %20
  br label %106

; <label>:63:                                     ; preds = %22
  %64 = getelementptr inbounds %"struct.std::pair.8", %"struct.std::pair.8"* %8, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.std::pair.8", %"struct.std::pair.8"* %9, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp slt i64 %65, %67
  store i1 %68, i1* %5
  %69 = load i32, i32* @x.64
  %70 = load i32, i32* @y.65
  %71 = add i32 %69, 1689697755
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, 1689697755
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 false, true
  %82 = and i1 %79, false
  %83 = and i1 %77, %81
  %84 = and i1 %80, false
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 false, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 -1742049344, i32 -1205597501
  store i32 %95, i32* %20
  br label %106

; <label>:96:                                     ; preds = %22
  store i32 -956175326, i32* %20
  %97 = load volatile i1, i1* %5
  store i1 %97, i1* %21
  br label %106

; <label>:98:                                     ; preds = %22
  %99 = load i1, i1* %21
  ret i1 %99

; <label>:100:                                    ; preds = %22
  %101 = getelementptr inbounds %"struct.std::pair.8", %"struct.std::pair.8"* %8, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.std::pair.8", %"struct.std::pair.8"* %9, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = icmp slt i64 %102, %104
  store i32 -15088313, i32* %20
  br label %106

; <label>:106:                                    ; preds = %100, %96, %63, %36, %30, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define void @_ZN9UnionFindC2Ei(%class.UnionFind*, i32) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.UnionFind*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::allocator.11", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::allocator.11", align 1
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::allocator.11", align 1
  %12 = alloca i32, align 4
  store %class.UnionFind* %0, %class.UnionFind** %3, align 8
  store i32 %1, i32* %4, align 4
  %13 = load %class.UnionFind*, %class.UnionFind** %3, align 8
  %14 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %13, i32 0, i32 0
  %15 = load i32, i32* %4, align 4
  %16 = sext i32 %15 to i64
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.11"* %5) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(%"class.std::vector.9"* %14, i64 %16, %"class.std::allocator.11"* dereferenceable(1) %5)
          to label %17 unwind label %94

; <label>:17:                                     ; preds = %2
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %5) #3
  %18 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %13, i32 0, i32 1
  %19 = load i32, i32* %4, align 4
  %20 = sext i32 %19 to i64
  store i32 1, i32* %8, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.11"* %9) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.9"* %18, i64 %20, i32* dereferenceable(4) %8, %"class.std::allocator.11"* dereferenceable(1) %9)
          to label %21 unwind label %98

; <label>:21:                                     ; preds = %17
  %22 = load i32, i32* @x.66
  %23 = load i32, i32* @y.67
  %24 = add i32 %22, -143755771
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -143755771
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %207

; <label>:48:                                     ; preds = %21, %207
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %9) #3
  %49 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %13, i32 0, i32 2
  %50 = load i32, i32* %4, align 4
  %51 = sext i32 %50 to i64
  store i32 1, i32* %10, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.11"* %11) #3
  %52 = load i32, i32* @x.66
  %53 = load i32, i32* @y.67
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %207

; <label>:77:                                     ; preds = %48
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.9"* %49, i64 %51, i32* dereferenceable(4) %10, %"class.std::allocator.11"* dereferenceable(1) %11)
          to label %78 unwind label %102

; <label>:78:                                     ; preds = %77
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %11) #3
  store i32 0, i32* %12, align 4
  br label %79

; <label>:79:                                     ; preds = %89, %78
  %80 = load i32, i32* %12, align 4
  %81 = load i32, i32* %4, align 4
  %82 = icmp slt i32 %80, %81
  br i1 %82, label %83, label %106

; <label>:83:                                     ; preds = %79
  %84 = load i32, i32* %12, align 4
  %85 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %13, i32 0, i32 0
  %86 = load i32, i32* %12, align 4
  %87 = sext i32 %86 to i64
  %88 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %85, i64 %87) #3
  store i32 %84, i32* %88, align 4
  br label %89

; <label>:89:                                     ; preds = %83
  %90 = load i32, i32* %12, align 4
  %91 = sub i32 0, 1
  %92 = sub i32 %90, %91
  %93 = add nsw i32 %90, 1
  store i32 %92, i32* %12, align 4
  br label %79

; <label>:94:                                     ; preds = %2
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %6, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %7, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %5) #3
  br label %149

; <label>:98:                                     ; preds = %17
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %6, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %7, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %9) #3
  br label %107

; <label>:102:                                    ; preds = %77
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %6, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %7, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %11) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.9"* %18) #3
  br label %107

; <label>:106:                                    ; preds = %79
  ret void

; <label>:107:                                    ; preds = %102, %98
  %108 = load i32, i32* @x.66
  %109 = load i32, i32* @y.67
  %110 = sub i32 0, 1
  %111 = add i32 %108, %110
  %112 = sub i32 %108, 1
  %113 = mul i32 %108, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %109, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %211

; <label>:121:                                    ; preds = %107, %211
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.9"* %14) #3
  %122 = load i32, i32* @x.66
  %123 = load i32, i32* @y.67
  %124 = add i32 %122, -932547239
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, -932547239
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  br i1 %146, label %148, label %211

; <label>:148:                                    ; preds = %121
  br label %149

; <label>:149:                                    ; preds = %148, %94
  %150 = load i32, i32* @x.66
  %151 = load i32, i32* @y.67
  %152 = add i32 %150, -1331179248
  %153 = sub i32 %152, 1
  %154 = sub i32 %153, -1331179248
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = xor i1 %158, true
  %161 = xor i1 %159, true
  %162 = xor i1 true, true
  %163 = and i1 %160, true
  %164 = and i1 %158, %162
  %165 = and i1 %161, true
  %166 = and i1 %159, %162
  %167 = or i1 %163, %164
  %168 = or i1 %165, %166
  %169 = xor i1 %167, %168
  %170 = or i1 %160, %161
  %171 = xor i1 %170, true
  %172 = or i1 true, %162
  %173 = and i1 %171, %172
  %174 = or i1 %169, %173
  %175 = or i1 %158, %159
  br i1 %174, label %176, label %212

; <label>:176:                                    ; preds = %149, %212
  %177 = load i8*, i8** %6, align 8
  %178 = load i32, i32* %7, align 4
  %179 = insertvalue { i8*, i32 } undef, i8* %177, 0
  %180 = insertvalue { i8*, i32 } %179, i32 %178, 1
  %181 = load i32, i32* @x.66
  %182 = load i32, i32* @y.67
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %212

; <label>:206:                                    ; preds = %176
  resume { i8*, i32 } %180

; <label>:207:                                    ; preds = %48, %21
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %9) #3
  %208 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %13, i32 0, i32 2
  %209 = load i32, i32* %4, align 4
  %210 = sext i32 %209 to i64
  store i32 1, i32* %10, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.11"* %11) #3
  br label %48

; <label>:211:                                    ; preds = %121, %107
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.9"* %14) #3
  br label %121

; <label>:212:                                    ; preds = %176, %149
  %213 = load i8*, i8** %6, align 8
  %214 = load i32, i32* %7, align 4
  %215 = insertvalue { i8*, i32 } undef, i8* %213, 0
  %216 = insertvalue { i8*, i32 } %215, i32 %214, 1
  br label %176
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.11"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.68
  %5 = load i32, i32* @y.69
  %6 = add i32 %4, -530389438
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -530389438
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 269814018, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 269814018, label %18
    i32 -270272829, label %38
    i32 -109014223, label %56
    i32 1197920481, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -270272829, i32 1197920481
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.11"*, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %39, align 8
  %40 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %39, align 8
  %41 = bitcast %"class.std::allocator.11"* %40 to %"class.__gnu_cxx::new_allocator.12"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.12"* %41) #3
  %42 = load i32, i32* @x.68
  %43 = load i32, i32* @y.69
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -109014223, i32 1197920481
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.11"*, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %58, align 8
  %59 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %58, align 8
  %60 = bitcast %"class.std::allocator.11"* %59 to %"class.__gnu_cxx::new_allocator.12"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.12"* %60) #3
  store i32 -270272829, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(%"class.std::vector.9"*, i64, %"class.std::allocator.11"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.70
  %5 = load i32, i32* @y.71
  %6 = add i32 %4, -420782652
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -420782652
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %67

; <label>:30:                                     ; preds = %3, %67
  %31 = alloca %"class.std::vector.9"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::allocator.11"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::allocator.11"* %2, %"class.std::allocator.11"** %33, align 8
  %36 = load %"class.std::vector.9"*, %"class.std::vector.9"** %31, align 8
  %37 = bitcast %"class.std::vector.9"* %36 to %"struct.std::_Vector_base.10"*
  %38 = load i64, i64* %32, align 8
  %39 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %33, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.10"* %37, i64 %38, %"class.std::allocator.11"* dereferenceable(1) %39)
  %40 = load i64, i64* %32, align 8
  %41 = load i32, i32* @x.70
  %42 = load i32, i32* @y.71
  %43 = sub i32 %41, 1404774596
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1404774596
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %67

; <label>:55:                                     ; preds = %30
  invoke void @_ZNSt6vectorIiSaIiEE21_M_default_initializeEm(%"class.std::vector.9"* %36, i64 %40)
          to label %56 unwind label %57

; <label>:56:                                     ; preds = %55
  ret void

; <label>:57:                                     ; preds = %55
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %34, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %35, align 4
  %61 = bitcast %"class.std::vector.9"* %36 to %"struct.std::_Vector_base.10"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.10"* %61) #3
  br label %62

; <label>:62:                                     ; preds = %57
  %63 = load i8*, i8** %34, align 8
  %64 = load i32, i32* %35, align 4
  %65 = insertvalue { i8*, i32 } undef, i8* %63, 0
  %66 = insertvalue { i8*, i32 } %65, i32 %64, 1
  resume { i8*, i32 } %66

; <label>:67:                                     ; preds = %30, %3
  %68 = alloca %"class.std::vector.9"*, align 8
  %69 = alloca i64, align 8
  %70 = alloca %"class.std::allocator.11"*, align 8
  %71 = alloca i8*
  %72 = alloca i32
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %68, align 8
  store i64 %1, i64* %69, align 8
  store %"class.std::allocator.11"* %2, %"class.std::allocator.11"** %70, align 8
  %73 = load %"class.std::vector.9"*, %"class.std::vector.9"** %68, align 8
  %74 = bitcast %"class.std::vector.9"* %73 to %"struct.std::_Vector_base.10"*
  %75 = load i64, i64* %69, align 8
  %76 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %70, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.10"* %74, i64 %75, %"class.std::allocator.11"* dereferenceable(1) %76)
  %77 = load i64, i64* %69, align 8
  br label %30
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.11"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.11"*, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %2, align 8
  %3 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %2, align 8
  %4 = bitcast %"class.std::allocator.11"* %3 to %"class.__gnu_cxx::new_allocator.12"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.12"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.9"*, i64, i32* dereferenceable(4), %"class.std::allocator.11"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.9"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.11"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.11"* %3, %"class.std::allocator.11"** %8, align 8
  %11 = load %"class.std::vector.9"*, %"class.std::vector.9"** %5, align 8
  %12 = bitcast %"class.std::vector.9"* %11 to %"struct.std::_Vector_base.10"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %8, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.10"* %12, i64 %13, %"class.std::allocator.11"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.9"* %11, i64 %15, i32* dereferenceable(4) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* @x.74
  %20 = load i32, i32* @y.75
  %21 = add i32 %19, -1867230529
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -1867230529
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %70

; <label>:45:                                     ; preds = %18, %70
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %9, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %10, align 4
  %49 = bitcast %"class.std::vector.9"* %11 to %"struct.std::_Vector_base.10"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.10"* %49) #3
  %50 = load i32, i32* @x.74
  %51 = load i32, i32* @y.75
  %52 = sub i32 %50, 1247234958
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1247234958
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %70

; <label>:64:                                     ; preds = %45
  br label %65

; <label>:65:                                     ; preds = %64
  %66 = load i8*, i8** %9, align 8
  %67 = load i32, i32* %10, align 4
  %68 = insertvalue { i8*, i32 } undef, i8* %66, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  resume { i8*, i32 } %69

; <label>:70:                                     ; preds = %45, %18
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %9, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %10, align 4
  %74 = bitcast %"class.std::vector.9"* %11 to %"struct.std::_Vector_base.10"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.10"* %74) #3
  br label %45
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.9"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.9"*, %"class.std::vector.9"** %3, align 8
  %6 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.9"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.9"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %2, align 8
  %5 = load %"class.std::vector.9"*, %"class.std::vector.9"** %2, align 8
  %6 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  %15 = call dereferenceable(1) %"class.std::allocator.11"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.10"* %14) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %9, i32* %13, %"class.std::allocator.11"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.10"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.9"* %5 to %"struct.std::_Vector_base.10"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.10"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline uwtable
define i32 @_ZN9UnionFind4rootEi(%class.UnionFind*, i32) #0 align 2 {
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca %class.UnionFind*
  %6 = alloca i32, align 4
  %7 = alloca %class.UnionFind*, align 8
  %8 = alloca i32, align 4
  store %class.UnionFind* %0, %class.UnionFind** %7, align 8
  store i32 %1, i32* %8, align 4
  %9 = load %class.UnionFind*, %class.UnionFind** %7, align 8
  store %class.UnionFind* %9, %class.UnionFind** %5
  %10 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %11 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %10, i32 0, i32 0
  %12 = load i32, i32* %8, align 4
  %13 = sext i32 %12 to i64
  %14 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %11, i64 %13) #3
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %4
  %16 = load i32, i32* %8, align 4
  store i32 %16, i32* %3
  %17 = alloca i32
  store i32 -1844264481, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1844264481, label %21
    i32 2143823234, label %26
    i32 -2115396735, label %53
    i32 4626525, label %82
    i32 -60754261, label %83
    i32 -1153434679, label %92
    i32 741526529, label %94
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i32, i32* %4
  %23 = load volatile i32, i32* %3
  %24 = icmp eq i32 %22, %23
  %25 = select i1 %24, i32 2143823234, i32 -60754261
  store i32 %25, i32* %17
  br label %96

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @x.80
  %28 = load i32, i32* @y.81
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -2115396735, i32 741526529
  store i32 %52, i32* %17
  br label %96

; <label>:53:                                     ; preds = %18
  %54 = load i32, i32* %8, align 4
  store i32 %54, i32* %6, align 4
  %55 = load i32, i32* @x.80
  %56 = load i32, i32* @y.81
  %57 = add i32 %55, -1766573367
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -1766573367
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 4626525, i32 741526529
  store i32 %81, i32* %17
  br label %96

; <label>:82:                                     ; preds = %18
  store i32 -1153434679, i32* %17
  br label %96

; <label>:83:                                     ; preds = %18
  %84 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %85 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %84, i32 0, i32 0
  %86 = load i32, i32* %8, align 4
  %87 = sext i32 %86 to i64
  %88 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %85, i64 %87) #3
  %89 = load i32, i32* %88, align 4
  %90 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %91 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %90, i32 %89)
  store i32 %91, i32* %6, align 4
  store i32 -1153434679, i32* %17
  br label %96

; <label>:92:                                     ; preds = %18
  %93 = load i32, i32* %6, align 4
  ret i32 %93

; <label>:94:                                     ; preds = %18
  %95 = load i32, i32* %8, align 4
  store i32 %95, i32* %6, align 4
  store i32 -2115396735, i32* %17
  br label %96

; <label>:96:                                     ; preds = %94, %83, %82, %53, %26, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define void @_ZN9UnionFind5uniteEii(%class.UnionFind*, i32, i32) #0 align 2 {
  %4 = alloca i1
  %5 = alloca %class.UnionFind*
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca i32*
  %9 = alloca i32*
  %10 = alloca i32*
  %11 = alloca i32*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.82
  %15 = load i32, i32* @y.83
  %16 = add i32 %14, 74151335
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 74151335
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 -1732385208, i32* %24
  br label %25

; <label>:25:                                     ; preds = %3, %305
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 -1732385208, label %28
    i32 9959691, label %36
    i32 -16041079, label %77
    i32 357176612, label %80
    i32 -1625095233, label %81
    i32 -776746975, label %153
    i32 -1536711138, label %181
    i32 1316603067, label %216
    i32 -1274340571, label %217
    i32 -97302089, label %238
    i32 -1355870595, label %253
    i32 1005985640, label %268
    i32 -1437552657, label %269
    i32 -1512023603, label %285
    i32 604373523, label %304
  ]

; <label>:27:                                     ; preds = %25
  br label %305

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 9959691, i32 -1437552657
  store i32 %35, i32* %24
  br label %305

; <label>:36:                                     ; preds = %25
  %37 = alloca %class.UnionFind*, align 8
  %38 = alloca i32, align 4
  store i32* %38, i32** %11
  %39 = alloca i32, align 4
  store i32* %39, i32** %10
  %40 = alloca i32, align 4
  store i32* %40, i32** %9
  %41 = alloca i32, align 4
  store i32* %41, i32** %8
  %42 = alloca i64, align 8
  store i64* %42, i64** %7
  %43 = alloca i64, align 8
  store i64* %43, i64** %6
  store %class.UnionFind* %0, %class.UnionFind** %37, align 8
  %44 = load volatile i32*, i32** %11
  store i32 %1, i32* %44, align 4
  %45 = load volatile i32*, i32** %10
  store i32 %2, i32* %45, align 4
  %46 = load %class.UnionFind*, %class.UnionFind** %37, align 8
  store %class.UnionFind* %46, %class.UnionFind** %5
  %47 = load volatile i32*, i32** %11
  %48 = load i32, i32* %47, align 4
  %49 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %50 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %49, i32 %48)
  %51 = load volatile i32*, i32** %9
  store i32 %50, i32* %51, align 4
  %52 = load volatile i32*, i32** %10
  %53 = load i32, i32* %52, align 4
  %54 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %55 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %54, i32 %53)
  %56 = load volatile i32*, i32** %8
  store i32 %55, i32* %56, align 4
  %57 = load volatile i32*, i32** %9
  %58 = load i32, i32* %57, align 4
  %59 = load volatile i32*, i32** %8
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  store i1 %61, i1* %4
  %62 = load i32, i32* @x.82
  %63 = load i32, i32* @y.83
  %64 = sub i32 %62, 1557581869
  %65 = sub i32 %64, 1
  %66 = add i32 %65, 1557581869
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 -16041079, i32 -1437552657
  store i32 %76, i32* %24
  br label %305

; <label>:77:                                     ; preds = %25
  %78 = load volatile i1, i1* %4
  %79 = select i1 %78, i32 357176612, i32 -1625095233
  store i32 %79, i32* %24
  br label %305

; <label>:80:                                     ; preds = %25
  store i32 -97302089, i32* %24
  br label %305

; <label>:81:                                     ; preds = %25
  %82 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %83 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %82, i32 0, i32 2
  %84 = load volatile i32*, i32** %11
  %85 = load i32, i32* %84, align 4
  %86 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %87 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %86, i32 %85)
  %88 = sext i32 %87 to i64
  %89 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %83, i64 %88) #3
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = load volatile i64*, i64** %7
  store i64 %91, i64* %92, align 8
  %93 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %94 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %93, i32 0, i32 2
  %95 = load volatile i32*, i32** %10
  %96 = load i32, i32* %95, align 4
  %97 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %98 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %97, i32 %96)
  %99 = sext i32 %98 to i64
  %100 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %94, i64 %99) #3
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = load volatile i64*, i64** %6
  store i64 %102, i64* %103, align 8
  %104 = load volatile i64*, i64** %6
  %105 = load i64, i64* %104, align 8
  %106 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %107 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %106, i32 0, i32 2
  %108 = load volatile i32*, i32** %11
  %109 = load i32, i32* %108, align 4
  %110 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %111 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %110, i32 %109)
  %112 = sext i32 %111 to i64
  %113 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %107, i64 %112) #3
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = sub i64 0, %105
  %117 = sub i64 %115, %116
  %118 = add nsw i64 %115, %105
  %119 = trunc i64 %117 to i32
  store i32 %119, i32* %113, align 4
  %120 = load volatile i64*, i64** %7
  %121 = load i64, i64* %120, align 8
  %122 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %123 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %122, i32 0, i32 2
  %124 = load volatile i32*, i32** %10
  %125 = load i32, i32* %124, align 4
  %126 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %127 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %126, i32 %125)
  %128 = sext i32 %127 to i64
  %129 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %123, i64 %128) #3
  %130 = load i32, i32* %129, align 4
  %131 = sext i32 %130 to i64
  %132 = add i64 %131, 1401463682732440837
  %133 = add i64 %132, %121
  %134 = sub i64 %133, 1401463682732440837
  %135 = add nsw i64 %131, %121
  %136 = trunc i64 %134 to i32
  store i32 %136, i32* %129, align 4
  %137 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %138 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %137, i32 0, i32 1
  %139 = load volatile i32*, i32** %11
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  %142 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %138, i64 %141) #3
  %143 = load i32, i32* %142, align 4
  %144 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %145 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %144, i32 0, i32 1
  %146 = load volatile i32*, i32** %10
  %147 = load i32, i32* %146, align 4
  %148 = sext i32 %147 to i64
  %149 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %145, i64 %148) #3
  %150 = load i32, i32* %149, align 4
  %151 = icmp sge i32 %143, %150
  %152 = select i1 %151, i32 -776746975, i32 -1274340571
  store i32 %152, i32* %24
  br label %305

; <label>:153:                                    ; preds = %25
  %154 = load i32, i32* @x.82
  %155 = load i32, i32* @y.83
  %156 = add i32 %154, 817218496
  %157 = sub i32 %156, 1
  %158 = sub i32 %157, 817218496
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 false, true
  %167 = and i1 %164, false
  %168 = and i1 %162, %166
  %169 = and i1 %165, false
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 false, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  %180 = select i1 %178, i32 -1536711138, i32 -1512023603
  store i32 %180, i32* %24
  br label %305

; <label>:181:                                    ; preds = %25
  %182 = load volatile i32*, i32** %9
  %183 = load i32, i32* %182, align 4
  %184 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %185 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %184, i32 0, i32 0
  %186 = load volatile i32*, i32** %8
  %187 = load i32, i32* %186, align 4
  %188 = sext i32 %187 to i64
  %189 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %185, i64 %188) #3
  store i32 %183, i32* %189, align 4
  %190 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %191 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %190, i32 0, i32 1
  %192 = load volatile i32*, i32** %10
  %193 = load i32, i32* %192, align 4
  %194 = sext i32 %193 to i64
  %195 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %191, i64 %194) #3
  %196 = load i32, i32* %195, align 4
  %197 = add i32 %196, 1460953879
  %198 = add i32 %197, 1
  %199 = sub i32 %198, 1460953879
  %200 = add nsw i32 %196, 1
  store i32 %199, i32* %195, align 4
  %201 = load i32, i32* @x.82
  %202 = load i32, i32* @y.83
  %203 = add i32 %201, -63670155
  %204 = sub i32 %203, 1
  %205 = sub i32 %204, -63670155
  %206 = sub i32 %201, 1
  %207 = mul i32 %201, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %202, 10
  %211 = and i1 %209, %210
  %212 = xor i1 %209, %210
  %213 = or i1 %211, %212
  %214 = or i1 %209, %210
  %215 = select i1 %213, i32 1316603067, i32 -1512023603
  store i32 %215, i32* %24
  br label %305

; <label>:216:                                    ; preds = %25
  store i32 -97302089, i32* %24
  br label %305

; <label>:217:                                    ; preds = %25
  %218 = load volatile i32*, i32** %8
  %219 = load i32, i32* %218, align 4
  %220 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %221 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %220, i32 0, i32 0
  %222 = load volatile i32*, i32** %9
  %223 = load i32, i32* %222, align 4
  %224 = sext i32 %223 to i64
  %225 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %221, i64 %224) #3
  store i32 %219, i32* %225, align 4
  %226 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %227 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %226, i32 0, i32 1
  %228 = load volatile i32*, i32** %11
  %229 = load i32, i32* %228, align 4
  %230 = sext i32 %229 to i64
  %231 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %227, i64 %230) #3
  %232 = load i32, i32* %231, align 4
  %233 = sub i32 0, %232
  %234 = sub i32 0, 1
  %235 = add i32 %233, %234
  %236 = sub i32 0, %235
  %237 = add nsw i32 %232, 1
  store i32 %236, i32* %231, align 4
  store i32 -97302089, i32* %24
  br label %305

; <label>:238:                                    ; preds = %25
  %239 = load i32, i32* @x.82
  %240 = load i32, i32* @y.83
  %241 = sub i32 0, 1
  %242 = add i32 %239, %241
  %243 = sub i32 %239, 1
  %244 = mul i32 %239, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %240, 10
  %248 = and i1 %246, %247
  %249 = xor i1 %246, %247
  %250 = or i1 %248, %249
  %251 = or i1 %246, %247
  %252 = select i1 %250, i32 -1355870595, i32 604373523
  store i32 %252, i32* %24
  br label %305

; <label>:253:                                    ; preds = %25
  %254 = load i32, i32* @x.82
  %255 = load i32, i32* @y.83
  %256 = sub i32 0, 1
  %257 = add i32 %254, %256
  %258 = sub i32 %254, 1
  %259 = mul i32 %254, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %255, 10
  %263 = and i1 %261, %262
  %264 = xor i1 %261, %262
  %265 = or i1 %263, %264
  %266 = or i1 %261, %262
  %267 = select i1 %265, i32 1005985640, i32 604373523
  store i32 %267, i32* %24
  br label %305

; <label>:268:                                    ; preds = %25
  ret void

; <label>:269:                                    ; preds = %25
  %270 = alloca %class.UnionFind*, align 8
  %271 = alloca i32, align 4
  %272 = alloca i32, align 4
  %273 = alloca i32, align 4
  %274 = alloca i32, align 4
  %275 = alloca i64, align 8
  %276 = alloca i64, align 8
  store %class.UnionFind* %0, %class.UnionFind** %270, align 8
  store i32 %1, i32* %271, align 4
  store i32 %2, i32* %272, align 4
  %277 = load %class.UnionFind*, %class.UnionFind** %270, align 8
  %278 = load i32, i32* %271, align 4
  %279 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %277, i32 %278)
  store i32 %279, i32* %273, align 4
  %280 = load i32, i32* %272, align 4
  %281 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %277, i32 %280)
  store i32 %281, i32* %274, align 4
  %282 = load i32, i32* %273, align 4
  %283 = load i32, i32* %274, align 4
  %284 = icmp eq i32 %282, %283
  store i32 9959691, i32* %24
  br label %305

; <label>:285:                                    ; preds = %25
  %286 = load volatile i32*, i32** %9
  %287 = load i32, i32* %286, align 4
  %288 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %289 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %288, i32 0, i32 0
  %290 = load volatile i32*, i32** %8
  %291 = load i32, i32* %290, align 4
  %292 = sext i32 %291 to i64
  %293 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %289, i64 %292) #3
  store i32 %287, i32* %293, align 4
  %294 = load volatile %class.UnionFind*, %class.UnionFind** %5
  %295 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %294, i32 0, i32 1
  %296 = load volatile i32*, i32** %10
  %297 = load i32, i32* %296, align 4
  %298 = sext i32 %297 to i64
  %299 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %295, i64 %298) #3
  %300 = load i32, i32* %299, align 4
  %301 = sub i32 0, 1
  %302 = sub i32 %300, %301
  %303 = add nsw i32 %300, 1
  store i32 %302, i32* %299, align 4
  store i32 -1536711138, i32* %24
  br label %305

; <label>:304:                                    ; preds = %25
  store i32 -1355870595, i32* %24
  br label %305

; <label>:305:                                    ; preds = %304, %285, %269, %253, %238, %217, %216, %181, %153, %81, %80, %77, %36, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define zeroext i1 @_ZN9UnionFind8isUnitedEii(%class.UnionFind*, i32, i32) #0 align 2 {
  %4 = alloca %class.UnionFind*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %class.UnionFind* %0, %class.UnionFind** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %9 = load %class.UnionFind*, %class.UnionFind** %4, align 8
  %10 = load i32, i32* %5, align 4
  %11 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %9, i32 %10)
  store i32 %11, i32* %7, align 4
  %12 = load i32, i32* %6, align 4
  %13 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %9, i32 %12)
  store i32 %13, i32* %8, align 4
  %14 = load i32, i32* %7, align 4
  %15 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %9, i32 0, i32 0
  %16 = load i32, i32* %5, align 4
  %17 = sext i32 %16 to i64
  %18 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %15, i64 %17) #3
  store i32 %14, i32* %18, align 4
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %9, i32 0, i32 0
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %20, i64 %22) #3
  store i32 %19, i32* %23, align 4
  %24 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %9, i32 0, i32 1
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  %27 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %24, i64 %26) #3
  store i32 2, i32* %27, align 4
  %28 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %9, i32 0, i32 1
  %29 = load i32, i32* %6, align 4
  %30 = sext i32 %29 to i64
  %31 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %28, i64 %30) #3
  store i32 2, i32* %31, align 4
  %32 = load i32, i32* %7, align 4
  %33 = load i32, i32* %8, align 4
  %34 = icmp eq i32 %32, %33
  ret i1 %34
}

; Function Attrs: noinline nounwind uwtable
define i32 @_ZN9UnionFind7getRankEi(%class.UnionFind*, i32) #4 align 2 {
  %3 = alloca %class.UnionFind*, align 8
  %4 = alloca i32, align 4
  store %class.UnionFind* %0, %class.UnionFind** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.UnionFind*, %class.UnionFind** %3, align 8
  %6 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %5, i32 0, i32 1
  %7 = load i32, i32* %4, align 4
  %8 = sext i32 %7 to i64
  %9 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %6, i64 %8) #3
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

; Function Attrs: noinline uwtable
define i32 @_ZN9UnionFind7getSizeEi(%class.UnionFind*, i32) #0 align 2 {
  %3 = alloca %class.UnionFind*, align 8
  %4 = alloca i32, align 4
  store %class.UnionFind* %0, %class.UnionFind** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.UnionFind*, %class.UnionFind** %3, align 8
  %6 = getelementptr inbounds %class.UnionFind, %class.UnionFind* %5, i32 0, i32 2
  %7 = load i32, i32* %4, align 4
  %8 = call i32 @_ZN9UnionFind4rootEi(%class.UnionFind* %5, i32 %7)
  %9 = sext i32 %8 to i64
  %10 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.9"* %6, i64 %9) #3
  %11 = load i32, i32* %10, align 4
  ret i32 %11
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @_Z4isOKx(i64) #4 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  ret i1 true
}

; Function Attrs: noinline uwtable
define i64 @_Z13binary_searchv() #0 {
  %1 = alloca i64
  %2 = alloca i1
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i64 1000000000000000000, i64* %3, align 8
  store i64 -1, i64* %4, align 8
  %6 = alloca i32
  store i32 1647423274, i32* %6
  br label %7

; <label>:7:                                      ; preds = %0, %149
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 1647423274, label %10
    i32 1074658034, label %38
    i32 -788059484, label %74
    i32 -122567322, label %77
    i32 641099281, label %88
    i32 -2063040627, label %90
    i32 1383509779, label %92
    i32 -757617241, label %93
    i32 356556349, label %108
    i32 -1761671304, label %137
    i32 -498499699, label %139
    i32 -1975378045, label %147
  ]

; <label>:9:                                      ; preds = %7
  br label %149

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.92
  %12 = load i32, i32* @y.93
  %13 = add i32 %11, 762969140
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 762969140
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1074658034, i32 -498499699
  store i32 %37, i32* %6
  br label %149

; <label>:38:                                     ; preds = %7
  %39 = load i64, i64* %3, align 8
  %40 = load i64, i64* %4, align 8
  %41 = add i64 %39, 5934047924792414688
  %42 = sub i64 %41, %40
  %43 = sub i64 %42, 5934047924792414688
  %44 = sub nsw i64 %39, %40
  %45 = call i64 @_ZSt3absx(i64 %43)
  %46 = icmp sgt i64 %45, 1
  store i1 %46, i1* %2
  %47 = load i32, i32* @x.92
  %48 = load i32, i32* @y.93
  %49 = add i32 %47, -1107186945
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1107186945
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -788059484, i32 -498499699
  store i32 %73, i32* %6
  br label %149

; <label>:74:                                     ; preds = %7
  %75 = load volatile i1, i1* %2
  %76 = select i1 %75, i32 -122567322, i32 -757617241
  store i32 %76, i32* %6
  br label %149

; <label>:77:                                     ; preds = %7
  %78 = load i64, i64* %3, align 8
  %79 = load i64, i64* %4, align 8
  %80 = sub i64 %78, 3357795924277305261
  %81 = add i64 %80, %79
  %82 = add i64 %81, 3357795924277305261
  %83 = add nsw i64 %78, %79
  %84 = sdiv i64 %82, 2
  store i64 %84, i64* %5, align 8
  %85 = load i64, i64* %5, align 8
  %86 = call zeroext i1 @_Z4isOKx(i64 %85)
  %87 = select i1 %86, i32 641099281, i32 -2063040627
  store i32 %87, i32* %6
  br label %149

; <label>:88:                                     ; preds = %7
  %89 = load i64, i64* %5, align 8
  store i64 %89, i64* %3, align 8
  store i32 1383509779, i32* %6
  br label %149

; <label>:90:                                     ; preds = %7
  %91 = load i64, i64* %5, align 8
  store i64 %91, i64* %4, align 8
  store i32 1383509779, i32* %6
  br label %149

; <label>:92:                                     ; preds = %7
  store i32 1647423274, i32* %6
  br label %149

; <label>:93:                                     ; preds = %7
  %94 = load i32, i32* @x.92
  %95 = load i32, i32* @y.93
  %96 = sub i32 0, 1
  %97 = add i32 %94, %96
  %98 = sub i32 %94, 1
  %99 = mul i32 %94, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %95, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  %107 = select i1 %105, i32 356556349, i32 -1975378045
  store i32 %107, i32* %6
  br label %149

; <label>:108:                                    ; preds = %7
  %109 = load i64, i64* %3, align 8
  store i64 %109, i64* %1
  %110 = load i32, i32* @x.92
  %111 = load i32, i32* @y.93
  %112 = add i32 %110, 1091574961
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, 1091574961
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 true, true
  %123 = and i1 %120, true
  %124 = and i1 %118, %122
  %125 = and i1 %121, true
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 true, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  %136 = select i1 %134, i32 -1761671304, i32 -1975378045
  store i32 %136, i32* %6
  br label %149

; <label>:137:                                    ; preds = %7
  %138 = load volatile i64, i64* %1
  ret i64 %138

; <label>:139:                                    ; preds = %7
  %140 = load i64, i64* %3, align 8
  %141 = load i64, i64* %4, align 8
  %142 = sub i64 0, %141
  %143 = add i64 %140, %142
  %144 = sub nsw i64 %140, %141
  %145 = call i64 @_ZSt3absx(i64 %143)
  %146 = icmp sgt i64 %145, 1
  store i32 1074658034, i32* %6
  br label %149

; <label>:147:                                    ; preds = %7
  %148 = load i64, i64* %3, align 8
  store i32 356556349, i32* %6
  br label %149

; <label>:149:                                    ; preds = %147, %139, %108, %93, %92, %90, %88, %77, %74, %38, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt3absx(i64) #4 comdat {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = sub i64 0, %3
  %5 = add i64 0, %4
  %6 = sub i64 0, %3
  %7 = icmp sge i64 %3, 0
  %8 = select i1 %7, i64 %3, i64 %5
  ret i64 %8
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::vector.14", align 8
  %5 = alloca %"class.std::allocator.16", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.std::vector.0", align 8
  %9 = alloca %"class.std::vector", align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.std::allocator", align 1
  %12 = alloca %"class.std::allocator.2", align 1
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::vector.0", align 8
  %15 = alloca %"class.std::vector", align 8
  %16 = alloca %"class.std::allocator", align 1
  %17 = alloca %"class.std::allocator.2", align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca %"struct.std::pair.24", align 8
  %25 = alloca i8, align 1
  %26 = alloca %"struct.std::pair.24", align 8
  %27 = alloca i8, align 1
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca %"struct.std::pair.24", align 8
  %37 = alloca i8, align 1
  %38 = alloca %"struct.std::pair.24", align 8
  %39 = alloca i8, align 1
  %40 = alloca i64, align 8
  %41 = alloca i32, align 4
  %42 = alloca %"class.std::map.19", align 8
  %43 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %44 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %45 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store i32 0, i32* %1, align 4
  %46 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %47 = getelementptr i8, i8* %46, i64 -24
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %49
  %51 = bitcast i8* %50 to %"class.std::basic_ios"*
  %52 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %51, %"class.std::basic_ostream"* null)
  %53 = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %54 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %2)
  %55 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %54, i64* dereferenceable(8) %3)
  %56 = load i64, i64* %2, align 8
  call void @_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEEC2Ev(%"class.std::allocator.16"* %5) #3
  invoke void @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEC2EmRKS9_(%"class.std::vector.14"* %4, i64 %56, %"class.std::allocator.16"* dereferenceable(1) %5)
          to label %57 unwind label %257

; <label>:57:                                     ; preds = %0
  %58 = load i32, i32* @x.96
  %59 = load i32, i32* @y.97
  %60 = sub i32 %58, -752652048
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -752652048
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %1779

; <label>:84:                                     ; preds = %57, %1779
  call void @_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEED2Ev(%"class.std::allocator.16"* %5) #3
  %85 = load i64, i64* %2, align 8
  %86 = load i64, i64* %2, align 8
  store i64 1000000000000000000, i64* %10, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator"* %11) #3
  %87 = load i32, i32* @x.96
  %88 = load i32, i32* @y.97
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %1779

; <label>:112:                                    ; preds = %84
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector"* %9, i64 %86, i64* dereferenceable(8) %10, %"class.std::allocator"* dereferenceable(1) %11)
          to label %113 unwind label %261

; <label>:113:                                    ; preds = %112
  call void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.2"* %12) #3
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.0"* %8, i64 %85, %"class.std::vector"* dereferenceable(24) %9, %"class.std::allocator.2"* dereferenceable(1) %12)
          to label %114 unwind label %265

; <label>:114:                                    ; preds = %113
  %115 = load i32, i32* @x.96
  %116 = load i32, i32* @y.97
  %117 = add i32 %115, 394829798
  %118 = sub i32 %117, 1
  %119 = sub i32 %118, 394829798
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  br i1 %127, label %129, label %1782

; <label>:129:                                    ; preds = %114, %1782
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.2"* %12) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %9) #3
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %11) #3
  store i32 0, i32* %13, align 4
  %130 = load i32, i32* @x.96
  %131 = load i32, i32* @y.97
  %132 = add i32 %130, -494262467
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, -494262467
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = and i1 %138, %139
  %141 = xor i1 %138, %139
  %142 = or i1 %140, %141
  %143 = or i1 %138, %139
  br i1 %142, label %144, label %1782

; <label>:144:                                    ; preds = %129
  br label %145

; <label>:145:                                    ; preds = %256, %144
  %146 = load i32, i32* %13, align 4
  %147 = sext i32 %146 to i64
  %148 = load i64, i64* %2, align 8
  %149 = icmp slt i64 %147, %148
  br i1 %149, label %150, label %270

; <label>:150:                                    ; preds = %145
  %151 = load i32, i32* @x.96
  %152 = load i32, i32* @y.97
  %153 = sub i32 %151, -1926185272
  %154 = sub i32 %153, 1
  %155 = add i32 %154, -1926185272
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 false, true
  %164 = and i1 %161, false
  %165 = and i1 %159, %163
  %166 = and i1 %162, false
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 false, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %1783

; <label>:177:                                    ; preds = %150, %1783
  %178 = load i32, i32* %13, align 4
  %179 = sext i32 %178 to i64
  %180 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %179) #3
  %181 = load i32, i32* %13, align 4
  %182 = sext i32 %181 to i64
  %183 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %180, i64 %182) #3
  store i64 0, i64* %183, align 8
  %184 = load i32, i32* @x.96
  %185 = load i32, i32* @y.97
  %186 = sub i32 %184, -548560988
  %187 = sub i32 %186, 1
  %188 = add i32 %187, -548560988
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = xor i1 %192, true
  %195 = xor i1 %193, true
  %196 = xor i1 true, true
  %197 = and i1 %194, true
  %198 = and i1 %192, %196
  %199 = and i1 %195, true
  %200 = and i1 %193, %196
  %201 = or i1 %197, %198
  %202 = or i1 %199, %200
  %203 = xor i1 %201, %202
  %204 = or i1 %194, %195
  %205 = xor i1 %204, true
  %206 = or i1 true, %196
  %207 = and i1 %205, %206
  %208 = or i1 %203, %207
  %209 = or i1 %192, %193
  br i1 %208, label %210, label %1783

; <label>:210:                                    ; preds = %177
  br label %211

; <label>:211:                                    ; preds = %210
  %212 = load i32, i32* @x.96
  %213 = load i32, i32* @y.97
  %214 = sub i32 0, 1
  %215 = add i32 %212, %214
  %216 = sub i32 %212, 1
  %217 = mul i32 %212, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %213, 10
  %221 = and i1 %219, %220
  %222 = xor i1 %219, %220
  %223 = or i1 %221, %222
  %224 = or i1 %219, %220
  br i1 %223, label %225, label %1790

; <label>:225:                                    ; preds = %211, %1790
  %226 = load i32, i32* %13, align 4
  %227 = sub i32 0, 1
  %228 = sub i32 %226, %227
  %229 = add nsw i32 %226, 1
  store i32 %228, i32* %13, align 4
  %230 = load i32, i32* @x.96
  %231 = load i32, i32* @y.97
  %232 = add i32 %230, 2057920765
  %233 = sub i32 %232, 1
  %234 = sub i32 %233, 2057920765
  %235 = sub i32 %230, 1
  %236 = mul i32 %230, %234
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %231, 10
  %240 = xor i1 %238, true
  %241 = xor i1 %239, true
  %242 = xor i1 false, true
  %243 = and i1 %240, false
  %244 = and i1 %238, %242
  %245 = and i1 %241, false
  %246 = and i1 %239, %242
  %247 = or i1 %243, %244
  %248 = or i1 %245, %246
  %249 = xor i1 %247, %248
  %250 = or i1 %240, %241
  %251 = xor i1 %250, true
  %252 = or i1 false, %242
  %253 = and i1 %251, %252
  %254 = or i1 %249, %253
  %255 = or i1 %238, %239
  br i1 %254, label %256, label %1790

; <label>:256:                                    ; preds = %225
  br label %145

; <label>:257:                                    ; preds = %0
  %258 = landingpad { i8*, i32 }
          cleanup
  %259 = extractvalue { i8*, i32 } %258, 0
  store i8* %259, i8** %6, align 8
  %260 = extractvalue { i8*, i32 } %258, 1
  store i32 %260, i32* %7, align 4
  call void @_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEED2Ev(%"class.std::allocator.16"* %5) #3
  br label %1774

; <label>:261:                                    ; preds = %112
  %262 = landingpad { i8*, i32 }
          cleanup
  %263 = extractvalue { i8*, i32 } %262, 0
  store i8* %263, i8** %6, align 8
  %264 = extractvalue { i8*, i32 } %262, 1
  store i32 %264, i32* %7, align 4
  br label %269

; <label>:265:                                    ; preds = %113
  %266 = landingpad { i8*, i32 }
          cleanup
  %267 = extractvalue { i8*, i32 } %266, 0
  store i8* %267, i8** %6, align 8
  %268 = extractvalue { i8*, i32 } %266, 1
  store i32 %268, i32* %7, align 4
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.2"* %12) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %9) #3
  br label %269

; <label>:269:                                    ; preds = %265, %261
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %11) #3
  br label %1773

; <label>:270:                                    ; preds = %145
  %271 = load i32, i32* @x.96
  %272 = load i32, i32* @y.97
  %273 = sub i32 0, 1
  %274 = add i32 %271, %273
  %275 = sub i32 %271, 1
  %276 = mul i32 %271, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %272, 10
  %280 = xor i1 %278, true
  %281 = xor i1 %279, true
  %282 = xor i1 true, true
  %283 = and i1 %280, true
  %284 = and i1 %278, %282
  %285 = and i1 %281, true
  %286 = and i1 %279, %282
  %287 = or i1 %283, %284
  %288 = or i1 %285, %286
  %289 = xor i1 %287, %288
  %290 = or i1 %280, %281
  %291 = xor i1 %290, true
  %292 = or i1 true, %282
  %293 = and i1 %291, %292
  %294 = or i1 %289, %293
  %295 = or i1 %278, %279
  br i1 %294, label %296, label %1820

; <label>:296:                                    ; preds = %270, %1820
  %297 = load i64, i64* %2, align 8
  %298 = load i64, i64* %2, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator"* %16) #3
  %299 = load i32, i32* @x.96
  %300 = load i32, i32* @y.97
  %301 = sub i32 0, 1
  %302 = add i32 %299, %301
  %303 = sub i32 %299, 1
  %304 = mul i32 %299, %302
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %300, 10
  %308 = xor i1 %306, true
  %309 = xor i1 %307, true
  %310 = xor i1 true, true
  %311 = and i1 %308, true
  %312 = and i1 %306, %310
  %313 = and i1 %309, true
  %314 = and i1 %307, %310
  %315 = or i1 %311, %312
  %316 = or i1 %313, %314
  %317 = xor i1 %315, %316
  %318 = or i1 %308, %309
  %319 = xor i1 %318, true
  %320 = or i1 true, %310
  %321 = and i1 %319, %320
  %322 = or i1 %317, %321
  %323 = or i1 %306, %307
  br i1 %322, label %324, label %1820

; <label>:324:                                    ; preds = %296
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKS0_(%"class.std::vector"* %15, i64 %298, %"class.std::allocator"* dereferenceable(1) %16)
          to label %325 unwind label %396

; <label>:325:                                    ; preds = %324
  call void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator.2"* %17) #3
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.0"* %14, i64 %297, %"class.std::vector"* dereferenceable(24) %15, %"class.std::allocator.2"* dereferenceable(1) %17)
          to label %326 unwind label %400

; <label>:326:                                    ; preds = %325
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.2"* %17) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %15) #3
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %16) #3
  store i32 0, i32* %18, align 4
  br label %327

; <label>:327:                                    ; preds = %436, %326
  %328 = load i32, i32* %18, align 4
  %329 = sext i32 %328 to i64
  %330 = load i64, i64* %2, align 8
  %331 = icmp slt i64 %329, %330
  br i1 %331, label %332, label %441

; <label>:332:                                    ; preds = %327
  store i32 0, i32* %19, align 4
  br label %333

; <label>:333:                                    ; preds = %395, %332
  %334 = load i32, i32* %19, align 4
  %335 = sext i32 %334 to i64
  %336 = load i64, i64* %2, align 8
  %337 = icmp slt i64 %335, %336
  br i1 %337, label %338, label %435

; <label>:338:                                    ; preds = %333
  %339 = load i32, i32* %19, align 4
  %340 = sext i32 %339 to i64
  %341 = load i32, i32* %18, align 4
  %342 = sext i32 %341 to i64
  %343 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %14, i64 %342) #3
  %344 = load i32, i32* %19, align 4
  %345 = sext i32 %344 to i64
  %346 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %343, i64 %345) #3
  store i64 %340, i64* %346, align 8
  br label %347

; <label>:347:                                    ; preds = %338
  %348 = load i32, i32* @x.96
  %349 = load i32, i32* @y.97
  %350 = add i32 %348, -1425862037
  %351 = sub i32 %350, 1
  %352 = sub i32 %351, -1425862037
  %353 = sub i32 %348, 1
  %354 = mul i32 %348, %352
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %349, 10
  %358 = xor i1 %356, true
  %359 = xor i1 %357, true
  %360 = xor i1 true, true
  %361 = and i1 %358, true
  %362 = and i1 %356, %360
  %363 = and i1 %359, true
  %364 = and i1 %357, %360
  %365 = or i1 %361, %362
  %366 = or i1 %363, %364
  %367 = xor i1 %365, %366
  %368 = or i1 %358, %359
  %369 = xor i1 %368, true
  %370 = or i1 true, %360
  %371 = and i1 %369, %370
  %372 = or i1 %367, %371
  %373 = or i1 %356, %357
  br i1 %372, label %374, label %1823

; <label>:374:                                    ; preds = %347, %1823
  %375 = load i32, i32* %19, align 4
  %376 = sub i32 0, %375
  %377 = sub i32 0, 1
  %378 = add i32 %376, %377
  %379 = sub i32 0, %378
  %380 = add nsw i32 %375, 1
  store i32 %379, i32* %19, align 4
  %381 = load i32, i32* @x.96
  %382 = load i32, i32* @y.97
  %383 = sub i32 %381, -984592279
  %384 = sub i32 %383, 1
  %385 = add i32 %384, -984592279
  %386 = sub i32 %381, 1
  %387 = mul i32 %381, %385
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %382, 10
  %391 = and i1 %389, %390
  %392 = xor i1 %389, %390
  %393 = or i1 %391, %392
  %394 = or i1 %389, %390
  br i1 %393, label %395, label %1823

; <label>:395:                                    ; preds = %374
  br label %333

; <label>:396:                                    ; preds = %324
  %397 = landingpad { i8*, i32 }
          cleanup
  %398 = extractvalue { i8*, i32 } %397, 0
  store i8* %398, i8** %6, align 8
  %399 = extractvalue { i8*, i32 } %397, 1
  store i32 %399, i32* %7, align 4
  br label %404

; <label>:400:                                    ; preds = %325
  %401 = landingpad { i8*, i32 }
          cleanup
  %402 = extractvalue { i8*, i32 } %401, 0
  store i8* %402, i8** %6, align 8
  %403 = extractvalue { i8*, i32 } %401, 1
  store i32 %403, i32* %7, align 4
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.2"* %17) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %15) #3
  br label %404

; <label>:404:                                    ; preds = %400, %396
  %405 = load i32, i32* @x.96
  %406 = load i32, i32* @y.97
  %407 = add i32 %405, 1056740073
  %408 = sub i32 %407, 1
  %409 = sub i32 %408, 1056740073
  %410 = sub i32 %405, 1
  %411 = mul i32 %405, %409
  %412 = urem i32 %411, 2
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %406, 10
  %415 = and i1 %413, %414
  %416 = xor i1 %413, %414
  %417 = or i1 %415, %416
  %418 = or i1 %413, %414
  br i1 %417, label %419, label %1831

; <label>:419:                                    ; preds = %404, %1831
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %16) #3
  %420 = load i32, i32* @x.96
  %421 = load i32, i32* @y.97
  %422 = sub i32 %420, 27826426
  %423 = sub i32 %422, 1
  %424 = add i32 %423, 27826426
  %425 = sub i32 %420, 1
  %426 = mul i32 %420, %424
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %421, 10
  %430 = and i1 %428, %429
  %431 = xor i1 %428, %429
  %432 = or i1 %430, %431
  %433 = or i1 %428, %429
  br i1 %432, label %434, label %1831

; <label>:434:                                    ; preds = %419
  br label %1772

; <label>:435:                                    ; preds = %333
  br label %436

; <label>:436:                                    ; preds = %435
  %437 = load i32, i32* %18, align 4
  %438 = sub i32 0, 1
  %439 = sub i32 %437, %438
  %440 = add nsw i32 %437, 1
  store i32 %439, i32* %18, align 4
  br label %327

; <label>:441:                                    ; preds = %327
  store i32 0, i32* %20, align 4
  br label %442

; <label>:442:                                    ; preds = %689, %441
  %443 = load i32, i32* @x.96
  %444 = load i32, i32* @y.97
  %445 = sub i32 0, 1
  %446 = add i32 %443, %445
  %447 = sub i32 %443, 1
  %448 = mul i32 %443, %446
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %444, 10
  %452 = and i1 %450, %451
  %453 = xor i1 %450, %451
  %454 = or i1 %452, %453
  %455 = or i1 %450, %451
  br i1 %454, label %456, label %1832

; <label>:456:                                    ; preds = %442, %1832
  %457 = load i32, i32* %20, align 4
  %458 = sext i32 %457 to i64
  %459 = load i64, i64* %3, align 8
  %460 = icmp slt i64 %458, %459
  %461 = load i32, i32* @x.96
  %462 = load i32, i32* @y.97
  %463 = sub i32 0, 1
  %464 = add i32 %461, %463
  %465 = sub i32 %461, 1
  %466 = mul i32 %461, %464
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %462, 10
  %470 = and i1 %468, %469
  %471 = xor i1 %468, %469
  %472 = or i1 %470, %471
  %473 = or i1 %468, %469
  br i1 %472, label %474, label %1832

; <label>:474:                                    ; preds = %456
  br i1 %460, label %475, label %741

; <label>:475:                                    ; preds = %474
  %476 = load i32, i32* @x.96
  %477 = load i32, i32* @y.97
  %478 = sub i32 0, 1
  %479 = add i32 %476, %478
  %480 = sub i32 %476, 1
  %481 = mul i32 %476, %479
  %482 = urem i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = icmp slt i32 %477, 10
  %485 = xor i1 %483, true
  %486 = xor i1 %484, true
  %487 = xor i1 false, true
  %488 = and i1 %485, false
  %489 = and i1 %483, %487
  %490 = and i1 %486, false
  %491 = and i1 %484, %487
  %492 = or i1 %488, %489
  %493 = or i1 %490, %491
  %494 = xor i1 %492, %493
  %495 = or i1 %485, %486
  %496 = xor i1 %495, true
  %497 = or i1 false, %487
  %498 = and i1 %496, %497
  %499 = or i1 %494, %498
  %500 = or i1 %483, %484
  br i1 %499, label %501, label %1837

; <label>:501:                                    ; preds = %475, %1837
  %502 = load i32, i32* @x.96
  %503 = load i32, i32* @y.97
  %504 = sub i32 0, 1
  %505 = add i32 %502, %504
  %506 = sub i32 %502, 1
  %507 = mul i32 %502, %505
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %503, 10
  %511 = and i1 %509, %510
  %512 = xor i1 %509, %510
  %513 = or i1 %511, %512
  %514 = or i1 %509, %510
  br i1 %513, label %515, label %1837

; <label>:515:                                    ; preds = %501
  %516 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %21)
          to label %517 unwind label %695

; <label>:517:                                    ; preds = %515
  %518 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %516, i64* dereferenceable(8) %22)
          to label %519 unwind label %695

; <label>:519:                                    ; preds = %517
  %520 = load i32, i32* @x.96
  %521 = load i32, i32* @y.97
  %522 = sub i32 %520, -1775012199
  %523 = sub i32 %522, 1
  %524 = add i32 %523, -1775012199
  %525 = sub i32 %520, 1
  %526 = mul i32 %520, %524
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %521, 10
  %530 = and i1 %528, %529
  %531 = xor i1 %528, %529
  %532 = or i1 %530, %531
  %533 = or i1 %528, %529
  br i1 %532, label %534, label %1838

; <label>:534:                                    ; preds = %519, %1838
  %535 = load i32, i32* @x.96
  %536 = load i32, i32* @y.97
  %537 = sub i32 %535, 1916727425
  %538 = sub i32 %537, 1
  %539 = add i32 %538, 1916727425
  %540 = sub i32 %535, 1
  %541 = mul i32 %535, %539
  %542 = urem i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %536, 10
  %545 = and i1 %543, %544
  %546 = xor i1 %543, %544
  %547 = or i1 %545, %546
  %548 = or i1 %543, %544
  br i1 %547, label %549, label %1838

; <label>:549:                                    ; preds = %534
  %550 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %518, i64* dereferenceable(8) %23)
          to label %551 unwind label %695

; <label>:551:                                    ; preds = %549
  %552 = load i32, i32* @x.96
  %553 = load i32, i32* @y.97
  %554 = sub i32 0, 1
  %555 = add i32 %552, %554
  %556 = sub i32 %552, 1
  %557 = mul i32 %552, %555
  %558 = urem i32 %557, 2
  %559 = icmp eq i32 %558, 0
  %560 = icmp slt i32 %553, 10
  %561 = xor i1 %559, true
  %562 = xor i1 %560, true
  %563 = xor i1 true, true
  %564 = and i1 %561, true
  %565 = and i1 %559, %563
  %566 = and i1 %562, true
  %567 = and i1 %560, %563
  %568 = or i1 %564, %565
  %569 = or i1 %566, %567
  %570 = xor i1 %568, %569
  %571 = or i1 %561, %562
  %572 = xor i1 %571, true
  %573 = or i1 true, %563
  %574 = and i1 %572, %573
  %575 = or i1 %570, %574
  %576 = or i1 %559, %560
  br i1 %575, label %577, label %1839

; <label>:577:                                    ; preds = %551, %1839
  %578 = load i64, i64* %21, align 8
  %579 = sub i64 0, -1
  %580 = sub i64 %578, %579
  %581 = add nsw i64 %578, -1
  store i64 %580, i64* %21, align 8
  %582 = load i64, i64* %22, align 8
  %583 = sub i64 0, %582
  %584 = sub i64 0, -1
  %585 = add i64 %583, %584
  %586 = sub i64 0, %585
  %587 = add nsw i64 %582, -1
  store i64 %586, i64* %22, align 8
  store i8 0, i8* %25, align 1
  %588 = load i32, i32* @x.96
  %589 = load i32, i32* @y.97
  %590 = add i32 %588, -1503132994
  %591 = sub i32 %590, 1
  %592 = sub i32 %591, -1503132994
  %593 = sub i32 %588, 1
  %594 = mul i32 %588, %592
  %595 = urem i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = icmp slt i32 %589, 10
  %598 = xor i1 %596, true
  %599 = xor i1 %597, true
  %600 = xor i1 true, true
  %601 = and i1 %598, true
  %602 = and i1 %596, %600
  %603 = and i1 %599, true
  %604 = and i1 %597, %600
  %605 = or i1 %601, %602
  %606 = or i1 %603, %604
  %607 = xor i1 %605, %606
  %608 = or i1 %598, %599
  %609 = xor i1 %608, true
  %610 = or i1 true, %600
  %611 = and i1 %609, %610
  %612 = or i1 %607, %611
  %613 = or i1 %596, %597
  br i1 %612, label %614, label %1839

; <label>:614:                                    ; preds = %577
  %615 = invoke { i64, i8 } @_ZSt9make_pairIRxbESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i64* dereferenceable(8) %23, i8* dereferenceable(1) %25)
          to label %616 unwind label %695

; <label>:616:                                    ; preds = %614
  %617 = bitcast %"struct.std::pair.24"* %24 to { i64, i8 }*
  %618 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %617, i32 0, i32 0
  %619 = extractvalue { i64, i8 } %615, 0
  store i64 %619, i64* %618, align 8
  %620 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %617, i32 0, i32 1
  %621 = extractvalue { i64, i8 } %615, 1
  store i8 %621, i8* %620, align 8
  %622 = load i64, i64* %21, align 8
  %623 = call dereferenceable(48) %"class.std::map.19"* @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEixEm(%"class.std::vector.14"* %4, i64 %622) #3
  %624 = invoke dereferenceable(16) %"struct.std::pair.24"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEixERS4_(%"class.std::map.19"* %623, i64* dereferenceable(8) %22)
          to label %625 unwind label %695

; <label>:625:                                    ; preds = %616
  %626 = call dereferenceable(16) %"struct.std::pair.24"* @_ZNSt4pairIxbEaSEOS0_(%"struct.std::pair.24"* %624, %"struct.std::pair.24"* dereferenceable(16) %24) #3
  store i8 0, i8* %27, align 1
  %627 = invoke { i64, i8 } @_ZSt9make_pairIRxbESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i64* dereferenceable(8) %23, i8* dereferenceable(1) %27)
          to label %628 unwind label %695

; <label>:628:                                    ; preds = %625
  %629 = load i32, i32* @x.96
  %630 = load i32, i32* @y.97
  %631 = sub i32 0, 1
  %632 = add i32 %629, %631
  %633 = sub i32 %629, 1
  %634 = mul i32 %629, %632
  %635 = urem i32 %634, 2
  %636 = icmp eq i32 %635, 0
  %637 = icmp slt i32 %630, 10
  %638 = xor i1 %636, true
  %639 = xor i1 %637, true
  %640 = xor i1 false, true
  %641 = and i1 %638, false
  %642 = and i1 %636, %640
  %643 = and i1 %639, false
  %644 = and i1 %637, %640
  %645 = or i1 %641, %642
  %646 = or i1 %643, %644
  %647 = xor i1 %645, %646
  %648 = or i1 %638, %639
  %649 = xor i1 %648, true
  %650 = or i1 false, %640
  %651 = and i1 %649, %650
  %652 = or i1 %647, %651
  %653 = or i1 %636, %637
  br i1 %652, label %654, label %1884

; <label>:654:                                    ; preds = %628, %1884
  %655 = bitcast %"struct.std::pair.24"* %26 to { i64, i8 }*
  %656 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %655, i32 0, i32 0
  %657 = extractvalue { i64, i8 } %627, 0
  store i64 %657, i64* %656, align 8
  %658 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %655, i32 0, i32 1
  %659 = extractvalue { i64, i8 } %627, 1
  store i8 %659, i8* %658, align 8
  %660 = load i64, i64* %22, align 8
  %661 = call dereferenceable(48) %"class.std::map.19"* @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEixEm(%"class.std::vector.14"* %4, i64 %660) #3
  %662 = load i32, i32* @x.96
  %663 = load i32, i32* @y.97
  %664 = sub i32 0, 1
  %665 = add i32 %662, %664
  %666 = sub i32 %662, 1
  %667 = mul i32 %662, %665
  %668 = urem i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = icmp slt i32 %663, 10
  %671 = and i1 %669, %670
  %672 = xor i1 %669, %670
  %673 = or i1 %671, %672
  %674 = or i1 %669, %670
  br i1 %673, label %675, label %1884

; <label>:675:                                    ; preds = %654
  %676 = invoke dereferenceable(16) %"struct.std::pair.24"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEixERS4_(%"class.std::map.19"* %661, i64* dereferenceable(8) %21)
          to label %677 unwind label %695

; <label>:677:                                    ; preds = %675
  %678 = call dereferenceable(16) %"struct.std::pair.24"* @_ZNSt4pairIxbEaSEOS0_(%"struct.std::pair.24"* %676, %"struct.std::pair.24"* dereferenceable(16) %26) #3
  %679 = load i64, i64* %23, align 8
  %680 = load i64, i64* %21, align 8
  %681 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %680) #3
  %682 = load i64, i64* %22, align 8
  %683 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %681, i64 %682) #3
  store i64 %679, i64* %683, align 8
  %684 = load i64, i64* %23, align 8
  %685 = load i64, i64* %22, align 8
  %686 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %685) #3
  %687 = load i64, i64* %21, align 8
  %688 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %686, i64 %687) #3
  store i64 %684, i64* %688, align 8
  br label %689

; <label>:689:                                    ; preds = %677
  %690 = load i32, i32* %20, align 4
  %691 = sub i32 %690, 1650059551
  %692 = add i32 %691, 1
  %693 = add i32 %692, 1650059551
  %694 = add nsw i32 %690, 1
  store i32 %693, i32* %20, align 4
  br label %442

; <label>:695:                                    ; preds = %1768, %1764, %1543, %1438, %1399, %1348, %1346, %1281, %675, %625, %616, %614, %549, %517, %515
  %696 = load i32, i32* @x.96
  %697 = load i32, i32* @y.97
  %698 = add i32 %696, 1420705832
  %699 = sub i32 %698, 1
  %700 = sub i32 %699, 1420705832
  %701 = sub i32 %696, 1
  %702 = mul i32 %696, %700
  %703 = urem i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = icmp slt i32 %697, 10
  %706 = xor i1 %704, true
  %707 = xor i1 %705, true
  %708 = xor i1 true, true
  %709 = and i1 %706, true
  %710 = and i1 %704, %708
  %711 = and i1 %707, true
  %712 = and i1 %705, %708
  %713 = or i1 %709, %710
  %714 = or i1 %711, %712
  %715 = xor i1 %713, %714
  %716 = or i1 %706, %707
  %717 = xor i1 %716, true
  %718 = or i1 true, %708
  %719 = and i1 %717, %718
  %720 = or i1 %715, %719
  %721 = or i1 %704, %705
  br i1 %720, label %722, label %1892

; <label>:722:                                    ; preds = %695, %1892
  %723 = landingpad { i8*, i32 }
          cleanup
  %724 = extractvalue { i8*, i32 } %723, 0
  store i8* %724, i8** %6, align 8
  %725 = extractvalue { i8*, i32 } %723, 1
  store i32 %725, i32* %7, align 4
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.0"* %14) #3
  %726 = load i32, i32* @x.96
  %727 = load i32, i32* @y.97
  %728 = sub i32 %726, 504746105
  %729 = sub i32 %728, 1
  %730 = add i32 %729, 504746105
  %731 = sub i32 %726, 1
  %732 = mul i32 %726, %730
  %733 = urem i32 %732, 2
  %734 = icmp eq i32 %733, 0
  %735 = icmp slt i32 %727, 10
  %736 = and i1 %734, %735
  %737 = xor i1 %734, %735
  %738 = or i1 %736, %737
  %739 = or i1 %734, %735
  br i1 %738, label %740, label %1892

; <label>:740:                                    ; preds = %722
  br label %1772

; <label>:741:                                    ; preds = %474
  store i32 0, i32* %28, align 4
  br label %742

; <label>:742:                                    ; preds = %1201, %741
  %743 = load i32, i32* %28, align 4
  %744 = sext i32 %743 to i64
  %745 = load i64, i64* %2, align 8
  %746 = icmp slt i64 %744, %745
  br i1 %746, label %747, label %1202

; <label>:747:                                    ; preds = %742
  %748 = load i32, i32* @x.96
  %749 = load i32, i32* @y.97
  %750 = add i32 %748, -527010068
  %751 = sub i32 %750, 1
  %752 = sub i32 %751, -527010068
  %753 = sub i32 %748, 1
  %754 = mul i32 %748, %752
  %755 = urem i32 %754, 2
  %756 = icmp eq i32 %755, 0
  %757 = icmp slt i32 %749, 10
  %758 = xor i1 %756, true
  %759 = xor i1 %757, true
  %760 = xor i1 true, true
  %761 = and i1 %758, true
  %762 = and i1 %756, %760
  %763 = and i1 %759, true
  %764 = and i1 %757, %760
  %765 = or i1 %761, %762
  %766 = or i1 %763, %764
  %767 = xor i1 %765, %766
  %768 = or i1 %758, %759
  %769 = xor i1 %768, true
  %770 = or i1 true, %760
  %771 = and i1 %769, %770
  %772 = or i1 %767, %771
  %773 = or i1 %756, %757
  br i1 %772, label %774, label %1896

; <label>:774:                                    ; preds = %747, %1896
  store i32 0, i32* %29, align 4
  %775 = load i32, i32* @x.96
  %776 = load i32, i32* @y.97
  %777 = add i32 %775, 981320178
  %778 = sub i32 %777, 1
  %779 = sub i32 %778, 981320178
  %780 = sub i32 %775, 1
  %781 = mul i32 %775, %779
  %782 = urem i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = icmp slt i32 %776, 10
  %785 = and i1 %783, %784
  %786 = xor i1 %783, %784
  %787 = or i1 %785, %786
  %788 = or i1 %783, %784
  br i1 %787, label %789, label %1896

; <label>:789:                                    ; preds = %774
  br label %790

; <label>:790:                                    ; preds = %1111, %789
  %791 = load i32, i32* %29, align 4
  %792 = sext i32 %791 to i64
  %793 = load i64, i64* %2, align 8
  %794 = icmp slt i64 %792, %793
  br i1 %794, label %795, label %1112

; <label>:795:                                    ; preds = %790
  %796 = load i32, i32* @x.96
  %797 = load i32, i32* @y.97
  %798 = sub i32 %796, 575753246
  %799 = sub i32 %798, 1
  %800 = add i32 %799, 575753246
  %801 = sub i32 %796, 1
  %802 = mul i32 %796, %800
  %803 = urem i32 %802, 2
  %804 = icmp eq i32 %803, 0
  %805 = icmp slt i32 %797, 10
  %806 = xor i1 %804, true
  %807 = xor i1 %805, true
  %808 = xor i1 true, true
  %809 = and i1 %806, true
  %810 = and i1 %804, %808
  %811 = and i1 %807, true
  %812 = and i1 %805, %808
  %813 = or i1 %809, %810
  %814 = or i1 %811, %812
  %815 = xor i1 %813, %814
  %816 = or i1 %806, %807
  %817 = xor i1 %816, true
  %818 = or i1 true, %808
  %819 = and i1 %817, %818
  %820 = or i1 %815, %819
  %821 = or i1 %804, %805
  br i1 %820, label %822, label %1897

; <label>:822:                                    ; preds = %795, %1897
  store i32 0, i32* %30, align 4
  %823 = load i32, i32* @x.96
  %824 = load i32, i32* @y.97
  %825 = sub i32 %823, -464222996
  %826 = sub i32 %825, 1
  %827 = add i32 %826, -464222996
  %828 = sub i32 %823, 1
  %829 = mul i32 %823, %827
  %830 = urem i32 %829, 2
  %831 = icmp eq i32 %830, 0
  %832 = icmp slt i32 %824, 10
  %833 = xor i1 %831, true
  %834 = xor i1 %832, true
  %835 = xor i1 true, true
  %836 = and i1 %833, true
  %837 = and i1 %831, %835
  %838 = and i1 %834, true
  %839 = and i1 %832, %835
  %840 = or i1 %836, %837
  %841 = or i1 %838, %839
  %842 = xor i1 %840, %841
  %843 = or i1 %833, %834
  %844 = xor i1 %843, true
  %845 = or i1 true, %835
  %846 = and i1 %844, %845
  %847 = or i1 %842, %846
  %848 = or i1 %831, %832
  br i1 %847, label %849, label %1897

; <label>:849:                                    ; preds = %822
  br label %850

; <label>:850:                                    ; preds = %1060, %849
  %851 = load i32, i32* @x.96
  %852 = load i32, i32* @y.97
  %853 = sub i32 %851, 1185076951
  %854 = sub i32 %853, 1
  %855 = add i32 %854, 1185076951
  %856 = sub i32 %851, 1
  %857 = mul i32 %851, %855
  %858 = urem i32 %857, 2
  %859 = icmp eq i32 %858, 0
  %860 = icmp slt i32 %852, 10
  %861 = xor i1 %859, true
  %862 = xor i1 %860, true
  %863 = xor i1 false, true
  %864 = and i1 %861, false
  %865 = and i1 %859, %863
  %866 = and i1 %862, false
  %867 = and i1 %860, %863
  %868 = or i1 %864, %865
  %869 = or i1 %866, %867
  %870 = xor i1 %868, %869
  %871 = or i1 %861, %862
  %872 = xor i1 %871, true
  %873 = or i1 false, %863
  %874 = and i1 %872, %873
  %875 = or i1 %870, %874
  %876 = or i1 %859, %860
  br i1 %875, label %877, label %1898

; <label>:877:                                    ; preds = %850, %1898
  %878 = load i32, i32* %30, align 4
  %879 = sext i32 %878 to i64
  %880 = load i64, i64* %2, align 8
  %881 = icmp slt i64 %879, %880
  %882 = load i32, i32* @x.96
  %883 = load i32, i32* @y.97
  %884 = sub i32 %882, -1616993934
  %885 = sub i32 %884, 1
  %886 = add i32 %885, -1616993934
  %887 = sub i32 %882, 1
  %888 = mul i32 %882, %886
  %889 = urem i32 %888, 2
  %890 = icmp eq i32 %889, 0
  %891 = icmp slt i32 %883, 10
  %892 = xor i1 %890, true
  %893 = xor i1 %891, true
  %894 = xor i1 false, true
  %895 = and i1 %892, false
  %896 = and i1 %890, %894
  %897 = and i1 %893, false
  %898 = and i1 %891, %894
  %899 = or i1 %895, %896
  %900 = or i1 %897, %898
  %901 = xor i1 %899, %900
  %902 = or i1 %892, %893
  %903 = xor i1 %902, true
  %904 = or i1 false, %894
  %905 = and i1 %903, %904
  %906 = or i1 %901, %905
  %907 = or i1 %890, %891
  br i1 %906, label %908, label %1898

; <label>:908:                                    ; preds = %877
  br i1 %881, label %909, label %1065

; <label>:909:                                    ; preds = %908
  %910 = load i32, i32* %29, align 4
  %911 = sext i32 %910 to i64
  %912 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %911) #3
  %913 = load i32, i32* %30, align 4
  %914 = sext i32 %913 to i64
  %915 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %912, i64 %914) #3
  %916 = load i64, i64* %915, align 8
  %917 = load i32, i32* %29, align 4
  %918 = sext i32 %917 to i64
  %919 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %918) #3
  %920 = load i32, i32* %28, align 4
  %921 = sext i32 %920 to i64
  %922 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %919, i64 %921) #3
  %923 = load i64, i64* %922, align 8
  %924 = load i32, i32* %28, align 4
  %925 = sext i32 %924 to i64
  %926 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %925) #3
  %927 = load i32, i32* %30, align 4
  %928 = sext i32 %927 to i64
  %929 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %926, i64 %928) #3
  %930 = load i64, i64* %929, align 8
  %931 = sub i64 0, %923
  %932 = sub i64 0, %930
  %933 = add i64 %931, %932
  %934 = sub i64 0, %933
  %935 = add nsw i64 %923, %930
  %936 = icmp sgt i64 %916, %934
  br i1 %936, label %937, label %1017

; <label>:937:                                    ; preds = %909
  %938 = load i32, i32* @x.96
  %939 = load i32, i32* @y.97
  %940 = sub i32 %938, -975391996
  %941 = sub i32 %940, 1
  %942 = add i32 %941, -975391996
  %943 = sub i32 %938, 1
  %944 = mul i32 %938, %942
  %945 = urem i32 %944, 2
  %946 = icmp eq i32 %945, 0
  %947 = icmp slt i32 %939, 10
  %948 = and i1 %946, %947
  %949 = xor i1 %946, %947
  %950 = or i1 %948, %949
  %951 = or i1 %946, %947
  br i1 %950, label %952, label %1903

; <label>:952:                                    ; preds = %937, %1903
  %953 = load i32, i32* %29, align 4
  %954 = sext i32 %953 to i64
  %955 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %954) #3
  %956 = load i32, i32* %28, align 4
  %957 = sext i32 %956 to i64
  %958 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %955, i64 %957) #3
  %959 = load i64, i64* %958, align 8
  %960 = load i32, i32* %28, align 4
  %961 = sext i32 %960 to i64
  %962 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %961) #3
  %963 = load i32, i32* %30, align 4
  %964 = sext i32 %963 to i64
  %965 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %962, i64 %964) #3
  %966 = load i64, i64* %965, align 8
  %967 = add i64 %959, 1501169841937530272
  %968 = add i64 %967, %966
  %969 = sub i64 %968, 1501169841937530272
  %970 = add nsw i64 %959, %966
  %971 = load i32, i32* %29, align 4
  %972 = sext i32 %971 to i64
  %973 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %972) #3
  %974 = load i32, i32* %30, align 4
  %975 = sext i32 %974 to i64
  %976 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %973, i64 %975) #3
  store i64 %969, i64* %976, align 8
  %977 = load i32, i32* %29, align 4
  %978 = sext i32 %977 to i64
  %979 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %14, i64 %978) #3
  %980 = load i32, i32* %28, align 4
  %981 = sext i32 %980 to i64
  %982 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %979, i64 %981) #3
  %983 = load i64, i64* %982, align 8
  %984 = load i32, i32* %29, align 4
  %985 = sext i32 %984 to i64
  %986 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %14, i64 %985) #3
  %987 = load i32, i32* %30, align 4
  %988 = sext i32 %987 to i64
  %989 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %986, i64 %988) #3
  store i64 %983, i64* %989, align 8
  %990 = load i32, i32* @x.96
  %991 = load i32, i32* @y.97
  %992 = sub i32 %990, -1642416100
  %993 = sub i32 %992, 1
  %994 = add i32 %993, -1642416100
  %995 = sub i32 %990, 1
  %996 = mul i32 %990, %994
  %997 = urem i32 %996, 2
  %998 = icmp eq i32 %997, 0
  %999 = icmp slt i32 %991, 10
  %1000 = xor i1 %998, true
  %1001 = xor i1 %999, true
  %1002 = xor i1 true, true
  %1003 = and i1 %1000, true
  %1004 = and i1 %998, %1002
  %1005 = and i1 %1001, true
  %1006 = and i1 %999, %1002
  %1007 = or i1 %1003, %1004
  %1008 = or i1 %1005, %1006
  %1009 = xor i1 %1007, %1008
  %1010 = or i1 %1000, %1001
  %1011 = xor i1 %1010, true
  %1012 = or i1 true, %1002
  %1013 = and i1 %1011, %1012
  %1014 = or i1 %1009, %1013
  %1015 = or i1 %998, %999
  br i1 %1014, label %1016, label %1903

; <label>:1016:                                   ; preds = %952
  br label %1017

; <label>:1017:                                   ; preds = %1016, %909
  %1018 = load i32, i32* @x.96
  %1019 = load i32, i32* @y.97
  %1020 = sub i32 %1018, -1500275862
  %1021 = sub i32 %1020, 1
  %1022 = add i32 %1021, -1500275862
  %1023 = sub i32 %1018, 1
  %1024 = mul i32 %1018, %1022
  %1025 = urem i32 %1024, 2
  %1026 = icmp eq i32 %1025, 0
  %1027 = icmp slt i32 %1019, 10
  %1028 = xor i1 %1026, true
  %1029 = xor i1 %1027, true
  %1030 = xor i1 true, true
  %1031 = and i1 %1028, true
  %1032 = and i1 %1026, %1030
  %1033 = and i1 %1029, true
  %1034 = and i1 %1027, %1030
  %1035 = or i1 %1031, %1032
  %1036 = or i1 %1033, %1034
  %1037 = xor i1 %1035, %1036
  %1038 = or i1 %1028, %1029
  %1039 = xor i1 %1038, true
  %1040 = or i1 true, %1030
  %1041 = and i1 %1039, %1040
  %1042 = or i1 %1037, %1041
  %1043 = or i1 %1026, %1027
  br i1 %1042, label %1044, label %1962

; <label>:1044:                                   ; preds = %1017, %1962
  %1045 = load i32, i32* @x.96
  %1046 = load i32, i32* @y.97
  %1047 = add i32 %1045, 442992643
  %1048 = sub i32 %1047, 1
  %1049 = sub i32 %1048, 442992643
  %1050 = sub i32 %1045, 1
  %1051 = mul i32 %1045, %1049
  %1052 = urem i32 %1051, 2
  %1053 = icmp eq i32 %1052, 0
  %1054 = icmp slt i32 %1046, 10
  %1055 = and i1 %1053, %1054
  %1056 = xor i1 %1053, %1054
  %1057 = or i1 %1055, %1056
  %1058 = or i1 %1053, %1054
  br i1 %1057, label %1059, label %1962

; <label>:1059:                                   ; preds = %1044
  br label %1060

; <label>:1060:                                   ; preds = %1059
  %1061 = load i32, i32* %30, align 4
  %1062 = sub i32 0, 1
  %1063 = sub i32 %1061, %1062
  %1064 = add nsw i32 %1061, 1
  store i32 %1063, i32* %30, align 4
  br label %850

; <label>:1065:                                   ; preds = %908
  br label %1066

; <label>:1066:                                   ; preds = %1065
  %1067 = load i32, i32* @x.96
  %1068 = load i32, i32* @y.97
  %1069 = sub i32 %1067, -114757204
  %1070 = sub i32 %1069, 1
  %1071 = add i32 %1070, -114757204
  %1072 = sub i32 %1067, 1
  %1073 = mul i32 %1067, %1071
  %1074 = urem i32 %1073, 2
  %1075 = icmp eq i32 %1074, 0
  %1076 = icmp slt i32 %1068, 10
  %1077 = xor i1 %1075, true
  %1078 = xor i1 %1076, true
  %1079 = xor i1 true, true
  %1080 = and i1 %1077, true
  %1081 = and i1 %1075, %1079
  %1082 = and i1 %1078, true
  %1083 = and i1 %1076, %1079
  %1084 = or i1 %1080, %1081
  %1085 = or i1 %1082, %1083
  %1086 = xor i1 %1084, %1085
  %1087 = or i1 %1077, %1078
  %1088 = xor i1 %1087, true
  %1089 = or i1 true, %1079
  %1090 = and i1 %1088, %1089
  %1091 = or i1 %1086, %1090
  %1092 = or i1 %1075, %1076
  br i1 %1091, label %1093, label %1963

; <label>:1093:                                   ; preds = %1066, %1963
  %1094 = load i32, i32* %29, align 4
  %1095 = sub i32 0, 1
  %1096 = sub i32 %1094, %1095
  %1097 = add nsw i32 %1094, 1
  store i32 %1096, i32* %29, align 4
  %1098 = load i32, i32* @x.96
  %1099 = load i32, i32* @y.97
  %1100 = sub i32 0, 1
  %1101 = add i32 %1098, %1100
  %1102 = sub i32 %1098, 1
  %1103 = mul i32 %1098, %1101
  %1104 = urem i32 %1103, 2
  %1105 = icmp eq i32 %1104, 0
  %1106 = icmp slt i32 %1099, 10
  %1107 = and i1 %1105, %1106
  %1108 = xor i1 %1105, %1106
  %1109 = or i1 %1107, %1108
  %1110 = or i1 %1105, %1106
  br i1 %1109, label %1111, label %1963

; <label>:1111:                                   ; preds = %1093
  br label %790

; <label>:1112:                                   ; preds = %790
  %1113 = load i32, i32* @x.96
  %1114 = load i32, i32* @y.97
  %1115 = sub i32 0, 1
  %1116 = add i32 %1113, %1115
  %1117 = sub i32 %1113, 1
  %1118 = mul i32 %1113, %1116
  %1119 = urem i32 %1118, 2
  %1120 = icmp eq i32 %1119, 0
  %1121 = icmp slt i32 %1114, 10
  %1122 = xor i1 %1120, true
  %1123 = xor i1 %1121, true
  %1124 = xor i1 false, true
  %1125 = and i1 %1122, false
  %1126 = and i1 %1120, %1124
  %1127 = and i1 %1123, false
  %1128 = and i1 %1121, %1124
  %1129 = or i1 %1125, %1126
  %1130 = or i1 %1127, %1128
  %1131 = xor i1 %1129, %1130
  %1132 = or i1 %1122, %1123
  %1133 = xor i1 %1132, true
  %1134 = or i1 false, %1124
  %1135 = and i1 %1133, %1134
  %1136 = or i1 %1131, %1135
  %1137 = or i1 %1120, %1121
  br i1 %1136, label %1138, label %1975

; <label>:1138:                                   ; preds = %1112, %1975
  %1139 = load i32, i32* @x.96
  %1140 = load i32, i32* @y.97
  %1141 = sub i32 %1139, 1239326197
  %1142 = sub i32 %1141, 1
  %1143 = add i32 %1142, 1239326197
  %1144 = sub i32 %1139, 1
  %1145 = mul i32 %1139, %1143
  %1146 = urem i32 %1145, 2
  %1147 = icmp eq i32 %1146, 0
  %1148 = icmp slt i32 %1140, 10
  %1149 = xor i1 %1147, true
  %1150 = xor i1 %1148, true
  %1151 = xor i1 true, true
  %1152 = and i1 %1149, true
  %1153 = and i1 %1147, %1151
  %1154 = and i1 %1150, true
  %1155 = and i1 %1148, %1151
  %1156 = or i1 %1152, %1153
  %1157 = or i1 %1154, %1155
  %1158 = xor i1 %1156, %1157
  %1159 = or i1 %1149, %1150
  %1160 = xor i1 %1159, true
  %1161 = or i1 true, %1151
  %1162 = and i1 %1160, %1161
  %1163 = or i1 %1158, %1162
  %1164 = or i1 %1147, %1148
  br i1 %1163, label %1165, label %1975

; <label>:1165:                                   ; preds = %1138
  br label %1166

; <label>:1166:                                   ; preds = %1165
  %1167 = load i32, i32* @x.96
  %1168 = load i32, i32* @y.97
  %1169 = add i32 %1167, 295942685
  %1170 = sub i32 %1169, 1
  %1171 = sub i32 %1170, 295942685
  %1172 = sub i32 %1167, 1
  %1173 = mul i32 %1167, %1171
  %1174 = urem i32 %1173, 2
  %1175 = icmp eq i32 %1174, 0
  %1176 = icmp slt i32 %1168, 10
  %1177 = and i1 %1175, %1176
  %1178 = xor i1 %1175, %1176
  %1179 = or i1 %1177, %1178
  %1180 = or i1 %1175, %1176
  br i1 %1179, label %1181, label %1976

; <label>:1181:                                   ; preds = %1166, %1976
  %1182 = load i32, i32* %28, align 4
  %1183 = sub i32 %1182, 829596842
  %1184 = add i32 %1183, 1
  %1185 = add i32 %1184, 829596842
  %1186 = add nsw i32 %1182, 1
  store i32 %1185, i32* %28, align 4
  %1187 = load i32, i32* @x.96
  %1188 = load i32, i32* @y.97
  %1189 = sub i32 %1187, -454751408
  %1190 = sub i32 %1189, 1
  %1191 = add i32 %1190, -454751408
  %1192 = sub i32 %1187, 1
  %1193 = mul i32 %1187, %1191
  %1194 = urem i32 %1193, 2
  %1195 = icmp eq i32 %1194, 0
  %1196 = icmp slt i32 %1188, 10
  %1197 = and i1 %1195, %1196
  %1198 = xor i1 %1195, %1196
  %1199 = or i1 %1197, %1198
  %1200 = or i1 %1195, %1196
  br i1 %1199, label %1201, label %1976

; <label>:1201:                                   ; preds = %1181
  br label %742

; <label>:1202:                                   ; preds = %742
  %1203 = load i32, i32* @x.96
  %1204 = load i32, i32* @y.97
  %1205 = sub i32 0, 1
  %1206 = add i32 %1203, %1205
  %1207 = sub i32 %1203, 1
  %1208 = mul i32 %1203, %1206
  %1209 = urem i32 %1208, 2
  %1210 = icmp eq i32 %1209, 0
  %1211 = icmp slt i32 %1204, 10
  %1212 = and i1 %1210, %1211
  %1213 = xor i1 %1210, %1211
  %1214 = or i1 %1212, %1213
  %1215 = or i1 %1210, %1211
  br i1 %1214, label %1216, label %2004

; <label>:1216:                                   ; preds = %1202, %2004
  store i32 0, i32* %31, align 4
  %1217 = load i32, i32* @x.96
  %1218 = load i32, i32* @y.97
  %1219 = add i32 %1217, 1284709840
  %1220 = sub i32 %1219, 1
  %1221 = sub i32 %1220, 1284709840
  %1222 = sub i32 %1217, 1
  %1223 = mul i32 %1217, %1221
  %1224 = urem i32 %1223, 2
  %1225 = icmp eq i32 %1224, 0
  %1226 = icmp slt i32 %1218, 10
  %1227 = and i1 %1225, %1226
  %1228 = xor i1 %1225, %1226
  %1229 = or i1 %1227, %1228
  %1230 = or i1 %1225, %1226
  br i1 %1229, label %1231, label %2004

; <label>:1231:                                   ; preds = %1216
  br label %1232

; <label>:1232:                                   ; preds = %1503, %1231
  %1233 = load i32, i32* %31, align 4
  %1234 = sext i32 %1233 to i64
  %1235 = load i64, i64* %2, align 8
  %1236 = icmp slt i64 %1234, %1235
  br i1 %1236, label %1237, label %1509

; <label>:1237:                                   ; preds = %1232
  %1238 = load i32, i32* @x.96
  %1239 = load i32, i32* @y.97
  %1240 = add i32 %1238, 2046844003
  %1241 = sub i32 %1240, 1
  %1242 = sub i32 %1241, 2046844003
  %1243 = sub i32 %1238, 1
  %1244 = mul i32 %1238, %1242
  %1245 = urem i32 %1244, 2
  %1246 = icmp eq i32 %1245, 0
  %1247 = icmp slt i32 %1239, 10
  %1248 = and i1 %1246, %1247
  %1249 = xor i1 %1246, %1247
  %1250 = or i1 %1248, %1249
  %1251 = or i1 %1246, %1247
  br i1 %1250, label %1252, label %2005

; <label>:1252:                                   ; preds = %1237, %2005
  store i32 0, i32* %32, align 4
  %1253 = load i32, i32* @x.96
  %1254 = load i32, i32* @y.97
  %1255 = add i32 %1253, -1522573574
  %1256 = sub i32 %1255, 1
  %1257 = sub i32 %1256, -1522573574
  %1258 = sub i32 %1253, 1
  %1259 = mul i32 %1253, %1257
  %1260 = urem i32 %1259, 2
  %1261 = icmp eq i32 %1260, 0
  %1262 = icmp slt i32 %1254, 10
  %1263 = and i1 %1261, %1262
  %1264 = xor i1 %1261, %1262
  %1265 = or i1 %1263, %1264
  %1266 = or i1 %1261, %1262
  br i1 %1265, label %1267, label %2005

; <label>:1267:                                   ; preds = %1252
  br label %1268

; <label>:1268:                                   ; preds = %1444, %1267
  %1269 = load i32, i32* %32, align 4
  %1270 = sext i32 %1269 to i64
  %1271 = load i64, i64* %2, align 8
  %1272 = icmp slt i64 %1270, %1271
  br i1 %1272, label %1273, label %1449

; <label>:1273:                                   ; preds = %1268
  %1274 = load i32, i32* %31, align 4
  %1275 = sext i32 %1274 to i64
  store i64 %1275, i64* %33, align 8
  br label %1276

; <label>:1276:                                   ; preds = %1440, %1273
  %1277 = load i64, i64* %33, align 8
  %1278 = load i32, i32* %32, align 4
  %1279 = sext i32 %1278 to i64
  %1280 = icmp ne i64 %1277, %1279
  br i1 %1280, label %1281, label %1443

; <label>:1281:                                   ; preds = %1276
  %1282 = load i64, i64* %33, align 8
  %1283 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %14, i64 %1282) #3
  %1284 = load i32, i32* %32, align 4
  %1285 = sext i32 %1284 to i64
  %1286 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %1283, i64 %1285) #3
  %1287 = load i64, i64* %1286, align 8
  store i64 %1287, i64* %34, align 8
  %1288 = load i64, i64* %33, align 8
  %1289 = call dereferenceable(48) %"class.std::map.19"* @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEixEm(%"class.std::vector.14"* %4, i64 %1288) #3
  %1290 = invoke dereferenceable(16) %"struct.std::pair.24"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEixERS4_(%"class.std::map.19"* %1289, i64* dereferenceable(8) %34)
          to label %1291 unwind label %695

; <label>:1291:                                   ; preds = %1281
  %1292 = load i32, i32* @x.96
  %1293 = load i32, i32* @y.97
  %1294 = sub i32 %1292, -1119397752
  %1295 = sub i32 %1294, 1
  %1296 = add i32 %1295, -1119397752
  %1297 = sub i32 %1292, 1
  %1298 = mul i32 %1292, %1296
  %1299 = urem i32 %1298, 2
  %1300 = icmp eq i32 %1299, 0
  %1301 = icmp slt i32 %1293, 10
  %1302 = xor i1 %1300, true
  %1303 = xor i1 %1301, true
  %1304 = xor i1 true, true
  %1305 = and i1 %1302, true
  %1306 = and i1 %1300, %1304
  %1307 = and i1 %1303, true
  %1308 = and i1 %1301, %1304
  %1309 = or i1 %1305, %1306
  %1310 = or i1 %1307, %1308
  %1311 = xor i1 %1309, %1310
  %1312 = or i1 %1302, %1303
  %1313 = xor i1 %1312, true
  %1314 = or i1 true, %1304
  %1315 = and i1 %1313, %1314
  %1316 = or i1 %1311, %1315
  %1317 = or i1 %1300, %1301
  br i1 %1316, label %1318, label %2006

; <label>:1318:                                   ; preds = %1291, %2006
  %1319 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %1290, i32 0, i32 0
  %1320 = load i64, i64* %1319, align 8
  store i64 %1320, i64* %35, align 8
  store i8 1, i8* %37, align 1
  %1321 = load i32, i32* @x.96
  %1322 = load i32, i32* @y.97
  %1323 = sub i32 0, 1
  %1324 = add i32 %1321, %1323
  %1325 = sub i32 %1321, 1
  %1326 = mul i32 %1321, %1324
  %1327 = urem i32 %1326, 2
  %1328 = icmp eq i32 %1327, 0
  %1329 = icmp slt i32 %1322, 10
  %1330 = xor i1 %1328, true
  %1331 = xor i1 %1329, true
  %1332 = xor i1 false, true
  %1333 = and i1 %1330, false
  %1334 = and i1 %1328, %1332
  %1335 = and i1 %1331, false
  %1336 = and i1 %1329, %1332
  %1337 = or i1 %1333, %1334
  %1338 = or i1 %1335, %1336
  %1339 = xor i1 %1337, %1338
  %1340 = or i1 %1330, %1331
  %1341 = xor i1 %1340, true
  %1342 = or i1 false, %1332
  %1343 = and i1 %1341, %1342
  %1344 = or i1 %1339, %1343
  %1345 = or i1 %1328, %1329
  br i1 %1344, label %1346, label %2006

; <label>:1346:                                   ; preds = %1318
  %1347 = invoke { i64, i8 } @_ZSt9make_pairIRxbESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i64* dereferenceable(8) %35, i8* dereferenceable(1) %37)
          to label %1348 unwind label %695

; <label>:1348:                                   ; preds = %1346
  %1349 = bitcast %"struct.std::pair.24"* %36 to { i64, i8 }*
  %1350 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1349, i32 0, i32 0
  %1351 = extractvalue { i64, i8 } %1347, 0
  store i64 %1351, i64* %1350, align 8
  %1352 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1349, i32 0, i32 1
  %1353 = extractvalue { i64, i8 } %1347, 1
  store i8 %1353, i8* %1352, align 8
  %1354 = load i64, i64* %33, align 8
  %1355 = call dereferenceable(48) %"class.std::map.19"* @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEixEm(%"class.std::vector.14"* %4, i64 %1354) #3
  %1356 = invoke dereferenceable(16) %"struct.std::pair.24"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEixERS4_(%"class.std::map.19"* %1355, i64* dereferenceable(8) %34)
          to label %1357 unwind label %695

; <label>:1357:                                   ; preds = %1348
  %1358 = load i32, i32* @x.96
  %1359 = load i32, i32* @y.97
  %1360 = sub i32 0, 1
  %1361 = add i32 %1358, %1360
  %1362 = sub i32 %1358, 1
  %1363 = mul i32 %1358, %1361
  %1364 = urem i32 %1363, 2
  %1365 = icmp eq i32 %1364, 0
  %1366 = icmp slt i32 %1359, 10
  %1367 = xor i1 %1365, true
  %1368 = xor i1 %1366, true
  %1369 = xor i1 false, true
  %1370 = and i1 %1367, false
  %1371 = and i1 %1365, %1369
  %1372 = and i1 %1368, false
  %1373 = and i1 %1366, %1369
  %1374 = or i1 %1370, %1371
  %1375 = or i1 %1372, %1373
  %1376 = xor i1 %1374, %1375
  %1377 = or i1 %1367, %1368
  %1378 = xor i1 %1377, true
  %1379 = or i1 false, %1369
  %1380 = and i1 %1378, %1379
  %1381 = or i1 %1376, %1380
  %1382 = or i1 %1365, %1366
  br i1 %1381, label %1383, label %2009

; <label>:1383:                                   ; preds = %1357, %2009
  %1384 = call dereferenceable(16) %"struct.std::pair.24"* @_ZNSt4pairIxbEaSEOS0_(%"struct.std::pair.24"* %1356, %"struct.std::pair.24"* dereferenceable(16) %36) #3
  store i8 1, i8* %39, align 1
  %1385 = load i32, i32* @x.96
  %1386 = load i32, i32* @y.97
  %1387 = sub i32 %1385, 1151530425
  %1388 = sub i32 %1387, 1
  %1389 = add i32 %1388, 1151530425
  %1390 = sub i32 %1385, 1
  %1391 = mul i32 %1385, %1389
  %1392 = urem i32 %1391, 2
  %1393 = icmp eq i32 %1392, 0
  %1394 = icmp slt i32 %1386, 10
  %1395 = and i1 %1393, %1394
  %1396 = xor i1 %1393, %1394
  %1397 = or i1 %1395, %1396
  %1398 = or i1 %1393, %1394
  br i1 %1397, label %1399, label %2009

; <label>:1399:                                   ; preds = %1383
  %1400 = invoke { i64, i8 } @_ZSt9make_pairIRxbESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i64* dereferenceable(8) %35, i8* dereferenceable(1) %39)
          to label %1401 unwind label %695

; <label>:1401:                                   ; preds = %1399
  %1402 = load i32, i32* @x.96
  %1403 = load i32, i32* @y.97
  %1404 = add i32 %1402, 285031416
  %1405 = sub i32 %1404, 1
  %1406 = sub i32 %1405, 285031416
  %1407 = sub i32 %1402, 1
  %1408 = mul i32 %1402, %1406
  %1409 = urem i32 %1408, 2
  %1410 = icmp eq i32 %1409, 0
  %1411 = icmp slt i32 %1403, 10
  %1412 = and i1 %1410, %1411
  %1413 = xor i1 %1410, %1411
  %1414 = or i1 %1412, %1413
  %1415 = or i1 %1410, %1411
  br i1 %1414, label %1416, label %2011

; <label>:1416:                                   ; preds = %1401, %2011
  %1417 = bitcast %"struct.std::pair.24"* %38 to { i64, i8 }*
  %1418 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1417, i32 0, i32 0
  %1419 = extractvalue { i64, i8 } %1400, 0
  store i64 %1419, i64* %1418, align 8
  %1420 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1417, i32 0, i32 1
  %1421 = extractvalue { i64, i8 } %1400, 1
  store i8 %1421, i8* %1420, align 8
  %1422 = load i64, i64* %34, align 8
  %1423 = call dereferenceable(48) %"class.std::map.19"* @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEixEm(%"class.std::vector.14"* %4, i64 %1422) #3
  %1424 = load i32, i32* @x.96
  %1425 = load i32, i32* @y.97
  %1426 = add i32 %1424, 374050641
  %1427 = sub i32 %1426, 1
  %1428 = sub i32 %1427, 374050641
  %1429 = sub i32 %1424, 1
  %1430 = mul i32 %1424, %1428
  %1431 = urem i32 %1430, 2
  %1432 = icmp eq i32 %1431, 0
  %1433 = icmp slt i32 %1425, 10
  %1434 = and i1 %1432, %1433
  %1435 = xor i1 %1432, %1433
  %1436 = or i1 %1434, %1435
  %1437 = or i1 %1432, %1433
  br i1 %1436, label %1438, label %2011

; <label>:1438:                                   ; preds = %1416
  %1439 = invoke dereferenceable(16) %"struct.std::pair.24"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEixERS4_(%"class.std::map.19"* %1423, i64* dereferenceable(8) %33)
          to label %1440 unwind label %695

; <label>:1440:                                   ; preds = %1438
  %1441 = call dereferenceable(16) %"struct.std::pair.24"* @_ZNSt4pairIxbEaSEOS0_(%"struct.std::pair.24"* %1439, %"struct.std::pair.24"* dereferenceable(16) %38) #3
  %1442 = load i64, i64* %34, align 8
  store i64 %1442, i64* %33, align 8
  br label %1276

; <label>:1443:                                   ; preds = %1276
  br label %1444

; <label>:1444:                                   ; preds = %1443
  %1445 = load i32, i32* %32, align 4
  %1446 = sub i32 0, 1
  %1447 = sub i32 %1445, %1446
  %1448 = add nsw i32 %1445, 1
  store i32 %1447, i32* %32, align 4
  br label %1268

; <label>:1449:                                   ; preds = %1268
  %1450 = load i32, i32* @x.96
  %1451 = load i32, i32* @y.97
  %1452 = add i32 %1450, 1117703895
  %1453 = sub i32 %1452, 1
  %1454 = sub i32 %1453, 1117703895
  %1455 = sub i32 %1450, 1
  %1456 = mul i32 %1450, %1454
  %1457 = urem i32 %1456, 2
  %1458 = icmp eq i32 %1457, 0
  %1459 = icmp slt i32 %1451, 10
  %1460 = xor i1 %1458, true
  %1461 = xor i1 %1459, true
  %1462 = xor i1 true, true
  %1463 = and i1 %1460, true
  %1464 = and i1 %1458, %1462
  %1465 = and i1 %1461, true
  %1466 = and i1 %1459, %1462
  %1467 = or i1 %1463, %1464
  %1468 = or i1 %1465, %1466
  %1469 = xor i1 %1467, %1468
  %1470 = or i1 %1460, %1461
  %1471 = xor i1 %1470, true
  %1472 = or i1 true, %1462
  %1473 = and i1 %1471, %1472
  %1474 = or i1 %1469, %1473
  %1475 = or i1 %1458, %1459
  br i1 %1474, label %1476, label %2019

; <label>:1476:                                   ; preds = %1449, %2019
  %1477 = load i32, i32* @x.96
  %1478 = load i32, i32* @y.97
  %1479 = sub i32 0, 1
  %1480 = add i32 %1477, %1479
  %1481 = sub i32 %1477, 1
  %1482 = mul i32 %1477, %1480
  %1483 = urem i32 %1482, 2
  %1484 = icmp eq i32 %1483, 0
  %1485 = icmp slt i32 %1478, 10
  %1486 = xor i1 %1484, true
  %1487 = xor i1 %1485, true
  %1488 = xor i1 true, true
  %1489 = and i1 %1486, true
  %1490 = and i1 %1484, %1488
  %1491 = and i1 %1487, true
  %1492 = and i1 %1485, %1488
  %1493 = or i1 %1489, %1490
  %1494 = or i1 %1491, %1492
  %1495 = xor i1 %1493, %1494
  %1496 = or i1 %1486, %1487
  %1497 = xor i1 %1496, true
  %1498 = or i1 true, %1488
  %1499 = and i1 %1497, %1498
  %1500 = or i1 %1495, %1499
  %1501 = or i1 %1484, %1485
  br i1 %1500, label %1502, label %2019

; <label>:1502:                                   ; preds = %1476
  br label %1503

; <label>:1503:                                   ; preds = %1502
  %1504 = load i32, i32* %31, align 4
  %1505 = sub i32 %1504, 2062488023
  %1506 = add i32 %1505, 1
  %1507 = add i32 %1506, 2062488023
  %1508 = add nsw i32 %1504, 1
  store i32 %1507, i32* %31, align 4
  br label %1232

; <label>:1509:                                   ; preds = %1232
  store i64 0, i64* %40, align 8
  store i32 0, i32* %41, align 4
  br label %1510

; <label>:1510:                                   ; preds = %1759, %1509
  %1511 = load i32, i32* @x.96
  %1512 = load i32, i32* @y.97
  %1513 = sub i32 0, 1
  %1514 = add i32 %1511, %1513
  %1515 = sub i32 %1511, 1
  %1516 = mul i32 %1511, %1514
  %1517 = urem i32 %1516, 2
  %1518 = icmp eq i32 %1517, 0
  %1519 = icmp slt i32 %1512, 10
  %1520 = and i1 %1518, %1519
  %1521 = xor i1 %1518, %1519
  %1522 = or i1 %1520, %1521
  %1523 = or i1 %1518, %1519
  br i1 %1522, label %1524, label %2020

; <label>:1524:                                   ; preds = %1510, %2020
  %1525 = load i32, i32* %41, align 4
  %1526 = sext i32 %1525 to i64
  %1527 = load i64, i64* %2, align 8
  %1528 = icmp slt i64 %1526, %1527
  %1529 = load i32, i32* @x.96
  %1530 = load i32, i32* @y.97
  %1531 = sub i32 0, 1
  %1532 = add i32 %1529, %1531
  %1533 = sub i32 %1529, 1
  %1534 = mul i32 %1529, %1532
  %1535 = urem i32 %1534, 2
  %1536 = icmp eq i32 %1535, 0
  %1537 = icmp slt i32 %1530, 10
  %1538 = and i1 %1536, %1537
  %1539 = xor i1 %1536, %1537
  %1540 = or i1 %1538, %1539
  %1541 = or i1 %1536, %1537
  br i1 %1540, label %1542, label %2020

; <label>:1542:                                   ; preds = %1524
  br i1 %1528, label %1543, label %1764

; <label>:1543:                                   ; preds = %1542
  %1544 = load i32, i32* %41, align 4
  %1545 = sext i32 %1544 to i64
  %1546 = call dereferenceable(48) %"class.std::map.19"* @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEixEm(%"class.std::vector.14"* %4, i64 %1545) #3
  invoke void @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEC2ERKS7_(%"class.std::map.19"* %42, %"class.std::map.19"* dereferenceable(48) %1546)
          to label %1547 unwind label %695

; <label>:1547:                                   ; preds = %1543
  %1548 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE5beginEv(%"class.std::map.19"* %42) #3
  %1549 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %43, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1548, %"struct.std::_Rb_tree_node_base"** %1549, align 8
  br label %1550

; <label>:1550:                                   ; preds = %1757, %1547
  %1551 = load i32, i32* @x.96
  %1552 = load i32, i32* @y.97
  %1553 = sub i32 0, 1
  %1554 = add i32 %1551, %1553
  %1555 = sub i32 %1551, 1
  %1556 = mul i32 %1551, %1554
  %1557 = urem i32 %1556, 2
  %1558 = icmp eq i32 %1557, 0
  %1559 = icmp slt i32 %1552, 10
  %1560 = and i1 %1558, %1559
  %1561 = xor i1 %1558, %1559
  %1562 = or i1 %1560, %1561
  %1563 = or i1 %1558, %1559
  br i1 %1562, label %1564, label %2025

; <label>:1564:                                   ; preds = %1550, %2025
  %1565 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE3endEv(%"class.std::map.19"* %42) #3
  %1566 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %44, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1565, %"struct.std::_Rb_tree_node_base"** %1566, align 8
  %1567 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEneERKS4_(%"struct.std::_Rb_tree_iterator"* %43, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %44) #3
  %1568 = load i32, i32* @x.96
  %1569 = load i32, i32* @y.97
  %1570 = sub i32 %1568, -1793324597
  %1571 = sub i32 %1570, 1
  %1572 = add i32 %1571, -1793324597
  %1573 = sub i32 %1568, 1
  %1574 = mul i32 %1568, %1572
  %1575 = urem i32 %1574, 2
  %1576 = icmp eq i32 %1575, 0
  %1577 = icmp slt i32 %1569, 10
  %1578 = xor i1 %1576, true
  %1579 = xor i1 %1577, true
  %1580 = xor i1 true, true
  %1581 = and i1 %1578, true
  %1582 = and i1 %1576, %1580
  %1583 = and i1 %1579, true
  %1584 = and i1 %1577, %1580
  %1585 = or i1 %1581, %1582
  %1586 = or i1 %1583, %1584
  %1587 = xor i1 %1585, %1586
  %1588 = or i1 %1578, %1579
  %1589 = xor i1 %1588, true
  %1590 = or i1 true, %1580
  %1591 = and i1 %1589, %1590
  %1592 = or i1 %1587, %1591
  %1593 = or i1 %1576, %1577
  br i1 %1592, label %1594, label %2025

; <label>:1594:                                   ; preds = %1564
  br i1 %1567, label %1595, label %1758

; <label>:1595:                                   ; preds = %1594
  %1596 = load i32, i32* @x.96
  %1597 = load i32, i32* @y.97
  %1598 = add i32 %1596, 303091640
  %1599 = sub i32 %1598, 1
  %1600 = sub i32 %1599, 303091640
  %1601 = sub i32 %1596, 1
  %1602 = mul i32 %1596, %1600
  %1603 = urem i32 %1602, 2
  %1604 = icmp eq i32 %1603, 0
  %1605 = icmp slt i32 %1597, 10
  %1606 = and i1 %1604, %1605
  %1607 = xor i1 %1604, %1605
  %1608 = or i1 %1606, %1607
  %1609 = or i1 %1604, %1605
  br i1 %1608, label %1610, label %2029

; <label>:1610:                                   ; preds = %1595, %2029
  %1611 = call %"struct.std::pair.26"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEptEv(%"struct.std::_Rb_tree_iterator"* %43) #3
  %1612 = getelementptr inbounds %"struct.std::pair.26", %"struct.std::pair.26"* %1611, i32 0, i32 1
  %1613 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %1612, i32 0, i32 1
  %1614 = load i8, i8* %1613, align 8
  %1615 = trunc i8 %1614 to i1
  %1616 = load i32, i32* @x.96
  %1617 = load i32, i32* @y.97
  %1618 = sub i32 %1616, -1231204493
  %1619 = sub i32 %1618, 1
  %1620 = add i32 %1619, -1231204493
  %1621 = sub i32 %1616, 1
  %1622 = mul i32 %1616, %1620
  %1623 = urem i32 %1622, 2
  %1624 = icmp eq i32 %1623, 0
  %1625 = icmp slt i32 %1617, 10
  %1626 = xor i1 %1624, true
  %1627 = xor i1 %1625, true
  %1628 = xor i1 false, true
  %1629 = and i1 %1626, false
  %1630 = and i1 %1624, %1628
  %1631 = and i1 %1627, false
  %1632 = and i1 %1625, %1628
  %1633 = or i1 %1629, %1630
  %1634 = or i1 %1631, %1632
  %1635 = xor i1 %1633, %1634
  %1636 = or i1 %1626, %1627
  %1637 = xor i1 %1636, true
  %1638 = or i1 false, %1628
  %1639 = and i1 %1637, %1638
  %1640 = or i1 %1635, %1639
  %1641 = or i1 %1624, %1625
  br i1 %1640, label %1642, label %2029

; <label>:1642:                                   ; preds = %1610
  br i1 %1615, label %1649, label %1643

; <label>:1643:                                   ; preds = %1642
  %1644 = load i64, i64* %40, align 8
  %1645 = add i64 %1644, 3764056488606899580
  %1646 = add i64 %1645, 1
  %1647 = sub i64 %1646, 3764056488606899580
  %1648 = add nsw i64 %1644, 1
  store i64 %1647, i64* %40, align 8
  br label %1649

; <label>:1649:                                   ; preds = %1643, %1642
  %1650 = load i32, i32* @x.96
  %1651 = load i32, i32* @y.97
  %1652 = add i32 %1650, 2020154874
  %1653 = sub i32 %1652, 1
  %1654 = sub i32 %1653, 2020154874
  %1655 = sub i32 %1650, 1
  %1656 = mul i32 %1650, %1654
  %1657 = urem i32 %1656, 2
  %1658 = icmp eq i32 %1657, 0
  %1659 = icmp slt i32 %1651, 10
  %1660 = xor i1 %1658, true
  %1661 = xor i1 %1659, true
  %1662 = xor i1 false, true
  %1663 = and i1 %1660, false
  %1664 = and i1 %1658, %1662
  %1665 = and i1 %1661, false
  %1666 = and i1 %1659, %1662
  %1667 = or i1 %1663, %1664
  %1668 = or i1 %1665, %1666
  %1669 = xor i1 %1667, %1668
  %1670 = or i1 %1660, %1661
  %1671 = xor i1 %1670, true
  %1672 = or i1 false, %1662
  %1673 = and i1 %1671, %1672
  %1674 = or i1 %1669, %1673
  %1675 = or i1 %1658, %1659
  br i1 %1674, label %1676, label %2035

; <label>:1676:                                   ; preds = %1649, %2035
  %1677 = load i32, i32* @x.96
  %1678 = load i32, i32* @y.97
  %1679 = sub i32 0, 1
  %1680 = add i32 %1677, %1679
  %1681 = sub i32 %1677, 1
  %1682 = mul i32 %1677, %1680
  %1683 = urem i32 %1682, 2
  %1684 = icmp eq i32 %1683, 0
  %1685 = icmp slt i32 %1678, 10
  %1686 = xor i1 %1684, true
  %1687 = xor i1 %1685, true
  %1688 = xor i1 false, true
  %1689 = and i1 %1686, false
  %1690 = and i1 %1684, %1688
  %1691 = and i1 %1687, false
  %1692 = and i1 %1685, %1688
  %1693 = or i1 %1689, %1690
  %1694 = or i1 %1691, %1692
  %1695 = xor i1 %1693, %1694
  %1696 = or i1 %1686, %1687
  %1697 = xor i1 %1696, true
  %1698 = or i1 false, %1688
  %1699 = and i1 %1697, %1698
  %1700 = or i1 %1695, %1699
  %1701 = or i1 %1684, %1685
  br i1 %1700, label %1702, label %2035

; <label>:1702:                                   ; preds = %1676
  br label %1703

; <label>:1703:                                   ; preds = %1702
  %1704 = load i32, i32* @x.96
  %1705 = load i32, i32* @y.97
  %1706 = sub i32 0, 1
  %1707 = add i32 %1704, %1706
  %1708 = sub i32 %1704, 1
  %1709 = mul i32 %1704, %1707
  %1710 = urem i32 %1709, 2
  %1711 = icmp eq i32 %1710, 0
  %1712 = icmp slt i32 %1705, 10
  %1713 = xor i1 %1711, true
  %1714 = xor i1 %1712, true
  %1715 = xor i1 true, true
  %1716 = and i1 %1713, true
  %1717 = and i1 %1711, %1715
  %1718 = and i1 %1714, true
  %1719 = and i1 %1712, %1715
  %1720 = or i1 %1716, %1717
  %1721 = or i1 %1718, %1719
  %1722 = xor i1 %1720, %1721
  %1723 = or i1 %1713, %1714
  %1724 = xor i1 %1723, true
  %1725 = or i1 true, %1715
  %1726 = and i1 %1724, %1725
  %1727 = or i1 %1722, %1726
  %1728 = or i1 %1711, %1712
  br i1 %1727, label %1729, label %2036

; <label>:1729:                                   ; preds = %1703, %2036
  %1730 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEppEi(%"struct.std::_Rb_tree_iterator"* %43, i32 0) #3
  %1731 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %45, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1730, %"struct.std::_Rb_tree_node_base"** %1731, align 8
  %1732 = load i32, i32* @x.96
  %1733 = load i32, i32* @y.97
  %1734 = sub i32 0, 1
  %1735 = add i32 %1732, %1734
  %1736 = sub i32 %1732, 1
  %1737 = mul i32 %1732, %1735
  %1738 = urem i32 %1737, 2
  %1739 = icmp eq i32 %1738, 0
  %1740 = icmp slt i32 %1733, 10
  %1741 = xor i1 %1739, true
  %1742 = xor i1 %1740, true
  %1743 = xor i1 true, true
  %1744 = and i1 %1741, true
  %1745 = and i1 %1739, %1743
  %1746 = and i1 %1742, true
  %1747 = and i1 %1740, %1743
  %1748 = or i1 %1744, %1745
  %1749 = or i1 %1746, %1747
  %1750 = xor i1 %1748, %1749
  %1751 = or i1 %1741, %1742
  %1752 = xor i1 %1751, true
  %1753 = or i1 true, %1743
  %1754 = and i1 %1752, %1753
  %1755 = or i1 %1750, %1754
  %1756 = or i1 %1739, %1740
  br i1 %1755, label %1757, label %2036

; <label>:1757:                                   ; preds = %1729
  br label %1550

; <label>:1758:                                   ; preds = %1594
  call void @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEED2Ev(%"class.std::map.19"* %42) #3
  br label %1759

; <label>:1759:                                   ; preds = %1758
  %1760 = load i32, i32* %41, align 4
  %1761 = sub i32 0, 1
  %1762 = sub i32 %1760, %1761
  %1763 = add nsw i32 %1760, 1
  store i32 %1762, i32* %41, align 4
  br label %1510

; <label>:1764:                                   ; preds = %1542
  %1765 = load i64, i64* %40, align 8
  %1766 = sdiv i64 %1765, 2
  %1767 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %1766)
          to label %1768 unwind label %695

; <label>:1768:                                   ; preds = %1764
  %1769 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1767, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %1770 unwind label %695

; <label>:1770:                                   ; preds = %1768
  store i32 0, i32* %1, align 4
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.0"* %14) #3
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.0"* %8) #3
  call void @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EED2Ev(%"class.std::vector.14"* %4) #3
  %1771 = load i32, i32* %1, align 4
  ret i32 %1771

; <label>:1772:                                   ; preds = %740, %434
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.0"* %8) #3
  br label %1773

; <label>:1773:                                   ; preds = %1772, %269
  call void @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EED2Ev(%"class.std::vector.14"* %4) #3
  br label %1774

; <label>:1774:                                   ; preds = %1773, %257
  %1775 = load i8*, i8** %6, align 8
  %1776 = load i32, i32* %7, align 4
  %1777 = insertvalue { i8*, i32 } undef, i8* %1775, 0
  %1778 = insertvalue { i8*, i32 } %1777, i32 %1776, 1
  resume { i8*, i32 } %1778

; <label>:1779:                                   ; preds = %84, %57
  call void @_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEED2Ev(%"class.std::allocator.16"* %5) #3
  %1780 = load i64, i64* %2, align 8
  %1781 = load i64, i64* %2, align 8
  store i64 1000000000000000000, i64* %10, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator"* %11) #3
  br label %84

; <label>:1782:                                   ; preds = %129, %114
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.2"* %12) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %9) #3
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %11) #3
  store i32 0, i32* %13, align 4
  br label %129

; <label>:1783:                                   ; preds = %177, %150
  %1784 = load i32, i32* %13, align 4
  %1785 = sext i32 %1784 to i64
  %1786 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %1785) #3
  %1787 = load i32, i32* %13, align 4
  %1788 = sext i32 %1787 to i64
  %1789 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %1786, i64 %1788) #3
  store i64 0, i64* %1789, align 8
  br label %177

; <label>:1790:                                   ; preds = %225, %211
  %1791 = load i32, i32* %13, align 4
  %1792 = sub i32 0, 1
  %1793 = add i32 %1791, %1792
  %1794 = sub i32 %1791, 1
  %1795 = mul i32 %1793, 1
  %1796 = shl i32 %1791, 1
  %1797 = sub i32 %1791, 689480615
  %1798 = sub i32 %1797, 1
  %1799 = add i32 %1798, 689480615
  %1800 = sub i32 %1791, 1
  %1801 = mul i32 %1799, 1
  %1802 = sub i32 %1791, -410196770
  %1803 = sub i32 %1802, 1
  %1804 = add i32 %1803, -410196770
  %1805 = sub i32 %1791, 1
  %1806 = mul i32 %1804, 1
  %1807 = sub i32 0, 1488095488
  %1808 = sub i32 %1807, %1791
  %1809 = add i32 %1808, 1488095488
  %1810 = sub i32 0, %1791
  %1811 = add i32 %1809, 1701681971
  %1812 = add i32 %1811, 1
  %1813 = sub i32 %1812, 1701681971
  %1814 = add i32 %1809, 1
  %1815 = sub i32 0, %1791
  %1816 = sub i32 0, 1
  %1817 = add i32 %1815, %1816
  %1818 = sub i32 0, %1817
  %1819 = add nsw i32 %1791, 1
  store i32 %1818, i32* %13, align 4
  br label %225

; <label>:1820:                                   ; preds = %296, %270
  %1821 = load i64, i64* %2, align 8
  %1822 = load i64, i64* %2, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator"* %16) #3
  br label %296

; <label>:1823:                                   ; preds = %374, %347
  %1824 = load i32, i32* %19, align 4
  %1825 = shl i32 %1824, 1
  %1826 = sub i32 0, %1824
  %1827 = sub i32 0, 1
  %1828 = add i32 %1826, %1827
  %1829 = sub i32 0, %1828
  %1830 = add nsw i32 %1824, 1
  store i32 %1829, i32* %19, align 4
  br label %374

; <label>:1831:                                   ; preds = %419, %404
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %16) #3
  br label %419

; <label>:1832:                                   ; preds = %456, %442
  %1833 = load i32, i32* %20, align 4
  %1834 = sext i32 %1833 to i64
  %1835 = load i64, i64* %3, align 8
  %1836 = icmp slt i64 %1834, %1835
  br label %456

; <label>:1837:                                   ; preds = %501, %475
  br label %501

; <label>:1838:                                   ; preds = %534, %519
  br label %534

; <label>:1839:                                   ; preds = %577, %551
  %1840 = load i64, i64* %21, align 8
  %1841 = shl i64 %1840, -1
  %1842 = sub i64 0, -1
  %1843 = add i64 %1840, %1842
  %1844 = sub i64 %1840, -1
  %1845 = mul i64 %1843, -1
  %1846 = shl i64 %1840, -1
  %1847 = shl i64 %1840, -1
  %1848 = sub i64 %1840, 8945593336019444785
  %1849 = sub i64 %1848, -1
  %1850 = add i64 %1849, 8945593336019444785
  %1851 = sub i64 %1840, -1
  %1852 = mul i64 %1850, -1
  %1853 = sub i64 %1840, -907671703086737793
  %1854 = sub i64 %1853, -1
  %1855 = add i64 %1854, -907671703086737793
  %1856 = sub i64 %1840, -1
  %1857 = mul i64 %1855, -1
  %1858 = sub i64 %1840, -7146870947592674156
  %1859 = sub i64 %1858, -1
  %1860 = add i64 %1859, -7146870947592674156
  %1861 = sub i64 %1840, -1
  %1862 = mul i64 %1860, -1
  %1863 = sub i64 0, %1840
  %1864 = sub i64 0, -1
  %1865 = add i64 %1863, %1864
  %1866 = sub i64 0, %1865
  %1867 = add nsw i64 %1840, -1
  store i64 %1866, i64* %21, align 8
  %1868 = load i64, i64* %22, align 8
  %1869 = add i64 0, -8320835686745965832
  %1870 = sub i64 %1869, %1868
  %1871 = sub i64 %1870, -8320835686745965832
  %1872 = sub i64 0, %1868
  %1873 = sub i64 %1871, 7556559440920881306
  %1874 = add i64 %1873, -1
  %1875 = add i64 %1874, 7556559440920881306
  %1876 = add i64 %1871, -1
  %1877 = shl i64 %1868, -1
  %1878 = shl i64 %1868, -1
  %1879 = shl i64 %1868, -1
  %1880 = add i64 %1868, 6464475382867323232
  %1881 = add i64 %1880, -1
  %1882 = sub i64 %1881, 6464475382867323232
  %1883 = add nsw i64 %1868, -1
  store i64 %1882, i64* %22, align 8
  store i8 0, i8* %25, align 1
  br label %577

; <label>:1884:                                   ; preds = %654, %628
  %1885 = bitcast %"struct.std::pair.24"* %26 to { i64, i8 }*
  %1886 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1885, i32 0, i32 0
  %1887 = extractvalue { i64, i8 } %627, 0
  store i64 %1887, i64* %1886, align 8
  %1888 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1885, i32 0, i32 1
  %1889 = extractvalue { i64, i8 } %627, 1
  store i8 %1889, i8* %1888, align 8
  %1890 = load i64, i64* %22, align 8
  %1891 = call dereferenceable(48) %"class.std::map.19"* @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEixEm(%"class.std::vector.14"* %4, i64 %1890) #3
  br label %654

; <label>:1892:                                   ; preds = %722, %695
  %1893 = landingpad { i8*, i32 }
          cleanup
  %1894 = extractvalue { i8*, i32 } %1893, 0
  store i8* %1894, i8** %6, align 8
  %1895 = extractvalue { i8*, i32 } %1893, 1
  store i32 %1895, i32* %7, align 4
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector.0"* %14) #3
  br label %722

; <label>:1896:                                   ; preds = %774, %747
  store i32 0, i32* %29, align 4
  br label %774

; <label>:1897:                                   ; preds = %822, %795
  store i32 0, i32* %30, align 4
  br label %822

; <label>:1898:                                   ; preds = %877, %850
  %1899 = load i32, i32* %30, align 4
  %1900 = sext i32 %1899 to i64
  %1901 = load i64, i64* %2, align 8
  %1902 = icmp slt i64 %1900, %1901
  br label %877

; <label>:1903:                                   ; preds = %952, %937
  %1904 = load i32, i32* %29, align 4
  %1905 = sext i32 %1904 to i64
  %1906 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %1905) #3
  %1907 = load i32, i32* %28, align 4
  %1908 = sext i32 %1907 to i64
  %1909 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %1906, i64 %1908) #3
  %1910 = load i64, i64* %1909, align 8
  %1911 = load i32, i32* %28, align 4
  %1912 = sext i32 %1911 to i64
  %1913 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %1912) #3
  %1914 = load i32, i32* %30, align 4
  %1915 = sext i32 %1914 to i64
  %1916 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %1913, i64 %1915) #3
  %1917 = load i64, i64* %1916, align 8
  %1918 = add i64 %1910, -3864689492039209795
  %1919 = sub i64 %1918, %1917
  %1920 = sub i64 %1919, -3864689492039209795
  %1921 = sub i64 %1910, %1917
  %1922 = mul i64 %1920, %1917
  %1923 = sub i64 0, 3484155340107167888
  %1924 = sub i64 %1923, %1910
  %1925 = add i64 %1924, 3484155340107167888
  %1926 = sub i64 0, %1910
  %1927 = sub i64 0, %1925
  %1928 = sub i64 0, %1917
  %1929 = add i64 %1927, %1928
  %1930 = sub i64 0, %1929
  %1931 = add i64 %1925, %1917
  %1932 = sub i64 0, -6888918707089760366
  %1933 = sub i64 %1932, %1910
  %1934 = add i64 %1933, -6888918707089760366
  %1935 = sub i64 0, %1910
  %1936 = sub i64 0, %1917
  %1937 = sub i64 %1934, %1936
  %1938 = add i64 %1934, %1917
  %1939 = sub i64 %1910, 6464589316602602131
  %1940 = add i64 %1939, %1917
  %1941 = add i64 %1940, 6464589316602602131
  %1942 = add nsw i64 %1910, %1917
  %1943 = load i32, i32* %29, align 4
  %1944 = sext i32 %1943 to i64
  %1945 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %8, i64 %1944) #3
  %1946 = load i32, i32* %30, align 4
  %1947 = sext i32 %1946 to i64
  %1948 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %1945, i64 %1947) #3
  store i64 %1941, i64* %1948, align 8
  %1949 = load i32, i32* %29, align 4
  %1950 = sext i32 %1949 to i64
  %1951 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %14, i64 %1950) #3
  %1952 = load i32, i32* %28, align 4
  %1953 = sext i32 %1952 to i64
  %1954 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %1951, i64 %1953) #3
  %1955 = load i64, i64* %1954, align 8
  %1956 = load i32, i32* %29, align 4
  %1957 = sext i32 %1956 to i64
  %1958 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector.0"* %14, i64 %1957) #3
  %1959 = load i32, i32* %30, align 4
  %1960 = sext i32 %1959 to i64
  %1961 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %1958, i64 %1960) #3
  store i64 %1955, i64* %1961, align 8
  br label %952

; <label>:1962:                                   ; preds = %1044, %1017
  br label %1044

; <label>:1963:                                   ; preds = %1093, %1066
  %1964 = load i32, i32* %29, align 4
  %1965 = shl i32 %1964, 1
  %1966 = sub i32 %1964, -410086484
  %1967 = sub i32 %1966, 1
  %1968 = add i32 %1967, -410086484
  %1969 = sub i32 %1964, 1
  %1970 = mul i32 %1968, 1
  %1971 = sub i32 %1964, 1123138027
  %1972 = add i32 %1971, 1
  %1973 = add i32 %1972, 1123138027
  %1974 = add nsw i32 %1964, 1
  store i32 %1973, i32* %29, align 4
  br label %1093

; <label>:1975:                                   ; preds = %1138, %1112
  br label %1138

; <label>:1976:                                   ; preds = %1181, %1166
  %1977 = load i32, i32* %28, align 4
  %1978 = sub i32 0, %1977
  %1979 = add i32 0, %1978
  %1980 = sub i32 0, %1977
  %1981 = sub i32 0, %1979
  %1982 = sub i32 0, 1
  %1983 = add i32 %1981, %1982
  %1984 = sub i32 0, %1983
  %1985 = add i32 %1979, 1
  %1986 = sub i32 0, %1977
  %1987 = add i32 0, %1986
  %1988 = sub i32 0, %1977
  %1989 = sub i32 0, 1
  %1990 = sub i32 %1987, %1989
  %1991 = add i32 %1987, 1
  %1992 = sub i32 0, -1208523868
  %1993 = sub i32 %1992, %1977
  %1994 = add i32 %1993, -1208523868
  %1995 = sub i32 0, %1977
  %1996 = add i32 %1994, -1444901193
  %1997 = add i32 %1996, 1
  %1998 = sub i32 %1997, -1444901193
  %1999 = add i32 %1994, 1
  %2000 = sub i32 %1977, -795278409
  %2001 = add i32 %2000, 1
  %2002 = add i32 %2001, -795278409
  %2003 = add nsw i32 %1977, 1
  store i32 %2002, i32* %28, align 4
  br label %1181

; <label>:2004:                                   ; preds = %1216, %1202
  store i32 0, i32* %31, align 4
  br label %1216

; <label>:2005:                                   ; preds = %1252, %1237
  store i32 0, i32* %32, align 4
  br label %1252

; <label>:2006:                                   ; preds = %1318, %1291
  %2007 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %1290, i32 0, i32 0
  %2008 = load i64, i64* %2007, align 8
  store i64 %2008, i64* %35, align 8
  store i8 1, i8* %37, align 1
  br label %1318

; <label>:2009:                                   ; preds = %1383, %1357
  %2010 = call dereferenceable(16) %"struct.std::pair.24"* @_ZNSt4pairIxbEaSEOS0_(%"struct.std::pair.24"* %1356, %"struct.std::pair.24"* dereferenceable(16) %36) #3
  store i8 1, i8* %39, align 1
  br label %1383

; <label>:2011:                                   ; preds = %1416, %1401
  %2012 = bitcast %"struct.std::pair.24"* %38 to { i64, i8 }*
  %2013 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %2012, i32 0, i32 0
  %2014 = extractvalue { i64, i8 } %1400, 0
  store i64 %2014, i64* %2013, align 8
  %2015 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %2012, i32 0, i32 1
  %2016 = extractvalue { i64, i8 } %1400, 1
  store i8 %2016, i8* %2015, align 8
  %2017 = load i64, i64* %34, align 8
  %2018 = call dereferenceable(48) %"class.std::map.19"* @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEixEm(%"class.std::vector.14"* %4, i64 %2017) #3
  br label %1416

; <label>:2019:                                   ; preds = %1476, %1449
  br label %1476

; <label>:2020:                                   ; preds = %1524, %1510
  %2021 = load i32, i32* %41, align 4
  %2022 = sext i32 %2021 to i64
  %2023 = load i64, i64* %2, align 8
  %2024 = icmp slt i64 %2022, %2023
  br label %1524

; <label>:2025:                                   ; preds = %1564, %1550
  %2026 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE3endEv(%"class.std::map.19"* %42) #3
  %2027 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %44, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2026, %"struct.std::_Rb_tree_node_base"** %2027, align 8
  %2028 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEneERKS4_(%"struct.std::_Rb_tree_iterator"* %43, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %44) #3
  br label %1564

; <label>:2029:                                   ; preds = %1610, %1595
  %2030 = call %"struct.std::pair.26"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEptEv(%"struct.std::_Rb_tree_iterator"* %43) #3
  %2031 = getelementptr inbounds %"struct.std::pair.26", %"struct.std::pair.26"* %2030, i32 0, i32 1
  %2032 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %2031, i32 0, i32 1
  %2033 = load i8, i8* %2032, align 8
  %2034 = trunc i8 %2033 to i1
  br label %1610

; <label>:2035:                                   ; preds = %1676, %1649
  br label %1676

; <label>:2036:                                   ; preds = %1729, %1703
  %2037 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEppEi(%"struct.std::_Rb_tree_iterator"* %43, i32 0) #3
  %2038 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %45, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2037, %"struct.std::_Rb_tree_node_base"** %2038, align 8
  br label %1729
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEEC2Ev(%"class.std::allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %2, align 8
  %3 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %2, align 8
  %4 = bitcast %"class.std::allocator.16"* %3 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEEC2Ev(%"class.__gnu_cxx::new_allocator.17"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEC2EmRKS9_(%"class.std::vector.14"*, i64, %"class.std::allocator.16"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.14"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.16"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.16"* %2, %"class.std::allocator.16"** %6, align 8
  %9 = load %"class.std::vector.14"*, %"class.std::vector.14"** %4, align 8
  %10 = bitcast %"class.std::vector.14"* %9 to %"struct.std::_Vector_base.15"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %6, align 8
  call void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEC2EmRKS9_(%"struct.std::_Vector_base.15"* %10, i64 %11, %"class.std::allocator.16"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE21_M_default_initializeEm(%"class.std::vector.14"* %9, i64 %13)
          to label %14 unwind label %56

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.100
  %16 = load i32, i32* @y.101
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %118

; <label>:28:                                     ; preds = %14, %118
  %29 = load i32, i32* @x.100
  %30 = load i32, i32* @y.101
  %31 = sub i32 %29, 691016106
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 691016106
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  br i1 %53, label %55, label %118

; <label>:55:                                     ; preds = %28
  ret void

; <label>:56:                                     ; preds = %3
  %57 = load i32, i32* @x.100
  %58 = load i32, i32* @y.101
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %119

; <label>:82:                                     ; preds = %56, %119
  %83 = landingpad { i8*, i32 }
          cleanup
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %7, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %8, align 4
  %86 = bitcast %"class.std::vector.14"* %9 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EED2Ev(%"struct.std::_Vector_base.15"* %86) #3
  %87 = load i32, i32* @x.100
  %88 = load i32, i32* @y.101
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 false, true
  %99 = and i1 %96, false
  %100 = and i1 %94, %98
  %101 = and i1 %97, false
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 false, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %119

; <label>:112:                                    ; preds = %82
  br label %113

; <label>:113:                                    ; preds = %112
  %114 = load i8*, i8** %7, align 8
  %115 = load i32, i32* %8, align 4
  %116 = insertvalue { i8*, i32 } undef, i8* %114, 0
  %117 = insertvalue { i8*, i32 } %116, i32 %115, 1
  resume { i8*, i32 } %117

; <label>:118:                                    ; preds = %28, %14
  br label %28

; <label>:119:                                    ; preds = %82, %56
  %120 = landingpad { i8*, i32 }
          cleanup
  %121 = extractvalue { i8*, i32 } %120, 0
  store i8* %121, i8** %7, align 8
  %122 = extractvalue { i8*, i32 } %120, 1
  store i32 %122, i32* %8, align 4
  %123 = bitcast %"class.std::vector.14"* %9 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EED2Ev(%"struct.std::_Vector_base.15"* %123) #3
  br label %82
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEED2Ev(%"class.std::allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %2, align 8
  %3 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %2, align 8
  %4 = bitcast %"class.std::allocator.16"* %3 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEED2Ev(%"class.__gnu_cxx::new_allocator.17"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64, i8 } @_ZSt9make_pairIRxbESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i64* dereferenceable(8), i8* dereferenceable(1)) #0 comdat {
  %3 = alloca %"struct.std::pair.24", align 8
  %4 = alloca i64*, align 8
  %5 = alloca i8*, align 8
  store i64* %0, i64** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %6) #3
  %8 = load i8*, i8** %5, align 8
  %9 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %8) #3
  call void @_ZNSt4pairIxbEC2IRxbvEEOT_OT0_(%"struct.std::pair.24"* %3, i64* dereferenceable(8) %7, i8* dereferenceable(1) %9)
  %10 = bitcast %"struct.std::pair.24"* %3 to { i64, i8 }*
  %11 = load { i64, i8 }, { i64, i8 }* %10, align 8
  ret { i64, i8 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.std::map.19"* @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEixEm(%"class.std::vector.14"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.14"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %6 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::map.19"*, %"class.std::map.19"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %9, i64 %10
  ret %"class.std::map.19"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.24"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEixERS4_(%"class.std::map.19"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::map.19"*
  %5 = alloca %"class.std::map.19"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %8 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %9 = alloca %"struct.std::less", align 1
  %10 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_const_iterator.37", align 8
  %12 = alloca %"class.std::tuple.34", align 8
  %13 = alloca %"class.std::tuple.31", align 1
  store %"class.std::map.19"* %0, %"class.std::map.19"** %5, align 8
  store i64* %1, i64** %6, align 8
  %14 = load %"class.std::map.19"*, %"class.std::map.19"** %5, align 8
  store %"class.std::map.19"* %14, %"class.std::map.19"** %4
  %15 = load i64*, i64** %6, align 8
  %16 = load volatile %"class.std::map.19"*, %"class.std::map.19"** %4
  %17 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE11lower_boundERS4_(%"class.std::map.19"* %16, i64* dereferenceable(8) %15)
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %19 = load volatile %"class.std::map.19"*, %"class.std::map.19"** %4
  %20 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE3endEv(%"class.std::map.19"* %19) #3
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %22 = alloca i32
  store i32 -1560480937, i32* %22
  %23 = alloca i1
  br label %24

; <label>:24:                                     ; preds = %2, %89
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -1560480937, label %27
    i32 1453295313, label %30
    i32 743448922, label %45
    i32 911394109, label %65
    i32 -1374329348, label %67
    i32 -1755923659, label %70
    i32 -2097514274, label %80
    i32 2065882601, label %83
  ]

; <label>:26:                                     ; preds = %24
  br label %89

; <label>:27:                                     ; preds = %24
  %28 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEeqERKS4_(%"struct.std::_Rb_tree_iterator"* %7, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %8) #3
  %29 = select i1 %28, i32 -1374329348, i32 1453295313
  store i32 %29, i32* %22
  store i1 true, i1* %23
  br label %89

; <label>:30:                                     ; preds = %24
  %31 = load i32, i32* @x.108
  %32 = load i32, i32* @y.109
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 743448922, i32 2065882601
  store i32 %44, i32* %22
  br label %89

; <label>:45:                                     ; preds = %24
  %46 = load volatile %"class.std::map.19"*, %"class.std::map.19"** %4
  call void @_ZNKSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE8key_compEv(%"class.std::map.19"* %46)
  %47 = load i64*, i64** %6, align 8
  %48 = call dereferenceable(24) %"struct.std::pair.26"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEdeEv(%"struct.std::_Rb_tree_iterator"* %7) #3
  %49 = getelementptr inbounds %"struct.std::pair.26", %"struct.std::pair.26"* %48, i32 0, i32 0
  %50 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %9, i64* dereferenceable(8) %47, i64* dereferenceable(8) %49)
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.108
  %52 = load i32, i32* @y.109
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 911394109, i32 2065882601
  store i32 %64, i32* %22
  br label %89

; <label>:65:                                     ; preds = %24
  store i32 -1374329348, i32* %22
  %66 = load volatile i1, i1* %3
  store i1 %66, i1* %23
  br label %89

; <label>:67:                                     ; preds = %24
  %68 = load i1, i1* %23
  %69 = select i1 %68, i32 -1755923659, i32 -2097514274
  store i32 %69, i32* %22
  br label %89

; <label>:70:                                     ; preds = %24
  %71 = load volatile %"class.std::map.19"*, %"class.std::map.19"** %4
  %72 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %71, i32 0, i32 0
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxS0_IxbEEEC2ERKSt17_Rb_tree_iteratorIS3_E(%"struct.std::_Rb_tree_const_iterator.37"* %11, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %7) #3
  %73 = load i64*, i64** %6, align 8
  call void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple.34"* %12, i64* dereferenceable(8) %73)
  %74 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.37", %"struct.std::_Rb_tree_const_iterator.37"* %11, i32 0, i32 0
  %75 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %76 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESE_IJEEEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EDpOT_(%"class.std::_Rb_tree.20"* %72, %"struct.std::_Rb_tree_node_base"* %75, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple.34"* dereferenceable(8) %12, %"class.std::tuple.31"* dereferenceable(1) %13)
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %76, %"struct.std::_Rb_tree_node_base"** %77, align 8
  %78 = bitcast %"struct.std::_Rb_tree_iterator"* %7 to i8*
  %79 = bitcast %"struct.std::_Rb_tree_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 8, i1 false)
  store i32 -2097514274, i32* %22
  br label %89

; <label>:80:                                     ; preds = %24
  %81 = call dereferenceable(24) %"struct.std::pair.26"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEdeEv(%"struct.std::_Rb_tree_iterator"* %7) #3
  %82 = getelementptr inbounds %"struct.std::pair.26", %"struct.std::pair.26"* %81, i32 0, i32 1
  ret %"struct.std::pair.24"* %82

; <label>:83:                                     ; preds = %24
  %84 = load volatile %"class.std::map.19"*, %"class.std::map.19"** %4
  call void @_ZNKSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE8key_compEv(%"class.std::map.19"* %84)
  %85 = load i64*, i64** %6, align 8
  %86 = call dereferenceable(24) %"struct.std::pair.26"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEdeEv(%"struct.std::_Rb_tree_iterator"* %7) #3
  %87 = getelementptr inbounds %"struct.std::pair.26", %"struct.std::pair.26"* %86, i32 0, i32 0
  %88 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %9, i64* dereferenceable(8) %85, i64* dereferenceable(8) %87)
  store i32 743448922, i32* %22
  br label %89

; <label>:89:                                     ; preds = %83, %70, %67, %65, %45, %30, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.24"* @_ZNSt4pairIxbEaSEOS0_(%"struct.std::pair.24"*, %"struct.std::pair.24"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca %"struct.std::pair.24"*, align 8
  %4 = alloca %"struct.std::pair.24"*, align 8
  store %"struct.std::pair.24"* %0, %"struct.std::pair.24"** %3, align 8
  store %"struct.std::pair.24"* %1, %"struct.std::pair.24"** %4, align 8
  %5 = load %"struct.std::pair.24"*, %"struct.std::pair.24"** %3, align 8
  %6 = load %"struct.std::pair.24"*, %"struct.std::pair.24"** %4, align 8
  %7 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %6, i32 0, i32 0
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %5, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = load %"struct.std::pair.24"*, %"struct.std::pair.24"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %11, i32 0, i32 1
  %13 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %12) #3
  %14 = load i8, i8* %13, align 1
  %15 = trunc i8 %14 to i1
  %16 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %5, i32 0, i32 1
  %17 = zext i1 %15 to i8
  store i8 %17, i8* %16, align 8
  ret %"struct.std::pair.24"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEC2ERKS7_(%"class.std::map.19"*, %"class.std::map.19"* dereferenceable(48)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.112
  %6 = load i32, i32* @y.113
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1453754051, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1453754051, label %18
    i32 2141181424, label %38
    i32 446635844, label %72
    i32 425764797, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2141181424, i32 425764797
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::map.19"*, align 8
  %40 = alloca %"class.std::map.19"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %39, align 8
  store %"class.std::map.19"* %1, %"class.std::map.19"** %40, align 8
  %41 = load %"class.std::map.19"*, %"class.std::map.19"** %39, align 8
  %42 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %41, i32 0, i32 0
  %43 = load %"class.std::map.19"*, %"class.std::map.19"** %40, align 8
  %44 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %43, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EEC2ERKS9_(%"class.std::_Rb_tree.20"* %42, %"class.std::_Rb_tree.20"* dereferenceable(48) %44)
  %45 = load i32, i32* @x.112
  %46 = load i32, i32* @y.113
  %47 = sub i32 %45, -823753903
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -823753903
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 446635844, i32 425764797
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::map.19"*, align 8
  %75 = alloca %"class.std::map.19"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %74, align 8
  store %"class.std::map.19"* %1, %"class.std::map.19"** %75, align 8
  %76 = load %"class.std::map.19"*, %"class.std::map.19"** %74, align 8
  %77 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %76, i32 0, i32 0
  %78 = load %"class.std::map.19"*, %"class.std::map.19"** %75, align 8
  %79 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %78, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EEC2ERKS9_(%"class.std::_Rb_tree.20"* %77, %"class.std::_Rb_tree.20"* dereferenceable(48) %79)
  store i32 2141181424, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE5beginEv(%"class.std::map.19"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::map.19"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %3, align 8
  %4 = load %"class.std::map.19"*, %"class.std::map.19"** %3, align 8
  %5 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE5beginEv(%"class.std::_Rb_tree.20"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEneERKS4_(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE3endEv(%"class.std::map.19"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::map.19"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %3, align 8
  %4 = load %"class.std::map.19"*, %"class.std::map.19"** %3, align 8
  %5 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE3endEv(%"class.std::_Rb_tree.20"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.26"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEptEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.28"*
  %7 = invoke %"struct.std::pair.26"* @_ZNSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.28"* %6)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret %"struct.std::pair.26"* %7

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEppEi(%"struct.std::_Rb_tree_iterator"*, i32) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %5 = alloca i32, align 4
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %7 = bitcast %"struct.std::_Rb_tree_iterator"* %3 to i8*
  %8 = bitcast %"struct.std::_Rb_tree_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 8, i1 false)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %10) #13
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret %"struct.std::_Rb_tree_node_base"* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEED2Ev(%"class.std::map.19"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::map.19"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %2, align 8
  %3 = load %"class.std::map.19"*, %"class.std::map.19"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EED2Ev(%"class.std::_Rb_tree.20"* %4) #3
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EED2Ev(%"class.std::vector.14"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.14"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %2, align 8
  %5 = load %"class.std::vector.14"*, %"class.std::vector.14"** %2, align 8
  %6 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::map.19"*, %"class.std::map.19"** %8, align 8
  %10 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::map.19"*, %"class.std::map.19"** %12, align 8
  %14 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %15 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %14) #3
  invoke void @_ZSt8_DestroyIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEES8_EvT_SA_RSaIT0_E(%"class.std::map.19"* %9, %"class.std::map.19"* %13, %"class.std::allocator.16"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EED2Ev(%"struct.std::_Vector_base.15"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EED2Ev(%"struct.std::_Vector_base.15"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEC2Ev(%"class.std::map"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %2, align 8
  %3 = load %"class.std::map"*, %"class.std::map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map", %"class.std::map"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEC2Ev(%"class.std::_Rb_tree"* %4)
          to label %5 unwind label %60

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.128
  %7 = load i32, i32* @y.129
  %8 = add i32 %6, -2026137315
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -2026137315
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 true, true
  %19 = and i1 %16, true
  %20 = and i1 %14, %18
  %21 = and i1 %17, true
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 true, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %105

; <label>:32:                                     ; preds = %5, %105
  %33 = load i32, i32* @x.128
  %34 = load i32, i32* @y.129
  %35 = sub i32 %33, -1842436480
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1842436480
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %105

; <label>:59:                                     ; preds = %32
  ret void

; <label>:60:                                     ; preds = %1
  %61 = load i32, i32* @x.128
  %62 = load i32, i32* @y.129
  %63 = sub i32 %61, -2140908448
  %64 = sub i32 %63, 1
  %65 = add i32 %64, -2140908448
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %106

; <label>:75:                                     ; preds = %60, %106
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  call void @__clang_call_terminate(i8* %77) #11
  %78 = load i32, i32* @x.128
  %79 = load i32, i32* @y.129
  %80 = add i32 %78, -466620495
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -466620495
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %106

; <label>:104:                                    ; preds = %75
  unreachable

; <label>:105:                                    ; preds = %32, %5
  br label %32

; <label>:106:                                    ; preds = %75, %60
  %107 = landingpad { i8*, i32 }
          catch i8* null
  %108 = extractvalue { i8*, i32 } %107, 0
  call void @__clang_call_terminate(i8* %108) #11
  br label %75
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEC2Ev(%"class.std::_Rb_tree"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %5 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5 to %"class.std::allocator.5"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.std::allocator.5"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %9 = bitcast %"struct.std::_Rb_tree_node_base"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 32, i32 8, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 2
  store i64 0, i64* %10, align 8
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5)
          to label %11 unwind label %54

; <label>:11:                                     ; preds = %1
  %12 = load i32, i32* @x.134
  %13 = load i32, i32* @y.135
  %14 = sub i32 %12, -125819464
  %15 = sub i32 %14, 1
  %16 = add i32 %15, -125819464
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  br i1 %24, label %26, label %93

; <label>:26:                                     ; preds = %11, %93
  %27 = load i32, i32* @x.134
  %28 = load i32, i32* @y.135
  %29 = add i32 %27, -1139153803
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, -1139153803
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %93

; <label>:53:                                     ; preds = %26
  ret void

; <label>:54:                                     ; preds = %1
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %3, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %4, align 4
  %58 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5 to %"class.std::allocator.5"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.std::allocator.5"* %58) #3
  br label %59

; <label>:59:                                     ; preds = %54
  %60 = load i32, i32* @x.134
  %61 = load i32, i32* @y.135
  %62 = sub i32 %60, 607643615
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 607643615
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %94

; <label>:74:                                     ; preds = %59, %94
  %75 = load i8*, i8** %3, align 8
  %76 = load i32, i32* %4, align 4
  %77 = insertvalue { i8*, i32 } undef, i8* %75, 0
  %78 = insertvalue { i8*, i32 } %77, i32 %76, 1
  %79 = load i32, i32* @x.134
  %80 = load i32, i32* @y.135
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %94

; <label>:92:                                     ; preds = %74
  resume { i8*, i32 } %78

; <label>:93:                                     ; preds = %26, %11
  br label %26

; <label>:94:                                     ; preds = %74, %59
  %95 = load i8*, i8** %3, align 8
  %96 = load i32, i32* %4, align 4
  %97 = insertvalue { i8*, i32 } undef, i8* %95, 0
  %98 = insertvalue { i8*, i32 } %97, i32 %96, 1
  br label %74
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.std::allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.136
  %5 = load i32, i32* @y.137
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1919470743, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1919470743, label %17
    i32 -1803542114, label %25
    i32 -446470000, label %56
    i32 -56275470, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1803542114, i32 -56275470
  store i32 %24, i32* %13
  br label %61

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %26, align 8
  %27 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %26, align 8
  %28 = bitcast %"class.std::allocator.5"* %27 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %28) #3
  %29 = load i32, i32* @x.136
  %30 = load i32, i32* @y.137
  %31 = add i32 %29, 1357422625
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1357422625
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -446470000, i32 -56275470
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %58, align 8
  %59 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %58, align 8
  %60 = bitcast %"class.std::allocator.5"* %59 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %60) #3
  store i32 -1803542114, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.std::allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.142
  %5 = load i32, i32* @y.143
  %6 = sub i32 %4, -1039477867
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1039477867
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1695436020, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1695436020, label %18
    i32 751477393, label %26
    i32 627316338, label %55
    i32 184504484, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 751477393, i32 184504484
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %27, align 8
  %29 = load i32, i32* @x.142
  %30 = load i32, i32* @y.143
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 627316338, i32 184504484
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %57, align 8
  store i32 751477393, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.144
  %5 = load i32, i32* @y.145
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -2047884135, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2047884135, label %17
    i32 -716934836, label %37
    i32 2095706012, label %55
    i32 -4105516, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -716934836, i32 -4105516
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %38, align 8
  %40 = load i32, i32* @x.144
  %41 = load i32, i32* @y.145
  %42 = sub i32 %40, 1526157153
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1526157153
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 2095706012, i32 -4105516
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %57, align 8
  store i32 -716934836, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev(%"class.std::map"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %2, align 8
  %3 = load %"class.std::map"*, %"class.std::map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map", %"class.std::map"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EED2Ev(%"class.std::_Rb_tree"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EED2Ev(%"class.std::_Rb_tree"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %6 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree"* %5) #3
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6)
          to label %7 unwind label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %8) #3
  ret void

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* @x.148
  %11 = load i32, i32* @y.149
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %11, 10
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  br i1 %21, label %23, label %57

; <label>:23:                                     ; preds = %9, %57
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %27) #3
  %28 = load i32, i32* @x.148
  %29 = load i32, i32* @y.149
  %30 = sub i32 %28, -1991070441
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1991070441
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %57

; <label>:54:                                     ; preds = %23
  br label %55

; <label>:55:                                     ; preds = %54
  %56 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %56) #11
  unreachable

; <label>:57:                                     ; preds = %23, %9
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %3, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %4, align 4
  %61 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %61) #3
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Rb_tree"*
  %5 = alloca %"struct.std::_Rb_tree_node"**
  %6 = alloca %"struct.std::_Rb_tree_node"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.150
  %10 = load i32, i32* @y.151
  %11 = sub i32 %9, 1160989539
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 1160989539
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -329269181, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %198
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -329269181, label %23
    i32 -209677794, label %43
    i32 -666914195, label %63
    i32 1153120382, label %64
    i32 231622970, label %92
    i32 488890201, label %123
    i32 2096531748, label %126
    i32 -1799049079, label %143
    i32 -1235099645, label %171
    i32 292731626, label %187
    i32 199144566, label %188
    i32 497156598, label %193
    i32 1890845631, label %197
  ]

; <label>:22:                                     ; preds = %20
  br label %198

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -209677794, i32 199144566
  store i32 %42, i32* %19
  br label %198

; <label>:43:                                     ; preds = %20
  %44 = alloca %"class.std::_Rb_tree"*, align 8
  %45 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %45, %"struct.std::_Rb_tree_node"*** %6
  %46 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %46, %"struct.std::_Rb_tree_node"*** %5
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %44, align 8
  %47 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %47, align 8
  %48 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %44, align 8
  store %"class.std::_Rb_tree"* %48, %"class.std::_Rb_tree"** %4
  %49 = load i32, i32* @x.150
  %50 = load i32, i32* @y.151
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -666914195, i32 199144566
  store i32 %62, i32* %19
  br label %198

; <label>:63:                                     ; preds = %20
  store i32 1153120382, i32* %19
  br label %198

; <label>:64:                                     ; preds = %20
  %65 = load i32, i32* @x.150
  %66 = load i32, i32* @y.151
  %67 = sub i32 %65, 831412997
  %68 = sub i32 %67, 1
  %69 = add i32 %68, 831412997
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 true, true
  %78 = and i1 %75, true
  %79 = and i1 %73, %77
  %80 = and i1 %76, true
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 true, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 231622970, i32 497156598
  store i32 %91, i32* %19
  br label %198

; <label>:92:                                     ; preds = %20
  %93 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6
  %94 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %93, align 8
  %95 = icmp ne %"struct.std::_Rb_tree_node"* %94, null
  store i1 %95, i1* %3
  %96 = load i32, i32* @x.150
  %97 = load i32, i32* @y.151
  %98 = add i32 %96, 1501994027
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, 1501994027
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 488890201, i32 497156598
  store i32 %122, i32* %19
  br label %198

; <label>:123:                                    ; preds = %20
  %124 = load volatile i1, i1* %3
  %125 = select i1 %124, i32 2096531748, i32 -1799049079
  store i32 %125, i32* %19
  br label %198

; <label>:126:                                    ; preds = %20
  %127 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6
  %128 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %127, align 8
  %129 = bitcast %"struct.std::_Rb_tree_node"* %128 to %"struct.std::_Rb_tree_node_base"*
  %130 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %129) #3
  %131 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %131, %"struct.std::_Rb_tree_node"* %130)
  %132 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6
  %133 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %132, align 8
  %134 = bitcast %"struct.std::_Rb_tree_node"* %133 to %"struct.std::_Rb_tree_node_base"*
  %135 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %134) #3
  %136 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5
  store %"struct.std::_Rb_tree_node"* %135, %"struct.std::_Rb_tree_node"** %136, align 8
  %137 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6
  %138 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %137, align 8
  %139 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %139, %"struct.std::_Rb_tree_node"* %138) #3
  %140 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5
  %141 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %140, align 8
  %142 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6
  store %"struct.std::_Rb_tree_node"* %141, %"struct.std::_Rb_tree_node"** %142, align 8
  store i32 1153120382, i32* %19
  br label %198

; <label>:143:                                    ; preds = %20
  %144 = load i32, i32* @x.150
  %145 = load i32, i32* @y.151
  %146 = sub i32 %144, 1123981558
  %147 = sub i32 %146, 1
  %148 = add i32 %147, 1123981558
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = xor i1 %152, true
  %155 = xor i1 %153, true
  %156 = xor i1 false, true
  %157 = and i1 %154, false
  %158 = and i1 %152, %156
  %159 = and i1 %155, false
  %160 = and i1 %153, %156
  %161 = or i1 %157, %158
  %162 = or i1 %159, %160
  %163 = xor i1 %161, %162
  %164 = or i1 %154, %155
  %165 = xor i1 %164, true
  %166 = or i1 false, %156
  %167 = and i1 %165, %166
  %168 = or i1 %163, %167
  %169 = or i1 %152, %153
  %170 = select i1 %168, i32 -1235099645, i32 1890845631
  store i32 %170, i32* %19
  br label %198

; <label>:171:                                    ; preds = %20
  %172 = load i32, i32* @x.150
  %173 = load i32, i32* @y.151
  %174 = add i32 %172, -811216068
  %175 = sub i32 %174, 1
  %176 = sub i32 %175, -811216068
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  %186 = select i1 %184, i32 292731626, i32 1890845631
  store i32 %186, i32* %19
  br label %198

; <label>:187:                                    ; preds = %20
  ret void

; <label>:188:                                    ; preds = %20
  %189 = alloca %"class.std::_Rb_tree"*, align 8
  %190 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %191 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %189, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %190, align 8
  %192 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %189, align 8
  store i32 -209677794, i32* %19
  br label %198

; <label>:193:                                    ; preds = %20
  %194 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6
  %195 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %194, align 8
  %196 = icmp ne %"struct.std::_Rb_tree_node"* %195, null
  store i32 231622970, i32* %19
  br label %198

; <label>:197:                                    ; preds = %20
  store i32 -1235099645, i32* %19
  br label %198

; <label>:198:                                    ; preds = %197, %193, %188, %171, %143, %126, %123, %92, %64, %63, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.std::allocator.5"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.158
  %6 = load i32, i32* @y.159
  %7 = sub i32 %5, 1165412131
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1165412131
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1365633550, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1365633550, label %19
    i32 -1252572391, label %39
    i32 -358968071, label %71
    i32 980012906, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1252572391, i32 980012906
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %41, i32 0, i32 2
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %44 = bitcast %"struct.std::_Rb_tree_node_base"* %43 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %44, %"struct.std::_Rb_tree_node"** %2
  %45 = load i32, i32* @x.158
  %46 = load i32, i32* @y.159
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -358968071, i32 980012906
  store i32 %70, i32* %15
  br label %79

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2
  ret %"struct.std::_Rb_tree_node"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %75 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %75, i32 0, i32 2
  %77 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %76, align 8
  %78 = bitcast %"struct.std::_Rb_tree_node_base"* %77 to %"struct.std::_Rb_tree_node"*
  store i32 -1252572391, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.162
  %4 = load i32, i32* @y.163
  %5 = add i32 %3, 990832691
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 990832691
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %87

; <label>:29:                                     ; preds = %2, %87
  %30 = alloca %"class.std::_Rb_tree"*, align 8
  %31 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %30, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %31, align 8
  %32 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %30, align 8
  %33 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %32) #3
  %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %31, align 8
  %35 = load i32, i32* @x.162
  %36 = load i32, i32* @y.163
  %37 = sub i32 %35, 1115013538
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 1115013538
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %87

; <label>:49:                                     ; preds = %29
  %50 = invoke %"struct.std::pair.27"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %34)
          to label %51 unwind label %84

; <label>:51:                                     ; preds = %49
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE7destroyIS3_EEvRS5_PT_(%"class.std::allocator.5"* dereferenceable(1) %33, %"struct.std::pair.27"* %50)
          to label %52 unwind label %84

; <label>:52:                                     ; preds = %51
  %53 = load i32, i32* @x.162
  %54 = load i32, i32* @y.163
  %55 = add i32 %53, 1834804294
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1834804294
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %93

; <label>:67:                                     ; preds = %52, %93
  %68 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %31, align 8
  %69 = load i32, i32* @x.162
  %70 = load i32, i32* @y.163
  %71 = sub i32 %69, -1605435664
  %72 = sub i32 %71, 1
  %73 = add i32 %72, -1605435664
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %93

; <label>:83:                                     ; preds = %67
  ret void

; <label>:84:                                     ; preds = %51, %49
  %85 = landingpad { i8*, i32 }
          catch i8* null
  %86 = extractvalue { i8*, i32 } %85, 0
  call void @__clang_call_terminate(i8* %86) #11
  unreachable

; <label>:87:                                     ; preds = %29, %2
  %88 = alloca %"class.std::_Rb_tree"*, align 8
  %89 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %88, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %89, align 8
  %90 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %88, align 8
  %91 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %90) #3
  %92 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %89, align 8
  br label %29

; <label>:93:                                     ; preds = %67, %52
  %94 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %31, align 8
  br label %67
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.164
  %4 = load i32, i32* @y.165
  %5 = sub i32 %3, 612479837
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 612479837
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %54

; <label>:29:                                     ; preds = %2, %54
  %30 = alloca %"class.std::_Rb_tree"*, align 8
  %31 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %30, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %31, align 8
  %32 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %30, align 8
  %33 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %32) #3
  %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %31, align 8
  %35 = load i32, i32* @x.164
  %36 = load i32, i32* @y.165
  %37 = sub i32 %35, -1924299415
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1924299415
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %54

; <label>:49:                                     ; preds = %29
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE10deallocateERS5_PS4_m(%"class.std::allocator.5"* dereferenceable(1) %33, %"struct.std::_Rb_tree_node"* %34, i64 1)
          to label %50 unwind label %51

; <label>:50:                                     ; preds = %49
  ret void

; <label>:51:                                     ; preds = %49
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  call void @__clang_call_terminate(i8* %53) #11
  unreachable

; <label>:54:                                     ; preds = %29, %2
  %55 = alloca %"class.std::_Rb_tree"*, align 8
  %56 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %55, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %56, align 8
  %57 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %55, align 8
  %58 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %57) #3
  %59 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %56, align 8
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE7destroyIS3_EEvRS5_PT_(%"class.std::allocator.5"* dereferenceable(1), %"struct.std::pair.27"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca %"struct.std::pair.27"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store %"struct.std::pair.27"* %1, %"struct.std::pair.27"** %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.6"* %6, %"struct.std::pair.27"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.27"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.27"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret %"struct.std::pair.27"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.6"*, %"struct.std::pair.27"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca %"struct.std::pair.27"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store %"struct.std::pair.27"* %1, %"struct.std::pair.27"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  %6 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.27"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.27"*
  ret %"struct.std::pair.27"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [16 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE10deallocateERS5_PS4_m(%"class.std::allocator.5"* dereferenceable(1), %"struct.std::_Rb_tree_node"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.178
  %7 = load i32, i32* @y.179
  %8 = sub i32 %6, -1171680687
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1171680687
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1135944268, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %60
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1135944268, label %20
    i32 1568904906, label %28
    i32 1882622553, label %51
    i32 -1150479660, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %60

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1568904906, i32 -1150479660
  store i32 %27, i32* %16
  br label %60

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.5"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %29, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %29, align 8
  %33 = bitcast %"class.std::allocator.5"* %32 to %"class.__gnu_cxx::new_allocator.6"*
  %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.6"* %33, %"struct.std::_Rb_tree_node"* %34, i64 %35)
  %36 = load i32, i32* @x.178
  %37 = load i32, i32* @y.179
  %38 = add i32 %36, 1085846734
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1085846734
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 1882622553, i32 -1150479660
  store i32 %50, i32* %16
  br label %60

; <label>:51:                                     ; preds = %17
  ret void

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.5"*, align 8
  %54 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %55 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %53, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %54, align 8
  store i64 %2, i64* %55, align 8
  %56 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %53, align 8
  %57 = bitcast %"class.std::allocator.5"* %56 to %"class.__gnu_cxx::new_allocator.6"*
  %58 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %54, align 8
  %59 = load i64, i64* %55, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.6"* %57, %"struct.std::_Rb_tree_node"* %58, i64 %59)
  store i32 1568904906, i32* %16
  br label %60

; <label>:60:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.6"*, %"struct.std::_Rb_tree_node"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.180
  %7 = load i32, i32* @y.181
  %8 = sub i32 %6, -1453937172
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1453937172
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1142946997, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1142946997, label %20
    i32 -574506169, label %28
    i32 -320737075, label %62
    i32 288773358, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -574506169, i32 288773358
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %29, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %29, align 8
  %33 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %30, align 8
  %34 = bitcast %"struct.std::_Rb_tree_node"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.180
  %36 = load i32, i32* @y.181
  %37 = sub i32 %35, -1817158398
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1817158398
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -320737075, i32 288773358
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %65 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %64, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %64, align 8
  %68 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %65, align 8
  %69 = bitcast %"struct.std::_Rb_tree_node"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -574506169, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.182
  %6 = load i32, i32* @y.183
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 64986171, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 64986171, label %18
    i32 297126131, label %26
    i32 -1711708162, label %55
    i32 1448783394, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 297126131, i32 1448783394
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca i64*, align 8
  store i64* %0, i64** %27, align 8
  %28 = load i64*, i64** %27, align 8
  store i64* %28, i64** %2
  %29 = load i32, i32* @x.182
  %30 = load i32, i32* @y.183
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1711708162, i32 1448783394
  store i32 %54, i32* %14
  br label %60

; <label>:55:                                     ; preds = %15
  %56 = load volatile i64*, i64** %2
  ret i64* %56

; <label>:57:                                     ; preds = %15
  %58 = alloca i64*, align 8
  store i64* %0, i64** %58, align 8
  %59 = load i64*, i64** %58, align 8
  store i32 297126131, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1)) #4 comdat {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.184
  %6 = load i32, i32* @y.185
  %7 = add i32 %5, -1677308069
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1677308069
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 418601322, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 418601322, label %19
    i32 154396193, label %27
    i32 -1858294639, label %56
    i32 -431338170, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 154396193, i32 -431338170
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca i8*, align 8
  store i8* %0, i8** %28, align 8
  %29 = load i8*, i8** %28, align 8
  store i8* %29, i8** %2
  %30 = load i32, i32* @x.184
  %31 = load i32, i32* @y.185
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1858294639, i32 -431338170
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile i8*, i8** %2
  ret i8* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca i8*, align 8
  store i8* %0, i8** %59, align 8
  %60 = load i8*, i8** %59, align 8
  store i32 154396193, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxbEC2IRxbvEEOT_OT0_(%"struct.std::pair.24"*, i64* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.24"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::pair.24"* %0, %"struct.std::pair.24"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::pair.24"*, %"struct.std::pair.24"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %7, i32 0, i32 1
  %13 = load i8*, i8** %6, align 8
  %14 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %13) #3
  %15 = load i8, i8* %14, align 1
  %16 = trunc i8 %15 to i1
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EED2Ev(%"class.std::_Rb_tree.20"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree.20"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %2, align 8
  %5 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %2, align 8
  %6 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_beginEv(%"class.std::_Rb_tree.20"* %5) #3
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"* %5, %"struct.std::_Rb_tree_node.28"* %6)
          to label %7 unwind label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %8) #3
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  %13 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %13) #3
  br label %14

; <label>:14:                                     ; preds = %9
  %15 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %15) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node.28"*) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree.20"*
  %4 = alloca %"struct.std::_Rb_tree_node.28"**
  %5 = alloca %"struct.std::_Rb_tree_node.28"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.190
  %9 = load i32, i32* @y.191
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1227650553, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %91
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1227650553, label %21
    i32 1088636422, label %41
    i32 -468069166, label %62
    i32 2014267607, label %63
    i32 1594746236, label %68
    i32 1855687037, label %85
    i32 -1545652699, label %86
  ]

; <label>:20:                                     ; preds = %18
  br label %91

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1088636422, i32 -1545652699
  store i32 %40, i32* %17
  br label %91

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::_Rb_tree.20"*, align 8
  %43 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"struct.std::_Rb_tree_node.28"** %43, %"struct.std::_Rb_tree_node.28"*** %5
  %44 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"struct.std::_Rb_tree_node.28"** %44, %"struct.std::_Rb_tree_node.28"*** %4
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %42, align 8
  %45 = load volatile %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %5
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %45, align 8
  %46 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %42, align 8
  store %"class.std::_Rb_tree.20"* %46, %"class.std::_Rb_tree.20"** %3
  %47 = load i32, i32* @x.190
  %48 = load i32, i32* @y.191
  %49 = add i32 %47, -615939283
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -615939283
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -468069166, i32 -1545652699
  store i32 %61, i32* %17
  br label %91

; <label>:62:                                     ; preds = %18
  store i32 2014267607, i32* %17
  br label %91

; <label>:63:                                     ; preds = %18
  %64 = load volatile %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %5
  %65 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %64, align 8
  %66 = icmp ne %"struct.std::_Rb_tree_node.28"* %65, null
  %67 = select i1 %66, i32 1594746236, i32 1855687037
  store i32 %67, i32* %17
  br label %91

; <label>:68:                                     ; preds = %18
  %69 = load volatile %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %5
  %70 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %69, align 8
  %71 = bitcast %"struct.std::_Rb_tree_node.28"* %70 to %"struct.std::_Rb_tree_node_base"*
  %72 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %71) #3
  %73 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"* %73, %"struct.std::_Rb_tree_node.28"* %72)
  %74 = load volatile %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %5
  %75 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %74, align 8
  %76 = bitcast %"struct.std::_Rb_tree_node.28"* %75 to %"struct.std::_Rb_tree_node_base"*
  %77 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %76) #3
  %78 = load volatile %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %4
  store %"struct.std::_Rb_tree_node.28"* %77, %"struct.std::_Rb_tree_node.28"** %78, align 8
  %79 = load volatile %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %5
  %80 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %79, align 8
  %81 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"* %81, %"struct.std::_Rb_tree_node.28"* %80) #3
  %82 = load volatile %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %4
  %83 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %82, align 8
  %84 = load volatile %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %5
  store %"struct.std::_Rb_tree_node.28"* %83, %"struct.std::_Rb_tree_node.28"** %84, align 8
  store i32 2014267607, i32* %17
  br label %91

; <label>:85:                                     ; preds = %18
  ret void

; <label>:86:                                     ; preds = %18
  %87 = alloca %"class.std::_Rb_tree.20"*, align 8
  %88 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %89 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %87, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %88, align 8
  %90 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %87, align 8
  store i32 1088636422, i32* %17
  br label %91

; <label>:91:                                     ; preds = %86, %68, %63, %62, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_beginEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.28"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.192
  %6 = load i32, i32* @y.193
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1938350224, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %58
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1938350224, label %18
    i32 -1316968663, label %26
    i32 -961990252, label %48
    i32 -1826213249, label %50
  ]

; <label>:17:                                     ; preds = %15
  br label %58

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1316968663, i32 -1826213249
  store i32 %25, i32* %14
  br label %58

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %27, align 8
  %28 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %27, align 8
  %29 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %29, i32 0, i32 1
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %30, i32 0, i32 1
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = bitcast %"struct.std::_Rb_tree_node_base"* %32 to %"struct.std::_Rb_tree_node.28"*
  store %"struct.std::_Rb_tree_node.28"* %33, %"struct.std::_Rb_tree_node.28"** %2
  %34 = load i32, i32* @x.192
  %35 = load i32, i32* @y.193
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -961990252, i32 -1826213249
  store i32 %47, i32* %14
  br label %58

; <label>:48:                                     ; preds = %15
  %49 = load volatile %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %2
  ret %"struct.std::_Rb_tree_node.28"* %49

; <label>:50:                                     ; preds = %15
  %51 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %51, align 8
  %52 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %51, align 8
  %53 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %53, i32 0, i32 1
  %55 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %54, i32 0, i32 1
  %56 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %55, align 8
  %57 = bitcast %"struct.std::_Rb_tree_node_base"* %56 to %"struct.std::_Rb_tree_node.28"*
  store i32 -1316968663, i32* %14
  br label %58

; <label>:58:                                     ; preds = %50, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.194
  %5 = load i32, i32* @y.195
  %6 = add i32 %4, -901734995
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -901734995
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1197856902, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1197856902, label %18
    i32 1605304216, label %26
    i32 1204298695, label %44
    i32 270735906, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1605304216, i32 270735906
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %27, align 8
  %28 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %28 to %"class.std::allocator.21"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEED2Ev(%"class.std::allocator.21"* %29) #3
  %30 = load i32, i32* @x.194
  %31 = load i32, i32* @y.195
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1204298695, i32 270735906
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %46, align 8
  %47 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %46, align 8
  %48 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %47 to %"class.std::allocator.21"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEED2Ev(%"class.std::allocator.21"* %48) #3
  store i32 1605304216, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.28"*
  ret %"struct.std::_Rb_tree_node.28"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.28"*
  ret %"struct.std::_Rb_tree_node.28"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node.28"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree.20"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %3, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %4, align 8
  %5 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"* %5, %"struct.std::_Rb_tree_node.28"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"* %5, %"struct.std::_Rb_tree_node.28"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node.28"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.20"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %3, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %4, align 8
  %5 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.21"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.20"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %4, align 8
  %8 = invoke %"struct.std::pair.26"* @_ZNSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.28"* %7)
          to label %9 unwind label %94

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.202
  %11 = load i32, i32* @y.203
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %11, 10
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  br i1 %33, label %35, label %97

; <label>:35:                                     ; preds = %9, %97
  %36 = load i32, i32* @x.202
  %37 = load i32, i32* @y.203
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %97

; <label>:49:                                     ; preds = %35
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE7destroyIS4_EEvRS6_PT_(%"class.std::allocator.21"* dereferenceable(1) %6, %"struct.std::pair.26"* %8)
          to label %50 unwind label %94

; <label>:50:                                     ; preds = %49
  %51 = load i32, i32* @x.202
  %52 = load i32, i32* @y.203
  %53 = add i32 %51, -1431066048
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1431066048
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %98

; <label>:77:                                     ; preds = %50, %98
  %78 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %4, align 8
  %79 = load i32, i32* @x.202
  %80 = load i32, i32* @y.203
  %81 = add i32 %79, 1488444151
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, 1488444151
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %98

; <label>:93:                                     ; preds = %77
  ret void

; <label>:94:                                     ; preds = %49, %2
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #11
  unreachable

; <label>:97:                                     ; preds = %35, %9
  br label %35

; <label>:98:                                     ; preds = %77, %50
  %99 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %4, align 8
  br label %77
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node.28"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.20"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %3, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %4, align 8
  %5 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.21"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.20"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.21"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node.28"* %7, i64 1)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %2
  ret void

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.204
  %11 = load i32, i32* @y.205
  %12 = sub i32 %10, 1430602744
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 1430602744
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  br i1 %22, label %24, label %53

; <label>:24:                                     ; preds = %9, %53
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  call void @__clang_call_terminate(i8* %26) #11
  %27 = load i32, i32* @x.204
  %28 = load i32, i32* @y.205
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %53

; <label>:52:                                     ; preds = %24
  unreachable

; <label>:53:                                     ; preds = %24, %9
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #11
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE7destroyIS4_EEvRS6_PT_(%"class.std::allocator.21"* dereferenceable(1), %"struct.std::pair.26"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.206
  %6 = load i32, i32* @y.207
  %7 = sub i32 %5, -896518436
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -896518436
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1545555684, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1545555684, label %19
    i32 1202970581, label %39
    i32 -1595113787, label %60
    i32 941297735, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1202970581, i32 941297735
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.21"*, align 8
  %41 = alloca %"struct.std::pair.26"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %40, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %41, align 8
  %42 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %40, align 8
  %43 = bitcast %"class.std::allocator.21"* %42 to %"class.__gnu_cxx::new_allocator.22"*
  %44 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE7destroyIS5_EEvPT_(%"class.__gnu_cxx::new_allocator.22"* %43, %"struct.std::pair.26"* %44)
  %45 = load i32, i32* @x.206
  %46 = load i32, i32* @y.207
  %47 = sub i32 %45, 1950865569
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1950865569
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1595113787, i32 941297735
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.21"*, align 8
  %63 = alloca %"struct.std::pair.26"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %62, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %63, align 8
  %64 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %62, align 8
  %65 = bitcast %"class.std::allocator.21"* %64 to %"class.__gnu_cxx::new_allocator.22"*
  %66 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %63, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE7destroyIS5_EEvPT_(%"class.__gnu_cxx::new_allocator.22"* %65, %"struct.std::pair.26"* %66)
  store i32 1202970581, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.21"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %2, align 8
  %3 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %4 to %"class.std::allocator.21"*
  ret %"class.std::allocator.21"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.26"* @_ZNSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.28"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"struct.std::_Rb_tree_node.28"* %0, %"struct.std::_Rb_tree_node.28"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", %"struct.std::_Rb_tree_node.28"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.26"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.29"* %4) #3
  ret %"struct.std::pair.26"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE7destroyIS5_EEvPT_(%"class.__gnu_cxx::new_allocator.22"*, %"struct.std::pair.26"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.212
  %6 = load i32, i32* @y.213
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2116196879, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2116196879, label %18
    i32 -119781548, label %38
    i32 775474457, label %70
    i32 1875513425, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -119781548, i32 1875513425
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  %40 = alloca %"struct.std::pair.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %39, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %39, align 8
  %42 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %40, align 8
  %43 = load i32, i32* @x.212
  %44 = load i32, i32* @y.213
  %45 = add i32 %43, -1907476727
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1907476727
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 775474457, i32 1875513425
  store i32 %69, i32* %14
  br label %76

; <label>:70:                                     ; preds = %15
  ret void

; <label>:71:                                     ; preds = %15
  %72 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  %73 = alloca %"struct.std::pair.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %72, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %73, align 8
  %74 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %72, align 8
  %75 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %73, align 8
  store i32 -119781548, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.26"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.29"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.29"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.29"* %0, %"struct.__gnu_cxx::__aligned_membuf.29"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.29"*, %"struct.__gnu_cxx::__aligned_membuf.29"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.29"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.26"*
  ret %"struct.std::pair.26"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.29"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.29"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.29"* %0, %"struct.__gnu_cxx::__aligned_membuf.29"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.29"*, %"struct.__gnu_cxx::__aligned_membuf.29"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.29", %"struct.__gnu_cxx::__aligned_membuf.29"* %3, i32 0, i32 0
  %5 = bitcast [24 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.21"* dereferenceable(1), %"struct.std::_Rb_tree_node.28"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.21"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %4, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %4, align 8
  %8 = bitcast %"class.std::allocator.21"* %7 to %"class.__gnu_cxx::new_allocator.22"*
  %9 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.22"* %8, %"struct.std::_Rb_tree_node.28"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.22"*, %"struct.std::_Rb_tree_node.28"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %4, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %4, align 8
  %8 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_node.28"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEED2Ev(%"class.__gnu_cxx::new_allocator.22"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.224
  %5 = load i32, i32* @y.225
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1675577670, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1675577670, label %17
    i32 -1952390265, label %25
    i32 1942383096, label %55
    i32 695437138, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1952390265, i32 695437138
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %26, align 8
  %28 = load i32, i32* @x.224
  %29 = load i32, i32* @y.225
  %30 = sub i32 %28, -1431953335
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1431953335
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1942383096, i32 695437138
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %57, align 8
  store i32 -1952390265, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.230
  %5 = load i32, i32* @y.231
  %6 = add i32 %4, 994243027
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 994243027
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 188976957, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %47
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 188976957, label %18
    i32 946861229, label %26
    i32 -235254691, label %43
    i32 -1466394323, label %44
  ]

; <label>:17:                                     ; preds = %15
  br label %47

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 946861229, i32 -1466394323
  store i32 %25, i32* %14
  br label %47

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %29 = load i32, i32* @x.230
  %30 = load i32, i32* @y.231
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -235254691, i32 -1466394323
  store i32 %42, i32* %14
  br label %47

; <label>:43:                                     ; preds = %15
  ret void

; <label>:44:                                     ; preds = %15
  %45 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %45, align 8
  store i32 946861229, i32* %14
  br label %47

; <label>:47:                                     ; preds = %44, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.232
  %20 = load i32, i32* @y.233
  %21 = add i32 %19, -1817071049
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -1817071049
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %65

; <label>:45:                                     ; preds = %18, %65
  %46 = load i8*, i8** %7, align 8
  %47 = load i32, i32* %8, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  %50 = load i32, i32* @x.232
  %51 = load i32, i32* @y.233
  %52 = sub i32 %50, 1886531752
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1886531752
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %65

; <label>:64:                                     ; preds = %45
  resume { i8*, i32 } %49

; <label>:65:                                     ; preds = %45, %18
  %66 = load i8*, i8** %7, align 8
  %67 = load i32, i32* %8, align 4
  %68 = insertvalue { i8*, i32 } undef, i8* %66, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  br label %45
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE21_M_default_initializeEm(%"class.std::vector"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %11) #3
  %13 = call i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64* %9, i64 %10, %"class.std::allocator"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %15, i32 0, i32 1
  store i64* %13, i64** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = ptrtoint i64* %11 to i64
  %16 = ptrtoint i64* %14 to i64
  %17 = add i64 %15, -587713050787522420
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -587713050787522420
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"* %5, i64* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  store i64* null, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %8, i32 0, i32 0
  store i64* %7, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 1
  store i64* %12, i64** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i64, i64* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20, i32 0, i32 2
  store i64* %19, i64** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.242
  %5 = load i32, i32* @y.243
  %6 = add i32 %4, 694940484
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 694940484
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1073177511, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1073177511, label %18
    i32 -1210863899, label %26
    i32 59876100, label %45
    i32 71343805, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1210863899, i32 71343805
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %28 to %"class.std::allocator"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %29) #3
  %30 = load i32, i32* @x.242
  %31 = load i32, i32* @y.243
  %32 = sub i32 %30, 872278400
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 872278400
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 59876100, i32 71343805
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %47, align 8
  %48 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %47, align 8
  %49 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %48 to %"class.std::allocator"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %49) #3
  store i32 -1210863899, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -574787102, i32* %9
  %10 = alloca i64*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -574787102, label %14
    i32 -1876734340, label %18
    i32 2091007286, label %24
    i32 828993598, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -1876734340, i32 2091007286
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20 to %"class.std::allocator"*
  %22 = load i64, i64* %6, align 8
  %23 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1) %21, i64 %22)
  store i32 828993598, i32* %9
  store i64* %23, i64** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 828993598, i32* %9
  store i64* null, i64** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load i64*, i64** %10
  ret i64* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1633778030, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1633778030, label %16
    i32 195443494, label %21
    i32 -1154237609, label %49
    i32 -1838403855, label %65
    i32 -1621917776, label %66
    i32 1915617585, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 195443494, i32 -1621917776
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.250
  %23 = load i32, i32* @y.251
  %24 = add i32 %22, -1747405749
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -1747405749
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -1154237609, i32 1915617585
  store i32 %48, i32* %12
  br label %72

; <label>:49:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  %50 = load i32, i32* @x.250
  %51 = load i32, i32* @y.251
  %52 = add i32 %50, 505035167
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 505035167
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1838403855, i32 1915617585
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  unreachable

; <label>:66:                                     ; preds = %13
  %67 = load i64, i64* %7, align 8
  %68 = mul i64 %67, 8
  %69 = call i8* @_Znwm(i64 %68)
  %70 = bitcast i8* %69 to i64*
  ret i64* %70

; <label>:71:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  store i32 -1154237609, i32* %12
  br label %72

; <label>:72:                                     ; preds = %71, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #9

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64*, i64, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64* @_ZSt25__uninitialized_default_nIPxmET_S1_T0_(i64* %7, i64 %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.256
  %6 = load i32, i32* @y.257
  %7 = add i32 %5, 2043816971
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2043816971
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -494177332, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -494177332, label %19
    i32 1480693892, label %39
    i32 -971498201, label %71
    i32 -275014313, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1480693892, i32 -275014313
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %40, align 8
  %41 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42 to %"class.std::allocator"*
  store %"class.std::allocator"* %43, %"class.std::allocator"** %2
  %44 = load i32, i32* @x.256
  %45 = load i32, i32* @y.257
  %46 = add i32 %44, -2018826890
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -2018826890
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -971498201, i32 -275014313
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %74, align 8
  %75 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %76 to %"class.std::allocator"*
  store i32 1480693892, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt25__uninitialized_default_nIPxmET_S1_T0_(i64*, i64) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store i64* %0, i64** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load i64*, i64** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64* %6, i64 %7)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64*, i64) #0 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = load i64, i64* %4, align 8
  store i64 0, i64* %5, align 8
  %8 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %6, i64 %7, i64* dereferenceable(8) %5)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.262
  %8 = load i32, i32* @y.263
  %9 = add i32 %7, 124564200
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 124564200
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1567691722, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1567691722, label %21
    i32 2130454447, label %41
    i32 2121964837, label %65
    i32 -1226722999, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 2130454447, i32 -1226722999
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64*, align 8
  store i64* %0, i64** %42, align 8
  store i64 %1, i64* %43, align 8
  store i64* %2, i64** %44, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %45)
  %47 = load i64, i64* %43, align 8
  %48 = load i64*, i64** %44, align 8
  %49 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %46, i64 %47, i64* dereferenceable(8) %48)
  store i64* %49, i64** %4
  %50 = load i32, i32* @x.262
  %51 = load i32, i32* @y.263
  %52 = add i32 %50, 1545535993
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1545535993
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 2121964837, i32 -1226722999
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i64*, i64** %4
  ret i64* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i64*, align 8
  %69 = alloca i64, align 8
  %70 = alloca i64*, align 8
  store i64* %0, i64** %68, align 8
  store i64 %1, i64* %69, align 8
  store i64* %2, i64** %70, align 8
  %71 = load i64*, i64** %68, align 8
  %72 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %71)
  %73 = load i64, i64* %69, align 8
  %74 = load i64*, i64** %70, align 8
  %75 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %72, i64 %73, i64* dereferenceable(8) %74)
  store i32 2130454447, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #4 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 -1854521760, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %125
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1854521760, label %16
    i32 -2017524264, label %20
    i32 1496110677, label %36
    i32 1049198374, label %65
    i32 1942822304, label %66
    i32 1807369705, label %82
    i32 -250603003, label %105
    i32 -1750643430, label %106
    i32 -1263547273, label %108
    i32 -167802652, label %111
  ]

; <label>:15:                                     ; preds = %13
  br label %125

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 -2017524264, i32 -1750643430
  store i32 %19, i32* %12
  br label %125

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.264
  %22 = load i32, i32* @y.265
  %23 = sub i32 %21, -2009904777
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -2009904777
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 1496110677, i32 -1263547273
  store i32 %35, i32* %12
  br label %125

; <label>:36:                                     ; preds = %13
  %37 = load i64, i64* %7, align 8
  %38 = load i64*, i64** %4, align 8
  store i64 %37, i64* %38, align 8
  %39 = load i32, i32* @x.264
  %40 = load i32, i32* @y.265
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 1049198374, i32 -1263547273
  store i32 %64, i32* %12
  br label %125

; <label>:65:                                     ; preds = %13
  store i32 1942822304, i32* %12
  br label %125

; <label>:66:                                     ; preds = %13
  %67 = load i32, i32* @x.264
  %68 = load i32, i32* @y.265
  %69 = sub i32 %67, 1215492312
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 1215492312
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 1807369705, i32 -167802652
  store i32 %81, i32* %12
  br label %125

; <label>:82:                                     ; preds = %13
  %83 = load i64, i64* %8, align 8
  %84 = add i64 %83, -2842502288358165678
  %85 = add i64 %84, -1
  %86 = sub i64 %85, -2842502288358165678
  %87 = add i64 %83, -1
  store i64 %86, i64* %8, align 8
  %88 = load i64*, i64** %4, align 8
  %89 = getelementptr inbounds i64, i64* %88, i32 1
  store i64* %89, i64** %4, align 8
  %90 = load i32, i32* @x.264
  %91 = load i32, i32* @y.265
  %92 = add i32 %90, -986359613
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, -986359613
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  %104 = select i1 %102, i32 -250603003, i32 -167802652
  store i32 %104, i32* %12
  br label %125

; <label>:105:                                    ; preds = %13
  store i32 -1854521760, i32* %12
  br label %125

; <label>:106:                                    ; preds = %13
  %107 = load i64*, i64** %4, align 8
  ret i64* %107

; <label>:108:                                    ; preds = %13
  %109 = load i64, i64* %7, align 8
  %110 = load i64*, i64** %4, align 8
  store i64 %109, i64* %110, align 8
  store i32 1496110677, i32* %12
  br label %125

; <label>:111:                                    ; preds = %13
  %112 = load i64, i64* %8, align 8
  %113 = add i64 %112, -2371864250773395219
  %114 = sub i64 %113, -1
  %115 = sub i64 %114, -2371864250773395219
  %116 = sub i64 %112, -1
  %117 = mul i64 %115, -1
  %118 = shl i64 %112, -1
  %119 = add i64 %112, 8891760075449426169
  %120 = add i64 %119, -1
  %121 = sub i64 %120, 8891760075449426169
  %122 = add i64 %112, -1
  store i64 %121, i64* %8, align 8
  %123 = load i64*, i64** %4, align 8
  %124 = getelementptr inbounds i64, i64* %123, i32 1
  store i64* %124, i64** %4, align 8
  store i32 1807369705, i32* %12
  br label %125

; <label>:125:                                    ; preds = %111, %108, %105, %82, %66, %65, %36, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #4 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load i64*, i64** %7, align 8
  store i64* %10, i64** %4
  %11 = alloca i32
  store i32 -302973358, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %120
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -302973358, label %15
    i32 154250063, label %19
    i32 1502887953, label %35
    i32 1515985978, label %68
    i32 36322490, label %69
    i32 1129993315, label %84
    i32 -1838392758, label %112
    i32 492653607, label %113
    i32 -903546102, label %119
  ]

; <label>:14:                                     ; preds = %12
  br label %120

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %4
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 154250063, i32 36322490
  store i32 %18, i32* %11
  br label %120

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.270
  %21 = load i32, i32* @y.271
  %22 = add i32 %20, -330706388
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -330706388
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 1502887953, i32 492653607
  store i32 %34, i32* %11
  br label %120

; <label>:35:                                     ; preds = %12
  %36 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %37 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %37 to %"class.std::allocator"*
  %39 = load i64*, i64** %7, align 8
  %40 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator"* dereferenceable(1) %38, i64* %39, i64 %40)
  %41 = load i32, i32* @x.270
  %42 = load i32, i32* @y.271
  %43 = sub i32 %41, 734240864
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 734240864
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1515985978, i32 492653607
  store i32 %67, i32* %11
  br label %120

; <label>:68:                                     ; preds = %12
  store i32 36322490, i32* %11
  br label %120

; <label>:69:                                     ; preds = %12
  %70 = load i32, i32* @x.270
  %71 = load i32, i32* @y.271
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 1129993315, i32 -903546102
  store i32 %83, i32* %11
  br label %120

; <label>:84:                                     ; preds = %12
  %85 = load i32, i32* @x.270
  %86 = load i32, i32* @y.271
  %87 = add i32 %85, -913753782
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, -913753782
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 -1838392758, i32 -903546102
  store i32 %111, i32* %11
  br label %120

; <label>:112:                                    ; preds = %12
  ret void

; <label>:113:                                    ; preds = %12
  %114 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %115 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %114, i32 0, i32 0
  %116 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %115 to %"class.std::allocator"*
  %117 = load i64*, i64** %7, align 8
  %118 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator"* dereferenceable(1) %116, i64* %117, i64 %118)
  store i32 1502887953, i32* %11
  br label %120

; <label>:119:                                    ; preds = %12
  store i32 1129993315, i32* %11
  br label %120

; <label>:120:                                    ; preds = %119, %113, %84, %69, %68, %35, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator"*, i64*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #4 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector"*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i64*, i64** %6, align 8
  %14 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  %16 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %11, i64 %12, i64* dereferenceable(8) %13, %"class.std::allocator"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %18, i32 0, i32 1
  store i64* %16, i64** %19, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = call i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64* %9, i64 %10, i64* dereferenceable(8) %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %7, i64 %8, i64* dereferenceable(8) %9)
  ret i64* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.294
  %20 = load i32, i32* @y.295
  %21 = add i32 %19, 585182843
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 585182843
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %52

; <label>:33:                                     ; preds = %18, %52
  %34 = load i8*, i8** %7, align 8
  %35 = load i32, i32* %8, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  %38 = load i32, i32* @x.294
  %39 = load i32, i32* @y.295
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %52

; <label>:51:                                     ; preds = %33
  resume { i8*, i32 } %37

; <label>:52:                                     ; preds = %33, %18
  %53 = load i8*, i8** %7, align 8
  %54 = load i32, i32* %8, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.0"*, i64, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.296
  %7 = load i32, i32* @y.297
  %8 = sub i32 %6, -2072618880
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -2072618880
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -567806009, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -567806009, label %20
    i32 819504514, label %28
    i32 883656495, label %71
    i32 1823414541, label %72
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 819504514, i32 1823414541
  store i32 %27, i32* %16
  br label %89

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  store i64 %1, i64* %30, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %31, align 8
  %32 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %33 = bitcast %"class.std::vector.0"* %32 to %"struct.std::_Vector_base.1"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"class.std::vector"*, %"class.std::vector"** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %39 = bitcast %"class.std::vector.0"* %32 to %"struct.std::_Vector_base.1"*
  %40 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %39) #3
  %41 = call %"class.std::vector"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector"* %36, i64 %37, %"class.std::vector"* dereferenceable(24) %38, %"class.std::allocator.2"* dereferenceable(1) %40)
  %42 = bitcast %"class.std::vector.0"* %32 to %"struct.std::_Vector_base.1"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %43, i32 0, i32 1
  store %"class.std::vector"* %41, %"class.std::vector"** %44, align 8
  %45 = load i32, i32* @x.296
  %46 = load i32, i32* @y.297
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 883656495, i32 1823414541
  store i32 %70, i32* %16
  br label %89

; <label>:71:                                     ; preds = %17
  ret void

; <label>:72:                                     ; preds = %17
  %73 = alloca %"class.std::vector.0"*, align 8
  %74 = alloca i64, align 8
  %75 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %73, align 8
  store i64 %1, i64* %74, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %75, align 8
  %76 = load %"class.std::vector.0"*, %"class.std::vector.0"** %73, align 8
  %77 = bitcast %"class.std::vector.0"* %76 to %"struct.std::_Vector_base.1"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %78, i32 0, i32 0
  %80 = load %"class.std::vector"*, %"class.std::vector"** %79, align 8
  %81 = load i64, i64* %74, align 8
  %82 = load %"class.std::vector"*, %"class.std::vector"** %75, align 8
  %83 = bitcast %"class.std::vector.0"* %76 to %"struct.std::_Vector_base.1"*
  %84 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %83) #3
  %85 = call %"class.std::vector"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector"* %80, i64 %81, %"class.std::vector"* dereferenceable(24) %82, %"class.std::allocator.2"* dereferenceable(1) %84)
  %86 = bitcast %"class.std::vector.0"* %76 to %"struct.std::_Vector_base.1"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %87, i32 0, i32 1
  store %"class.std::vector"* %85, %"class.std::vector"** %88, align 8
  store i32 819504514, i32* %16
  br label %89

; <label>:89:                                     ; preds = %72, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector"*, %"class.std::vector"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector"*, %"class.std::vector"** %13, align 8
  %15 = ptrtoint %"class.std::vector"* %11 to i64
  %16 = ptrtoint %"class.std::vector"* %14 to i64
  %17 = sub i64 %15, 977937467299216549
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 977937467299216549
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %5, %"class.std::vector"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.298
  %26 = load i32, i32* @y.299
  %27 = sub i32 %25, -948352178
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -948352178
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %73

; <label>:39:                                     ; preds = %24, %73
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %3, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %4, align 4
  %43 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %43) #3
  %44 = load i32, i32* @x.298
  %45 = load i32, i32* @y.299
  %46 = add i32 %44, 1792986679
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1792986679
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %73

; <label>:70:                                     ; preds = %39
  br label %71

; <label>:71:                                     ; preds = %70
  %72 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %72) #11
  unreachable

; <label>:73:                                     ; preds = %39, %24
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %3, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %4, align 4
  %77 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %77) #3
  br label %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.300
  %6 = load i32, i32* @y.301
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 260648593, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 260648593, label %18
    i32 -1038881185, label %26
    i32 -1991082507, label %50
    i32 -972525575, label %51
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1038881185, i32 -972525575
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %28 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %27, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %28, align 8
  %29 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %29 to %"class.std::allocator.2"*
  %31 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %28, align 8
  call void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.2"* %30, %"class.std::allocator.2"* dereferenceable(1) %31) #3
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %29, i32 0, i32 0
  store %"class.std::vector"* null, %"class.std::vector"** %32, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %29, i32 0, i32 1
  store %"class.std::vector"* null, %"class.std::vector"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %29, i32 0, i32 2
  store %"class.std::vector"* null, %"class.std::vector"** %34, align 8
  %35 = load i32, i32* @x.300
  %36 = load i32, i32* @y.301
  %37 = add i32 %35, 1064047473
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1064047473
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1991082507, i32 -972525575
  store i32 %49, i32* %14
  br label %60

; <label>:50:                                     ; preds = %15
  ret void

; <label>:51:                                     ; preds = %15
  %52 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  %53 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %52, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %53, align 8
  %54 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %52, align 8
  %55 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %54 to %"class.std::allocator.2"*
  %56 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %53, align 8
  call void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.2"* %55, %"class.std::allocator.2"* dereferenceable(1) %56) #3
  %57 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %54, i32 0, i32 0
  store %"class.std::vector"* null, %"class.std::vector"** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %54, i32 0, i32 1
  store %"class.std::vector"* null, %"class.std::vector"** %58, align 8
  %59 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %54, i32 0, i32 2
  store %"class.std::vector"* null, %"class.std::vector"** %59, align 8
  store i32 -1038881185, i32* %14
  br label %60

; <label>:60:                                     ; preds = %51, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.302
  %6 = load i32, i32* @y.303
  %7 = sub i32 %5, 1752176363
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1752176363
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1450019606, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1450019606, label %19
    i32 2131812210, label %27
    i32 -2011463248, label %74
    i32 2106087157, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2131812210, i32 2106087157
  store i32 %26, i32* %15
  br label %95

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.1"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call %"class.std::vector"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %33, i32 0, i32 0
  store %"class.std::vector"* %32, %"class.std::vector"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"class.std::vector"*, %"class.std::vector"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %38, i32 0, i32 1
  store %"class.std::vector"* %37, %"class.std::vector"** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %45, i32 0, i32 2
  store %"class.std::vector"* %44, %"class.std::vector"** %46, align 8
  %47 = load i32, i32* @x.302
  %48 = load i32, i32* @y.303
  %49 = sub i32 %47, 1235529854
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1235529854
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -2011463248, i32 2106087157
  store i32 %73, i32* %15
  br label %95

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Vector_base.1"*, align 8
  %77 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %76, align 8
  %79 = load i64, i64* %77, align 8
  %80 = call %"class.std::vector"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %78, i64 %79)
  %81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %81, i32 0, i32 0
  store %"class.std::vector"* %80, %"class.std::vector"** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %"class.std::vector"*, %"class.std::vector"** %84, align 8
  %86 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %86, i32 0, i32 1
  store %"class.std::vector"* %85, %"class.std::vector"** %87, align 8
  %88 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %88, i32 0, i32 0
  %90 = load %"class.std::vector"*, %"class.std::vector"** %89, align 8
  %91 = load i64, i64* %77, align 8
  %92 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %90, i64 %91
  %93 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %78, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %93, i32 0, i32 2
  store %"class.std::vector"* %92, %"class.std::vector"** %94, align 8
  store i32 2131812210, i32* %15
  br label %95

; <label>:95:                                     ; preds = %75, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEEC2ERKS2_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.308
  %6 = load i32, i32* @y.309
  %7 = add i32 %5, -43605118
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -43605118
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1904936756, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1904936756, label %19
    i32 -1248024820, label %27
    i32 1129874893, label %46
    i32 491843054, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1248024820, i32 491843054
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %28, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %28, align 8
  %31 = load i32, i32* @x.308
  %32 = load i32, i32* @y.309
  %33 = add i32 %31, 1949336249
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1949336249
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1129874893, i32 491843054
  store i32 %45, i32* %15
  br label %51

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %49 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %48, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %49, align 8
  %50 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %48, align 8
  store i32 -1248024820, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.1"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.310
  %9 = load i32, i32* @y.311
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -913364315, i32* %17
  %18 = alloca %"class.std::vector"*
  br label %19

; <label>:19:                                     ; preds = %2, %84
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 -913364315, label %22
    i32 -437175761, label %42
    i32 -852834387, label %65
    i32 1961796124, label %68
    i32 943113042, label %75
    i32 -1219716643, label %76
    i32 1238242317, label %78
  ]

; <label>:21:                                     ; preds = %19
  br label %84

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -437175761, i32 1238242317
  store i32 %41, i32* %17
  br label %84

; <label>:42:                                     ; preds = %19
  %43 = alloca %"struct.std::_Vector_base.1"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %43, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  %46 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %43, align 8
  store %"struct.std::_Vector_base.1"* %46, %"struct.std::_Vector_base.1"** %4
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = icmp ne i64 %48, 0
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.310
  %51 = load i32, i32* @y.311
  %52 = sub i32 %50, 1519171620
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1519171620
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -852834387, i32 1238242317
  store i32 %64, i32* %17
  br label %84

; <label>:65:                                     ; preds = %19
  %66 = load volatile i1, i1* %3
  %67 = select i1 %66, i32 1961796124, i32 943113042
  store i32 %67, i32* %17
  br label %84

; <label>:68:                                     ; preds = %19
  %69 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %70 to %"class.std::allocator.2"*
  %72 = load volatile i64*, i64** %5
  %73 = load i64, i64* %72, align 8
  %74 = call %"class.std::vector"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.2"* dereferenceable(1) %71, i64 %73)
  store i32 -1219716643, i32* %17
  store %"class.std::vector"* %74, %"class.std::vector"** %18
  br label %84

; <label>:75:                                     ; preds = %19
  store i32 -1219716643, i32* %17
  store %"class.std::vector"* null, %"class.std::vector"** %18
  br label %84

; <label>:76:                                     ; preds = %19
  %77 = load %"class.std::vector"*, %"class.std::vector"** %18
  ret %"class.std::vector"* %77

; <label>:78:                                     ; preds = %19
  %79 = alloca %"struct.std::_Vector_base.1"*, align 8
  %80 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %79, align 8
  store i64 %1, i64* %80, align 8
  %81 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %79, align 8
  %82 = load i64, i64* %80, align 8
  %83 = icmp ne i64 %82, 0
  store i32 -437175761, i32* %17
  br label %84

; <label>:84:                                     ; preds = %78, %75, %68, %65, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret %"class.std::vector"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 589553596, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 589553596, label %16
    i32 -2026040259, label %21
    i32 -54754675, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -2026040259, i32 -54754675
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector"*
  ret %"class.std::vector"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIxSaIxEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector"*, i64, %"class.std::vector"* dereferenceable(24), %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %12 = call %"class.std::vector"* @_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_(%"class.std::vector"* %9, i64 %10, %"class.std::vector"* dereferenceable(24) %11)
  ret %"class.std::vector"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.320
  %6 = load i32, i32* @y.321
  %7 = sub i32 %5, 1086774401
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1086774401
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1105335149, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1105335149, label %19
    i32 1950205537, label %39
    i32 -150457276, label %59
    i32 -546260467, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1950205537, i32 -546260467
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %40, align 8
  %41 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %42 to %"class.std::allocator.2"*
  store %"class.std::allocator.2"* %43, %"class.std::allocator.2"** %2
  %44 = load i32, i32* @x.320
  %45 = load i32, i32* @y.321
  %46 = add i32 %44, -86474429
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -86474429
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -150457276, i32 -546260467
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %62, align 8
  %63 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %64 to %"class.std::allocator.2"*
  store i32 1950205537, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZSt20uninitialized_fill_nIPSt6vectorIxSaIxEEmS2_ET_S4_T0_RKT1_(%"class.std::vector"*, i64, %"class.std::vector"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %11 = call %"class.std::vector"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_(%"class.std::vector"* %8, i64 %9, %"class.std::vector"* dereferenceable(24) %10)
  ret %"class.std::vector"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIxSaIxEEmS4_EET_S6_T0_RKT1_(%"class.std::vector"*, i64, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %6, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  store %"class.std::vector"* %10, %"class.std::vector"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %59, %3
  %12 = load i32, i32* @x.324
  %13 = load i32, i32* @y.325
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %273

; <label>:37:                                     ; preds = %11, %273
  %38 = load i64, i64* %5, align 8
  %39 = icmp ugt i64 %38, 0
  %40 = load i32, i32* @x.324
  %41 = load i32, i32* @y.325
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %273

; <label>:53:                                     ; preds = %37
  br i1 %39, label %54, label %118

; <label>:54:                                     ; preds = %53
  %55 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %56 = call %"class.std::vector"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector"* dereferenceable(24) %55) #3
  %57 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  invoke void @_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_(%"class.std::vector"* %56, %"class.std::vector"* dereferenceable(24) %57)
          to label %58 unwind label %67

; <label>:58:                                     ; preds = %54
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i64, i64* %5, align 8
  %61 = sub i64 %60, -2614254374305128530
  %62 = add i64 %61, -1
  %63 = add i64 %62, -2614254374305128530
  %64 = add i64 %60, -1
  store i64 %63, i64* %5, align 8
  %65 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %66 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %65, i32 1
  store %"class.std::vector"* %66, %"class.std::vector"** %7, align 8
  br label %11

; <label>:67:                                     ; preds = %54
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %8, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %9, align 4
  br label %71

; <label>:71:                                     ; preds = %67
  %72 = load i32, i32* @x.324
  %73 = load i32, i32* @y.325
  %74 = add i32 %72, -1563082409
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -1563082409
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %276

; <label>:86:                                     ; preds = %71, %276
  %87 = load i8*, i8** %8, align 8
  %88 = call i8* @__cxa_begin_catch(i8* %87) #3
  %89 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %90 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %91 = load i32, i32* @x.324
  %92 = load i32, i32* @y.325
  %93 = sub i32 0, 1
  %94 = add i32 %91, %93
  %95 = sub i32 %91, 1
  %96 = mul i32 %91, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %92, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %276

; <label>:116:                                    ; preds = %86
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector"* %89, %"class.std::vector"* %90)
          to label %117 unwind label %120

; <label>:117:                                    ; preds = %116
  invoke void @__cxa_rethrow() #14
          to label %272 unwind label %120

; <label>:118:                                    ; preds = %53
  %119 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  ret %"class.std::vector"* %119

; <label>:120:                                    ; preds = %117, %116
  %121 = landingpad { i8*, i32 }
          cleanup
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %8, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %124 unwind label %215

; <label>:124:                                    ; preds = %120
  %125 = load i32, i32* @x.324
  %126 = load i32, i32* @y.325
  %127 = add i32 %125, -1848202395
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -1848202395
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %281

; <label>:139:                                    ; preds = %124, %281
  %140 = load i32, i32* @x.324
  %141 = load i32, i32* @y.325
  %142 = add i32 %140, 42859967
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, 42859967
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 false, true
  %153 = and i1 %150, false
  %154 = and i1 %148, %152
  %155 = and i1 %151, false
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 false, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  br i1 %164, label %166, label %281

; <label>:166:                                    ; preds = %139
  br label %210
                                                  ; No predecessors!
  %168 = load i32, i32* @x.324
  %169 = load i32, i32* @y.325
  %170 = add i32 %168, 1082315805
  %171 = sub i32 %170, 1
  %172 = sub i32 %171, 1082315805
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 false, true
  %181 = and i1 %178, false
  %182 = and i1 %176, %180
  %183 = and i1 %179, false
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 false, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  br i1 %192, label %194, label %282

; <label>:194:                                    ; preds = %167, %282
  call void @llvm.trap()
  %195 = load i32, i32* @x.324
  %196 = load i32, i32* @y.325
  %197 = add i32 %195, -152674553
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, -152674553
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  br i1 %207, label %209, label %282

; <label>:209:                                    ; preds = %194
  unreachable

; <label>:210:                                    ; preds = %166
  %211 = load i8*, i8** %8, align 8
  %212 = load i32, i32* %9, align 4
  %213 = insertvalue { i8*, i32 } undef, i8* %211, 0
  %214 = insertvalue { i8*, i32 } %213, i32 %212, 1
  resume { i8*, i32 } %214

; <label>:215:                                    ; preds = %120
  %216 = load i32, i32* @x.324
  %217 = load i32, i32* @y.325
  %218 = sub i32 %216, 1901871307
  %219 = sub i32 %218, 1
  %220 = add i32 %219, 1901871307
  %221 = sub i32 %216, 1
  %222 = mul i32 %216, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %217, 10
  %226 = xor i1 %224, true
  %227 = xor i1 %225, true
  %228 = xor i1 false, true
  %229 = and i1 %226, false
  %230 = and i1 %224, %228
  %231 = and i1 %227, false
  %232 = and i1 %225, %228
  %233 = or i1 %229, %230
  %234 = or i1 %231, %232
  %235 = xor i1 %233, %234
  %236 = or i1 %226, %227
  %237 = xor i1 %236, true
  %238 = or i1 false, %228
  %239 = and i1 %237, %238
  %240 = or i1 %235, %239
  %241 = or i1 %224, %225
  br i1 %240, label %242, label %283

; <label>:242:                                    ; preds = %215, %283
  %243 = landingpad { i8*, i32 }
          catch i8* null
  %244 = extractvalue { i8*, i32 } %243, 0
  call void @__clang_call_terminate(i8* %244) #11
  %245 = load i32, i32* @x.324
  %246 = load i32, i32* @y.325
  %247 = add i32 %245, 1675662690
  %248 = sub i32 %247, 1
  %249 = sub i32 %248, 1675662690
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = xor i1 %253, true
  %256 = xor i1 %254, true
  %257 = xor i1 false, true
  %258 = and i1 %255, false
  %259 = and i1 %253, %257
  %260 = and i1 %256, false
  %261 = and i1 %254, %257
  %262 = or i1 %258, %259
  %263 = or i1 %260, %261
  %264 = xor i1 %262, %263
  %265 = or i1 %255, %256
  %266 = xor i1 %265, true
  %267 = or i1 false, %257
  %268 = and i1 %266, %267
  %269 = or i1 %264, %268
  %270 = or i1 %253, %254
  br i1 %269, label %271, label %283

; <label>:271:                                    ; preds = %242
  unreachable

; <label>:272:                                    ; preds = %117
  unreachable

; <label>:273:                                    ; preds = %37, %11
  %274 = load i64, i64* %5, align 8
  %275 = icmp ugt i64 %274, 0
  br label %37

; <label>:276:                                    ; preds = %86, %71
  %277 = load i8*, i8** %8, align 8
  %278 = call i8* @__cxa_begin_catch(i8* %277) #3
  %279 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %280 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  br label %86

; <label>:281:                                    ; preds = %139, %124
  br label %139

; <label>:282:                                    ; preds = %194, %167
  call void @llvm.trap()
  br label %194

; <label>:283:                                    ; preds = %242, %215
  %284 = landingpad { i8*, i32 }
          catch i8* null
  %285 = extractvalue { i8*, i32 } %284, 0
  call void @__clang_call_terminate(i8* %285) #11
  br label %242
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIxSaIxEEJRKS2_EEvPT_DpOT0_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector"*
  %8 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector"* %7, %"class.std::vector"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.328
  %6 = load i32, i32* @y.329
  %7 = sub i32 %5, -1929522818
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1929522818
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1390684266, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1390684266, label %19
    i32 -694036024, label %39
    i32 1504326874, label %58
    i32 701412613, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -694036024, i32 701412613
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %42 = bitcast %"class.std::vector"* %41 to i8*
  %43 = bitcast i8* %42 to %"class.std::vector"*
  store %"class.std::vector"* %43, %"class.std::vector"** %2
  %44 = load i32, i32* @x.328
  %45 = load i32, i32* @y.329
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1504326874, i32 701412613
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::vector"*, %"class.std::vector"** %2
  ret %"class.std::vector"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %61, align 8
  %62 = load %"class.std::vector"*, %"class.std::vector"** %61, align 8
  %63 = bitcast %"class.std::vector"* %62 to i8*
  %64 = bitcast i8* %63 to %"class.std::vector"*
  store i32 -694036024, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector"*, %"class.std::vector"*) #0 comdat {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector"* %5, %"class.std::vector"* %6)
  ret void
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  ret %"class.std::vector"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca %"class.std::allocator", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %11 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %12 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %12) #3
  %14 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %15 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %16 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator"* sret %5, %"class.std::allocator"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base"* %11, i64 %13, %"class.std::allocator"* dereferenceable(1) %5)
          to label %17 unwind label %39

; <label>:17:                                     ; preds = %2
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %5) #3
  %18 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %19 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store i64* %19, i64** %20, align 8
  %21 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %22 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  store i64* %22, i64** %23, align 8
  %24 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %29 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %28) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = invoke i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64* %31, i64* %33, i64* %27, %"class.std::allocator"* dereferenceable(1) %29)
          to label %35 unwind label %43

; <label>:35:                                     ; preds = %17
  %36 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %37, i32 0, i32 1
  store i64* %34, i64** %38, align 8
  ret void

; <label>:39:                                     ; preds = %2
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %6, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %7, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator"* %5) #3
  br label %89

; <label>:43:                                     ; preds = %17
  %44 = load i32, i32* @x.334
  %45 = load i32, i32* @y.335
  %46 = sub i32 %44, 1679723118
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1679723118
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %94

; <label>:70:                                     ; preds = %43, %94
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %6, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %7, align 4
  %74 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %74) #3
  %75 = load i32, i32* @x.334
  %76 = load i32, i32* @y.335
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %94

; <label>:88:                                     ; preds = %70
  br label %89

; <label>:89:                                     ; preds = %88, %39
  %90 = load i8*, i8** %6, align 8
  %91 = load i32, i32* %7, align 4
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  resume { i8*, i32 } %93

; <label>:94:                                     ; preds = %70, %43
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %6, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %7, align 4
  %98 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %98) #3
  br label %70
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.336
  %6 = load i32, i32* @y.337
  %7 = sub i32 %5, 1428080871
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1428080871
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1401665230, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %116
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1401665230, label %19
    i32 -880195666, label %39
    i32 -939849509, label %71
    i32 1349138527, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %116

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -880195666, i32 1349138527
  store i32 %38, i32* %15
  br label %116

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = ptrtoint i64* %45 to i64
  %51 = ptrtoint i64* %49 to i64
  %52 = add i64 %50, 6969249344406687428
  %53 = sub i64 %52, %51
  %54 = sub i64 %53, 6969249344406687428
  %55 = sub i64 %50, %51
  %56 = sdiv exact i64 %54, 8
  store i64 %56, i64* %2
  %57 = load i32, i32* @x.336
  %58 = load i32, i32* @y.337
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -939849509, i32 1349138527
  store i32 %70, i32* %15
  br label %116

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %74, align 8
  %75 = load %"class.std::vector"*, %"class.std::vector"** %74, align 8
  %76 = bitcast %"class.std::vector"* %75 to %"struct.std::_Vector_base"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load i64*, i64** %78, align 8
  %80 = bitcast %"class.std::vector"* %75 to %"struct.std::_Vector_base"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = ptrtoint i64* %79 to i64
  %85 = ptrtoint i64* %83 to i64
  %86 = sub i64 0, %85
  %87 = add i64 %84, %86
  %88 = sub i64 %84, %85
  %89 = mul i64 %87, %85
  %90 = shl i64 %84, %85
  %91 = shl i64 %84, %85
  %92 = shl i64 %84, %85
  %93 = add i64 %84, -1756155453362179476
  %94 = sub i64 %93, %85
  %95 = sub i64 %94, -1756155453362179476
  %96 = sub i64 %84, %85
  %97 = add i64 %95, 1934164397532035402
  %98 = sub i64 %97, 8
  %99 = sub i64 %98, 1934164397532035402
  %100 = sub i64 %95, 8
  %101 = mul i64 %99, 8
  %102 = sub i64 0, %95
  %103 = add i64 0, %102
  %104 = sub i64 0, %95
  %105 = add i64 %103, 4807975670204584043
  %106 = add i64 %105, 8
  %107 = sub i64 %106, 4807975670204584043
  %108 = add i64 %103, 8
  %109 = sub i64 %95, 4198848635069561893
  %110 = sub i64 %109, 8
  %111 = add i64 %110, 4198848635069561893
  %112 = sub i64 %95, 8
  %113 = mul i64 %111, 8
  %114 = shl i64 %95, 8
  %115 = sdiv exact i64 %95, 8
  store i32 -880195666, i32* %15
  br label %116

; <label>:116:                                    ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator"* noalias sret, %"class.std::allocator"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.338
  %6 = load i32, i32* @y.339
  %7 = sub i32 %5, -721308022
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -721308022
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -795783849, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %60
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -795783849, label %19
    i32 -1855220875, label %27
    i32 -2052430280, label %56
    i32 667397684, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %60

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1855220875, i32 667397684
  store i32 %26, i32* %15
  br label %60

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %28, align 8
  %29 = load %"class.std::allocator"*, %"class.std::allocator"** %28, align 8
  call void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator"* sret %0, %"class.std::allocator"* dereferenceable(1) %29)
  %30 = load i32, i32* @x.338
  %31 = load i32, i32* @y.339
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -2052430280, i32 667397684
  store i32 %55, i32* %15
  br label %60

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %58, align 8
  %59 = load %"class.std::allocator"*, %"class.std::allocator"** %58, align 8
  call void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator"* sret %0, %"class.std::allocator"* dereferenceable(1) %59)
  store i32 -1855220875, i32* %15
  br label %60

; <label>:60:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.342
  %9 = load i32, i32* @y.343
  %10 = add i32 %8, -569784433
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -569784433
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1818418673, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %109
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1818418673, label %22
    i32 -1561561457, label %42
    i32 -1088925150, label %88
    i32 1266672938, label %90
  ]

; <label>:21:                                     ; preds = %19
  br label %109

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1561561457, i32 1266672938
  store i32 %41, i32* %18
  br label %109

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = alloca i64*, align 8
  %46 = alloca %"class.std::allocator"*, align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  store i64* %0, i64** %49, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  store i64* %1, i64** %50, align 8
  store i64* %2, i64** %45, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %46, align 8
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator"* %47 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %48 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = load i64*, i64** %45, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %47, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %48, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %57, i64* %59, i64* %55)
  store i64* %60, i64** %5
  %61 = load i32, i32* @x.342
  %62 = load i32, i32* @y.343
  %63 = sub i32 %61, 1436646164
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 1436646164
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -1088925150, i32 1266672938
  store i32 %87, i32* %18
  br label %109

; <label>:88:                                     ; preds = %19
  %89 = load volatile i64*, i64** %5
  ret i64* %89

; <label>:90:                                     ; preds = %19
  %91 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %92 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %93 = alloca i64*, align 8
  %94 = alloca %"class.std::allocator"*, align 8
  %95 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %96 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %91, i32 0, i32 0
  store i64* %0, i64** %97, align 8
  %98 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %92, i32 0, i32 0
  store i64* %1, i64** %98, align 8
  store i64* %2, i64** %93, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %94, align 8
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator"* %95 to i8*
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator"* %96 to i8*
  %102 = bitcast %"class.__gnu_cxx::__normal_iterator"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 8, i32 8, i1 false)
  %103 = load i64*, i64** %93, align 8
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %95, i32 0, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %96, i32 0, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %105, i64* %107, i64* %103)
  store i32 -1561561457, i32* %18
  br label %109

; <label>:109:                                    ; preds = %90, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.344
  %6 = load i32, i32* @y.345
  %7 = add i32 %5, 2092105754
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2092105754
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1345316870, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %89
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1345316870, label %19
    i32 -939903025, label %39
    i32 -816895301, label %76
    i32 -895217804, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %89

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -939903025, i32 -895217804
  store i32 %38, i32* %15
  br label %89

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.std::vector"*, align 8
  %42 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  %43 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %44 = bitcast %"class.std::vector"* %43 to %"struct.std::_Vector_base"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  store i64* %47, i64** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %40, i64** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  store i64* %49, i64** %2
  %50 = load i32, i32* @x.344
  %51 = load i32, i32* @y.345
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -816895301, i32 -895217804
  store i32 %75, i32* %15
  br label %89

; <label>:76:                                     ; preds = %16
  %77 = load volatile i64*, i64** %2
  ret i64* %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %80 = alloca %"class.std::vector"*, align 8
  %81 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %80, align 8
  %82 = load %"class.std::vector"*, %"class.std::vector"** %80, align 8
  %83 = bitcast %"class.std::vector"* %82 to %"struct.std::_Vector_base"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load i64*, i64** %85, align 8
  store i64* %86, i64** %81, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %79, i64** dereferenceable(8) %81) #3
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %79, i32 0, i32 0
  %88 = load i64*, i64** %87, align 8
  store i32 -939903025, i32* %15
  br label %89

; <label>:89:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %2, i64** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator"* noalias sret, %"class.std::allocator"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %3, align 8
  %4 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator"* %0, %"class.std::allocator"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2ERKS_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.350
  %6 = load i32, i32* @y.351
  %7 = sub i32 %5, -591873898
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -591873898
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1761422527, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1761422527, label %19
    i32 -977575917, label %39
    i32 1895597654, label %60
    i32 1780464754, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -977575917, i32 1780464754
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator"*, align 8
  %41 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %40, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %41, align 8
  %42 = load %"class.std::allocator"*, %"class.std::allocator"** %40, align 8
  %43 = bitcast %"class.std::allocator"* %42 to %"class.__gnu_cxx::new_allocator"*
  %44 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  %45 = bitcast %"class.std::allocator"* %44 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %43, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %45) #3
  %46 = load i32, i32* @x.350
  %47 = load i32, i32* @y.351
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1895597654, i32 1780464754
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator"*, align 8
  %63 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %62, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %63, align 8
  %64 = load %"class.std::allocator"*, %"class.std::allocator"** %62, align 8
  %65 = bitcast %"class.std::allocator"* %64 to %"class.__gnu_cxx::new_allocator"*
  %66 = load %"class.std::allocator"*, %"class.std::allocator"** %63, align 8
  %67 = bitcast %"class.std::allocator"* %66 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %65, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %67) #3
  store i32 -977575917, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store i64* %17, i64** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  store i64* %23, i64** %24, align 8
  %25 = load i64*, i64** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64* %27, i64* %29, i64* %25)
  ret i64* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.358
  %8 = load i32, i32* @y.359
  %9 = sub i32 %7, 334031630
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 334031630
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1642811960, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %99
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1642811960, label %21
    i32 -1049921217, label %41
    i32 1204903457, label %76
    i32 -1465871899, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %99

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1049921217, i32 -1465871899
  store i32 %40, i32* %17
  br label %99

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca i64*, align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  store i64* %0, i64** %47, align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  store i64* %1, i64** %48, align 8
  store i64* %2, i64** %44, align 8
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %45 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %45, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %52)
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator"* %46 to i8*
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %46, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %57)
  %59 = load i64*, i64** %44, align 8
  %60 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %59)
  %61 = call i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64* %53, i64* %58, i64* %60)
  store i64* %61, i64** %4
  %62 = load i32, i32* @x.358
  %63 = load i32, i32* @y.359
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 1204903457, i32 -1465871899
  store i32 %75, i32* %17
  br label %99

; <label>:76:                                     ; preds = %18
  %77 = load volatile i64*, i64** %4
  ret i64* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %80 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %81 = alloca i64*, align 8
  %82 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %79, i32 0, i32 0
  store i64* %0, i64** %84, align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %80, i32 0, i32 0
  store i64* %1, i64** %85, align 8
  store i64* %2, i64** %81, align 8
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator"* %82 to i8*
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %82, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %89)
  %91 = bitcast %"class.__gnu_cxx::__normal_iterator"* %83 to i8*
  %92 = bitcast %"class.__gnu_cxx::__normal_iterator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 8, i1 false)
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %83, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %94)
  %96 = load i64*, i64** %81, align 8
  %97 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %96)
  %98 = call i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64* %90, i64* %95, i64* %97)
  store i32 -1049921217, i32* %17
  br label %99

; <label>:99:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.360
  %6 = load i32, i32* @y.361
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1588025898, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %81
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1588025898, label %18
    i32 1688112551, label %38
    i32 1696383175, label %66
    i32 1034472848, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %81

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1688112551, i32 1034472848
  store i32 %37, i32* %14
  br label %81

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store i64* %0, i64** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64* %46)
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  store i64* %47, i64** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  store i64* %50, i64** %2
  %51 = load i32, i32* @x.360
  %52 = load i32, i32* @y.361
  %53 = sub i32 %51, -1389596765
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1389596765
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1696383175, i32 1034472848
  store i32 %65, i32* %14
  br label %81

; <label>:66:                                     ; preds = %15
  %67 = load volatile i64*, i64** %2
  ret i64* %67

; <label>:68:                                     ; preds = %15
  %69 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %70 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %70, i32 0, i32 0
  store i64* %0, i64** %72, align 8
  %73 = bitcast %"class.__gnu_cxx::__normal_iterator"* %71 to i8*
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %71, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64* %76)
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %69, i32 0, i32 0
  store i64* %77, i64** %78, align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %69, i32 0, i32 0
  %80 = load i64*, i64** %79, align 8
  store i32 1688112551, i32* %14
  br label %81

; <label>:81:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.362
  %8 = load i32, i32* @y.363
  %9 = sub i32 %7, 877377353
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 877377353
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1677625342, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %64
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1677625342, label %21
    i32 -41273881, label %29
    i32 113210736, label %53
    i32 1041488684, label %55
  ]

; <label>:20:                                     ; preds = %18
  br label %64

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -41273881, i32 1041488684
  store i32 %28, i32* %17
  br label %64

; <label>:29:                                     ; preds = %18
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i8, align 1
  store i64* %0, i64** %30, align 8
  store i64* %1, i64** %31, align 8
  store i64* %2, i64** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load i64*, i64** %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = load i64*, i64** %32, align 8
  %37 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %34, i64* %35, i64* %36)
  store i64* %37, i64** %4
  %38 = load i32, i32* @x.362
  %39 = load i32, i32* @y.363
  %40 = add i32 %38, 611902725
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 611902725
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 113210736, i32 1041488684
  store i32 %52, i32* %17
  br label %64

; <label>:53:                                     ; preds = %18
  %54 = load volatile i64*, i64** %4
  ret i64* %54

; <label>:55:                                     ; preds = %18
  %56 = alloca i64*, align 8
  %57 = alloca i64*, align 8
  %58 = alloca i64*, align 8
  %59 = alloca i8, align 1
  store i64* %0, i64** %56, align 8
  store i64* %1, i64** %57, align 8
  store i64* %2, i64** %58, align 8
  store i8 1, i8* %59, align 1
  %60 = load i64*, i64** %56, align 8
  %61 = load i64*, i64** %57, align 8
  %62 = load i64*, i64** %58, align 8
  %63 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %60, i64* %61, i64* %62)
  store i32 -41273881, i32* %17
  br label %64

; <label>:64:                                     ; preds = %55, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  %10 = load i64*, i64** %7, align 8
  %11 = load i64*, i64** %6, align 8
  %12 = ptrtoint i64* %10 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 %12, 2103602161243640014
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 2103602161243640014
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 -1787603318, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %168
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1787603318, label %24
    i32 1295718549, label %28
    i32 -1097252037, label %56
    i32 -2034500269, label %90
    i32 -1074825593, label %91
    i32 -2078784266, label %107
    i32 286131175, label %137
    i32 1443737627, label %139
    i32 -1038897393, label %164
  ]

; <label>:23:                                     ; preds = %21
  br label %168

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 1295718549, i32 -1074825593
  store i32 %27, i32* %20
  br label %168

; <label>:28:                                     ; preds = %21
  %29 = load i32, i32* @x.366
  %30 = load i32, i32* @y.367
  %31 = add i32 %29, -913233161
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -913233161
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1097252037, i32 1443737627
  store i32 %55, i32* %20
  br label %168

; <label>:56:                                     ; preds = %21
  %57 = load i64*, i64** %8, align 8
  %58 = bitcast i64* %57 to i8*
  %59 = load i64*, i64** %6, align 8
  %60 = bitcast i64* %59 to i8*
  %61 = load i64, i64* %9, align 8
  %62 = mul i64 8, %61
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %58, i8* %60, i64 %62, i32 8, i1 false)
  %63 = load i32, i32* @x.366
  %64 = load i32, i32* @y.367
  %65 = add i32 %63, 79758504
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, 79758504
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 false, true
  %76 = and i1 %73, false
  %77 = and i1 %71, %75
  %78 = and i1 %74, false
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 false, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  %89 = select i1 %87, i32 -2034500269, i32 1443737627
  store i32 %89, i32* %20
  br label %168

; <label>:90:                                     ; preds = %21
  store i32 -1074825593, i32* %20
  br label %168

; <label>:91:                                     ; preds = %21
  %92 = load i32, i32* @x.366
  %93 = load i32, i32* @y.367
  %94 = add i32 %92, -453973344
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, -453973344
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 -2078784266, i32 -1038897393
  store i32 %106, i32* %20
  br label %168

; <label>:107:                                    ; preds = %21
  %108 = load i64*, i64** %8, align 8
  %109 = load i64, i64* %9, align 8
  %110 = getelementptr inbounds i64, i64* %108, i64 %109
  store i64* %110, i64** %4
  %111 = load i32, i32* @x.366
  %112 = load i32, i32* @y.367
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 false, true
  %123 = and i1 %120, false
  %124 = and i1 %118, %122
  %125 = and i1 %121, false
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 false, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  %136 = select i1 %134, i32 286131175, i32 -1038897393
  store i32 %136, i32* %20
  br label %168

; <label>:137:                                    ; preds = %21
  %138 = load volatile i64*, i64** %4
  ret i64* %138

; <label>:139:                                    ; preds = %21
  %140 = load i64*, i64** %8, align 8
  %141 = bitcast i64* %140 to i8*
  %142 = load i64*, i64** %6, align 8
  %143 = bitcast i64* %142 to i8*
  %144 = load i64, i64* %9, align 8
  %145 = shl i64 8, %144
  %146 = sub i64 8, -3731163315801643540
  %147 = sub i64 %146, %144
  %148 = add i64 %147, -3731163315801643540
  %149 = sub i64 8, %144
  %150 = mul i64 %148, %144
  %151 = sub i64 0, -3225502947705263795
  %152 = sub i64 %151, 8
  %153 = add i64 %152, -3225502947705263795
  %154 = sub i64 0, 8
  %155 = add i64 %153, -5413199844142734583
  %156 = add i64 %155, %144
  %157 = sub i64 %156, -5413199844142734583
  %158 = add i64 %153, %144
  %159 = sub i64 0, %144
  %160 = add i64 8, %159
  %161 = sub i64 8, %144
  %162 = mul i64 %160, %144
  %163 = mul i64 8, %144
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %141, i8* %143, i64 %163, i32 8, i1 false)
  store i32 -1097252037, i32* %20
  br label %168

; <label>:164:                                    ; preds = %21
  %165 = load i64*, i64** %8, align 8
  %166 = load i64, i64* %9, align 8
  %167 = getelementptr inbounds i64, i64* %165, i64 %166
  store i32 -2078784266, i32* %20
  br label %168

; <label>:168:                                    ; preds = %164, %139, %107, %91, %90, %56, %28, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.368
  %6 = load i32, i32* @y.369
  %7 = sub i32 %5, 969052706
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 969052706
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -304798098, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -304798098, label %19
    i32 -482417185, label %39
    i32 1578709019, label %58
    i32 1064935277, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -482417185, i32 1064935277
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store i64* %0, i64** %41, align 8
  %42 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %40) #3
  %43 = load i64*, i64** %42, align 8
  store i64* %43, i64** %2
  %44 = load i32, i32* @x.368
  %45 = load i32, i32* @y.369
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1578709019, i32 1064935277
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile i64*, i64** %2
  ret i64* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %61, i32 0, i32 0
  store i64* %0, i64** %62, align 8
  %63 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %61) #3
  %64 = load i64*, i64** %63, align 8
  store i32 -482417185, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.372
  %6 = load i32, i32* @y.373
  %7 = sub i32 %5, -175651819
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -175651819
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -570142858, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -570142858, label %19
    i32 -2083348953, label %39
    i32 210864496, label %62
    i32 -166838052, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2083348953, i32 -166838052
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store i64* %0, i64** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  store i64* %46, i64** %2
  %47 = load i32, i32* @x.372
  %48 = load i32, i32* @y.373
  %49 = add i32 %47, -505055767
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -505055767
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 210864496, i32 -166838052
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile i64*, i64** %2
  ret i64* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  store i64* %0, i64** %67, align 8
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator"* %65 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  %71 = load i64*, i64** %70, align 8
  store i32 -2083348953, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"*, i64** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store i64** %1, i64*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load i64**, i64*** %4, align 8
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector"*, %"class.std::vector"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %5 = alloca i32
  store i32 -933177867, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %21
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -933177867, label %9
    i32 1377959511, label %14
    i32 -1604052089, label %17
    i32 -1474726251, label %20
  ]

; <label>:8:                                      ; preds = %6
  br label %21

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %12 = icmp ne %"class.std::vector"* %10, %11
  %13 = select i1 %12, i32 1377959511, i32 -1474726251
  store i32 %13, i32* %5
  br label %21

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %16 = call %"class.std::vector"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector"* dereferenceable(24) %15) #3
  call void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector"* %16)
  store i32 -1604052089, i32* %5
  br label %21

; <label>:17:                                     ; preds = %6
  %18 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %19 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %18, i32 1
  store %"class.std::vector"* %19, %"class.std::vector"** %3, align 8
  store i32 -933177867, i32* %5
  br label %21

; <label>:20:                                     ; preds = %6
  ret void

; <label>:21:                                     ; preds = %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector"*) #4 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %3) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"*, %"class.std::vector"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  store %"class.std::vector"* %10, %"class.std::vector"** %4
  %11 = alloca i32
  store i32 -767190401, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %70
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -767190401, label %15
    i32 1421040275, label %19
    i32 1025380522, label %25
    i32 1872822326, label %40
    i32 1372623107, label %68
    i32 -1797177408, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %70

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %17 = icmp ne %"class.std::vector"* %16, null
  %18 = select i1 %17, i32 1421040275, i32 1025380522
  store i32 %18, i32* %11
  br label %70

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %21 to %"class.std::allocator.2"*
  %23 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.2"* dereferenceable(1) %22, %"class.std::vector"* %23, i64 %24)
  store i32 1025380522, i32* %11
  br label %70

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.380
  %27 = load i32, i32* @y.381
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 1872822326, i32 -1797177408
  store i32 %39, i32* %11
  br label %70

; <label>:40:                                     ; preds = %12
  %41 = load i32, i32* @x.380
  %42 = load i32, i32* @y.381
  %43 = add i32 %41, -1134789814
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1134789814
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1372623107, i32 -1797177408
  store i32 %67, i32* %11
  br label %70

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  store i32 1872822326, i32* %11
  br label %70

; <label>:70:                                     ; preds = %69, %40, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator.2"* dereferenceable(1), %"class.std::vector"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.382
  %7 = load i32, i32* @y.383
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1667630113, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %59
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1667630113, label %19
    i32 343610521, label %27
    i32 1203292915, label %50
    i32 1495013337, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %59

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 343610521, i32 1495013337
  store i32 %26, i32* %15
  br label %59

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.2"*, align 8
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %28, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %28, align 8
  %32 = bitcast %"class.std::allocator.2"* %31 to %"class.__gnu_cxx::new_allocator.3"*
  %33 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %34 = load i64, i64* %30, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.3"* %32, %"class.std::vector"* %33, i64 %34)
  %35 = load i32, i32* @x.382
  %36 = load i32, i32* @y.383
  %37 = add i32 %35, 1254692997
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1254692997
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1203292915, i32 1495013337
  store i32 %49, i32* %15
  br label %59

; <label>:50:                                     ; preds = %16
  ret void

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.std::allocator.2"*, align 8
  %53 = alloca %"class.std::vector"*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %52, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %52, align 8
  %56 = bitcast %"class.std::allocator.2"* %55 to %"class.__gnu_cxx::new_allocator.3"*
  %57 = load %"class.std::vector"*, %"class.std::vector"** %53, align 8
  %58 = load i64, i64* %54, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.3"* %56, %"class.std::vector"* %57, i64 %58)
  store i32 343610521, i32* %15
  br label %59

; <label>:59:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::vector"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %9 = bitcast %"class.std::vector"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector"*, %"class.std::vector"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.386
  %7 = load i32, i32* @y.387
  %8 = add i32 %6, -1815648043
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1815648043
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1694356276, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1694356276, label %20
    i32 -865068131, label %28
    i32 -2084913023, label %61
    i32 1375979021, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -865068131, i32 1375979021
  store i32 %27, i32* %16
  br label %68

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %30, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %31, align 8
  %32 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %33 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  call void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector"* %32, %"class.std::vector"* %33)
  %34 = load i32, i32* @x.386
  %35 = load i32, i32* @y.387
  %36 = sub i32 %34, 2010992270
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 2010992270
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -2084913023, i32 1375979021
  store i32 %60, i32* %16
  br label %68

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.std::vector"*, align 8
  %64 = alloca %"class.std::vector"*, align 8
  %65 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %63, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %64, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %65, align 8
  %66 = load %"class.std::vector"*, %"class.std::vector"** %63, align 8
  %67 = load %"class.std::vector"*, %"class.std::vector"** %64, align 8
  call void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector"* %66, %"class.std::vector"* %67)
  store i32 -865068131, i32* %16
  br label %68

; <label>:68:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_(%"class.std::map"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %4 = alloca %"class.std::map"*, align 8
  %5 = alloca i64*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load %"class.std::map"*, %"class.std::map"** %4, align 8
  %7 = getelementptr inbounds %"class.std::map", %"class.std::map"* %6, i32 0, i32 0
  %8 = load i64*, i64** %5, align 8
  %9 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11lower_boundERS1_(%"class.std::_Rb_tree"* %7, i64* dereferenceable(8) %8)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %3, i32 0, i32 0
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  ret %"struct.std::_Rb_tree_node_base"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.30"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator.30"*, align 8
  store %"struct.std::_Rb_tree_iterator.30"* %0, %"struct.std::_Rb_tree_iterator.30"** %3, align 8
  store %"struct.std::_Rb_tree_iterator.30"* %1, %"struct.std::_Rb_tree_iterator.30"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv(%"class.std::map"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %3 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %3, align 8
  %4 = load %"class.std::map"*, %"class.std::map"** %3, align 8
  %5 = getelementptr inbounds %"class.std::map", %"class.std::map"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE3endEv(%"class.std::_Rb_tree"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNKSt3mapIxxSt4lessIxESaISt4pairIKxxEEE8key_compEv(%"class.std::map"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.394
  %5 = load i32, i32* @y.395
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 908713565, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %65
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 908713565, label %17
    i32 -580584401, label %25
    i32 499353332, label %58
    i32 1751030042, label %59
  ]

; <label>:16:                                     ; preds = %14
  br label %65

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -580584401, i32 1751030042
  store i32 %24, i32* %13
  br label %65

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::less", align 1
  %27 = alloca %"class.std::map"*, align 8
  %28 = alloca %"struct.std::less", align 1
  store %"class.std::map"* %0, %"class.std::map"** %27, align 8
  %29 = load %"class.std::map"*, %"class.std::map"** %27, align 8
  %30 = getelementptr inbounds %"class.std::map", %"class.std::map"* %29, i32 0, i32 0
  call void @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8key_compEv(%"class.std::_Rb_tree"* %30)
  %31 = load i32, i32* @x.394
  %32 = load i32, i32* @y.395
  %33 = sub i32 %31, 1863964247
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 1863964247
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 499353332, i32 1751030042
  store i32 %57, i32* %13
  br label %65

; <label>:58:                                     ; preds = %14
  ret void

; <label>:59:                                     ; preds = %14
  %60 = alloca %"struct.std::less", align 1
  %61 = alloca %"class.std::map"*, align 8
  %62 = alloca %"struct.std::less", align 1
  store %"class.std::map"* %0, %"class.std::map"** %61, align 8
  %63 = load %"class.std::map"*, %"class.std::map"** %61, align 8
  %64 = getelementptr inbounds %"class.std::map", %"class.std::map"* %63, i32 0, i32 0
  call void @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8key_compEv(%"class.std::_Rb_tree"* %64)
  store i32 -580584401, i32* %13
  br label %65

; <label>:65:                                     ; preds = %59, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"*, i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca %"struct.std::less"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %9, %11
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.27"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator.30"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree_iterator.30"*, align 8
  store %"struct.std::_Rb_tree_iterator.30"* %0, %"struct.std::_Rb_tree_iterator.30"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  %7 = invoke %"struct.std::pair.27"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %6)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret %"struct.std::pair.27"* %7

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"class.std::_Rb_tree"*, align 8
  %9 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %10 = alloca %"class.std::tuple"*, align 8
  %11 = alloca %"class.std::tuple.31"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %13 = alloca %"struct.std::pair.32", align 8
  %14 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %15 = alloca i8*
  %16 = alloca i32
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %17, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %8, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %9, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %10, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %11, align 8
  %18 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8, align 8
  %19 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %9, align 8
  %20 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %19) #3
  %21 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %22 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %21) #3
  %23 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %11, align 8
  %24 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %23) #3
  %25 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"* %18, %"struct.std::piecewise_construct_t"* dereferenceable(1) %20, %"class.std::tuple"* dereferenceable(8) %22, %"class.std::tuple.31"* dereferenceable(1) %24)
  store %"struct.std::_Rb_tree_node"* %25, %"struct.std::_Rb_tree_node"** %12, align 8
  %26 = bitcast %"struct.std::_Rb_tree_const_iterator"* %14 to i8*
  %27 = bitcast %"struct.std::_Rb_tree_const_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  %29 = invoke dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %28)
          to label %30 unwind label %112

; <label>:30:                                     ; preds = %5
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %14, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree"* %18, %"struct.std::_Rb_tree_node_base"* %32, i64* dereferenceable(8) %29)
          to label %34 unwind label %112

; <label>:34:                                     ; preds = %30
  %35 = bitcast %"struct.std::pair.32"* %13 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %36 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %35, i32 0, i32 0
  %37 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %33, 0
  store %"struct.std::_Rb_tree_node_base"* %37, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %38 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %35, i32 0, i32 1
  %39 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %33, 1
  store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %13, i32 0, i32 1
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = icmp ne %"struct.std::_Rb_tree_node_base"* %41, null
  br i1 %42, label %43, label %120

; <label>:43:                                     ; preds = %34
  %44 = load i32, i32* @x.400
  %45 = load i32, i32* @y.401
  %46 = add i32 %44, 575049156
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 575049156
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %174

; <label>:58:                                     ; preds = %43, %174
  %59 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %13, i32 0, i32 0
  %60 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %13, i32 0, i32 1
  %62 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %63 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  %64 = load i32, i32* @x.400
  %65 = load i32, i32* @y.401
  %66 = add i32 %64, 1347652701
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, 1347652701
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  br i1 %76, label %78, label %174

; <label>:78:                                     ; preds = %58
  %79 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %18, %"struct.std::_Rb_tree_node_base"* %60, %"struct.std::_Rb_tree_node_base"* %62, %"struct.std::_Rb_tree_node"* %63)
          to label %80 unwind label %112

; <label>:80:                                     ; preds = %78
  %81 = load i32, i32* @x.400
  %82 = load i32, i32* @y.401
  %83 = add i32 %81, 638552951
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, 638552951
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %180

; <label>:95:                                     ; preds = %80, %180
  %96 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %79, %"struct.std::_Rb_tree_node_base"** %96, align 8
  %97 = load i32, i32* @x.400
  %98 = load i32, i32* @y.401
  %99 = sub i32 %97, -987384693
  %100 = sub i32 %99, 1
  %101 = add i32 %100, -987384693
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %180

; <label>:111:                                    ; preds = %95
  br label %132

; <label>:112:                                    ; preds = %78, %30, %5
  %113 = landingpad { i8*, i32 }
          catch i8* null
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %15, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %16, align 4
  br label %116

; <label>:116:                                    ; preds = %112
  %117 = load i8*, i8** %15, align 8
  %118 = call i8* @__cxa_begin_catch(i8* %117) #3
  %119 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %18, %"struct.std::_Rb_tree_node"* %119) #3
  invoke void @__cxa_rethrow() #14
          to label %173 unwind label %126

; <label>:120:                                    ; preds = %34
  %121 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %18, %"struct.std::_Rb_tree_node"* %121) #3
  %122 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %13, i32 0, i32 0
  %123 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %122, align 8
  %124 = bitcast %"struct.std::_Rb_tree_node_base"* %123 to %"struct.std::_Rb_tree_node"*
  %125 = bitcast %"struct.std::_Rb_tree_node"* %124 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.30"* %6, %"struct.std::_Rb_tree_node_base"* %125) #3
  br label %132

; <label>:126:                                    ; preds = %116
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %15, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %16, align 4
  invoke void @__cxa_end_catch()
          to label %130 unwind label %170

; <label>:130:                                    ; preds = %126
  br label %165
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:132:                                    ; preds = %120, %111
  %133 = load i32, i32* @x.400
  %134 = load i32, i32* @y.401
  %135 = sub i32 %133, 171917728
  %136 = sub i32 %135, 1
  %137 = add i32 %136, 171917728
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = and i1 %141, %142
  %144 = xor i1 %141, %142
  %145 = or i1 %143, %144
  %146 = or i1 %141, %142
  br i1 %145, label %147, label %182

; <label>:147:                                    ; preds = %132, %182
  %148 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %6, i32 0, i32 0
  %149 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %148, align 8
  %150 = load i32, i32* @x.400
  %151 = load i32, i32* @y.401
  %152 = sub i32 %150, -932747898
  %153 = sub i32 %152, 1
  %154 = add i32 %153, -932747898
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  br i1 %162, label %164, label %182

; <label>:164:                                    ; preds = %147
  ret %"struct.std::_Rb_tree_node_base"* %149

; <label>:165:                                    ; preds = %130
  %166 = load i8*, i8** %15, align 8
  %167 = load i32, i32* %16, align 4
  %168 = insertvalue { i8*, i32 } undef, i8* %166, 0
  %169 = insertvalue { i8*, i32 } %168, i32 %167, 1
  resume { i8*, i32 } %169

; <label>:170:                                    ; preds = %126
  %171 = landingpad { i8*, i32 }
          catch i8* null
  %172 = extractvalue { i8*, i32 } %171, 0
  call void @__clang_call_terminate(i8* %172) #11
  unreachable

; <label>:173:                                    ; preds = %116
  unreachable

; <label>:174:                                    ; preds = %58, %43
  %175 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %13, i32 0, i32 0
  %176 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %175, align 8
  %177 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %13, i32 0, i32 1
  %178 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %177, align 8
  %179 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  br label %58

; <label>:180:                                    ; preds = %95, %80
  %181 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %79, %"struct.std::_Rb_tree_node_base"** %181, align 8
  br label %95

; <label>:182:                                    ; preds = %147, %132
  %183 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %6, i32 0, i32 0
  %184 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %183, align 8
  br label %147
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_iterator.30"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator.30"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator.30"* %1, %"struct.std::_Rb_tree_iterator.30"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt16forward_as_tupleIJxEESt5tupleIJDpOT_EES3_(i64* dereferenceable(8)) #4 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::tuple", align 8
  %3 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  %4 = load i64*, i64** %3, align 8
  %5 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %4) #3
  invoke void @_ZNSt5tupleIJOxEEC2IJxEvEEDpOT_(%"class.std::tuple"* %2, i64* dereferenceable(8) %5)
          to label %6 unwind label %40

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.404
  %8 = load i32, i32* @y.405
  %9 = sub i32 %7, -609585089
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -609585089
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = and i1 %15, %16
  %18 = xor i1 %15, %16
  %19 = or i1 %17, %18
  %20 = or i1 %15, %16
  br i1 %19, label %21, label %85

; <label>:21:                                     ; preds = %6, %85
  %22 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %2, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %23, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = load i32, i32* @x.404
  %27 = load i32, i32* @y.405
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %85

; <label>:39:                                     ; preds = %21
  ret i64* %25

; <label>:40:                                     ; preds = %1
  %41 = load i32, i32* @x.404
  %42 = load i32, i32* @y.405
  %43 = sub i32 %41, -1863381597
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1863381597
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %90

; <label>:55:                                     ; preds = %40, %90
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #11
  %58 = load i32, i32* @x.404
  %59 = load i32, i32* @y.405
  %60 = add i32 %58, 1922753723
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 1922753723
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %90

; <label>:84:                                     ; preds = %55
  unreachable

; <label>:85:                                     ; preds = %21, %6
  %86 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %2, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %87, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  br label %21

; <label>:90:                                     ; preds = %55, %40
  %91 = landingpad { i8*, i32 }
          catch i8* null
  %92 = extractvalue { i8*, i32 } %91, 0
  call void @__clang_call_terminate(i8* %92) #11
  br label %55
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11lower_boundERS1_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.408
  %7 = load i32, i32* @y.409
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1387209150, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1387209150, label %19
    i32 -1116082320, label %27
    i32 916426301, label %53
    i32 1380416329, label %55
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1116082320, i32 1380416329
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %29 = alloca %"class.std::_Rb_tree"*, align 8
  %30 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %29, align 8
  store i64* %1, i64** %30, align 8
  %31 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %29, align 8
  %32 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree"* %31) #3
  %33 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"* %31) #3
  %34 = load i64*, i64** %30, align 8
  %35 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(%"class.std::_Rb_tree"* %31, %"struct.std::_Rb_tree_node"* %32, %"struct.std::_Rb_tree_node"* %33, i64* dereferenceable(8) %34)
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %28, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %28, i32 0, i32 0
  %38 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %37, align 8
  store %"struct.std::_Rb_tree_node_base"* %38, %"struct.std::_Rb_tree_node_base"** %3
  %39 = load i32, i32* @x.408
  %40 = load i32, i32* @y.409
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 916426301, i32 1380416329
  store i32 %52, i32* %15
  br label %67

; <label>:53:                                     ; preds = %16
  %54 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  ret %"struct.std::_Rb_tree_node_base"* %54

; <label>:55:                                     ; preds = %16
  %56 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %57 = alloca %"class.std::_Rb_tree"*, align 8
  %58 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %57, align 8
  store i64* %1, i64** %58, align 8
  %59 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %57, align 8
  %60 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree"* %59) #3
  %61 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"* %59) #3
  %62 = load i64*, i64** %58, align 8
  %63 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(%"class.std::_Rb_tree"* %59, %"struct.std::_Rb_tree_node"* %60, %"struct.std::_Rb_tree_node"* %61, i64* dereferenceable(8) %62)
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %56, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %63, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %56, i32 0, i32 0
  %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %65, align 8
  store i32 -1116082320, i32* %15
  br label %67

; <label>:67:                                     ; preds = %55, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.std::_Rb_tree"*
  %6 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %7 = alloca %"class.std::_Rb_tree"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %10 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %7, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %8, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %9, align 8
  store i64* %3, i64** %10, align 8
  %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7, align 8
  store %"class.std::_Rb_tree"* %11, %"class.std::_Rb_tree"** %5
  %12 = alloca i32
  store i32 1515702352, i32* %12
  br label %13

; <label>:13:                                     ; preds = %4, %79
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1515702352, label %16
    i32 -1361857324, label %20
    i32 -616370382, label %29
    i32 522435268, label %34
    i32 829472218, label %49
    i32 -1942497165, label %68
    i32 -1343163655, label %69
    i32 -1341202254, label %70
    i32 1777937091, label %75
  ]

; <label>:15:                                     ; preds = %13
  br label %79

; <label>:16:                                     ; preds = %13
  %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %18 = icmp ne %"struct.std::_Rb_tree_node"* %17, null
  %19 = select i1 %18, i32 -1361857324, i32 -1341202254
  store i32 %19, i32* %12
  br label %79

; <label>:20:                                     ; preds = %13
  %21 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %22 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %22, i32 0, i32 0
  %24 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %25 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %24)
  %26 = load i64*, i64** %10, align 8
  %27 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %23, i64* dereferenceable(8) %25, i64* dereferenceable(8) %26)
  %28 = select i1 %27, i32 522435268, i32 -616370382
  store i32 %28, i32* %12
  br label %79

; <label>:29:                                     ; preds = %13
  %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  store %"struct.std::_Rb_tree_node"* %30, %"struct.std::_Rb_tree_node"** %9, align 8
  %31 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %32 = bitcast %"struct.std::_Rb_tree_node"* %31 to %"struct.std::_Rb_tree_node_base"*
  %33 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %32) #3
  store %"struct.std::_Rb_tree_node"* %33, %"struct.std::_Rb_tree_node"** %8, align 8
  store i32 -1343163655, i32* %12
  br label %79

; <label>:34:                                     ; preds = %13
  %35 = load i32, i32* @x.410
  %36 = load i32, i32* @y.411
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 829472218, i32 1777937091
  store i32 %48, i32* %12
  br label %79

; <label>:49:                                     ; preds = %13
  %50 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %51 = bitcast %"struct.std::_Rb_tree_node"* %50 to %"struct.std::_Rb_tree_node_base"*
  %52 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %51) #3
  store %"struct.std::_Rb_tree_node"* %52, %"struct.std::_Rb_tree_node"** %8, align 8
  %53 = load i32, i32* @x.410
  %54 = load i32, i32* @y.411
  %55 = sub i32 %53, 1421821350
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 1421821350
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -1942497165, i32 1777937091
  store i32 %67, i32* %12
  br label %79

; <label>:68:                                     ; preds = %13
  store i32 -1343163655, i32* %12
  br label %79

; <label>:69:                                     ; preds = %13
  store i32 1515702352, i32* %12
  br label %79

; <label>:70:                                     ; preds = %13
  %71 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %72 = bitcast %"struct.std::_Rb_tree_node"* %71 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.30"* %6, %"struct.std::_Rb_tree_node_base"* %72) #3
  %73 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %6, i32 0, i32 0
  %74 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %73, align 8
  ret %"struct.std::_Rb_tree_node_base"* %74

; <label>:75:                                     ; preds = %13
  %76 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %77 = bitcast %"struct.std::_Rb_tree_node"* %76 to %"struct.std::_Rb_tree_node_base"*
  %78 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %77) #3
  store %"struct.std::_Rb_tree_node"* %78, %"struct.std::_Rb_tree_node"** %8, align 8
  store i32 829472218, i32* %12
  br label %79

; <label>:79:                                     ; preds = %75, %69, %68, %49, %34, %29, %20, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.414
  %6 = load i32, i32* @y.415
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -359422194, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -359422194, label %18
    i32 -1353258084, label %38
    i32 1239679548, label %59
    i32 -1413677019, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1353258084, i32 -1413677019
  store i32 %37, i32* %14
  br label %67

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %40 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %39, align 8
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %39, align 8
  %42 = call dereferenceable(16) %"struct.std::pair.27"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %41)
  %43 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_(%"struct.std::_Select1st"* %40, %"struct.std::pair.27"* dereferenceable(16) %42)
  store i64* %43, i64** %2
  %44 = load i32, i32* @x.414
  %45 = load i32, i32* @y.415
  %46 = sub i32 %44, 347155849
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 347155849
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1239679548, i32 -1413677019
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %63 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %62, align 8
  %64 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %62, align 8
  %65 = call dereferenceable(16) %"struct.std::pair.27"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %64)
  %66 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_(%"struct.std::_Select1st"* %63, %"struct.std::pair.27"* dereferenceable(16) %65)
  store i32 -1353258084, i32* %14
  br label %67

; <label>:67:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.30"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator.30"* %0, %"struct.std::_Rb_tree_iterator.30"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_(%"struct.std::_Select1st"*, %"struct.std::pair.27"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Select1st"*, align 8
  %4 = alloca %"struct.std::pair.27"*, align 8
  store %"struct.std::_Select1st"* %0, %"struct.std::_Select1st"** %3, align 8
  store %"struct.std::pair.27"* %1, %"struct.std::pair.27"** %4, align 8
  %5 = load %"struct.std::_Select1st"*, %"struct.std::_Select1st"** %3, align 8
  %6 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %4, align 8
  %7 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %6, i32 0, i32 0
  ret i64* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.27"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = call %"struct.std::pair.27"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %3)
  ret %"struct.std::pair.27"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.27"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.27"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.422
  %6 = load i32, i32* @y.423
  %7 = add i32 %5, -1454827412
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1454827412
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 276427741, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 276427741, label %19
    i32 1386171643, label %27
    i32 1735721562, label %46
    i32 -27056322, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1386171643, i32 -27056322
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %29, i32 0, i32 1
  %31 = call %"struct.std::pair.27"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %30) #3
  store %"struct.std::pair.27"* %31, %"struct.std::pair.27"** %2
  %32 = load i32, i32* @x.422
  %33 = load i32, i32* @y.423
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1735721562, i32 -27056322
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.std::pair.27"*, %"struct.std::pair.27"** %2
  ret %"struct.std::pair.27"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %49, align 8
  %50 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %49, align 8
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %50, i32 0, i32 1
  %52 = call %"struct.std::pair.27"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %51) #3
  store i32 1386171643, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.27"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.27"*
  ret %"struct.std::pair.27"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.426
  %6 = load i32, i32* @y.427
  %7 = sub i32 %5, 1167485746
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1167485746
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1152691543, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1152691543, label %19
    i32 -378470734, label %27
    i32 -812436123, label %59
    i32 1627272350, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -378470734, i32 1627272350
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %28, align 8
  %29 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %28, align 8
  %30 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %29, i32 0, i32 0
  %31 = bitcast [16 x i8]* %30 to i8*
  store i8* %31, i8** %2
  %32 = load i32, i32* @x.426
  %33 = load i32, i32* @y.427
  %34 = add i32 %32, -1634049838
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1634049838
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -812436123, i32 1627272350
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i8*, i8** %2
  ret i8* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %62, align 8
  %63 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %62, align 8
  %64 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %63, i32 0, i32 0
  %65 = bitcast [16 x i8]* %64 to i8*
  store i32 -378470734, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE3endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.30"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8key_compEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.430
  %5 = load i32, i32* @y.431
  %6 = add i32 %4, 1738197576
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1738197576
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1518236930, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1518236930, label %18
    i32 1199075128, label %26
    i32 1136743731, label %58
    i32 -1354359369, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1199075128, i32 -1354359369
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::less", align 1
  %28 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %28, align 8
  %29 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %30, i32 0, i32 0
  %32 = load i32, i32* @x.430
  %33 = load i32, i32* @y.431
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1136743731, i32 -1354359369
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::less", align 1
  %61 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %61, align 8
  %62 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %61, align 8
  %63 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %63, i32 0, i32 0
  store i32 1199075128, i32* %14
  br label %65

; <label>:65:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.31"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.31"* %3, %"class.std::tuple.31"** %8, align 8
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %11 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree"* %10)
  store %"struct.std::_Rb_tree_node"* %11, %"struct.std::_Rb_tree_node"** %9, align 8
  %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %13 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %14 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %13) #3
  %15 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %16 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %15) #3
  %17 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %8, align 8
  %18 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %17) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"* %10, %"struct.std::_Rb_tree_node"* %12, %"struct.std::piecewise_construct_t"* dereferenceable(1) %14, %"class.std::tuple"* dereferenceable(8) %16, %"class.std::tuple.31"* dereferenceable(1) %18)
  %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  ret %"struct.std::_Rb_tree_node"* %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"struct.std::piecewise_construct_t"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.434
  %6 = load i32, i32* @y.435
  %7 = add i32 %5, -1467011525
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1467011525
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -195969649, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -195969649, label %19
    i32 353617754, label %27
    i32 -1554040305, label %45
    i32 -251787805, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 353617754, i32 -251787805
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::piecewise_construct_t"*, align 8
  store %"struct.std::piecewise_construct_t"* %0, %"struct.std::piecewise_construct_t"** %28, align 8
  %29 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %28, align 8
  store %"struct.std::piecewise_construct_t"* %29, %"struct.std::piecewise_construct_t"** %2
  %30 = load i32, i32* @x.434
  %31 = load i32, i32* @y.435
  %32 = sub i32 %30, -1259540719
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1259540719
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1554040305, i32 -251787805
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %2
  ret %"struct.std::piecewise_construct_t"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::piecewise_construct_t"*, align 8
  store %"struct.std::piecewise_construct_t"* %0, %"struct.std::piecewise_construct_t"** %48, align 8
  %49 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %48, align 8
  store i32 353617754, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  ret %"class.std::tuple"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::tuple.31"*, align 8
  store %"class.std::tuple.31"* %0, %"class.std::tuple.31"** %2, align 8
  %3 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %2, align 8
  ret %"class.std::tuple.31"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca %"struct.std::_Rb_tree_node_base"*
  %10 = alloca %"struct.std::_Rb_tree_node_base"*
  %11 = alloca %"class.std::_Rb_tree"*
  %12 = alloca %"struct.std::pair.32", align 8
  %13 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %14 = alloca %"class.std::_Rb_tree"*, align 8
  %15 = alloca i64*, align 8
  %16 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %17 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %18 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %19 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %20 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %21 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %22 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %23 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %24, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %14, align 8
  store i64* %2, i64** %15, align 8
  %25 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %14, align 8
  store %"class.std::_Rb_tree"* %25, %"class.std::_Rb_tree"** %11
  %26 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxxEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"* %13) #3
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %26, %"struct.std::_Rb_tree_node_base"** %27, align 8
  %28 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  %29 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  store %"struct.std::_Rb_tree_node_base"* %29, %"struct.std::_Rb_tree_node_base"** %10
  %30 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %31 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"* %30) #3
  %32 = bitcast %"struct.std::_Rb_tree_node"* %31 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %32, %"struct.std::_Rb_tree_node_base"** %9
  %33 = alloca i32
  store i32 1274282927, i32* %33
  br label %34

; <label>:34:                                     ; preds = %3, %594
  %35 = load i32, i32* %33
  switch i32 %35, label %36 [
    i32 1274282927, label %37
    i32 -1257896447, label %42
    i32 -1857557006, label %47
    i32 -990931811, label %58
    i32 1572129357, label %61
    i32 -737961079, label %70
    i32 711527141, label %80
    i32 -68947448, label %90
    i32 803779378, label %95
    i32 246804537, label %123
    i32 -1687664120, label %160
    i32 661870776, label %163
    i32 -1019177332, label %169
    i32 1071136221, label %184
    i32 643573098, label %201
    i32 2072011103, label %202
    i32 530219765, label %205
    i32 -709369566, label %214
    i32 -219918292, label %242
    i32 533469507, label %278
    i32 65477991, label %281
    i32 63602727, label %291
    i32 -1227671574, label %307
    i32 -204406872, label %324
    i32 -1639318570, label %325
    i32 165956463, label %341
    i32 2133341368, label %365
    i32 -1187822609, label %368
    i32 1751952097, label %396
    i32 -913350262, label %428
    i32 -270459313, label %431
    i32 535891463, label %459
    i32 -1560145403, label %487
    i32 -1988324894, label %488
    i32 -1606858164, label %491
    i32 -1385377179, label %500
    i32 -1653958134, label %502
    i32 -101186440, label %530
    i32 1508652451, label %548
    i32 1442808380, label %550
    i32 -1137103700, label %560
    i32 -45223752, label %562
    i32 2095814953, label %571
    i32 1828388516, label %574
    i32 -1418375564, label %584
    i32 520332353, label %589
    i32 -711613278, label %591
  ]

; <label>:36:                                     ; preds = %34
  br label %594

; <label>:37:                                     ; preds = %34
  %38 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10
  %39 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9
  %40 = icmp eq %"struct.std::_Rb_tree_node_base"* %38, %39
  %41 = select i1 %40, i32 -1257896447, i32 -737961079
  store i32 %41, i32* %33
  br label %594

; <label>:42:                                     ; preds = %34
  %43 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %44 = call i64 @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE4sizeEv(%"class.std::_Rb_tree"* %43) #3
  %45 = icmp ugt i64 %44, 0
  %46 = select i1 %45, i32 -1857557006, i32 1572129357
  store i32 %46, i32* %33
  br label %594

; <label>:47:                                     ; preds = %34
  %48 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %49 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %49, i32 0, i32 0
  %51 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %52 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %51) #3
  %53 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %52, align 8
  %54 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %53)
  %55 = load i64*, i64** %15, align 8
  %56 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %50, i64* dereferenceable(8) %54, i64* dereferenceable(8) %55)
  %57 = select i1 %56, i32 -990931811, i32 1572129357
  store i32 %57, i32* %33
  br label %594

; <label>:58:                                     ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %59 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %60 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %59) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %17, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %60)
  store i32 -1653958134, i32* %33
  br label %594

; <label>:61:                                     ; preds = %34
  %62 = load i64*, i64** %15, align 8
  %63 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %64 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %63, i64* dereferenceable(8) %62)
  %65 = bitcast %"struct.std::pair.32"* %12 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %66 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %65, i32 0, i32 0
  %67 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %64, 0
  store %"struct.std::_Rb_tree_node_base"* %67, %"struct.std::_Rb_tree_node_base"** %66, align 8
  %68 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %65, i32 0, i32 1
  %69 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %64, 1
  store %"struct.std::_Rb_tree_node_base"* %69, %"struct.std::_Rb_tree_node_base"** %68, align 8
  store i32 -1653958134, i32* %33
  br label %594

; <label>:70:                                     ; preds = %34
  %71 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %72 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %72, i32 0, i32 0
  %74 = load i64*, i64** %15, align 8
  %75 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %77 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %76)
  %78 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %73, i64* dereferenceable(8) %74, i64* dereferenceable(8) %77)
  %79 = select i1 %78, i32 711527141, i32 -709369566
  store i32 %79, i32* %33
  br label %594

; <label>:80:                                     ; preds = %34
  %81 = bitcast %"struct.std::_Rb_tree_iterator.30"* %18 to i8*
  %82 = bitcast %"struct.std::_Rb_tree_iterator.30"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 8, i32 8, i1 false)
  %83 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  %84 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %83, align 8
  %85 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %86 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %85) #3
  %87 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %86, align 8
  %88 = icmp eq %"struct.std::_Rb_tree_node_base"* %84, %87
  %89 = select i1 %88, i32 -68947448, i32 803779378
  store i32 %89, i32* %33
  br label %594

; <label>:90:                                     ; preds = %34
  %91 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %92 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %91) #3
  %93 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %94 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %93) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.32"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %92, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %94)
  store i32 -1653958134, i32* %33
  br label %594

; <label>:95:                                     ; preds = %34
  %96 = load i32, i32* @x.440
  %97 = load i32, i32* @y.441
  %98 = sub i32 %96, -574435148
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -574435148
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 246804537, i32 1442808380
  store i32 %122, i32* %33
  br label %594

; <label>:123:                                    ; preds = %34
  %124 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %125 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %124, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %125, i32 0, i32 0
  %127 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.30"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator.30"* %18) #3
  %128 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %127, i32 0, i32 0
  %129 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %128, align 8
  %130 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %129)
  %131 = load i64*, i64** %15, align 8
  %132 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %126, i64* dereferenceable(8) %130, i64* dereferenceable(8) %131)
  store i1 %132, i1* %8
  %133 = load i32, i32* @x.440
  %134 = load i32, i32* @y.441
  %135 = sub i32 %133, 1111919457
  %136 = sub i32 %135, 1
  %137 = add i32 %136, 1111919457
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 true, true
  %146 = and i1 %143, true
  %147 = and i1 %141, %145
  %148 = and i1 %144, true
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 true, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  %159 = select i1 %157, i32 -1687664120, i32 1442808380
  store i32 %159, i32* %33
  br label %594

; <label>:160:                                    ; preds = %34
  %161 = load volatile i1, i1* %8
  %162 = select i1 %161, i32 661870776, i32 530219765
  store i32 %162, i32* %33
  br label %594

; <label>:163:                                    ; preds = %34
  %164 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %18, i32 0, i32 0
  %165 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %164, align 8
  %166 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %165) #3
  %167 = icmp eq %"struct.std::_Rb_tree_node"* %166, null
  %168 = select i1 %167, i32 -1019177332, i32 2072011103
  store i32 %168, i32* %33
  br label %594

; <label>:169:                                    ; preds = %34
  %170 = load i32, i32* @x.440
  %171 = load i32, i32* @y.441
  %172 = sub i32 0, 1
  %173 = add i32 %170, %172
  %174 = sub i32 %170, 1
  %175 = mul i32 %170, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %171, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  %183 = select i1 %181, i32 1071136221, i32 -1137103700
  store i32 %183, i32* %33
  br label %594

; <label>:184:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %185 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %18, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %19, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %185)
  %186 = load i32, i32* @x.440
  %187 = load i32, i32* @y.441
  %188 = add i32 %186, -936707278
  %189 = sub i32 %188, 1
  %190 = sub i32 %189, -936707278
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = and i1 %194, %195
  %197 = xor i1 %194, %195
  %198 = or i1 %196, %197
  %199 = or i1 %194, %195
  %200 = select i1 %198, i32 643573098, i32 -1137103700
  store i32 %200, i32* %33
  br label %594

; <label>:201:                                    ; preds = %34
  store i32 -1653958134, i32* %33
  br label %594

; <label>:202:                                    ; preds = %34
  %203 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.32"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %203, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %204)
  store i32 -1653958134, i32* %33
  br label %594

; <label>:205:                                    ; preds = %34
  %206 = load i64*, i64** %15, align 8
  %207 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %208 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %207, i64* dereferenceable(8) %206)
  %209 = bitcast %"struct.std::pair.32"* %12 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %210 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %209, i32 0, i32 0
  %211 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %208, 0
  store %"struct.std::_Rb_tree_node_base"* %211, %"struct.std::_Rb_tree_node_base"** %210, align 8
  %212 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %209, i32 0, i32 1
  %213 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %208, 1
  store %"struct.std::_Rb_tree_node_base"* %213, %"struct.std::_Rb_tree_node_base"** %212, align 8
  store i32 -1653958134, i32* %33
  br label %594

; <label>:214:                                    ; preds = %34
  %215 = load i32, i32* @x.440
  %216 = load i32, i32* @y.441
  %217 = add i32 %215, -692047207
  %218 = sub i32 %217, 1
  %219 = sub i32 %218, -692047207
  %220 = sub i32 %215, 1
  %221 = mul i32 %215, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %216, 10
  %225 = xor i1 %223, true
  %226 = xor i1 %224, true
  %227 = xor i1 false, true
  %228 = and i1 %225, false
  %229 = and i1 %223, %227
  %230 = and i1 %226, false
  %231 = and i1 %224, %227
  %232 = or i1 %228, %229
  %233 = or i1 %230, %231
  %234 = xor i1 %232, %233
  %235 = or i1 %225, %226
  %236 = xor i1 %235, true
  %237 = or i1 false, %227
  %238 = and i1 %236, %237
  %239 = or i1 %234, %238
  %240 = or i1 %223, %224
  %241 = select i1 %239, i32 -219918292, i32 -45223752
  store i32 %241, i32* %33
  br label %594

; <label>:242:                                    ; preds = %34
  %243 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %244 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %243, i32 0, i32 0
  %245 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %244, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  %247 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %246, align 8
  %248 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %247)
  %249 = load i64*, i64** %15, align 8
  %250 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %245, i64* dereferenceable(8) %248, i64* dereferenceable(8) %249)
  store i1 %250, i1* %7
  %251 = load i32, i32* @x.440
  %252 = load i32, i32* @y.441
  %253 = sub i32 %251, 594930785
  %254 = sub i32 %253, 1
  %255 = add i32 %254, 594930785
  %256 = sub i32 %251, 1
  %257 = mul i32 %251, %255
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %252, 10
  %261 = xor i1 %259, true
  %262 = xor i1 %260, true
  %263 = xor i1 true, true
  %264 = and i1 %261, true
  %265 = and i1 %259, %263
  %266 = and i1 %262, true
  %267 = and i1 %260, %263
  %268 = or i1 %264, %265
  %269 = or i1 %266, %267
  %270 = xor i1 %268, %269
  %271 = or i1 %261, %262
  %272 = xor i1 %271, true
  %273 = or i1 true, %263
  %274 = and i1 %272, %273
  %275 = or i1 %270, %274
  %276 = or i1 %259, %260
  %277 = select i1 %275, i32 533469507, i32 -45223752
  store i32 %277, i32* %33
  br label %594

; <label>:278:                                    ; preds = %34
  %279 = load volatile i1, i1* %7
  %280 = select i1 %279, i32 65477991, i32 -1385377179
  store i32 %280, i32* %33
  br label %594

; <label>:281:                                    ; preds = %34
  %282 = bitcast %"struct.std::_Rb_tree_iterator.30"* %20 to i8*
  %283 = bitcast %"struct.std::_Rb_tree_iterator.30"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %282, i8* %283, i64 8, i32 8, i1 false)
  %284 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  %285 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %284, align 8
  %286 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %287 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %286) #3
  %288 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %287, align 8
  %289 = icmp eq %"struct.std::_Rb_tree_node_base"* %285, %288
  %290 = select i1 %289, i32 63602727, i32 -1639318570
  store i32 %290, i32* %33
  br label %594

; <label>:291:                                    ; preds = %34
  %292 = load i32, i32* @x.440
  %293 = load i32, i32* @y.441
  %294 = add i32 %292, -1541767350
  %295 = sub i32 %294, 1
  %296 = sub i32 %295, -1541767350
  %297 = sub i32 %292, 1
  %298 = mul i32 %292, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %293, 10
  %302 = and i1 %300, %301
  %303 = xor i1 %300, %301
  %304 = or i1 %302, %303
  %305 = or i1 %300, %301
  %306 = select i1 %304, i32 -1227671574, i32 2095814953
  store i32 %306, i32* %33
  br label %594

; <label>:307:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %308 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %309 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %308) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %21, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %309)
  %310 = load i32, i32* @x.440
  %311 = load i32, i32* @y.441
  %312 = sub i32 0, 1
  %313 = add i32 %310, %312
  %314 = sub i32 %310, 1
  %315 = mul i32 %310, %313
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %311, 10
  %319 = and i1 %317, %318
  %320 = xor i1 %317, %318
  %321 = or i1 %319, %320
  %322 = or i1 %317, %318
  %323 = select i1 %321, i32 -204406872, i32 2095814953
  store i32 %323, i32* %33
  br label %594

; <label>:324:                                    ; preds = %34
  store i32 -1653958134, i32* %33
  br label %594

; <label>:325:                                    ; preds = %34
  %326 = load i32, i32* @x.440
  %327 = load i32, i32* @y.441
  %328 = sub i32 %326, -280230857
  %329 = sub i32 %328, 1
  %330 = add i32 %329, -280230857
  %331 = sub i32 %326, 1
  %332 = mul i32 %326, %330
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %327, 10
  %336 = and i1 %334, %335
  %337 = xor i1 %334, %335
  %338 = or i1 %336, %337
  %339 = or i1 %334, %335
  %340 = select i1 %338, i32 165956463, i32 1828388516
  store i32 %340, i32* %33
  br label %594

; <label>:341:                                    ; preds = %34
  %342 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %343 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %342, i32 0, i32 0
  %344 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %343, i32 0, i32 0
  %345 = load i64*, i64** %15, align 8
  %346 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.30"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEppEv(%"struct.std::_Rb_tree_iterator.30"* %20) #3
  %347 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %346, i32 0, i32 0
  %348 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %347, align 8
  %349 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %348)
  %350 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %344, i64* dereferenceable(8) %345, i64* dereferenceable(8) %349)
  store i1 %350, i1* %6
  %351 = load i32, i32* @x.440
  %352 = load i32, i32* @y.441
  %353 = sub i32 0, 1
  %354 = add i32 %351, %353
  %355 = sub i32 %351, 1
  %356 = mul i32 %351, %354
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %352, 10
  %360 = and i1 %358, %359
  %361 = xor i1 %358, %359
  %362 = or i1 %360, %361
  %363 = or i1 %358, %359
  %364 = select i1 %362, i32 2133341368, i32 1828388516
  store i32 %364, i32* %33
  br label %594

; <label>:365:                                    ; preds = %34
  %366 = load volatile i1, i1* %6
  %367 = select i1 %366, i32 -1187822609, i32 -1606858164
  store i32 %367, i32* %33
  br label %594

; <label>:368:                                    ; preds = %34
  %369 = load i32, i32* @x.440
  %370 = load i32, i32* @y.441
  %371 = add i32 %369, 167910300
  %372 = sub i32 %371, 1
  %373 = sub i32 %372, 167910300
  %374 = sub i32 %369, 1
  %375 = mul i32 %369, %373
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %370, 10
  %379 = xor i1 %377, true
  %380 = xor i1 %378, true
  %381 = xor i1 false, true
  %382 = and i1 %379, false
  %383 = and i1 %377, %381
  %384 = and i1 %380, false
  %385 = and i1 %378, %381
  %386 = or i1 %382, %383
  %387 = or i1 %384, %385
  %388 = xor i1 %386, %387
  %389 = or i1 %379, %380
  %390 = xor i1 %389, true
  %391 = or i1 false, %381
  %392 = and i1 %390, %391
  %393 = or i1 %388, %392
  %394 = or i1 %377, %378
  %395 = select i1 %393, i32 1751952097, i32 -1418375564
  store i32 %395, i32* %33
  br label %594

; <label>:396:                                    ; preds = %34
  %397 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  %398 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %397, align 8
  %399 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %398) #3
  %400 = icmp eq %"struct.std::_Rb_tree_node"* %399, null
  store i1 %400, i1* %5
  %401 = load i32, i32* @x.440
  %402 = load i32, i32* @y.441
  %403 = sub i32 %401, 480820201
  %404 = sub i32 %403, 1
  %405 = add i32 %404, 480820201
  %406 = sub i32 %401, 1
  %407 = mul i32 %401, %405
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %402, 10
  %411 = xor i1 %409, true
  %412 = xor i1 %410, true
  %413 = xor i1 true, true
  %414 = and i1 %411, true
  %415 = and i1 %409, %413
  %416 = and i1 %412, true
  %417 = and i1 %410, %413
  %418 = or i1 %414, %415
  %419 = or i1 %416, %417
  %420 = xor i1 %418, %419
  %421 = or i1 %411, %412
  %422 = xor i1 %421, true
  %423 = or i1 true, %413
  %424 = and i1 %422, %423
  %425 = or i1 %420, %424
  %426 = or i1 %409, %410
  %427 = select i1 %425, i32 -913350262, i32 -1418375564
  store i32 %427, i32* %33
  br label %594

; <label>:428:                                    ; preds = %34
  %429 = load volatile i1, i1* %5
  %430 = select i1 %429, i32 -270459313, i32 -1988324894
  store i32 %430, i32* %33
  br label %594

; <label>:431:                                    ; preds = %34
  %432 = load i32, i32* @x.440
  %433 = load i32, i32* @y.441
  %434 = sub i32 %432, -331207863
  %435 = sub i32 %434, 1
  %436 = add i32 %435, -331207863
  %437 = sub i32 %432, 1
  %438 = mul i32 %432, %436
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %433, 10
  %442 = xor i1 %440, true
  %443 = xor i1 %441, true
  %444 = xor i1 false, true
  %445 = and i1 %442, false
  %446 = and i1 %440, %444
  %447 = and i1 %443, false
  %448 = and i1 %441, %444
  %449 = or i1 %445, %446
  %450 = or i1 %447, %448
  %451 = xor i1 %449, %450
  %452 = or i1 %442, %443
  %453 = xor i1 %452, true
  %454 = or i1 false, %444
  %455 = and i1 %453, %454
  %456 = or i1 %451, %455
  %457 = or i1 %440, %441
  %458 = select i1 %456, i32 535891463, i32 520332353
  store i32 %458, i32* %33
  br label %594

; <label>:459:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %460 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %22, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %460)
  %461 = load i32, i32* @x.440
  %462 = load i32, i32* @y.441
  %463 = sub i32 0, 1
  %464 = add i32 %461, %463
  %465 = sub i32 %461, 1
  %466 = mul i32 %461, %464
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %462, 10
  %470 = xor i1 %468, true
  %471 = xor i1 %469, true
  %472 = xor i1 false, true
  %473 = and i1 %470, false
  %474 = and i1 %468, %472
  %475 = and i1 %471, false
  %476 = and i1 %469, %472
  %477 = or i1 %473, %474
  %478 = or i1 %475, %476
  %479 = xor i1 %477, %478
  %480 = or i1 %470, %471
  %481 = xor i1 %480, true
  %482 = or i1 false, %472
  %483 = and i1 %481, %482
  %484 = or i1 %479, %483
  %485 = or i1 %468, %469
  %486 = select i1 %484, i32 -1560145403, i32 520332353
  store i32 %486, i32* %33
  br label %594

; <label>:487:                                    ; preds = %34
  store i32 -1653958134, i32* %33
  br label %594

; <label>:488:                                    ; preds = %34
  %489 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %20, i32 0, i32 0
  %490 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %20, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.32"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %489, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %490)
  store i32 -1653958134, i32* %33
  br label %594

; <label>:491:                                    ; preds = %34
  %492 = load i64*, i64** %15, align 8
  %493 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %494 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %493, i64* dereferenceable(8) %492)
  %495 = bitcast %"struct.std::pair.32"* %12 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %496 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %495, i32 0, i32 0
  %497 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %494, 0
  store %"struct.std::_Rb_tree_node_base"* %497, %"struct.std::_Rb_tree_node_base"** %496, align 8
  %498 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %495, i32 0, i32 1
  %499 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %494, 1
  store %"struct.std::_Rb_tree_node_base"* %499, %"struct.std::_Rb_tree_node_base"** %498, align 8
  store i32 -1653958134, i32* %33
  br label %594

; <label>:500:                                    ; preds = %34
  %501 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %23, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.32"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %501, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %23)
  store i32 -1653958134, i32* %33
  br label %594

; <label>:502:                                    ; preds = %34
  %503 = load i32, i32* @x.440
  %504 = load i32, i32* @y.441
  %505 = sub i32 %503, 141006418
  %506 = sub i32 %505, 1
  %507 = add i32 %506, 141006418
  %508 = sub i32 %503, 1
  %509 = mul i32 %503, %507
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %504, 10
  %513 = xor i1 %511, true
  %514 = xor i1 %512, true
  %515 = xor i1 false, true
  %516 = and i1 %513, false
  %517 = and i1 %511, %515
  %518 = and i1 %514, false
  %519 = and i1 %512, %515
  %520 = or i1 %516, %517
  %521 = or i1 %518, %519
  %522 = xor i1 %520, %521
  %523 = or i1 %513, %514
  %524 = xor i1 %523, true
  %525 = or i1 false, %515
  %526 = and i1 %524, %525
  %527 = or i1 %522, %526
  %528 = or i1 %511, %512
  %529 = select i1 %527, i32 -101186440, i32 -711613278
  store i32 %529, i32* %33
  br label %594

; <label>:530:                                    ; preds = %34
  %531 = bitcast %"struct.std::pair.32"* %12 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %532 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %531, align 8
  store { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %532, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %4
  %533 = load i32, i32* @x.440
  %534 = load i32, i32* @y.441
  %535 = sub i32 %533, 2091147834
  %536 = sub i32 %535, 1
  %537 = add i32 %536, 2091147834
  %538 = sub i32 %533, 1
  %539 = mul i32 %533, %537
  %540 = urem i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = icmp slt i32 %534, 10
  %543 = and i1 %541, %542
  %544 = xor i1 %541, %542
  %545 = or i1 %543, %544
  %546 = or i1 %541, %542
  %547 = select i1 %545, i32 1508652451, i32 -711613278
  store i32 %547, i32* %33
  br label %594

; <label>:548:                                    ; preds = %34
  %549 = load volatile { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %4
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %549

; <label>:550:                                    ; preds = %34
  %551 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %552 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %551, i32 0, i32 0
  %553 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %552, i32 0, i32 0
  %554 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.30"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator.30"* %18) #3
  %555 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %554, i32 0, i32 0
  %556 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %555, align 8
  %557 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %556)
  %558 = load i64*, i64** %15, align 8
  %559 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %553, i64* dereferenceable(8) %557, i64* dereferenceable(8) %558)
  store i32 246804537, i32* %33
  br label %594

; <label>:560:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %561 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %18, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %19, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %561)
  store i32 1071136221, i32* %33
  br label %594

; <label>:562:                                    ; preds = %34
  %563 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %564 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %563, i32 0, i32 0
  %565 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %564, i32 0, i32 0
  %566 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  %567 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %566, align 8
  %568 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %567)
  %569 = load i64*, i64** %15, align 8
  %570 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %565, i64* dereferenceable(8) %568, i64* dereferenceable(8) %569)
  store i32 -219918292, i32* %33
  br label %594

; <label>:571:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %572 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %573 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %572) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %21, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %573)
  store i32 -1227671574, i32* %33
  br label %594

; <label>:574:                                    ; preds = %34
  %575 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %576 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %575, i32 0, i32 0
  %577 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %576, i32 0, i32 0
  %578 = load i64*, i64** %15, align 8
  %579 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.30"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEppEv(%"struct.std::_Rb_tree_iterator.30"* %20) #3
  %580 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %579, i32 0, i32 0
  %581 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %580, align 8
  %582 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %581)
  %583 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %577, i64* dereferenceable(8) %578, i64* dereferenceable(8) %582)
  store i32 165956463, i32* %33
  br label %594

; <label>:584:                                    ; preds = %34
  %585 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  %586 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %585, align 8
  %587 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %586) #3
  %588 = icmp eq %"struct.std::_Rb_tree_node"* %587, null
  store i32 1751952097, i32* %33
  br label %594

; <label>:589:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %590 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %16, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %22, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %590)
  store i32 535891463, i32* %33
  br label %594

; <label>:591:                                    ; preds = %34
  %592 = bitcast %"struct.std::pair.32"* %12 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %593 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %592, align 8
  store i32 -101186440, i32* %33
  br label %594

; <label>:594:                                    ; preds = %591, %589, %584, %574, %571, %562, %560, %550, %530, %502, %500, %491, %488, %487, %459, %431, %428, %396, %368, %365, %341, %325, %324, %307, %291, %281, %278, %242, %214, %205, %202, %201, %184, %169, %163, %160, %123, %95, %90, %80, %70, %61, %58, %47, %42, %37, %36
  br label %34
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"struct.std::_Rb_tree_node_base"*
  %7 = alloca i1
  %8 = alloca %"struct.std::_Rb_tree_node_base"*
  %9 = alloca %"class.std::_Rb_tree"*
  %10 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %11 = alloca %"class.std::_Rb_tree"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %13 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %14 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %15 = alloca i8, align 1
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %11, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %12, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node"* %3, %"struct.std::_Rb_tree_node"** %14, align 8
  %16 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11, align 8
  store %"class.std::_Rb_tree"* %16, %"class.std::_Rb_tree"** %9
  %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %8
  %18 = alloca i32
  store i32 268627167, i32* %18
  %19 = alloca i1
  br label %20

; <label>:20:                                     ; preds = %4, %177
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 268627167, label %23
    i32 1094236026, label %27
    i32 230295356, label %42
    i32 -231838389, label %62
    i32 -1206263797, label %65
    i32 -311527454, label %74
    i32 -255198686, label %91
    i32 1189182726, label %128
    i32 -1505683740, label %130
    i32 -987417672, label %136
  ]

; <label>:22:                                     ; preds = %20
  br label %177

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8
  %25 = icmp ne %"struct.std::_Rb_tree_node_base"* %24, null
  %26 = select i1 %25, i32 -311527454, i32 1094236026
  store i32 %26, i32* %18
  store i1 true, i1* %19
  br label %177

; <label>:27:                                     ; preds = %20
  %28 = load i32, i32* @x.442
  %29 = load i32, i32* @y.443
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 230295356, i32 -1505683740
  store i32 %41, i32* %18
  br label %177

; <label>:42:                                     ; preds = %20
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %44 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %45 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"* %44) #3
  %46 = bitcast %"struct.std::_Rb_tree_node"* %45 to %"struct.std::_Rb_tree_node_base"*
  %47 = icmp eq %"struct.std::_Rb_tree_node_base"* %43, %46
  store i1 %47, i1* %7
  %48 = load i32, i32* @x.442
  %49 = load i32, i32* @y.443
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -231838389, i32 -1505683740
  store i32 %61, i32* %18
  br label %177

; <label>:62:                                     ; preds = %20
  %63 = load volatile i1, i1* %7
  %64 = select i1 %63, i32 -311527454, i32 -1206263797
  store i32 %64, i32* %18
  store i1 true, i1* %19
  br label %177

; <label>:65:                                     ; preds = %20
  %66 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %67 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %67, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %70 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %69)
  %71 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %72 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %71)
  %73 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %68, i64* dereferenceable(8) %70, i64* dereferenceable(8) %72)
  store i32 -311527454, i32* %18
  store i1 %73, i1* %19
  br label %177

; <label>:74:                                     ; preds = %20
  %75 = load i1, i1* %19
  store i1 %75, i1* %5
  %76 = load i32, i32* @x.442
  %77 = load i32, i32* @y.443
  %78 = sub i32 %76, 656059068
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 656059068
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 -255198686, i32 -987417672
  store i32 %90, i32* %18
  br label %177

; <label>:91:                                     ; preds = %20
  %92 = load volatile i1, i1* %5
  %93 = zext i1 %92 to i8
  store i8 %93, i8* %15, align 1
  %94 = load i8, i8* %15, align 1
  %95 = trunc i8 %94 to i1
  %96 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %97 = bitcast %"struct.std::_Rb_tree_node"* %96 to %"struct.std::_Rb_tree_node_base"*
  %98 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %99 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %100 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %100, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %95, %"struct.std::_Rb_tree_node_base"* %97, %"struct.std::_Rb_tree_node_base"* %98, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %101) #3
  %102 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %103 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %102, i32 0, i32 0
  %104 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %103, i32 0, i32 2
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, -1938644810496584329
  %107 = add i64 %106, 1
  %108 = sub i64 %107, -1938644810496584329
  %109 = add i64 %105, 1
  store i64 %108, i64* %104, align 8
  %110 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %111 = bitcast %"struct.std::_Rb_tree_node"* %110 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.30"* %10, %"struct.std::_Rb_tree_node_base"* %111) #3
  %112 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %10, i32 0, i32 0
  %113 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %112, align 8
  store %"struct.std::_Rb_tree_node_base"* %113, %"struct.std::_Rb_tree_node_base"** %6
  %114 = load i32, i32* @x.442
  %115 = load i32, i32* @y.443
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 1189182726, i32 -987417672
  store i32 %127, i32* %18
  br label %177

; <label>:128:                                    ; preds = %20
  %129 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6
  ret %"struct.std::_Rb_tree_node_base"* %129

; <label>:130:                                    ; preds = %20
  %131 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %132 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %133 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"* %132) #3
  %134 = bitcast %"struct.std::_Rb_tree_node"* %133 to %"struct.std::_Rb_tree_node_base"*
  %135 = icmp eq %"struct.std::_Rb_tree_node_base"* %131, %134
  store i32 230295356, i32* %18
  br label %177

; <label>:136:                                    ; preds = %20
  %137 = load volatile i1, i1* %5
  %138 = zext i1 %137 to i8
  store i8 %138, i8* %15, align 1
  %139 = load i8, i8* %15, align 1
  %140 = trunc i8 %139 to i1
  %141 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %142 = bitcast %"struct.std::_Rb_tree_node"* %141 to %"struct.std::_Rb_tree_node_base"*
  %143 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %144 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %145 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %144, i32 0, i32 0
  %146 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %145, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %140, %"struct.std::_Rb_tree_node_base"* %142, %"struct.std::_Rb_tree_node_base"* %143, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %146) #3
  %147 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %148 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %148, i32 0, i32 2
  %150 = load i64, i64* %149, align 8
  %151 = shl i64 %150, 1
  %152 = shl i64 %150, 1
  %153 = sub i64 0, 1
  %154 = add i64 %150, %153
  %155 = sub i64 %150, 1
  %156 = mul i64 %154, 1
  %157 = sub i64 0, 1
  %158 = add i64 %150, %157
  %159 = sub i64 %150, 1
  %160 = mul i64 %158, 1
  %161 = add i64 0, -4428130926615817672
  %162 = sub i64 %161, %150
  %163 = sub i64 %162, -4428130926615817672
  %164 = sub i64 0, %150
  %165 = sub i64 %163, -4322492702847326031
  %166 = add i64 %165, 1
  %167 = add i64 %166, -4322492702847326031
  %168 = add i64 %163, 1
  %169 = add i64 %150, 7820136048537984470
  %170 = add i64 %169, 1
  %171 = sub i64 %170, 7820136048537984470
  %172 = add i64 %150, 1
  store i64 %171, i64* %149, align 8
  %173 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %174 = bitcast %"struct.std::_Rb_tree_node"* %173 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.30"* %10, %"struct.std::_Rb_tree_node_base"* %174) #3
  %175 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %10, i32 0, i32 0
  %176 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %175, align 8
  store i32 -255198686, i32* %18
  br label %177

; <label>:177:                                    ; preds = %136, %130, %91, %74, %65, %62, %42, %27, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE8allocateERS5_m(%"class.std::allocator.5"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.31"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %10, align 8
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %15 = bitcast %"struct.std::_Rb_tree_node"* %14 to i8*
  %16 = bitcast i8* %15 to %"struct.std::_Rb_tree_node"*
  %17 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %13) #3
  %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %19 = invoke %"struct.std::pair.27"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %18)
          to label %20 unwind label %81

; <label>:20:                                     ; preds = %5
  %21 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %22 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %21) #3
  %23 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %24 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %23) #3
  %25 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %10, align 8
  %26 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %25) #3
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvRS5_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %17, %"struct.std::pair.27"* %19, %"struct.std::piecewise_construct_t"* dereferenceable(1) %22, %"class.std::tuple"* dereferenceable(8) %24, %"class.std::tuple.31"* dereferenceable(1) %26)
          to label %27 unwind label %81

; <label>:27:                                     ; preds = %20
  %28 = load i32, i32* @x.446
  %29 = load i32, i32* @y.447
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %272

; <label>:53:                                     ; preds = %27, %272
  %54 = load i32, i32* @x.446
  %55 = load i32, i32* @y.447
  %56 = add i32 %54, 1115767555
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 1115767555
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %272

; <label>:80:                                     ; preds = %53
  br label %179

; <label>:81:                                     ; preds = %20, %5
  %82 = load i32, i32* @x.446
  %83 = load i32, i32* @y.447
  %84 = sub i32 %82, 1074555632
  %85 = sub i32 %84, 1
  %86 = add i32 %85, 1074555632
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %273

; <label>:108:                                    ; preds = %81, %273
  %109 = landingpad { i8*, i32 }
          catch i8* null
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %11, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %12, align 4
  %112 = load i32, i32* @x.446
  %113 = load i32, i32* @y.447
  %114 = sub i32 %112, 115810596
  %115 = sub i32 %114, 1
  %116 = add i32 %115, 115810596
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %273

; <label>:138:                                    ; preds = %108
  br label %139

; <label>:139:                                    ; preds = %138
  %140 = load i32, i32* @x.446
  %141 = load i32, i32* @y.447
  %142 = sub i32 %140, -1667583449
  %143 = sub i32 %142, 1
  %144 = add i32 %143, -1667583449
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %277

; <label>:154:                                    ; preds = %139, %277
  %155 = load i8*, i8** %11, align 8
  %156 = call i8* @__cxa_begin_catch(i8* %155) #3
  %157 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %158 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %158) #3
  %159 = load i32, i32* @x.446
  %160 = load i32, i32* @y.447
  %161 = sub i32 %159, -1339372234
  %162 = sub i32 %161, 1
  %163 = add i32 %162, -1339372234
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  br i1 %171, label %173, label %277

; <label>:173:                                    ; preds = %154
  invoke void @__cxa_rethrow() #14
          to label %271 unwind label %174

; <label>:174:                                    ; preds = %173
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %11, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %12, align 4
  invoke void @__cxa_end_catch()
          to label %178 unwind label %226

; <label>:178:                                    ; preds = %174
  br label %221

; <label>:179:                                    ; preds = %80
  %180 = load i32, i32* @x.446
  %181 = load i32, i32* @y.447
  %182 = add i32 %180, -616237909
  %183 = sub i32 %182, 1
  %184 = sub i32 %183, -616237909
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 true, true
  %193 = and i1 %190, true
  %194 = and i1 %188, %192
  %195 = and i1 %191, true
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 true, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %282

; <label>:206:                                    ; preds = %179, %282
  %207 = load i32, i32* @x.446
  %208 = load i32, i32* @y.447
  %209 = sub i32 0, 1
  %210 = add i32 %207, %209
  %211 = sub i32 %207, 1
  %212 = mul i32 %207, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %208, 10
  %216 = and i1 %214, %215
  %217 = xor i1 %214, %215
  %218 = or i1 %216, %217
  %219 = or i1 %214, %215
  br i1 %218, label %220, label %282

; <label>:220:                                    ; preds = %206
  ret void

; <label>:221:                                    ; preds = %178
  %222 = load i8*, i8** %11, align 8
  %223 = load i32, i32* %12, align 4
  %224 = insertvalue { i8*, i32 } undef, i8* %222, 0
  %225 = insertvalue { i8*, i32 } %224, i32 %223, 1
  resume { i8*, i32 } %225

; <label>:226:                                    ; preds = %174
  %227 = load i32, i32* @x.446
  %228 = load i32, i32* @y.447
  %229 = sub i32 %227, 1360588231
  %230 = sub i32 %229, 1
  %231 = add i32 %230, 1360588231
  %232 = sub i32 %227, 1
  %233 = mul i32 %227, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %228, 10
  %237 = xor i1 %235, true
  %238 = xor i1 %236, true
  %239 = xor i1 true, true
  %240 = and i1 %237, true
  %241 = and i1 %235, %239
  %242 = and i1 %238, true
  %243 = and i1 %236, %239
  %244 = or i1 %240, %241
  %245 = or i1 %242, %243
  %246 = xor i1 %244, %245
  %247 = or i1 %237, %238
  %248 = xor i1 %247, true
  %249 = or i1 true, %239
  %250 = and i1 %248, %249
  %251 = or i1 %246, %250
  %252 = or i1 %235, %236
  br i1 %251, label %253, label %283

; <label>:253:                                    ; preds = %226, %283
  %254 = landingpad { i8*, i32 }
          catch i8* null
  %255 = extractvalue { i8*, i32 } %254, 0
  call void @__clang_call_terminate(i8* %255) #11
  %256 = load i32, i32* @x.446
  %257 = load i32, i32* @y.447
  %258 = add i32 %256, -1212225756
  %259 = sub i32 %258, 1
  %260 = sub i32 %259, -1212225756
  %261 = sub i32 %256, 1
  %262 = mul i32 %256, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %257, 10
  %266 = and i1 %264, %265
  %267 = xor i1 %264, %265
  %268 = or i1 %266, %267
  %269 = or i1 %264, %265
  br i1 %268, label %270, label %283

; <label>:270:                                    ; preds = %253
  unreachable

; <label>:271:                                    ; preds = %173
  unreachable

; <label>:272:                                    ; preds = %53, %27
  br label %53

; <label>:273:                                    ; preds = %108, %81
  %274 = landingpad { i8*, i32 }
          catch i8* null
  %275 = extractvalue { i8*, i32 } %274, 0
  store i8* %275, i8** %11, align 8
  %276 = extractvalue { i8*, i32 } %274, 1
  store i32 %276, i32* %12, align 4
  br label %108

; <label>:277:                                    ; preds = %154, %139
  %278 = load i8*, i8** %11, align 8
  %279 = call i8* @__cxa_begin_catch(i8* %278) #3
  %280 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %281 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %281) #3
  br label %154

; <label>:282:                                    ; preds = %206, %179
  br label %206

; <label>:283:                                    ; preds = %253, %226
  %284 = landingpad { i8*, i32 }
          catch i8* null
  %285 = extractvalue { i8*, i32 } %284, 0
  call void @__clang_call_terminate(i8* %285) #11
  br label %253
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE8allocateERS5_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_node"*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.450
  %10 = load i32, i32* @y.451
  %11 = sub i32 %9, 1699700747
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 1699700747
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -414357798, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %148
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -414357798, label %23
    i32 -1043221780, label %43
    i32 -303342196, label %80
    i32 -1875030069, label %83
    i32 2040949155, label %84
    i32 721895787, label %99
    i32 -460079749, label %119
    i32 -1852265717, label %121
    i32 -1055327206, label %129
  ]

; <label>:22:                                     ; preds = %20
  br label %148

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1043221780, i32 -1852265717
  store i32 %42, i32* %19
  br label %148

; <label>:43:                                     ; preds = %20
  %44 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %6
  %46 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %44, align 8
  %47 = load volatile i64*, i64** %6
  store i64 %1, i64* %47, align 8
  store i8* %2, i8** %46, align 8
  %48 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %44, align 8
  %49 = load volatile i64*, i64** %6
  %50 = load i64, i64* %49, align 8
  %51 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %48) #3
  %52 = icmp ugt i64 %50, %51
  store i1 %52, i1* %5
  %53 = load i32, i32* @x.450
  %54 = load i32, i32* @y.451
  %55 = sub i32 %53, -2014948342
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -2014948342
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -303342196, i32 -1852265717
  store i32 %79, i32* %19
  br label %148

; <label>:80:                                     ; preds = %20
  %81 = load volatile i1, i1* %5
  %82 = select i1 %81, i32 -1875030069, i32 2040949155
  store i32 %82, i32* %19
  br label %148

; <label>:83:                                     ; preds = %20
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:84:                                     ; preds = %20
  %85 = load i32, i32* @x.450
  %86 = load i32, i32* @y.451
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 721895787, i32 -1055327206
  store i32 %98, i32* %19
  br label %148

; <label>:99:                                     ; preds = %20
  %100 = load volatile i64*, i64** %6
  %101 = load i64, i64* %100, align 8
  %102 = mul i64 %101, 48
  %103 = call i8* @_Znwm(i64 %102)
  %104 = bitcast i8* %103 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %104, %"struct.std::_Rb_tree_node"** %4
  %105 = load i32, i32* @x.450
  %106 = load i32, i32* @y.451
  %107 = sub i32 0, 1
  %108 = add i32 %105, %107
  %109 = sub i32 %105, 1
  %110 = mul i32 %105, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %106, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 -460079749, i32 -1055327206
  store i32 %118, i32* %19
  br label %148

; <label>:119:                                    ; preds = %20
  %120 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4
  ret %"struct.std::_Rb_tree_node"* %120

; <label>:121:                                    ; preds = %20
  %122 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %123 = alloca i64, align 8
  %124 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %122, align 8
  store i64 %1, i64* %123, align 8
  store i8* %2, i8** %124, align 8
  %125 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %122, align 8
  %126 = load i64, i64* %123, align 8
  %127 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %125) #3
  %128 = icmp ugt i64 %126, %127
  store i32 -1043221780, i32* %19
  br label %148

; <label>:129:                                    ; preds = %20
  %130 = load volatile i64*, i64** %6
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 0, 7797080433359537120
  %133 = sub i64 %132, %131
  %134 = add i64 %133, 7797080433359537120
  %135 = sub i64 0, %131
  %136 = sub i64 0, 48
  %137 = sub i64 %134, %136
  %138 = add i64 %134, 48
  %139 = shl i64 %131, 48
  %140 = shl i64 %131, 48
  %141 = sub i64 0, 48
  %142 = add i64 %131, %141
  %143 = sub i64 %131, 48
  %144 = mul i64 %142, 48
  %145 = mul i64 %131, 48
  %146 = call i8* @_Znwm(i64 %145)
  %147 = bitcast i8* %146 to %"struct.std::_Rb_tree_node"*
  store i32 721895787, i32* %19
  br label %148

; <label>:148:                                    ; preds = %129, %121, %99, %84, %80, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret i64 384307168202282325
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvRS5_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), %"struct.std::pair.27"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca %"struct.std::pair.27"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.31"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %6, align 8
  store %"struct.std::pair.27"* %1, %"struct.std::pair.27"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %10, align 8
  %11 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %6, align 8
  %12 = bitcast %"class.std::allocator.5"* %11 to %"class.__gnu_cxx::new_allocator.6"*
  %13 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %12, %"struct.std::pair.27"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple"* dereferenceable(8) %17, %"class.std::tuple.31"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, %"struct.std::pair.27"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.456
  %9 = load i32, i32* @y.457
  %10 = sub i32 %8, 339224847
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 339224847
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1830902361, i32* %18
  br label %19

; <label>:19:                                     ; preds = %5, %92
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1830902361, label %22
    i32 -1314896911, label %30
    i32 -1501594965, label %68
    i32 -854774355, label %69
  ]

; <label>:21:                                     ; preds = %19
  br label %92

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1314896911, i32 -854774355
  store i32 %29, i32* %18
  br label %92

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %32 = alloca %"struct.std::pair.27"*, align 8
  %33 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %34 = alloca %"class.std::tuple"*, align 8
  %35 = alloca %"class.std::tuple.31"*, align 8
  %36 = alloca %"struct.std::piecewise_construct_t", align 1
  %37 = alloca %"class.std::tuple", align 8
  %38 = alloca %"class.std::tuple.31", align 1
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %31, align 8
  store %"struct.std::pair.27"* %1, %"struct.std::pair.27"** %32, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %33, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %34, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %35, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %31, align 8
  %40 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %32, align 8
  %41 = bitcast %"struct.std::pair.27"* %40 to i8*
  %42 = bitcast i8* %41 to %"struct.std::pair.27"*
  %43 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %33, align 8
  %44 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %43) #3
  %45 = load %"class.std::tuple"*, %"class.std::tuple"** %34, align 8
  %46 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %45) #3
  call void @_ZNSt5tupleIJOxEEC2EOS1_(%"class.std::tuple"* %37, %"class.std::tuple"* dereferenceable(8) %46) #3
  %47 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %35, align 8
  %48 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %47) #3
  %49 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %37, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %50, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  call void @_ZNSt4pairIKxxEC2IJOxEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.27"* %42, i64* %52)
  %53 = load i32, i32* @x.456
  %54 = load i32, i32* @y.457
  %55 = sub i32 %53, -1256285939
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1256285939
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -1501594965, i32 -854774355
  store i32 %67, i32* %18
  br label %92

; <label>:68:                                     ; preds = %19
  ret void

; <label>:69:                                     ; preds = %19
  %70 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %71 = alloca %"struct.std::pair.27"*, align 8
  %72 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %73 = alloca %"class.std::tuple"*, align 8
  %74 = alloca %"class.std::tuple.31"*, align 8
  %75 = alloca %"struct.std::piecewise_construct_t", align 1
  %76 = alloca %"class.std::tuple", align 8
  %77 = alloca %"class.std::tuple.31", align 1
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %70, align 8
  store %"struct.std::pair.27"* %1, %"struct.std::pair.27"** %71, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %72, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %73, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %74, align 8
  %78 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %70, align 8
  %79 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %71, align 8
  %80 = bitcast %"struct.std::pair.27"* %79 to i8*
  %81 = bitcast i8* %80 to %"struct.std::pair.27"*
  %82 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %72, align 8
  %83 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %82) #3
  %84 = load %"class.std::tuple"*, %"class.std::tuple"** %73, align 8
  %85 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %84) #3
  call void @_ZNSt5tupleIJOxEEC2EOS1_(%"class.std::tuple"* %76, %"class.std::tuple"* dereferenceable(8) %85) #3
  %86 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %74, align 8
  %87 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %86) #3
  %88 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %76, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %89, i32 0, i32 0
  %91 = load i64*, i64** %90, align 8
  call void @_ZNSt4pairIKxxEC2IJOxEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.27"* %81, i64* %91)
  store i32 -1314896911, i32* %18
  br label %92

; <label>:92:                                     ; preds = %69, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJOxEEC2EOS1_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %8 = bitcast %"class.std::tuple"* %7 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJOxEEC2EOS1_(%"struct.std::_Tuple_impl"* %6, %"struct.std::_Tuple_impl"* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKxxEC2IJOxEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.27"*, i64*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::piecewise_construct_t", align 1
  %4 = alloca %"class.std::tuple", align 8
  %5 = alloca %"class.std::tuple.31", align 1
  %6 = alloca %"struct.std::pair.27"*, align 8
  %7 = alloca %"struct.std::_Index_tuple", align 1
  %8 = alloca %"struct.std::_Index_tuple.33", align 1
  %9 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %4, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %10, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store %"struct.std::pair.27"* %0, %"struct.std::pair.27"** %6, align 8
  %12 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %6, align 8
  call void @_ZNSt4pairIKxxEC2IJOxEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair.27"* %12, %"class.std::tuple"* dereferenceable(8) %4, %"class.std::tuple.31"* dereferenceable(1) %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJOxEEC2EOS1_(%"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.462
  %4 = load i32, i32* @y.463
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %84

; <label>:28:                                     ; preds = %2, %84
  %29 = alloca %"struct.std::_Tuple_impl"*, align 8
  %30 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %29, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %30, align 8
  %31 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %29, align 8
  %32 = bitcast %"struct.std::_Tuple_impl"* %31 to %"struct.std::_Head_base"*
  %33 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %30, align 8
  %34 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJOxEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %33) #3
  %35 = call dereferenceable(8) i64* @_ZSt7forwardIOxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %34) #3
  %36 = load i32, i32* @x.462
  %37 = load i32, i32* @y.463
  %38 = sub i32 %36, 903225139
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 903225139
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %84

; <label>:50:                                     ; preds = %28
  invoke void @_ZNSt10_Head_baseILm0EOxLb0EEC2IxEEOT_(%"struct.std::_Head_base"* %32, i64* dereferenceable(8) %35)
          to label %51 unwind label %81

; <label>:51:                                     ; preds = %50
  %52 = load i32, i32* @x.462
  %53 = load i32, i32* @y.463
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %92

; <label>:65:                                     ; preds = %51, %92
  %66 = load i32, i32* @x.462
  %67 = load i32, i32* @y.463
  %68 = add i32 %66, -1784550191
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, -1784550191
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %92

; <label>:80:                                     ; preds = %65
  ret void

; <label>:81:                                     ; preds = %50
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  call void @__clang_call_terminate(i8* %83) #11
  unreachable

; <label>:84:                                     ; preds = %28, %2
  %85 = alloca %"struct.std::_Tuple_impl"*, align 8
  %86 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %85, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %86, align 8
  %87 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %85, align 8
  %88 = bitcast %"struct.std::_Tuple_impl"* %87 to %"struct.std::_Head_base"*
  %89 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %86, align 8
  %90 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJOxEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %89) #3
  %91 = call dereferenceable(8) i64* @_ZSt7forwardIOxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %90) #3
  br label %28

; <label>:92:                                     ; preds = %65, %51
  br label %65
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIOxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJOxEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.466
  %6 = load i32, i32* @y.467
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1679255677, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1679255677, label %18
    i32 1974892270, label %26
    i32 -915514413, label %58
    i32 682800, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1974892270, i32 682800
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %27, align 8
  %28 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Tuple_impl"* %28 to %"struct.std::_Head_base"*
  %30 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0EOxLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8) %29) #3
  store i64* %30, i64** %2
  %31 = load i32, i32* @x.466
  %32 = load i32, i32* @y.467
  %33 = add i32 %31, -779447673
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -779447673
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -915514413, i32 682800
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64*, i64** %2
  ret i64* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %61, align 8
  %62 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %61, align 8
  %63 = bitcast %"struct.std::_Tuple_impl"* %62 to %"struct.std::_Head_base"*
  %64 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0EOxLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8) %63) #3
  store i32 1974892270, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EOxLb0EEC2IxEEOT_(%"struct.std::_Head_base"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  store i64* %8, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0EOxLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %2, align 8
  %3 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxxEC2IJOxEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair.27"*, %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Index_tuple", align 1
  %5 = alloca %"struct.std::_Index_tuple.33", align 1
  %6 = alloca %"struct.std::pair.27"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.31"*, align 8
  store %"struct.std::pair.27"* %0, %"struct.std::pair.27"** %6, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.31"* %2, %"class.std::tuple.31"** %8, align 8
  %9 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %12 = call dereferenceable(8) i64* @_ZSt3getILm0EJOxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_(%"class.std::tuple"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIOxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %10, align 8
  %15 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %9, i32 0, i32 1
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3getILm0EJOxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  %4 = bitcast %"class.std::tuple"* %3 to %"struct.std::_Tuple_impl"*
  %5 = call dereferenceable(8) i64* @_ZSt12__get_helperILm0EOxJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt12__get_helperILm0EOxJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJOxEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %3) #3
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxxEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %4 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.30"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE4sizeEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.482
  %6 = load i32, i32* @y.483
  %7 = sub i32 %5, -1460317616
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1460317616
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -751733137, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -751733137, label %19
    i32 1866855562, label %39
    i32 -818569221, label %60
    i32 -1818453416, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1866855562, i32 -1818453416
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %40, align 8
  %41 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %42, i32 0, i32 2
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.482
  %46 = load i32, i32* @y.483
  %47 = sub i32 %45, -384279992
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -384279992
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -818569221, i32 -1818453416
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %63, align 8
  %64 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %63, align 8
  %65 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %65, i32 0, i32 2
  %67 = load i64, i64* %66, align 8
  store i32 1866855562, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(16) %"struct.std::pair.27"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_(%"struct.std::_Select1st"* %3, %"struct.std::pair.27"* dereferenceable(16) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.486
  %6 = load i32, i32* @y.487
  %7 = sub i32 %5, -350379092
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -350379092
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 9538065, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 9538065, label %19
    i32 1438407168, label %39
    i32 -1141346393, label %60
    i32 1016718728, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1438407168, i32 1016718728
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %40, align 8
  %41 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %42, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"** %44, %"struct.std::_Rb_tree_node_base"*** %2
  %45 = load i32, i32* @x.486
  %46 = load i32, i32* @y.487
  %47 = sub i32 %45, 423229772
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 423229772
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1141346393, i32 1016718728
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2
  ret %"struct.std::_Rb_tree_node_base"** %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %63, align 8
  %64 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %63, align 8
  %65 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %65, i32 0, i32 1
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %66, i32 0, i32 3
  store i32 1438407168, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.32"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.32"* %0, %"struct.std::pair.32"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair.32"*, %"struct.std::pair.32"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %10, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %11 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %7, i32 0, i32 1
  %12 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %13 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %12) #3
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree"*
  %7 = alloca %"struct.std::pair.32", align 8
  %8 = alloca %"class.std::_Rb_tree"*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %14 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %15 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %8, align 8
  store i64* %1, i64** %9, align 8
  %16 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8, align 8
  store %"class.std::_Rb_tree"* %16, %"class.std::_Rb_tree"** %6
  %17 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %18 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree"* %17) #3
  store %"struct.std::_Rb_tree_node"* %18, %"struct.std::_Rb_tree_node"** %10, align 8
  %19 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %20 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"* %19) #3
  store %"struct.std::_Rb_tree_node"* %20, %"struct.std::_Rb_tree_node"** %11, align 8
  store i8 1, i8* %12, align 1
  %21 = alloca i32
  store i32 -1871946553, i32* %21
  %22 = alloca %"struct.std::_Rb_tree_node"*
  br label %23

; <label>:23:                                     ; preds = %2, %223
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 -1871946553, label %26
    i32 -175973618, label %30
    i32 514536519, label %43
    i32 -318103035, label %47
    i32 518730661, label %51
    i32 1468176131, label %67
    i32 32131688, label %84
    i32 -980095696, label %85
    i32 -1774777784, label %91
    i32 220796363, label %107
    i32 1861101605, label %127
    i32 764544176, label %130
    i32 -585107479, label %131
    i32 -1549948390, label %133
    i32 718297849, label %134
    i32 -645537276, label %162
    i32 -1423799814, label %198
    i32 -1203242988, label %201
    i32 -1643944951, label %202
    i32 -1090604408, label %204
    i32 1370186600, label %207
    i32 -1920885303, label %209
    i32 -1535522335, label %214
  ]

; <label>:25:                                     ; preds = %23
  br label %223

; <label>:26:                                     ; preds = %23
  %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %28 = icmp ne %"struct.std::_Rb_tree_node"* %27, null
  %29 = select i1 %28, i32 -175973618, i32 -980095696
  store i32 %29, i32* %21
  br label %223

; <label>:30:                                     ; preds = %23
  %31 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  store %"struct.std::_Rb_tree_node"* %31, %"struct.std::_Rb_tree_node"** %11, align 8
  %32 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %33 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %9, align 8
  %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %37 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %36)
  %38 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %34, i64* dereferenceable(8) %35, i64* dereferenceable(8) %37)
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %12, align 1
  %40 = load i8, i8* %12, align 1
  %41 = trunc i8 %40 to i1
  %42 = select i1 %41, i32 514536519, i32 -318103035
  store i32 %42, i32* %21
  br label %223

; <label>:43:                                     ; preds = %23
  %44 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %45 = bitcast %"struct.std::_Rb_tree_node"* %44 to %"struct.std::_Rb_tree_node_base"*
  %46 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %45) #3
  store i32 518730661, i32* %21
  store %"struct.std::_Rb_tree_node"* %46, %"struct.std::_Rb_tree_node"** %22
  br label %223

; <label>:47:                                     ; preds = %23
  %48 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node"* %48 to %"struct.std::_Rb_tree_node_base"*
  %50 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %49) #3
  store i32 518730661, i32* %21
  store %"struct.std::_Rb_tree_node"* %50, %"struct.std::_Rb_tree_node"** %22
  br label %223

; <label>:51:                                     ; preds = %23
  %52 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %22
  store %"struct.std::_Rb_tree_node"* %52, %"struct.std::_Rb_tree_node"** %3
  %53 = load i32, i32* @x.490
  %54 = load i32, i32* @y.491
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1468176131, i32 1370186600
  store i32 %66, i32* %21
  br label %223

; <label>:67:                                     ; preds = %23
  %68 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %68, %"struct.std::_Rb_tree_node"** %10, align 8
  %69 = load i32, i32* @x.490
  %70 = load i32, i32* @y.491
  %71 = sub i32 %69, 759550190
  %72 = sub i32 %71, 1
  %73 = add i32 %72, 759550190
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 32131688, i32 1370186600
  store i32 %83, i32* %21
  br label %223

; <label>:84:                                     ; preds = %23
  store i32 -1871946553, i32* %21
  br label %223

; <label>:85:                                     ; preds = %23
  %86 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %87 = bitcast %"struct.std::_Rb_tree_node"* %86 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.30"* %13, %"struct.std::_Rb_tree_node_base"* %87) #3
  %88 = load i8, i8* %12, align 1
  %89 = trunc i8 %88 to i1
  %90 = select i1 %89, i32 -1774777784, i32 718297849
  store i32 %90, i32* %21
  br label %223

; <label>:91:                                     ; preds = %23
  %92 = load i32, i32* @x.490
  %93 = load i32, i32* @y.491
  %94 = add i32 %92, -1063625599
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, -1063625599
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 220796363, i32 -1920885303
  store i32 %106, i32* %21
  br label %223

; <label>:107:                                    ; preds = %23
  %108 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %109 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE5beginEv(%"class.std::_Rb_tree"* %108) #3
  %110 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %109, %"struct.std::_Rb_tree_node_base"** %110, align 8
  %111 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator.30"* %13, %"struct.std::_Rb_tree_iterator.30"* dereferenceable(8) %14) #3
  store i1 %111, i1* %5
  %112 = load i32, i32* @x.490
  %113 = load i32, i32* @y.491
  %114 = add i32 %112, -107676597
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, -107676597
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  %126 = select i1 %124, i32 1861101605, i32 -1920885303
  store i32 %126, i32* %21
  br label %223

; <label>:127:                                    ; preds = %23
  %128 = load volatile i1, i1* %5
  %129 = select i1 %128, i32 764544176, i32 -585107479
  store i32 %129, i32* %21
  br label %223

; <label>:130:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_(%"struct.std::pair.32"* %7, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %11)
  store i32 -1090604408, i32* %21
  br label %223

; <label>:131:                                    ; preds = %23
  %132 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.30"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator.30"* %13) #3
  store i32 -1549948390, i32* %21
  br label %223

; <label>:133:                                    ; preds = %23
  store i32 718297849, i32* %21
  br label %223

; <label>:134:                                    ; preds = %23
  %135 = load i32, i32* @x.490
  %136 = load i32, i32* @y.491
  %137 = sub i32 %135, 1431258592
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 1431258592
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 true, true
  %148 = and i1 %145, true
  %149 = and i1 %143, %147
  %150 = and i1 %146, true
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 true, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  %161 = select i1 %159, i32 -645537276, i32 -1535522335
  store i32 %161, i32* %21
  br label %223

; <label>:162:                                    ; preds = %23
  %163 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %164 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %163, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %164, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %13, i32 0, i32 0
  %167 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %166, align 8
  %168 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %167)
  %169 = load i64*, i64** %9, align 8
  %170 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %165, i64* dereferenceable(8) %168, i64* dereferenceable(8) %169)
  store i1 %170, i1* %4
  %171 = load i32, i32* @x.490
  %172 = load i32, i32* @y.491
  %173 = add i32 %171, -377434545
  %174 = sub i32 %173, 1
  %175 = sub i32 %174, -377434545
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = xor i1 %179, true
  %182 = xor i1 %180, true
  %183 = xor i1 false, true
  %184 = and i1 %181, false
  %185 = and i1 %179, %183
  %186 = and i1 %182, false
  %187 = and i1 %180, %183
  %188 = or i1 %184, %185
  %189 = or i1 %186, %187
  %190 = xor i1 %188, %189
  %191 = or i1 %181, %182
  %192 = xor i1 %191, true
  %193 = or i1 false, %183
  %194 = and i1 %192, %193
  %195 = or i1 %190, %194
  %196 = or i1 %179, %180
  %197 = select i1 %195, i32 -1423799814, i32 -1535522335
  store i32 %197, i32* %21
  br label %223

; <label>:198:                                    ; preds = %23
  %199 = load volatile i1, i1* %4
  %200 = select i1 %199, i32 -1203242988, i32 -1643944951
  store i32 %200, i32* %21
  br label %223

; <label>:201:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_(%"struct.std::pair.32"* %7, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %11)
  store i32 -1090604408, i32* %21
  br label %223

; <label>:202:                                    ; preds = %23
  %203 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %15, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.32"* %7, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %203, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %15)
  store i32 -1090604408, i32* %21
  br label %223

; <label>:204:                                    ; preds = %23
  %205 = bitcast %"struct.std::pair.32"* %7 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %206 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %205, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %206

; <label>:207:                                    ; preds = %23
  %208 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %208, %"struct.std::_Rb_tree_node"** %10, align 8
  store i32 1468176131, i32* %21
  br label %223

; <label>:209:                                    ; preds = %23
  %210 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %211 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE5beginEv(%"class.std::_Rb_tree"* %210) #3
  %212 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %211, %"struct.std::_Rb_tree_node_base"** %212, align 8
  %213 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator.30"* %13, %"struct.std::_Rb_tree_iterator.30"* dereferenceable(8) %14) #3
  store i32 220796363, i32* %21
  br label %223

; <label>:214:                                    ; preds = %23
  %215 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %216 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %215, i32 0, i32 0
  %217 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %216, i32 0, i32 0
  %218 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %13, i32 0, i32 0
  %219 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %218, align 8
  %220 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %219)
  %221 = load i64*, i64** %9, align 8
  %222 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %217, i64* dereferenceable(8) %220, i64* dereferenceable(8) %221)
  store i32 -645537276, i32* %21
  br label %223

; <label>:223:                                    ; preds = %214, %209, %207, %202, %201, %198, %162, %134, %133, %131, %130, %127, %107, %91, %85, %84, %67, %51, %47, %43, %30, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.492
  %6 = load i32, i32* @y.493
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -271037983, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -271037983, label %18
    i32 -2004717924, label %38
    i32 1590100784, label %59
    i32 -1934387443, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2004717924, i32 -1934387443
  store i32 %37, i32* %14
  br label %67

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %39, align 8
  %40 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %39, align 8
  %41 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %41, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %42, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"** %43, %"struct.std::_Rb_tree_node_base"*** %2
  %44 = load i32, i32* @x.492
  %45 = load i32, i32* @y.493
  %46 = add i32 %44, -1383504741
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1383504741
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1590100784, i32 -1934387443
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  %60 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2
  ret %"struct.std::_Rb_tree_node_base"** %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %62, align 8
  %63 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %64, i32 0, i32 1
  %66 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %65, i32 0, i32 2
  store i32 -2004717924, i32* %14
  br label %67

; <label>:67:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.32"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.32"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.32"* %0, %"struct.std::pair.32"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair.32"*, %"struct.std::pair.32"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %7, i32 0, i32 1
  %13 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %14 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %13) #3
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.30"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator.30"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.30"*, align 8
  store %"struct.std::_Rb_tree_iterator.30"* %0, %"struct.std::_Rb_tree_iterator.30"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #13
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator.30"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.30"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEppEv(%"struct.std::_Rb_tree_iterator.30"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.30"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.498
  %6 = load i32, i32* @y.499
  %7 = sub i32 %5, -1049106408
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1049106408
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1691571107, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1691571107, label %19
    i32 1454308865, label %39
    i32 -1230837751, label %63
    i32 926554684, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1454308865, i32 926554684
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.30"*, align 8
  store %"struct.std::_Rb_tree_iterator.30"* %0, %"struct.std::_Rb_tree_iterator.30"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"** %40, align 8
  store %"struct.std::_Rb_tree_iterator.30"* %41, %"struct.std::_Rb_tree_iterator.30"** %2
  %42 = load volatile %"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"** %2
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %44) #13
  %46 = load volatile %"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"** %2
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %46, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %48 = load i32, i32* @x.498
  %49 = load i32, i32* @y.499
  %50 = add i32 %48, 405255200
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 405255200
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1230837751, i32 926554684
  store i32 %62, i32* %15
  br label %72

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"** %2
  ret %"struct.std::_Rb_tree_iterator.30"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Rb_tree_iterator.30"*, align 8
  store %"struct.std::_Rb_tree_iterator.30"* %0, %"struct.std::_Rb_tree_iterator.30"** %66, align 8
  %67 = load %"struct.std::_Rb_tree_iterator.30"*, %"struct.std::_Rb_tree_iterator.30"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %67, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %69) #13
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %67, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %71, align 8
  store i32 1454308865, i32* %15
  br label %72

; <label>:72:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.32"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.500
  %7 = load i32, i32* @y.501
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -186310943, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -186310943, label %19
    i32 -1851077457, label %27
    i32 1154242302, label %66
    i32 1450377930, label %67
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1851077457, i32 1450377930
  store i32 %26, i32* %15
  br label %79

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair.32"*, align 8
  %29 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %30 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.32"* %0, %"struct.std::pair.32"** %28, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %29, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %30, align 8
  %31 = load %"struct.std::pair.32"*, %"struct.std::pair.32"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %31, i32 0, i32 0
  %33 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %29, align 8
  %34 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %33) #3
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %32, align 8
  %36 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %31, i32 0, i32 1
  %37 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %30, align 8
  %38 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %37, align 8
  store %"struct.std::_Rb_tree_node_base"* %38, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %39 = load i32, i32* @x.500
  %40 = load i32, i32* @y.501
  %41 = sub i32 %39, -1646400903
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -1646400903
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1154242302, i32 1450377930
  store i32 %65, i32* %15
  br label %79

; <label>:66:                                     ; preds = %16
  ret void

; <label>:67:                                     ; preds = %16
  %68 = alloca %"struct.std::pair.32"*, align 8
  %69 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %70 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.32"* %0, %"struct.std::pair.32"** %68, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %69, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %70, align 8
  %71 = load %"struct.std::pair.32"*, %"struct.std::pair.32"** %68, align 8
  %72 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %71, i32 0, i32 0
  %73 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %69, align 8
  %74 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %73) #3
  %75 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  store %"struct.std::_Rb_tree_node_base"* %75, %"struct.std::_Rb_tree_node_base"** %72, align 8
  %76 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %71, i32 0, i32 1
  %77 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %70, align 8
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %77, align 8
  store %"struct.std::_Rb_tree_node_base"* %78, %"struct.std::_Rb_tree_node_base"** %76, align 8
  store i32 -1851077457, i32* %15
  br label %79

; <label>:79:                                     ; preds = %67, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.27"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node"*
  %5 = call %"struct.std::pair.27"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %4)
  ret %"struct.std::pair.27"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.504
  %6 = load i32, i32* @y.505
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1840781182, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1840781182, label %18
    i32 -35604566, label %38
    i32 2141835615, label %55
    i32 1094683820, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -35604566, i32 1094683820
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %39, align 8
  %40 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %39, align 8
  store %"struct.std::_Rb_tree_node_base"** %40, %"struct.std::_Rb_tree_node_base"*** %2
  %41 = load i32, i32* @x.504
  %42 = load i32, i32* @y.505
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 2141835615, i32 1094683820
  store i32 %54, i32* %14
  br label %60

; <label>:55:                                     ; preds = %15
  %56 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2
  ret %"struct.std::_Rb_tree_node_base"** %56

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %58, align 8
  %59 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %58, align 8
  store i32 -35604566, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE5beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.30"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_(%"struct.std::pair.32"*, %"struct.std::_Rb_tree_node"** dereferenceable(8), %"struct.std::_Rb_tree_node"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.32"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.32"* %0, %"struct.std::pair.32"** %4, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %5, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %6, align 8
  %7 = load %"struct.std::pair.32"*, %"struct.std::pair.32"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %12 = bitcast %"struct.std::_Rb_tree_node"* %11 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %7, i32 0, i32 1
  %14 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6, align 8
  %15 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %14) #3
  %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %15, align 8
  %17 = bitcast %"struct.std::_Rb_tree_node"* %16 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
  ret %"struct.std::_Rb_tree_node"** %3
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #12

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #12

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJOxEEC2IJxEvEEDpOT_(%"class.std::tuple"*, i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  call void @_ZNSt11_Tuple_implILm0EJOxEEC2IxEEOT_(%"struct.std::_Tuple_impl"* %6, i64* dereferenceable(8) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJOxEEC2IxEEOT_(%"struct.std::_Tuple_impl"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl"* %5 to %"struct.std::_Head_base"*
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  call void @_ZNSt10_Head_baseILm0EOxLb0EEC2IxEEOT_(%"struct.std::_Head_base"* %6, i64* dereferenceable(8) %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = load i32, i32* @x.516
  %7 = load i32, i32* @y.517
  %8 = add i32 %6, -745093576
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -745093576
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = and i1 %14, %15
  %17 = xor i1 %14, %15
  %18 = or i1 %16, %17
  %19 = or i1 %14, %15
  br i1 %18, label %20, label %279

; <label>:20:                                     ; preds = %5, %279
  %21 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %22 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %23 = alloca %"class.std::_Rb_tree"*, align 8
  %24 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %25 = alloca %"class.std::tuple.34"*, align 8
  %26 = alloca %"class.std::tuple.31"*, align 8
  %27 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %28 = alloca %"struct.std::pair.32", align 8
  %29 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %30 = alloca i8*
  %31 = alloca i32
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %22, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %32, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %23, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %24, align 8
  store %"class.std::tuple.34"* %3, %"class.std::tuple.34"** %25, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %26, align 8
  %33 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %23, align 8
  %34 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %24, align 8
  %35 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %34) #3
  %36 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %25, align 8
  %37 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %36) #3
  %38 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %26, align 8
  %39 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %38) #3
  %40 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"* %33, %"struct.std::piecewise_construct_t"* dereferenceable(1) %35, %"class.std::tuple.34"* dereferenceable(8) %37, %"class.std::tuple.31"* dereferenceable(1) %39)
  store %"struct.std::_Rb_tree_node"* %40, %"struct.std::_Rb_tree_node"** %27, align 8
  %41 = bitcast %"struct.std::_Rb_tree_const_iterator"* %29 to i8*
  %42 = bitcast %"struct.std::_Rb_tree_const_iterator"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  %44 = load i32, i32* @x.516
  %45 = load i32, i32* @y.517
  %46 = add i32 %44, 268636710
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 268636710
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %279

; <label>:58:                                     ; preds = %20
  %59 = invoke dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %43)
          to label %60 unwind label %123

; <label>:60:                                     ; preds = %58
  %61 = load i32, i32* @x.516
  %62 = load i32, i32* @y.517
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %303

; <label>:74:                                     ; preds = %60, %303
  %75 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %29, i32 0, i32 0
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %77 = load i32, i32* @x.516
  %78 = load i32, i32* @y.517
  %79 = add i32 %77, 797326642
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, 797326642
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %303

; <label>:103:                                    ; preds = %74
  %104 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node_base"* %76, i64* dereferenceable(8) %59)
          to label %105 unwind label %123

; <label>:105:                                    ; preds = %103
  %106 = bitcast %"struct.std::pair.32"* %28 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %107 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %106, i32 0, i32 0
  %108 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %104, 0
  store %"struct.std::_Rb_tree_node_base"* %108, %"struct.std::_Rb_tree_node_base"** %107, align 8
  %109 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %106, i32 0, i32 1
  %110 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %104, 1
  store %"struct.std::_Rb_tree_node_base"* %110, %"struct.std::_Rb_tree_node_base"** %109, align 8
  %111 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %28, i32 0, i32 1
  %112 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %111, align 8
  %113 = icmp ne %"struct.std::_Rb_tree_node_base"* %112, null
  br i1 %113, label %114, label %173

; <label>:114:                                    ; preds = %105
  %115 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %28, i32 0, i32 0
  %116 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %115, align 8
  %117 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %28, i32 0, i32 1
  %118 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %117, align 8
  %119 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  %120 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node_base"* %116, %"struct.std::_Rb_tree_node_base"* %118, %"struct.std::_Rb_tree_node"* %119)
          to label %121 unwind label %123

; <label>:121:                                    ; preds = %114
  %122 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %21, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %120, %"struct.std::_Rb_tree_node_base"** %122, align 8
  br label %185

; <label>:123:                                    ; preds = %114, %103, %58
  %124 = landingpad { i8*, i32 }
          catch i8* null
  %125 = extractvalue { i8*, i32 } %124, 0
  store i8* %125, i8** %30, align 8
  %126 = extractvalue { i8*, i32 } %124, 1
  store i32 %126, i32* %31, align 4
  br label %127

; <label>:127:                                    ; preds = %123
  %128 = load i32, i32* @x.516
  %129 = load i32, i32* @y.517
  %130 = add i32 %128, 2064240128
  %131 = sub i32 %130, 1
  %132 = sub i32 %131, 2064240128
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  br i1 %140, label %142, label %306

; <label>:142:                                    ; preds = %127, %306
  %143 = load i8*, i8** %30, align 8
  %144 = call i8* @__cxa_begin_catch(i8* %143) #3
  %145 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node"* %145) #3
  %146 = load i32, i32* @x.516
  %147 = load i32, i32* @y.517
  %148 = add i32 %146, 496868176
  %149 = sub i32 %148, 1
  %150 = sub i32 %149, 496868176
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 false, true
  %159 = and i1 %156, false
  %160 = and i1 %154, %158
  %161 = and i1 %157, false
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 false, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  br i1 %170, label %172, label %306

; <label>:172:                                    ; preds = %142
  invoke void @__cxa_rethrow() #14
          to label %225 unwind label %179

; <label>:173:                                    ; preds = %105
  %174 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node"* %174) #3
  %175 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %28, i32 0, i32 0
  %176 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %175, align 8
  %177 = bitcast %"struct.std::_Rb_tree_node_base"* %176 to %"struct.std::_Rb_tree_node"*
  %178 = bitcast %"struct.std::_Rb_tree_node"* %177 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.30"* %21, %"struct.std::_Rb_tree_node_base"* %178) #3
  br label %185

; <label>:179:                                    ; preds = %172
  %180 = landingpad { i8*, i32 }
          cleanup
  %181 = extractvalue { i8*, i32 } %180, 0
  store i8* %181, i8** %30, align 8
  %182 = extractvalue { i8*, i32 } %180, 1
  store i32 %182, i32* %31, align 4
  invoke void @__cxa_end_catch()
          to label %183 unwind label %222

; <label>:183:                                    ; preds = %179
  br label %217
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:185:                                    ; preds = %173, %121
  %186 = load i32, i32* @x.516
  %187 = load i32, i32* @y.517
  %188 = sub i32 0, 1
  %189 = add i32 %186, %188
  %190 = sub i32 %186, 1
  %191 = mul i32 %186, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %187, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  br i1 %197, label %199, label %310

; <label>:199:                                    ; preds = %185, %310
  %200 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %21, i32 0, i32 0
  %201 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %200, align 8
  %202 = load i32, i32* @x.516
  %203 = load i32, i32* @y.517
  %204 = sub i32 %202, -1540367862
  %205 = sub i32 %204, 1
  %206 = add i32 %205, -1540367862
  %207 = sub i32 %202, 1
  %208 = mul i32 %202, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %203, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  br i1 %214, label %216, label %310

; <label>:216:                                    ; preds = %199
  ret %"struct.std::_Rb_tree_node_base"* %201

; <label>:217:                                    ; preds = %183
  %218 = load i8*, i8** %30, align 8
  %219 = load i32, i32* %31, align 4
  %220 = insertvalue { i8*, i32 } undef, i8* %218, 0
  %221 = insertvalue { i8*, i32 } %220, i32 %219, 1
  resume { i8*, i32 } %221

; <label>:222:                                    ; preds = %179
  %223 = landingpad { i8*, i32 }
          catch i8* null
  %224 = extractvalue { i8*, i32 } %223, 0
  call void @__clang_call_terminate(i8* %224) #11
  unreachable

; <label>:225:                                    ; preds = %172
  %226 = load i32, i32* @x.516
  %227 = load i32, i32* @y.517
  %228 = sub i32 0, 1
  %229 = add i32 %226, %228
  %230 = sub i32 %226, 1
  %231 = mul i32 %226, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %227, 10
  %235 = xor i1 %233, true
  %236 = xor i1 %234, true
  %237 = xor i1 false, true
  %238 = and i1 %235, false
  %239 = and i1 %233, %237
  %240 = and i1 %236, false
  %241 = and i1 %234, %237
  %242 = or i1 %238, %239
  %243 = or i1 %240, %241
  %244 = xor i1 %242, %243
  %245 = or i1 %235, %236
  %246 = xor i1 %245, true
  %247 = or i1 false, %237
  %248 = and i1 %246, %247
  %249 = or i1 %244, %248
  %250 = or i1 %233, %234
  br i1 %249, label %251, label %313

; <label>:251:                                    ; preds = %225, %313
  %252 = load i32, i32* @x.516
  %253 = load i32, i32* @y.517
  %254 = add i32 %252, -1673927292
  %255 = sub i32 %254, 1
  %256 = sub i32 %255, -1673927292
  %257 = sub i32 %252, 1
  %258 = mul i32 %252, %256
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %253, 10
  %262 = xor i1 %260, true
  %263 = xor i1 %261, true
  %264 = xor i1 false, true
  %265 = and i1 %262, false
  %266 = and i1 %260, %264
  %267 = and i1 %263, false
  %268 = and i1 %261, %264
  %269 = or i1 %265, %266
  %270 = or i1 %267, %268
  %271 = xor i1 %269, %270
  %272 = or i1 %262, %263
  %273 = xor i1 %272, true
  %274 = or i1 false, %264
  %275 = and i1 %273, %274
  %276 = or i1 %271, %275
  %277 = or i1 %260, %261
  br i1 %276, label %278, label %313

; <label>:278:                                    ; preds = %251
  unreachable

; <label>:279:                                    ; preds = %20, %5
  %280 = alloca %"struct.std::_Rb_tree_iterator.30", align 8
  %281 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %282 = alloca %"class.std::_Rb_tree"*, align 8
  %283 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %284 = alloca %"class.std::tuple.34"*, align 8
  %285 = alloca %"class.std::tuple.31"*, align 8
  %286 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %287 = alloca %"struct.std::pair.32", align 8
  %288 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %289 = alloca i8*
  %290 = alloca i32
  %291 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %281, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %291, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %282, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %283, align 8
  store %"class.std::tuple.34"* %3, %"class.std::tuple.34"** %284, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %285, align 8
  %292 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %282, align 8
  %293 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %283, align 8
  %294 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %293) #3
  %295 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %284, align 8
  %296 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %295) #3
  %297 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %285, align 8
  %298 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %297) #3
  %299 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"* %292, %"struct.std::piecewise_construct_t"* dereferenceable(1) %294, %"class.std::tuple.34"* dereferenceable(8) %296, %"class.std::tuple.31"* dereferenceable(1) %298)
  store %"struct.std::_Rb_tree_node"* %299, %"struct.std::_Rb_tree_node"** %286, align 8
  %300 = bitcast %"struct.std::_Rb_tree_const_iterator"* %288 to i8*
  %301 = bitcast %"struct.std::_Rb_tree_const_iterator"* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %300, i8* %301, i64 8, i32 8, i1 false)
  %302 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %286, align 8
  br label %20

; <label>:303:                                    ; preds = %74, %60
  %304 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %29, i32 0, i32 0
  %305 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %304, align 8
  br label %74

; <label>:306:                                    ; preds = %142, %127
  %307 = load i8*, i8** %30, align 8
  %308 = call i8* @__cxa_begin_catch(i8* %307) #3
  %309 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node"* %309) #3
  br label %142

; <label>:310:                                    ; preds = %199, %185
  %311 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.30", %"struct.std::_Rb_tree_iterator.30"* %21, i32 0, i32 0
  %312 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %311, align 8
  br label %199

; <label>:313:                                    ; preds = %251, %225
  br label %251
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple.34"*, i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.34"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::tuple.34"* %0, %"class.std::tuple.34"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %3, align 8
  %6 = bitcast %"class.std::tuple.34"* %5 to %"struct.std::_Tuple_impl.35"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_(%"struct.std::_Tuple_impl.35"* %6, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple.34"*, align 8
  %8 = alloca %"class.std::tuple.31"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple.34"* %2, %"class.std::tuple.34"** %7, align 8
  store %"class.std::tuple.31"* %3, %"class.std::tuple.31"** %8, align 8
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %11 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree"* %10)
  store %"struct.std::_Rb_tree_node"* %11, %"struct.std::_Rb_tree_node"** %9, align 8
  %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %13 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %14 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %13) #3
  %15 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %7, align 8
  %16 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %15) #3
  %17 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %8, align 8
  %18 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %17) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"* %10, %"struct.std::_Rb_tree_node"* %12, %"struct.std::piecewise_construct_t"* dereferenceable(1) %14, %"class.std::tuple.34"* dereferenceable(8) %16, %"class.std::tuple.31"* dereferenceable(1) %18)
  %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  ret %"struct.std::_Rb_tree_node"* %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple.34"*, align 8
  store %"class.std::tuple.34"* %0, %"class.std::tuple.34"** %2, align 8
  %3 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %2, align 8
  ret %"class.std::tuple.34"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.34"*, align 8
  %10 = alloca %"class.std::tuple.31"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.34"* %3, %"class.std::tuple.34"** %9, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %10, align 8
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %15 = bitcast %"struct.std::_Rb_tree_node"* %14 to i8*
  %16 = bitcast i8* %15 to %"struct.std::_Rb_tree_node"*
  %17 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %13) #3
  %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %19 = invoke %"struct.std::pair.27"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %18)
          to label %20 unwind label %70

; <label>:20:                                     ; preds = %5
  %21 = load i32, i32* @x.524
  %22 = load i32, i32* @y.525
  %23 = add i32 %21, -127976265
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -127976265
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %201

; <label>:47:                                     ; preds = %20, %201
  %48 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %49 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %48) #3
  %50 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %9, align 8
  %51 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %50) #3
  %52 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %10, align 8
  %53 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %52) #3
  %54 = load i32, i32* @x.524
  %55 = load i32, i32* @y.525
  %56 = add i32 %54, 1815174113
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 1815174113
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %201

; <label>:68:                                     ; preds = %47
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %17, %"struct.std::pair.27"* %19, %"struct.std::piecewise_construct_t"* dereferenceable(1) %49, %"class.std::tuple.34"* dereferenceable(8) %51, %"class.std::tuple.31"* dereferenceable(1) %53)
          to label %69 unwind label %70

; <label>:69:                                     ; preds = %68
  br label %137

; <label>:70:                                     ; preds = %68, %5
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %11, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %12, align 4
  br label %74

; <label>:74:                                     ; preds = %70
  %75 = load i8*, i8** %11, align 8
  %76 = call i8* @__cxa_begin_catch(i8* %75) #3
  %77 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %78 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %78) #3
  invoke void @__cxa_rethrow() #14
          to label %200 unwind label %79

; <label>:79:                                     ; preds = %74
  %80 = landingpad { i8*, i32 }
          cleanup
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %11, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %12, align 4
  invoke void @__cxa_end_catch()
          to label %83 unwind label %143

; <label>:83:                                     ; preds = %79
  %84 = load i32, i32* @x.524
  %85 = load i32, i32* @y.525
  %86 = add i32 %84, -372138554
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, -372138554
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %208

; <label>:110:                                    ; preds = %83, %208
  %111 = load i32, i32* @x.524
  %112 = load i32, i32* @y.525
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 true, true
  %123 = and i1 %120, true
  %124 = and i1 %118, %122
  %125 = and i1 %121, true
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 true, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  br i1 %134, label %136, label %208

; <label>:136:                                    ; preds = %110
  br label %138

; <label>:137:                                    ; preds = %69
  ret void

; <label>:138:                                    ; preds = %136
  %139 = load i8*, i8** %11, align 8
  %140 = load i32, i32* %12, align 4
  %141 = insertvalue { i8*, i32 } undef, i8* %139, 0
  %142 = insertvalue { i8*, i32 } %141, i32 %140, 1
  resume { i8*, i32 } %142

; <label>:143:                                    ; preds = %79
  %144 = load i32, i32* @x.524
  %145 = load i32, i32* @y.525
  %146 = add i32 %144, -506260452
  %147 = sub i32 %146, 1
  %148 = sub i32 %147, -506260452
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = xor i1 %152, true
  %155 = xor i1 %153, true
  %156 = xor i1 true, true
  %157 = and i1 %154, true
  %158 = and i1 %152, %156
  %159 = and i1 %155, true
  %160 = and i1 %153, %156
  %161 = or i1 %157, %158
  %162 = or i1 %159, %160
  %163 = xor i1 %161, %162
  %164 = or i1 %154, %155
  %165 = xor i1 %164, true
  %166 = or i1 true, %156
  %167 = and i1 %165, %166
  %168 = or i1 %163, %167
  %169 = or i1 %152, %153
  br i1 %168, label %170, label %209

; <label>:170:                                    ; preds = %143, %209
  %171 = landingpad { i8*, i32 }
          catch i8* null
  %172 = extractvalue { i8*, i32 } %171, 0
  call void @__clang_call_terminate(i8* %172) #11
  %173 = load i32, i32* @x.524
  %174 = load i32, i32* @y.525
  %175 = add i32 %173, 2135010909
  %176 = sub i32 %175, 1
  %177 = sub i32 %176, 2135010909
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = xor i1 %181, true
  %184 = xor i1 %182, true
  %185 = xor i1 false, true
  %186 = and i1 %183, false
  %187 = and i1 %181, %185
  %188 = and i1 %184, false
  %189 = and i1 %182, %185
  %190 = or i1 %186, %187
  %191 = or i1 %188, %189
  %192 = xor i1 %190, %191
  %193 = or i1 %183, %184
  %194 = xor i1 %193, true
  %195 = or i1 false, %185
  %196 = and i1 %194, %195
  %197 = or i1 %192, %196
  %198 = or i1 %181, %182
  br i1 %197, label %199, label %209

; <label>:199:                                    ; preds = %170
  unreachable

; <label>:200:                                    ; preds = %74
  unreachable

; <label>:201:                                    ; preds = %47, %20
  %202 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %203 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %202) #3
  %204 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %9, align 8
  %205 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %204) #3
  %206 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %10, align 8
  %207 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %206) #3
  br label %47

; <label>:208:                                    ; preds = %110, %83
  br label %110

; <label>:209:                                    ; preds = %170, %143
  %210 = landingpad { i8*, i32 }
          catch i8* null
  %211 = extractvalue { i8*, i32 } %210, 0
  call void @__clang_call_terminate(i8* %211) #11
  br label %170
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), %"struct.std::pair.27"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca %"struct.std::pair.27"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.34"*, align 8
  %10 = alloca %"class.std::tuple.31"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %6, align 8
  store %"struct.std::pair.27"* %1, %"struct.std::pair.27"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.34"* %3, %"class.std::tuple.34"** %9, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %10, align 8
  %11 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %6, align 8
  %12 = bitcast %"class.std::allocator.5"* %11 to %"class.__gnu_cxx::new_allocator.6"*
  %13 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %12, %"struct.std::pair.27"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple.34"* dereferenceable(8) %17, %"class.std::tuple.31"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, %"struct.std::pair.27"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca %"struct.std::pair.27"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.34"*, align 8
  %10 = alloca %"class.std::tuple.31"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple.34", align 8
  %13 = alloca %"class.std::tuple.31", align 1
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store %"struct.std::pair.27"* %1, %"struct.std::pair.27"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.34"* %3, %"class.std::tuple.34"** %9, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %15 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %7, align 8
  %16 = bitcast %"struct.std::pair.27"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair.27"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJRKxEEC2EOS2_(%"class.std::tuple.34"* %12, %"class.std::tuple.34"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple.34", %"class.std::tuple.34"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl.35", %"struct.std::_Tuple_impl.35"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base.36", %"struct.std::_Head_base.36"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  call void @_ZNSt4pairIKxxEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.27"* %17, i64* %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJRKxEEC2EOS2_(%"class.std::tuple.34"*, %"class.std::tuple.34"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::tuple.34"*, align 8
  %4 = alloca %"class.std::tuple.34"*, align 8
  store %"class.std::tuple.34"* %0, %"class.std::tuple.34"** %3, align 8
  store %"class.std::tuple.34"* %1, %"class.std::tuple.34"** %4, align 8
  %5 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %3, align 8
  %6 = bitcast %"class.std::tuple.34"* %5 to %"struct.std::_Tuple_impl.35"*
  %7 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %4, align 8
  %8 = bitcast %"class.std::tuple.34"* %7 to %"struct.std::_Tuple_impl.35"*
  call void @_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_(%"struct.std::_Tuple_impl.35"* %6, %"struct.std::_Tuple_impl.35"* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKxxEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.27"*, i64*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::piecewise_construct_t", align 1
  %4 = alloca %"class.std::tuple.34", align 8
  %5 = alloca %"class.std::tuple.31", align 1
  %6 = alloca %"struct.std::pair.27"*, align 8
  %7 = alloca %"struct.std::_Index_tuple", align 1
  %8 = alloca %"struct.std::_Index_tuple.33", align 1
  %9 = getelementptr inbounds %"class.std::tuple.34", %"class.std::tuple.34"* %4, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Tuple_impl.35", %"struct.std::_Tuple_impl.35"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Head_base.36", %"struct.std::_Head_base.36"* %10, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store %"struct.std::pair.27"* %0, %"struct.std::pair.27"** %6, align 8
  %12 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %6, align 8
  call void @_ZNSt4pairIKxxEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair.27"* %12, %"class.std::tuple.34"* dereferenceable(8) %4, %"class.std::tuple.31"* dereferenceable(1) %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_(%"struct.std::_Tuple_impl.35"*, %"struct.std::_Tuple_impl.35"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.534
  %4 = load i32, i32* @y.535
  %5 = sub i32 %3, -488771196
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -488771196
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %68

; <label>:29:                                     ; preds = %2, %68
  %30 = alloca %"struct.std::_Tuple_impl.35"*, align 8
  %31 = alloca %"struct.std::_Tuple_impl.35"*, align 8
  store %"struct.std::_Tuple_impl.35"* %0, %"struct.std::_Tuple_impl.35"** %30, align 8
  store %"struct.std::_Tuple_impl.35"* %1, %"struct.std::_Tuple_impl.35"** %31, align 8
  %32 = load %"struct.std::_Tuple_impl.35"*, %"struct.std::_Tuple_impl.35"** %30, align 8
  %33 = bitcast %"struct.std::_Tuple_impl.35"* %32 to %"struct.std::_Head_base.36"*
  %34 = load %"struct.std::_Tuple_impl.35"*, %"struct.std::_Tuple_impl.35"** %31, align 8
  %35 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl.35"* dereferenceable(8) %34) #3
  %36 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %35) #3
  %37 = load i32, i32* @x.534
  %38 = load i32, i32* @y.535
  %39 = sub i32 %37, -1753682058
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1753682058
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %68

; <label>:63:                                     ; preds = %29
  invoke void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base.36"* %33, i64* dereferenceable(8) %36)
          to label %64 unwind label %65

; <label>:64:                                     ; preds = %63
  ret void

; <label>:65:                                     ; preds = %63
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  call void @__clang_call_terminate(i8* %67) #11
  unreachable

; <label>:68:                                     ; preds = %29, %2
  %69 = alloca %"struct.std::_Tuple_impl.35"*, align 8
  %70 = alloca %"struct.std::_Tuple_impl.35"*, align 8
  store %"struct.std::_Tuple_impl.35"* %0, %"struct.std::_Tuple_impl.35"** %69, align 8
  store %"struct.std::_Tuple_impl.35"* %1, %"struct.std::_Tuple_impl.35"** %70, align 8
  %71 = load %"struct.std::_Tuple_impl.35"*, %"struct.std::_Tuple_impl.35"** %69, align 8
  %72 = bitcast %"struct.std::_Tuple_impl.35"* %71 to %"struct.std::_Head_base.36"*
  %73 = load %"struct.std::_Tuple_impl.35"*, %"struct.std::_Tuple_impl.35"** %70, align 8
  %74 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl.35"* dereferenceable(8) %73) #3
  %75 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %74) #3
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl.35"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.538
  %6 = load i32, i32* @y.539
  %7 = sub i32 %5, 846181829
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 846181829
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -157054688, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -157054688, label %19
    i32 -1694570386, label %27
    i32 -734931670, label %59
    i32 713003429, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1694570386, i32 713003429
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Tuple_impl.35"*, align 8
  store %"struct.std::_Tuple_impl.35"* %0, %"struct.std::_Tuple_impl.35"** %28, align 8
  %29 = load %"struct.std::_Tuple_impl.35"*, %"struct.std::_Tuple_impl.35"** %28, align 8
  %30 = bitcast %"struct.std::_Tuple_impl.35"* %29 to %"struct.std::_Head_base.36"*
  %31 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_(%"struct.std::_Head_base.36"* dereferenceable(8) %30) #3
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.538
  %33 = load i32, i32* @y.539
  %34 = add i32 %32, 1481999672
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1481999672
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -734931670, i32 713003429
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Tuple_impl.35"*, align 8
  store %"struct.std::_Tuple_impl.35"* %0, %"struct.std::_Tuple_impl.35"** %62, align 8
  %63 = load %"struct.std::_Tuple_impl.35"*, %"struct.std::_Tuple_impl.35"** %62, align 8
  %64 = bitcast %"struct.std::_Tuple_impl.35"* %63 to %"struct.std::_Head_base.36"*
  %65 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_(%"struct.std::_Head_base.36"* dereferenceable(8) %64) #3
  store i32 -1694570386, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base.36"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.36"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base.36"* %0, %"struct.std::_Head_base.36"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base.36"*, %"struct.std::_Head_base.36"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.36", %"struct.std::_Head_base.36"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_(%"struct.std::_Head_base.36"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.36"*, align 8
  store %"struct.std::_Head_base.36"* %0, %"struct.std::_Head_base.36"** %2, align 8
  %3 = load %"struct.std::_Head_base.36"*, %"struct.std::_Head_base.36"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.36", %"struct.std::_Head_base.36"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxxEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair.27"*, %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Index_tuple", align 1
  %5 = alloca %"struct.std::_Index_tuple.33", align 1
  %6 = alloca %"struct.std::pair.27"*, align 8
  %7 = alloca %"class.std::tuple.34"*, align 8
  %8 = alloca %"class.std::tuple.31"*, align 8
  store %"struct.std::pair.27"* %0, %"struct.std::pair.27"** %6, align 8
  store %"class.std::tuple.34"* %1, %"class.std::tuple.34"** %7, align 8
  store %"class.std::tuple.31"* %2, %"class.std::tuple.31"** %8, align 8
  %9 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %7, align 8
  %12 = call dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.34"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %10, align 8
  %15 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %9, i32 0, i32 1
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.34"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple.34"*, align 8
  store %"class.std::tuple.34"* %0, %"class.std::tuple.34"** %2, align 8
  %3 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %2, align 8
  %4 = bitcast %"class.std::tuple.34"* %3 to %"struct.std::_Tuple_impl.35"*
  %5 = call dereferenceable(8) i64* @_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.35"* dereferenceable(8) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.35"* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.548
  %6 = load i32, i32* @y.549
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1109489610, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1109489610, label %18
    i32 -1506351577, label %26
    i32 419610438, label %56
    i32 27399643, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1506351577, i32 27399643
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Tuple_impl.35"*, align 8
  store %"struct.std::_Tuple_impl.35"* %0, %"struct.std::_Tuple_impl.35"** %27, align 8
  %28 = load %"struct.std::_Tuple_impl.35"*, %"struct.std::_Tuple_impl.35"** %27, align 8
  %29 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl.35"* dereferenceable(8) %28) #3
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.548
  %31 = load i32, i32* @y.549
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 419610438, i32 27399643
  store i32 %55, i32* %14
  br label %62

; <label>:56:                                     ; preds = %15
  %57 = load volatile i64*, i64** %2
  ret i64* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Tuple_impl.35"*, align 8
  store %"struct.std::_Tuple_impl.35"* %0, %"struct.std::_Tuple_impl.35"** %59, align 8
  %60 = load %"struct.std::_Tuple_impl.35"*, %"struct.std::_Tuple_impl.35"** %59, align 8
  %61 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl.35"* dereferenceable(8) %60) #3
  store i32 -1506351577, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_(%"struct.std::_Tuple_impl.35"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.35"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.35"* %0, %"struct.std::_Tuple_impl.35"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.35"*, %"struct.std::_Tuple_impl.35"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.35"* %5 to %"struct.std::_Head_base.36"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base.36"* %6, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.10"*, i64, %"class.std::allocator.11"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.552
  %5 = load i32, i32* @y.553
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %105

; <label>:17:                                     ; preds = %3, %105
  %18 = alloca %"struct.std::_Vector_base.10"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::allocator.11"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %18, align 8
  store i64 %1, i64* %19, align 8
  store %"class.std::allocator.11"* %2, %"class.std::allocator.11"** %20, align 8
  %23 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %18, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %23, i32 0, i32 0
  %25 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %20, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %24, %"class.std::allocator.11"* dereferenceable(1) %25) #3
  %26 = load i64, i64* %19, align 8
  %27 = load i32, i32* @x.552
  %28 = load i32, i32* @y.553
  %29 = add i32 %27, 697987753
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 697987753
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %105

; <label>:53:                                     ; preds = %17
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.10"* %23, i64 %26)
          to label %54 unwind label %55

; <label>:54:                                     ; preds = %53
  ret void

; <label>:55:                                     ; preds = %53
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %21, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %22, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %24) #3
  br label %59

; <label>:59:                                     ; preds = %55
  %60 = load i32, i32* @x.552
  %61 = load i32, i32* @y.553
  %62 = add i32 %60, -962714151
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -962714151
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %115

; <label>:74:                                     ; preds = %59, %115
  %75 = load i8*, i8** %21, align 8
  %76 = load i32, i32* %22, align 4
  %77 = insertvalue { i8*, i32 } undef, i8* %75, 0
  %78 = insertvalue { i8*, i32 } %77, i32 %76, 1
  %79 = load i32, i32* @x.552
  %80 = load i32, i32* @y.553
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %115

; <label>:104:                                    ; preds = %74
  resume { i8*, i32 } %78

; <label>:105:                                    ; preds = %17, %3
  %106 = alloca %"struct.std::_Vector_base.10"*, align 8
  %107 = alloca i64, align 8
  %108 = alloca %"class.std::allocator.11"*, align 8
  %109 = alloca i8*
  %110 = alloca i32
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %106, align 8
  store i64 %1, i64* %107, align 8
  store %"class.std::allocator.11"* %2, %"class.std::allocator.11"** %108, align 8
  %111 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %106, align 8
  %112 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %111, i32 0, i32 0
  %113 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %108, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %112, %"class.std::allocator.11"* dereferenceable(1) %113) #3
  %114 = load i64, i64* %107, align 8
  br label %17

; <label>:115:                                    ; preds = %74, %59
  %116 = load i8*, i8** %21, align 8
  %117 = load i32, i32* %22, align 4
  %118 = insertvalue { i8*, i32 } undef, i8* %116, 0
  %119 = insertvalue { i8*, i32 } %118, i32 %117, 1
  br label %74
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE21_M_default_initializeEm(%"class.std::vector.9"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.554
  %6 = load i32, i32* @y.555
  %7 = add i32 %5, -1089859965
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1089859965
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1348906615, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %97
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1348906615, label %19
    i32 -1106701683, label %39
    i32 -1019253597, label %81
    i32 1842803905, label %82
  ]

; <label>:18:                                     ; preds = %16
  br label %97

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1106701683, i32 1842803905
  store i32 %38, i32* %15
  br label %97

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.9"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::vector.9"*, %"class.std::vector.9"** %40, align 8
  %43 = bitcast %"class.std::vector.9"* %42 to %"struct.std::_Vector_base.10"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = bitcast %"class.std::vector.9"* %42 to %"struct.std::_Vector_base.10"*
  %49 = call dereferenceable(1) %"class.std::allocator.11"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.10"* %48) #3
  %50 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %46, i64 %47, %"class.std::allocator.11"* dereferenceable(1) %49)
  %51 = bitcast %"class.std::vector.9"* %42 to %"struct.std::_Vector_base.10"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %52, i32 0, i32 1
  store i32* %50, i32** %53, align 8
  %54 = load i32, i32* @x.554
  %55 = load i32, i32* @y.555
  %56 = sub i32 %54, 1594001869
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 1594001869
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -1019253597, i32 1842803905
  store i32 %80, i32* %15
  br label %97

; <label>:81:                                     ; preds = %16
  ret void

; <label>:82:                                     ; preds = %16
  %83 = alloca %"class.std::vector.9"*, align 8
  %84 = alloca i64, align 8
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %83, align 8
  store i64 %1, i64* %84, align 8
  %85 = load %"class.std::vector.9"*, %"class.std::vector.9"** %83, align 8
  %86 = bitcast %"class.std::vector.9"* %85 to %"struct.std::_Vector_base.10"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = load i64, i64* %84, align 8
  %91 = bitcast %"class.std::vector.9"* %85 to %"struct.std::_Vector_base.10"*
  %92 = call dereferenceable(1) %"class.std::allocator.11"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.10"* %91) #3
  %93 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %89, i64 %90, %"class.std::allocator.11"* dereferenceable(1) %92)
  %94 = bitcast %"class.std::vector.9"* %85 to %"struct.std::_Vector_base.10"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %95, i32 0, i32 1
  store i32* %93, i32** %96, align 8
  store i32 -1106701683, i32* %15
  br label %97

; <label>:97:                                     ; preds = %82, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.10"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.10"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %2, align 8
  %5 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = sub i64 %15, -1560983140920084179
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -1560983140920084179
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.10"* %5, i32* %8, i64 %21)
          to label %22 unwind label %54

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.556
  %24 = load i32, i32* @y.557
  %25 = add i32 %23, 106838443
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, 106838443
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %61

; <label>:37:                                     ; preds = %22, %61
  %38 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %38) #3
  %39 = load i32, i32* @x.556
  %40 = load i32, i32* @y.557
  %41 = add i32 %39, 1139621863
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 1139621863
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %61

; <label>:53:                                     ; preds = %37
  ret void

; <label>:54:                                     ; preds = %1
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %3, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %4, align 4
  %58 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %58) #3
  br label %59

; <label>:59:                                     ; preds = %54
  %60 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %60) #11
  unreachable

; <label>:61:                                     ; preds = %37, %22
  %62 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62) #3
  br label %37
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.11"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.558
  %6 = load i32, i32* @y.559
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2130690400, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2130690400, label %18
    i32 1856860426, label %26
    i32 1554199513, label %49
    i32 162352502, label %50
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1856860426, i32 162352502
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %28 = alloca %"class.std::allocator.11"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  store %"class.std::allocator.11"* %1, %"class.std::allocator.11"** %28, align 8
  %29 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29 to %"class.std::allocator.11"*
  %31 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %28, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.11"* %30, %"class.std::allocator.11"* dereferenceable(1) %31) #3
  %32 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 0
  store i32* null, i32** %32, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 1
  store i32* null, i32** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 2
  store i32* null, i32** %34, align 8
  %35 = load i32, i32* @x.558
  %36 = load i32, i32* @y.559
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1554199513, i32 162352502
  store i32 %48, i32* %14
  br label %59

; <label>:49:                                     ; preds = %15
  ret void

; <label>:50:                                     ; preds = %15
  %51 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %52 = alloca %"class.std::allocator.11"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %51, align 8
  store %"class.std::allocator.11"* %1, %"class.std::allocator.11"** %52, align 8
  %53 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %51, align 8
  %54 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %53 to %"class.std::allocator.11"*
  %55 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %52, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.11"* %54, %"class.std::allocator.11"* dereferenceable(1) %55) #3
  %56 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %53, i32 0, i32 0
  store i32* null, i32** %56, align 8
  %57 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %53, i32 0, i32 1
  store i32* null, i32** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %53, i32 0, i32 2
  store i32* null, i32** %58, align 8
  store i32 1856860426, i32* %14
  br label %59

; <label>:59:                                     ; preds = %50, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.10"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.10"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.10"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 0
  store i32* %7, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 1
  store i32* %12, i32** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 2
  store i32* %19, i32** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.11"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.11"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.11"*, %"class.std::allocator.11"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.11"*, align 8
  %4 = alloca %"class.std::allocator.11"*, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %3, align 8
  store %"class.std::allocator.11"* %1, %"class.std::allocator.11"** %4, align 8
  %5 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %3, align 8
  %6 = bitcast %"class.std::allocator.11"* %5 to %"class.__gnu_cxx::new_allocator.12"*
  %7 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %4, align 8
  %8 = bitcast %"class.std::allocator.11"* %7 to %"class.__gnu_cxx::new_allocator.12"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.12"* %6, %"class.__gnu_cxx::new_allocator.12"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %1, %"class.__gnu_cxx::new_allocator.12"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.10"*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.10"*
  %6 = alloca %"struct.std::_Vector_base.10"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %6, align 8
  store %"struct.std::_Vector_base.10"* %8, %"struct.std::_Vector_base.10"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 2088471253, i32* %10
  %11 = alloca i32*
  br label %12

; <label>:12:                                     ; preds = %2, %74
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 2088471253, label %15
    i32 1113366044, label %19
    i32 1206620010, label %25
    i32 789208351, label %26
    i32 -9165673, label %43
    i32 385168578, label %71
    i32 751225805, label %73
  ]

; <label>:14:                                     ; preds = %12
  br label %74

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 1113366044, i32 1206620010
  store i32 %18, i32* %10
  br label %74

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.11"*
  %23 = load i64, i64* %7, align 8
  %24 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.11"* dereferenceable(1) %22, i64 %23)
  store i32 789208351, i32* %10
  store i32* %24, i32** %11
  br label %74

; <label>:25:                                     ; preds = %12
  store i32 789208351, i32* %10
  store i32* null, i32** %11
  br label %74

; <label>:26:                                     ; preds = %12
  %27 = load i32*, i32** %11
  store i32* %27, i32** %3
  %28 = load i32, i32* @x.568
  %29 = load i32, i32* @y.569
  %30 = add i32 %28, 1894831407
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1894831407
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -9165673, i32 751225805
  store i32 %42, i32* %10
  br label %74

; <label>:43:                                     ; preds = %12
  %44 = load i32, i32* @x.568
  %45 = load i32, i32* @y.569
  %46 = sub i32 %44, 77489245
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 77489245
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 385168578, i32 751225805
  store i32 %70, i32* %10
  br label %74

; <label>:71:                                     ; preds = %12
  %72 = load volatile i32*, i32** %3
  ret i32* %72

; <label>:73:                                     ; preds = %12
  store i32 -9165673, i32* %10
  br label %74

; <label>:74:                                     ; preds = %73, %43, %26, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.11"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.11"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %3, align 8
  %6 = bitcast %"class.std::allocator.11"* %5 to %"class.__gnu_cxx::new_allocator.12"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.12"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.12"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.12"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1602715947, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1602715947, label %16
    i32 -641489036, label %21
    i32 -894916631, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -641489036, i32 -894916631
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 4
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i32*
  ret i32* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.12"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32*, i64, %"class.std::allocator.11"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.576
  %8 = load i32, i32* @y.577
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1776016243, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1776016243, label %20
    i32 -401578174, label %40
    i32 -594213354, label %61
    i32 956104784, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -401578174, i32 956104784
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca i32*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"class.std::allocator.11"*, align 8
  store i32* %0, i32** %41, align 8
  store i64 %1, i64* %42, align 8
  store %"class.std::allocator.11"* %2, %"class.std::allocator.11"** %43, align 8
  %44 = load i32*, i32** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = call i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32* %44, i64 %45)
  store i32* %46, i32** %4
  %47 = load i32, i32* @x.576
  %48 = load i32, i32* @y.577
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -594213354, i32 956104784
  store i32 %60, i32* %16
  br label %70

; <label>:61:                                     ; preds = %17
  %62 = load volatile i32*, i32** %4
  ret i32* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca i32*, align 8
  %65 = alloca i64, align 8
  %66 = alloca %"class.std::allocator.11"*, align 8
  store i32* %0, i32** %64, align 8
  store i64 %1, i64* %65, align 8
  store %"class.std::allocator.11"* %2, %"class.std::allocator.11"** %66, align 8
  %67 = load i32*, i32** %64, align 8
  %68 = load i64, i64* %65, align 8
  %69 = call i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32* %67, i64 %68)
  store i32 -401578174, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.11"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.10"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.10"*, align 8
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %2, align 8
  %3 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.11"*
  ret %"class.std::allocator.11"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32*, i64) #0 comdat {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.580
  %7 = load i32, i32* @y.581
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -781784372, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -781784372, label %19
    i32 2108891188, label %39
    i32 -1454668925, label %73
    i32 1440246324, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2108891188, i32 1440246324
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i64, align 8
  %42 = alloca i8, align 1
  store i32* %0, i32** %40, align 8
  store i64 %1, i64* %41, align 8
  store i8 1, i8* %42, align 1
  %43 = load i32*, i32** %40, align 8
  %44 = load i64, i64* %41, align 8
  %45 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %43, i64 %44)
  store i32* %45, i32** %3
  %46 = load i32, i32* @x.580
  %47 = load i32, i32* @y.581
  %48 = add i32 %46, 256225577
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 256225577
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1454668925, i32 1440246324
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile i32*, i32** %3
  ret i32* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca i32*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8, align 1
  store i32* %0, i32** %76, align 8
  store i64 %1, i64* %77, align 8
  store i8 1, i8* %78, align 1
  %79 = load i32*, i32** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %79, i64 %80)
  store i32 2108891188, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.582
  %7 = load i32, i32* @y.583
  %8 = sub i32 %6, 802277373
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 802277373
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1028856724, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1028856724, label %20
    i32 2021086433, label %40
    i32 -332561743, label %62
    i32 1779714443, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 2021086433, i32 1779714443
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca i32*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i32, align 4
  store i32* %0, i32** %41, align 8
  store i64 %1, i64* %42, align 8
  %44 = load i32*, i32** %41, align 8
  %45 = load i64, i64* %42, align 8
  store i32 0, i32* %43, align 4
  %46 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %44, i64 %45, i32* dereferenceable(4) %43)
  store i32* %46, i32** %3
  %47 = load i32, i32* @x.582
  %48 = load i32, i32* @y.583
  %49 = sub i32 %47, -743752773
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -743752773
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -332561743, i32 1779714443
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile i32*, i32** %3
  ret i32* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca i32*, align 8
  %66 = alloca i64, align 8
  %67 = alloca i32, align 4
  store i32* %0, i32** %65, align 8
  store i64 %1, i64* %66, align 8
  %68 = load i32*, i32** %65, align 8
  %69 = load i64, i64* %66, align 8
  store i32 0, i32* %67, align 4
  %70 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %68, i64 %69, i32* dereferenceable(4) %67)
  store i32 2021086433, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.584
  %8 = load i32, i32* @y.585
  %9 = add i32 %7, 148227901
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 148227901
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -451142038, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %63
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -451142038, label %21
    i32 -1052809987, label %29
    i32 931637770, label %52
    i32 -1647590882, label %54
  ]

; <label>:20:                                     ; preds = %18
  br label %63

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1052809987, i32 -1647590882
  store i32 %28, i32* %17
  br label %63

; <label>:29:                                     ; preds = %18
  %30 = alloca i32*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i32*, align 8
  store i32* %0, i32** %30, align 8
  store i64 %1, i64* %31, align 8
  store i32* %2, i32** %32, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %33)
  %35 = load i64, i64* %31, align 8
  %36 = load i32*, i32** %32, align 8
  %37 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %34, i64 %35, i32* dereferenceable(4) %36)
  store i32* %37, i32** %4
  %38 = load i32, i32* @x.584
  %39 = load i32, i32* @y.585
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 931637770, i32 -1647590882
  store i32 %51, i32* %17
  br label %63

; <label>:52:                                     ; preds = %18
  %53 = load volatile i32*, i32** %4
  ret i32* %53

; <label>:54:                                     ; preds = %18
  %55 = alloca i32*, align 8
  %56 = alloca i64, align 8
  %57 = alloca i32*, align 8
  store i32* %0, i32** %55, align 8
  store i64 %1, i64* %56, align 8
  store i32* %2, i32** %57, align 8
  %58 = load i32*, i32** %55, align 8
  %59 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %58)
  %60 = load i64, i64* %56, align 8
  %61 = load i32*, i32** %57, align 8
  %62 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %59, i64 %60, i32* dereferenceable(4) %61)
  store i32 -1052809987, i32* %17
  br label %63

; <label>:63:                                     ; preds = %54, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i32*
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  %10 = load i32*, i32** %7, align 8
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %12 = load i64, i64* %6, align 8
  store i64 %12, i64* %9, align 8
  %13 = alloca i32
  store i32 644321007, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %155
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 644321007, label %17
    i32 523297477, label %21
    i32 -980937031, label %24
    i32 -987577226, label %52
    i32 831801006, label %74
    i32 1095250021, label %75
    i32 -61740362, label %103
    i32 -1589031623, label %131
    i32 -537448691, label %133
    i32 246092109, label %153
  ]

; <label>:16:                                     ; preds = %14
  br label %155

; <label>:17:                                     ; preds = %14
  %18 = load i64, i64* %9, align 8
  %19 = icmp ugt i64 %18, 0
  %20 = select i1 %19, i32 523297477, i32 1095250021
  store i32 %20, i32* %13
  br label %155

; <label>:21:                                     ; preds = %14
  %22 = load i32, i32* %8, align 4
  %23 = load i32*, i32** %5, align 8
  store i32 %22, i32* %23, align 4
  store i32 -980937031, i32* %13
  br label %155

; <label>:24:                                     ; preds = %14
  %25 = load i32, i32* @x.586
  %26 = load i32, i32* @y.587
  %27 = sub i32 %25, 1395840269
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 1395840269
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 -987577226, i32 -537448691
  store i32 %51, i32* %13
  br label %155

; <label>:52:                                     ; preds = %14
  %53 = load i64, i64* %9, align 8
  %54 = sub i64 0, -1
  %55 = sub i64 %53, %54
  %56 = add i64 %53, -1
  store i64 %55, i64* %9, align 8
  %57 = load i32*, i32** %5, align 8
  %58 = getelementptr inbounds i32, i32* %57, i32 1
  store i32* %58, i32** %5, align 8
  %59 = load i32, i32* @x.586
  %60 = load i32, i32* @y.587
  %61 = sub i32 %59, -741898979
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -741898979
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 831801006, i32 -537448691
  store i32 %73, i32* %13
  br label %155

; <label>:74:                                     ; preds = %14
  store i32 644321007, i32* %13
  br label %155

; <label>:75:                                     ; preds = %14
  %76 = load i32, i32* @x.586
  %77 = load i32, i32* @y.587
  %78 = add i32 %76, 658459158
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, 658459158
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 true, true
  %89 = and i1 %86, true
  %90 = and i1 %84, %88
  %91 = and i1 %87, true
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 true, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  %102 = select i1 %100, i32 -61740362, i32 246092109
  store i32 %102, i32* %13
  br label %155

; <label>:103:                                    ; preds = %14
  %104 = load i32*, i32** %5, align 8
  store i32* %104, i32** %4
  %105 = load i32, i32* @x.586
  %106 = load i32, i32* @y.587
  %107 = sub i32 0, 1
  %108 = add i32 %105, %107
  %109 = sub i32 %105, 1
  %110 = mul i32 %105, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %106, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 true, true
  %117 = and i1 %114, true
  %118 = and i1 %112, %116
  %119 = and i1 %115, true
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 true, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  %130 = select i1 %128, i32 -1589031623, i32 246092109
  store i32 %130, i32* %13
  br label %155

; <label>:131:                                    ; preds = %14
  %132 = load volatile i32*, i32** %4
  ret i32* %132

; <label>:133:                                    ; preds = %14
  %134 = load i64, i64* %9, align 8
  %135 = add i64 %134, -5374290312015006343
  %136 = sub i64 %135, -1
  %137 = sub i64 %136, -5374290312015006343
  %138 = sub i64 %134, -1
  %139 = mul i64 %137, -1
  %140 = add i64 0, 8117199307100212941
  %141 = sub i64 %140, %134
  %142 = sub i64 %141, 8117199307100212941
  %143 = sub i64 0, %134
  %144 = add i64 %142, 352684691688424538
  %145 = add i64 %144, -1
  %146 = sub i64 %145, 352684691688424538
  %147 = add i64 %142, -1
  %148 = sub i64 0, -1
  %149 = sub i64 %134, %148
  %150 = add i64 %134, -1
  store i64 %149, i64* %9, align 8
  %151 = load i32*, i32** %5, align 8
  %152 = getelementptr inbounds i32, i32* %151, i32 1
  store i32* %152, i32** %5, align 8
  store i32 -987577226, i32* %13
  br label %155

; <label>:153:                                    ; preds = %14
  %154 = load i32*, i32** %5, align 8
  store i32 -61740362, i32* %13
  br label %155

; <label>:155:                                    ; preds = %153, %133, %103, %75, %74, %52, %24, %21, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.590
  %6 = load i32, i32* @y.591
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1859845605, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1859845605, label %18
    i32 -1072591068, label %26
    i32 -1526253086, label %44
    i32 825002864, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1072591068, i32 825002864
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca i32*, align 8
  store i32* %0, i32** %27, align 8
  %28 = load i32*, i32** %27, align 8
  store i32* %28, i32** %2
  %29 = load i32, i32* @x.590
  %30 = load i32, i32* @y.591
  %31 = add i32 %29, -1606732879
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1606732879
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1526253086, i32 825002864
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  %45 = load volatile i32*, i32** %2
  ret i32* %45

; <label>:46:                                     ; preds = %15
  %47 = alloca i32*, align 8
  store i32* %0, i32** %47, align 8
  %48 = load i32*, i32** %47, align 8
  store i32 -1072591068, i32* %14
  br label %49

; <label>:49:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.10"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base.10"*
  %6 = alloca %"struct.std::_Vector_base.10"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.10"* %0, %"struct.std::_Vector_base.10"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %6, align 8
  store %"struct.std::_Vector_base.10"* %9, %"struct.std::_Vector_base.10"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 -1097062344, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %70
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1097062344, label %15
    i32 1367104027, label %19
    i32 -1499458209, label %25
    i32 11426173, label %52
    i32 -2060874581, label %68
    i32 -2062754850, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %70

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 1367104027, i32 -1499458209
  store i32 %18, i32* %11
  br label %70

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.10"*, %"struct.std::_Vector_base.10"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.11"*
  %23 = load i32*, i32** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.11"* dereferenceable(1) %22, i32* %23, i64 %24)
  store i32 -1499458209, i32* %11
  br label %70

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.592
  %27 = load i32, i32* @y.593
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 11426173, i32 -2062754850
  store i32 %51, i32* %11
  br label %70

; <label>:52:                                     ; preds = %12
  %53 = load i32, i32* @x.592
  %54 = load i32, i32* @y.593
  %55 = add i32 %53, 204175645
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 204175645
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -2060874581, i32 -2062754850
  store i32 %67, i32* %11
  br label %70

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  store i32 11426173, i32* %11
  br label %70

; <label>:70:                                     ; preds = %69, %52, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.11"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.11"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %4, align 8
  %8 = bitcast %"class.std::allocator.11"* %7 to %"class.__gnu_cxx::new_allocator.12"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.12"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.12"*, i32*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.9"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.598
  %7 = load i32, i32* @y.599
  %8 = add i32 %6, 406961193
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 406961193
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1208837163, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1208837163, label %20
    i32 -147971379, label %28
    i32 607206632, label %71
    i32 -1485414064, label %72
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -147971379, i32 -1485414064
  store i32 %27, i32* %16
  br label %89

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.9"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32*, align 8
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %29, align 8
  store i64 %1, i64* %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load %"class.std::vector.9"*, %"class.std::vector.9"** %29, align 8
  %33 = bitcast %"class.std::vector.9"* %32 to %"struct.std::_Vector_base.10"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = load i32*, i32** %31, align 8
  %39 = bitcast %"class.std::vector.9"* %32 to %"struct.std::_Vector_base.10"*
  %40 = call dereferenceable(1) %"class.std::allocator.11"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.10"* %39) #3
  %41 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %36, i64 %37, i32* dereferenceable(4) %38, %"class.std::allocator.11"* dereferenceable(1) %40)
  %42 = bitcast %"class.std::vector.9"* %32 to %"struct.std::_Vector_base.10"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 1
  store i32* %41, i32** %44, align 8
  %45 = load i32, i32* @x.598
  %46 = load i32, i32* @y.599
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 607206632, i32 -1485414064
  store i32 %70, i32* %16
  br label %89

; <label>:71:                                     ; preds = %17
  ret void

; <label>:72:                                     ; preds = %17
  %73 = alloca %"class.std::vector.9"*, align 8
  %74 = alloca i64, align 8
  %75 = alloca i32*, align 8
  store %"class.std::vector.9"* %0, %"class.std::vector.9"** %73, align 8
  store i64 %1, i64* %74, align 8
  store i32* %2, i32** %75, align 8
  %76 = load %"class.std::vector.9"*, %"class.std::vector.9"** %73, align 8
  %77 = bitcast %"class.std::vector.9"* %76 to %"struct.std::_Vector_base.10"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = load i64, i64* %74, align 8
  %82 = load i32*, i32** %75, align 8
  %83 = bitcast %"class.std::vector.9"* %76 to %"struct.std::_Vector_base.10"*
  %84 = call dereferenceable(1) %"class.std::allocator.11"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.10"* %83) #3
  %85 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %80, i64 %81, i32* dereferenceable(4) %82, %"class.std::allocator.11"* dereferenceable(1) %84)
  %86 = bitcast %"class.std::vector.9"* %76 to %"struct.std::_Vector_base.10"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.10", %"struct.std::_Vector_base.10"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %87, i32 0, i32 1
  store i32* %85, i32** %88, align 8
  store i32 -147971379, i32* %16
  br label %89

; <label>:89:                                     ; preds = %72, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.11"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.11"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.11"* %3, %"class.std::allocator.11"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.604
  %8 = load i32, i32* @y.605
  %9 = add i32 %7, 527491617
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 527491617
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -686310087, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %86
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -686310087, label %21
    i32 -1224330717, label %41
    i32 773411734, label %76
    i32 1746691998, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %86

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1224330717, i32 1746691998
  store i32 %40, i32* %17
  br label %86

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i32*, align 8
  store i32* %0, i32** %42, align 8
  store i64 %1, i64* %43, align 8
  store i32* %2, i32** %44, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = load i32*, i32** %44, align 8
  %48 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %45, i64 %46, i32* dereferenceable(4) %47)
  store i32* %48, i32** %4
  %49 = load i32, i32* @x.604
  %50 = load i32, i32* @y.605
  %51 = add i32 %49, -820142906
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -820142906
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 773411734, i32 1746691998
  store i32 %75, i32* %17
  br label %86

; <label>:76:                                     ; preds = %18
  %77 = load volatile i32*, i32** %4
  ret i32* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca i32*, align 8
  %80 = alloca i64, align 8
  %81 = alloca i32*, align 8
  store i32* %0, i32** %79, align 8
  store i64 %1, i64* %80, align 8
  store i32* %2, i32** %81, align 8
  %82 = load i32*, i32** %79, align 8
  %83 = load i64, i64* %80, align 8
  %84 = load i32*, i32** %81, align 8
  %85 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %82, i64 %83, i32* dereferenceable(4) %84)
  store i32 -1224330717, i32* %17
  br label %86

; <label>:86:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.11"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.11"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.11"* %2, %"class.std::allocator.11"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.608
  %6 = load i32, i32* @y.609
  %7 = add i32 %5, 1798279854
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1798279854
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1264347430, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1264347430, label %19
    i32 -29130851, label %27
    i32 -1856128168, label %59
    i32 1956080383, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -29130851, i32 1956080383
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load i32*, i32** %28, align 8
  %31 = load i32*, i32** %29, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %30, i32* %31)
  %32 = load i32, i32* @x.608
  %33 = load i32, i32* @y.609
  %34 = add i32 %32, 1767226825
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1767226825
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1856128168, i32 1956080383
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca i32*, align 8
  %62 = alloca i32*, align 8
  store i32* %0, i32** %61, align 8
  store i32* %1, i32** %62, align 8
  %63 = load i32*, i32** %61, align 8
  %64 = load i32*, i32** %62, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %63, i32* %64)
  store i32 -29130851, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.610
  %6 = load i32, i32* @y.611
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 780980114, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 780980114, label %18
    i32 -1070411633, label %26
    i32 1065360739, label %55
    i32 631851829, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1070411633, i32 631851829
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca i32*, align 8
  %28 = alloca i32*, align 8
  store i32* %0, i32** %27, align 8
  store i32* %1, i32** %28, align 8
  %29 = load i32, i32* @x.610
  %30 = load i32, i32* @y.611
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1065360739, i32 631851829
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca i32*, align 8
  %58 = alloca i32*, align 8
  store i32* %0, i32** %57, align 8
  store i32* %1, i32** %58, align 8
  store i32 -1070411633, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEEC2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEED2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EEC2EmRKS9_(%"struct.std::_Vector_base.15"*, i64, %"class.std::allocator.16"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.616
  %5 = load i32, i32* @y.617
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %76

; <label>:29:                                     ; preds = %3, %76
  %30 = alloca %"struct.std::_Vector_base.15"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator.16"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::allocator.16"* %2, %"class.std::allocator.16"** %32, align 8
  %35 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %30, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %35, i32 0, i32 0
  %37 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %32, align 8
  call void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE12_Vector_implC2ERKS9_(%"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %36, %"class.std::allocator.16"* dereferenceable(1) %37) #3
  %38 = load i64, i64* %31, align 8
  %39 = load i32, i32* @x.616
  %40 = load i32, i32* @y.617
  %41 = add i32 %39, 428243151
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 428243151
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %76

; <label>:65:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE17_M_create_storageEm(%"struct.std::_Vector_base.15"* %35, i64 %38)
          to label %66 unwind label %67

; <label>:66:                                     ; preds = %65
  ret void

; <label>:67:                                     ; preds = %65
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %33, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %34, align 4
  call void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %36) #3
  br label %71

; <label>:71:                                     ; preds = %67
  %72 = load i8*, i8** %33, align 8
  %73 = load i32, i32* %34, align 4
  %74 = insertvalue { i8*, i32 } undef, i8* %72, 0
  %75 = insertvalue { i8*, i32 } %74, i32 %73, 1
  resume { i8*, i32 } %75

; <label>:76:                                     ; preds = %29, %3
  %77 = alloca %"struct.std::_Vector_base.15"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca %"class.std::allocator.16"*, align 8
  %80 = alloca i8*
  %81 = alloca i32
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %77, align 8
  store i64 %1, i64* %78, align 8
  store %"class.std::allocator.16"* %2, %"class.std::allocator.16"** %79, align 8
  %82 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %77, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %82, i32 0, i32 0
  %84 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %79, align 8
  call void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE12_Vector_implC2ERKS9_(%"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %83, %"class.std::allocator.16"* dereferenceable(1) %84) #3
  %85 = load i64, i64* %78, align 8
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE21_M_default_initializeEm(%"class.std::vector.14"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.14"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %6 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::map.19"*, %"class.std::map.19"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %12 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %11) #3
  %13 = call %"class.std::map.19"* @_ZSt27__uninitialized_default_n_aIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEmS8_ET_SA_T0_RSaIT1_E(%"class.std::map.19"* %9, i64 %10, %"class.std::allocator.16"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %15, i32 0, i32 1
  store %"class.std::map.19"* %13, %"class.std::map.19"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EED2Ev(%"struct.std::_Vector_base.15"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.15"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %2, align 8
  %5 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::map.19"*, %"class.std::map.19"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::map.19"*, %"class.std::map.19"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::map.19"*, %"class.std::map.19"** %13, align 8
  %15 = ptrtoint %"class.std::map.19"* %11 to i64
  %16 = ptrtoint %"class.std::map.19"* %14 to i64
  %17 = sub i64 %15, 7870183273271804309
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 7870183273271804309
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 48
  invoke void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE13_M_deallocateEPS8_m(%"struct.std::_Vector_base.15"* %5, %"class.std::map.19"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.620
  %31 = load i32, i32* @y.621
  %32 = add i32 %30, 1539917025
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1539917025
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %73

; <label>:44:                                     ; preds = %29, %73
  %45 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %45) #11
  %46 = load i32, i32* @x.620
  %47 = load i32, i32* @y.621
  %48 = sub i32 %46, 624807387
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 624807387
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %73

; <label>:72:                                     ; preds = %44
  unreachable

; <label>:73:                                     ; preds = %44, %29
  %74 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %74) #11
  br label %44
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE12_Vector_implC2ERKS9_(%"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"*, %"class.std::allocator.16"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.622
  %6 = load i32, i32* @y.623
  %7 = sub i32 %5, -422047500
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -422047500
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2019097787, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2019097787, label %19
    i32 244321105, label %39
    i32 970229955, label %75
    i32 1359216653, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 244321105, i32 1359216653
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator.16"*, align 8
  store %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"** %40, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %41, align 8
  %42 = load %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %42 to %"class.std::allocator.16"*
  %44 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %41, align 8
  call void @_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEEC2ERKS8_(%"class.std::allocator.16"* %43, %"class.std::allocator.16"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %42, i32 0, i32 0
  store %"class.std::map.19"* null, %"class.std::map.19"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %42, i32 0, i32 1
  store %"class.std::map.19"* null, %"class.std::map.19"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %42, i32 0, i32 2
  store %"class.std::map.19"* null, %"class.std::map.19"** %47, align 8
  %48 = load i32, i32* @x.622
  %49 = load i32, i32* @y.623
  %50 = add i32 %48, -451007672
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -451007672
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 970229955, i32 1359216653
  store i32 %74, i32* %15
  br label %85

; <label>:75:                                     ; preds = %16
  ret void

; <label>:76:                                     ; preds = %16
  %77 = alloca %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"*, align 8
  %78 = alloca %"class.std::allocator.16"*, align 8
  store %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"** %77, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %78, align 8
  %79 = load %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"** %77, align 8
  %80 = bitcast %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %79 to %"class.std::allocator.16"*
  %81 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %78, align 8
  call void @_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEEC2ERKS8_(%"class.std::allocator.16"* %80, %"class.std::allocator.16"* dereferenceable(1) %81) #3
  %82 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %79, i32 0, i32 0
  store %"class.std::map.19"* null, %"class.std::map.19"** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %79, i32 0, i32 1
  store %"class.std::map.19"* null, %"class.std::map.19"** %83, align 8
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %79, i32 0, i32 2
  store %"class.std::map.19"* null, %"class.std::map.19"** %84, align 8
  store i32 244321105, i32* %15
  br label %85

; <label>:85:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE17_M_create_storageEm(%"struct.std::_Vector_base.15"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.15"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::map.19"* @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE11_M_allocateEm(%"struct.std::_Vector_base.15"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::map.19"* %7, %"class.std::map.19"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::map.19"*, %"class.std::map.19"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::map.19"* %12, %"class.std::map.19"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::map.19"*, %"class.std::map.19"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::map.19"* %19, %"class.std::map.19"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.626
  %5 = load i32, i32* @y.627
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 2050050109, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2050050109, label %17
    i32 -1591883435, label %25
    i32 -611312952, label %55
    i32 880265504, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1591883435, i32 880265504
  store i32 %24, i32* %13
  br label %60

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"** %26, align 8
  %27 = load %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %27 to %"class.std::allocator.16"*
  call void @_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEED2Ev(%"class.std::allocator.16"* %28) #3
  %29 = load i32, i32* @x.626
  %30 = load i32, i32* @y.627
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -611312952, i32 880265504
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"** %57, align 8
  %58 = load %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"** %57, align 8
  %59 = bitcast %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %58 to %"class.std::allocator.16"*
  call void @_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEED2Ev(%"class.std::allocator.16"* %59) #3
  store i32 -1591883435, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEEC2ERKS8_(%"class.std::allocator.16"*, %"class.std::allocator.16"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.628
  %6 = load i32, i32* @y.629
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 838872937, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 838872937, label %18
    i32 -715495932, label %38
    i32 -1086671431, label %59
    i32 1578617788, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -715495932, i32 1578617788
  store i32 %37, i32* %14
  br label %67

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.16"*, align 8
  %40 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %39, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %40, align 8
  %41 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %39, align 8
  %42 = bitcast %"class.std::allocator.16"* %41 to %"class.__gnu_cxx::new_allocator.17"*
  %43 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %40, align 8
  %44 = bitcast %"class.std::allocator.16"* %43 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEEC2ERKSA_(%"class.__gnu_cxx::new_allocator.17"* %42, %"class.__gnu_cxx::new_allocator.17"* dereferenceable(1) %44) #3
  %45 = load i32, i32* @x.628
  %46 = load i32, i32* @y.629
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1086671431, i32 1578617788
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::allocator.16"*, align 8
  %62 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %61, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %62, align 8
  %63 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %61, align 8
  %64 = bitcast %"class.std::allocator.16"* %63 to %"class.__gnu_cxx::new_allocator.17"*
  %65 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %62, align 8
  %66 = bitcast %"class.std::allocator.16"* %65 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEEC2ERKSA_(%"class.__gnu_cxx::new_allocator.17"* %64, %"class.__gnu_cxx::new_allocator.17"* dereferenceable(1) %66) #3
  store i32 -715495932, i32* %14
  br label %67

; <label>:67:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEEC2ERKSA_(%"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %1, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map.19"* @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE11_M_allocateEm(%"struct.std::_Vector_base.15"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.15"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.632
  %9 = load i32, i32* @y.633
  %10 = sub i32 %8, -219233626
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -219233626
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -767965540, i32* %18
  %19 = alloca %"class.std::map.19"*
  br label %20

; <label>:20:                                     ; preds = %2, %73
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -767965540, label %23
    i32 1366238918, label %31
    i32 -250089512, label %54
    i32 904002889, label %57
    i32 -188462665, label %64
    i32 -1360913718, label %65
    i32 160487464, label %67
  ]

; <label>:22:                                     ; preds = %20
  br label %73

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1366238918, i32 160487464
  store i32 %30, i32* %18
  br label %73

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.15"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %5
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %32, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %32, align 8
  store %"struct.std::_Vector_base.15"* %35, %"struct.std::_Vector_base.15"** %4
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 0
  store i1 %38, i1* %3
  %39 = load i32, i32* @x.632
  %40 = load i32, i32* @y.633
  %41 = sub i32 %39, -1197862670
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -1197862670
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -250089512, i32 160487464
  store i32 %53, i32* %18
  br label %73

; <label>:54:                                     ; preds = %20
  %55 = load volatile i1, i1* %3
  %56 = select i1 %55, i32 904002889, i32 -188462665
  store i32 %56, i32* %18
  br label %73

; <label>:57:                                     ; preds = %20
  %58 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %4
  %59 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %59 to %"class.std::allocator.16"*
  %61 = load volatile i64*, i64** %5
  %62 = load i64, i64* %61, align 8
  %63 = call %"class.std::map.19"* @_ZNSt16allocator_traitsISaISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEE8allocateERS9_m(%"class.std::allocator.16"* dereferenceable(1) %60, i64 %62)
  store i32 -1360913718, i32* %18
  store %"class.std::map.19"* %63, %"class.std::map.19"** %19
  br label %73

; <label>:64:                                     ; preds = %20
  store i32 -1360913718, i32* %18
  store %"class.std::map.19"* null, %"class.std::map.19"** %19
  br label %73

; <label>:65:                                     ; preds = %20
  %66 = load %"class.std::map.19"*, %"class.std::map.19"** %19
  ret %"class.std::map.19"* %66

; <label>:67:                                     ; preds = %20
  %68 = alloca %"struct.std::_Vector_base.15"*, align 8
  %69 = alloca i64, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %68, align 8
  store i64 %1, i64* %69, align 8
  %70 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %68, align 8
  %71 = load i64, i64* %69, align 8
  %72 = icmp ne i64 %71, 0
  store i32 1366238918, i32* %18
  br label %73

; <label>:73:                                     ; preds = %67, %64, %57, %54, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map.19"* @_ZNSt16allocator_traitsISaISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEE8allocateERS9_m(%"class.std::allocator.16"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::map.19"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.634
  %7 = load i32, i32* @y.635
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 481330702, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 481330702, label %19
    i32 1144408681, label %27
    i32 1474376867, label %61
    i32 639715817, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1144408681, i32 639715817
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.16"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %28, align 8
  %31 = bitcast %"class.std::allocator.16"* %30 to %"class.__gnu_cxx::new_allocator.17"*
  %32 = load i64, i64* %29, align 8
  %33 = call %"class.std::map.19"* @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"* %31, i64 %32, i8* null)
  store %"class.std::map.19"* %33, %"class.std::map.19"** %3
  %34 = load i32, i32* @x.634
  %35 = load i32, i32* @y.635
  %36 = sub i32 %34, -1414252844
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1414252844
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1474376867, i32 639715817
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::map.19"*, %"class.std::map.19"** %3
  ret %"class.std::map.19"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator.16"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %64, align 8
  %67 = bitcast %"class.std::allocator.16"* %66 to %"class.__gnu_cxx::new_allocator.17"*
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::map.19"* @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"* %67, i64 %68, i8* null)
  store i32 1144408681, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map.19"* @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -2112453624, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -2112453624, label %16
    i32 11530096, label %21
    i32 -1164393097, label %49
    i32 1451481918, label %65
    i32 -63694072, label %66
    i32 -1762336481, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 11530096, i32 -63694072
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.636
  %23 = load i32, i32* @y.637
  %24 = add i32 %22, 751636002
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 751636002
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -1164393097, i32 -1762336481
  store i32 %48, i32* %12
  br label %72

; <label>:49:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  %50 = load i32, i32* @x.636
  %51 = load i32, i32* @y.637
  %52 = sub i32 %50, -1557047231
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1557047231
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1451481918, i32 -1762336481
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  unreachable

; <label>:66:                                     ; preds = %13
  %67 = load i64, i64* %7, align 8
  %68 = mul i64 %67, 48
  %69 = call i8* @_Znwm(i64 %68)
  %70 = bitcast i8* %69 to %"class.std::map.19"*
  ret %"class.std::map.19"* %70

; <label>:71:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  store i32 -1164393097, i32* %12
  br label %72

; <label>:72:                                     ; preds = %71, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret i64 384307168202282325
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map.19"* @_ZSt27__uninitialized_default_n_aIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEmS8_ET_SA_T0_RSaIT1_E(%"class.std::map.19"*, i64, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::map.19"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.640
  %8 = load i32, i32* @y.641
  %9 = sub i32 %7, -1969761386
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1969761386
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1470073145, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %60
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1470073145, label %21
    i32 -1130641236, label %29
    i32 -830504144, label %51
    i32 -1014045591, label %53
  ]

; <label>:20:                                     ; preds = %18
  br label %60

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1130641236, i32 -1014045591
  store i32 %28, i32* %17
  br label %60

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::map.19"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::allocator.16"* %2, %"class.std::allocator.16"** %32, align 8
  %33 = load %"class.std::map.19"*, %"class.std::map.19"** %30, align 8
  %34 = load i64, i64* %31, align 8
  %35 = call %"class.std::map.19"* @_ZSt25__uninitialized_default_nIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEmET_SA_T0_(%"class.std::map.19"* %33, i64 %34)
  store %"class.std::map.19"* %35, %"class.std::map.19"** %4
  %36 = load i32, i32* @x.640
  %37 = load i32, i32* @y.641
  %38 = sub i32 %36, -1926180801
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1926180801
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -830504144, i32 -1014045591
  store i32 %50, i32* %17
  br label %60

; <label>:51:                                     ; preds = %18
  %52 = load volatile %"class.std::map.19"*, %"class.std::map.19"** %4
  ret %"class.std::map.19"* %52

; <label>:53:                                     ; preds = %18
  %54 = alloca %"class.std::map.19"*, align 8
  %55 = alloca i64, align 8
  %56 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %54, align 8
  store i64 %1, i64* %55, align 8
  store %"class.std::allocator.16"* %2, %"class.std::allocator.16"** %56, align 8
  %57 = load %"class.std::map.19"*, %"class.std::map.19"** %54, align 8
  %58 = load i64, i64* %55, align 8
  %59 = call %"class.std::map.19"* @_ZSt25__uninitialized_default_nIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEmET_SA_T0_(%"class.std::map.19"* %57, i64 %58)
  store i32 -1130641236, i32* %17
  br label %60

; <label>:60:                                     ; preds = %53, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %2, align 8
  %3 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %4 to %"class.std::allocator.16"*
  ret %"class.std::allocator.16"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map.19"* @_ZSt25__uninitialized_default_nIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEmET_SA_T0_(%"class.std::map.19"*, i64) #0 comdat {
  %3 = alloca %"class.std::map.19"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.644
  %7 = load i32, i32* @y.645
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -10317437, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -10317437, label %19
    i32 272715568, label %39
    i32 2029161516, label %73
    i32 -1624905880, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 272715568, i32 -1624905880
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::map.19"*, align 8
  %41 = alloca i64, align 8
  %42 = alloca i8, align 1
  store %"class.std::map.19"* %0, %"class.std::map.19"** %40, align 8
  store i64 %1, i64* %41, align 8
  store i8 1, i8* %42, align 1
  %43 = load %"class.std::map.19"*, %"class.std::map.19"** %40, align 8
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::map.19"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3mapIxSt4pairIxbESt4lessIxESaIS3_IKxS4_EEEmEET_SC_T0_(%"class.std::map.19"* %43, i64 %44)
  store %"class.std::map.19"* %45, %"class.std::map.19"** %3
  %46 = load i32, i32* @x.644
  %47 = load i32, i32* @y.645
  %48 = sub i32 %46, 640204245
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 640204245
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 2029161516, i32 -1624905880
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile %"class.std::map.19"*, %"class.std::map.19"** %3
  ret %"class.std::map.19"* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::map.19"*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8, align 1
  store %"class.std::map.19"* %0, %"class.std::map.19"** %76, align 8
  store i64 %1, i64* %77, align 8
  store i8 1, i8* %78, align 1
  %79 = load %"class.std::map.19"*, %"class.std::map.19"** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call %"class.std::map.19"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3mapIxSt4pairIxbESt4lessIxESaIS3_IKxS4_EEEmEET_SC_T0_(%"class.std::map.19"* %79, i64 %80)
  store i32 272715568, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map.19"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3mapIxSt4pairIxbESt4lessIxESaIS3_IKxS4_EEEmEET_SC_T0_(%"class.std::map.19"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::map.19"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::map.19"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::map.19"* %0, %"class.std::map.19"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::map.19"*, %"class.std::map.19"** %3, align 8
  store %"class.std::map.19"* %8, %"class.std::map.19"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %16, %2
  %10 = load i64, i64* %4, align 8
  %11 = icmp ugt i64 %10, 0
  br i1 %11, label %12, label %34

; <label>:12:                                     ; preds = %9
  %13 = load %"class.std::map.19"*, %"class.std::map.19"** %5, align 8
  %14 = call %"class.std::map.19"* @_ZSt11__addressofISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEPT_RS9_(%"class.std::map.19"* dereferenceable(48) %13) #3
  invoke void @_ZSt10_ConstructISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEJEEvPT_DpOT0_(%"class.std::map.19"* %14)
          to label %15 unwind label %24

; <label>:15:                                     ; preds = %12
  br label %16

; <label>:16:                                     ; preds = %15
  %17 = load i64, i64* %4, align 8
  %18 = sub i64 %17, -5514446394444654117
  %19 = add i64 %18, -1
  %20 = add i64 %19, -5514446394444654117
  %21 = add i64 %17, -1
  store i64 %20, i64* %4, align 8
  %22 = load %"class.std::map.19"*, %"class.std::map.19"** %5, align 8
  %23 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %22, i32 1
  store %"class.std::map.19"* %23, %"class.std::map.19"** %5, align 8
  br label %9

; <label>:24:                                     ; preds = %12
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %6, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %7, align 4
  br label %28

; <label>:28:                                     ; preds = %24
  %29 = load i8*, i8** %6, align 8
  %30 = call i8* @__cxa_begin_catch(i8* %29) #3
  %31 = load %"class.std::map.19"*, %"class.std::map.19"** %3, align 8
  %32 = load %"class.std::map.19"*, %"class.std::map.19"** %5, align 8
  invoke void @_ZSt8_DestroyIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEvT_SA_(%"class.std::map.19"* %31, %"class.std::map.19"* %32)
          to label %33 unwind label %36

; <label>:33:                                     ; preds = %28
  invoke void @__cxa_rethrow() #14
          to label %50 unwind label %36

; <label>:34:                                     ; preds = %9
  %35 = load %"class.std::map.19"*, %"class.std::map.19"** %5, align 8
  ret %"class.std::map.19"* %35

; <label>:36:                                     ; preds = %33, %28
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %6, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %7, align 4
  invoke void @__cxa_end_catch()
          to label %40 unwind label %47

; <label>:40:                                     ; preds = %36
  br label %42
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:42:                                     ; preds = %40
  %43 = load i8*, i8** %6, align 8
  %44 = load i32, i32* %7, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

; <label>:47:                                     ; preds = %36
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #11
  unreachable

; <label>:50:                                     ; preds = %33
  %51 = load i32, i32* @x.646
  %52 = load i32, i32* @y.647
  %53 = add i32 %51, -1320067926
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1320067926
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %93

; <label>:77:                                     ; preds = %50, %93
  %78 = load i32, i32* @x.646
  %79 = load i32, i32* @y.647
  %80 = sub i32 %78, -332095857
  %81 = sub i32 %80, 1
  %82 = add i32 %81, -332095857
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %93

; <label>:92:                                     ; preds = %77
  unreachable

; <label>:93:                                     ; preds = %77, %50
  br label %77
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEJEEvPT_DpOT0_(%"class.std::map.19"*) #4 comdat {
  %2 = alloca %"class.std::map.19"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %2, align 8
  %3 = load %"class.std::map.19"*, %"class.std::map.19"** %2, align 8
  %4 = bitcast %"class.std::map.19"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::map.19"*
  call void @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEC2Ev(%"class.std::map.19"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::map.19"* @_ZSt11__addressofISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEPT_RS9_(%"class.std::map.19"* dereferenceable(48)) #4 comdat {
  %2 = alloca %"class.std::map.19"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %2, align 8
  %3 = load %"class.std::map.19"*, %"class.std::map.19"** %2, align 8
  %4 = bitcast %"class.std::map.19"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::map.19"*
  ret %"class.std::map.19"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEvT_SA_(%"class.std::map.19"*, %"class.std::map.19"*) #0 comdat {
  %3 = alloca %"class.std::map.19"*, align 8
  %4 = alloca %"class.std::map.19"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %3, align 8
  store %"class.std::map.19"* %1, %"class.std::map.19"** %4, align 8
  %5 = load %"class.std::map.19"*, %"class.std::map.19"** %3, align 8
  %6 = load %"class.std::map.19"*, %"class.std::map.19"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3mapIxSt4pairIxbESt4lessIxESaIS3_IKxS4_EEEEEvT_SC_(%"class.std::map.19"* %5, %"class.std::map.19"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEEC2Ev(%"class.std::map.19"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::map.19"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %2, align 8
  %3 = load %"class.std::map.19"*, %"class.std::map.19"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EEC2Ev(%"class.std::_Rb_tree.20"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.654
  %8 = load i32, i32* @y.655
  %9 = sub i32 %7, 59505173
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 59505173
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = xor i1 %15, true
  %18 = xor i1 %16, true
  %19 = xor i1 true, true
  %20 = and i1 %17, true
  %21 = and i1 %15, %19
  %22 = and i1 %18, true
  %23 = and i1 %16, %19
  %24 = or i1 %20, %21
  %25 = or i1 %22, %23
  %26 = xor i1 %24, %25
  %27 = or i1 %17, %18
  %28 = xor i1 %27, true
  %29 = or i1 true, %19
  %30 = and i1 %28, %29
  %31 = or i1 %26, %30
  %32 = or i1 %15, %16
  br i1 %31, label %33, label %62

; <label>:33:                                     ; preds = %6, %62
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  call void @__clang_call_terminate(i8* %35) #11
  %36 = load i32, i32* @x.654
  %37 = load i32, i32* @y.655
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %62

; <label>:61:                                     ; preds = %33
  unreachable

; <label>:62:                                     ; preds = %33, %6
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #11
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EEC2Ev(%"class.std::_Rb_tree.20"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %2, align 8
  %3 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.658
  %3 = load i32, i32* @y.659
  %4 = sub i32 %2, -528066498
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -528066498
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %64

; <label>:28:                                     ; preds = %1, %64
  %29 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %29, align 8
  %32 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %29, align 8
  %33 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %32 to %"class.std::allocator.21"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEEC2Ev(%"class.std::allocator.21"* %33) #3
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %32, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %32, i32 0, i32 1
  %36 = bitcast %"struct.std::_Rb_tree_node_base"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* %36, i8 0, i64 32, i32 8, i1 false)
  %37 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %32, i32 0, i32 2
  store i64 0, i64* %37, align 8
  %38 = load i32, i32* @x.658
  %39 = load i32, i32* @y.659
  %40 = add i32 %38, 67773055
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 67773055
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %64

; <label>:52:                                     ; preds = %28
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %32)
          to label %53 unwind label %54

; <label>:53:                                     ; preds = %52
  ret void

; <label>:54:                                     ; preds = %52
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %30, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %31, align 4
  %58 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %32 to %"class.std::allocator.21"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEED2Ev(%"class.std::allocator.21"* %58) #3
  br label %59

; <label>:59:                                     ; preds = %54
  %60 = load i8*, i8** %30, align 8
  %61 = load i32, i32* %31, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %28, %1
  %65 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, align 8
  %66 = alloca i8*
  %67 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %65, align 8
  %68 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %65, align 8
  %69 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %68 to %"class.std::allocator.21"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEEC2Ev(%"class.std::allocator.21"* %69) #3
  %70 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %68, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %68, i32 0, i32 1
  %72 = bitcast %"struct.std::_Rb_tree_node_base"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* %72, i8 0, i64 32, i32 8, i1 false)
  %73 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %68, i32 0, i32 2
  store i64 0, i64* %73, align 8
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEEC2Ev(%"class.std::allocator.21"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %2, align 8
  %3 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %2, align 8
  %4 = bitcast %"class.std::allocator.21"* %3 to %"class.__gnu_cxx::new_allocator.22"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEEC2Ev(%"class.__gnu_cxx::new_allocator.22"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEEC2Ev(%"class.__gnu_cxx::new_allocator.22"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3mapIxSt4pairIxbESt4lessIxESaIS3_IKxS4_EEEEEvT_SC_(%"class.std::map.19"*, %"class.std::map.19"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::map.19"*, align 8
  %5 = alloca %"class.std::map.19"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %4, align 8
  store %"class.std::map.19"* %1, %"class.std::map.19"** %5, align 8
  %6 = alloca i32
  store i32 -859051618, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %82
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -859051618, label %10
    i32 -1552946581, label %38
    i32 1649638329, label %68
    i32 -1930820267, label %71
    i32 -1150234774, label %74
    i32 222155730, label %77
    i32 477939903, label %78
  ]

; <label>:9:                                      ; preds = %7
  br label %82

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.666
  %12 = load i32, i32* @y.667
  %13 = sub i32 %11, -1485407618
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -1485407618
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1552946581, i32 477939903
  store i32 %37, i32* %6
  br label %82

; <label>:38:                                     ; preds = %7
  %39 = load %"class.std::map.19"*, %"class.std::map.19"** %4, align 8
  %40 = load %"class.std::map.19"*, %"class.std::map.19"** %5, align 8
  %41 = icmp ne %"class.std::map.19"* %39, %40
  store i1 %41, i1* %3
  %42 = load i32, i32* @x.666
  %43 = load i32, i32* @y.667
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1649638329, i32 477939903
  store i32 %67, i32* %6
  br label %82

; <label>:68:                                     ; preds = %7
  %69 = load volatile i1, i1* %3
  %70 = select i1 %69, i32 -1930820267, i32 222155730
  store i32 %70, i32* %6
  br label %82

; <label>:71:                                     ; preds = %7
  %72 = load %"class.std::map.19"*, %"class.std::map.19"** %4, align 8
  %73 = call %"class.std::map.19"* @_ZSt11__addressofISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEPT_RS9_(%"class.std::map.19"* dereferenceable(48) %72) #3
  call void @_ZSt8_DestroyISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEvPT_(%"class.std::map.19"* %73)
  store i32 -1150234774, i32* %6
  br label %82

; <label>:74:                                     ; preds = %7
  %75 = load %"class.std::map.19"*, %"class.std::map.19"** %4, align 8
  %76 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %75, i32 1
  store %"class.std::map.19"* %76, %"class.std::map.19"** %4, align 8
  store i32 -859051618, i32* %6
  br label %82

; <label>:77:                                     ; preds = %7
  ret void

; <label>:78:                                     ; preds = %7
  %79 = load %"class.std::map.19"*, %"class.std::map.19"** %4, align 8
  %80 = load %"class.std::map.19"*, %"class.std::map.19"** %5, align 8
  %81 = icmp ne %"class.std::map.19"* %79, %80
  store i32 -1552946581, i32* %6
  br label %82

; <label>:82:                                     ; preds = %78, %74, %71, %68, %38, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEvPT_(%"class.std::map.19"*) #4 comdat {
  %2 = alloca %"class.std::map.19"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %2, align 8
  %3 = load %"class.std::map.19"*, %"class.std::map.19"** %2, align 8
  call void @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEED2Ev(%"class.std::map.19"* %3) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEESaIS8_EE13_M_deallocateEPS8_m(%"struct.std::_Vector_base.15"*, %"class.std::map.19"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::map.19"*
  %5 = alloca %"struct.std::_Vector_base.15"*
  %6 = alloca %"struct.std::_Vector_base.15"*, align 8
  %7 = alloca %"class.std::map.19"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %6, align 8
  store %"class.std::map.19"* %1, %"class.std::map.19"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %6, align 8
  store %"struct.std::_Vector_base.15"* %9, %"struct.std::_Vector_base.15"** %5
  %10 = load %"class.std::map.19"*, %"class.std::map.19"** %7, align 8
  store %"class.std::map.19"* %10, %"class.std::map.19"** %4
  %11 = alloca i32
  store i32 -1122797880, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %74
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1122797880, label %15
    i32 1389066520, label %19
    i32 547545388, label %34
    i32 -1453859909, label %66
    i32 297895421, label %67
    i32 -2066108852, label %68
  ]

; <label>:14:                                     ; preds = %12
  br label %74

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::map.19"*, %"class.std::map.19"** %4
  %17 = icmp ne %"class.std::map.19"* %16, null
  %18 = select i1 %17, i32 1389066520, i32 297895421
  store i32 %18, i32* %11
  br label %74

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.670
  %21 = load i32, i32* @y.671
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 547545388, i32 -2066108852
  store i32 %33, i32* %11
  br label %74

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %36 to %"class.std::allocator.16"*
  %38 = load %"class.std::map.19"*, %"class.std::map.19"** %7, align 8
  %39 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEE10deallocateERS9_PS8_m(%"class.std::allocator.16"* dereferenceable(1) %37, %"class.std::map.19"* %38, i64 %39)
  %40 = load i32, i32* @x.670
  %41 = load i32, i32* @y.671
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1453859909, i32 -2066108852
  store i32 %65, i32* %11
  br label %74

; <label>:66:                                     ; preds = %12
  store i32 297895421, i32* %11
  br label %74

; <label>:67:                                     ; preds = %12
  ret void

; <label>:68:                                     ; preds = %12
  %69 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %5
  %70 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >, std::allocator<std::map<long long, std::pair<long long, bool>, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > > > >::_Vector_impl"* %70 to %"class.std::allocator.16"*
  %72 = load %"class.std::map.19"*, %"class.std::map.19"** %7, align 8
  %73 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEE10deallocateERS9_PS8_m(%"class.std::allocator.16"* dereferenceable(1) %71, %"class.std::map.19"* %72, i64 %73)
  store i32 547545388, i32* %11
  br label %74

; <label>:74:                                     ; preds = %68, %66, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEE10deallocateERS9_PS8_m(%"class.std::allocator.16"* dereferenceable(1), %"class.std::map.19"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.16"*, align 8
  %5 = alloca %"class.std::map.19"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %4, align 8
  store %"class.std::map.19"* %1, %"class.std::map.19"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %4, align 8
  %8 = bitcast %"class.std::allocator.16"* %7 to %"class.__gnu_cxx::new_allocator.17"*
  %9 = load %"class.std::map.19"*, %"class.std::map.19"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEE10deallocateEPS9_m(%"class.__gnu_cxx::new_allocator.17"* %8, %"class.std::map.19"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt4pairIxbESt4lessIxESaIS2_IKxS3_EEEE10deallocateEPS9_m(%"class.__gnu_cxx::new_allocator.17"*, %"class.std::map.19"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.674
  %7 = load i32, i32* @y.675
  %8 = add i32 %6, -1575461747
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1575461747
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1764333064, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1764333064, label %20
    i32 -1607812622, label %40
    i32 -1161253131, label %62
    i32 -1525213672, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1607812622, i32 -1525213672
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %42 = alloca %"class.std::map.19"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %41, align 8
  store %"class.std::map.19"* %1, %"class.std::map.19"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %41, align 8
  %45 = load %"class.std::map.19"*, %"class.std::map.19"** %42, align 8
  %46 = bitcast %"class.std::map.19"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.674
  %48 = load i32, i32* @y.675
  %49 = add i32 %47, -1915821335
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1915821335
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1161253131, i32 -1525213672
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %65 = alloca %"class.std::map.19"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %64, align 8
  store %"class.std::map.19"* %1, %"class.std::map.19"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %64, align 8
  %68 = load %"class.std::map.19"*, %"class.std::map.19"** %65, align 8
  %69 = bitcast %"class.std::map.19"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -1607812622, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEES8_EvT_SA_RSaIT0_E(%"class.std::map.19"*, %"class.std::map.19"*, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::map.19"*, align 8
  %5 = alloca %"class.std::map.19"*, align 8
  %6 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %4, align 8
  store %"class.std::map.19"* %1, %"class.std::map.19"** %5, align 8
  store %"class.std::allocator.16"* %2, %"class.std::allocator.16"** %6, align 8
  %7 = load %"class.std::map.19"*, %"class.std::map.19"** %4, align 8
  %8 = load %"class.std::map.19"*, %"class.std::map.19"** %5, align 8
  call void @_ZSt8_DestroyIPSt3mapIxSt4pairIxbESt4lessIxESaIS1_IKxS2_EEEEvT_SA_(%"class.std::map.19"* %7, %"class.std::map.19"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE11lower_boundERS4_(%"class.std::map.19"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %4 = alloca %"class.std::map.19"*, align 8
  %5 = alloca i64*, align 8
  store %"class.std::map.19"* %0, %"class.std::map.19"** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load %"class.std::map.19"*, %"class.std::map.19"** %4, align 8
  %7 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %6, i32 0, i32 0
  %8 = load i64*, i64** %5, align 8
  %9 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11lower_boundERS1_(%"class.std::_Rb_tree.20"* %7, i64* dereferenceable(8) %8)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  ret %"struct.std::_Rb_tree_node_base"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEeqERKS4_(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.680
  %7 = load i32, i32* @y.681
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1384466631, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1384466631, label %19
    i32 -1243928363, label %27
    i32 1696884088, label %64
    i32 118135052, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1243928363, i32 118135052
  store i32 %26, i32* %15
  br label %76

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %29 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %28, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %29, align 8
  %30 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %29, align 8
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %33, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::_Rb_tree_node_base"* %32, %35
  store i1 %36, i1* %3
  %37 = load i32, i32* @x.680
  %38 = load i32, i32* @y.681
  %39 = sub i32 %37, -1327050
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1327050
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1696884088, i32 118135052
  store i32 %63, i32* %15
  br label %76

; <label>:64:                                     ; preds = %16
  %65 = load volatile i1, i1* %3
  ret i1 %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %68 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %67, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %68, align 8
  %69 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %67, align 8
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %69, i32 0, i32 0
  %71 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %70, align 8
  %72 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %68, align 8
  %73 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %72, i32 0, i32 0
  %74 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %75 = icmp eq %"struct.std::_Rb_tree_node_base"* %71, %74
  store i32 -1243928363, i32* %15
  br label %76

; <label>:76:                                     ; preds = %66, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNKSt3mapIxSt4pairIxbESt4lessIxESaIS0_IKxS1_EEE8key_compEv(%"class.std::map.19"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"class.std::map.19"*, align 8
  %4 = alloca %"struct.std::less", align 1
  store %"class.std::map.19"* %0, %"class.std::map.19"** %3, align 8
  %5 = load %"class.std::map.19"*, %"class.std::map.19"** %3, align 8
  %6 = getelementptr inbounds %"class.std::map.19", %"class.std::map.19"* %5, i32 0, i32 0
  call void @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8key_compEv(%"class.std::_Rb_tree.20"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.std::pair.26"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEdeEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.28"*
  %7 = invoke %"struct.std::pair.26"* @_ZNSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.28"* %6)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret %"struct.std::pair.26"* %7

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESE_IJEEEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EDpOT_(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator.37", align 8
  %8 = alloca %"class.std::_Rb_tree.20"*, align 8
  %9 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %10 = alloca %"class.std::tuple.34"*, align 8
  %11 = alloca %"class.std::tuple.31"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %13 = alloca %"struct.std::pair.32", align 8
  %14 = alloca %"struct.std::_Rb_tree_const_iterator.37", align 8
  %15 = alloca i8*
  %16 = alloca i32
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.37", %"struct.std::_Rb_tree_const_iterator.37"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %17, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %8, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %9, align 8
  store %"class.std::tuple.34"* %3, %"class.std::tuple.34"** %10, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %11, align 8
  %18 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %8, align 8
  %19 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %9, align 8
  %20 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %19) #3
  %21 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %10, align 8
  %22 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %21) #3
  %23 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %11, align 8
  %24 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %23) #3
  %25 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESE_IJEEEEEPSt13_Rb_tree_nodeIS3_EDpOT_(%"class.std::_Rb_tree.20"* %18, %"struct.std::piecewise_construct_t"* dereferenceable(1) %20, %"class.std::tuple.34"* dereferenceable(8) %22, %"class.std::tuple.31"* dereferenceable(1) %24)
  store %"struct.std::_Rb_tree_node.28"* %25, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %26 = bitcast %"struct.std::_Rb_tree_const_iterator.37"* %14 to i8*
  %27 = bitcast %"struct.std::_Rb_tree_const_iterator.37"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %29 = invoke dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E(%"struct.std::_Rb_tree_node.28"* %28)
          to label %30 unwind label %94

; <label>:30:                                     ; preds = %5
  %31 = load i32, i32* @x.686
  %32 = load i32, i32* @y.687
  %33 = add i32 %31, -625665605
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -625665605
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %126

; <label>:45:                                     ; preds = %30, %126
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.37", %"struct.std::_Rb_tree_const_iterator.37"* %14, i32 0, i32 0
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %46, align 8
  %48 = load i32, i32* @x.686
  %49 = load i32, i32* @y.687
  %50 = sub i32 %48, -960964332
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -960964332
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %126

; <label>:74:                                     ; preds = %45
  %75 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_(%"class.std::_Rb_tree.20"* %18, %"struct.std::_Rb_tree_node_base"* %47, i64* dereferenceable(8) %29)
          to label %76 unwind label %94

; <label>:76:                                     ; preds = %74
  %77 = bitcast %"struct.std::pair.32"* %13 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %78 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %77, i32 0, i32 0
  %79 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %75, 0
  store %"struct.std::_Rb_tree_node_base"* %79, %"struct.std::_Rb_tree_node_base"** %78, align 8
  %80 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %77, i32 0, i32 1
  %81 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %75, 1
  store %"struct.std::_Rb_tree_node_base"* %81, %"struct.std::_Rb_tree_node_base"** %80, align 8
  %82 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %13, i32 0, i32 1
  %83 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %82, align 8
  %84 = icmp ne %"struct.std::_Rb_tree_node_base"* %83, null
  br i1 %84, label %85, label %102

; <label>:85:                                     ; preds = %76
  %86 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %13, i32 0, i32 0
  %87 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %86, align 8
  %88 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %13, i32 0, i32 1
  %89 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %88, align 8
  %90 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %91 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSB_PSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"* %18, %"struct.std::_Rb_tree_node_base"* %87, %"struct.std::_Rb_tree_node_base"* %89, %"struct.std::_Rb_tree_node.28"* %90)
          to label %92 unwind label %94

; <label>:92:                                     ; preds = %85
  %93 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %91, %"struct.std::_Rb_tree_node_base"** %93, align 8
  br label %114

; <label>:94:                                     ; preds = %85, %74, %5
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %15, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %16, align 4
  br label %98

; <label>:98:                                     ; preds = %94
  %99 = load i8*, i8** %15, align 8
  %100 = call i8* @__cxa_begin_catch(i8* %99) #3
  %101 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"* %18, %"struct.std::_Rb_tree_node.28"* %101) #3
  invoke void @__cxa_rethrow() #14
          to label %125 unwind label %108

; <label>:102:                                    ; preds = %76
  %103 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"* %18, %"struct.std::_Rb_tree_node.28"* %103) #3
  %104 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %13, i32 0, i32 0
  %105 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %104, align 8
  %106 = bitcast %"struct.std::_Rb_tree_node_base"* %105 to %"struct.std::_Rb_tree_node.28"*
  %107 = bitcast %"struct.std::_Rb_tree_node.28"* %106 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %6, %"struct.std::_Rb_tree_node_base"* %107) #3
  br label %114

; <label>:108:                                    ; preds = %98
  %109 = landingpad { i8*, i32 }
          cleanup
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %15, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %16, align 4
  invoke void @__cxa_end_catch()
          to label %112 unwind label %122

; <label>:112:                                    ; preds = %108
  br label %117
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:114:                                    ; preds = %102, %92
  %115 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  %116 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %115, align 8
  ret %"struct.std::_Rb_tree_node_base"* %116

; <label>:117:                                    ; preds = %112
  %118 = load i8*, i8** %15, align 8
  %119 = load i32, i32* %16, align 4
  %120 = insertvalue { i8*, i32 } undef, i8* %118, 0
  %121 = insertvalue { i8*, i32 } %120, i32 %119, 1
  resume { i8*, i32 } %121

; <label>:122:                                    ; preds = %108
  %123 = landingpad { i8*, i32 }
          catch i8* null
  %124 = extractvalue { i8*, i32 } %123, 0
  call void @__clang_call_terminate(i8* %124) #11
  unreachable

; <label>:125:                                    ; preds = %98
  unreachable

; <label>:126:                                    ; preds = %45, %30
  %127 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.37", %"struct.std::_Rb_tree_const_iterator.37"* %14, i32 0, i32 0
  %128 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %127, align 8
  br label %45
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxS0_IxbEEEC2ERKSt17_Rb_tree_iteratorIS3_E(%"struct.std::_Rb_tree_const_iterator.37"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.688
  %6 = load i32, i32* @y.689
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1898741594, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %57
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1898741594, label %18
    i32 1654938088, label %26
    i32 74451534, label %48
    i32 787497686, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %57

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1654938088, i32 787497686
  store i32 %25, i32* %14
  br label %57

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree_const_iterator.37"*, align 8
  %28 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.37"* %0, %"struct.std::_Rb_tree_const_iterator.37"** %27, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_const_iterator.37"*, %"struct.std::_Rb_tree_const_iterator.37"** %27, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.37", %"struct.std::_Rb_tree_const_iterator.37"* %29, i32 0, i32 0
  %31 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %31, i32 0, i32 0
  %33 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %32, align 8
  store %"struct.std::_Rb_tree_node_base"* %33, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %34 = load i32, i32* @x.688
  %35 = load i32, i32* @y.689
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 74451534, i32 787497686
  store i32 %47, i32* %14
  br label %57

; <label>:48:                                     ; preds = %15
  ret void

; <label>:49:                                     ; preds = %15
  %50 = alloca %"struct.std::_Rb_tree_const_iterator.37"*, align 8
  %51 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.37"* %0, %"struct.std::_Rb_tree_const_iterator.37"** %50, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %51, align 8
  %52 = load %"struct.std::_Rb_tree_const_iterator.37"*, %"struct.std::_Rb_tree_const_iterator.37"** %50, align 8
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.37", %"struct.std::_Rb_tree_const_iterator.37"* %52, i32 0, i32 0
  %54 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %51, align 8
  %55 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %54, i32 0, i32 0
  %56 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %55, align 8
  store %"struct.std::_Rb_tree_node_base"* %56, %"struct.std::_Rb_tree_node_base"** %53, align 8
  store i32 1654938088, i32* %14
  br label %57

; <label>:57:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11lower_boundERS1_(%"class.std::_Rb_tree.20"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %4 = alloca %"class.std::_Rb_tree.20"*, align 8
  %5 = alloca i64*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %4, align 8
  %7 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_beginEv(%"class.std::_Rb_tree.20"* %6) #3
  %8 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_M_endEv(%"class.std::_Rb_tree.20"* %6) #3
  %9 = load i64*, i64** %5, align 8
  %10 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS3_ESC_RS1_(%"class.std::_Rb_tree.20"* %6, %"struct.std::_Rb_tree_node.28"* %7, %"struct.std::_Rb_tree_node.28"* %8, i64* dereferenceable(8) %9)
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %10, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret %"struct.std::_Rb_tree_node_base"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS3_ESC_RS1_(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree.20"*
  %7 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %8 = alloca %"class.std::_Rb_tree.20"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %11 = alloca i64*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %8, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %9, align 8
  store %"struct.std::_Rb_tree_node.28"* %2, %"struct.std::_Rb_tree_node.28"** %10, align 8
  store i64* %3, i64** %11, align 8
  %12 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %8, align 8
  store %"class.std::_Rb_tree.20"* %12, %"class.std::_Rb_tree.20"** %6
  %13 = alloca i32
  store i32 1533116099, i32* %13
  br label %14

; <label>:14:                                     ; preds = %4, %97
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1533116099, label %17
    i32 273376225, label %21
    i32 -832570262, label %49
    i32 268664488, label %71
    i32 -686332084, label %74
    i32 -243898294, label %79
    i32 -1264888771, label %83
    i32 -677752248, label %84
    i32 1440925487, label %89
  ]

; <label>:16:                                     ; preds = %14
  br label %97

; <label>:17:                                     ; preds = %14
  %18 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  %19 = icmp ne %"struct.std::_Rb_tree_node.28"* %18, null
  %20 = select i1 %19, i32 273376225, i32 -677752248
  store i32 %20, i32* %13
  br label %97

; <label>:21:                                     ; preds = %14
  %22 = load i32, i32* @x.692
  %23 = load i32, i32* @y.693
  %24 = sub i32 %22, 758747811
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 758747811
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -832570262, i32 1440925487
  store i32 %48, i32* %13
  br label %97

; <label>:49:                                     ; preds = %14
  %50 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %6
  %51 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %51, i32 0, i32 0
  %53 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  %54 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E(%"struct.std::_Rb_tree_node.28"* %53)
  %55 = load i64*, i64** %11, align 8
  %56 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %52, i64* dereferenceable(8) %54, i64* dereferenceable(8) %55)
  store i1 %56, i1* %5
  %57 = load i32, i32* @x.692
  %58 = load i32, i32* @y.693
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 268664488, i32 1440925487
  store i32 %70, i32* %13
  br label %97

; <label>:71:                                     ; preds = %14
  %72 = load volatile i1, i1* %5
  %73 = select i1 %72, i32 -243898294, i32 -686332084
  store i32 %73, i32* %13
  br label %97

; <label>:74:                                     ; preds = %14
  %75 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  store %"struct.std::_Rb_tree_node.28"* %75, %"struct.std::_Rb_tree_node.28"** %10, align 8
  %76 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  %77 = bitcast %"struct.std::_Rb_tree_node.28"* %76 to %"struct.std::_Rb_tree_node_base"*
  %78 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %77) #3
  store %"struct.std::_Rb_tree_node.28"* %78, %"struct.std::_Rb_tree_node.28"** %9, align 8
  store i32 -1264888771, i32* %13
  br label %97

; <label>:79:                                     ; preds = %14
  %80 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  %81 = bitcast %"struct.std::_Rb_tree_node.28"* %80 to %"struct.std::_Rb_tree_node_base"*
  %82 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %81) #3
  store %"struct.std::_Rb_tree_node.28"* %82, %"struct.std::_Rb_tree_node.28"** %9, align 8
  store i32 -1264888771, i32* %13
  br label %97

; <label>:83:                                     ; preds = %14
  store i32 1533116099, i32* %13
  br label %97

; <label>:84:                                     ; preds = %14
  %85 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %10, align 8
  %86 = bitcast %"struct.std::_Rb_tree_node.28"* %85 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %7, %"struct.std::_Rb_tree_node_base"* %86) #3
  %87 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  %88 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %87, align 8
  ret %"struct.std::_Rb_tree_node_base"* %88

; <label>:89:                                     ; preds = %14
  %90 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %6
  %91 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %91, i32 0, i32 0
  %93 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  %94 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E(%"struct.std::_Rb_tree_node.28"* %93)
  %95 = load i64*, i64** %11, align 8
  %96 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %92, i64* dereferenceable(8) %94, i64* dereferenceable(8) %95)
  store i32 -832570262, i32* %13
  br label %97

; <label>:97:                                     ; preds = %89, %83, %79, %74, %71, %49, %21, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_M_endEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %2, align 8
  %3 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.28"*
  ret %"struct.std::_Rb_tree_node.28"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E(%"struct.std::_Rb_tree_node.28"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %3 = alloca %"struct.std::_Select1st.38", align 1
  store %"struct.std::_Rb_tree_node.28"* %0, %"struct.std::_Rb_tree_node.28"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %2, align 8
  %5 = call dereferenceable(24) %"struct.std::pair.26"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_valueEPKSt13_Rb_tree_nodeIS3_E(%"struct.std::_Rb_tree_node.28"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxS0_IxbEEEclERKS3_(%"struct.std::_Select1st.38"* %3, %"struct.std::pair.26"* dereferenceable(24) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxS0_IxbEEEclERKS3_(%"struct.std::_Select1st.38"*, %"struct.std::pair.26"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.700
  %7 = load i32, i32* @y.701
  %8 = sub i32 %6, 1547894846
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1547894846
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1607129697, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %57
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1607129697, label %20
    i32 -980631043, label %28
    i32 -888375489, label %49
    i32 -1366081601, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %57

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -980631043, i32 -1366081601
  store i32 %27, i32* %16
  br label %57

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Select1st.38"*, align 8
  %30 = alloca %"struct.std::pair.26"*, align 8
  store %"struct.std::_Select1st.38"* %0, %"struct.std::_Select1st.38"** %29, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %30, align 8
  %31 = load %"struct.std::_Select1st.38"*, %"struct.std::_Select1st.38"** %29, align 8
  %32 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %30, align 8
  %33 = getelementptr inbounds %"struct.std::pair.26", %"struct.std::pair.26"* %32, i32 0, i32 0
  store i64* %33, i64** %3
  %34 = load i32, i32* @x.700
  %35 = load i32, i32* @y.701
  %36 = add i32 %34, -1842441414
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1842441414
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -888375489, i32 -1366081601
  store i32 %48, i32* %16
  br label %57

; <label>:49:                                     ; preds = %17
  %50 = load volatile i64*, i64** %3
  ret i64* %50

; <label>:51:                                     ; preds = %17
  %52 = alloca %"struct.std::_Select1st.38"*, align 8
  %53 = alloca %"struct.std::pair.26"*, align 8
  store %"struct.std::_Select1st.38"* %0, %"struct.std::_Select1st.38"** %52, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %53, align 8
  %54 = load %"struct.std::_Select1st.38"*, %"struct.std::_Select1st.38"** %52, align 8
  %55 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %53, align 8
  %56 = getelementptr inbounds %"struct.std::pair.26", %"struct.std::pair.26"* %55, i32 0, i32 0
  store i32 -980631043, i32* %16
  br label %57

; <label>:57:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"struct.std::pair.26"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_valueEPKSt13_Rb_tree_nodeIS3_E(%"struct.std::_Rb_tree_node.28"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"struct.std::_Rb_tree_node.28"* %0, %"struct.std::_Rb_tree_node.28"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %2, align 8
  %4 = call %"struct.std::pair.26"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.28"* %3)
  ret %"struct.std::pair.26"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.26"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.28"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"struct.std::_Rb_tree_node.28"* %0, %"struct.std::_Rb_tree_node.28"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", %"struct.std::_Rb_tree_node.28"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.26"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.29"* %4) #3
  ret %"struct.std::pair.26"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.26"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.29"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.29"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.29"* %0, %"struct.__gnu_cxx::__aligned_membuf.29"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.29"*, %"struct.__gnu_cxx::__aligned_membuf.29"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.29"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.26"*
  ret %"struct.std::pair.26"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxS1_IxbEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.29"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.29"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.29"* %0, %"struct.__gnu_cxx::__aligned_membuf.29"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.29"*, %"struct.__gnu_cxx::__aligned_membuf.29"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.29", %"struct.__gnu_cxx::__aligned_membuf.29"* %3, i32 0, i32 0
  %5 = bitcast [24 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8key_compEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.710
  %5 = load i32, i32* @y.711
  %6 = sub i32 %4, -110402591
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -110402591
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1098108244, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1098108244, label %18
    i32 -1345100510, label %26
    i32 -71511586, label %46
    i32 88541911, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1345100510, i32 88541911
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::less", align 1
  %28 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %28, align 8
  %29 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %30, i32 0, i32 0
  %32 = load i32, i32* @x.710
  %33 = load i32, i32* @y.711
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -71511586, i32 88541911
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca %"struct.std::less", align 1
  %49 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %49, align 8
  %50 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %49, align 8
  %51 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %51, i32 0, i32 0
  store i32 -1345100510, i32* %14
  br label %53

; <label>:53:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESE_IJEEEEEPSt13_Rb_tree_nodeIS3_EDpOT_(%"class.std::_Rb_tree.20"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca %"struct.std::_Rb_tree_node.28"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.712
  %9 = load i32, i32* @y.713
  %10 = sub i32 %8, 1120611137
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1120611137
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1773739622, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %91
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1773739622, label %22
    i32 270291086, label %30
    i32 1531269108, label %73
    i32 -1080122340, label %75
  ]

; <label>:21:                                     ; preds = %19
  br label %91

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 270291086, i32 -1080122340
  store i32 %29, i32* %18
  br label %91

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::_Rb_tree.20"*, align 8
  %32 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %33 = alloca %"class.std::tuple.34"*, align 8
  %34 = alloca %"class.std::tuple.31"*, align 8
  %35 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %31, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %32, align 8
  store %"class.std::tuple.34"* %2, %"class.std::tuple.34"** %33, align 8
  store %"class.std::tuple.31"* %3, %"class.std::tuple.31"** %34, align 8
  %36 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %31, align 8
  %37 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_get_nodeEv(%"class.std::_Rb_tree.20"* %36)
  store %"struct.std::_Rb_tree_node.28"* %37, %"struct.std::_Rb_tree_node.28"** %35, align 8
  %38 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %35, align 8
  %39 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %32, align 8
  %40 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %39) #3
  %41 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %33, align 8
  %42 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %41) #3
  %43 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %34, align 8
  %44 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %43) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESE_IJEEEEEvPSt13_Rb_tree_nodeIS3_EDpOT_(%"class.std::_Rb_tree.20"* %36, %"struct.std::_Rb_tree_node.28"* %38, %"struct.std::piecewise_construct_t"* dereferenceable(1) %40, %"class.std::tuple.34"* dereferenceable(8) %42, %"class.std::tuple.31"* dereferenceable(1) %44)
  %45 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %35, align 8
  store %"struct.std::_Rb_tree_node.28"* %45, %"struct.std::_Rb_tree_node.28"** %5
  %46 = load i32, i32* @x.712
  %47 = load i32, i32* @y.713
  %48 = sub i32 %46, -465576852
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -465576852
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1531269108, i32 -1080122340
  store i32 %72, i32* %18
  br label %91

; <label>:73:                                     ; preds = %19
  %74 = load volatile %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %5
  ret %"struct.std::_Rb_tree_node.28"* %74

; <label>:75:                                     ; preds = %19
  %76 = alloca %"class.std::_Rb_tree.20"*, align 8
  %77 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %78 = alloca %"class.std::tuple.34"*, align 8
  %79 = alloca %"class.std::tuple.31"*, align 8
  %80 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %76, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %77, align 8
  store %"class.std::tuple.34"* %2, %"class.std::tuple.34"** %78, align 8
  store %"class.std::tuple.31"* %3, %"class.std::tuple.31"** %79, align 8
  %81 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %76, align 8
  %82 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_get_nodeEv(%"class.std::_Rb_tree.20"* %81)
  store %"struct.std::_Rb_tree_node.28"* %82, %"struct.std::_Rb_tree_node.28"** %80, align 8
  %83 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %80, align 8
  %84 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %77, align 8
  %85 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %84) #3
  %86 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %78, align 8
  %87 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %86) #3
  %88 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %79, align 8
  %89 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %88) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESE_IJEEEEEvPSt13_Rb_tree_nodeIS3_EDpOT_(%"class.std::_Rb_tree.20"* %81, %"struct.std::_Rb_tree_node.28"* %83, %"struct.std::piecewise_construct_t"* dereferenceable(1) %85, %"class.std::tuple.34"* dereferenceable(8) %87, %"class.std::tuple.31"* dereferenceable(1) %89)
  %90 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %80, align 8
  store i32 270291086, i32* %18
  br label %91

; <label>:91:                                     ; preds = %75, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca %"class.std::_Rb_tree.20"*
  %10 = alloca %"struct.std::_Rb_tree_node_base"**
  %11 = alloca %"struct.std::_Rb_tree_node_base"**
  %12 = alloca %"struct.std::_Rb_tree_node_base"**
  %13 = alloca %"struct.std::_Rb_tree_iterator"*
  %14 = alloca %"struct.std::_Rb_tree_node_base"**
  %15 = alloca %"struct.std::_Rb_tree_iterator"*
  %16 = alloca %"struct.std::_Rb_tree_node_base"**
  %17 = alloca %"struct.std::_Rb_tree_iterator"*
  %18 = alloca i64**
  %19 = alloca %"struct.std::pair.32"*
  %20 = alloca i1
  %21 = alloca i1
  %22 = load i32, i32* @x.714
  %23 = load i32, i32* @y.715
  %24 = add i32 %22, -312971681
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -312971681
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  store i1 %30, i1* %21
  %31 = icmp slt i32 %23, 10
  store i1 %31, i1* %20
  %32 = alloca i32
  store i32 1482475185, i32* %32
  br label %33

; <label>:33:                                     ; preds = %3, %614
  %34 = load i32, i32* %32
  switch i32 %34, label %35 [
    i32 1482475185, label %36
    i32 2107995154, label %44
    i32 -64040997, label %85
    i32 -204160805, label %88
    i32 -493117103, label %93
    i32 8843412, label %109
    i32 -1829693465, label %134
    i32 -194130298, label %137
    i32 -1706984190, label %143
    i32 -1417927856, label %170
    i32 -83560201, label %207
    i32 432856295, label %208
    i32 533653184, label %235
    i32 -1427976033, label %261
    i32 1856759261, label %264
    i32 -557550277, label %277
    i32 -1639021602, label %283
    i32 -1654217784, label %296
    i32 -32331860, label %323
    i32 1139461627, label %344
    i32 398749120, label %347
    i32 1223522107, label %353
    i32 -1022479064, label %359
    i32 1725002072, label %370
    i32 -1521294112, label %382
    i32 2066676007, label %395
    i32 -1679031406, label %401
    i32 -1818584828, label %414
    i32 -1812839531, label %421
    i32 920216096, label %437
    i32 -2032611823, label %470
    i32 -1660315107, label %471
    i32 -1300216335, label %477
    i32 -576709049, label %488
    i32 -161916280, label %494
    i32 -446145149, label %522
    i32 2077069086, label %541
    i32 -1319401429, label %543
    i32 296609359, label %565
    i32 -1909228879, label %576
    i32 1223587064, label %587
    i32 -2003067141, label %598
    i32 16499854, label %604
    i32 -2130224322, label %610
  ]

; <label>:35:                                     ; preds = %33
  br label %614

; <label>:36:                                     ; preds = %33
  %37 = load volatile i1, i1* %21
  %38 = load volatile i1, i1* %20
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 2107995154, i32 -1319401429
  store i32 %43, i32* %32
  br label %614

; <label>:44:                                     ; preds = %33
  %45 = alloca %"struct.std::pair.32", align 8
  store %"struct.std::pair.32"* %45, %"struct.std::pair.32"** %19
  %46 = alloca %"struct.std::_Rb_tree_const_iterator.37", align 8
  %47 = alloca %"class.std::_Rb_tree.20"*, align 8
  %48 = alloca i64*, align 8
  store i64** %48, i64*** %18
  %49 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %49, %"struct.std::_Rb_tree_iterator"** %17
  %50 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %50, %"struct.std::_Rb_tree_node_base"*** %16
  %51 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %51, %"struct.std::_Rb_tree_iterator"** %15
  %52 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %52, %"struct.std::_Rb_tree_node_base"*** %14
  %53 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %53, %"struct.std::_Rb_tree_iterator"** %13
  %54 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %54, %"struct.std::_Rb_tree_node_base"*** %12
  %55 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %55, %"struct.std::_Rb_tree_node_base"*** %11
  %56 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %56, %"struct.std::_Rb_tree_node_base"*** %10
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.37", %"struct.std::_Rb_tree_const_iterator.37"* %46, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %57, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %47, align 8
  %58 = load volatile i64**, i64*** %18
  store i64* %2, i64** %58, align 8
  %59 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %47, align 8
  store %"class.std::_Rb_tree.20"* %59, %"class.std::_Rb_tree.20"** %9
  %60 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxS0_IxbEEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.37"* %46) #3
  %61 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %62 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %61, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %60, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %63 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %63, i32 0, i32 0
  %65 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %66 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %67 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_M_endEv(%"class.std::_Rb_tree.20"* %66) #3
  %68 = bitcast %"struct.std::_Rb_tree_node.28"* %67 to %"struct.std::_Rb_tree_node_base"*
  %69 = icmp eq %"struct.std::_Rb_tree_node_base"* %65, %68
  store i1 %69, i1* %8
  %70 = load i32, i32* @x.714
  %71 = load i32, i32* @y.715
  %72 = sub i32 %70, 480186571
  %73 = sub i32 %72, 1
  %74 = add i32 %73, 480186571
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 -64040997, i32 -1319401429
  store i32 %84, i32* %32
  br label %614

; <label>:85:                                     ; preds = %33
  %86 = load volatile i1, i1* %8
  %87 = select i1 %86, i32 -204160805, i32 432856295
  store i32 %87, i32* %32
  br label %614

; <label>:88:                                     ; preds = %33
  %89 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %90 = call i64 @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE4sizeEv(%"class.std::_Rb_tree.20"* %89) #3
  %91 = icmp ugt i64 %90, 0
  %92 = select i1 %91, i32 -493117103, i32 -1706984190
  store i32 %92, i32* %32
  br label %614

; <label>:93:                                     ; preds = %33
  %94 = load i32, i32* @x.714
  %95 = load i32, i32* @y.715
  %96 = add i32 %94, -2143790176
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -2143790176
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 8843412, i32 296609359
  store i32 %108, i32* %32
  br label %614

; <label>:109:                                    ; preds = %33
  %110 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %111 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %110, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %111, i32 0, i32 0
  %113 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %114 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_rightmostEv(%"class.std::_Rb_tree.20"* %113) #3
  %115 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %114, align 8
  %116 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %115)
  %117 = load volatile i64**, i64*** %18
  %118 = load i64*, i64** %117, align 8
  %119 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %112, i64* dereferenceable(8) %116, i64* dereferenceable(8) %118)
  store i1 %119, i1* %7
  %120 = load i32, i32* @x.714
  %121 = load i32, i32* @y.715
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 -1829693465, i32 296609359
  store i32 %133, i32* %32
  br label %614

; <label>:134:                                    ; preds = %33
  %135 = load volatile i1, i1* %7
  %136 = select i1 %135, i32 -194130298, i32 -1706984190
  store i32 %136, i32* %32
  br label %614

; <label>:137:                                    ; preds = %33
  %138 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %16
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %138, align 8
  %139 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %140 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_rightmostEv(%"class.std::_Rb_tree.20"* %139) #3
  %141 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %142 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %16
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %141, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %142, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %140)
  store i32 -161916280, i32* %32
  br label %614

; <label>:143:                                    ; preds = %33
  %144 = load i32, i32* @x.714
  %145 = load i32, i32* @y.715
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 false, true
  %156 = and i1 %153, false
  %157 = and i1 %151, %155
  %158 = and i1 %154, false
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 false, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  %169 = select i1 %167, i32 -1417927856, i32 -1909228879
  store i32 %169, i32* %32
  br label %614

; <label>:170:                                    ; preds = %33
  %171 = load volatile i64**, i64*** %18
  %172 = load i64*, i64** %171, align 8
  %173 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %174 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.20"* %173, i64* dereferenceable(8) %172)
  %175 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %176 = bitcast %"struct.std::pair.32"* %175 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %177 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %176, i32 0, i32 0
  %178 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %174, 0
  store %"struct.std::_Rb_tree_node_base"* %178, %"struct.std::_Rb_tree_node_base"** %177, align 8
  %179 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %176, i32 0, i32 1
  %180 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %174, 1
  store %"struct.std::_Rb_tree_node_base"* %180, %"struct.std::_Rb_tree_node_base"** %179, align 8
  %181 = load i32, i32* @x.714
  %182 = load i32, i32* @y.715
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  %206 = select i1 %204, i32 -83560201, i32 -1909228879
  store i32 %206, i32* %32
  br label %614

; <label>:207:                                    ; preds = %33
  store i32 -161916280, i32* %32
  br label %614

; <label>:208:                                    ; preds = %33
  %209 = load i32, i32* @x.714
  %210 = load i32, i32* @y.715
  %211 = sub i32 0, 1
  %212 = add i32 %209, %211
  %213 = sub i32 %209, 1
  %214 = mul i32 %209, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %210, 10
  %218 = xor i1 %216, true
  %219 = xor i1 %217, true
  %220 = xor i1 true, true
  %221 = and i1 %218, true
  %222 = and i1 %216, %220
  %223 = and i1 %219, true
  %224 = and i1 %217, %220
  %225 = or i1 %221, %222
  %226 = or i1 %223, %224
  %227 = xor i1 %225, %226
  %228 = or i1 %218, %219
  %229 = xor i1 %228, true
  %230 = or i1 true, %220
  %231 = and i1 %229, %230
  %232 = or i1 %227, %231
  %233 = or i1 %216, %217
  %234 = select i1 %232, i32 533653184, i32 1223587064
  store i32 %234, i32* %32
  br label %614

; <label>:235:                                    ; preds = %33
  %236 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %237 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %236, i32 0, i32 0
  %238 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %237, i32 0, i32 0
  %239 = load volatile i64**, i64*** %18
  %240 = load i64*, i64** %239, align 8
  %241 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %242 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %241, i32 0, i32 0
  %243 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %242, align 8
  %244 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %243)
  %245 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %238, i64* dereferenceable(8) %240, i64* dereferenceable(8) %244)
  store i1 %245, i1* %6
  %246 = load i32, i32* @x.714
  %247 = load i32, i32* @y.715
  %248 = sub i32 %246, 964957793
  %249 = sub i32 %248, 1
  %250 = add i32 %249, 964957793
  %251 = sub i32 %246, 1
  %252 = mul i32 %246, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %247, 10
  %256 = and i1 %254, %255
  %257 = xor i1 %254, %255
  %258 = or i1 %256, %257
  %259 = or i1 %254, %255
  %260 = select i1 %258, i32 -1427976033, i32 1223587064
  store i32 %260, i32* %32
  br label %614

; <label>:261:                                    ; preds = %33
  %262 = load volatile i1, i1* %6
  %263 = select i1 %262, i32 1856759261, i32 1725002072
  store i32 %263, i32* %32
  br label %614

; <label>:264:                                    ; preds = %33
  %265 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %15
  %266 = bitcast %"struct.std::_Rb_tree_iterator"* %265 to i8*
  %267 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %268 = bitcast %"struct.std::_Rb_tree_iterator"* %267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %266, i8* %268, i64 8, i32 8, i1 false)
  %269 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %270 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %269, i32 0, i32 0
  %271 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %270, align 8
  %272 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %273 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_leftmostEv(%"class.std::_Rb_tree.20"* %272) #3
  %274 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %273, align 8
  %275 = icmp eq %"struct.std::_Rb_tree_node_base"* %271, %274
  %276 = select i1 %275, i32 -557550277, i32 -1639021602
  store i32 %276, i32* %32
  br label %614

; <label>:277:                                    ; preds = %33
  %278 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %279 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_leftmostEv(%"class.std::_Rb_tree.20"* %278) #3
  %280 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %281 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_leftmostEv(%"class.std::_Rb_tree.20"* %280) #3
  %282 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.32"* %282, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %279, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %281)
  store i32 -161916280, i32* %32
  br label %614

; <label>:283:                                    ; preds = %33
  %284 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %285 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %284, i32 0, i32 0
  %286 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %285, i32 0, i32 0
  %287 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %15
  %288 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEmmEv(%"struct.std::_Rb_tree_iterator"* %287) #3
  %289 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %288, i32 0, i32 0
  %290 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %289, align 8
  %291 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %290)
  %292 = load volatile i64**, i64*** %18
  %293 = load i64*, i64** %292, align 8
  %294 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %286, i64* dereferenceable(8) %291, i64* dereferenceable(8) %293)
  %295 = select i1 %294, i32 -1654217784, i32 -1022479064
  store i32 %295, i32* %32
  br label %614

; <label>:296:                                    ; preds = %33
  %297 = load i32, i32* @x.714
  %298 = load i32, i32* @y.715
  %299 = sub i32 0, 1
  %300 = add i32 %297, %299
  %301 = sub i32 %297, 1
  %302 = mul i32 %297, %300
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %298, 10
  %306 = xor i1 %304, true
  %307 = xor i1 %305, true
  %308 = xor i1 true, true
  %309 = and i1 %306, true
  %310 = and i1 %304, %308
  %311 = and i1 %307, true
  %312 = and i1 %305, %308
  %313 = or i1 %309, %310
  %314 = or i1 %311, %312
  %315 = xor i1 %313, %314
  %316 = or i1 %306, %307
  %317 = xor i1 %316, true
  %318 = or i1 true, %308
  %319 = and i1 %317, %318
  %320 = or i1 %315, %319
  %321 = or i1 %304, %305
  %322 = select i1 %320, i32 -32331860, i32 -2003067141
  store i32 %322, i32* %32
  br label %614

; <label>:323:                                    ; preds = %33
  %324 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %15
  %325 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %324, i32 0, i32 0
  %326 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %325, align 8
  %327 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %326) #3
  %328 = icmp eq %"struct.std::_Rb_tree_node.28"* %327, null
  store i1 %328, i1* %5
  %329 = load i32, i32* @x.714
  %330 = load i32, i32* @y.715
  %331 = sub i32 %329, -830902433
  %332 = sub i32 %331, 1
  %333 = add i32 %332, -830902433
  %334 = sub i32 %329, 1
  %335 = mul i32 %329, %333
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %330, 10
  %339 = and i1 %337, %338
  %340 = xor i1 %337, %338
  %341 = or i1 %339, %340
  %342 = or i1 %337, %338
  %343 = select i1 %341, i32 1139461627, i32 -2003067141
  store i32 %343, i32* %32
  br label %614

; <label>:344:                                    ; preds = %33
  %345 = load volatile i1, i1* %5
  %346 = select i1 %345, i32 398749120, i32 1223522107
  store i32 %346, i32* %32
  br label %614

; <label>:347:                                    ; preds = %33
  %348 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %14
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %348, align 8
  %349 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %15
  %350 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %349, i32 0, i32 0
  %351 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %352 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %14
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %351, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %352, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %350)
  store i32 -161916280, i32* %32
  br label %614

; <label>:353:                                    ; preds = %33
  %354 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %355 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %354, i32 0, i32 0
  %356 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %357 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %356, i32 0, i32 0
  %358 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.32"* %358, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %355, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %357)
  store i32 -161916280, i32* %32
  br label %614

; <label>:359:                                    ; preds = %33
  %360 = load volatile i64**, i64*** %18
  %361 = load i64*, i64** %360, align 8
  %362 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %363 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.20"* %362, i64* dereferenceable(8) %361)
  %364 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %365 = bitcast %"struct.std::pair.32"* %364 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %366 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %365, i32 0, i32 0
  %367 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %363, 0
  store %"struct.std::_Rb_tree_node_base"* %367, %"struct.std::_Rb_tree_node_base"** %366, align 8
  %368 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %365, i32 0, i32 1
  %369 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %363, 1
  store %"struct.std::_Rb_tree_node_base"* %369, %"struct.std::_Rb_tree_node_base"** %368, align 8
  store i32 -161916280, i32* %32
  br label %614

; <label>:370:                                    ; preds = %33
  %371 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %372 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %371, i32 0, i32 0
  %373 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %372, i32 0, i32 0
  %374 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %375 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %374, i32 0, i32 0
  %376 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %375, align 8
  %377 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %376)
  %378 = load volatile i64**, i64*** %18
  %379 = load i64*, i64** %378, align 8
  %380 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %373, i64* dereferenceable(8) %377, i64* dereferenceable(8) %379)
  %381 = select i1 %380, i32 -1521294112, i32 -576709049
  store i32 %381, i32* %32
  br label %614

; <label>:382:                                    ; preds = %33
  %383 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %13
  %384 = bitcast %"struct.std::_Rb_tree_iterator"* %383 to i8*
  %385 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %386 = bitcast %"struct.std::_Rb_tree_iterator"* %385 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %384, i8* %386, i64 8, i32 8, i1 false)
  %387 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %388 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %387, i32 0, i32 0
  %389 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %388, align 8
  %390 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %391 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_rightmostEv(%"class.std::_Rb_tree.20"* %390) #3
  %392 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %391, align 8
  %393 = icmp eq %"struct.std::_Rb_tree_node_base"* %389, %392
  %394 = select i1 %393, i32 2066676007, i32 -1679031406
  store i32 %394, i32* %32
  br label %614

; <label>:395:                                    ; preds = %33
  %396 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %12
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %396, align 8
  %397 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %398 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_rightmostEv(%"class.std::_Rb_tree.20"* %397) #3
  %399 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %400 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %12
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %399, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %400, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %398)
  store i32 -161916280, i32* %32
  br label %614

; <label>:401:                                    ; preds = %33
  %402 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %403 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %402, i32 0, i32 0
  %404 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %403, i32 0, i32 0
  %405 = load volatile i64**, i64*** %18
  %406 = load i64*, i64** %405, align 8
  %407 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %13
  %408 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEppEv(%"struct.std::_Rb_tree_iterator"* %407) #3
  %409 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %408, i32 0, i32 0
  %410 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %409, align 8
  %411 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %410)
  %412 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %404, i64* dereferenceable(8) %406, i64* dereferenceable(8) %411)
  %413 = select i1 %412, i32 -1818584828, i32 -1300216335
  store i32 %413, i32* %32
  br label %614

; <label>:414:                                    ; preds = %33
  %415 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %416 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %415, i32 0, i32 0
  %417 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %416, align 8
  %418 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %417) #3
  %419 = icmp eq %"struct.std::_Rb_tree_node.28"* %418, null
  %420 = select i1 %419, i32 -1812839531, i32 -1660315107
  store i32 %420, i32* %32
  br label %614

; <label>:421:                                    ; preds = %33
  %422 = load i32, i32* @x.714
  %423 = load i32, i32* @y.715
  %424 = sub i32 %422, -1906423673
  %425 = sub i32 %424, 1
  %426 = add i32 %425, -1906423673
  %427 = sub i32 %422, 1
  %428 = mul i32 %422, %426
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %423, 10
  %432 = and i1 %430, %431
  %433 = xor i1 %430, %431
  %434 = or i1 %432, %433
  %435 = or i1 %430, %431
  %436 = select i1 %434, i32 920216096, i32 16499854
  store i32 %436, i32* %32
  br label %614

; <label>:437:                                    ; preds = %33
  %438 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %11
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %438, align 8
  %439 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %440 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %439, i32 0, i32 0
  %441 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %442 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %11
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %441, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %442, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %440)
  %443 = load i32, i32* @x.714
  %444 = load i32, i32* @y.715
  %445 = sub i32 %443, 1550226868
  %446 = sub i32 %445, 1
  %447 = add i32 %446, 1550226868
  %448 = sub i32 %443, 1
  %449 = mul i32 %443, %447
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %444, 10
  %453 = xor i1 %451, true
  %454 = xor i1 %452, true
  %455 = xor i1 false, true
  %456 = and i1 %453, false
  %457 = and i1 %451, %455
  %458 = and i1 %454, false
  %459 = and i1 %452, %455
  %460 = or i1 %456, %457
  %461 = or i1 %458, %459
  %462 = xor i1 %460, %461
  %463 = or i1 %453, %454
  %464 = xor i1 %463, true
  %465 = or i1 false, %455
  %466 = and i1 %464, %465
  %467 = or i1 %462, %466
  %468 = or i1 %451, %452
  %469 = select i1 %467, i32 -2032611823, i32 16499854
  store i32 %469, i32* %32
  br label %614

; <label>:470:                                    ; preds = %33
  store i32 -161916280, i32* %32
  br label %614

; <label>:471:                                    ; preds = %33
  %472 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %13
  %473 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %472, i32 0, i32 0
  %474 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %13
  %475 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %474, i32 0, i32 0
  %476 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.32"* %476, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %473, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %475)
  store i32 -161916280, i32* %32
  br label %614

; <label>:477:                                    ; preds = %33
  %478 = load volatile i64**, i64*** %18
  %479 = load i64*, i64** %478, align 8
  %480 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %481 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.20"* %480, i64* dereferenceable(8) %479)
  %482 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %483 = bitcast %"struct.std::pair.32"* %482 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %484 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %483, i32 0, i32 0
  %485 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %481, 0
  store %"struct.std::_Rb_tree_node_base"* %485, %"struct.std::_Rb_tree_node_base"** %484, align 8
  %486 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %483, i32 0, i32 1
  %487 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %481, 1
  store %"struct.std::_Rb_tree_node_base"* %487, %"struct.std::_Rb_tree_node_base"** %486, align 8
  store i32 -161916280, i32* %32
  br label %614

; <label>:488:                                    ; preds = %33
  %489 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %490 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %489, i32 0, i32 0
  %491 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %10
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %491, align 8
  %492 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %493 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %10
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.32"* %492, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %490, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %493)
  store i32 -161916280, i32* %32
  br label %614

; <label>:494:                                    ; preds = %33
  %495 = load i32, i32* @x.714
  %496 = load i32, i32* @y.715
  %497 = add i32 %495, -1110692410
  %498 = sub i32 %497, 1
  %499 = sub i32 %498, -1110692410
  %500 = sub i32 %495, 1
  %501 = mul i32 %495, %499
  %502 = urem i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %496, 10
  %505 = xor i1 %503, true
  %506 = xor i1 %504, true
  %507 = xor i1 true, true
  %508 = and i1 %505, true
  %509 = and i1 %503, %507
  %510 = and i1 %506, true
  %511 = and i1 %504, %507
  %512 = or i1 %508, %509
  %513 = or i1 %510, %511
  %514 = xor i1 %512, %513
  %515 = or i1 %505, %506
  %516 = xor i1 %515, true
  %517 = or i1 true, %507
  %518 = and i1 %516, %517
  %519 = or i1 %514, %518
  %520 = or i1 %503, %504
  %521 = select i1 %519, i32 -446145149, i32 -2130224322
  store i32 %521, i32* %32
  br label %614

; <label>:522:                                    ; preds = %33
  %523 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %524 = bitcast %"struct.std::pair.32"* %523 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %525 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %524, align 8
  store { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %525, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %4
  %526 = load i32, i32* @x.714
  %527 = load i32, i32* @y.715
  %528 = sub i32 %526, -1139513215
  %529 = sub i32 %528, 1
  %530 = add i32 %529, -1139513215
  %531 = sub i32 %526, 1
  %532 = mul i32 %526, %530
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %527, 10
  %536 = and i1 %534, %535
  %537 = xor i1 %534, %535
  %538 = or i1 %536, %537
  %539 = or i1 %534, %535
  %540 = select i1 %538, i32 2077069086, i32 -2130224322
  store i32 %540, i32* %32
  br label %614

; <label>:541:                                    ; preds = %33
  %542 = load volatile { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %4
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %542

; <label>:543:                                    ; preds = %33
  %544 = alloca %"struct.std::pair.32", align 8
  %545 = alloca %"struct.std::_Rb_tree_const_iterator.37", align 8
  %546 = alloca %"class.std::_Rb_tree.20"*, align 8
  %547 = alloca i64*, align 8
  %548 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %549 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %550 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %551 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %552 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %553 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %554 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %555 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %556 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.37", %"struct.std::_Rb_tree_const_iterator.37"* %545, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %556, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %546, align 8
  store i64* %2, i64** %547, align 8
  %557 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %546, align 8
  %558 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxS0_IxbEEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.37"* %545) #3
  %559 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %548, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %558, %"struct.std::_Rb_tree_node_base"** %559, align 8
  %560 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %548, i32 0, i32 0
  %561 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %560, align 8
  %562 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_M_endEv(%"class.std::_Rb_tree.20"* %557) #3
  %563 = bitcast %"struct.std::_Rb_tree_node.28"* %562 to %"struct.std::_Rb_tree_node_base"*
  %564 = icmp eq %"struct.std::_Rb_tree_node_base"* %561, %563
  store i32 2107995154, i32* %32
  br label %614

; <label>:565:                                    ; preds = %33
  %566 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %567 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %566, i32 0, i32 0
  %568 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %567, i32 0, i32 0
  %569 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %570 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_rightmostEv(%"class.std::_Rb_tree.20"* %569) #3
  %571 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %570, align 8
  %572 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %571)
  %573 = load volatile i64**, i64*** %18
  %574 = load i64*, i64** %573, align 8
  %575 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %568, i64* dereferenceable(8) %572, i64* dereferenceable(8) %574)
  store i32 8843412, i32* %32
  br label %614

; <label>:576:                                    ; preds = %33
  %577 = load volatile i64**, i64*** %18
  %578 = load i64*, i64** %577, align 8
  %579 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %580 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.20"* %579, i64* dereferenceable(8) %578)
  %581 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %582 = bitcast %"struct.std::pair.32"* %581 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %583 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %582, i32 0, i32 0
  %584 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %580, 0
  store %"struct.std::_Rb_tree_node_base"* %584, %"struct.std::_Rb_tree_node_base"** %583, align 8
  %585 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %582, i32 0, i32 1
  %586 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %580, 1
  store %"struct.std::_Rb_tree_node_base"* %586, %"struct.std::_Rb_tree_node_base"** %585, align 8
  store i32 -1417927856, i32* %32
  br label %614

; <label>:587:                                    ; preds = %33
  %588 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9
  %589 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %588, i32 0, i32 0
  %590 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %589, i32 0, i32 0
  %591 = load volatile i64**, i64*** %18
  %592 = load i64*, i64** %591, align 8
  %593 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %594 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %593, i32 0, i32 0
  %595 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %594, align 8
  %596 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %595)
  %597 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %590, i64* dereferenceable(8) %592, i64* dereferenceable(8) %596)
  store i32 533653184, i32* %32
  br label %614

; <label>:598:                                    ; preds = %33
  %599 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %15
  %600 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %599, i32 0, i32 0
  %601 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %600, align 8
  %602 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %601) #3
  %603 = icmp eq %"struct.std::_Rb_tree_node.28"* %602, null
  store i32 -32331860, i32* %32
  br label %614

; <label>:604:                                    ; preds = %33
  %605 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %11
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %605, align 8
  %606 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %17
  %607 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %606, i32 0, i32 0
  %608 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %609 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %11
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.32"* %608, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %609, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %607)
  store i32 920216096, i32* %32
  br label %614

; <label>:610:                                    ; preds = %33
  %611 = load volatile %"struct.std::pair.32"*, %"struct.std::pair.32"** %19
  %612 = bitcast %"struct.std::pair.32"* %611 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %613 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %612, align 8
  store i32 -446145149, i32* %32
  br label %614

; <label>:614:                                    ; preds = %610, %604, %598, %587, %576, %565, %543, %522, %494, %488, %477, %471, %470, %437, %421, %414, %401, %395, %382, %370, %359, %353, %347, %344, %323, %296, %283, %277, %264, %261, %235, %208, %207, %170, %143, %137, %134, %109, %93, %88, %85, %44, %36, %35
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSB_PSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node.28"*) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"struct.std::_Rb_tree_node_base"*
  %7 = alloca %"class.std::_Rb_tree.20"*
  %8 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %9 = alloca %"class.std::_Rb_tree.20"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %13 = alloca i8, align 1
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node.28"* %3, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %14 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %9, align 8
  store %"class.std::_Rb_tree.20"* %14, %"class.std::_Rb_tree.20"** %7
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %6
  %16 = alloca i32
  store i32 -266464528, i32* %16
  %17 = alloca i1
  br label %18

; <label>:18:                                     ; preds = %4, %106
  %19 = load i32, i32* %16
  switch i32 %19, label %20 [
    i32 -266464528, label %21
    i32 221040718, label %25
    i32 1507193011, label %32
    i32 -701323310, label %48
    i32 1126671028, label %72
    i32 2090915440, label %74
    i32 1746378700, label %97
  ]

; <label>:20:                                     ; preds = %18
  br label %106

; <label>:21:                                     ; preds = %18
  %22 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6
  %23 = icmp ne %"struct.std::_Rb_tree_node_base"* %22, null
  %24 = select i1 %23, i32 2090915440, i32 221040718
  store i32 %24, i32* %16
  store i1 true, i1* %17
  br label %106

; <label>:25:                                     ; preds = %18
  %26 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %27 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %7
  %28 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_M_endEv(%"class.std::_Rb_tree.20"* %27) #3
  %29 = bitcast %"struct.std::_Rb_tree_node.28"* %28 to %"struct.std::_Rb_tree_node_base"*
  %30 = icmp eq %"struct.std::_Rb_tree_node_base"* %26, %29
  %31 = select i1 %30, i32 2090915440, i32 1507193011
  store i32 %31, i32* %16
  store i1 true, i1* %17
  br label %106

; <label>:32:                                     ; preds = %18
  %33 = load i32, i32* @x.716
  %34 = load i32, i32* @y.717
  %35 = sub i32 %33, 1273374288
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1273374288
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -701323310, i32 1746378700
  store i32 %47, i32* %16
  br label %106

; <label>:48:                                     ; preds = %18
  %49 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %7
  %50 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %50, i32 0, i32 0
  %52 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %53 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E(%"struct.std::_Rb_tree_node.28"* %52)
  %54 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %55 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %54)
  %56 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %51, i64* dereferenceable(8) %53, i64* dereferenceable(8) %55)
  store i1 %56, i1* %5
  %57 = load i32, i32* @x.716
  %58 = load i32, i32* @y.717
  %59 = sub i32 %57, 1308845951
  %60 = sub i32 %59, 1
  %61 = add i32 %60, 1308845951
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 1126671028, i32 1746378700
  store i32 %71, i32* %16
  br label %106

; <label>:72:                                     ; preds = %18
  store i32 2090915440, i32* %16
  %73 = load volatile i1, i1* %5
  store i1 %73, i1* %17
  br label %106

; <label>:74:                                     ; preds = %18
  %75 = load i1, i1* %17
  %76 = zext i1 %75 to i8
  store i8 %76, i8* %13, align 1
  %77 = load i8, i8* %13, align 1
  %78 = trunc i8 %77 to i1
  %79 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %80 = bitcast %"struct.std::_Rb_tree_node.28"* %79 to %"struct.std::_Rb_tree_node_base"*
  %81 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %82 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %7
  %83 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %83, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %78, %"struct.std::_Rb_tree_node_base"* %80, %"struct.std::_Rb_tree_node_base"* %81, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %84) #3
  %85 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %7
  %86 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %85, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %86, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 8849699869097029886
  %90 = add i64 %89, 1
  %91 = sub i64 %90, 8849699869097029886
  %92 = add i64 %88, 1
  store i64 %91, i64* %87, align 8
  %93 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %94 = bitcast %"struct.std::_Rb_tree_node.28"* %93 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %8, %"struct.std::_Rb_tree_node_base"* %94) #3
  %95 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %96 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %95, align 8
  ret %"struct.std::_Rb_tree_node_base"* %96

; <label>:97:                                     ; preds = %18
  %98 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %7
  %99 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %99, i32 0, i32 0
  %101 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %102 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E(%"struct.std::_Rb_tree_node.28"* %101)
  %103 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %104 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %103)
  %105 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %100, i64* dereferenceable(8) %102, i64* dereferenceable(8) %104)
  store i32 -701323310, i32* %16
  br label %106

; <label>:106:                                    ; preds = %97, %72, %48, %32, %25, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_get_nodeEv(%"class.std::_Rb_tree.20"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %2, align 8
  %3 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator.21"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.20"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE8allocateERS6_m(%"class.std::allocator.21"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node.28"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESE_IJEEEEEvPSt13_Rb_tree_nodeIS3_EDpOT_(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node.28"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::_Rb_tree.20"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.34"*, align 8
  %10 = alloca %"class.std::tuple.31"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %6, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.34"* %3, %"class.std::tuple.34"** %9, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %10, align 8
  %13 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %15 = bitcast %"struct.std::_Rb_tree_node.28"* %14 to i8*
  %16 = bitcast i8* %15 to %"struct.std::_Rb_tree_node.28"*
  %17 = call dereferenceable(1) %"class.std::allocator.21"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.20"* %13) #3
  %18 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %19 = invoke %"struct.std::pair.26"* @_ZNSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.28"* %18)
          to label %20 unwind label %57

; <label>:20:                                     ; preds = %5
  %21 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %22 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %21) #3
  %23 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %9, align 8
  %24 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %23) #3
  %25 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %10, align 8
  %26 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %25) #3
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESC_IJEEEEEvRS6_PT_DpOT0_(%"class.std::allocator.21"* dereferenceable(1) %17, %"struct.std::pair.26"* %19, %"struct.std::piecewise_construct_t"* dereferenceable(1) %22, %"class.std::tuple.34"* dereferenceable(8) %24, %"class.std::tuple.31"* dereferenceable(1) %26)
          to label %27 unwind label %57

; <label>:27:                                     ; preds = %20
  %28 = load i32, i32* @x.720
  %29 = load i32, i32* @y.721
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %176

; <label>:41:                                     ; preds = %27, %176
  %42 = load i32, i32* @x.720
  %43 = load i32, i32* @y.721
  %44 = sub i32 %42, -1014328295
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1014328295
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %176

; <label>:56:                                     ; preds = %41
  br label %124

; <label>:57:                                     ; preds = %20, %5
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %11, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %12, align 4
  br label %61

; <label>:61:                                     ; preds = %57
  %62 = load i8*, i8** %11, align 8
  %63 = call i8* @__cxa_begin_catch(i8* %62) #3
  %64 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %65 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"* %13, %"struct.std::_Rb_tree_node.28"* %65) #3
  invoke void @__cxa_rethrow() #14
          to label %175 unwind label %66

; <label>:66:                                     ; preds = %61
  %67 = load i32, i32* @x.720
  %68 = load i32, i32* @y.721
  %69 = sub i32 %67, 545255776
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 545255776
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %177

; <label>:93:                                     ; preds = %66, %177
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %11, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %12, align 4
  %97 = load i32, i32* @x.720
  %98 = load i32, i32* @y.721
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %177

; <label>:122:                                    ; preds = %93
  invoke void @__cxa_end_catch()
          to label %123 unwind label %172

; <label>:123:                                    ; preds = %122
  br label %125

; <label>:124:                                    ; preds = %56
  ret void

; <label>:125:                                    ; preds = %123
  %126 = load i32, i32* @x.720
  %127 = load i32, i32* @y.721
  %128 = add i32 %126, 623614439
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, 623614439
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %181

; <label>:152:                                    ; preds = %125, %181
  %153 = load i8*, i8** %11, align 8
  %154 = load i32, i32* %12, align 4
  %155 = insertvalue { i8*, i32 } undef, i8* %153, 0
  %156 = insertvalue { i8*, i32 } %155, i32 %154, 1
  %157 = load i32, i32* @x.720
  %158 = load i32, i32* @y.721
  %159 = add i32 %157, -2118420097
  %160 = sub i32 %159, 1
  %161 = sub i32 %160, -2118420097
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %181

; <label>:171:                                    ; preds = %152
  resume { i8*, i32 } %156

; <label>:172:                                    ; preds = %122
  %173 = landingpad { i8*, i32 }
          catch i8* null
  %174 = extractvalue { i8*, i32 } %173, 0
  call void @__clang_call_terminate(i8* %174) #11
  unreachable

; <label>:175:                                    ; preds = %61
  unreachable

; <label>:176:                                    ; preds = %41, %27
  br label %41

; <label>:177:                                    ; preds = %93, %66
  %178 = landingpad { i8*, i32 }
          cleanup
  %179 = extractvalue { i8*, i32 } %178, 0
  store i8* %179, i8** %11, align 8
  %180 = extractvalue { i8*, i32 } %178, 1
  store i32 %180, i32* %12, align 4
  br label %93

; <label>:181:                                    ; preds = %152, %125
  %182 = load i8*, i8** %11, align 8
  %183 = load i32, i32* %12, align 4
  %184 = insertvalue { i8*, i32 } undef, i8* %182, 0
  %185 = insertvalue { i8*, i32 } %184, i32 %183, 1
  br label %152
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE8allocateERS6_m(%"class.std::allocator.21"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.21"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %3, align 8
  %6 = bitcast %"class.std::allocator.21"* %5 to %"class.__gnu_cxx::new_allocator.22"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node.28"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.22"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node.28"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.22"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.22"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1730584479, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1730584479, label %16
    i32 -357015928, label %21
    i32 351735920, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -357015928, i32 351735920
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 56
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::_Rb_tree_node.28"*
  ret %"struct.std::_Rb_tree_node.28"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.22"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.726
  %5 = load i32, i32* @y.727
  %6 = add i32 %4, 630193409
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 630193409
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -104084776, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -104084776, label %18
    i32 2054723393, label %38
    i32 1959516076, label %56
    i32 110581996, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2054723393, i32 110581996
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %39, align 8
  %41 = load i32, i32* @x.726
  %42 = load i32, i32* @y.727
  %43 = sub i32 %41, 1785489876
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1785489876
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1959516076, i32 110581996
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 329406144173384850

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %58, align 8
  store i32 2054723393, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESC_IJEEEEEvRS6_PT_DpOT0_(%"class.std::allocator.21"* dereferenceable(1), %"struct.std::pair.26"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.21"*, align 8
  %7 = alloca %"struct.std::pair.26"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.34"*, align 8
  %10 = alloca %"class.std::tuple.31"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %6, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.34"* %3, %"class.std::tuple.34"** %9, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %10, align 8
  %11 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %6, align 8
  %12 = bitcast %"class.std::allocator.21"* %11 to %"class.__gnu_cxx::new_allocator.22"*
  %13 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESC_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.22"* %12, %"struct.std::pair.26"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple.34"* dereferenceable(8) %17, %"class.std::tuple.31"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESC_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.22"*, %"struct.std::pair.26"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  %7 = alloca %"struct.std::pair.26"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.34"*, align 8
  %10 = alloca %"class.std::tuple.31"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple.34", align 8
  %13 = alloca %"class.std::tuple.31", align 1
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %6, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.34"* %3, %"class.std::tuple.34"** %9, align 8
  store %"class.std::tuple.31"* %4, %"class.std::tuple.31"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %6, align 8
  %15 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %7, align 8
  %16 = bitcast %"struct.std::pair.26"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair.26"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple.34"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.34"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJRKxEEC2EOS2_(%"class.std::tuple.34"* %12, %"class.std::tuple.34"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.31"*, %"class.std::tuple.31"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.31"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.31"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple.34", %"class.std::tuple.34"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl.35", %"struct.std::_Tuple_impl.35"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base.36", %"struct.std::_Head_base.36"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  call void @_ZNSt4pairIKxS_IxbEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES6_IJDpT0_EE(%"struct.std::pair.26"* %17, i64* %27)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKxS_IxbEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES6_IJDpT0_EE(%"struct.std::pair.26"*, i64*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::piecewise_construct_t", align 1
  %4 = alloca %"class.std::tuple.34", align 8
  %5 = alloca %"class.std::tuple.31", align 1
  %6 = alloca %"struct.std::pair.26"*, align 8
  %7 = alloca %"struct.std::_Index_tuple", align 1
  %8 = alloca %"struct.std::_Index_tuple.33", align 1
  %9 = getelementptr inbounds %"class.std::tuple.34", %"class.std::tuple.34"* %4, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Tuple_impl.35", %"struct.std::_Tuple_impl.35"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Head_base.36", %"struct.std::_Head_base.36"* %10, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store %"struct.std::pair.26"* %0, %"struct.std::pair.26"** %6, align 8
  %12 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %6, align 8
  call void @_ZNSt4pairIKxS_IxbEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS5_IJDpT1_EESt12_Index_tupleIJXspT0_EEESE_IJXspT2_EEE(%"struct.std::pair.26"* %12, %"class.std::tuple.34"* dereferenceable(8) %4, %"class.std::tuple.31"* dereferenceable(1) %5)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKxS_IxbEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS5_IJDpT1_EESt12_Index_tupleIJXspT0_EEESE_IJXspT2_EEE(%"struct.std::pair.26"*, %"class.std::tuple.34"* dereferenceable(8), %"class.std::tuple.31"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.734
  %7 = load i32, i32* @y.735
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1690063439, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1690063439, label %19
    i32 663148025, label %27
    i32 -1605997521, label %67
    i32 1741942608, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 663148025, i32 1741942608
  store i32 %26, i32* %15
  br label %81

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Index_tuple", align 1
  %29 = alloca %"struct.std::_Index_tuple.33", align 1
  %30 = alloca %"struct.std::pair.26"*, align 8
  %31 = alloca %"class.std::tuple.34"*, align 8
  %32 = alloca %"class.std::tuple.31"*, align 8
  store %"struct.std::pair.26"* %0, %"struct.std::pair.26"** %30, align 8
  store %"class.std::tuple.34"* %1, %"class.std::tuple.34"** %31, align 8
  store %"class.std::tuple.31"* %2, %"class.std::tuple.31"** %32, align 8
  %33 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %30, align 8
  %34 = getelementptr inbounds %"struct.std::pair.26", %"struct.std::pair.26"* %33, i32 0, i32 0
  %35 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %31, align 8
  %36 = call dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.34"* dereferenceable(8) %35) #3
  %37 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %36) #3
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %34, align 8
  %39 = getelementptr inbounds %"struct.std::pair.26", %"struct.std::pair.26"* %33, i32 0, i32 1
  call void @_ZNSt4pairIxbEC2Ev(%"struct.std::pair.24"* %39)
  %40 = load i32, i32* @x.734
  %41 = load i32, i32* @y.735
  %42 = sub i32 %40, 192227553
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 192227553
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1605997521, i32 1741942608
  store i32 %66, i32* %15
  br label %81

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca %"struct.std::_Index_tuple", align 1
  %70 = alloca %"struct.std::_Index_tuple.33", align 1
  %71 = alloca %"struct.std::pair.26"*, align 8
  %72 = alloca %"class.std::tuple.34"*, align 8
  %73 = alloca %"class.std::tuple.31"*, align 8
  store %"struct.std::pair.26"* %0, %"struct.std::pair.26"** %71, align 8
  store %"class.std::tuple.34"* %1, %"class.std::tuple.34"** %72, align 8
  store %"class.std::tuple.31"* %2, %"class.std::tuple.31"** %73, align 8
  %74 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %71, align 8
  %75 = getelementptr inbounds %"struct.std::pair.26", %"struct.std::pair.26"* %74, i32 0, i32 0
  %76 = load %"class.std::tuple.34"*, %"class.std::tuple.34"** %72, align 8
  %77 = call dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.34"* dereferenceable(8) %76) #3
  %78 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %77) #3
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %75, align 8
  %80 = getelementptr inbounds %"struct.std::pair.26", %"struct.std::pair.26"* %74, i32 0, i32 1
  call void @_ZNSt4pairIxbEC2Ev(%"struct.std::pair.24"* %80)
  store i32 663148025, i32* %15
  br label %81

; <label>:81:                                     ; preds = %68, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxbEC2Ev(%"struct.std::pair.24"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.24"*, align 8
  store %"struct.std::pair.24"* %0, %"struct.std::pair.24"** %2, align 8
  %3 = load %"struct.std::pair.24"*, %"struct.std::pair.24"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %3, i32 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.std::pair.24", %"struct.std::pair.24"* %3, i32 0, i32 1
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxS0_IxbEEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.37"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.37"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.37"* %0, %"struct.std::_Rb_tree_const_iterator.37"** %3, align 8
  %4 = load %"struct.std::_Rb_tree_const_iterator.37"*, %"struct.std::_Rb_tree_const_iterator.37"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.37", %"struct.std::_Rb_tree_const_iterator.37"* %4, i32 0, i32 0
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE4sizeEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.740
  %6 = load i32, i32* @y.741
  %7 = add i32 %5, 1516712354
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1516712354
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2135873187, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2135873187, label %19
    i32 -1955251451, label %27
    i32 1477201593, label %60
    i32 -1664278560, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1955251451, i32 -1664278560
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %28, align 8
  %29 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %30, i32 0, i32 2
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %2
  %33 = load i32, i32* @x.740
  %34 = load i32, i32* @y.741
  %35 = sub i32 %33, -1374679863
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1374679863
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1477201593, i32 -1664278560
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %63, align 8
  %64 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %63, align 8
  %65 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %65, i32 0, i32 2
  %67 = load i64, i64* %66, align 8
  store i32 -1955251451, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.742
  %6 = load i32, i32* @y.743
  %7 = sub i32 %5, -1503893420
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1503893420
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1228490562, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1228490562, label %19
    i32 597256278, label %39
    i32 -1118378539, label %72
    i32 -34305568, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 597256278, i32 -34305568
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %41 = alloca %"struct.std::_Select1st.38", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %43 = call dereferenceable(24) %"struct.std::pair.26"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %42)
  %44 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxS0_IxbEEEclERKS3_(%"struct.std::_Select1st.38"* %41, %"struct.std::pair.26"* dereferenceable(24) %43)
  store i64* %44, i64** %2
  %45 = load i32, i32* @x.742
  %46 = load i32, i32* @y.743
  %47 = sub i32 %45, 1808393069
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1808393069
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1118378539, i32 -34305568
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile i64*, i64** %2
  ret i64* %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %76 = alloca %"struct.std::_Select1st.38", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %77 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %78 = call dereferenceable(24) %"struct.std::pair.26"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %77)
  %79 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxS0_IxbEEEclERKS3_(%"struct.std::_Select1st.38"* %76, %"struct.std::pair.26"* dereferenceable(24) %78)
  store i32 597256278, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_rightmostEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %2, align 8
  %3 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 3
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.20"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node.28"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree.20"*
  %7 = alloca %"struct.std::pair.32", align 8
  %8 = alloca %"class.std::_Rb_tree.20"*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %14 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %15 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %8, align 8
  store i64* %1, i64** %9, align 8
  %16 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %8, align 8
  store %"class.std::_Rb_tree.20"* %16, %"class.std::_Rb_tree.20"** %6
  %17 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %6
  %18 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_beginEv(%"class.std::_Rb_tree.20"* %17) #3
  store %"struct.std::_Rb_tree_node.28"* %18, %"struct.std::_Rb_tree_node.28"** %10, align 8
  %19 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %6
  %20 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_M_endEv(%"class.std::_Rb_tree.20"* %19) #3
  store %"struct.std::_Rb_tree_node.28"* %20, %"struct.std::_Rb_tree_node.28"** %11, align 8
  store i8 1, i8* %12, align 1
  %21 = alloca i32
  store i32 -157875262, i32* %21
  %22 = alloca %"struct.std::_Rb_tree_node.28"*
  br label %23

; <label>:23:                                     ; preds = %2, %289
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 -157875262, label %26
    i32 -1563428987, label %30
    i32 1210332948, label %43
    i32 -1436518052, label %47
    i32 221634752, label %51
    i32 -1701706211, label %68
    i32 2137599614, label %85
    i32 1743960211, label %86
    i32 -1362926421, label %102
    i32 -1636290317, label %134
    i32 -697006344, label %137
    i32 1954080108, label %143
    i32 506987768, label %144
    i32 142086396, label %146
    i32 2137660384, label %147
    i32 1010509929, label %174
    i32 -68888390, label %209
    i32 1485213679, label %212
    i32 1870115977, label %239
    i32 -213965573, label %266
    i32 -1699089943, label %267
    i32 1332211581, label %269
    i32 1422451754, label %272
    i32 -325646466, label %274
    i32 -108487842, label %279
    i32 -2145831193, label %288
  ]

; <label>:25:                                     ; preds = %23
  br label %289

; <label>:26:                                     ; preds = %23
  %27 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %10, align 8
  %28 = icmp ne %"struct.std::_Rb_tree_node.28"* %27, null
  %29 = select i1 %28, i32 -1563428987, i32 1743960211
  store i32 %29, i32* %21
  br label %289

; <label>:30:                                     ; preds = %23
  %31 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %10, align 8
  store %"struct.std::_Rb_tree_node.28"* %31, %"struct.std::_Rb_tree_node.28"** %11, align 8
  %32 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %6
  %33 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %9, align 8
  %36 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %10, align 8
  %37 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E(%"struct.std::_Rb_tree_node.28"* %36)
  %38 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %34, i64* dereferenceable(8) %35, i64* dereferenceable(8) %37)
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %12, align 1
  %40 = load i8, i8* %12, align 1
  %41 = trunc i8 %40 to i1
  %42 = select i1 %41, i32 1210332948, i32 -1436518052
  store i32 %42, i32* %21
  br label %289

; <label>:43:                                     ; preds = %23
  %44 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %10, align 8
  %45 = bitcast %"struct.std::_Rb_tree_node.28"* %44 to %"struct.std::_Rb_tree_node_base"*
  %46 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %45) #3
  store i32 221634752, i32* %21
  store %"struct.std::_Rb_tree_node.28"* %46, %"struct.std::_Rb_tree_node.28"** %22
  br label %289

; <label>:47:                                     ; preds = %23
  %48 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %10, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node.28"* %48 to %"struct.std::_Rb_tree_node_base"*
  %50 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %49) #3
  store i32 221634752, i32* %21
  store %"struct.std::_Rb_tree_node.28"* %50, %"struct.std::_Rb_tree_node.28"** %22
  br label %289

; <label>:51:                                     ; preds = %23
  %52 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %22
  store %"struct.std::_Rb_tree_node.28"* %52, %"struct.std::_Rb_tree_node.28"** %3
  %53 = load i32, i32* @x.746
  %54 = load i32, i32* @y.747
  %55 = sub i32 %53, 440644967
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 440644967
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -1701706211, i32 1422451754
  store i32 %67, i32* %21
  br label %289

; <label>:68:                                     ; preds = %23
  %69 = load volatile %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %3
  store %"struct.std::_Rb_tree_node.28"* %69, %"struct.std::_Rb_tree_node.28"** %10, align 8
  %70 = load i32, i32* @x.746
  %71 = load i32, i32* @y.747
  %72 = add i32 %70, -1829513337
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -1829513337
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 2137599614, i32 1422451754
  store i32 %84, i32* %21
  br label %289

; <label>:85:                                     ; preds = %23
  store i32 -157875262, i32* %21
  br label %289

; <label>:86:                                     ; preds = %23
  %87 = load i32, i32* @x.746
  %88 = load i32, i32* @y.747
  %89 = sub i32 %87, -1715147801
  %90 = sub i32 %89, 1
  %91 = add i32 %90, -1715147801
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 -1362926421, i32 -325646466
  store i32 %101, i32* %21
  br label %289

; <label>:102:                                    ; preds = %23
  %103 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %11, align 8
  %104 = bitcast %"struct.std::_Rb_tree_node.28"* %103 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_node_base"* %104) #3
  %105 = load i8, i8* %12, align 1
  %106 = trunc i8 %105 to i1
  store i1 %106, i1* %5
  %107 = load i32, i32* @x.746
  %108 = load i32, i32* @y.747
  %109 = add i32 %107, 546718343
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 546718343
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 false, true
  %120 = and i1 %117, false
  %121 = and i1 %115, %119
  %122 = and i1 %118, false
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 false, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  %133 = select i1 %131, i32 -1636290317, i32 -325646466
  store i32 %133, i32* %21
  br label %289

; <label>:134:                                    ; preds = %23
  %135 = load volatile i1, i1* %5
  %136 = select i1 %135, i32 -697006344, i32 2137660384
  store i32 %136, i32* %21
  br label %289

; <label>:137:                                    ; preds = %23
  %138 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %6
  %139 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE5beginEv(%"class.std::_Rb_tree.20"* %138) #3
  %140 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %139, %"struct.std::_Rb_tree_node_base"** %140, align 8
  %141 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEeqERKS4_(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %14) #3
  %142 = select i1 %141, i32 1954080108, i32 506987768
  store i32 %142, i32* %21
  br label %289

; <label>:143:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxS_IxbEEESA_vEEOT_OT0_(%"struct.std::pair.32"* %7, %"struct.std::_Rb_tree_node.28"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node.28"** dereferenceable(8) %11)
  store i32 1332211581, i32* %21
  br label %289

; <label>:144:                                    ; preds = %23
  %145 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEmmEv(%"struct.std::_Rb_tree_iterator"* %13) #3
  store i32 142086396, i32* %21
  br label %289

; <label>:146:                                    ; preds = %23
  store i32 2137660384, i32* %21
  br label %289

; <label>:147:                                    ; preds = %23
  %148 = load i32, i32* @x.746
  %149 = load i32, i32* @y.747
  %150 = sub i32 0, 1
  %151 = add i32 %148, %150
  %152 = sub i32 %148, 1
  %153 = mul i32 %148, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %149, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 false, true
  %160 = and i1 %157, false
  %161 = and i1 %155, %159
  %162 = and i1 %158, false
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 false, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  %173 = select i1 %171, i32 1010509929, i32 -108487842
  store i32 %173, i32* %21
  br label %289

; <label>:174:                                    ; preds = %23
  %175 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %6
  %176 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %175, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %179 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %178, align 8
  %180 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %179)
  %181 = load i64*, i64** %9, align 8
  %182 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %177, i64* dereferenceable(8) %180, i64* dereferenceable(8) %181)
  store i1 %182, i1* %4
  %183 = load i32, i32* @x.746
  %184 = load i32, i32* @y.747
  %185 = sub i32 0, 1
  %186 = add i32 %183, %185
  %187 = sub i32 %183, 1
  %188 = mul i32 %183, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %184, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 false, true
  %195 = and i1 %192, false
  %196 = and i1 %190, %194
  %197 = and i1 %193, false
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 false, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  %208 = select i1 %206, i32 -68888390, i32 -108487842
  store i32 %208, i32* %21
  br label %289

; <label>:209:                                    ; preds = %23
  %210 = load volatile i1, i1* %4
  %211 = select i1 %210, i32 1485213679, i32 -1699089943
  store i32 %211, i32* %21
  br label %289

; <label>:212:                                    ; preds = %23
  %213 = load i32, i32* @x.746
  %214 = load i32, i32* @y.747
  %215 = sub i32 0, 1
  %216 = add i32 %213, %215
  %217 = sub i32 %213, 1
  %218 = mul i32 %213, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %214, 10
  %222 = xor i1 %220, true
  %223 = xor i1 %221, true
  %224 = xor i1 true, true
  %225 = and i1 %222, true
  %226 = and i1 %220, %224
  %227 = and i1 %223, true
  %228 = and i1 %221, %224
  %229 = or i1 %225, %226
  %230 = or i1 %227, %228
  %231 = xor i1 %229, %230
  %232 = or i1 %222, %223
  %233 = xor i1 %232, true
  %234 = or i1 true, %224
  %235 = and i1 %233, %234
  %236 = or i1 %231, %235
  %237 = or i1 %220, %221
  %238 = select i1 %236, i32 1870115977, i32 -2145831193
  store i32 %238, i32* %21
  br label %289

; <label>:239:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxS_IxbEEESA_vEEOT_OT0_(%"struct.std::pair.32"* %7, %"struct.std::_Rb_tree_node.28"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node.28"** dereferenceable(8) %11)
  %240 = load i32, i32* @x.746
  %241 = load i32, i32* @y.747
  %242 = sub i32 0, 1
  %243 = add i32 %240, %242
  %244 = sub i32 %240, 1
  %245 = mul i32 %240, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %241, 10
  %249 = xor i1 %247, true
  %250 = xor i1 %248, true
  %251 = xor i1 true, true
  %252 = and i1 %249, true
  %253 = and i1 %247, %251
  %254 = and i1 %250, true
  %255 = and i1 %248, %251
  %256 = or i1 %252, %253
  %257 = or i1 %254, %255
  %258 = xor i1 %256, %257
  %259 = or i1 %249, %250
  %260 = xor i1 %259, true
  %261 = or i1 true, %251
  %262 = and i1 %260, %261
  %263 = or i1 %258, %262
  %264 = or i1 %247, %248
  %265 = select i1 %263, i32 -213965573, i32 -2145831193
  store i32 %265, i32* %21
  br label %289

; <label>:266:                                    ; preds = %23
  store i32 1332211581, i32* %21
  br label %289

; <label>:267:                                    ; preds = %23
  %268 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %15, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.32"* %7, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %268, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %15)
  store i32 1332211581, i32* %21
  br label %289

; <label>:269:                                    ; preds = %23
  %270 = bitcast %"struct.std::pair.32"* %7 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %271 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %270, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %271

; <label>:272:                                    ; preds = %23
  %273 = load volatile %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %3
  store %"struct.std::_Rb_tree_node.28"* %273, %"struct.std::_Rb_tree_node.28"** %10, align 8
  store i32 -1701706211, i32* %21
  br label %289

; <label>:274:                                    ; preds = %23
  %275 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %11, align 8
  %276 = bitcast %"struct.std::_Rb_tree_node.28"* %275 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_node_base"* %276) #3
  %277 = load i8, i8* %12, align 1
  %278 = trunc i8 %277 to i1
  store i32 -1362926421, i32* %21
  br label %289

; <label>:279:                                    ; preds = %23
  %280 = load volatile %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %6
  %281 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %280, i32 0, i32 0
  %282 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %281, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %284 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %283, align 8
  %285 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %284)
  %286 = load i64*, i64** %9, align 8
  %287 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %282, i64* dereferenceable(8) %285, i64* dereferenceable(8) %286)
  store i32 1010509929, i32* %21
  br label %289

; <label>:288:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxS_IxbEEESA_vEEOT_OT0_(%"struct.std::pair.32"* %7, %"struct.std::_Rb_tree_node.28"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node.28"** dereferenceable(8) %11)
  store i32 1870115977, i32* %21
  br label %289

; <label>:289:                                    ; preds = %288, %279, %274, %272, %267, %266, %239, %212, %209, %174, %147, %146, %144, %143, %137, %134, %102, %86, %85, %68, %51, %47, %43, %30, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_leftmostEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %2, align 8
  %3 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 2
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEmmEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.750
  %6 = load i32, i32* @y.751
  %7 = sub i32 %5, 838999658
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 838999658
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1701660934, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1701660934, label %19
    i32 -1279800983, label %39
    i32 348809128, label %63
    i32 -1799493086, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1279800983, i32 -1799493086
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %40, align 8
  store %"struct.std::_Rb_tree_iterator"* %41, %"struct.std::_Rb_tree_iterator"** %2
  %42 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %44) #13
  %46 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %46, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %48 = load i32, i32* @x.750
  %49 = load i32, i32* @y.751
  %50 = add i32 %48, -1394387973
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1394387973
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 348809128, i32 -1799493086
  store i32 %62, i32* %15
  br label %72

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  ret %"struct.std::_Rb_tree_iterator"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %66, align 8
  %67 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %67, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %69) #13
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %67, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %71, align 8
  store i32 -1279800983, i32* %15
  br label %72

; <label>:72:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEppEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.752
  %6 = load i32, i32* @y.753
  %7 = add i32 %5, 1066823964
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1066823964
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -267931454, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -267931454, label %19
    i32 -1281665047, label %39
    i32 255651490, label %63
    i32 -1522443121, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1281665047, i32 -1522443121
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %40, align 8
  store %"struct.std::_Rb_tree_iterator"* %41, %"struct.std::_Rb_tree_iterator"** %2
  %42 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %44) #13
  %46 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %46, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %48 = load i32, i32* @x.752
  %49 = load i32, i32* @y.753
  %50 = sub i32 %48, -968705920
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -968705920
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 255651490, i32 -1522443121
  store i32 %62, i32* %15
  br label %72

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  ret %"struct.std::_Rb_tree_iterator"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %66, align 8
  %67 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %67, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %69) #13
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %67, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %71, align 8
  store i32 -1281665047, i32* %15
  br label %72

; <label>:72:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.std::pair.26"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node.28"*
  %5 = call %"struct.std::pair.26"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.28"* %4)
  ret %"struct.std::pair.26"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE5beginEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %3, align 8
  %4 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxS_IxbEEESA_vEEOT_OT0_(%"struct.std::pair.32"*, %"struct.std::_Rb_tree_node.28"** dereferenceable(8), %"struct.std::_Rb_tree_node.28"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.758
  %7 = load i32, i32* @y.759
  %8 = sub i32 %6, -1397151609
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1397151609
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -588395014, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %98
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -588395014, label %20
    i32 -1008686817, label %40
    i32 1943702419, label %82
    i32 -1272455694, label %83
  ]

; <label>:19:                                     ; preds = %17
  br label %98

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1008686817, i32 -1272455694
  store i32 %39, i32* %16
  br label %98

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair.32"*, align 8
  %42 = alloca %"struct.std::_Rb_tree_node.28"**, align 8
  %43 = alloca %"struct.std::_Rb_tree_node.28"**, align 8
  store %"struct.std::pair.32"* %0, %"struct.std::pair.32"** %41, align 8
  store %"struct.std::_Rb_tree_node.28"** %1, %"struct.std::_Rb_tree_node.28"*** %42, align 8
  store %"struct.std::_Rb_tree_node.28"** %2, %"struct.std::_Rb_tree_node.28"*** %43, align 8
  %44 = load %"struct.std::pair.32"*, %"struct.std::pair.32"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %44, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %42, align 8
  %47 = call dereferenceable(8) %"struct.std::_Rb_tree_node.28"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEOT_RNSt16remove_referenceIS8_E4typeE(%"struct.std::_Rb_tree_node.28"** dereferenceable(8) %46) #3
  %48 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %47, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node.28"* %48 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %50 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %44, i32 0, i32 1
  %51 = load %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %43, align 8
  %52 = call dereferenceable(8) %"struct.std::_Rb_tree_node.28"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEOT_RNSt16remove_referenceIS8_E4typeE(%"struct.std::_Rb_tree_node.28"** dereferenceable(8) %51) #3
  %53 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %52, align 8
  %54 = bitcast %"struct.std::_Rb_tree_node.28"* %53 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %54, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %55 = load i32, i32* @x.758
  %56 = load i32, i32* @y.759
  %57 = sub i32 %55, 489102455
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 489102455
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 1943702419, i32 -1272455694
  store i32 %81, i32* %16
  br label %98

; <label>:82:                                     ; preds = %17
  ret void

; <label>:83:                                     ; preds = %17
  %84 = alloca %"struct.std::pair.32"*, align 8
  %85 = alloca %"struct.std::_Rb_tree_node.28"**, align 8
  %86 = alloca %"struct.std::_Rb_tree_node.28"**, align 8
  store %"struct.std::pair.32"* %0, %"struct.std::pair.32"** %84, align 8
  store %"struct.std::_Rb_tree_node.28"** %1, %"struct.std::_Rb_tree_node.28"*** %85, align 8
  store %"struct.std::_Rb_tree_node.28"** %2, %"struct.std::_Rb_tree_node.28"*** %86, align 8
  %87 = load %"struct.std::pair.32"*, %"struct.std::pair.32"** %84, align 8
  %88 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %87, i32 0, i32 0
  %89 = load %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %85, align 8
  %90 = call dereferenceable(8) %"struct.std::_Rb_tree_node.28"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEOT_RNSt16remove_referenceIS8_E4typeE(%"struct.std::_Rb_tree_node.28"** dereferenceable(8) %89) #3
  %91 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %90, align 8
  %92 = bitcast %"struct.std::_Rb_tree_node.28"* %91 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %92, %"struct.std::_Rb_tree_node_base"** %88, align 8
  %93 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %87, i32 0, i32 1
  %94 = load %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %86, align 8
  %95 = call dereferenceable(8) %"struct.std::_Rb_tree_node.28"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEOT_RNSt16remove_referenceIS8_E4typeE(%"struct.std::_Rb_tree_node.28"** dereferenceable(8) %94) #3
  %96 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %95, align 8
  %97 = bitcast %"struct.std::_Rb_tree_node.28"* %96 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %97, %"struct.std::_Rb_tree_node_base"** %93, align 8
  store i32 -1008686817, i32* %16
  br label %98

; <label>:98:                                     ; preds = %83, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node.28"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEOT_RNSt16remove_referenceIS8_E4typeE(%"struct.std::_Rb_tree_node.28"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node.28"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.760
  %6 = load i32, i32* @y.761
  %7 = sub i32 %5, -272277175
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -272277175
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -233097229, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -233097229, label %19
    i32 -1186429422, label %39
    i32 1124612062, label %57
    i32 -1006012687, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1186429422, i32 -1006012687
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node.28"**, align 8
  store %"struct.std::_Rb_tree_node.28"** %0, %"struct.std::_Rb_tree_node.28"*** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %40, align 8
  store %"struct.std::_Rb_tree_node.28"** %41, %"struct.std::_Rb_tree_node.28"*** %2
  %42 = load i32, i32* @x.760
  %43 = load i32, i32* @y.761
  %44 = add i32 %42, 1446927544
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1446927544
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1124612062, i32 -1006012687
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %2
  ret %"struct.std::_Rb_tree_node.28"** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::_Rb_tree_node.28"**, align 8
  store %"struct.std::_Rb_tree_node.28"** %0, %"struct.std::_Rb_tree_node.28"*** %60, align 8
  %61 = load %"struct.std::_Rb_tree_node.28"**, %"struct.std::_Rb_tree_node.28"*** %60, align 8
  store i32 -1186429422, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EEC2ERKS9_(%"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"* dereferenceable(48)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.20"*, align 8
  %4 = alloca %"class.std::_Rb_tree.20"*, align 8
  %5 = alloca %"class.std::allocator.21", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %3, align 8
  store %"class.std::_Rb_tree.20"* %1, %"class.std::_Rb_tree.20"** %4, align 8
  %8 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %3, align 8
  %9 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %8, i32 0, i32 0
  %10 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %4, align 8
  %11 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %11, i32 0, i32 0
  %13 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %4, align 8
  %14 = call dereferenceable(1) %"class.std::allocator.21"* @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.20"* %13) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEEE17_S_select_on_copyERKS7_(%"class.std::allocator.21"* sret %5, %"class.std::allocator.21"* dereferenceable(1) %14)
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EEC2ERKS7_OSaISt13_Rb_tree_nodeIS3_EE(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %9, %"struct.std::less"* dereferenceable(1) %12, %"class.std::allocator.21"* dereferenceable(1) %5)
          to label %15 unwind label %41

; <label>:15:                                     ; preds = %2
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEED2Ev(%"class.std::allocator.21"* %5) #3
  %16 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %4, align 8
  %17 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_rootEv(%"class.std::_Rb_tree.20"* %16) #3
  %18 = icmp ne %"struct.std::_Rb_tree_node_base"* %17, null
  br i1 %18, label %19, label %49

; <label>:19:                                     ; preds = %15
  %20 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %4, align 8
  %21 = call %"struct.std::_Rb_tree_node.28"* @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_beginEv(%"class.std::_Rb_tree.20"* %20) #3
  %22 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE6_M_endEv(%"class.std::_Rb_tree.20"* %8) #3
  %23 = invoke %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_copyEPKSt13_Rb_tree_nodeIS3_EPSB_(%"class.std::_Rb_tree.20"* %8, %"struct.std::_Rb_tree_node.28"* %21, %"struct.std::_Rb_tree_node.28"* %22)
          to label %24 unwind label %45

; <label>:24:                                     ; preds = %19
  %25 = bitcast %"struct.std::_Rb_tree_node.28"* %23 to %"struct.std::_Rb_tree_node_base"*
  %26 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_rootEv(%"class.std::_Rb_tree.20"* %8) #3
  store %"struct.std::_Rb_tree_node_base"* %25, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %27 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_rootEv(%"class.std::_Rb_tree.20"* %8) #3
  %28 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %27, align 8
  %29 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE10_S_minimumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %28) #3
  %30 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_leftmostEv(%"class.std::_Rb_tree.20"* %8) #3
  store %"struct.std::_Rb_tree_node_base"* %29, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %31 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_rootEv(%"class.std::_Rb_tree.20"* %8) #3
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE10_S_maximumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %32) #3
  %34 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE12_M_rightmostEv(%"class.std::_Rb_tree.20"* %8) #3
  store %"struct.std::_Rb_tree_node_base"* %33, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %35 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %4, align 8
  %36 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %36, i32 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %8, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %39, i32 0, i32 2
  store i64 %38, i64* %40, align 8
  br label %49

; <label>:41:                                     ; preds = %2
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %6, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %7, align 4
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEED2Ev(%"class.std::allocator.21"* %5) #3
  br label %50

; <label>:45:                                     ; preds = %19
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %6, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %7, align 4
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %9) #3
  br label %50

; <label>:49:                                     ; preds = %24, %15
  ret void

; <label>:50:                                     ; preds = %45, %41
  %51 = load i8*, i8** %6, align 8
  %52 = load i32, i32* %7, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  resume { i8*, i32 } %54
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEEE17_S_select_on_copyERKS7_(%"class.std::allocator.21"* noalias sret, %"class.std::allocator.21"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.764
  %6 = load i32, i32* @y.765
  %7 = sub i32 %5, -549307025
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -549307025
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 401616179, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 401616179, label %19
    i32 549716214, label %39
    i32 907066212, label %69
    i32 78006319, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 549716214, i32 78006319
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %1, %"class.std::allocator.21"** %40, align 8
  %41 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %40, align 8
  call void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE37select_on_container_copy_constructionERKS6_(%"class.std::allocator.21"* sret %0, %"class.std::allocator.21"* dereferenceable(1) %41)
  %42 = load i32, i32* @x.764
  %43 = load i32, i32* @y.765
  %44 = add i32 %42, -367246610
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -367246610
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 907066212, i32 78006319
  store i32 %68, i32* %15
  br label %73

; <label>:69:                                     ; preds = %16
  ret void

; <label>:70:                                     ; preds = %16
  %71 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %1, %"class.std::allocator.21"** %71, align 8
  %72 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %71, align 8
  call void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE37select_on_container_copy_constructionERKS6_(%"class.std::allocator.21"* sret %0, %"class.std::allocator.21"* dereferenceable(1) %72)
  store i32 549716214, i32* %15
  br label %73

; <label>:73:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.21"* @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %2, align 8
  %3 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %4 to %"class.std::allocator.21"*
  ret %"class.std::allocator.21"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EEC2ERKS7_OSaISt13_Rb_tree_nodeIS3_EE(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, %"struct.std::less"* dereferenceable(1), %"class.std::allocator.21"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, align 8
  %5 = alloca %"struct.std::less"*, align 8
  %6 = alloca %"class.std::allocator.21"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %4, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %5, align 8
  store %"class.std::allocator.21"* %2, %"class.std::allocator.21"** %6, align 8
  %9 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"** %4, align 8
  %10 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %9 to %"class.std::allocator.21"*
  %11 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %6, align 8
  %12 = call dereferenceable(1) %"class.std::allocator.21"* @_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::allocator.21"* dereferenceable(1) %11) #3
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEEC2ERKS5_(%"class.std::allocator.21"* %10, %"class.std::allocator.21"* dereferenceable(1) %12) #3
  %13 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %9, i32 0, i32 0
  %14 = load %"struct.std::less"*, %"struct.std::less"** %5, align 8
  %15 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %9, i32 0, i32 1
  %16 = bitcast %"struct.std::_Rb_tree_node_base"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 32, i32 8, i1 false)
  %17 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %9, i32 0, i32 2
  store i64 0, i64* %17, align 8
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_Rb_tree_implIS7_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %9)
          to label %18 unwind label %19

; <label>:18:                                     ; preds = %3
  ret void

; <label>:19:                                     ; preds = %3
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %7, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %8, align 4
  %23 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %9 to %"class.std::allocator.21"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEED2Ev(%"class.std::allocator.21"* %23) #3
  br label %24

; <label>:24:                                     ; preds = %19
  %25 = load i8*, i8** %7, align 8
  %26 = load i32, i32* %8, align 4
  %27 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEED2Ev(%"class.std::allocator.21"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.770
  %5 = load i32, i32* @y.771
  %6 = add i32 %4, -256928330
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -256928330
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 944454863, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 944454863, label %18
    i32 -2042874381, label %38
    i32 -1654722517, label %57
    i32 1309050400, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2042874381, i32 1309050400
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %39, align 8
  %40 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %39, align 8
  %41 = bitcast %"class.std::allocator.21"* %40 to %"class.__gnu_cxx::new_allocator.22"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEED2Ev(%"class.__gnu_cxx::new_allocator.22"* %41) #3
  %42 = load i32, i32* @x.770
  %43 = load i32, i32* @y.771
  %44 = sub i32 %42, -1975303721
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1975303721
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1654722517, i32 1309050400
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %59, align 8
  %60 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %59, align 8
  %61 = bitcast %"class.std::allocator.21"* %60 to %"class.__gnu_cxx::new_allocator.22"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEED2Ev(%"class.__gnu_cxx::new_allocator.22"* %61) #3
  store i32 -2042874381, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_rootEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.772
  %6 = load i32, i32* @y.773
  %7 = sub i32 %5, 1716035653
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1716035653
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -312610570, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -312610570, label %19
    i32 -262996327, label %27
    i32 -961987270, label %61
    i32 389957874, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -262996327, i32 389957874
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %28, align 8
  %29 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %30, i32 0, i32 1
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %31, i32 0, i32 1
  %33 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %32, align 8
  store %"struct.std::_Rb_tree_node_base"* %33, %"struct.std::_Rb_tree_node_base"** %2
  %34 = load i32, i32* @x.772
  %35 = load i32, i32* @y.773
  %36 = sub i32 %34, 1723492596
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1723492596
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -961987270, i32 389957874
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %64, align 8
  %65 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %64, align 8
  %66 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %66, i32 0, i32 1
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %67, i32 0, i32 1
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  store i32 -262996327, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_copyEPKSt13_Rb_tree_nodeIS3_EPSB_(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"*) #0 comdat align 2 {
  %4 = alloca %"class.std::_Rb_tree.20"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %7 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node", align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %4, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %5, align 8
  store %"struct.std::_Rb_tree_node.28"* %2, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %8 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_Alloc_nodeC2ERS9_(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* %7, %"class.std::_Rb_tree.20"* dereferenceable(48) %8)
  %9 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %5, align 8
  %10 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %11 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_copyINS9_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS3_EPKSD_SE_RT_(%"class.std::_Rb_tree.20"* %8, %"struct.std::_Rb_tree_node.28"* %9, %"struct.std::_Rb_tree_node.28"* %10, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* dereferenceable(8) %7)
  ret %"struct.std::_Rb_tree_node.28"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_beginEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %2, align 8
  %3 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node.28"*
  ret %"struct.std::_Rb_tree_node.28"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_rootEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %2, align 8
  %3 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE10_S_minimumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_minimumEPS_(%"struct.std::_Rb_tree_node_base"* %3) #3
  ret %"struct.std::_Rb_tree_node_base"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE10_S_maximumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.782
  %6 = load i32, i32* @y.783
  %7 = sub i32 %5, 1155469528
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1155469528
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1469343907, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1469343907, label %19
    i32 2065335446, label %39
    i32 -460843248, label %58
    i32 -960918722, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2065335446, i32 -960918722
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(%"struct.std::_Rb_tree_node_base"* %41) #3
  store %"struct.std::_Rb_tree_node_base"* %42, %"struct.std::_Rb_tree_node_base"** %2
  %43 = load i32, i32* @x.782
  %44 = load i32, i32* @y.783
  %45 = add i32 %43, -376374696
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -376374696
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -460843248, i32 -960918722
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %62 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %63 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(%"struct.std::_Rb_tree_node_base"* %62) #3
  store i32 2065335446, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE37select_on_container_copy_constructionERKS6_(%"class.std::allocator.21"* noalias sret, %"class.std::allocator.21"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.784
  %6 = load i32, i32* @y.785
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 685982032, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 685982032, label %18
    i32 899717632, label %38
    i32 -1614365173, label %56
    i32 -1623572803, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 899717632, i32 -1623572803
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %1, %"class.std::allocator.21"** %39, align 8
  %40 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %39, align 8
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEEC2ERKS5_(%"class.std::allocator.21"* %0, %"class.std::allocator.21"* dereferenceable(1) %40) #3
  %41 = load i32, i32* @x.784
  %42 = load i32, i32* @y.785
  %43 = sub i32 %41, -1134069493
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1134069493
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1614365173, i32 -1623572803
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %1, %"class.std::allocator.21"** %58, align 8
  %59 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %58, align 8
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEEC2ERKS5_(%"class.std::allocator.21"* %0, %"class.std::allocator.21"* dereferenceable(1) %59) #3
  store i32 899717632, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxS0_IxbEEEEC2ERKS5_(%"class.std::allocator.21"*, %"class.std::allocator.21"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.21"*, align 8
  %4 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %3, align 8
  store %"class.std::allocator.21"* %1, %"class.std::allocator.21"** %4, align 8
  %5 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %3, align 8
  %6 = bitcast %"class.std::allocator.21"* %5 to %"class.__gnu_cxx::new_allocator.22"*
  %7 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %4, align 8
  %8 = bitcast %"class.std::allocator.21"* %7 to %"class.__gnu_cxx::new_allocator.22"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEEC2ERKS7_(%"class.__gnu_cxx::new_allocator.22"* %6, %"class.__gnu_cxx::new_allocator.22"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEEC2ERKS7_(%"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %1, %"class.__gnu_cxx::new_allocator.22"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.21"* @_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::allocator.21"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.21"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.790
  %6 = load i32, i32* @y.791
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1382133920, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1382133920, label %18
    i32 480372316, label %38
    i32 195412150, label %68
    i32 1975415983, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 480372316, i32 1975415983
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %39, align 8
  %40 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %39, align 8
  store %"class.std::allocator.21"* %40, %"class.std::allocator.21"** %2
  %41 = load i32, i32* @x.790
  %42 = load i32, i32* @y.791
  %43 = add i32 %41, 1515893211
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1515893211
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 195412150, i32 1975415983
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile %"class.std::allocator.21"*, %"class.std::allocator.21"** %2
  ret %"class.std::allocator.21"* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %71, align 8
  %72 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %71, align 8
  store i32 480372316, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_Alloc_nodeC2ERS9_(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"class.std::_Rb_tree.20"* dereferenceable(48)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.792
  %6 = load i32, i32* @y.793
  %7 = sub i32 %5, -54907828
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -54907828
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2125008993, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2125008993, label %19
    i32 -35397801, label %27
    i32 1573364357, label %60
    i32 -583598353, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -35397801, i32 -583598353
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, align 8
  %29 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %28, align 8
  store %"class.std::_Rb_tree.20"* %1, %"class.std::_Rb_tree.20"** %29, align 8
  %30 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* %30, i32 0, i32 0
  %32 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %29, align 8
  store %"class.std::_Rb_tree.20"* %32, %"class.std::_Rb_tree.20"** %31, align 8
  %33 = load i32, i32* @x.792
  %34 = load i32, i32* @y.793
  %35 = add i32 %33, 336897926
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 336897926
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1573364357, i32 -583598353
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, align 8
  %63 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %62, align 8
  store %"class.std::_Rb_tree.20"* %1, %"class.std::_Rb_tree.20"** %63, align 8
  %64 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %62, align 8
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* %64, i32 0, i32 0
  %66 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %63, align 8
  store %"class.std::_Rb_tree.20"* %66, %"class.std::_Rb_tree.20"** %65, align 8
  store i32 -35397801, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_copyINS9_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS3_EPKSD_SE_RT_(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::_Rb_tree.20"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %8 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %5, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %6, align 8
  store %"struct.std::_Rb_tree_node.28"* %2, %"struct.std::_Rb_tree_node.28"** %7, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* %3, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %8, align 8
  %13 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %5, align 8
  %14 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %15 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %8, align 8
  %16 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_M_clone_nodeINS9_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS3_EPKSD_RT_(%"class.std::_Rb_tree.20"* %13, %"struct.std::_Rb_tree_node.28"* %14, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* dereferenceable(8) %15)
  store %"struct.std::_Rb_tree_node.28"* %16, %"struct.std::_Rb_tree_node.28"** %9, align 8
  %17 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %18 = bitcast %"struct.std::_Rb_tree_node.28"* %17 to %"struct.std::_Rb_tree_node_base"*
  %19 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  %20 = bitcast %"struct.std::_Rb_tree_node.28"* %19 to %"struct.std::_Rb_tree_node_base"*
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %20, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %22 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %23 = bitcast %"struct.std::_Rb_tree_node.28"* %22 to %"struct.std::_Rb_tree_node_base"*
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %23, i32 0, i32 3
  %25 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %24, align 8
  %26 = icmp ne %"struct.std::_Rb_tree_node_base"* %25, null
  br i1 %26, label %27, label %172

; <label>:27:                                     ; preds = %4
  %28 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %29 = bitcast %"struct.std::_Rb_tree_node.28"* %28 to %"struct.std::_Rb_tree_node_base"*
  %30 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %29) #3
  %31 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  %32 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %8, align 8
  %33 = invoke %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_copyINS9_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS3_EPKSD_SE_RT_(%"class.std::_Rb_tree.20"* %13, %"struct.std::_Rb_tree_node.28"* %30, %"struct.std::_Rb_tree_node.28"* %31, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* dereferenceable(8) %32)
          to label %34 unwind label %81

; <label>:34:                                     ; preds = %27
  %35 = load i32, i32* @x.794
  %36 = load i32, i32* @y.795
  %37 = add i32 %35, 620581935
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 620581935
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %493

; <label>:61:                                     ; preds = %34, %493
  %62 = bitcast %"struct.std::_Rb_tree_node.28"* %33 to %"struct.std::_Rb_tree_node_base"*
  %63 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  %64 = bitcast %"struct.std::_Rb_tree_node.28"* %63 to %"struct.std::_Rb_tree_node_base"*
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %64, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %62, %"struct.std::_Rb_tree_node_base"** %65, align 8
  %66 = load i32, i32* @x.794
  %67 = load i32, i32* @y.795
  %68 = sub i32 %66, -1194593225
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -1194593225
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %493

; <label>:80:                                     ; preds = %61
  br label %172

; <label>:81:                                     ; preds = %300, %236, %27
  %82 = load i32, i32* @x.794
  %83 = load i32, i32* @y.795
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %498

; <label>:95:                                     ; preds = %81, %498
  %96 = landingpad { i8*, i32 }
          catch i8* null
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %10, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %11, align 4
  %99 = load i32, i32* @x.794
  %100 = load i32, i32* @y.795
  %101 = add i32 %99, -226632745
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, -226632745
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %498

; <label>:125:                                    ; preds = %95
  br label %126

; <label>:126:                                    ; preds = %125
  %127 = load i8*, i8** %10, align 8
  %128 = call i8* @__cxa_begin_catch(i8* %127) #3
  %129 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"* %13, %"struct.std::_Rb_tree_node.28"* %129)
          to label %130 unwind label %366

; <label>:130:                                    ; preds = %126
  %131 = load i32, i32* @x.794
  %132 = load i32, i32* @y.795
  %133 = sub i32 %131, 1248495589
  %134 = sub i32 %133, 1
  %135 = add i32 %134, 1248495589
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 true, true
  %144 = and i1 %141, true
  %145 = and i1 %139, %143
  %146 = and i1 %142, true
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 true, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  br i1 %155, label %157, label %502

; <label>:157:                                    ; preds = %130, %502
  %158 = load i32, i32* @x.794
  %159 = load i32, i32* @y.795
  %160 = sub i32 0, 1
  %161 = add i32 %158, %160
  %162 = sub i32 %158, 1
  %163 = mul i32 %158, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %159, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %502

; <label>:171:                                    ; preds = %157
  invoke void @__cxa_rethrow() #14
          to label %452 unwind label %366

; <label>:172:                                    ; preds = %80, %4
  %173 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  store %"struct.std::_Rb_tree_node.28"* %173, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %174 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %175 = bitcast %"struct.std::_Rb_tree_node.28"* %174 to %"struct.std::_Rb_tree_node_base"*
  %176 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %175) #3
  store %"struct.std::_Rb_tree_node.28"* %176, %"struct.std::_Rb_tree_node.28"** %6, align 8
  br label %177

; <label>:177:                                    ; preds = %307, %172
  %178 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %179 = icmp ne %"struct.std::_Rb_tree_node.28"* %178, null
  br i1 %179, label %180, label %312

; <label>:180:                                    ; preds = %177
  %181 = load i32, i32* @x.794
  %182 = load i32, i32* @y.795
  %183 = add i32 %181, -250114775
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, -250114775
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 false, true
  %194 = and i1 %191, false
  %195 = and i1 %189, %193
  %196 = and i1 %192, false
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 false, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  br i1 %205, label %207, label %503

; <label>:207:                                    ; preds = %180, %503
  %208 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %209 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %8, align 8
  %210 = load i32, i32* @x.794
  %211 = load i32, i32* @y.795
  %212 = add i32 %210, -1456209971
  %213 = sub i32 %212, 1
  %214 = sub i32 %213, -1456209971
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = xor i1 %218, true
  %221 = xor i1 %219, true
  %222 = xor i1 false, true
  %223 = and i1 %220, false
  %224 = and i1 %218, %222
  %225 = and i1 %221, false
  %226 = and i1 %219, %222
  %227 = or i1 %223, %224
  %228 = or i1 %225, %226
  %229 = xor i1 %227, %228
  %230 = or i1 %220, %221
  %231 = xor i1 %230, true
  %232 = or i1 false, %222
  %233 = and i1 %231, %232
  %234 = or i1 %229, %233
  %235 = or i1 %218, %219
  br i1 %234, label %236, label %503

; <label>:236:                                    ; preds = %207
  %237 = invoke %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_M_clone_nodeINS9_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS3_EPKSD_RT_(%"class.std::_Rb_tree.20"* %13, %"struct.std::_Rb_tree_node.28"* %208, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* dereferenceable(8) %209)
          to label %238 unwind label %81

; <label>:238:                                    ; preds = %236
  store %"struct.std::_Rb_tree_node.28"* %237, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %239 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %240 = bitcast %"struct.std::_Rb_tree_node.28"* %239 to %"struct.std::_Rb_tree_node_base"*
  %241 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %242 = bitcast %"struct.std::_Rb_tree_node.28"* %241 to %"struct.std::_Rb_tree_node_base"*
  %243 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %242, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %240, %"struct.std::_Rb_tree_node_base"** %243, align 8
  %244 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %245 = bitcast %"struct.std::_Rb_tree_node.28"* %244 to %"struct.std::_Rb_tree_node_base"*
  %246 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %247 = bitcast %"struct.std::_Rb_tree_node.28"* %246 to %"struct.std::_Rb_tree_node_base"*
  %248 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %247, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %245, %"struct.std::_Rb_tree_node_base"** %248, align 8
  %249 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %250 = bitcast %"struct.std::_Rb_tree_node.28"* %249 to %"struct.std::_Rb_tree_node_base"*
  %251 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %250, i32 0, i32 3
  %252 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %251, align 8
  %253 = icmp ne %"struct.std::_Rb_tree_node_base"* %252, null
  br i1 %253, label %254, label %307

; <label>:254:                                    ; preds = %238
  %255 = load i32, i32* @x.794
  %256 = load i32, i32* @y.795
  %257 = add i32 %255, 1418228642
  %258 = sub i32 %257, 1
  %259 = sub i32 %258, 1418228642
  %260 = sub i32 %255, 1
  %261 = mul i32 %255, %259
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %256, 10
  %265 = and i1 %263, %264
  %266 = xor i1 %263, %264
  %267 = or i1 %265, %266
  %268 = or i1 %263, %264
  br i1 %267, label %269, label %506

; <label>:269:                                    ; preds = %254, %506
  %270 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %271 = bitcast %"struct.std::_Rb_tree_node.28"* %270 to %"struct.std::_Rb_tree_node_base"*
  %272 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %271) #3
  %273 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %274 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %8, align 8
  %275 = load i32, i32* @x.794
  %276 = load i32, i32* @y.795
  %277 = sub i32 0, 1
  %278 = add i32 %275, %277
  %279 = sub i32 %275, 1
  %280 = mul i32 %275, %278
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %276, 10
  %284 = xor i1 %282, true
  %285 = xor i1 %283, true
  %286 = xor i1 true, true
  %287 = and i1 %284, true
  %288 = and i1 %282, %286
  %289 = and i1 %285, true
  %290 = and i1 %283, %286
  %291 = or i1 %287, %288
  %292 = or i1 %289, %290
  %293 = xor i1 %291, %292
  %294 = or i1 %284, %285
  %295 = xor i1 %294, true
  %296 = or i1 true, %286
  %297 = and i1 %295, %296
  %298 = or i1 %293, %297
  %299 = or i1 %282, %283
  br i1 %298, label %300, label %506

; <label>:300:                                    ; preds = %269
  %301 = invoke %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_M_copyINS9_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS3_EPKSD_SE_RT_(%"class.std::_Rb_tree.20"* %13, %"struct.std::_Rb_tree_node.28"* %272, %"struct.std::_Rb_tree_node.28"* %273, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* dereferenceable(8) %274)
          to label %302 unwind label %81

; <label>:302:                                    ; preds = %300
  %303 = bitcast %"struct.std::_Rb_tree_node.28"* %301 to %"struct.std::_Rb_tree_node_base"*
  %304 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %305 = bitcast %"struct.std::_Rb_tree_node.28"* %304 to %"struct.std::_Rb_tree_node_base"*
  %306 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %305, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %303, %"struct.std::_Rb_tree_node_base"** %306, align 8
  br label %307

; <label>:307:                                    ; preds = %302, %238
  %308 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  store %"struct.std::_Rb_tree_node.28"* %308, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %309 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %310 = bitcast %"struct.std::_Rb_tree_node.28"* %309 to %"struct.std::_Rb_tree_node_base"*
  %311 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %310) #3
  store %"struct.std::_Rb_tree_node.28"* %311, %"struct.std::_Rb_tree_node.28"** %6, align 8
  br label %177

; <label>:312:                                    ; preds = %177
  %313 = load i32, i32* @x.794
  %314 = load i32, i32* @y.795
  %315 = add i32 %313, -1059823754
  %316 = sub i32 %315, 1
  %317 = sub i32 %316, -1059823754
  %318 = sub i32 %313, 1
  %319 = mul i32 %313, %317
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %314, 10
  %323 = xor i1 %321, true
  %324 = xor i1 %322, true
  %325 = xor i1 true, true
  %326 = and i1 %323, true
  %327 = and i1 %321, %325
  %328 = and i1 %324, true
  %329 = and i1 %322, %325
  %330 = or i1 %326, %327
  %331 = or i1 %328, %329
  %332 = xor i1 %330, %331
  %333 = or i1 %323, %324
  %334 = xor i1 %333, true
  %335 = or i1 true, %325
  %336 = and i1 %334, %335
  %337 = or i1 %332, %336
  %338 = or i1 %321, %322
  br i1 %337, label %339, label %512

; <label>:339:                                    ; preds = %312, %512
  %340 = load i32, i32* @x.794
  %341 = load i32, i32* @y.795
  %342 = sub i32 0, 1
  %343 = add i32 %340, %342
  %344 = sub i32 %340, 1
  %345 = mul i32 %340, %343
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %341, 10
  %349 = xor i1 %347, true
  %350 = xor i1 %348, true
  %351 = xor i1 true, true
  %352 = and i1 %349, true
  %353 = and i1 %347, %351
  %354 = and i1 %350, true
  %355 = and i1 %348, %351
  %356 = or i1 %352, %353
  %357 = or i1 %354, %355
  %358 = xor i1 %356, %357
  %359 = or i1 %349, %350
  %360 = xor i1 %359, true
  %361 = or i1 true, %351
  %362 = and i1 %360, %361
  %363 = or i1 %358, %362
  %364 = or i1 %347, %348
  br i1 %363, label %365, label %512

; <label>:365:                                    ; preds = %339
  br label %401

; <label>:366:                                    ; preds = %171, %126
  %367 = landingpad { i8*, i32 }
          cleanup
  %368 = extractvalue { i8*, i32 } %367, 0
  store i8* %368, i8** %10, align 8
  %369 = extractvalue { i8*, i32 } %367, 1
  store i32 %369, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %370 unwind label %449

; <label>:370:                                    ; preds = %366
  %371 = load i32, i32* @x.794
  %372 = load i32, i32* @y.795
  %373 = sub i32 %371, 337917527
  %374 = sub i32 %373, 1
  %375 = add i32 %374, 337917527
  %376 = sub i32 %371, 1
  %377 = mul i32 %371, %375
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %372, 10
  %381 = and i1 %379, %380
  %382 = xor i1 %379, %380
  %383 = or i1 %381, %382
  %384 = or i1 %379, %380
  br i1 %383, label %385, label %513

; <label>:385:                                    ; preds = %370, %513
  %386 = load i32, i32* @x.794
  %387 = load i32, i32* @y.795
  %388 = add i32 %386, -1467337711
  %389 = sub i32 %388, 1
  %390 = sub i32 %389, -1467337711
  %391 = sub i32 %386, 1
  %392 = mul i32 %386, %390
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %387, 10
  %396 = and i1 %394, %395
  %397 = xor i1 %394, %395
  %398 = or i1 %396, %397
  %399 = or i1 %394, %395
  br i1 %398, label %400, label %513

; <label>:400:                                    ; preds = %385
  br label %444

; <label>:401:                                    ; preds = %365
  %402 = load i32, i32* @x.794
  %403 = load i32, i32* @y.795
  %404 = sub i32 0, 1
  %405 = add i32 %402, %404
  %406 = sub i32 %402, 1
  %407 = mul i32 %402, %405
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %403, 10
  %411 = and i1 %409, %410
  %412 = xor i1 %409, %410
  %413 = or i1 %411, %412
  %414 = or i1 %409, %410
  br i1 %413, label %415, label %514

; <label>:415:                                    ; preds = %401, %514
  %416 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  %417 = load i32, i32* @x.794
  %418 = load i32, i32* @y.795
  %419 = sub i32 %417, 218917565
  %420 = sub i32 %419, 1
  %421 = add i32 %420, 218917565
  %422 = sub i32 %417, 1
  %423 = mul i32 %417, %421
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %418, 10
  %427 = xor i1 %425, true
  %428 = xor i1 %426, true
  %429 = xor i1 true, true
  %430 = and i1 %427, true
  %431 = and i1 %425, %429
  %432 = and i1 %428, true
  %433 = and i1 %426, %429
  %434 = or i1 %430, %431
  %435 = or i1 %432, %433
  %436 = xor i1 %434, %435
  %437 = or i1 %427, %428
  %438 = xor i1 %437, true
  %439 = or i1 true, %429
  %440 = and i1 %438, %439
  %441 = or i1 %436, %440
  %442 = or i1 %425, %426
  br i1 %441, label %443, label %514

; <label>:443:                                    ; preds = %415
  ret %"struct.std::_Rb_tree_node.28"* %416

; <label>:444:                                    ; preds = %400
  %445 = load i8*, i8** %10, align 8
  %446 = load i32, i32* %11, align 4
  %447 = insertvalue { i8*, i32 } undef, i8* %445, 0
  %448 = insertvalue { i8*, i32 } %447, i32 %446, 1
  resume { i8*, i32 } %448

; <label>:449:                                    ; preds = %366
  %450 = landingpad { i8*, i32 }
          catch i8* null
  %451 = extractvalue { i8*, i32 } %450, 0
  call void @__clang_call_terminate(i8* %451) #11
  unreachable

; <label>:452:                                    ; preds = %171
  %453 = load i32, i32* @x.794
  %454 = load i32, i32* @y.795
  %455 = sub i32 0, 1
  %456 = add i32 %453, %455
  %457 = sub i32 %453, 1
  %458 = mul i32 %453, %456
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %454, 10
  %462 = and i1 %460, %461
  %463 = xor i1 %460, %461
  %464 = or i1 %462, %463
  %465 = or i1 %460, %461
  br i1 %464, label %466, label %516

; <label>:466:                                    ; preds = %452, %516
  %467 = load i32, i32* @x.794
  %468 = load i32, i32* @y.795
  %469 = sub i32 0, 1
  %470 = add i32 %467, %469
  %471 = sub i32 %467, 1
  %472 = mul i32 %467, %470
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %468, 10
  %476 = xor i1 %474, true
  %477 = xor i1 %475, true
  %478 = xor i1 true, true
  %479 = and i1 %476, true
  %480 = and i1 %474, %478
  %481 = and i1 %477, true
  %482 = and i1 %475, %478
  %483 = or i1 %479, %480
  %484 = or i1 %481, %482
  %485 = xor i1 %483, %484
  %486 = or i1 %476, %477
  %487 = xor i1 %486, true
  %488 = or i1 true, %478
  %489 = and i1 %487, %488
  %490 = or i1 %485, %489
  %491 = or i1 %474, %475
  br i1 %490, label %492, label %516

; <label>:492:                                    ; preds = %466
  unreachable

; <label>:493:                                    ; preds = %61, %34
  %494 = bitcast %"struct.std::_Rb_tree_node.28"* %33 to %"struct.std::_Rb_tree_node_base"*
  %495 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  %496 = bitcast %"struct.std::_Rb_tree_node.28"* %495 to %"struct.std::_Rb_tree_node_base"*
  %497 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %496, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %494, %"struct.std::_Rb_tree_node_base"** %497, align 8
  br label %61

; <label>:498:                                    ; preds = %95, %81
  %499 = landingpad { i8*, i32 }
          catch i8* null
  %500 = extractvalue { i8*, i32 } %499, 0
  store i8* %500, i8** %10, align 8
  %501 = extractvalue { i8*, i32 } %499, 1
  store i32 %501, i32* %11, align 4
  br label %95

; <label>:502:                                    ; preds = %157, %130
  br label %157

; <label>:503:                                    ; preds = %207, %180
  %504 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %505 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %8, align 8
  br label %207

; <label>:506:                                    ; preds = %269, %254
  %507 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %6, align 8
  %508 = bitcast %"struct.std::_Rb_tree_node.28"* %507 to %"struct.std::_Rb_tree_node_base"*
  %509 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %508) #3
  %510 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %12, align 8
  %511 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %8, align 8
  br label %269

; <label>:512:                                    ; preds = %339, %312
  br label %339

; <label>:513:                                    ; preds = %385, %370
  br label %385

; <label>:514:                                    ; preds = %415, %401
  %515 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %9, align 8
  br label %415

; <label>:516:                                    ; preds = %466, %452
  br label %466
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE13_M_clone_nodeINS9_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS3_EPKSD_RT_(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::_Rb_tree.20"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %6 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %4, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %5, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* %2, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %6, align 8
  %8 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %4, align 8
  %9 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %6, align 8
  %10 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %5, align 8
  %11 = call %"struct.std::pair.26"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.28"* %10)
  %12 = call %"struct.std::_Rb_tree_node.28"* @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* %9, %"struct.std::pair.26"* dereferenceable(24) %11)
  store %"struct.std::_Rb_tree_node.28"* %12, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %13 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %5, align 8
  %14 = bitcast %"struct.std::_Rb_tree_node.28"* %13 to %"struct.std::_Rb_tree_node_base"*
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %18 = bitcast %"struct.std::_Rb_tree_node.28"* %17 to %"struct.std::_Rb_tree_node_base"*
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %18, i32 0, i32 0
  store i32 %16, i32* %19, align 8
  %20 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %21 = bitcast %"struct.std::_Rb_tree_node.28"* %20 to %"struct.std::_Rb_tree_node_base"*
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %21, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %23 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %7, align 8
  %24 = bitcast %"struct.std::_Rb_tree_node.28"* %23 to %"struct.std::_Rb_tree_node_base"*
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %24, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %25, align 8
  %26 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %7, align 8
  ret %"struct.std::_Rb_tree_node.28"* %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.28"*
  ret %"struct.std::_Rb_tree_node.28"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.28"*
  ret %"struct.std::_Rb_tree_node.28"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNKSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"struct.std::pair.26"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, align 8
  %4 = alloca %"struct.std::pair.26"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %3, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %4, align 8
  %5 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Alloc_node"* %5, i32 0, i32 0
  %7 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %6, align 8
  %8 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %4, align 8
  %9 = call dereferenceable(24) %"struct.std::pair.26"* @_ZSt7forwardIRKSt4pairIKxS0_IxbEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::pair.26"* dereferenceable(24) %8) #3
  %10 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_(%"class.std::_Rb_tree.20"* %7, %"struct.std::pair.26"* dereferenceable(24) %9)
  ret %"struct.std::_Rb_tree_node.28"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_(%"class.std::_Rb_tree.20"*, %"struct.std::pair.26"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node.28"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.804
  %7 = load i32, i32* @y.805
  %8 = sub i32 %6, -1736906756
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1736906756
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -345181201, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -345181201, label %20
    i32 2023669496, label %40
    i32 1756131931, label %64
    i32 -1773575195, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 2023669496, i32 -1773575195
  store i32 %39, i32* %16
  br label %76

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::_Rb_tree.20"*, align 8
  %42 = alloca %"struct.std::pair.26"*, align 8
  %43 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %41, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %42, align 8
  %44 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %41, align 8
  %45 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_get_nodeEv(%"class.std::_Rb_tree.20"* %44)
  store %"struct.std::_Rb_tree_node.28"* %45, %"struct.std::_Rb_tree_node.28"** %43, align 8
  %46 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %43, align 8
  %47 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %42, align 8
  %48 = call dereferenceable(24) %"struct.std::pair.26"* @_ZSt7forwardIRKSt4pairIKxS0_IxbEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::pair.26"* dereferenceable(24) %47) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_(%"class.std::_Rb_tree.20"* %44, %"struct.std::_Rb_tree_node.28"* %46, %"struct.std::pair.26"* dereferenceable(24) %48)
  %49 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %43, align 8
  store %"struct.std::_Rb_tree_node.28"* %49, %"struct.std::_Rb_tree_node.28"** %3
  %50 = load i32, i32* @x.804
  %51 = load i32, i32* @y.805
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1756131931, i32 -1773575195
  store i32 %63, i32* %16
  br label %76

; <label>:64:                                     ; preds = %17
  %65 = load volatile %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %3
  ret %"struct.std::_Rb_tree_node.28"* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::_Rb_tree.20"*, align 8
  %68 = alloca %"struct.std::pair.26"*, align 8
  %69 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %67, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %68, align 8
  %70 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %67, align 8
  %71 = call %"struct.std::_Rb_tree_node.28"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_get_nodeEv(%"class.std::_Rb_tree.20"* %70)
  store %"struct.std::_Rb_tree_node.28"* %71, %"struct.std::_Rb_tree_node.28"** %69, align 8
  %72 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %69, align 8
  %73 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %68, align 8
  %74 = call dereferenceable(24) %"struct.std::pair.26"* @_ZSt7forwardIRKSt4pairIKxS0_IxbEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::pair.26"* dereferenceable(24) %73) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_(%"class.std::_Rb_tree.20"* %70, %"struct.std::_Rb_tree_node.28"* %72, %"struct.std::pair.26"* dereferenceable(24) %74)
  %75 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %69, align 8
  store i32 2023669496, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.std::pair.26"* @_ZSt7forwardIRKSt4pairIKxS0_IxbEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::pair.26"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.std::pair.26"*, align 8
  store %"struct.std::pair.26"* %0, %"struct.std::pair.26"** %2, align 8
  %3 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %2, align 8
  ret %"struct.std::pair.26"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_(%"class.std::_Rb_tree.20"*, %"struct.std::_Rb_tree_node.28"*, %"struct.std::pair.26"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Rb_tree.20"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.28"*, align 8
  %6 = alloca %"struct.std::pair.26"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %4, align 8
  store %"struct.std::_Rb_tree_node.28"* %1, %"struct.std::_Rb_tree_node.28"** %5, align 8
  store %"struct.std::pair.26"* %2, %"struct.std::pair.26"** %6, align 8
  %9 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %4, align 8
  %10 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %5, align 8
  %11 = bitcast %"struct.std::_Rb_tree_node.28"* %10 to i8*
  %12 = bitcast i8* %11 to %"struct.std::_Rb_tree_node.28"*
  %13 = call dereferenceable(1) %"class.std::allocator.21"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.20"* %9) #3
  %14 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %5, align 8
  %15 = invoke %"struct.std::pair.26"* @_ZNSt13_Rb_tree_nodeISt4pairIKxS0_IxbEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.28"* %14)
          to label %16 unwind label %20

; <label>:16:                                     ; preds = %3
  %17 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %6, align 8
  %18 = call dereferenceable(24) %"struct.std::pair.26"* @_ZSt7forwardIRKSt4pairIKxS0_IxbEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::pair.26"* dereferenceable(24) %17) #3
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_(%"class.std::allocator.21"* dereferenceable(1) %13, %"struct.std::pair.26"* %15, %"struct.std::pair.26"* dereferenceable(24) %18)
          to label %19 unwind label %20

; <label>:19:                                     ; preds = %16
  br label %118

; <label>:20:                                     ; preds = %16, %3
  %21 = landingpad { i8*, i32 }
          catch i8* null
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %7, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %8, align 4
  br label %24

; <label>:24:                                     ; preds = %20
  %25 = load i8*, i8** %7, align 8
  %26 = call i8* @__cxa_begin_catch(i8* %25) #3
  %27 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %5, align 8
  %28 = load %"struct.std::_Rb_tree_node.28"*, %"struct.std::_Rb_tree_node.28"** %5, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E(%"class.std::_Rb_tree.20"* %9, %"struct.std::_Rb_tree_node.28"* %28) #3
  invoke void @__cxa_rethrow() #14
          to label %169 unwind label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.808
  %31 = load i32, i32* @y.809
  %32 = add i32 %30, -1096210779
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1096210779
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %170

; <label>:56:                                     ; preds = %29, %170
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %7, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %8, align 4
  %60 = load i32, i32* @x.808
  %61 = load i32, i32* @y.809
  %62 = add i32 %60, 174682236
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 174682236
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %170

; <label>:86:                                     ; preds = %56
  invoke void @__cxa_end_catch()
          to label %87 unwind label %166

; <label>:87:                                     ; preds = %86
  %88 = load i32, i32* @x.808
  %89 = load i32, i32* @y.809
  %90 = sub i32 %88, 558813031
  %91 = sub i32 %90, 1
  %92 = add i32 %91, 558813031
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %174

; <label>:102:                                    ; preds = %87, %174
  %103 = load i32, i32* @x.808
  %104 = load i32, i32* @y.809
  %105 = add i32 %103, 487365332
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, 487365332
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %174

; <label>:117:                                    ; preds = %102
  br label %119

; <label>:118:                                    ; preds = %19
  ret void

; <label>:119:                                    ; preds = %117
  %120 = load i32, i32* @x.808
  %121 = load i32, i32* @y.809
  %122 = sub i32 %120, 384856171
  %123 = sub i32 %122, 1
  %124 = add i32 %123, 384856171
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 false, true
  %133 = and i1 %130, false
  %134 = and i1 %128, %132
  %135 = and i1 %131, false
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 false, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %175

; <label>:146:                                    ; preds = %119, %175
  %147 = load i8*, i8** %7, align 8
  %148 = load i32, i32* %8, align 4
  %149 = insertvalue { i8*, i32 } undef, i8* %147, 0
  %150 = insertvalue { i8*, i32 } %149, i32 %148, 1
  %151 = load i32, i32* @x.808
  %152 = load i32, i32* @y.809
  %153 = sub i32 %151, -1310071257
  %154 = sub i32 %153, 1
  %155 = add i32 %154, -1310071257
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  br i1 %163, label %165, label %175

; <label>:165:                                    ; preds = %146
  resume { i8*, i32 } %150

; <label>:166:                                    ; preds = %86
  %167 = landingpad { i8*, i32 }
          catch i8* null
  %168 = extractvalue { i8*, i32 } %167, 0
  call void @__clang_call_terminate(i8* %168) #11
  unreachable

; <label>:169:                                    ; preds = %24
  unreachable

; <label>:170:                                    ; preds = %56, %29
  %171 = landingpad { i8*, i32 }
          cleanup
  %172 = extractvalue { i8*, i32 } %171, 0
  store i8* %172, i8** %7, align 8
  %173 = extractvalue { i8*, i32 } %171, 1
  store i32 %173, i32* %8, align 4
  br label %56

; <label>:174:                                    ; preds = %102, %87
  br label %102

; <label>:175:                                    ; preds = %146, %119
  %176 = load i8*, i8** %7, align 8
  %177 = load i32, i32* %8, align 4
  %178 = insertvalue { i8*, i32 } undef, i8* %176, 0
  %179 = insertvalue { i8*, i32 } %178, i32 %177, 1
  br label %146
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxS1_IxbEEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_(%"class.std::allocator.21"* dereferenceable(1), %"struct.std::pair.26"*, %"struct.std::pair.26"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.810
  %7 = load i32, i32* @y.811
  %8 = sub i32 %6, 1025096018
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1025096018
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1583016952, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1583016952, label %20
    i32 2055653235, label %28
    i32 91262550, label %63
    i32 1675117221, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 2055653235, i32 1675117221
  store i32 %27, i32* %16
  br label %73

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.21"*, align 8
  %30 = alloca %"struct.std::pair.26"*, align 8
  %31 = alloca %"struct.std::pair.26"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %29, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %30, align 8
  store %"struct.std::pair.26"* %2, %"struct.std::pair.26"** %31, align 8
  %32 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %29, align 8
  %33 = bitcast %"class.std::allocator.21"* %32 to %"class.__gnu_cxx::new_allocator.22"*
  %34 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %30, align 8
  %35 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %31, align 8
  %36 = call dereferenceable(24) %"struct.std::pair.26"* @_ZSt7forwardIRKSt4pairIKxS0_IxbEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::pair.26"* dereferenceable(24) %35) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE9constructIS5_JRKS5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.22"* %33, %"struct.std::pair.26"* %34, %"struct.std::pair.26"* dereferenceable(24) %36)
  %37 = load i32, i32* @x.810
  %38 = load i32, i32* @y.811
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 91262550, i32 1675117221
  store i32 %62, i32* %16
  br label %73

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.21"*, align 8
  %66 = alloca %"struct.std::pair.26"*, align 8
  %67 = alloca %"struct.std::pair.26"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %65, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %66, align 8
  store %"struct.std::pair.26"* %2, %"struct.std::pair.26"** %67, align 8
  %68 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %65, align 8
  %69 = bitcast %"class.std::allocator.21"* %68 to %"class.__gnu_cxx::new_allocator.22"*
  %70 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %66, align 8
  %71 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %67, align 8
  %72 = call dereferenceable(24) %"struct.std::pair.26"* @_ZSt7forwardIRKSt4pairIKxS0_IxbEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::pair.26"* dereferenceable(24) %71) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE9constructIS5_JRKS5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.22"* %69, %"struct.std::pair.26"* %70, %"struct.std::pair.26"* dereferenceable(24) %72)
  store i32 2055653235, i32* %16
  br label %73

; <label>:73:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxS2_IxbEEEE9constructIS5_JRKS5_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.22"*, %"struct.std::pair.26"*, %"struct.std::pair.26"* dereferenceable(24)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  %5 = alloca %"struct.std::pair.26"*, align 8
  %6 = alloca %"struct.std::pair.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %4, align 8
  store %"struct.std::pair.26"* %1, %"struct.std::pair.26"** %5, align 8
  store %"struct.std::pair.26"* %2, %"struct.std::pair.26"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %4, align 8
  %8 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %5, align 8
  %9 = bitcast %"struct.std::pair.26"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.std::pair.26"*
  %11 = load %"struct.std::pair.26"*, %"struct.std::pair.26"** %6, align 8
  %12 = call dereferenceable(24) %"struct.std::pair.26"* @_ZSt7forwardIRKSt4pairIKxS0_IxbEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::pair.26"* dereferenceable(24) %11) #3
  %13 = bitcast %"struct.std::pair.26"* %10 to i8*
  %14 = bitcast %"struct.std::pair.26"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_minimumEPS_(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %3, align 8
  %4 = alloca i32
  store i32 -622461965, i32* %4
  br label %5

; <label>:5:                                      ; preds = %1, %58
  %6 = load i32, i32* %4
  switch i32 %6, label %7 [
    i32 -622461965, label %8
    i32 603657956, label %24
    i32 -1950462452, label %44
    i32 1332394436, label %47
    i32 1146238585, label %51
    i32 60535313, label %53
  ]

; <label>:7:                                      ; preds = %5
  br label %58

; <label>:8:                                      ; preds = %5
  %9 = load i32, i32* @x.814
  %10 = load i32, i32* @y.815
  %11 = add i32 %9, -165455503
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, -165455503
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  %23 = select i1 %21, i32 603657956, i32 60535313
  store i32 %23, i32* %4
  br label %58

; <label>:24:                                     ; preds = %5
  %25 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3, align 8
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %25, i32 0, i32 2
  %27 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %28 = icmp ne %"struct.std::_Rb_tree_node_base"* %27, null
  store i1 %28, i1* %2
  %29 = load i32, i32* @x.814
  %30 = load i32, i32* @y.815
  %31 = sub i32 %29, 1960151333
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1960151333
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1950462452, i32 60535313
  store i32 %43, i32* %4
  br label %58

; <label>:44:                                     ; preds = %5
  %45 = load volatile i1, i1* %2
  %46 = select i1 %45, i32 1332394436, i32 1146238585
  store i32 %46, i32* %4
  br label %58

; <label>:47:                                     ; preds = %5
  %48 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3, align 8
  %49 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %48, i32 0, i32 2
  %50 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %49, align 8
  store %"struct.std::_Rb_tree_node_base"* %50, %"struct.std::_Rb_tree_node_base"** %3, align 8
  store i32 -622461965, i32* %4
  br label %58

; <label>:51:                                     ; preds = %5
  %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3, align 8
  ret %"struct.std::_Rb_tree_node_base"* %52

; <label>:53:                                     ; preds = %5
  %54 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3, align 8
  %55 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %54, i32 0, i32 2
  %56 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %55, align 8
  %57 = icmp ne %"struct.std::_Rb_tree_node_base"* %56, null
  store i32 603657956, i32* %4
  br label %58

; <label>:58:                                     ; preds = %53, %47, %44, %24, %8, %7
  br label %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = alloca i32
  store i32 389739630, i32* %3
  br label %4

; <label>:4:                                      ; preds = %1, %19
  %5 = load i32, i32* %3
  switch i32 %5, label %6 [
    i32 389739630, label %7
    i32 1822006260, label %13
    i32 499840396, label %17
  ]

; <label>:6:                                      ; preds = %4
  br label %19

; <label>:7:                                      ; preds = %4
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %8, i32 0, i32 3
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::_Rb_tree_node_base"* %10, null
  %12 = select i1 %11, i32 1822006260, i32 499840396
  store i32 %12, i32* %3
  br label %19

; <label>:13:                                     ; preds = %4
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %14, i32 0, i32 3
  %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8
  store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %2, align 8
  store i32 389739630, i32* %3
  br label %19

; <label>:17:                                     ; preds = %4
  %18 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"* %18

; <label>:19:                                     ; preds = %13, %7, %6
  br label %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxS0_IxbEESt10_Select1stIS3_ESt4lessIxESaIS3_EE3endEv(%"class.std::_Rb_tree.20"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree.20"*, align 8
  store %"class.std::_Rb_tree.20"* %0, %"class.std::_Rb_tree.20"** %3, align 8
  %4 = load %"class.std::_Rb_tree.20"*, %"class.std::_Rb_tree.20"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.20", %"class.std::_Rb_tree.20"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::pair<long long, bool> >, std::_Select1st<std::pair<const long long, std::pair<long long, bool> > >, std::less<long long>, std::allocator<std::pair<const long long, std::pair<long long, bool> > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxS0_IxbEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s496004947.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  call void @__cxx_global_var_init.2()
  call void @__cxx_global_var_init.3()
  call void @__cxx_global_var_init.4()
  call void @__cxx_global_var_init.5()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
