; ModuleID = 'Project_CodeNet_C++1400/p02368/s884462908.cpp'
source_filename = "Project_CodeNet_C++1400/p02368/s884462908.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.__gnu_cxx::__normal_iterator" = type { i64* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" = type { %"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"* }
%"class.std::vector.5" = type { %"struct.std::_Vector_base.6" }
%"struct.std::_Vector_base.6" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::allocator.2" = type { i8 }
%class.Strongly_Connected_Components = type { [2 x %"class.std::vector.10"], i32, %"class.std::stack", %"class.std::vector.0", %"class.std::vector.5" }
%"class.std::vector.10" = type { %"struct.std::_Vector_base.11" }
%"struct.std::_Vector_base.11" = type { %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl" }
%"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl" = type { %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"* }
%"struct.Strongly_Connected_Components::node" = type <{ i32, i8, [3 x i8], %"class.std::vector.5", i32, [4 x i8] }>
%"class.std::stack" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.std::allocator.7" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.15" = type { i32* }
%"class.__gnu_cxx::__normal_iterator.16" = type { i32* }
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.21" = type { %"class.std::vector.5"* }
%"class.std::allocator.12" = type { i8 }
%"class.__gnu_cxx::new_allocator.13" = type { i8 }
%"class.__gnu_cxx::new_allocator.8" = type { i8 }
%"class.std::allocator.17" = type { i8 }
%"class.__gnu_cxx::new_allocator.18" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }
%"class.std::move_iterator" = type { %"struct.Strongly_Connected_Components::node"* }
%"class.std::move_iterator.20" = type { %"class.std::vector.5"* }
%"struct.__gnu_cxx::__ops::_Iter_less_val" = type { i8 }
%"struct.__gnu_cxx::__ops::_Val_less_iter" = type { i8 }
%"class.std::move_iterator.22" = type { i32* }

$_ZSt3absd = comdat any

$_ZNSt6vectorIxSaIxEE5beginEv = comdat any

$_ZNSt6vectorIxSaIxEE3endEv = comdat any

$_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaISt6vectorIiSaIiEEED2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIiSaIiEE9push_backERKi = comdat any

$_ZN29Strongly_Connected_ComponentsC2ERKSt6vectorIS0_IiSaIiEESaIS2_EE = comdat any

$_ZN29Strongly_Connected_Components11get_scc_gidEv = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZN29Strongly_Connected_ComponentsD2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEC2Ev = comdat any

$_ZNSt5dequeIiSaIiEEC2Ev = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEEC2EOS2_ = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE6resizeEm = comdat any

$_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm = comdat any

$_ZN29Strongly_Connected_Components4nodeaSEOS0_ = comdat any

$_ZN29Strongly_Connected_Components4nodeD2Ev = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EEixEm = comdat any

$_ZNKSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNKSt6vectorIiSaIiEE3endEv = comdat any

$_ZN9__gnu_cxxneIPKiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESB_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEppEv = comdat any

$_ZN29Strongly_Connected_Components7scc_dfsEii = comdat any

$_ZNKSt5stackIiSt5dequeIiSaIiEEE4sizeEv = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEE3popEv = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE9push_backEOS1_ = comdat any

$_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE4backEv = comdat any

$_ZNSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt6vectorIiSaIiEE3endEv = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN29Strongly_Connected_Components4nodeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEEC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt5dequeIiSaIiEEC2EOS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_ = comdat any

$_ZSt4swapIPPiEvRT_S3_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZSt27__uninitialized_default_n_aIPN29Strongly_Connected_Components4nodeEmS1_ET_S3_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN29Strongly_Connected_Components4nodeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt8_DestroyIPN29Strongly_Connected_Components4nodeES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZSt25__uninitialized_default_nIPN29Strongly_Connected_Components4nodeEmET_S3_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN29Strongly_Connected_Components4nodeEmEET_S5_T0_ = comdat any

$_ZSt10_ConstructIN29Strongly_Connected_Components4nodeEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN29Strongly_Connected_Components4nodeEEPT_RS2_ = comdat any

$_ZSt8_DestroyIPN29Strongly_Connected_Components4nodeEEvT_S3_ = comdat any

$_ZN29Strongly_Connected_Components4nodeC2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN29Strongly_Connected_Components4nodeEEEvT_S5_ = comdat any

$_ZSt8_DestroyIN29Strongly_Connected_Components4nodeEEvPT_ = comdat any

$_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN29Strongly_Connected_Components4nodeEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN29Strongly_Connected_Components4nodeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN29Strongly_Connected_Components4nodeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN29Strongly_Connected_Components4nodeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN29Strongly_Connected_Components4nodeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN29Strongly_Connected_Components4nodeEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPN29Strongly_Connected_Components4nodeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructIN29Strongly_Connected_Components4nodeEJS1_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPN29Strongly_Connected_Components4nodeEEdeEv = comdat any

$_ZNSt13move_iteratorIPN29Strongly_Connected_Components4nodeEEppEv = comdat any

$_ZSteqIPN29Strongly_Connected_Components4nodeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPN29Strongly_Connected_Components4nodeEE4baseEv = comdat any

$_ZSt7forwardIN29Strongly_Connected_Components4nodeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZN29Strongly_Connected_Components4nodeC2EOS0_ = comdat any

$_ZNSt6vectorIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EOS1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZSt4swapIPiEvRT_S2_ = comdat any

$_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt13move_iteratorIPN29Strongly_Connected_Components4nodeEEC2ES2_ = comdat any

$_ZNSt16allocator_traitsISaIN29Strongly_Connected_Components4nodeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEE10deallocateEPS2_m = comdat any

$_ZNSt6vectorIiSaIiEEaSEOS1_ = comdat any

$_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv = comdat any

$_ZNSt6vectorIiSaIiEEC2ERKS0_ = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZSt15__alloc_on_moveISaIiEEvRT_S2_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZSt18__do_alloc_on_moveISaIiEEvRT_S2_St17integral_constantIbLb1EE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNSt5stackIiSt5dequeIiSaIiEEE4pushERKi = comdat any

$_ZNSt5dequeIiSaIiEE9push_backERKi = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNKSt5dequeIiSaIiEE4sizeEv = comdat any

$_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_ = comdat any

$_ZNSt5dequeIiSaIiEE4backEv = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEmmEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt5dequeIiSaIiEE8pop_backEv = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNSt5dequeIiSaIiEE15_M_pop_back_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_ = comdat any

$_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE9constructIS3_JS3_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_ = comdat any

$_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_ = comdat any

$_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE7destroyIS3_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m = comdat any

$_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_less_iterEv = comdat any

$_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_ = comdat any

$_ZSt4__lgl = comdat any

$_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_ = comdat any

$_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_T0_ = comdat any

$_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_ = comdat any

$_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZN9__gnu_cxxltIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_ = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv = comdat any

$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_ = comdat any

$_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliNS0_5__ops14_Iter_less_valEEvT_T0_SA_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valENS0_15_Iter_less_iterE = comdat any

$_ZNK9__gnu_cxx5__ops14_Iter_less_valclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEEbT_RT0_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv = comdat any

$_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEl = comdat any

$_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_S9_T0_ = comdat any

$_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_ = comdat any

$_ZSt4swapIiEvRT_S1_ = comdat any

$_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZN9__gnu_cxxeqIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET0_T_S8_S7_ = comdat any

$_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops14_Val_less_iterEEvT_T0_ = comdat any

$_ZN9__gnu_cxx5__ops15__val_comp_iterENS0_15_Iter_less_iterE = comdat any

$_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET1_T0_S8_S7_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_ = comdat any

$_ZSt22__copy_move_backward_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb0EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx5__ops14_Val_less_iterclIiNS_17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEbRT_T0_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEmiEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSaIN29Strongly_Connected_Components4nodeEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEED2Ev = comdat any

$_ZNKSt6vectorIiSaIiEE5emptyEv = comdat any

$_ZNSt6vectorIiSaIiEE6resizeEm = comdat any

$_ZNSt6vectorIiSaIiEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxxeqIPKiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESB_ = comdat any

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZSt25__uninitialized_default_nIPimET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_ = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_ = comdat any

$_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s884462908.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.2 = common global i32 0
@y.3 = common global i32 0
@x.4 = common global i32 0
@y.5 = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0
@x.622 = common global i32 0
@y.623 = common global i32 0
@x.624 = common global i32 0
@y.625 = common global i32 0
@x.626 = common global i32 0
@y.627 = common global i32 0
@x.628 = common global i32 0
@y.629 = common global i32 0
@x.630 = common global i32 0
@y.631 = common global i32 0
@x.632 = common global i32 0
@y.633 = common global i32 0
@x.634 = common global i32 0
@y.635 = common global i32 0
@x.636 = common global i32 0
@y.637 = common global i32 0
@x.638 = common global i32 0
@y.639 = common global i32 0
@x.640 = common global i32 0
@y.641 = common global i32 0
@x.642 = common global i32 0
@y.643 = common global i32 0
@x.644 = common global i32 0
@y.645 = common global i32 0
@x.646 = common global i32 0
@y.647 = common global i32 0
@x.648 = common global i32 0
@y.649 = common global i32 0
@x.650 = common global i32 0
@y.651 = common global i32 0
@x.652 = common global i32 0
@y.653 = common global i32 0
@x.654 = common global i32 0
@y.655 = common global i32 0
@x.656 = common global i32 0
@y.657 = common global i32 0
@x.658 = common global i32 0
@y.659 = common global i32 0
@x.660 = common global i32 0
@y.661 = common global i32 0
@x.662 = common global i32 0
@y.663 = common global i32 0
@x.664 = common global i32 0
@y.665 = common global i32 0
@x.666 = common global i32 0
@y.667 = common global i32 0
@x.668 = common global i32 0
@y.669 = common global i32 0
@x.670 = common global i32 0
@y.671 = common global i32 0
@x.672 = common global i32 0
@y.673 = common global i32 0
@x.674 = common global i32 0
@y.675 = common global i32 0
@x.676 = common global i32 0
@y.677 = common global i32 0
@x.678 = common global i32 0
@y.679 = common global i32 0
@x.680 = common global i32 0
@y.681 = common global i32 0
@x.682 = common global i32 0
@y.683 = common global i32 0
@x.684 = common global i32 0
@y.685 = common global i32 0
@x.686 = common global i32 0
@y.687 = common global i32 0
@x.688 = common global i32 0
@y.689 = common global i32 0
@x.690 = common global i32 0
@y.691 = common global i32 0
@x.692 = common global i32 0
@y.693 = common global i32 0
@x.694 = common global i32 0
@y.695 = common global i32 0
@x.696 = common global i32 0
@y.697 = common global i32 0
@x.698 = common global i32 0
@y.699 = common global i32 0
@x.700 = common global i32 0
@y.701 = common global i32 0
@x.702 = common global i32 0
@y.703 = common global i32 0
@x.704 = common global i32 0
@y.705 = common global i32 0
@x.706 = common global i32 0
@y.707 = common global i32 0
@x.708 = common global i32 0
@y.709 = common global i32 0
@x.710 = common global i32 0
@y.711 = common global i32 0
@x.712 = common global i32 0
@y.713 = common global i32 0
@x.714 = common global i32 0
@y.715 = common global i32 0
@x.716 = common global i32 0
@y.717 = common global i32 0
@x.718 = common global i32 0
@y.719 = common global i32 0
@x.720 = common global i32 0
@y.721 = common global i32 0
@x.722 = common global i32 0
@y.723 = common global i32 0
@x.724 = common global i32 0
@y.725 = common global i32 0
@x.726 = common global i32 0
@y.727 = common global i32 0
@x.728 = common global i32 0
@y.729 = common global i32 0
@x.730 = common global i32 0
@y.731 = common global i32 0
@x.732 = common global i32 0
@y.733 = common global i32 0
@x.734 = common global i32 0
@y.735 = common global i32 0
@x.736 = common global i32 0
@y.737 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define zeroext i1 @_Z3feqdd(double, double) #0 {
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  store double %0, double* %3, align 8
  store double %1, double* %4, align 8
  %5 = load double, double* %3, align 8
  %6 = load double, double* %4, align 8
  %7 = fsub double %5, %6
  %8 = call double @_ZSt3absd(double %7)
  %9 = fcmp ole double %8, 1.000000e-07
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZSt3absd(double) #4 comdat {
  %2 = alloca double
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.4
  %6 = load i32, i32* @y.5
  %7 = add i32 %5, 1929143130
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1929143130
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1231633591, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1231633591, label %19
    i32 -319160462, label %27
    i32 1227087895, label %45
    i32 1701151616, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -319160462, i32 1701151616
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca double, align 8
  store double %0, double* %28, align 8
  %29 = load double, double* %28, align 8
  %30 = call double @llvm.fabs.f64(double %29)
  store double %30, double* %2
  %31 = load i32, i32* @x.4
  %32 = load i32, i32* @y.5
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1227087895, i32 1701151616
  store i32 %44, i32* %15
  br label %51

; <label>:45:                                     ; preds = %16
  %46 = load volatile double, double* %2
  ret double %46

; <label>:47:                                     ; preds = %16
  %48 = alloca double, align 8
  store double %0, double* %48, align 8
  %49 = load double, double* %48, align 8
  %50 = call double @llvm.fabs.f64(double %49)
  store i32 -319160462, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @_Z7inrangexx(i64, i64) #4 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.6
  %10 = load i32, i32* @y.7
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -1232031966, i32* %18
  %19 = alloca i1
  br label %20

; <label>:20:                                     ; preds = %2, %127
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -1232031966, label %23
    i32 1891901064, label %31
    i32 -730831612, label %66
    i32 666620446, label %69
    i32 1946823716, label %75
    i32 -241762595, label %91
    i32 1875250899, label %119
    i32 -657020159, label %121
    i32 897264368, label %126
  ]

; <label>:22:                                     ; preds = %20
  br label %127

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1891901064, i32 -657020159
  store i32 %30, i32* %18
  br label %127

; <label>:31:                                     ; preds = %20
  %32 = alloca i64, align 8
  store i64* %32, i64** %6
  %33 = alloca i64, align 8
  store i64* %33, i64** %5
  %34 = load volatile i64*, i64** %6
  store i64 %0, i64* %34, align 8
  %35 = load volatile i64*, i64** %5
  store i64 %1, i64* %35, align 8
  %36 = load volatile i64*, i64** %6
  %37 = load i64, i64* %36, align 8
  %38 = icmp sge i64 %37, 0
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.6
  %40 = load i32, i32* @y.7
  %41 = sub i32 %39, -89683232
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -89683232
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -730831612, i32 -657020159
  store i32 %65, i32* %18
  br label %127

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 666620446, i32 1946823716
  store i32 %68, i32* %18
  store i1 false, i1* %19
  br label %127

; <label>:69:                                     ; preds = %20
  %70 = load volatile i64*, i64** %6
  %71 = load i64, i64* %70, align 8
  %72 = load volatile i64*, i64** %5
  %73 = load i64, i64* %72, align 8
  %74 = icmp slt i64 %71, %73
  store i32 1946823716, i32* %18
  store i1 %74, i1* %19
  br label %127

; <label>:75:                                     ; preds = %20
  %76 = load i1, i1* %19
  store i1 %76, i1* %3
  %77 = load i32, i32* @x.6
  %78 = load i32, i32* @y.7
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 -241762595, i32 897264368
  store i32 %90, i32* %18
  br label %127

; <label>:91:                                     ; preds = %20
  %92 = load i32, i32* @x.6
  %93 = load i32, i32* @y.7
  %94 = add i32 %92, 846467833
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 846467833
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 1875250899, i32 897264368
  store i32 %118, i32* %18
  br label %127

; <label>:119:                                    ; preds = %20
  %120 = load volatile i1, i1* %3
  ret i1 %120

; <label>:121:                                    ; preds = %20
  %122 = alloca i64, align 8
  %123 = alloca i64, align 8
  store i64 %0, i64* %122, align 8
  store i64 %1, i64* %123, align 8
  %124 = load i64, i64* %122, align 8
  %125 = icmp sge i64 %124, 0
  store i32 1891901064, i32* %18
  br label %127

; <label>:126:                                    ; preds = %20
  store i32 -241762595, i32* %18
  br label %127

; <label>:127:                                    ; preds = %126, %121, %91, %75, %69, %66, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @_Z7inrangeSt6vectorIxSaIxEEx(%"class.std::vector"*, i64) #4 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1, align 1
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::vector"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca i64, align 8
  store i64 %1, i64* %8, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %9, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  %14 = call i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector"* %13) #3
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store i64* %14, i64** %15, align 8
  %16 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  %17 = call i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector"* %16) #3
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store i64* %17, i64** %18, align 8
  %19 = alloca i32
  store i32 -1339639671, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %400
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1339639671, label %23
    i32 -491986244, label %51
    i32 155091929, label %67
    i32 644937312, label %70
    i32 1734542990, label %85
    i32 -684667104, label %117
    i32 694043739, label %120
    i32 -665492737, label %136
    i32 -1381660734, label %166
    i32 -1297056236, label %169
    i32 -1640767326, label %185
    i32 1786838400, label %213
    i32 -323271993, label %214
    i32 -92190945, label %229
    i32 1786706486, label %257
    i32 -827505533, label %258
    i32 -1192581760, label %285
    i32 -1545597963, label %302
    i32 1777348806, label %303
    i32 -225228139, label %319
    i32 1309499003, label %334
    i32 -1488789641, label %335
    i32 1125537416, label %363
    i32 787562910, label %380
    i32 1125752475, label %382
    i32 1903998360, label %384
    i32 1764204709, label %389
    i32 -82859337, label %393
    i32 -1132552095, label %394
    i32 316947680, label %395
    i32 964656235, label %397
    i32 1664418317, label %398
  ]

; <label>:22:                                     ; preds = %20
  br label %400

; <label>:23:                                     ; preds = %20
  %24 = load i32, i32* @x.8
  %25 = load i32, i32* @y.9
  %26 = add i32 %24, -1758782997
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -1758782997
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -491986244, i32 1125752475
  store i32 %50, i32* %19
  br label %400

; <label>:51:                                     ; preds = %20
  %52 = call zeroext i1 @_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %10, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11) #3
  store i1 %52, i1* %6
  %53 = load i32, i32* @x.8
  %54 = load i32, i32* @y.9
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 155091929, i32 1125752475
  store i32 %66, i32* %19
  br label %400

; <label>:67:                                     ; preds = %20
  %68 = load volatile i1, i1* %6
  %69 = select i1 %68, i32 644937312, i32 1777348806
  store i32 %69, i32* %19
  br label %400

; <label>:70:                                     ; preds = %20
  %71 = load i32, i32* @x.8
  %72 = load i32, i32* @y.9
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 1734542990, i32 1903998360
  store i32 %84, i32* %19
  br label %400

; <label>:85:                                     ; preds = %20
  %86 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %10) #3
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %12, align 8
  %88 = load i64, i64* %12, align 8
  %89 = icmp sge i64 %88, 0
  store i1 %89, i1* %5
  %90 = load i32, i32* @x.8
  %91 = load i32, i32* @y.9
  %92 = add i32 %90, 1906544916
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, 1906544916
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 -684667104, i32 1903998360
  store i32 %116, i32* %19
  br label %400

; <label>:117:                                    ; preds = %20
  %118 = load volatile i1, i1* %5
  %119 = select i1 %118, i32 694043739, i32 -1297056236
  store i32 %119, i32* %19
  br label %400

; <label>:120:                                    ; preds = %20
  %121 = load i32, i32* @x.8
  %122 = load i32, i32* @y.9
  %123 = sub i32 %121, 2107701930
  %124 = sub i32 %123, 1
  %125 = add i32 %124, 2107701930
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  %135 = select i1 %133, i32 -665492737, i32 1764204709
  store i32 %135, i32* %19
  br label %400

; <label>:136:                                    ; preds = %20
  %137 = load i64, i64* %12, align 8
  %138 = load i64, i64* %8, align 8
  %139 = icmp slt i64 %137, %138
  store i1 %139, i1* %4
  %140 = load i32, i32* @x.8
  %141 = load i32, i32* @y.9
  %142 = sub i32 0, 1
  %143 = add i32 %140, %142
  %144 = sub i32 %140, 1
  %145 = mul i32 %140, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %141, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 false, true
  %152 = and i1 %149, false
  %153 = and i1 %147, %151
  %154 = and i1 %150, false
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 false, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  %165 = select i1 %163, i32 -1381660734, i32 1764204709
  store i32 %165, i32* %19
  br label %400

; <label>:166:                                    ; preds = %20
  %167 = load volatile i1, i1* %4
  %168 = select i1 %167, i32 -323271993, i32 -1297056236
  store i32 %168, i32* %19
  br label %400

; <label>:169:                                    ; preds = %20
  %170 = load i32, i32* @x.8
  %171 = load i32, i32* @y.9
  %172 = sub i32 %170, 591021066
  %173 = sub i32 %172, 1
  %174 = add i32 %173, 591021066
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  %184 = select i1 %182, i32 -1640767326, i32 -82859337
  store i32 %184, i32* %19
  br label %400

; <label>:185:                                    ; preds = %20
  store i1 false, i1* %7, align 1
  %186 = load i32, i32* @x.8
  %187 = load i32, i32* @y.9
  %188 = sub i32 %186, 486312390
  %189 = sub i32 %188, 1
  %190 = add i32 %189, 486312390
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = xor i1 %194, true
  %197 = xor i1 %195, true
  %198 = xor i1 false, true
  %199 = and i1 %196, false
  %200 = and i1 %194, %198
  %201 = and i1 %197, false
  %202 = and i1 %195, %198
  %203 = or i1 %199, %200
  %204 = or i1 %201, %202
  %205 = xor i1 %203, %204
  %206 = or i1 %196, %197
  %207 = xor i1 %206, true
  %208 = or i1 false, %198
  %209 = and i1 %207, %208
  %210 = or i1 %205, %209
  %211 = or i1 %194, %195
  %212 = select i1 %210, i32 1786838400, i32 -82859337
  store i32 %212, i32* %19
  br label %400

; <label>:213:                                    ; preds = %20
  store i32 -1488789641, i32* %19
  br label %400

; <label>:214:                                    ; preds = %20
  %215 = load i32, i32* @x.8
  %216 = load i32, i32* @y.9
  %217 = sub i32 0, 1
  %218 = add i32 %215, %217
  %219 = sub i32 %215, 1
  %220 = mul i32 %215, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %216, 10
  %224 = and i1 %222, %223
  %225 = xor i1 %222, %223
  %226 = or i1 %224, %225
  %227 = or i1 %222, %223
  %228 = select i1 %226, i32 -92190945, i32 -1132552095
  store i32 %228, i32* %19
  br label %400

; <label>:229:                                    ; preds = %20
  %230 = load i32, i32* @x.8
  %231 = load i32, i32* @y.9
  %232 = add i32 %230, 587829306
  %233 = sub i32 %232, 1
  %234 = sub i32 %233, 587829306
  %235 = sub i32 %230, 1
  %236 = mul i32 %230, %234
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %231, 10
  %240 = xor i1 %238, true
  %241 = xor i1 %239, true
  %242 = xor i1 true, true
  %243 = and i1 %240, true
  %244 = and i1 %238, %242
  %245 = and i1 %241, true
  %246 = and i1 %239, %242
  %247 = or i1 %243, %244
  %248 = or i1 %245, %246
  %249 = xor i1 %247, %248
  %250 = or i1 %240, %241
  %251 = xor i1 %250, true
  %252 = or i1 true, %242
  %253 = and i1 %251, %252
  %254 = or i1 %249, %253
  %255 = or i1 %238, %239
  %256 = select i1 %254, i32 1786706486, i32 -1132552095
  store i32 %256, i32* %19
  br label %400

; <label>:257:                                    ; preds = %20
  store i32 -827505533, i32* %19
  br label %400

; <label>:258:                                    ; preds = %20
  %259 = load i32, i32* @x.8
  %260 = load i32, i32* @y.9
  %261 = sub i32 0, 1
  %262 = add i32 %259, %261
  %263 = sub i32 %259, 1
  %264 = mul i32 %259, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %260, 10
  %268 = xor i1 %266, true
  %269 = xor i1 %267, true
  %270 = xor i1 true, true
  %271 = and i1 %268, true
  %272 = and i1 %266, %270
  %273 = and i1 %269, true
  %274 = and i1 %267, %270
  %275 = or i1 %271, %272
  %276 = or i1 %273, %274
  %277 = xor i1 %275, %276
  %278 = or i1 %268, %269
  %279 = xor i1 %278, true
  %280 = or i1 true, %270
  %281 = and i1 %279, %280
  %282 = or i1 %277, %281
  %283 = or i1 %266, %267
  %284 = select i1 %282, i32 -1192581760, i32 316947680
  store i32 %284, i32* %19
  br label %400

; <label>:285:                                    ; preds = %20
  %286 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator"* %10) #3
  %287 = load i32, i32* @x.8
  %288 = load i32, i32* @y.9
  %289 = add i32 %287, -2016970622
  %290 = sub i32 %289, 1
  %291 = sub i32 %290, -2016970622
  %292 = sub i32 %287, 1
  %293 = mul i32 %287, %291
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %288, 10
  %297 = and i1 %295, %296
  %298 = xor i1 %295, %296
  %299 = or i1 %297, %298
  %300 = or i1 %295, %296
  %301 = select i1 %299, i32 -1545597963, i32 316947680
  store i32 %301, i32* %19
  br label %400

; <label>:302:                                    ; preds = %20
  store i32 -1339639671, i32* %19
  br label %400

; <label>:303:                                    ; preds = %20
  %304 = load i32, i32* @x.8
  %305 = load i32, i32* @y.9
  %306 = sub i32 %304, 513179387
  %307 = sub i32 %306, 1
  %308 = add i32 %307, 513179387
  %309 = sub i32 %304, 1
  %310 = mul i32 %304, %308
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %305, 10
  %314 = and i1 %312, %313
  %315 = xor i1 %312, %313
  %316 = or i1 %314, %315
  %317 = or i1 %312, %313
  %318 = select i1 %316, i32 -225228139, i32 964656235
  store i32 %318, i32* %19
  br label %400

; <label>:319:                                    ; preds = %20
  store i1 true, i1* %7, align 1
  %320 = load i32, i32* @x.8
  %321 = load i32, i32* @y.9
  %322 = sub i32 0, 1
  %323 = add i32 %320, %322
  %324 = sub i32 %320, 1
  %325 = mul i32 %320, %323
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %321, 10
  %329 = and i1 %327, %328
  %330 = xor i1 %327, %328
  %331 = or i1 %329, %330
  %332 = or i1 %327, %328
  %333 = select i1 %331, i32 1309499003, i32 964656235
  store i32 %333, i32* %19
  br label %400

; <label>:334:                                    ; preds = %20
  store i32 -1488789641, i32* %19
  br label %400

; <label>:335:                                    ; preds = %20
  %336 = load i32, i32* @x.8
  %337 = load i32, i32* @y.9
  %338 = add i32 %336, 2017224771
  %339 = sub i32 %338, 1
  %340 = sub i32 %339, 2017224771
  %341 = sub i32 %336, 1
  %342 = mul i32 %336, %340
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %337, 10
  %346 = xor i1 %344, true
  %347 = xor i1 %345, true
  %348 = xor i1 true, true
  %349 = and i1 %346, true
  %350 = and i1 %344, %348
  %351 = and i1 %347, true
  %352 = and i1 %345, %348
  %353 = or i1 %349, %350
  %354 = or i1 %351, %352
  %355 = xor i1 %353, %354
  %356 = or i1 %346, %347
  %357 = xor i1 %356, true
  %358 = or i1 true, %348
  %359 = and i1 %357, %358
  %360 = or i1 %355, %359
  %361 = or i1 %344, %345
  %362 = select i1 %360, i32 1125537416, i32 1664418317
  store i32 %362, i32* %19
  br label %400

; <label>:363:                                    ; preds = %20
  %364 = load i1, i1* %7, align 1
  store i1 %364, i1* %3
  %365 = load i32, i32* @x.8
  %366 = load i32, i32* @y.9
  %367 = add i32 %365, -1952110714
  %368 = sub i32 %367, 1
  %369 = sub i32 %368, -1952110714
  %370 = sub i32 %365, 1
  %371 = mul i32 %365, %369
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %366, 10
  %375 = and i1 %373, %374
  %376 = xor i1 %373, %374
  %377 = or i1 %375, %376
  %378 = or i1 %373, %374
  %379 = select i1 %377, i32 787562910, i32 1664418317
  store i32 %379, i32* %19
  br label %400

; <label>:380:                                    ; preds = %20
  %381 = load volatile i1, i1* %3
  ret i1 %381

; <label>:382:                                    ; preds = %20
  %383 = call zeroext i1 @_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %10, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11) #3
  store i32 -491986244, i32* %19
  br label %400

; <label>:384:                                    ; preds = %20
  %385 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %10) #3
  %386 = load i64, i64* %385, align 8
  store i64 %386, i64* %12, align 8
  %387 = load i64, i64* %12, align 8
  %388 = icmp sge i64 %387, 0
  store i32 1734542990, i32* %19
  br label %400

; <label>:389:                                    ; preds = %20
  %390 = load i64, i64* %12, align 8
  %391 = load i64, i64* %8, align 8
  %392 = icmp slt i64 %390, %391
  store i32 -665492737, i32* %19
  br label %400

; <label>:393:                                    ; preds = %20
  store i1 false, i1* %7, align 1
  store i32 -1640767326, i32* %19
  br label %400

; <label>:394:                                    ; preds = %20
  store i32 -92190945, i32* %19
  br label %400

; <label>:395:                                    ; preds = %20
  %396 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator"* %10) #3
  store i32 -1192581760, i32* %19
  br label %400

; <label>:397:                                    ; preds = %20
  store i1 true, i1* %7, align 1
  store i32 -225228139, i32* %19
  br label %400

; <label>:398:                                    ; preds = %20
  %399 = load i1, i1* %7, align 1
  store i32 1125537416, i32* %19
  br label %400

; <label>:400:                                    ; preds = %398, %397, %395, %394, %393, %389, %384, %382, %363, %335, %334, %319, %303, %302, %285, %258, %257, %229, %214, %213, %185, %169, %166, %136, %120, %117, %85, %70, %67, %51, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %2, i64** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %2, i64** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load i64*, i64** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ne i64* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.16
  %6 = load i32, i32* @y.17
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1949060610, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1949060610, label %18
    i32 -1301448265, label %38
    i32 1095690357, label %70
    i32 -1877884763, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1301448265, i32 -1877884763
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %39, align 8
  %40 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  store i64* %42, i64** %2
  %43 = load i32, i32* @x.16
  %44 = load i32, i32* @y.17
  %45 = add i32 %43, 556428251
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 556428251
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1095690357, i32 -1877884763
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile i64*, i64** %2
  ret i64* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %74, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  store i32 -1301448265, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.18
  %6 = load i32, i32* @y.19
  %7 = sub i32 %5, -968132772
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -968132772
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1579896844, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1579896844, label %19
    i32 1872843742, label %27
    i32 -1160520566, label %49
    i32 -1551672313, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1872843742, i32 -1551672313
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %29, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i32 1
  store i64* %33, i64** %31, align 8
  %34 = load i32, i32* @x.18
  %35 = load i32, i32* @y.19
  %36 = sub i32 %34, 1424687700
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1424687700
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1160520566, i32 -1551672313
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  %50 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds i64, i64* %55, i32 1
  store i64* %56, i64** %54, align 8
  store i32 1872843742, i32* %15
  br label %57

; <label>:57:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define i32 @_Z8ceillog2x(i64) #4 {
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  store i64 %0, i64* %2, align 8
  store i32 0, i32* %3, align 4
  %4 = load i64, i64* %2, align 8
  %5 = sub i64 0, %4
  %6 = sub i64 0, -1
  %7 = add i64 %5, %6
  %8 = sub i64 0, %7
  %9 = add nsw i64 %4, -1
  store i64 %8, i64* %2, align 8
  %10 = alloca i32
  store i32 -1199389370, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %28
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -1199389370, label %14
    i32 1850444364, label %18
    i32 -665088831, label %26
  ]

; <label>:13:                                     ; preds = %11
  br label %28

; <label>:14:                                     ; preds = %11
  %15 = load i64, i64* %2, align 8
  %16 = icmp sgt i64 %15, 0
  %17 = select i1 %16, i32 1850444364, i32 -665088831
  store i32 %17, i32* %10
  br label %28

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* %3, align 4
  %20 = sub i32 %19, 784040369
  %21 = add i32 %20, 1
  %22 = add i32 %21, 784040369
  %23 = add nsw i32 %19, 1
  store i32 %22, i32* %3, align 4
  %24 = load i64, i64* %2, align 8
  %25 = ashr i64 %24, 1
  store i64 %25, i64* %2, align 8
  store i32 -1199389370, i32* %10
  br label %28

; <label>:26:                                     ; preds = %11
  %27 = load i32, i32* %3, align 4
  ret i32 %27

; <label>:28:                                     ; preds = %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z4rndfd(double) #4 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.22
  %6 = load i32, i32* @y.23
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1276728919, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %75
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1276728919, label %18
    i32 1877177478, label %38
    i32 1344100294, label %61
    i32 -586067549, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %75

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1877177478, i32 -586067549
  store i32 %37, i32* %14
  br label %75

; <label>:38:                                     ; preds = %15
  %39 = alloca double, align 8
  store double %0, double* %39, align 8
  %40 = load double, double* %39, align 8
  %41 = load double, double* %39, align 8
  %42 = fcmp oge double %41, 0.000000e+00
  %43 = select i1 %42, double 5.000000e-01, double -5.000000e-01
  %44 = fadd double %40, %43
  %45 = fptosi double %44 to i64
  store i64 %45, i64* %2
  %46 = load i32, i32* @x.22
  %47 = load i32, i32* @y.23
  %48 = add i32 %46, 968033790
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 968033790
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1344100294, i32 -586067549
  store i32 %60, i32* %14
  br label %75

; <label>:61:                                     ; preds = %15
  %62 = load volatile i64, i64* %2
  ret i64 %62

; <label>:63:                                     ; preds = %15
  %64 = alloca double, align 8
  store double %0, double* %64, align 8
  %65 = load double, double* %64, align 8
  %66 = load double, double* %64, align 8
  %67 = fcmp oge double %66, 0.000000e+00
  %68 = select i1 %67, double 5.000000e-01, double -5.000000e-01
  %69 = fsub double %65, %68
  %70 = fmul double %69, %68
  %71 = fsub double -0.000000e+00, %65
  %72 = fadd double %71, %68
  %73 = fadd double %65, %68
  %74 = fptosi double %73 to i64
  store i32 1877177478, i32* %14
  br label %75

; <label>:75:                                     ; preds = %63, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z9floorsqrtx(i64) #4 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %4 = load i64, i64* %2, align 8
  %5 = sitofp i64 %4 to double
  %6 = call double @sqrt(double %5) #3
  %7 = fptosi double %6 to i64
  store i64 %7, i64* %3, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load i64, i64* %3, align 8
  %10 = load i64, i64* %3, align 8
  %11 = mul nsw i64 %9, %10
  %12 = load i64, i64* %2, align 8
  %13 = icmp sle i64 %11, %12
  %14 = select i1 %13, i32 0, i32 -1
  %15 = sext i32 %14 to i64
  %16 = sub i64 0, %15
  %17 = sub i64 %8, %16
  %18 = add nsw i64 %8, %15
  ret i64 %17
}

; Function Attrs: nounwind
declare double @sqrt(double) #2

; Function Attrs: noinline nounwind uwtable
define i64 @_Z8ceilsqrtx(i64) #4 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %4 = load i64, i64* %2, align 8
  %5 = sitofp i64 %4 to double
  %6 = call double @sqrt(double %5) #3
  %7 = fptosi double %6 to i64
  store i64 %7, i64* %3, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load i64, i64* %2, align 8
  %10 = load i64, i64* %3, align 8
  %11 = load i64, i64* %3, align 8
  %12 = mul nsw i64 %10, %11
  %13 = icmp sle i64 %9, %12
  %14 = select i1 %13, i32 0, i32 1
  %15 = sext i32 %14 to i64
  %16 = sub i64 0, %8
  %17 = sub i64 0, %15
  %18 = add i64 %16, %17
  %19 = sub i64 0, %18
  %20 = add nsw i64 %8, %15
  ret i64 %19
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z6rnddivxx(i64, i64) #4 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.28
  %7 = load i32, i32* @y.29
  %8 = sub i32 %6, 395824972
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 395824972
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -788022259, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %173
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -788022259, label %20
    i32 -794836458, label %28
    i32 742757989, label %73
    i32 -975612555, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %173

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -794836458, i32 -975612555
  store i32 %27, i32* %16
  br label %173

; <label>:28:                                     ; preds = %17
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  store i64 %0, i64* %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load i64, i64* %29, align 8
  %32 = load i64, i64* %30, align 8
  %33 = sdiv i64 %31, %32
  %34 = load i64, i64* %29, align 8
  %35 = load i64, i64* %30, align 8
  %36 = srem i64 %34, %35
  %37 = mul nsw i64 %36, 2
  %38 = load i64, i64* %30, align 8
  %39 = icmp sge i64 %37, %38
  %40 = select i1 %39, i32 1, i32 0
  %41 = sext i32 %40 to i64
  %42 = sub i64 %33, 6090166028545602134
  %43 = add i64 %42, %41
  %44 = add i64 %43, 6090166028545602134
  %45 = add nsw i64 %33, %41
  store i64 %44, i64* %3
  %46 = load i32, i32* @x.28
  %47 = load i32, i32* @y.29
  %48 = sub i32 %46, 1100572010
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1100572010
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 742757989, i32 -975612555
  store i32 %72, i32* %16
  br label %173

; <label>:73:                                     ; preds = %17
  %74 = load volatile i64, i64* %3
  ret i64 %74

; <label>:75:                                     ; preds = %17
  %76 = alloca i64, align 8
  %77 = alloca i64, align 8
  store i64 %0, i64* %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load i64, i64* %76, align 8
  %79 = load i64, i64* %77, align 8
  %80 = shl i64 %78, %79
  %81 = shl i64 %78, %79
  %82 = sub i64 %78, -8973384386992972369
  %83 = sub i64 %82, %79
  %84 = add i64 %83, -8973384386992972369
  %85 = sub i64 %78, %79
  %86 = mul i64 %84, %79
  %87 = sub i64 0, %79
  %88 = add i64 %78, %87
  %89 = sub i64 %78, %79
  %90 = mul i64 %88, %79
  %91 = add i64 %78, -7235984194778643166
  %92 = sub i64 %91, %79
  %93 = sub i64 %92, -7235984194778643166
  %94 = sub i64 %78, %79
  %95 = mul i64 %93, %79
  %96 = add i64 %78, 7408630587788513013
  %97 = sub i64 %96, %79
  %98 = sub i64 %97, 7408630587788513013
  %99 = sub i64 %78, %79
  %100 = mul i64 %98, %79
  %101 = sdiv i64 %78, %79
  %102 = load i64, i64* %76, align 8
  %103 = load i64, i64* %77, align 8
  %104 = add i64 0, 2115065386217975052
  %105 = sub i64 %104, %102
  %106 = sub i64 %105, 2115065386217975052
  %107 = sub i64 0, %102
  %108 = sub i64 %106, -5140108629358222592
  %109 = add i64 %108, %103
  %110 = add i64 %109, -5140108629358222592
  %111 = add i64 %106, %103
  %112 = shl i64 %102, %103
  %113 = shl i64 %102, %103
  %114 = sub i64 %102, -8357481958326438390
  %115 = sub i64 %114, %103
  %116 = add i64 %115, -8357481958326438390
  %117 = sub i64 %102, %103
  %118 = mul i64 %116, %103
  %119 = srem i64 %102, %103
  %120 = shl i64 %119, 2
  %121 = sub i64 0, 6602723485951127506
  %122 = sub i64 %121, %119
  %123 = add i64 %122, 6602723485951127506
  %124 = sub i64 0, %119
  %125 = add i64 %123, 6703856483086997203
  %126 = add i64 %125, 2
  %127 = sub i64 %126, 6703856483086997203
  %128 = add i64 %123, 2
  %129 = sub i64 0, %119
  %130 = add i64 0, %129
  %131 = sub i64 0, %119
  %132 = sub i64 0, 2
  %133 = sub i64 %130, %132
  %134 = add i64 %130, 2
  %135 = mul nsw i64 %119, 2
  %136 = load i64, i64* %77, align 8
  %137 = icmp sge i64 %135, %136
  %138 = select i1 %137, i32 1, i32 0
  %139 = sext i32 %138 to i64
  %140 = sub i64 0, %139
  %141 = add i64 %101, %140
  %142 = sub i64 %101, %139
  %143 = mul i64 %141, %139
  %144 = sub i64 %101, 3270878148309190224
  %145 = sub i64 %144, %139
  %146 = add i64 %145, 3270878148309190224
  %147 = sub i64 %101, %139
  %148 = mul i64 %146, %139
  %149 = shl i64 %101, %139
  %150 = sub i64 0, 6808410028988201558
  %151 = sub i64 %150, %101
  %152 = add i64 %151, 6808410028988201558
  %153 = sub i64 0, %101
  %154 = add i64 %152, -7415551007774157963
  %155 = add i64 %154, %139
  %156 = sub i64 %155, -7415551007774157963
  %157 = add i64 %152, %139
  %158 = sub i64 0, %101
  %159 = add i64 0, %158
  %160 = sub i64 0, %101
  %161 = add i64 %159, -4659361543626781
  %162 = add i64 %161, %139
  %163 = sub i64 %162, -4659361543626781
  %164 = add i64 %159, %139
  %165 = sub i64 0, %139
  %166 = add i64 %101, %165
  %167 = sub i64 %101, %139
  %168 = mul i64 %166, %139
  %169 = sub i64 %101, 4481127074247385588
  %170 = add i64 %169, %139
  %171 = add i64 %170, 4481127074247385588
  %172 = add nsw i64 %101, %139
  store i32 -794836458, i32* %16
  br label %173

; <label>:173:                                    ; preds = %75, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z7ceildivxx(i64, i64) #4 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = sdiv i64 %5, %6
  %8 = load i64, i64* %3, align 8
  %9 = load i64, i64* %4, align 8
  %10 = srem i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = select i1 %11, i32 0, i32 1
  %13 = sext i32 %12 to i64
  %14 = sub i64 %7, -5859297089870959607
  %15 = add i64 %14, %13
  %16 = add i64 %15, -5859297089870959607
  %17 = add nsw i64 %7, %13
  ret i64 %16
}

; Function Attrs: noinline uwtable
define i64 @_Z3gcdxx(i64, i64) #0 {
  %3 = alloca i64
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i64 %0, i64* %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %3
  %8 = alloca i32
  store i32 -1991831508, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %72
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -1991831508, label %12
    i32 582221615, label %16
    i32 1447392041, label %32
    i32 -627508898, label %61
    i32 693437635, label %62
    i32 -767968689, label %68
    i32 1734428786, label %70
  ]

; <label>:11:                                     ; preds = %9
  br label %72

; <label>:12:                                     ; preds = %9
  %13 = load volatile i64, i64* %3
  %14 = icmp eq i64 %13, 0
  %15 = select i1 %14, i32 582221615, i32 693437635
  store i32 %15, i32* %8
  br label %72

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* @x.32
  %18 = load i32, i32* @y.33
  %19 = sub i32 %17, 1315268926
  %20 = sub i32 %19, 1
  %21 = add i32 %20, 1315268926
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1447392041, i32 1734428786
  store i32 %31, i32* %8
  br label %72

; <label>:32:                                     ; preds = %9
  %33 = load i64, i64* %5, align 8
  store i64 %33, i64* %4, align 8
  %34 = load i32, i32* @x.32
  %35 = load i32, i32* @y.33
  %36 = add i32 %34, 244536251
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 244536251
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -627508898, i32 1734428786
  store i32 %60, i32* %8
  br label %72

; <label>:61:                                     ; preds = %9
  store i32 -767968689, i32* %8
  br label %72

; <label>:62:                                     ; preds = %9
  %63 = load i64, i64* %6, align 8
  %64 = load i64, i64* %5, align 8
  %65 = load i64, i64* %6, align 8
  %66 = srem i64 %64, %65
  %67 = call i64 @_Z3gcdxx(i64 %63, i64 %66)
  store i64 %67, i64* %4, align 8
  store i32 -767968689, i32* %8
  br label %72

; <label>:68:                                     ; preds = %9
  %69 = load i64, i64* %4, align 8
  ret i64 %69

; <label>:70:                                     ; preds = %9
  %71 = load i64, i64* %5, align 8
  store i64 %71, i64* %4, align 8
  store i32 1447392041, i32* %8
  br label %72

; <label>:72:                                     ; preds = %70, %62, %61, %32, %16, %12, %11
  br label %9
}

; Function Attrs: noinline uwtable
define i64 @_Z3lcmxx(i64, i64) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = mul nsw i64 %5, %6
  %8 = load i64, i64* %3, align 8
  %9 = load i64, i64* %4, align 8
  %10 = call i64 @_Z3gcdxx(i64 %8, i64 %9)
  %11 = sdiv i64 %7, %10
  ret i64 %11
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::vector.0", align 8
  %5 = alloca %"class.std::allocator.2", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %class.Strongly_Connected_Components, align 8
  %12 = alloca %"class.std::vector.5", align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %17 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %2)
  %18 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %17, i32* dereferenceable(4) %3)
  %19 = load i32, i32* %2, align 4
  %20 = sext i32 %19 to i64
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"* %5) #3
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS2_(%"class.std::vector.0"* %4, i64 %20, %"class.std::allocator.2"* dereferenceable(1) %5)
          to label %21 unwind label %111

; <label>:21:                                     ; preds = %0
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %5) #3
  store i32 0, i32* %8, align 4
  br label %22

; <label>:22:                                     ; preds = %105, %21
  %23 = load i32, i32* %8, align 4
  %24 = load i32, i32* %3, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %26, label %173

; <label>:26:                                     ; preds = %22
  %27 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %9)
          to label %28 unwind label %169

; <label>:28:                                     ; preds = %26
  %29 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %27, i32* dereferenceable(4) %10)
          to label %30 unwind label %169

; <label>:30:                                     ; preds = %28
  %31 = load i32, i32* @x.36
  %32 = load i32, i32* @y.37
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %475

; <label>:44:                                     ; preds = %30, %475
  %45 = load i32, i32* %9, align 4
  %46 = sext i32 %45 to i64
  %47 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %4, i64 %46) #3
  %48 = load i32, i32* @x.36
  %49 = load i32, i32* @y.37
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %475

; <label>:61:                                     ; preds = %44
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.5"* %47, i32* dereferenceable(4) %10)
          to label %62 unwind label %169

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* @x.36
  %64 = load i32, i32* @y.37
  %65 = sub i32 %63, -1375333715
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -1375333715
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %479

; <label>:77:                                     ; preds = %62, %479
  %78 = load i32, i32* @x.36
  %79 = load i32, i32* @y.37
  %80 = add i32 %78, -1701366614
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -1701366614
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %479

; <label>:104:                                    ; preds = %77
  br label %105

; <label>:105:                                    ; preds = %104
  %106 = load i32, i32* %8, align 4
  %107 = add i32 %106, 895162547
  %108 = add i32 %107, 1
  %109 = sub i32 %108, 895162547
  %110 = add nsw i32 %106, 1
  store i32 %109, i32* %8, align 4
  br label %22

; <label>:111:                                    ; preds = %0
  %112 = load i32, i32* @x.36
  %113 = load i32, i32* @y.37
  %114 = add i32 %112, -160665384
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, -160665384
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %480

; <label>:138:                                    ; preds = %111, %480
  %139 = landingpad { i8*, i32 }
          cleanup
  %140 = extractvalue { i8*, i32 } %139, 0
  store i8* %140, i8** %6, align 8
  %141 = extractvalue { i8*, i32 } %139, 1
  store i32 %141, i32* %7, align 4
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %5) #3
  %142 = load i32, i32* @x.36
  %143 = load i32, i32* @y.37
  %144 = add i32 %142, -588741440
  %145 = sub i32 %144, 1
  %146 = sub i32 %145, -588741440
  %147 = sub i32 %142, 1
  %148 = mul i32 %142, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %143, 10
  %152 = xor i1 %150, true
  %153 = xor i1 %151, true
  %154 = xor i1 true, true
  %155 = and i1 %152, true
  %156 = and i1 %150, %154
  %157 = and i1 %153, true
  %158 = and i1 %151, %154
  %159 = or i1 %155, %156
  %160 = or i1 %157, %158
  %161 = xor i1 %159, %160
  %162 = or i1 %152, %153
  %163 = xor i1 %162, true
  %164 = or i1 true, %154
  %165 = and i1 %163, %164
  %166 = or i1 %161, %165
  %167 = or i1 %150, %151
  br i1 %166, label %168, label %480

; <label>:168:                                    ; preds = %138
  br label %429

; <label>:169:                                    ; preds = %173, %61, %28, %26
  %170 = landingpad { i8*, i32 }
          cleanup
  %171 = extractvalue { i8*, i32 } %170, 0
  store i8* %171, i8** %6, align 8
  %172 = extractvalue { i8*, i32 } %170, 1
  store i32 %172, i32* %7, align 4
  br label %400

; <label>:173:                                    ; preds = %22
  invoke void @_ZN29Strongly_Connected_ComponentsC2ERKSt6vectorIS0_IiSaIiEESaIS2_EE(%class.Strongly_Connected_Components* %11, %"class.std::vector.0"* dereferenceable(24) %4)
          to label %174 unwind label %169

; <label>:174:                                    ; preds = %173
  invoke void @_ZN29Strongly_Connected_Components11get_scc_gidEv(%"class.std::vector.5"* sret %12, %class.Strongly_Connected_Components* %11)
          to label %175 unwind label %272

; <label>:175:                                    ; preds = %174
  %176 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %13)
          to label %177 unwind label %276

; <label>:177:                                    ; preds = %175
  store i32 0, i32* %14, align 4
  br label %178

; <label>:178:                                    ; preds = %392, %177
  %179 = load i32, i32* %14, align 4
  %180 = load i32, i32* %13, align 4
  %181 = icmp slt i32 %179, %180
  br i1 %181, label %182, label %397

; <label>:182:                                    ; preds = %178
  %183 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %15)
          to label %184 unwind label %276

; <label>:184:                                    ; preds = %182
  %185 = load i32, i32* @x.36
  %186 = load i32, i32* @y.37
  %187 = sub i32 0, 1
  %188 = add i32 %185, %187
  %189 = sub i32 %185, 1
  %190 = mul i32 %185, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %186, 10
  %194 = xor i1 %192, true
  %195 = xor i1 %193, true
  %196 = xor i1 false, true
  %197 = and i1 %194, false
  %198 = and i1 %192, %196
  %199 = and i1 %195, false
  %200 = and i1 %193, %196
  %201 = or i1 %197, %198
  %202 = or i1 %199, %200
  %203 = xor i1 %201, %202
  %204 = or i1 %194, %195
  %205 = xor i1 %204, true
  %206 = or i1 false, %196
  %207 = and i1 %205, %206
  %208 = or i1 %203, %207
  %209 = or i1 %192, %193
  br i1 %208, label %210, label %484

; <label>:210:                                    ; preds = %184, %484
  %211 = load i32, i32* @x.36
  %212 = load i32, i32* @y.37
  %213 = add i32 %211, 1095202049
  %214 = sub i32 %213, 1
  %215 = sub i32 %214, 1095202049
  %216 = sub i32 %211, 1
  %217 = mul i32 %211, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %212, 10
  %221 = and i1 %219, %220
  %222 = xor i1 %219, %220
  %223 = or i1 %221, %222
  %224 = or i1 %219, %220
  br i1 %223, label %225, label %484

; <label>:225:                                    ; preds = %210
  %226 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %183, i32* dereferenceable(4) %16)
          to label %227 unwind label %276

; <label>:227:                                    ; preds = %225
  %228 = load i32, i32* %15, align 4
  %229 = sext i32 %228 to i64
  %230 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.5"* %12, i64 %229) #3
  %231 = load i32, i32* %230, align 4
  %232 = load i32, i32* %16, align 4
  %233 = sext i32 %232 to i64
  %234 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.5"* %12, i64 %233) #3
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %231, %235
  br i1 %236, label %237, label %333

; <label>:237:                                    ; preds = %227
  %238 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 1)
          to label %239 unwind label %276

; <label>:239:                                    ; preds = %237
  %240 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %238, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %241 unwind label %276

; <label>:241:                                    ; preds = %239
  %242 = load i32, i32* @x.36
  %243 = load i32, i32* @y.37
  %244 = sub i32 %242, -1438575656
  %245 = sub i32 %244, 1
  %246 = add i32 %245, -1438575656
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = and i1 %250, %251
  %253 = xor i1 %250, %251
  %254 = or i1 %252, %253
  %255 = or i1 %250, %251
  br i1 %254, label %256, label %485

; <label>:256:                                    ; preds = %241, %485
  %257 = load i32, i32* @x.36
  %258 = load i32, i32* @y.37
  %259 = add i32 %257, -489186939
  %260 = sub i32 %259, 1
  %261 = sub i32 %260, -489186939
  %262 = sub i32 %257, 1
  %263 = mul i32 %257, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %258, 10
  %267 = and i1 %265, %266
  %268 = xor i1 %265, %266
  %269 = or i1 %267, %268
  %270 = or i1 %265, %266
  br i1 %269, label %271, label %485

; <label>:271:                                    ; preds = %256
  br label %338

; <label>:272:                                    ; preds = %174
  %273 = landingpad { i8*, i32 }
          cleanup
  %274 = extractvalue { i8*, i32 } %273, 0
  store i8* %274, i8** %6, align 8
  %275 = extractvalue { i8*, i32 } %273, 1
  store i32 %275, i32* %7, align 4
  br label %399

; <label>:276:                                    ; preds = %335, %333, %239, %237, %225, %182, %175
  %277 = load i32, i32* @x.36
  %278 = load i32, i32* @y.37
  %279 = sub i32 0, 1
  %280 = add i32 %277, %279
  %281 = sub i32 %277, 1
  %282 = mul i32 %277, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %278, 10
  %286 = xor i1 %284, true
  %287 = xor i1 %285, true
  %288 = xor i1 true, true
  %289 = and i1 %286, true
  %290 = and i1 %284, %288
  %291 = and i1 %287, true
  %292 = and i1 %285, %288
  %293 = or i1 %289, %290
  %294 = or i1 %291, %292
  %295 = xor i1 %293, %294
  %296 = or i1 %286, %287
  %297 = xor i1 %296, true
  %298 = or i1 true, %288
  %299 = and i1 %297, %298
  %300 = or i1 %295, %299
  %301 = or i1 %284, %285
  br i1 %300, label %302, label %486

; <label>:302:                                    ; preds = %276, %486
  %303 = landingpad { i8*, i32 }
          cleanup
  %304 = extractvalue { i8*, i32 } %303, 0
  store i8* %304, i8** %6, align 8
  %305 = extractvalue { i8*, i32 } %303, 1
  store i32 %305, i32* %7, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %12) #3
  %306 = load i32, i32* @x.36
  %307 = load i32, i32* @y.37
  %308 = add i32 %306, -1430878974
  %309 = sub i32 %308, 1
  %310 = sub i32 %309, -1430878974
  %311 = sub i32 %306, 1
  %312 = mul i32 %306, %310
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %307, 10
  %316 = xor i1 %314, true
  %317 = xor i1 %315, true
  %318 = xor i1 false, true
  %319 = and i1 %316, false
  %320 = and i1 %314, %318
  %321 = and i1 %317, false
  %322 = and i1 %315, %318
  %323 = or i1 %319, %320
  %324 = or i1 %321, %322
  %325 = xor i1 %323, %324
  %326 = or i1 %316, %317
  %327 = xor i1 %326, true
  %328 = or i1 false, %318
  %329 = and i1 %327, %328
  %330 = or i1 %325, %329
  %331 = or i1 %314, %315
  br i1 %330, label %332, label %486

; <label>:332:                                    ; preds = %302
  br label %399

; <label>:333:                                    ; preds = %227
  %334 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 0)
          to label %335 unwind label %276

; <label>:335:                                    ; preds = %333
  %336 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %334, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %337 unwind label %276

; <label>:337:                                    ; preds = %335
  br label %338

; <label>:338:                                    ; preds = %337, %271
  %339 = load i32, i32* @x.36
  %340 = load i32, i32* @y.37
  %341 = add i32 %339, 269278458
  %342 = sub i32 %341, 1
  %343 = sub i32 %342, 269278458
  %344 = sub i32 %339, 1
  %345 = mul i32 %339, %343
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %340, 10
  %349 = xor i1 %347, true
  %350 = xor i1 %348, true
  %351 = xor i1 false, true
  %352 = and i1 %349, false
  %353 = and i1 %347, %351
  %354 = and i1 %350, false
  %355 = and i1 %348, %351
  %356 = or i1 %352, %353
  %357 = or i1 %354, %355
  %358 = xor i1 %356, %357
  %359 = or i1 %349, %350
  %360 = xor i1 %359, true
  %361 = or i1 false, %351
  %362 = and i1 %360, %361
  %363 = or i1 %358, %362
  %364 = or i1 %347, %348
  br i1 %363, label %365, label %490

; <label>:365:                                    ; preds = %338, %490
  %366 = load i32, i32* @x.36
  %367 = load i32, i32* @y.37
  %368 = sub i32 0, 1
  %369 = add i32 %366, %368
  %370 = sub i32 %366, 1
  %371 = mul i32 %366, %369
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %367, 10
  %375 = xor i1 %373, true
  %376 = xor i1 %374, true
  %377 = xor i1 true, true
  %378 = and i1 %375, true
  %379 = and i1 %373, %377
  %380 = and i1 %376, true
  %381 = and i1 %374, %377
  %382 = or i1 %378, %379
  %383 = or i1 %380, %381
  %384 = xor i1 %382, %383
  %385 = or i1 %375, %376
  %386 = xor i1 %385, true
  %387 = or i1 true, %377
  %388 = and i1 %386, %387
  %389 = or i1 %384, %388
  %390 = or i1 %373, %374
  br i1 %389, label %391, label %490

; <label>:391:                                    ; preds = %365
  br label %392

; <label>:392:                                    ; preds = %391
  %393 = load i32, i32* %14, align 4
  %394 = sub i32 0, 1
  %395 = sub i32 %393, %394
  %396 = add nsw i32 %393, 1
  store i32 %395, i32* %14, align 4
  br label %178

; <label>:397:                                    ; preds = %178
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %12) #3
  call void @_ZN29Strongly_Connected_ComponentsD2Ev(%class.Strongly_Connected_Components* %11) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %4) #3
  %398 = load i32, i32* %1, align 4
  ret i32 %398

; <label>:399:                                    ; preds = %332, %272
  call void @_ZN29Strongly_Connected_ComponentsD2Ev(%class.Strongly_Connected_Components* %11) #3
  br label %400

; <label>:400:                                    ; preds = %399, %169
  %401 = load i32, i32* @x.36
  %402 = load i32, i32* @y.37
  %403 = sub i32 0, 1
  %404 = add i32 %401, %403
  %405 = sub i32 %401, 1
  %406 = mul i32 %401, %404
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %402, 10
  %410 = and i1 %408, %409
  %411 = xor i1 %408, %409
  %412 = or i1 %410, %411
  %413 = or i1 %408, %409
  br i1 %412, label %414, label %491

; <label>:414:                                    ; preds = %400, %491
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %4) #3
  %415 = load i32, i32* @x.36
  %416 = load i32, i32* @y.37
  %417 = sub i32 0, 1
  %418 = add i32 %415, %417
  %419 = sub i32 %415, 1
  %420 = mul i32 %415, %418
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %416, 10
  %424 = and i1 %422, %423
  %425 = xor i1 %422, %423
  %426 = or i1 %424, %425
  %427 = or i1 %422, %423
  br i1 %426, label %428, label %491

; <label>:428:                                    ; preds = %414
  br label %429

; <label>:429:                                    ; preds = %428, %168
  %430 = load i32, i32* @x.36
  %431 = load i32, i32* @y.37
  %432 = sub i32 0, 1
  %433 = add i32 %430, %432
  %434 = sub i32 %430, 1
  %435 = mul i32 %430, %433
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %431, 10
  %439 = and i1 %437, %438
  %440 = xor i1 %437, %438
  %441 = or i1 %439, %440
  %442 = or i1 %437, %438
  br i1 %441, label %443, label %492

; <label>:443:                                    ; preds = %429, %492
  %444 = load i8*, i8** %6, align 8
  %445 = load i32, i32* %7, align 4
  %446 = insertvalue { i8*, i32 } undef, i8* %444, 0
  %447 = insertvalue { i8*, i32 } %446, i32 %445, 1
  %448 = load i32, i32* @x.36
  %449 = load i32, i32* @y.37
  %450 = add i32 %448, 1709190787
  %451 = sub i32 %450, 1
  %452 = sub i32 %451, 1709190787
  %453 = sub i32 %448, 1
  %454 = mul i32 %448, %452
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %449, 10
  %458 = xor i1 %456, true
  %459 = xor i1 %457, true
  %460 = xor i1 true, true
  %461 = and i1 %458, true
  %462 = and i1 %456, %460
  %463 = and i1 %459, true
  %464 = and i1 %457, %460
  %465 = or i1 %461, %462
  %466 = or i1 %463, %464
  %467 = xor i1 %465, %466
  %468 = or i1 %458, %459
  %469 = xor i1 %468, true
  %470 = or i1 true, %460
  %471 = and i1 %469, %470
  %472 = or i1 %467, %471
  %473 = or i1 %456, %457
  br i1 %472, label %474, label %492

; <label>:474:                                    ; preds = %443
  resume { i8*, i32 } %447

; <label>:475:                                    ; preds = %44, %30
  %476 = load i32, i32* %9, align 4
  %477 = sext i32 %476 to i64
  %478 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %4, i64 %477) #3
  br label %44

; <label>:479:                                    ; preds = %77, %62
  br label %77

; <label>:480:                                    ; preds = %138, %111
  %481 = landingpad { i8*, i32 }
          cleanup
  %482 = extractvalue { i8*, i32 } %481, 0
  store i8* %482, i8** %6, align 8
  %483 = extractvalue { i8*, i32 } %481, 1
  store i32 %483, i32* %7, align 4
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %5) #3
  br label %138

; <label>:484:                                    ; preds = %210, %184
  br label %210

; <label>:485:                                    ; preds = %256, %241
  br label %256

; <label>:486:                                    ; preds = %302, %276
  %487 = landingpad { i8*, i32 }
          cleanup
  %488 = extractvalue { i8*, i32 } %487, 0
  store i8* %488, i8** %6, align 8
  %489 = extractvalue { i8*, i32 } %487, 1
  store i32 %489, i32* %7, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %12) #3
  br label %302

; <label>:490:                                    ; preds = %365, %338
  br label %365

; <label>:491:                                    ; preds = %414, %400
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %4) #3
  br label %414

; <label>:492:                                    ; preds = %443, %429
  %493 = load i8*, i8** %6, align 8
  %494 = load i32, i32* %7, align 4
  %495 = insertvalue { i8*, i32 } undef, i8* %493, 0
  %496 = insertvalue { i8*, i32 } %495, i32 %494, 1
  br label %443
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS2_(%"class.std::vector.0"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %10 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.1"* %10, i64 %11, %"class.std::allocator.2"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE21_M_default_initializeEm(%"class.std::vector.0"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i8*, i8** %7, align 8
  %22 = load i32, i32* %8, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %9, i64 %10
  ret %"class.std::vector.5"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.5"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::vector.5"*
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  store %"class.std::vector.5"* %8, %"class.std::vector.5"** %5
  %9 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %10 = bitcast %"class.std::vector.5"* %9 to %"struct.std::_Vector_base.6"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %4
  %14 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %15 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %3
  %19 = alloca i32
  store i32 -844688121, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %107
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -844688121, label %23
    i32 -231525633, label %28
    i32 1080597436, label %45
    i32 1420919893, label %73
    i32 -815141489, label %102
    i32 1812608191, label %103
    i32 685260911, label %104
  ]

; <label>:22:                                     ; preds = %20
  br label %107

; <label>:23:                                     ; preds = %20
  %24 = load volatile i32*, i32** %4
  %25 = load volatile i32*, i32** %3
  %26 = icmp ne i32* %24, %25
  %27 = select i1 %26, i32 -231525633, i32 1080597436
  store i32 %27, i32* %19
  br label %107

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %30 = bitcast %"class.std::vector.5"* %29 to %"struct.std::_Vector_base.6"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %31 to %"class.std::allocator.7"*
  %33 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %34 = bitcast %"class.std::vector.5"* %33 to %"struct.std::_Vector_base.6"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load i32*, i32** %36, align 8
  %38 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.7"* dereferenceable(1) %32, i32* %37, i32* dereferenceable(4) %38)
  %39 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %40 = bitcast %"class.std::vector.5"* %39 to %"struct.std::_Vector_base.6"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41, i32 0, i32 1
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds i32, i32* %43, i32 1
  store i32* %44, i32** %42, align 8
  store i32 1812608191, i32* %19
  br label %107

; <label>:45:                                     ; preds = %20
  %46 = load i32, i32* @x.46
  %47 = load i32, i32* @y.47
  %48 = add i32 %46, -1837664120
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1837664120
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1420919893, i32 685260911
  store i32 %72, i32* %19
  br label %107

; <label>:73:                                     ; preds = %20
  %74 = load i32*, i32** %7, align 8
  %75 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.5"* %75, i32* dereferenceable(4) %74)
  %76 = load i32, i32* @x.46
  %77 = load i32, i32* @y.47
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 -815141489, i32 685260911
  store i32 %101, i32* %19
  br label %107

; <label>:102:                                    ; preds = %20
  store i32 1812608191, i32* %19
  br label %107

; <label>:103:                                    ; preds = %20
  ret void

; <label>:104:                                    ; preds = %20
  %105 = load i32*, i32** %7, align 8
  %106 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.5"* %106, i32* dereferenceable(4) %105)
  store i32 1420919893, i32* %19
  br label %107

; <label>:107:                                    ; preds = %104, %102, %73, %45, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN29Strongly_Connected_ComponentsC2ERKSt6vectorIS0_IiSaIiEESaIS2_EE(%class.Strongly_Connected_Components*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Strongly_Connected_Components*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::deque", align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"struct.Strongly_Connected_Components::node", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::vector.5"*, align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.std::vector.5", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %class.Strongly_Connected_Components* %0, %class.Strongly_Connected_Components** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %22 = load %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %3, align 8
  %23 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 0
  %24 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %23, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %24, i64 2
  br label %26

; <label>:26:                                     ; preds = %70, %2
  %27 = phi %"class.std::vector.10"* [ %24, %2 ], [ %54, %70 ]
  %28 = load i32, i32* @x.48
  %29 = load i32, i32* @y.49
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %791

; <label>:53:                                     ; preds = %26, %791
  call void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEC2Ev(%"class.std::vector.10"* %27) #3
  %54 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %27, i64 1
  %55 = icmp eq %"class.std::vector.10"* %54, %25
  %56 = load i32, i32* @x.48
  %57 = load i32, i32* @y.49
  %58 = sub i32 %56, -1494378756
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -1494378756
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %791

; <label>:70:                                     ; preds = %53
  br i1 %55, label %71, label %26

; <label>:71:                                     ; preds = %70
  %72 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 2
  invoke void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %5)
          to label %73 unwind label %151

; <label>:73:                                     ; preds = %71
  invoke void @_ZNSt5stackIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::stack"* %72, %"class.std::deque"* dereferenceable(80) %5)
          to label %74 unwind label %155

; <label>:74:                                     ; preds = %73
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %5) #3
  %75 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.0"* %75) #3
  %76 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 4
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.5"* %76) #3
  %77 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %78 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %77) #3
  %79 = trunc i64 %78 to i32
  %80 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 1
  store i32 %79, i32* %80, align 8
  store i32 0, i32* %8, align 4
  br label %81

; <label>:81:                                     ; preds = %146, %74
  %82 = load i32, i32* %8, align 4
  %83 = icmp slt i32 %82, 2
  br i1 %83, label %84, label %163

; <label>:84:                                     ; preds = %81
  %85 = load i32, i32* @x.48
  %86 = load i32, i32* @y.49
  %87 = sub i32 %85, -383965402
  %88 = sub i32 %87, 1
  %89 = add i32 %88, -383965402
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %794

; <label>:111:                                    ; preds = %84, %794
  %112 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 0
  %113 = load i32, i32* %8, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %112, i64 0, i64 %114
  %116 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = sext i32 %117 to i64
  %119 = load i32, i32* @x.48
  %120 = load i32, i32* @y.49
  %121 = sub i32 0, 1
  %122 = add i32 %119, %121
  %123 = sub i32 %119, 1
  %124 = mul i32 %119, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %120, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %794

; <label>:144:                                    ; preds = %111
  invoke void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE6resizeEm(%"class.std::vector.10"* %115, i64 %118)
          to label %145 unwind label %159

; <label>:145:                                    ; preds = %144
  br label %146

; <label>:146:                                    ; preds = %145
  %147 = load i32, i32* %8, align 4
  %148 = sub i32 0, 1
  %149 = sub i32 %147, %148
  %150 = add nsw i32 %147, 1
  store i32 %149, i32* %8, align 4
  br label %81

; <label>:151:                                    ; preds = %71
  %152 = landingpad { i8*, i32 }
          cleanup
  %153 = extractvalue { i8*, i32 } %152, 0
  store i8* %153, i8** %6, align 8
  %154 = extractvalue { i8*, i32 } %152, 1
  store i32 %154, i32* %7, align 4
  br label %629

; <label>:155:                                    ; preds = %73
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = extractvalue { i8*, i32 } %156, 0
  store i8* %157, i8** %6, align 8
  %158 = extractvalue { i8*, i32 } %156, 1
  store i32 %158, i32* %7, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %5) #3
  br label %629

; <label>:159:                                    ; preds = %620, %577, %521, %518, %513, %460, %428, %427, %144
  %160 = landingpad { i8*, i32 }
          cleanup
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %6, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %7, align 4
  br label %628

; <label>:163:                                    ; preds = %81
  %164 = load i32, i32* @x.48
  %165 = load i32, i32* @y.49
  %166 = sub i32 0, 1
  %167 = add i32 %164, %166
  %168 = sub i32 %164, 1
  %169 = mul i32 %164, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %165, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 true, true
  %176 = and i1 %173, true
  %177 = and i1 %171, %175
  %178 = and i1 %174, true
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 true, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  br i1 %187, label %189, label %802

; <label>:189:                                    ; preds = %163, %802
  store i32 0, i32* %9, align 4
  %190 = load i32, i32* @x.48
  %191 = load i32, i32* @y.49
  %192 = sub i32 %190, 695273126
  %193 = sub i32 %192, 1
  %194 = add i32 %193, 695273126
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  br i1 %202, label %204, label %802

; <label>:204:                                    ; preds = %189
  br label %205

; <label>:205:                                    ; preds = %324, %204
  %206 = load i32, i32* %9, align 4
  %207 = icmp slt i32 %206, 2
  br i1 %207, label %208, label %330

; <label>:208:                                    ; preds = %205
  store i32 0, i32* %10, align 4
  br label %209

; <label>:209:                                    ; preds = %322, %208
  %210 = load i32, i32* @x.48
  %211 = load i32, i32* @y.49
  %212 = sub i32 %210, -1906667815
  %213 = sub i32 %212, 1
  %214 = add i32 %213, -1906667815
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  br i1 %222, label %224, label %803

; <label>:224:                                    ; preds = %209, %803
  %225 = load i32, i32* %10, align 4
  %226 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 1
  %227 = load i32, i32* %226, align 8
  %228 = icmp slt i32 %225, %227
  %229 = load i32, i32* @x.48
  %230 = load i32, i32* @y.49
  %231 = sub i32 0, 1
  %232 = add i32 %229, %231
  %233 = sub i32 %229, 1
  %234 = mul i32 %229, %232
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %230, 10
  %238 = and i1 %236, %237
  %239 = xor i1 %236, %237
  %240 = or i1 %238, %239
  %241 = or i1 %236, %237
  br i1 %240, label %242, label %803

; <label>:242:                                    ; preds = %224
  br i1 %228, label %243, label %323

; <label>:243:                                    ; preds = %242
  %244 = load i32, i32* @x.48
  %245 = load i32, i32* @y.49
  %246 = add i32 %244, 663535546
  %247 = sub i32 %246, 1
  %248 = sub i32 %247, 663535546
  %249 = sub i32 %244, 1
  %250 = mul i32 %244, %248
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %245, 10
  %254 = and i1 %252, %253
  %255 = xor i1 %252, %253
  %256 = or i1 %254, %255
  %257 = or i1 %252, %253
  br i1 %256, label %258, label %808

; <label>:258:                                    ; preds = %243, %808
  %259 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %11, i32 0, i32 0
  %260 = load i32, i32* %9, align 4
  store i32 %260, i32* %259, align 8
  %261 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %11, i32 0, i32 1
  store i8 0, i8* %261, align 4
  %262 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %11, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.5"* %262) #3
  %263 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %11, i32 0, i32 4
  store i32 -1, i32* %263, align 8
  %264 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 0
  %265 = load i32, i32* %9, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %264, i64 0, i64 %266
  %268 = load i32, i32* %10, align 4
  %269 = sext i32 %268 to i64
  %270 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %267, i64 %269) #3
  %271 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZN29Strongly_Connected_Components4nodeaSEOS0_(%"struct.Strongly_Connected_Components::node"* %270, %"struct.Strongly_Connected_Components::node"* dereferenceable(40) %11) #3
  call void @_ZN29Strongly_Connected_Components4nodeD2Ev(%"struct.Strongly_Connected_Components::node"* %11) #3
  %272 = load i32, i32* @x.48
  %273 = load i32, i32* @y.49
  %274 = sub i32 0, 1
  %275 = add i32 %272, %274
  %276 = sub i32 %272, 1
  %277 = mul i32 %272, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %273, 10
  %281 = and i1 %279, %280
  %282 = xor i1 %279, %280
  %283 = or i1 %281, %282
  %284 = or i1 %279, %280
  br i1 %283, label %285, label %808

; <label>:285:                                    ; preds = %258
  br label %286

; <label>:286:                                    ; preds = %285
  %287 = load i32, i32* @x.48
  %288 = load i32, i32* @y.49
  %289 = add i32 %287, -913744809
  %290 = sub i32 %289, 1
  %291 = sub i32 %290, -913744809
  %292 = sub i32 %287, 1
  %293 = mul i32 %287, %291
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %288, 10
  %297 = and i1 %295, %296
  %298 = xor i1 %295, %296
  %299 = or i1 %297, %298
  %300 = or i1 %295, %296
  br i1 %299, label %301, label %822

; <label>:301:                                    ; preds = %286, %822
  %302 = load i32, i32* %10, align 4
  %303 = sub i32 0, %302
  %304 = sub i32 0, 1
  %305 = add i32 %303, %304
  %306 = sub i32 0, %305
  %307 = add nsw i32 %302, 1
  store i32 %306, i32* %10, align 4
  %308 = load i32, i32* @x.48
  %309 = load i32, i32* @y.49
  %310 = add i32 %308, -189050614
  %311 = sub i32 %310, 1
  %312 = sub i32 %311, -189050614
  %313 = sub i32 %308, 1
  %314 = mul i32 %308, %312
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %309, 10
  %318 = and i1 %316, %317
  %319 = xor i1 %316, %317
  %320 = or i1 %318, %319
  %321 = or i1 %316, %317
  br i1 %320, label %322, label %822

; <label>:322:                                    ; preds = %301
  br label %209

; <label>:323:                                    ; preds = %242
  br label %324

; <label>:324:                                    ; preds = %323
  %325 = load i32, i32* %9, align 4
  %326 = sub i32 %325, -1638027295
  %327 = add i32 %326, 1
  %328 = add i32 %327, -1638027295
  %329 = add nsw i32 %325, 1
  store i32 %328, i32* %9, align 4
  br label %205

; <label>:330:                                    ; preds = %205
  store i32 0, i32* %12, align 4
  br label %331

; <label>:331:                                    ; preds = %439, %330
  %332 = load i32, i32* @x.48
  %333 = load i32, i32* @y.49
  %334 = add i32 %332, 962633619
  %335 = sub i32 %334, 1
  %336 = sub i32 %335, 962633619
  %337 = sub i32 %332, 1
  %338 = mul i32 %332, %336
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %333, 10
  %342 = xor i1 %340, true
  %343 = xor i1 %341, true
  %344 = xor i1 true, true
  %345 = and i1 %342, true
  %346 = and i1 %340, %344
  %347 = and i1 %343, true
  %348 = and i1 %341, %344
  %349 = or i1 %345, %346
  %350 = or i1 %347, %348
  %351 = xor i1 %349, %350
  %352 = or i1 %342, %343
  %353 = xor i1 %352, true
  %354 = or i1 true, %344
  %355 = and i1 %353, %354
  %356 = or i1 %351, %355
  %357 = or i1 %340, %341
  br i1 %356, label %358, label %828

; <label>:358:                                    ; preds = %331, %828
  %359 = load i32, i32* %12, align 4
  %360 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 1
  %361 = load i32, i32* %360, align 8
  %362 = icmp slt i32 %359, %361
  %363 = load i32, i32* @x.48
  %364 = load i32, i32* @y.49
  %365 = sub i32 0, 1
  %366 = add i32 %363, %365
  %367 = sub i32 %363, 1
  %368 = mul i32 %363, %366
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %364, 10
  %372 = and i1 %370, %371
  %373 = xor i1 %370, %371
  %374 = or i1 %372, %373
  %375 = or i1 %370, %371
  br i1 %374, label %376, label %828

; <label>:376:                                    ; preds = %358
  br i1 %362, label %377, label %445

; <label>:377:                                    ; preds = %376
  %378 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %379 = load i32, i32* %12, align 4
  %380 = sext i32 %379 to i64
  %381 = call dereferenceable(24) %"class.std::vector.5"* @_ZNKSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %378, i64 %380) #3
  store %"class.std::vector.5"* %381, %"class.std::vector.5"** %13, align 8
  %382 = load %"class.std::vector.5"*, %"class.std::vector.5"** %13, align 8
  %383 = call i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.5"* %382) #3
  %384 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %14, i32 0, i32 0
  store i32* %383, i32** %384, align 8
  %385 = load %"class.std::vector.5"*, %"class.std::vector.5"** %13, align 8
  %386 = call i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.5"* %385) #3
  %387 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %15, i32 0, i32 0
  store i32* %386, i32** %387, align 8
  br label %388

; <label>:388:                                    ; preds = %436, %377
  %389 = call zeroext i1 @_ZN9__gnu_cxxneIPKiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %14, %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %15) #3
  br i1 %389, label %390, label %438

; <label>:390:                                    ; preds = %388
  %391 = load i32, i32* @x.48
  %392 = load i32, i32* @y.49
  %393 = sub i32 0, 1
  %394 = add i32 %391, %393
  %395 = sub i32 %391, 1
  %396 = mul i32 %391, %394
  %397 = urem i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = icmp slt i32 %392, 10
  %400 = and i1 %398, %399
  %401 = xor i1 %398, %399
  %402 = or i1 %400, %401
  %403 = or i1 %398, %399
  br i1 %402, label %404, label %833

; <label>:404:                                    ; preds = %390, %833
  %405 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.15"* %14) #3
  %406 = load i32, i32* %405, align 4
  store i32 %406, i32* %16, align 4
  %407 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 0
  %408 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %407, i64 0, i64 0
  %409 = load i32, i32* %12, align 4
  %410 = sext i32 %409 to i64
  %411 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %408, i64 %410) #3
  %412 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %411, i32 0, i32 3
  %413 = load i32, i32* @x.48
  %414 = load i32, i32* @y.49
  %415 = sub i32 %413, 949286139
  %416 = sub i32 %415, 1
  %417 = add i32 %416, 949286139
  %418 = sub i32 %413, 1
  %419 = mul i32 %413, %417
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %414, 10
  %423 = and i1 %421, %422
  %424 = xor i1 %421, %422
  %425 = or i1 %423, %424
  %426 = or i1 %421, %422
  br i1 %425, label %427, label %833

; <label>:427:                                    ; preds = %404
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.5"* %412, i32* dereferenceable(4) %16)
          to label %428 unwind label %159

; <label>:428:                                    ; preds = %427
  %429 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 0
  %430 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %429, i64 0, i64 1
  %431 = load i32, i32* %16, align 4
  %432 = sext i32 %431 to i64
  %433 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %430, i64 %432) #3
  %434 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %433, i32 0, i32 3
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.5"* %434, i32* dereferenceable(4) %12)
          to label %435 unwind label %159

; <label>:435:                                    ; preds = %428
  br label %436

; <label>:436:                                    ; preds = %435
  %437 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.15"* @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.15"* %14) #3
  br label %388

; <label>:438:                                    ; preds = %388
  br label %439

; <label>:439:                                    ; preds = %438
  %440 = load i32, i32* %12, align 4
  %441 = sub i32 %440, -420966830
  %442 = add i32 %441, 1
  %443 = add i32 %442, -420966830
  %444 = add nsw i32 %440, 1
  store i32 %443, i32* %12, align 4
  br label %331

; <label>:445:                                    ; preds = %376
  store i32 0, i32* %17, align 4
  br label %446

; <label>:446:                                    ; preds = %505, %445
  %447 = load i32, i32* %17, align 4
  %448 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 1
  %449 = load i32, i32* %448, align 8
  %450 = icmp slt i32 %447, %449
  br i1 %450, label %451, label %512

; <label>:451:                                    ; preds = %446
  %452 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 0
  %453 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %452, i64 0, i64 0
  %454 = load i32, i32* %17, align 4
  %455 = sext i32 %454 to i64
  %456 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %453, i64 %455) #3
  %457 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %456, i32 0, i32 1
  %458 = load i8, i8* %457, align 4
  %459 = trunc i8 %458 to i1
  br i1 %459, label %504, label %460

; <label>:460:                                    ; preds = %451
  %461 = load i32, i32* %17, align 4
  invoke void @_ZN29Strongly_Connected_Components7scc_dfsEii(%class.Strongly_Connected_Components* %22, i32 %461, i32 0)
          to label %462 unwind label %159

; <label>:462:                                    ; preds = %460
  %463 = load i32, i32* @x.48
  %464 = load i32, i32* @y.49
  %465 = sub i32 %463, 1339297398
  %466 = sub i32 %465, 1
  %467 = add i32 %466, 1339297398
  %468 = sub i32 %463, 1
  %469 = mul i32 %463, %467
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %464, 10
  %473 = xor i1 %471, true
  %474 = xor i1 %472, true
  %475 = xor i1 true, true
  %476 = and i1 %473, true
  %477 = and i1 %471, %475
  %478 = and i1 %474, true
  %479 = and i1 %472, %475
  %480 = or i1 %476, %477
  %481 = or i1 %478, %479
  %482 = xor i1 %480, %481
  %483 = or i1 %473, %474
  %484 = xor i1 %483, true
  %485 = or i1 true, %475
  %486 = and i1 %484, %485
  %487 = or i1 %482, %486
  %488 = or i1 %471, %472
  br i1 %487, label %489, label %842

; <label>:489:                                    ; preds = %462, %842
  %490 = load i32, i32* @x.48
  %491 = load i32, i32* @y.49
  %492 = sub i32 0, 1
  %493 = add i32 %490, %492
  %494 = sub i32 %490, 1
  %495 = mul i32 %490, %493
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %491, 10
  %499 = and i1 %497, %498
  %500 = xor i1 %497, %498
  %501 = or i1 %499, %500
  %502 = or i1 %497, %498
  br i1 %501, label %503, label %842

; <label>:503:                                    ; preds = %489
  br label %504

; <label>:504:                                    ; preds = %503, %451
  br label %505

; <label>:505:                                    ; preds = %504
  %506 = load i32, i32* %17, align 4
  %507 = sub i32 0, %506
  %508 = sub i32 0, 1
  %509 = add i32 %507, %508
  %510 = sub i32 0, %509
  %511 = add nsw i32 %506, 1
  store i32 %510, i32* %17, align 4
  br label %446

; <label>:512:                                    ; preds = %446
  br label %513

; <label>:513:                                    ; preds = %626, %512
  %514 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 2
  %515 = invoke i64 @_ZNKSt5stackIiSt5dequeIiSaIiEEE4sizeEv(%"class.std::stack"* %514)
          to label %516 unwind label %159

; <label>:516:                                    ; preds = %513
  %517 = icmp ne i64 %515, 0
  br i1 %517, label %518, label %627

; <label>:518:                                    ; preds = %516
  %519 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 2
  %520 = invoke dereferenceable(4) i32* @_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv(%"class.std::stack"* %519)
          to label %521 unwind label %159

; <label>:521:                                    ; preds = %518
  %522 = load i32, i32* %520, align 4
  store i32 %522, i32* %18, align 4
  %523 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 2
  invoke void @_ZNSt5stackIiSt5dequeIiSaIiEEE3popEv(%"class.std::stack"* %523)
          to label %524 unwind label %159

; <label>:524:                                    ; preds = %521
  %525 = load i32, i32* @x.48
  %526 = load i32, i32* @y.49
  %527 = add i32 %525, -1366903111
  %528 = sub i32 %527, 1
  %529 = sub i32 %528, -1366903111
  %530 = sub i32 %525, 1
  %531 = mul i32 %525, %529
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %526, 10
  %535 = and i1 %533, %534
  %536 = xor i1 %533, %534
  %537 = or i1 %535, %536
  %538 = or i1 %533, %534
  br i1 %537, label %539, label %843

; <label>:539:                                    ; preds = %524, %843
  %540 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 0
  %541 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %540, i64 0, i64 1
  %542 = load i32, i32* %18, align 4
  %543 = sext i32 %542 to i64
  %544 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %541, i64 %543) #3
  %545 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %544, i32 0, i32 1
  %546 = load i8, i8* %545, align 4
  %547 = trunc i8 %546 to i1
  %548 = load i32, i32* @x.48
  %549 = load i32, i32* @y.49
  %550 = sub i32 %548, 992281558
  %551 = sub i32 %550, 1
  %552 = add i32 %551, 992281558
  %553 = sub i32 %548, 1
  %554 = mul i32 %548, %552
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %549, 10
  %558 = xor i1 %556, true
  %559 = xor i1 %557, true
  %560 = xor i1 true, true
  %561 = and i1 %558, true
  %562 = and i1 %556, %560
  %563 = and i1 %559, true
  %564 = and i1 %557, %560
  %565 = or i1 %561, %562
  %566 = or i1 %563, %564
  %567 = xor i1 %565, %566
  %568 = or i1 %558, %559
  %569 = xor i1 %568, true
  %570 = or i1 true, %560
  %571 = and i1 %569, %570
  %572 = or i1 %567, %571
  %573 = or i1 %556, %557
  br i1 %572, label %574, label %843

; <label>:574:                                    ; preds = %539
  br i1 %547, label %626, label %575

; <label>:575:                                    ; preds = %574
  %576 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.5"* %19) #3
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE9push_backEOS1_(%"class.std::vector.0"* %576, %"class.std::vector.5"* dereferenceable(24) %19)
          to label %577 unwind label %622

; <label>:577:                                    ; preds = %575
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %19) #3
  %578 = load i32, i32* %18, align 4
  invoke void @_ZN29Strongly_Connected_Components7scc_dfsEii(%class.Strongly_Connected_Components* %22, i32 %578, i32 1)
          to label %579 unwind label %159

; <label>:579:                                    ; preds = %577
  %580 = load i32, i32* @x.48
  %581 = load i32, i32* @y.49
  %582 = sub i32 0, 1
  %583 = add i32 %580, %582
  %584 = sub i32 %580, 1
  %585 = mul i32 %580, %583
  %586 = urem i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = icmp slt i32 %581, 10
  %589 = and i1 %587, %588
  %590 = xor i1 %587, %588
  %591 = or i1 %589, %590
  %592 = or i1 %587, %588
  br i1 %591, label %593, label %852

; <label>:593:                                    ; preds = %579, %852
  %594 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 3
  %595 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE4backEv(%"class.std::vector.0"* %594) #3
  %596 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.5"* %595) #3
  %597 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %20, i32 0, i32 0
  store i32* %596, i32** %597, align 8
  %598 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 3
  %599 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE4backEv(%"class.std::vector.0"* %598) #3
  %600 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.5"* %599) #3
  %601 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %21, i32 0, i32 0
  store i32* %600, i32** %601, align 8
  %602 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %20, i32 0, i32 0
  %603 = load i32*, i32** %602, align 8
  %604 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %21, i32 0, i32 0
  %605 = load i32*, i32** %604, align 8
  %606 = load i32, i32* @x.48
  %607 = load i32, i32* @y.49
  %608 = sub i32 %606, 2081462262
  %609 = sub i32 %608, 1
  %610 = add i32 %609, 2081462262
  %611 = sub i32 %606, 1
  %612 = mul i32 %606, %610
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %607, 10
  %616 = and i1 %614, %615
  %617 = xor i1 %614, %615
  %618 = or i1 %616, %617
  %619 = or i1 %614, %615
  br i1 %618, label %620, label %852

; <label>:620:                                    ; preds = %593
  invoke void @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_(i32* %603, i32* %605)
          to label %621 unwind label %159

; <label>:621:                                    ; preds = %620
  br label %626

; <label>:622:                                    ; preds = %575
  %623 = landingpad { i8*, i32 }
          cleanup
  %624 = extractvalue { i8*, i32 } %623, 0
  store i8* %624, i8** %6, align 8
  %625 = extractvalue { i8*, i32 } %623, 1
  store i32 %625, i32* %7, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %19) #3
  br label %628

; <label>:626:                                    ; preds = %621, %574
  br label %513

; <label>:627:                                    ; preds = %516
  ret void

; <label>:628:                                    ; preds = %622, %159
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %76) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %75) #3
  call void @_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev(%"class.std::stack"* %72) #3
  br label %629

; <label>:629:                                    ; preds = %628, %155, %151
  %630 = load i32, i32* @x.48
  %631 = load i32, i32* @y.49
  %632 = sub i32 %630, -717768432
  %633 = sub i32 %632, 1
  %634 = add i32 %633, -717768432
  %635 = sub i32 %630, 1
  %636 = mul i32 %630, %634
  %637 = urem i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = icmp slt i32 %631, 10
  %640 = xor i1 %638, true
  %641 = xor i1 %639, true
  %642 = xor i1 false, true
  %643 = and i1 %640, false
  %644 = and i1 %638, %642
  %645 = and i1 %641, false
  %646 = and i1 %639, %642
  %647 = or i1 %643, %644
  %648 = or i1 %645, %646
  %649 = xor i1 %647, %648
  %650 = or i1 %640, %641
  %651 = xor i1 %650, true
  %652 = or i1 false, %642
  %653 = and i1 %651, %652
  %654 = or i1 %649, %653
  %655 = or i1 %638, %639
  br i1 %654, label %656, label %865

; <label>:656:                                    ; preds = %629, %865
  %657 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %23, i32 0, i32 0
  %658 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %657, i64 2
  %659 = load i32, i32* @x.48
  %660 = load i32, i32* @y.49
  %661 = add i32 %659, -1680901942
  %662 = sub i32 %661, 1
  %663 = sub i32 %662, -1680901942
  %664 = sub i32 %659, 1
  %665 = mul i32 %659, %663
  %666 = urem i32 %665, 2
  %667 = icmp eq i32 %666, 0
  %668 = icmp slt i32 %660, 10
  %669 = xor i1 %667, true
  %670 = xor i1 %668, true
  %671 = xor i1 true, true
  %672 = and i1 %669, true
  %673 = and i1 %667, %671
  %674 = and i1 %670, true
  %675 = and i1 %668, %671
  %676 = or i1 %672, %673
  %677 = or i1 %674, %675
  %678 = xor i1 %676, %677
  %679 = or i1 %669, %670
  %680 = xor i1 %679, true
  %681 = or i1 true, %671
  %682 = and i1 %680, %681
  %683 = or i1 %678, %682
  %684 = or i1 %667, %668
  br i1 %683, label %685, label %865

; <label>:685:                                    ; preds = %656
  br label %686

; <label>:686:                                    ; preds = %686, %685
  %687 = phi %"class.std::vector.10"* [ %658, %685 ], [ %688, %686 ]
  %688 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %687, i64 -1
  call void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EED2Ev(%"class.std::vector.10"* %688) #3
  %689 = icmp eq %"class.std::vector.10"* %688, %657
  br i1 %689, label %690, label %686

; <label>:690:                                    ; preds = %686
  %691 = load i32, i32* @x.48
  %692 = load i32, i32* @y.49
  %693 = add i32 %691, 188781993
  %694 = sub i32 %693, 1
  %695 = sub i32 %694, 188781993
  %696 = sub i32 %691, 1
  %697 = mul i32 %691, %695
  %698 = urem i32 %697, 2
  %699 = icmp eq i32 %698, 0
  %700 = icmp slt i32 %692, 10
  %701 = xor i1 %699, true
  %702 = xor i1 %700, true
  %703 = xor i1 false, true
  %704 = and i1 %701, false
  %705 = and i1 %699, %703
  %706 = and i1 %702, false
  %707 = and i1 %700, %703
  %708 = or i1 %704, %705
  %709 = or i1 %706, %707
  %710 = xor i1 %708, %709
  %711 = or i1 %701, %702
  %712 = xor i1 %711, true
  %713 = or i1 false, %703
  %714 = and i1 %712, %713
  %715 = or i1 %710, %714
  %716 = or i1 %699, %700
  br i1 %715, label %717, label %868

; <label>:717:                                    ; preds = %690, %868
  %718 = load i32, i32* @x.48
  %719 = load i32, i32* @y.49
  %720 = add i32 %718, 1756052095
  %721 = sub i32 %720, 1
  %722 = sub i32 %721, 1756052095
  %723 = sub i32 %718, 1
  %724 = mul i32 %718, %722
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %719, 10
  %728 = and i1 %726, %727
  %729 = xor i1 %726, %727
  %730 = or i1 %728, %729
  %731 = or i1 %726, %727
  br i1 %730, label %732, label %868

; <label>:732:                                    ; preds = %717
  br label %733

; <label>:733:                                    ; preds = %732
  %734 = load i32, i32* @x.48
  %735 = load i32, i32* @y.49
  %736 = add i32 %734, -854786295
  %737 = sub i32 %736, 1
  %738 = sub i32 %737, -854786295
  %739 = sub i32 %734, 1
  %740 = mul i32 %734, %738
  %741 = urem i32 %740, 2
  %742 = icmp eq i32 %741, 0
  %743 = icmp slt i32 %735, 10
  %744 = xor i1 %742, true
  %745 = xor i1 %743, true
  %746 = xor i1 false, true
  %747 = and i1 %744, false
  %748 = and i1 %742, %746
  %749 = and i1 %745, false
  %750 = and i1 %743, %746
  %751 = or i1 %747, %748
  %752 = or i1 %749, %750
  %753 = xor i1 %751, %752
  %754 = or i1 %744, %745
  %755 = xor i1 %754, true
  %756 = or i1 false, %746
  %757 = and i1 %755, %756
  %758 = or i1 %753, %757
  %759 = or i1 %742, %743
  br i1 %758, label %760, label %869

; <label>:760:                                    ; preds = %733, %869
  %761 = load i8*, i8** %6, align 8
  %762 = load i32, i32* %7, align 4
  %763 = insertvalue { i8*, i32 } undef, i8* %761, 0
  %764 = insertvalue { i8*, i32 } %763, i32 %762, 1
  %765 = load i32, i32* @x.48
  %766 = load i32, i32* @y.49
  %767 = sub i32 0, 1
  %768 = add i32 %765, %767
  %769 = sub i32 %765, 1
  %770 = mul i32 %765, %768
  %771 = urem i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = icmp slt i32 %766, 10
  %774 = xor i1 %772, true
  %775 = xor i1 %773, true
  %776 = xor i1 true, true
  %777 = and i1 %774, true
  %778 = and i1 %772, %776
  %779 = and i1 %775, true
  %780 = and i1 %773, %776
  %781 = or i1 %777, %778
  %782 = or i1 %779, %780
  %783 = xor i1 %781, %782
  %784 = or i1 %774, %775
  %785 = xor i1 %784, true
  %786 = or i1 true, %776
  %787 = and i1 %785, %786
  %788 = or i1 %783, %787
  %789 = or i1 %772, %773
  br i1 %788, label %790, label %869

; <label>:790:                                    ; preds = %760
  resume { i8*, i32 } %764

; <label>:791:                                    ; preds = %53, %26
  call void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEC2Ev(%"class.std::vector.10"* %27) #3
  %792 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %27, i64 1
  %793 = icmp eq %"class.std::vector.10"* %792, %25
  br label %53

; <label>:794:                                    ; preds = %111, %84
  %795 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 0
  %796 = load i32, i32* %8, align 4
  %797 = sext i32 %796 to i64
  %798 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %795, i64 0, i64 %797
  %799 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 1
  %800 = load i32, i32* %799, align 8
  %801 = sext i32 %800 to i64
  br label %111

; <label>:802:                                    ; preds = %189, %163
  store i32 0, i32* %9, align 4
  br label %189

; <label>:803:                                    ; preds = %224, %209
  %804 = load i32, i32* %10, align 4
  %805 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 1
  %806 = load i32, i32* %805, align 8
  %807 = icmp slt i32 %804, %806
  br label %224

; <label>:808:                                    ; preds = %258, %243
  %809 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %11, i32 0, i32 0
  %810 = load i32, i32* %9, align 4
  store i32 %810, i32* %809, align 8
  %811 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %11, i32 0, i32 1
  store i8 0, i8* %811, align 4
  %812 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %11, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.5"* %812) #3
  %813 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %11, i32 0, i32 4
  store i32 -1, i32* %813, align 8
  %814 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 0
  %815 = load i32, i32* %9, align 4
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %814, i64 0, i64 %816
  %818 = load i32, i32* %10, align 4
  %819 = sext i32 %818 to i64
  %820 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %817, i64 %819) #3
  %821 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZN29Strongly_Connected_Components4nodeaSEOS0_(%"struct.Strongly_Connected_Components::node"* %820, %"struct.Strongly_Connected_Components::node"* dereferenceable(40) %11) #3
  call void @_ZN29Strongly_Connected_Components4nodeD2Ev(%"struct.Strongly_Connected_Components::node"* %11) #3
  br label %258

; <label>:822:                                    ; preds = %301, %286
  %823 = load i32, i32* %10, align 4
  %824 = add i32 %823, 636849783
  %825 = add i32 %824, 1
  %826 = sub i32 %825, 636849783
  %827 = add nsw i32 %823, 1
  store i32 %826, i32* %10, align 4
  br label %301

; <label>:828:                                    ; preds = %358, %331
  %829 = load i32, i32* %12, align 4
  %830 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 1
  %831 = load i32, i32* %830, align 8
  %832 = icmp slt i32 %829, %831
  br label %358

; <label>:833:                                    ; preds = %404, %390
  %834 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.15"* %14) #3
  %835 = load i32, i32* %834, align 4
  store i32 %835, i32* %16, align 4
  %836 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 0
  %837 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %836, i64 0, i64 0
  %838 = load i32, i32* %12, align 4
  %839 = sext i32 %838 to i64
  %840 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %837, i64 %839) #3
  %841 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %840, i32 0, i32 3
  br label %404

; <label>:842:                                    ; preds = %489, %462
  br label %489

; <label>:843:                                    ; preds = %539, %524
  %844 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 0
  %845 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %844, i64 0, i64 1
  %846 = load i32, i32* %18, align 4
  %847 = sext i32 %846 to i64
  %848 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %845, i64 %847) #3
  %849 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %848, i32 0, i32 1
  %850 = load i8, i8* %849, align 4
  %851 = trunc i8 %850 to i1
  br label %539

; <label>:852:                                    ; preds = %593, %579
  %853 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 3
  %854 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE4backEv(%"class.std::vector.0"* %853) #3
  %855 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.5"* %854) #3
  %856 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %20, i32 0, i32 0
  store i32* %855, i32** %856, align 8
  %857 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %22, i32 0, i32 3
  %858 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE4backEv(%"class.std::vector.0"* %857) #3
  %859 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.5"* %858) #3
  %860 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %21, i32 0, i32 0
  store i32* %859, i32** %860, align 8
  %861 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %20, i32 0, i32 0
  %862 = load i32*, i32** %861, align 8
  %863 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %21, i32 0, i32 0
  %864 = load i32*, i32** %863, align 8
  br label %593

; <label>:865:                                    ; preds = %656, %629
  %866 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %23, i32 0, i32 0
  %867 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %866, i64 2
  br label %656

; <label>:868:                                    ; preds = %717, %690
  br label %717

; <label>:869:                                    ; preds = %760, %733
  %870 = load i8*, i8** %6, align 8
  %871 = load i32, i32* %7, align 4
  %872 = insertvalue { i8*, i32 } undef, i8* %870, 0
  %873 = insertvalue { i8*, i32 } %872, i32 %871, 1
  br label %760
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN29Strongly_Connected_Components11get_scc_gidEv(%"class.std::vector.5"* noalias sret, %class.Strongly_Connected_Components*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %class.Strongly_Connected_Components*
  %5 = alloca i32*
  %6 = alloca i32*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.50
  %10 = load i32, i32* @y.51
  %11 = add i32 %9, 1517998198
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 1517998198
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 121794378, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %261
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 121794378, label %23
    i32 -1047507782, label %31
    i32 -145561270, label %66
    i32 1414974621, label %69
    i32 -1262364567, label %77
    i32 1991365340, label %86
    i32 -1757218812, label %88
    i32 -1088170500, label %101
    i32 -1488985343, label %119
    i32 -1544727348, label %127
    i32 515999116, label %154
    i32 -1988790434, label %181
    i32 -432137093, label %182
    i32 1734842958, label %198
    i32 232980003, label %220
    i32 817486333, label %221
    i32 155859826, label %222
    i32 734209436, label %225
    i32 -491215270, label %232
    i32 1351569510, label %233
  ]

; <label>:22:                                     ; preds = %20
  br label %261

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1047507782, i32 734209436
  store i32 %30, i32* %19
  br label %261

; <label>:31:                                     ; preds = %20
  %32 = alloca %class.Strongly_Connected_Components*, align 8
  %33 = alloca i32, align 4
  store i32* %33, i32** %6
  %34 = alloca i32, align 4
  store i32* %34, i32** %5
  store %class.Strongly_Connected_Components* %1, %class.Strongly_Connected_Components** %32, align 8
  %35 = load %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %32, align 8
  store %class.Strongly_Connected_Components* %35, %class.Strongly_Connected_Components** %4
  %36 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %4
  %37 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %36, i32 0, i32 4
  %38 = call zeroext i1 @_ZNKSt6vectorIiSaIiEE5emptyEv(%"class.std::vector.5"* %37) #3
  store i1 %38, i1* %3
  %39 = load i32, i32* @x.50
  %40 = load i32, i32* @y.51
  %41 = sub i32 %39, -847635809
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -847635809
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -145561270, i32 734209436
  store i32 %65, i32* %19
  br label %261

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %3
  %68 = select i1 %67, i32 1414974621, i32 155859826
  store i32 %68, i32* %19
  br label %261

; <label>:69:                                     ; preds = %20
  %70 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %4
  %71 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %70, i32 0, i32 4
  %72 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %4
  %73 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %72, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = sext i32 %74 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.5"* %71, i64 %75)
  %76 = load volatile i32*, i32** %6
  store i32 0, i32* %76, align 4
  store i32 -1262364567, i32* %19
  br label %261

; <label>:77:                                     ; preds = %20
  %78 = load volatile i32*, i32** %6
  %79 = load i32, i32* %78, align 4
  %80 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %4
  %81 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %80, i32 0, i32 3
  %82 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %81) #3
  %83 = trunc i64 %82 to i32
  %84 = icmp slt i32 %79, %83
  %85 = select i1 %84, i32 1991365340, i32 817486333
  store i32 %85, i32* %19
  br label %261

; <label>:86:                                     ; preds = %20
  %87 = load volatile i32*, i32** %5
  store i32 0, i32* %87, align 4
  store i32 -1757218812, i32* %19
  br label %261

; <label>:88:                                     ; preds = %20
  %89 = load volatile i32*, i32** %5
  %90 = load i32, i32* %89, align 4
  %91 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %4
  %92 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %91, i32 0, i32 3
  %93 = load volatile i32*, i32** %6
  %94 = load i32, i32* %93, align 4
  %95 = sext i32 %94 to i64
  %96 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %92, i64 %95) #3
  %97 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %96) #3
  %98 = trunc i64 %97 to i32
  %99 = icmp slt i32 %90, %98
  %100 = select i1 %99, i32 -1088170500, i32 -1544727348
  store i32 %100, i32* %19
  br label %261

; <label>:101:                                    ; preds = %20
  %102 = load volatile i32*, i32** %6
  %103 = load i32, i32* %102, align 4
  %104 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %4
  %105 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %104, i32 0, i32 4
  %106 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %4
  %107 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %106, i32 0, i32 3
  %108 = load volatile i32*, i32** %6
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"* %107, i64 %110) #3
  %112 = load volatile i32*, i32** %5
  %113 = load i32, i32* %112, align 4
  %114 = sext i32 %113 to i64
  %115 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.5"* %111, i64 %114) #3
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %116 to i64
  %118 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.5"* %105, i64 %117) #3
  store i32 %103, i32* %118, align 4
  store i32 -1488985343, i32* %19
  br label %261

; <label>:119:                                    ; preds = %20
  %120 = load volatile i32*, i32** %5
  %121 = load i32, i32* %120, align 4
  %122 = sub i32 %121, 1719629286
  %123 = add i32 %122, 1
  %124 = add i32 %123, 1719629286
  %125 = add nsw i32 %121, 1
  %126 = load volatile i32*, i32** %5
  store i32 %124, i32* %126, align 4
  store i32 -1757218812, i32* %19
  br label %261

; <label>:127:                                    ; preds = %20
  %128 = load i32, i32* @x.50
  %129 = load i32, i32* @y.51
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 true, true
  %140 = and i1 %137, true
  %141 = and i1 %135, %139
  %142 = and i1 %138, true
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 true, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  %153 = select i1 %151, i32 515999116, i32 -491215270
  store i32 %153, i32* %19
  br label %261

; <label>:154:                                    ; preds = %20
  %155 = load i32, i32* @x.50
  %156 = load i32, i32* @y.51
  %157 = sub i32 0, 1
  %158 = add i32 %155, %157
  %159 = sub i32 %155, 1
  %160 = mul i32 %155, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %156, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 true, true
  %167 = and i1 %164, true
  %168 = and i1 %162, %166
  %169 = and i1 %165, true
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 true, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  %180 = select i1 %178, i32 -1988790434, i32 -491215270
  store i32 %180, i32* %19
  br label %261

; <label>:181:                                    ; preds = %20
  store i32 -432137093, i32* %19
  br label %261

; <label>:182:                                    ; preds = %20
  %183 = load i32, i32* @x.50
  %184 = load i32, i32* @y.51
  %185 = add i32 %183, -536551939
  %186 = sub i32 %185, 1
  %187 = sub i32 %186, -536551939
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = and i1 %191, %192
  %194 = xor i1 %191, %192
  %195 = or i1 %193, %194
  %196 = or i1 %191, %192
  %197 = select i1 %195, i32 1734842958, i32 1351569510
  store i32 %197, i32* %19
  br label %261

; <label>:198:                                    ; preds = %20
  %199 = load volatile i32*, i32** %6
  %200 = load i32, i32* %199, align 4
  %201 = add i32 %200, 160810641
  %202 = add i32 %201, 1
  %203 = sub i32 %202, 160810641
  %204 = add nsw i32 %200, 1
  %205 = load volatile i32*, i32** %6
  store i32 %203, i32* %205, align 4
  %206 = load i32, i32* @x.50
  %207 = load i32, i32* @y.51
  %208 = sub i32 0, 1
  %209 = add i32 %206, %208
  %210 = sub i32 %206, 1
  %211 = mul i32 %206, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %207, 10
  %215 = and i1 %213, %214
  %216 = xor i1 %213, %214
  %217 = or i1 %215, %216
  %218 = or i1 %213, %214
  %219 = select i1 %217, i32 232980003, i32 1351569510
  store i32 %219, i32* %19
  br label %261

; <label>:220:                                    ; preds = %20
  store i32 -1262364567, i32* %19
  br label %261

; <label>:221:                                    ; preds = %20
  store i32 155859826, i32* %19
  br label %261

; <label>:222:                                    ; preds = %20
  %223 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %4
  %224 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %223, i32 0, i32 4
  call void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector.5"* %0, %"class.std::vector.5"* dereferenceable(24) %224)
  ret void

; <label>:225:                                    ; preds = %20
  %226 = alloca %class.Strongly_Connected_Components*, align 8
  %227 = alloca i32, align 4
  %228 = alloca i32, align 4
  store %class.Strongly_Connected_Components* %1, %class.Strongly_Connected_Components** %226, align 8
  %229 = load %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %226, align 8
  %230 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %229, i32 0, i32 4
  %231 = call zeroext i1 @_ZNKSt6vectorIiSaIiEE5emptyEv(%"class.std::vector.5"* %230) #3
  store i32 -1047507782, i32* %19
  br label %261

; <label>:232:                                    ; preds = %20
  store i32 515999116, i32* %19
  br label %261

; <label>:233:                                    ; preds = %20
  %234 = load volatile i32*, i32** %6
  %235 = load i32, i32* %234, align 4
  %236 = sub i32 0, 1308547904
  %237 = sub i32 %236, %235
  %238 = add i32 %237, 1308547904
  %239 = sub i32 0, %235
  %240 = add i32 %238, -1917062406
  %241 = add i32 %240, 1
  %242 = sub i32 %241, -1917062406
  %243 = add i32 %238, 1
  %244 = sub i32 0, -502728211
  %245 = sub i32 %244, %235
  %246 = add i32 %245, -502728211
  %247 = sub i32 0, %235
  %248 = sub i32 0, 1
  %249 = sub i32 %246, %248
  %250 = add i32 %246, 1
  %251 = add i32 %235, 1644497781
  %252 = sub i32 %251, 1
  %253 = sub i32 %252, 1644497781
  %254 = sub i32 %235, 1
  %255 = mul i32 %253, 1
  %256 = shl i32 %235, 1
  %257 = sub i32 0, 1
  %258 = sub i32 %235, %257
  %259 = add nsw i32 %235, 1
  %260 = load volatile i32*, i32** %6
  store i32 %258, i32* %260, align 4
  store i32 1734842958, i32* %19
  br label %261

; <label>:261:                                    ; preds = %233, %232, %225, %221, %220, %198, %182, %181, %154, %127, %119, %101, %88, %86, %77, %69, %66, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.5"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  ret i32* %11
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.54
  %3 = load i32, i32* @y.55
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %54

; <label>:15:                                     ; preds = %1, %54
  %16 = alloca %"class.std::vector.5"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %16, align 8
  %19 = load %"class.std::vector.5"*, %"class.std::vector.5"** %16, align 8
  %20 = bitcast %"class.std::vector.5"* %19 to %"struct.std::_Vector_base.6"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = bitcast %"class.std::vector.5"* %19 to %"struct.std::_Vector_base.6"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %25, i32 0, i32 1
  %27 = load i32*, i32** %26, align 8
  %28 = bitcast %"class.std::vector.5"* %19 to %"struct.std::_Vector_base.6"*
  %29 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %28) #3
  %30 = load i32, i32* @x.54
  %31 = load i32, i32* @y.55
  %32 = sub i32 %30, -766122549
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -766122549
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %54

; <label>:44:                                     ; preds = %15
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %23, i32* %27, %"class.std::allocator.7"* dereferenceable(1) %29)
          to label %45 unwind label %47

; <label>:45:                                     ; preds = %44
  %46 = bitcast %"class.std::vector.5"* %19 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.6"* %46) #3
  ret void

; <label>:47:                                     ; preds = %44
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %17, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %18, align 4
  %51 = bitcast %"class.std::vector.5"* %19 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.6"* %51) #3
  br label %52

; <label>:52:                                     ; preds = %47
  %53 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %53) #12
  unreachable

; <label>:54:                                     ; preds = %15, %1
  %55 = alloca %"class.std::vector.5"*, align 8
  %56 = alloca i8*
  %57 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %55, align 8
  %58 = load %"class.std::vector.5"*, %"class.std::vector.5"** %55, align 8
  %59 = bitcast %"class.std::vector.5"* %58 to %"struct.std::_Vector_base.6"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = bitcast %"class.std::vector.5"* %58 to %"struct.std::_Vector_base.6"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load i32*, i32** %65, align 8
  %67 = bitcast %"class.std::vector.5"* %58 to %"struct.std::_Vector_base.6"*
  %68 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %67) #3
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN29Strongly_Connected_ComponentsD2Ev(%class.Strongly_Connected_Components*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::vector.10"*
  %3 = alloca i1
  %4 = alloca %"class.std::vector.10"*
  %5 = alloca %"class.std::vector.10"*
  %6 = alloca %"class.std::vector.10"*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.56
  %10 = load i32, i32* @y.57
  %11 = add i32 %9, 1069090963
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 1069090963
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 509493059, i32* %19
  %20 = alloca %"class.std::vector.10"*
  br label %21

; <label>:21:                                     ; preds = %1, %152
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 509493059, label %24
    i32 1258630556, label %32
    i32 1890477941, label %69
    i32 -2049268792, label %71
    i32 -2027284945, label %100
    i32 -1942627390, label %133
    i32 1436102920, label %137
    i32 -428519434, label %138
    i32 -80044834, label %147
  ]

; <label>:23:                                     ; preds = %21
  br label %152

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1258630556, i32 -428519434
  store i32 %31, i32* %19
  br label %152

; <label>:32:                                     ; preds = %21
  %33 = alloca %class.Strongly_Connected_Components*, align 8
  store %class.Strongly_Connected_Components* %0, %class.Strongly_Connected_Components** %33, align 8
  %34 = load %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %33, align 8
  %35 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %34, i32 0, i32 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %35) #3
  %36 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %34, i32 0, i32 3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %36) #3
  %37 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %34, i32 0, i32 2
  call void @_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev(%"class.std::stack"* %37) #3
  %38 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %34, i32 0, i32 0
  %39 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %38, i32 0, i32 0
  store %"class.std::vector.10"* %39, %"class.std::vector.10"** %6
  %40 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %41 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %40, i64 2
  store %"class.std::vector.10"* %41, %"class.std::vector.10"** %5
  %42 = load i32, i32* @x.56
  %43 = load i32, i32* @y.57
  %44 = sub i32 %42, 192140329
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 192140329
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1890477941, i32 -428519434
  store i32 %68, i32* %19
  br label %152

; <label>:69:                                     ; preds = %21
  store i32 -2049268792, i32* %19
  %70 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %5
  store %"class.std::vector.10"* %70, %"class.std::vector.10"** %20
  br label %152

; <label>:71:                                     ; preds = %21
  %72 = load %"class.std::vector.10"*, %"class.std::vector.10"** %20
  store %"class.std::vector.10"* %72, %"class.std::vector.10"** %2
  %73 = load i32, i32* @x.56
  %74 = load i32, i32* @y.57
  %75 = sub i32 %73, 129100084
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 129100084
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 -2027284945, i32 -80044834
  store i32 %99, i32* %19
  br label %152

; <label>:100:                                    ; preds = %21
  %101 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %2
  %102 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %101, i64 -1
  store %"class.std::vector.10"* %102, %"class.std::vector.10"** %4
  %103 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %4
  call void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EED2Ev(%"class.std::vector.10"* %103) #3
  %104 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %105 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %4
  %106 = icmp eq %"class.std::vector.10"* %105, %104
  store i1 %106, i1* %3
  %107 = load i32, i32* @x.56
  %108 = load i32, i32* @y.57
  %109 = sub i32 0, 1
  %110 = add i32 %107, %109
  %111 = sub i32 %107, 1
  %112 = mul i32 %107, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %108, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 -1942627390, i32 -80044834
  store i32 %132, i32* %19
  br label %152

; <label>:133:                                    ; preds = %21
  %134 = load volatile i1, i1* %3
  %135 = select i1 %134, i32 1436102920, i32 -2049268792
  store i32 %135, i32* %19
  %136 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %4
  store %"class.std::vector.10"* %136, %"class.std::vector.10"** %20
  br label %152

; <label>:137:                                    ; preds = %21
  ret void

; <label>:138:                                    ; preds = %21
  %139 = alloca %class.Strongly_Connected_Components*, align 8
  store %class.Strongly_Connected_Components* %0, %class.Strongly_Connected_Components** %139, align 8
  %140 = load %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %139, align 8
  %141 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %140, i32 0, i32 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %141) #3
  %142 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %140, i32 0, i32 3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"* %142) #3
  %143 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %140, i32 0, i32 2
  call void @_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev(%"class.std::stack"* %143) #3
  %144 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %140, i32 0, i32 0
  %145 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %144, i32 0, i32 0
  %146 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %145, i64 2
  store i32 1258630556, i32* %19
  br label %152

; <label>:147:                                    ; preds = %21
  %148 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %2
  %149 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %148, i64 -1
  call void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EED2Ev(%"class.std::vector.10"* %149) #3
  %150 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %151 = icmp eq %"class.std::vector.10"* %149, %150
  store i32 -2027284945, i32* %19
  br label %152

; <label>:152:                                    ; preds = %147, %138, %133, %100, %71, %69, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.5"*, %"class.std::vector.5"** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.5"* %9, %"class.std::vector.5"* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %58

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.58
  %18 = load i32, i32* @y.59
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %65

; <label>:30:                                     ; preds = %16, %65
  %31 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %31) #3
  %32 = load i32, i32* @x.58
  %33 = load i32, i32* @y.59
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %65

; <label>:57:                                     ; preds = %30
  ret void

; <label>:58:                                     ; preds = %1
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %3, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %4, align 4
  %62 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %62) #3
  br label %63

; <label>:63:                                     ; preds = %58
  %64 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %64) #12
  unreachable

; <label>:65:                                     ; preds = %30, %16
  %66 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %66) #3
  br label %30
}

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEC2Ev(%"class.std::vector.10"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %2, align 8
  %3 = load %"class.std::vector.10"*, %"class.std::vector.10"** %2, align 8
  %4 = bitcast %"class.std::vector.10"* %3 to %"struct.std::_Vector_base.11"*
  invoke void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EEC2Ev(%"struct.std::_Vector_base.11"* %4)
          to label %5 unwind label %48

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.60
  %7 = load i32, i32* @y.61
  %8 = sub i32 %6, -47741418
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -47741418
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = and i1 %14, %15
  %17 = xor i1 %14, %15
  %18 = or i1 %16, %17
  %19 = or i1 %14, %15
  br i1 %18, label %20, label %51

; <label>:20:                                     ; preds = %5, %51
  %21 = load i32, i32* @x.60
  %22 = load i32, i32* @y.61
  %23 = add i32 %21, -1806552740
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -1806552740
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %51

; <label>:47:                                     ; preds = %20
  ret void

; <label>:48:                                     ; preds = %1
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #12
  unreachable

; <label>:51:                                     ; preds = %20, %5
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5stackIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::stack"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::stack"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::stack"*, %"class.std::stack"** %3, align 8
  %6 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %5, i32 0, i32 0
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %6, %"class.std::deque"* dereferenceable(80) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %7) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %4, %"class.std::deque"* %7) #3
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %8) #3
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"* %7, %"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* %4, %"class.std::allocator.7"* dereferenceable(1) %9)
          to label %10 unwind label %54

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.66
  %12 = load i32, i32* @y.67
  %13 = add i32 %11, -727712858
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, -727712858
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %61

; <label>:25:                                     ; preds = %10, %61
  %26 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %26) #3
  %27 = load i32, i32* @x.66
  %28 = load i32, i32* @y.67
  %29 = sub i32 %27, -1039953712
  %30 = sub i32 %29, 1
  %31 = add i32 %30, -1039953712
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %61

; <label>:53:                                     ; preds = %25
  ret void

; <label>:54:                                     ; preds = %1
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %5, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %6, align 4
  %58 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %58) #3
  br label %59

; <label>:59:                                     ; preds = %54
  %60 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %60) #12
  unreachable

; <label>:61:                                     ; preds = %25, %10
  %62 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %62) #3
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base.1"* %4)
          to label %5 unwind label %59

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.68
  %7 = load i32, i32* @y.69
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 false, true
  %18 = and i1 %15, false
  %19 = and i1 %13, %17
  %20 = and i1 %16, false
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 false, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %92

; <label>:31:                                     ; preds = %5, %92
  %32 = load i32, i32* @x.68
  %33 = load i32, i32* @y.69
  %34 = add i32 %32, 1805496730
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1805496730
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %92

; <label>:58:                                     ; preds = %31
  ret void

; <label>:59:                                     ; preds = %1
  %60 = load i32, i32* @x.68
  %61 = load i32, i32* @y.69
  %62 = add i32 %60, -766505673
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -766505673
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %93

; <label>:74:                                     ; preds = %59, %93
  %75 = landingpad { i8*, i32 }
          catch i8* null
  %76 = extractvalue { i8*, i32 } %75, 0
  call void @__clang_call_terminate(i8* %76) #12
  %77 = load i32, i32* @x.68
  %78 = load i32, i32* @y.69
  %79 = sub i32 %77, 2003816551
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 2003816551
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %93

; <label>:91:                                     ; preds = %74
  unreachable

; <label>:92:                                     ; preds = %31, %5
  br label %31

; <label>:93:                                     ; preds = %74, %59
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  call void @__clang_call_terminate(i8* %95) #12
  br label %74
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.5"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.70
  %3 = load i32, i32* @y.71
  %4 = add i32 %2, 1199462776
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1199462776
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %63

; <label>:28:                                     ; preds = %1, %63
  %29 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %29, align 8
  %30 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %31 = bitcast %"class.std::vector.5"* %30 to %"struct.std::_Vector_base.6"*
  %32 = load i32, i32* @x.70
  %33 = load i32, i32* @y.71
  %34 = sub i32 %32, 825482885
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 825482885
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %63

; <label>:58:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.6"* %31)
          to label %59 unwind label %60

; <label>:59:                                     ; preds = %58
  ret void

; <label>:60:                                     ; preds = %58
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #12
  unreachable

; <label>:63:                                     ; preds = %28, %1
  %64 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %64, align 8
  %65 = load %"class.std::vector.5"*, %"class.std::vector.5"** %64, align 8
  %66 = bitcast %"class.std::vector.5"* %65 to %"struct.std::_Vector_base.6"*
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %10, align 8
  %12 = ptrtoint %"class.std::vector.5"* %7 to i64
  %13 = ptrtoint %"class.std::vector.5"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE6resizeEm(%"class.std::vector.10"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::vector.10"*
  %6 = alloca %"class.std::vector.10"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::vector.10"*, %"class.std::vector.10"** %6, align 8
  store %"class.std::vector.10"* %8, %"class.std::vector.10"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %5
  %11 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"* %10) #3
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1235410797, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %136
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1235410797, label %16
    i32 -272724157, label %21
    i32 -1024478464, label %30
    i32 -974004977, label %36
    i32 -1386601385, label %45
    i32 1871871040, label %73
    i32 983259708, label %100
    i32 -946508347, label %101
    i32 -1283029796, label %117
    i32 1489907302, label %133
    i32 1643653583, label %134
    i32 2114170606, label %135
  ]

; <label>:15:                                     ; preds = %13
  br label %136

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -272724157, i32 -1024478464
  store i32 %20, i32* %12
  br label %136

; <label>:21:                                     ; preds = %13
  %22 = load i64, i64* %7, align 8
  %23 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %5
  %24 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"* %23) #3
  %25 = add i64 %22, 1047362114539658565
  %26 = sub i64 %25, %24
  %27 = sub i64 %26, 1047362114539658565
  %28 = sub i64 %22, %24
  %29 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %5
  call void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE17_M_default_appendEm(%"class.std::vector.10"* %29, i64 %27)
  store i32 -946508347, i32* %12
  br label %136

; <label>:30:                                     ; preds = %13
  %31 = load i64, i64* %7, align 8
  %32 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %5
  %33 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"* %32) #3
  %34 = icmp ult i64 %31, %33
  %35 = select i1 %34, i32 -974004977, i32 -1386601385
  store i32 %35, i32* %12
  br label %136

; <label>:36:                                     ; preds = %13
  %37 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %5
  %38 = bitcast %"class.std::vector.10"* %37 to %"struct.std::_Vector_base.11"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %38, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %40, align 8
  %42 = load i64, i64* %7, align 8
  %43 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %41, i64 %42
  %44 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %5
  call void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.10"* %44, %"struct.Strongly_Connected_Components::node"* %43) #3
  store i32 -1386601385, i32* %12
  br label %136

; <label>:45:                                     ; preds = %13
  %46 = load i32, i32* @x.74
  %47 = load i32, i32* @y.75
  %48 = sub i32 %46, 1695775578
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1695775578
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1871871040, i32 1643653583
  store i32 %72, i32* %12
  br label %136

; <label>:73:                                     ; preds = %13
  %74 = load i32, i32* @x.74
  %75 = load i32, i32* @y.75
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 983259708, i32 1643653583
  store i32 %99, i32* %12
  br label %136

; <label>:100:                                    ; preds = %13
  store i32 -946508347, i32* %12
  br label %136

; <label>:101:                                    ; preds = %13
  %102 = load i32, i32* @x.74
  %103 = load i32, i32* @y.75
  %104 = add i32 %102, -179659998
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, -179659998
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 -1283029796, i32 2114170606
  store i32 %116, i32* %12
  br label %136

; <label>:117:                                    ; preds = %13
  %118 = load i32, i32* @x.74
  %119 = load i32, i32* @y.75
  %120 = sub i32 %118, 1157037680
  %121 = sub i32 %120, 1
  %122 = add i32 %121, 1157037680
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  %132 = select i1 %130, i32 1489907302, i32 2114170606
  store i32 %132, i32* %12
  br label %136

; <label>:133:                                    ; preds = %13
  ret void

; <label>:134:                                    ; preds = %13
  store i32 1871871040, i32* %12
  br label %136

; <label>:135:                                    ; preds = %13
  store i32 -1283029796, i32* %12
  br label %136

; <label>:136:                                    ; preds = %135, %134, %117, %101, %100, %73, %45, %36, %30, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.10"*, %"class.std::vector.10"** %3, align 8
  %6 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %9, i64 %10
  ret %"struct.Strongly_Connected_Components::node"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZN29Strongly_Connected_Components4nodeaSEOS0_(%"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"* dereferenceable(40)) #4 comdat align 2 {
  %3 = alloca %"struct.Strongly_Connected_Components::node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.78
  %7 = load i32, i32* @y.79
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -85960474, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -85960474, label %19
    i32 890161479, label %27
    i32 1733780010, label %62
    i32 -624814294, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 890161479, i32 -624814294
  store i32 %26, i32* %15
  br label %81

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %29 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %28, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %29, align 8
  %30 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %28, align 8
  store %"struct.Strongly_Connected_Components::node"* %30, %"struct.Strongly_Connected_Components::node"** %3
  %31 = load volatile %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3
  %32 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %31, i32 0, i32 0
  %33 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %29, align 8
  %34 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %33, i32 0, i32 0
  %35 = bitcast i32* %32 to i8*
  %36 = bitcast i32* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 5, i32 8, i1 false)
  %37 = load volatile %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3
  %38 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %37, i32 0, i32 3
  %39 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %29, align 8
  %40 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %39, i32 0, i32 3
  %41 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIiSaIiEEaSEOS1_(%"class.std::vector.5"* %38, %"class.std::vector.5"* dereferenceable(24) %40) #3
  %42 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %29, align 8
  %43 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %42, i32 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = load volatile %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3
  %46 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %45, i32 0, i32 4
  store i32 %44, i32* %46, align 8
  %47 = load i32, i32* @x.78
  %48 = load i32, i32* @y.79
  %49 = sub i32 %47, 1542128729
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1542128729
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1733780010, i32 -624814294
  store i32 %61, i32* %15
  br label %81

; <label>:62:                                     ; preds = %16
  %63 = load volatile %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3
  ret %"struct.Strongly_Connected_Components::node"* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %66 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %65, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %66, align 8
  %67 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %65, align 8
  %68 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %67, i32 0, i32 0
  %69 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %66, align 8
  %70 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %69, i32 0, i32 0
  %71 = bitcast i32* %68 to i8*
  %72 = bitcast i32* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 5, i32 8, i1 false)
  %73 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %67, i32 0, i32 3
  %74 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %66, align 8
  %75 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %74, i32 0, i32 3
  %76 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIiSaIiEEaSEOS1_(%"class.std::vector.5"* %73, %"class.std::vector.5"* dereferenceable(24) %75) #3
  %77 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %66, align 8
  %78 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %77, i32 0, i32 4
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %67, i32 0, i32 4
  store i32 %79, i32* %80, align 8
  store i32 890161479, i32* %15
  br label %81

; <label>:81:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN29Strongly_Connected_Components4nodeD2Ev(%"struct.Strongly_Connected_Components::node"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.80
  %5 = load i32, i32* @y.81
  %6 = sub i32 %4, 1070542385
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1070542385
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 506806941, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 506806941, label %18
    i32 254130707, label %26
    i32 1531794083, label %56
    i32 -1394942722, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 254130707, i32 -1394942722
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %27, align 8
  %28 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %27, align 8
  %29 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %28, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %29) #3
  %30 = load i32, i32* @x.80
  %31 = load i32, i32* @y.81
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1531794083, i32 -1394942722
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %58, align 8
  %59 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %58, align 8
  %60 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %59, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %60) #3
  store i32 254130707, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNKSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %9, i64 %10
  ret %"class.std::vector.5"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.15"* %2, i32** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.15"* %2, i32** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %1, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %5) #3
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %8) #3
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ne i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.15"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.15"* @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.15"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i32 1
  store i32* %6, i32** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.15"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN29Strongly_Connected_Components7scc_dfsEii(%class.Strongly_Connected_Components*, i32, i32) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %class.Strongly_Connected_Components*
  %7 = alloca %class.Strongly_Connected_Components*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %class.Strongly_Connected_Components* %0, %class.Strongly_Connected_Components** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  %12 = load %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %7, align 8
  store %class.Strongly_Connected_Components* %12, %class.Strongly_Connected_Components** %6
  %13 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  %14 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %13, i32 0, i32 0
  %15 = load i32, i32* %9, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %14, i64 0, i64 %16
  %18 = load i32, i32* %8, align 4
  %19 = sext i32 %18 to i64
  %20 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %17, i64 %19) #3
  %21 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %20, i32 0, i32 1
  store i8 1, i8* %21, align 4
  store i32 0, i32* %10, align 4
  %22 = alloca i32
  store i32 -1929464472, i32* %22
  br label %23

; <label>:23:                                     ; preds = %3, %306
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -1929464472, label %26
    i32 -2130746770, label %41
    i32 -819696817, label %57
    i32 1537178122, label %98
    i32 -1340900926, label %101
    i32 -1683587207, label %116
    i32 754580405, label %143
    i32 1501951258, label %144
    i32 671456396, label %159
    i32 -1490404063, label %186
    i32 1790806684, label %189
    i32 667938046, label %203
    i32 195743170, label %204
    i32 250131817, label %210
    i32 -380544704, label %214
    i32 -1417638492, label %217
    i32 1099226109, label %221
    i32 125396629, label %249
    i32 314423006, label %265
    i32 136907057, label %266
    i32 2061607922, label %292
    i32 -926513261, label %293
    i32 1497162013, label %305
  ]

; <label>:25:                                     ; preds = %23
  br label %306

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* %10, align 4
  %28 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  %29 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %28, i32 0, i32 0
  %30 = load i32, i32* %9, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %29, i64 0, i64 %31
  %33 = load i32, i32* %8, align 4
  %34 = sext i32 %33 to i64
  %35 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %32, i64 %34) #3
  %36 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %35, i32 0, i32 3
  %37 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %36) #3
  %38 = trunc i64 %37 to i32
  %39 = icmp slt i32 %27, %38
  %40 = select i1 %39, i32 -2130746770, i32 250131817
  store i32 %40, i32* %22
  br label %306

; <label>:41:                                     ; preds = %23
  %42 = load i32, i32* @x.94
  %43 = load i32, i32* @y.95
  %44 = add i32 %42, -60127139
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -60127139
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -819696817, i32 136907057
  store i32 %56, i32* %22
  br label %306

; <label>:57:                                     ; preds = %23
  %58 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  %59 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %58, i32 0, i32 0
  %60 = load i32, i32* %9, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %59, i64 0, i64 %61
  %63 = load i32, i32* %8, align 4
  %64 = sext i32 %63 to i64
  %65 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %62, i64 %64) #3
  %66 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %65, i32 0, i32 3
  %67 = load i32, i32* %10, align 4
  %68 = sext i32 %67 to i64
  %69 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.5"* %66, i64 %68) #3
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %11, align 4
  %71 = load i32, i32* %11, align 4
  %72 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  %73 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %72, i32 0, i32 0
  %74 = load i32, i32* %9, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %73, i64 0, i64 %75
  %77 = load i32, i32* %8, align 4
  %78 = sext i32 %77 to i64
  %79 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %76, i64 %78) #3
  %80 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %79, i32 0, i32 4
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %71, %81
  store i1 %82, i1* %5
  %83 = load i32, i32* @x.94
  %84 = load i32, i32* @y.95
  %85 = add i32 %83, 2130357694
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, 2130357694
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  %97 = select i1 %95, i32 1537178122, i32 136907057
  store i32 %97, i32* %22
  br label %306

; <label>:98:                                     ; preds = %23
  %99 = load volatile i1, i1* %5
  %100 = select i1 %99, i32 -1340900926, i32 1501951258
  store i32 %100, i32* %22
  br label %306

; <label>:101:                                    ; preds = %23
  %102 = load i32, i32* @x.94
  %103 = load i32, i32* @y.95
  %104 = sub i32 0, 1
  %105 = add i32 %102, %104
  %106 = sub i32 %102, 1
  %107 = mul i32 %102, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %103, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  %115 = select i1 %113, i32 -1683587207, i32 2061607922
  store i32 %115, i32* %22
  br label %306

; <label>:116:                                    ; preds = %23
  %117 = load i32, i32* @x.94
  %118 = load i32, i32* @y.95
  %119 = sub i32 0, 1
  %120 = add i32 %117, %119
  %121 = sub i32 %117, 1
  %122 = mul i32 %117, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %118, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 754580405, i32 2061607922
  store i32 %142, i32* %22
  br label %306

; <label>:143:                                    ; preds = %23
  store i32 195743170, i32* %22
  br label %306

; <label>:144:                                    ; preds = %23
  %145 = load i32, i32* @x.94
  %146 = load i32, i32* @y.95
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 671456396, i32 -926513261
  store i32 %158, i32* %22
  br label %306

; <label>:159:                                    ; preds = %23
  %160 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  %161 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %160, i32 0, i32 0
  %162 = load i32, i32* %9, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %161, i64 0, i64 %163
  %165 = load i32, i32* %11, align 4
  %166 = sext i32 %165 to i64
  %167 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %164, i64 %166) #3
  %168 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %167, i32 0, i32 1
  %169 = load i8, i8* %168, align 4
  %170 = trunc i8 %169 to i1
  store i1 %170, i1* %4
  %171 = load i32, i32* @x.94
  %172 = load i32, i32* @y.95
  %173 = sub i32 %171, -578798855
  %174 = sub i32 %173, 1
  %175 = add i32 %174, -578798855
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  %185 = select i1 %183, i32 -1490404063, i32 -926513261
  store i32 %185, i32* %22
  br label %306

; <label>:186:                                    ; preds = %23
  %187 = load volatile i1, i1* %4
  %188 = select i1 %187, i32 667938046, i32 1790806684
  store i32 %188, i32* %22
  br label %306

; <label>:189:                                    ; preds = %23
  %190 = load i32, i32* %8, align 4
  %191 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  %192 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %191, i32 0, i32 0
  %193 = load i32, i32* %9, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %192, i64 0, i64 %194
  %196 = load i32, i32* %11, align 4
  %197 = sext i32 %196 to i64
  %198 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %195, i64 %197) #3
  %199 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %198, i32 0, i32 4
  store i32 %190, i32* %199, align 8
  %200 = load i32, i32* %11, align 4
  %201 = load i32, i32* %9, align 4
  %202 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  call void @_ZN29Strongly_Connected_Components7scc_dfsEii(%class.Strongly_Connected_Components* %202, i32 %200, i32 %201)
  store i32 667938046, i32* %22
  br label %306

; <label>:203:                                    ; preds = %23
  store i32 195743170, i32* %22
  br label %306

; <label>:204:                                    ; preds = %23
  %205 = load i32, i32* %10, align 4
  %206 = sub i32 %205, 1352604869
  %207 = add i32 %206, 1
  %208 = add i32 %207, 1352604869
  %209 = add nsw i32 %205, 1
  store i32 %208, i32* %10, align 4
  store i32 -1929464472, i32* %22
  br label %306

; <label>:210:                                    ; preds = %23
  %211 = load i32, i32* %9, align 4
  %212 = icmp eq i32 %211, 0
  %213 = select i1 %212, i32 -380544704, i32 -1417638492
  store i32 %213, i32* %22
  br label %306

; <label>:214:                                    ; preds = %23
  %215 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  %216 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %215, i32 0, i32 2
  call void @_ZNSt5stackIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::stack"* %216, i32* dereferenceable(4) %8)
  store i32 1099226109, i32* %22
  br label %306

; <label>:217:                                    ; preds = %23
  %218 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  %219 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %218, i32 0, i32 3
  %220 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE4backEv(%"class.std::vector.0"* %219) #3
  call void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.5"* %220, i32* dereferenceable(4) %8)
  store i32 1099226109, i32* %22
  br label %306

; <label>:221:                                    ; preds = %23
  %222 = load i32, i32* @x.94
  %223 = load i32, i32* @y.95
  %224 = add i32 %222, 1094100557
  %225 = sub i32 %224, 1
  %226 = sub i32 %225, 1094100557
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = xor i1 %230, true
  %233 = xor i1 %231, true
  %234 = xor i1 false, true
  %235 = and i1 %232, false
  %236 = and i1 %230, %234
  %237 = and i1 %233, false
  %238 = and i1 %231, %234
  %239 = or i1 %235, %236
  %240 = or i1 %237, %238
  %241 = xor i1 %239, %240
  %242 = or i1 %232, %233
  %243 = xor i1 %242, true
  %244 = or i1 false, %234
  %245 = and i1 %243, %244
  %246 = or i1 %241, %245
  %247 = or i1 %230, %231
  %248 = select i1 %246, i32 125396629, i32 1497162013
  store i32 %248, i32* %22
  br label %306

; <label>:249:                                    ; preds = %23
  %250 = load i32, i32* @x.94
  %251 = load i32, i32* @y.95
  %252 = sub i32 %250, -155743888
  %253 = sub i32 %252, 1
  %254 = add i32 %253, -155743888
  %255 = sub i32 %250, 1
  %256 = mul i32 %250, %254
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %251, 10
  %260 = and i1 %258, %259
  %261 = xor i1 %258, %259
  %262 = or i1 %260, %261
  %263 = or i1 %258, %259
  %264 = select i1 %262, i32 314423006, i32 1497162013
  store i32 %264, i32* %22
  br label %306

; <label>:265:                                    ; preds = %23
  ret void

; <label>:266:                                    ; preds = %23
  %267 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  %268 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %267, i32 0, i32 0
  %269 = load i32, i32* %9, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %268, i64 0, i64 %270
  %272 = load i32, i32* %8, align 4
  %273 = sext i32 %272 to i64
  %274 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %271, i64 %273) #3
  %275 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %274, i32 0, i32 3
  %276 = load i32, i32* %10, align 4
  %277 = sext i32 %276 to i64
  %278 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.5"* %275, i64 %277) #3
  %279 = load i32, i32* %278, align 4
  store i32 %279, i32* %11, align 4
  %280 = load i32, i32* %11, align 4
  %281 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  %282 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %281, i32 0, i32 0
  %283 = load i32, i32* %9, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %282, i64 0, i64 %284
  %286 = load i32, i32* %8, align 4
  %287 = sext i32 %286 to i64
  %288 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %285, i64 %287) #3
  %289 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %288, i32 0, i32 4
  %290 = load i32, i32* %289, align 8
  %291 = icmp eq i32 %280, %290
  store i32 -819696817, i32* %22
  br label %306

; <label>:292:                                    ; preds = %23
  store i32 -1683587207, i32* %22
  br label %306

; <label>:293:                                    ; preds = %23
  %294 = load volatile %class.Strongly_Connected_Components*, %class.Strongly_Connected_Components** %6
  %295 = getelementptr inbounds %class.Strongly_Connected_Components, %class.Strongly_Connected_Components* %294, i32 0, i32 0
  %296 = load i32, i32* %9, align 4
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds [2 x %"class.std::vector.10"], [2 x %"class.std::vector.10"]* %295, i64 0, i64 %297
  %299 = load i32, i32* %11, align 4
  %300 = sext i32 %299 to i64
  %301 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EEixEm(%"class.std::vector.10"* %298, i64 %300) #3
  %302 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %301, i32 0, i32 1
  %303 = load i8, i8* %302, align 4
  %304 = trunc i8 %303 to i1
  store i32 671456396, i32* %22
  br label %306

; <label>:305:                                    ; preds = %23
  store i32 125396629, i32* %22
  br label %306

; <label>:306:                                    ; preds = %305, %293, %292, %266, %249, %221, %217, %214, %210, %204, %203, %189, %186, %159, %144, %143, %116, %101, %98, %57, %41, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt5stackIiSt5dequeIiSaIiEEE4sizeEv(%"class.std::stack"*) #4 comdat align 2 {
  %2 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %2, align 8
  %3 = load %"class.std::stack"*, %"class.std::stack"** %2, align 8
  %4 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %3, i32 0, i32 0
  %5 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv(%"class.std::stack"*) #4 comdat align 2 {
  %2 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %2, align 8
  %3 = load %"class.std::stack"*, %"class.std::stack"** %2, align 8
  %4 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %3, i32 0, i32 0
  %5 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE4backEv(%"class.std::deque"* %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5stackIiSt5dequeIiSaIiEEE3popEv(%"class.std::stack"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.100
  %5 = load i32, i32* @y.101
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1100571175, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1100571175, label %17
    i32 -664361962, label %25
    i32 -1857762842, label %43
    i32 -263777980, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -664361962, i32 -263777980
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %26, align 8
  %27 = load %"class.std::stack"*, %"class.std::stack"** %26, align 8
  %28 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %27, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE8pop_backEv(%"class.std::deque"* %28) #3
  %29 = load i32, i32* @x.100
  %30 = load i32, i32* @y.101
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1857762842, i32 -263777980
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %45, align 8
  %46 = load %"class.std::stack"*, %"class.std::stack"** %45, align 8
  %47 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %46, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE8pop_backEv(%"class.std::deque"* %47) #3
  store i32 -664361962, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE9push_backEOS1_(%"class.std::vector.0"*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.102
  %6 = load i32, i32* @y.103
  %7 = add i32 %5, -1043298816
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1043298816
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1986042850, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1986042850, label %19
    i32 -1908113737, label %27
    i32 1540539419, label %60
    i32 196917928, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1908113737, i32 196917928
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  %29 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %31 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %32 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.5"* dereferenceable(24) %31) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.0"* %30, %"class.std::vector.5"* dereferenceable(24) %32)
  %33 = load i32, i32* @x.102
  %34 = load i32, i32* @y.103
  %35 = add i32 %33, -1250693531
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1250693531
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1540539419, i32 196917928
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::vector.0"*, align 8
  %63 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %62, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %63, align 8
  %64 = load %"class.std::vector.0"*, %"class.std::vector.0"** %62, align 8
  %65 = load %"class.std::vector.5"*, %"class.std::vector.5"** %63, align 8
  %66 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.5"* dereferenceable(24) %65) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.0"* %64, %"class.std::vector.5"* dereferenceable(24) %66)
  store i32 -1908113737, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_(i32*, i32*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv()
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  call void @_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %16, i32* %18)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE4backEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = call %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE3endEv(%"class.std::vector.0"* %5) #3
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  store %"class.std::vector.5"* %6, %"class.std::vector.5"** %7, align 8
  %8 = call %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.21"* %3, i64 1) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %4, i32 0, i32 0
  store %"class.std::vector.5"* %8, %"class.std::vector.5"** %9, align 8
  %10 = call dereferenceable(24) %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"* %4) #3
  ret %"class.std::vector.5"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %5 = bitcast %"class.std::vector.5"* %4 to %"struct.std::_Vector_base.6"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.16"* %2, i32** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.110
  %6 = load i32, i32* @y.111
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 361743187, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 361743187, label %18
    i32 430506920, label %38
    i32 -1067162310, label %62
    i32 -1653184003, label %64
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 430506920, i32 -1653184003
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %40 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %40, align 8
  %41 = load %"class.std::vector.5"*, %"class.std::vector.5"** %40, align 8
  %42 = bitcast %"class.std::vector.5"* %41 to %"struct.std::_Vector_base.6"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.16"* %39, i32** dereferenceable(8) %44) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %39, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  store i32* %46, i32** %2
  %47 = load i32, i32* @x.110
  %48 = load i32, i32* @y.111
  %49 = add i32 %47, -671460126
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -671460126
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1067162310, i32 -1653184003
  store i32 %61, i32* %14
  br label %73

; <label>:62:                                     ; preds = %15
  %63 = load volatile i32*, i32** %2
  ret i32* %63

; <label>:64:                                     ; preds = %15
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %66 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %66, align 8
  %67 = load %"class.std::vector.5"*, %"class.std::vector.5"** %66, align 8
  %68 = bitcast %"class.std::vector.5"* %67 to %"struct.std::_Vector_base.6"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %69, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.16"* %65, i32** dereferenceable(8) %70) #3
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %65, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  store i32 430506920, i32* %14
  br label %73

; <label>:73:                                     ; preds = %64, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev(%"class.std::stack"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.112
  %5 = load i32, i32* @y.113
  %6 = sub i32 %4, -1558713891
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1558713891
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1264301556, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1264301556, label %18
    i32 -390488898, label %26
    i32 862317300, label %56
    i32 -257124855, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -390488898, i32 -257124855
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %27, align 8
  %28 = load %"class.std::stack"*, %"class.std::stack"** %27, align 8
  %29 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %28, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %29) #3
  %30 = load i32, i32* @x.112
  %31 = load i32, i32* @y.113
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 862317300, i32 -257124855
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::stack"*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %58, align 8
  %59 = load %"class.std::stack"*, %"class.std::stack"** %58, align 8
  %60 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %59, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %60) #3
  store i32 -390488898, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EED2Ev(%"class.std::vector.10"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.114
  %3 = load i32, i32* @y.115
  %4 = add i32 %2, -1929183052
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1929183052
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %126

; <label>:16:                                     ; preds = %1, %126
  %17 = alloca %"class.std::vector.10"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %17, align 8
  %20 = load %"class.std::vector.10"*, %"class.std::vector.10"** %17, align 8
  %21 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %23, align 8
  %25 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %27, align 8
  %29 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  %30 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %29) #3
  %31 = load i32, i32* @x.114
  %32 = load i32, i32* @y.115
  %33 = add i32 %31, -588700507
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -588700507
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %126

; <label>:45:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPN29Strongly_Connected_Components4nodeES1_EvT_S3_RSaIT0_E(%"struct.Strongly_Connected_Components::node"* %24, %"struct.Strongly_Connected_Components::node"* %28, %"class.std::allocator.12"* dereferenceable(1) %30)
          to label %46 unwind label %77

; <label>:46:                                     ; preds = %45
  %47 = load i32, i32* @x.114
  %48 = load i32, i32* @y.115
  %49 = sub i32 %47, -795554432
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -795554432
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %141

; <label>:61:                                     ; preds = %46, %141
  %62 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EED2Ev(%"struct.std::_Vector_base.11"* %62) #3
  %63 = load i32, i32* @x.114
  %64 = load i32, i32* @y.115
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %141

; <label>:76:                                     ; preds = %61
  ret void

; <label>:77:                                     ; preds = %45
  %78 = load i32, i32* @x.114
  %79 = load i32, i32* @y.115
  %80 = add i32 %78, 2040988293
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, 2040988293
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %143

; <label>:104:                                    ; preds = %77, %143
  %105 = landingpad { i8*, i32 }
          catch i8* null
  %106 = extractvalue { i8*, i32 } %105, 0
  store i8* %106, i8** %18, align 8
  %107 = extractvalue { i8*, i32 } %105, 1
  store i32 %107, i32* %19, align 4
  %108 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EED2Ev(%"struct.std::_Vector_base.11"* %108) #3
  %109 = load i32, i32* @x.114
  %110 = load i32, i32* @y.115
  %111 = add i32 %109, -468540450
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, -468540450
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %143

; <label>:123:                                    ; preds = %104
  br label %124

; <label>:124:                                    ; preds = %123
  %125 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %125) #12
  unreachable

; <label>:126:                                    ; preds = %16, %1
  %127 = alloca %"class.std::vector.10"*, align 8
  %128 = alloca i8*
  %129 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %127, align 8
  %130 = load %"class.std::vector.10"*, %"class.std::vector.10"** %127, align 8
  %131 = bitcast %"class.std::vector.10"* %130 to %"struct.std::_Vector_base.11"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %132, i32 0, i32 0
  %134 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %133, align 8
  %135 = bitcast %"class.std::vector.10"* %130 to %"struct.std::_Vector_base.11"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %135, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %136, i32 0, i32 1
  %138 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %137, align 8
  %139 = bitcast %"class.std::vector.10"* %130 to %"struct.std::_Vector_base.11"*
  %140 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %139) #3
  br label %16

; <label>:141:                                    ; preds = %61, %46
  %142 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EED2Ev(%"struct.std::_Vector_base.11"* %142) #3
  br label %61

; <label>:143:                                    ; preds = %104, %77
  %144 = landingpad { i8*, i32 }
          catch i8* null
  %145 = extractvalue { i8*, i32 } %144, 0
  store i8* %145, i8** %18, align 8
  %146 = extractvalue { i8*, i32 } %144, 1
  store i32 %146, i32* %19, align 4
  %147 = bitcast %"class.std::vector.10"* %20 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EED2Ev(%"struct.std::_Vector_base.11"* %147) #3
  br label %104
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EEC2Ev(%"struct.std::_Vector_base.11"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.116
  %5 = load i32, i32* @y.117
  %6 = add i32 %4, 601287833
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 601287833
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1255439889, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1255439889, label %18
    i32 -1557419413, label %38
    i32 817700719, label %56
    i32 1747211470, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1557419413, i32 1747211470
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %39, align 8
  %40 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.116
  %43 = load i32, i32* @y.117
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 817700719, i32 1747211470
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %58, align 8
  %59 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %60)
  store i32 -1557419413, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.118
  %5 = load i32, i32* @y.119
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1982141431, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %57
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1982141431, label %17
    i32 -40673209, label %25
    i32 -416966197, label %54
    i32 -882433653, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %57

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -40673209, i32 -882433653
  store i32 %24, i32* %13
  br label %57

; <label>:25:                                     ; preds = %14
  %26 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #12
  %27 = load i32, i32* @x.118
  %28 = load i32, i32* @y.119
  %29 = add i32 %27, -1792927128
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, -1792927128
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -416966197, i32 -882433653
  store i32 %53, i32* %13
  br label %57

; <label>:54:                                     ; preds = %14
  unreachable

; <label>:55:                                     ; preds = %14
  %56 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #12
  store i32 -40673209, i32* %13
  br label %57

; <label>:57:                                     ; preds = %55, %25, %17, %16
  br label %14
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.120
  %5 = load i32, i32* @y.121
  %6 = add i32 %4, 2056689931
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2056689931
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -747716764, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %56
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -747716764, label %18
    i32 -2043051873, label %26
    i32 -1196163802, label %48
    i32 958151739, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %56

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2043051873, i32 958151739
  store i32 %25, i32* %14
  br label %56

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"*, %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %28 to %"class.std::allocator.12"*
  call void @_ZNSaIN29Strongly_Connected_Components4nodeEEC2Ev(%"class.std::allocator.12"* %29) #3
  %30 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %28, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* null, %"struct.Strongly_Connected_Components::node"** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %28, i32 0, i32 1
  store %"struct.Strongly_Connected_Components::node"* null, %"struct.Strongly_Connected_Components::node"** %31, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %28, i32 0, i32 2
  store %"struct.Strongly_Connected_Components::node"* null, %"struct.Strongly_Connected_Components::node"** %32, align 8
  %33 = load i32, i32* @x.120
  %34 = load i32, i32* @y.121
  %35 = sub i32 %33, -1170251866
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1170251866
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -1196163802, i32 958151739
  store i32 %47, i32* %14
  br label %56

; <label>:48:                                     ; preds = %15
  ret void

; <label>:49:                                     ; preds = %15
  %50 = alloca %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"** %50, align 8
  %51 = load %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"*, %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"** %50, align 8
  %52 = bitcast %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %51 to %"class.std::allocator.12"*
  call void @_ZNSaIN29Strongly_Connected_Components4nodeEEC2Ev(%"class.std::allocator.12"* %52) #3
  %53 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %51, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* null, %"struct.Strongly_Connected_Components::node"** %53, align 8
  %54 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %51, i32 0, i32 1
  store %"struct.Strongly_Connected_Components::node"* null, %"struct.Strongly_Connected_Components::node"** %54, align 8
  %55 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %51, i32 0, i32 2
  store %"struct.Strongly_Connected_Components::node"* null, %"struct.Strongly_Connected_Components::node"** %55, align 8
  store i32 -2043051873, i32* %14
  br label %56

; <label>:56:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN29Strongly_Connected_Components4nodeEEC2Ev(%"class.std::allocator.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %2, align 8
  %3 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %2, align 8
  %4 = bitcast %"class.std::allocator.12"* %3 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEEC2Ev(%"class.__gnu_cxx::new_allocator.13"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEEC2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.126
  %3 = load i32, i32* @y.127
  %4 = add i32 %2, 1242011269
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1242011269
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %99

; <label>:28:                                     ; preds = %1, %99
  %29 = alloca %"class.std::_Deque_base"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %29, align 8
  %32 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %29, align 8
  %33 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %32, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33)
  %34 = load i32, i32* @x.126
  %35 = load i32, i32* @y.127
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %99

; <label>:59:                                     ; preds = %28
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %32, i64 0)
          to label %60 unwind label %61

; <label>:60:                                     ; preds = %59
  ret void

; <label>:61:                                     ; preds = %59
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %30, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %31, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33) #3
  br label %65

; <label>:65:                                     ; preds = %61
  %66 = load i32, i32* @x.126
  %67 = load i32, i32* @y.127
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %105

; <label>:79:                                     ; preds = %65, %105
  %80 = load i8*, i8** %30, align 8
  %81 = load i32, i32* %31, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  %84 = load i32, i32* @x.126
  %85 = load i32, i32* @y.127
  %86 = add i32 %84, -760918540
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, -760918540
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %105

; <label>:98:                                     ; preds = %79
  resume { i8*, i32 } %83

; <label>:99:                                     ; preds = %28, %1
  %100 = alloca %"class.std::_Deque_base"*, align 8
  %101 = alloca i8*
  %102 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %100, align 8
  %103 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %100, align 8
  %104 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %103, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %104)
  br label %28

; <label>:105:                                    ; preds = %79, %65
  %106 = load i8*, i8** %30, align 8
  %107 = load i32, i32* %31, align 4
  %108 = insertvalue { i8*, i32 } undef, i8* %106, 0
  %109 = insertvalue { i8*, i32 } %108, i32 %107, 1
  br label %79
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.128
  %5 = load i32, i32* @y.129
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 672314029, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %80
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 672314029, label %17
    i32 1560926954, label %37
    i32 1041060153, label %71
    i32 265043057, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %80

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1560926954, i32 265043057
  store i32 %36, i32* %13
  br label %80

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %38, align 8
  %39 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %39 to %"class.std::allocator.7"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.7"* %40) #3
  %41 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %39, i32 0, i32 0
  store i32** null, i32*** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %39, i32 0, i32 1
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %39, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %43) #3
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %39, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %44) #3
  %45 = load i32, i32* @x.128
  %46 = load i32, i32* @y.129
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1041060153, i32 265043057
  store i32 %70, i32* %13
  br label %80

; <label>:71:                                     ; preds = %14
  ret void

; <label>:72:                                     ; preds = %14
  %73 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %73, align 8
  %74 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %73, align 8
  %75 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74 to %"class.std::allocator.7"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.7"* %75) #3
  %76 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74, i32 0, i32 0
  store i32** null, i32*** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74, i32 0, i32 1
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %78) #3
  %79 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %79) #3
  store i32 1560926954, i32* %13
  br label %80

; <label>:80:                                     ; preds = %72, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %15 = udiv i64 %13, %14
  %16 = sub i64 %15, -8998614319904312916
  %17 = add i64 %16, 1
  %18 = add i64 %17, -8998614319904312916
  %19 = add i64 %15, 1
  store i64 %18, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %20 = load i64, i64* %5, align 8
  %21 = sub i64 0, %20
  %22 = sub i64 0, 2
  %23 = add i64 %21, %22
  %24 = sub i64 0, %23
  %25 = add i64 %20, 2
  store i64 %24, i64* %7, align 8
  %26 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 1
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %12, i64 %32)
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34, i32 0, i32 0
  store i32** %33, i32*** %35, align 8
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %36, i32 0, i32 0
  %38 = load i32**, i32*** %37, align 8
  %39 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %39, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = load i64, i64* %5, align 8
  %43 = sub i64 %41, -8598217734222018721
  %44 = sub i64 %43, %42
  %45 = add i64 %44, -8598217734222018721
  %46 = sub i64 %41, %42
  %47 = udiv i64 %45, 2
  %48 = getelementptr inbounds i32*, i32** %38, i64 %47
  store i32** %48, i32*** %8, align 8
  %49 = load i32**, i32*** %8, align 8
  %50 = load i64, i64* %5, align 8
  %51 = getelementptr inbounds i32*, i32** %49, i64 %50
  store i32** %51, i32*** %9, align 8
  %52 = load i32**, i32*** %8, align 8
  %53 = load i32**, i32*** %9, align 8
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"* %12, i32** %52, i32** %53)
          to label %54 unwind label %55

; <label>:54:                                     ; preds = %2
  br label %161

; <label>:55:                                     ; preds = %2
  %56 = load i32, i32* @x.130
  %57 = load i32, i32* @y.131
  %58 = add i32 %56, 1702586312
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1702586312
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %291

; <label>:70:                                     ; preds = %55, %291
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %10, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %11, align 4
  %74 = load i32, i32* @x.130
  %75 = load i32, i32* @y.131
  %76 = sub i32 %74, -1540793835
  %77 = sub i32 %76, 1
  %78 = add i32 %77, -1540793835
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %291

; <label>:100:                                    ; preds = %70
  br label %101

; <label>:101:                                    ; preds = %100
  %102 = load i32, i32* @x.130
  %103 = load i32, i32* @y.131
  %104 = add i32 %102, 658202071
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, 658202071
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %295

; <label>:128:                                    ; preds = %101, %295
  %129 = load i8*, i8** %10, align 8
  %130 = call i8* @__cxa_begin_catch(i8* %129) #3
  %131 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %131, i32 0, i32 0
  %133 = load i32**, i32*** %132, align 8
  %134 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %134, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %12, i32** %133, i64 %136) #3
  %137 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %137, i32 0, i32 0
  store i32** null, i32*** %138, align 8
  %139 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %140 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %139, i32 0, i32 1
  store i64 0, i64* %140, align 8
  %141 = load i32, i32* @x.130
  %142 = load i32, i32* @y.131
  %143 = sub i32 %141, -1485222266
  %144 = sub i32 %143, 1
  %145 = add i32 %144, -1485222266
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  br i1 %153, label %155, label %295

; <label>:155:                                    ; preds = %128
  invoke void @__cxa_rethrow() #13
          to label %290 unwind label %156

; <label>:156:                                    ; preds = %155
  %157 = landingpad { i8*, i32 }
          cleanup
  %158 = extractvalue { i8*, i32 } %157, 0
  store i8* %158, i8** %10, align 8
  %159 = extractvalue { i8*, i32 } %157, 1
  store i32 %159, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %160 unwind label %287

; <label>:160:                                    ; preds = %156
  br label %240

; <label>:161:                                    ; preds = %54
  %162 = load i32, i32* @x.130
  %163 = load i32, i32* @y.131
  %164 = sub i32 %162, 1516895428
  %165 = sub i32 %164, 1
  %166 = add i32 %165, 1516895428
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = xor i1 %170, true
  %173 = xor i1 %171, true
  %174 = xor i1 true, true
  %175 = and i1 %172, true
  %176 = and i1 %170, %174
  %177 = and i1 %173, true
  %178 = and i1 %171, %174
  %179 = or i1 %175, %176
  %180 = or i1 %177, %178
  %181 = xor i1 %179, %180
  %182 = or i1 %172, %173
  %183 = xor i1 %182, true
  %184 = or i1 true, %174
  %185 = and i1 %183, %184
  %186 = or i1 %181, %185
  %187 = or i1 %170, %171
  br i1 %186, label %188, label %308

; <label>:188:                                    ; preds = %161, %308
  %189 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %190 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %189, i32 0, i32 2
  %191 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %190, i32** %191) #3
  %192 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %193 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %192, i32 0, i32 3
  %194 = load i32**, i32*** %9, align 8
  %195 = getelementptr inbounds i32*, i32** %194, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %193, i32** %195) #3
  %196 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %197 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %196, i32 0, i32 2
  %198 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %197, i32 0, i32 1
  %199 = load i32*, i32** %198, align 8
  %200 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %201 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %200, i32 0, i32 2
  %202 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %201, i32 0, i32 0
  store i32* %199, i32** %202, align 8
  %203 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %203, i32 0, i32 3
  %205 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %204, i32 0, i32 1
  %206 = load i32*, i32** %205, align 8
  %207 = load i64, i64* %4, align 8
  %208 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %209 = urem i64 %207, %208
  %210 = getelementptr inbounds i32, i32* %206, i64 %209
  %211 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %211, i32 0, i32 3
  %213 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %212, i32 0, i32 0
  store i32* %210, i32** %213, align 8
  %214 = load i32, i32* @x.130
  %215 = load i32, i32* @y.131
  %216 = sub i32 0, 1
  %217 = add i32 %214, %216
  %218 = sub i32 %214, 1
  %219 = mul i32 %214, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %215, 10
  %223 = xor i1 %221, true
  %224 = xor i1 %222, true
  %225 = xor i1 false, true
  %226 = and i1 %223, false
  %227 = and i1 %221, %225
  %228 = and i1 %224, false
  %229 = and i1 %222, %225
  %230 = or i1 %226, %227
  %231 = or i1 %228, %229
  %232 = xor i1 %230, %231
  %233 = or i1 %223, %224
  %234 = xor i1 %233, true
  %235 = or i1 false, %225
  %236 = and i1 %234, %235
  %237 = or i1 %232, %236
  %238 = or i1 %221, %222
  br i1 %237, label %239, label %308

; <label>:239:                                    ; preds = %188
  ret void

; <label>:240:                                    ; preds = %160
  %241 = load i32, i32* @x.130
  %242 = load i32, i32* @y.131
  %243 = add i32 %241, 48283273
  %244 = sub i32 %243, 1
  %245 = sub i32 %244, 48283273
  %246 = sub i32 %241, 1
  %247 = mul i32 %241, %245
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %242, 10
  %251 = and i1 %249, %250
  %252 = xor i1 %249, %250
  %253 = or i1 %251, %252
  %254 = or i1 %249, %250
  br i1 %253, label %255, label %367

; <label>:255:                                    ; preds = %240, %367
  %256 = load i8*, i8** %10, align 8
  %257 = load i32, i32* %11, align 4
  %258 = insertvalue { i8*, i32 } undef, i8* %256, 0
  %259 = insertvalue { i8*, i32 } %258, i32 %257, 1
  %260 = load i32, i32* @x.130
  %261 = load i32, i32* @y.131
  %262 = sub i32 %260, 239312082
  %263 = sub i32 %262, 1
  %264 = add i32 %263, 239312082
  %265 = sub i32 %260, 1
  %266 = mul i32 %260, %264
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %261, 10
  %270 = xor i1 %268, true
  %271 = xor i1 %269, true
  %272 = xor i1 false, true
  %273 = and i1 %270, false
  %274 = and i1 %268, %272
  %275 = and i1 %271, false
  %276 = and i1 %269, %272
  %277 = or i1 %273, %274
  %278 = or i1 %275, %276
  %279 = xor i1 %277, %278
  %280 = or i1 %270, %271
  %281 = xor i1 %280, true
  %282 = or i1 false, %272
  %283 = and i1 %281, %282
  %284 = or i1 %279, %283
  %285 = or i1 %268, %269
  br i1 %284, label %286, label %367

; <label>:286:                                    ; preds = %255
  resume { i8*, i32 } %259

; <label>:287:                                    ; preds = %156
  %288 = landingpad { i8*, i32 }
          catch i8* null
  %289 = extractvalue { i8*, i32 } %288, 0
  call void @__clang_call_terminate(i8* %289) #12
  unreachable

; <label>:290:                                    ; preds = %155
  unreachable

; <label>:291:                                    ; preds = %70, %55
  %292 = landingpad { i8*, i32 }
          catch i8* null
  %293 = extractvalue { i8*, i32 } %292, 0
  store i8* %293, i8** %10, align 8
  %294 = extractvalue { i8*, i32 } %292, 1
  store i32 %294, i32* %11, align 4
  br label %70

; <label>:295:                                    ; preds = %128, %101
  %296 = load i8*, i8** %10, align 8
  %297 = call i8* @__cxa_begin_catch(i8* %296) #3
  %298 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %298, i32 0, i32 0
  %300 = load i32**, i32*** %299, align 8
  %301 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %302 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %301, i32 0, i32 1
  %303 = load i64, i64* %302, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %12, i32** %300, i64 %303) #3
  %304 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %305 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %304, i32 0, i32 0
  store i32** null, i32*** %305, align 8
  %306 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %307 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %306, i32 0, i32 1
  store i64 0, i64* %307, align 8
  br label %128

; <label>:308:                                    ; preds = %188, %161
  %309 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %310 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %309, i32 0, i32 2
  %311 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %310, i32** %311) #3
  %312 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %313 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %312, i32 0, i32 3
  %314 = load i32**, i32*** %9, align 8
  %315 = getelementptr inbounds i32*, i32** %314, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %313, i32** %315) #3
  %316 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %317 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %316, i32 0, i32 2
  %318 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %317, i32 0, i32 1
  %319 = load i32*, i32** %318, align 8
  %320 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %321 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %320, i32 0, i32 2
  %322 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %321, i32 0, i32 0
  store i32* %319, i32** %322, align 8
  %323 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %324 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %323, i32 0, i32 3
  %325 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %324, i32 0, i32 1
  %326 = load i32*, i32** %325, align 8
  %327 = load i64, i64* %4, align 8
  %328 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %329 = shl i64 %327, %328
  %330 = sub i64 0, %328
  %331 = add i64 %327, %330
  %332 = sub i64 %327, %328
  %333 = mul i64 %331, %328
  %334 = sub i64 0, %328
  %335 = add i64 %327, %334
  %336 = sub i64 %327, %328
  %337 = mul i64 %335, %328
  %338 = shl i64 %327, %328
  %339 = sub i64 %327, -5266783665649941421
  %340 = sub i64 %339, %328
  %341 = add i64 %340, -5266783665649941421
  %342 = sub i64 %327, %328
  %343 = mul i64 %341, %328
  %344 = add i64 0, 317046583086270420
  %345 = sub i64 %344, %327
  %346 = sub i64 %345, 317046583086270420
  %347 = sub i64 0, %327
  %348 = sub i64 %346, 7066192211681623956
  %349 = add i64 %348, %328
  %350 = add i64 %349, 7066192211681623956
  %351 = add i64 %346, %328
  %352 = add i64 %327, 3240834734126267385
  %353 = sub i64 %352, %328
  %354 = sub i64 %353, 3240834734126267385
  %355 = sub i64 %327, %328
  %356 = mul i64 %354, %328
  %357 = sub i64 0, %328
  %358 = add i64 %327, %357
  %359 = sub i64 %327, %328
  %360 = mul i64 %358, %328
  %361 = shl i64 %327, %328
  %362 = urem i64 %327, %328
  %363 = getelementptr inbounds i32, i32* %326, i64 %362
  %364 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %365 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %364, i32 0, i32 3
  %366 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %365, i32 0, i32 0
  store i32* %363, i32** %366, align 8
  br label %188

; <label>:367:                                    ; preds = %255, %240
  %368 = load i8*, i8** %10, align 8
  %369 = load i32, i32* %11, align 4
  %370 = insertvalue { i8*, i32 } undef, i8* %368, 0
  %371 = insertvalue { i8*, i32 } %370, i32 %369, 1
  br label %255
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.7"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.7"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  store i32* null, i32** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 1
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 3
  store i32** null, i32*** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.138
  %5 = load i32, i32* @y.139
  %6 = sub i32 %4, 1653999234
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1653999234
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 798095040, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 798095040, label %18
    i32 -1785936117, label %38
    i32 -2023473091, label %55
    i32 -1113083361, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1785936117, i32 -1113083361
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %39, align 8
  %41 = load i32, i32* @x.138
  %42 = load i32, i32* @y.139
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -2023473091, i32 -1113083361
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %57, align 8
  store i32 -1785936117, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #4 comdat {
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3
  %6 = alloca i32
  store i32 -819253200, i32* %6
  %7 = alloca i64
  br label %8

; <label>:8:                                      ; preds = %1, %86
  %9 = load i32, i32* %6
  switch i32 %9, label %10 [
    i32 -819253200, label %11
    i32 1332701165, label %15
    i32 1107738780, label %18
    i32 798378189, label %34
    i32 1830210735, label %49
    i32 809277426, label %50
    i32 -1468709825, label %66
    i32 -544404918, label %82
    i32 -479185651, label %84
    i32 -1494011226, label %85
  ]

; <label>:10:                                     ; preds = %8
  br label %86

; <label>:11:                                     ; preds = %8
  %12 = load volatile i64, i64* %3
  %13 = icmp ult i64 %12, 512
  %14 = select i1 %13, i32 1332701165, i32 1107738780
  store i32 %14, i32* %6
  br label %86

; <label>:15:                                     ; preds = %8
  %16 = load i64, i64* %4, align 8
  %17 = udiv i64 512, %16
  store i32 809277426, i32* %6
  store i64 %17, i64* %7
  br label %86

; <label>:18:                                     ; preds = %8
  %19 = load i32, i32* @x.140
  %20 = load i32, i32* @y.141
  %21 = sub i32 %19, 1251821846
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 1251821846
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 798378189, i32 -479185651
  store i32 %33, i32* %6
  br label %86

; <label>:34:                                     ; preds = %8
  %35 = load i32, i32* @x.140
  %36 = load i32, i32* @y.141
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1830210735, i32 -479185651
  store i32 %48, i32* %6
  br label %86

; <label>:49:                                     ; preds = %8
  store i32 809277426, i32* %6
  store i64 1, i64* %7
  br label %86

; <label>:50:                                     ; preds = %8
  %51 = load i64, i64* %7
  store i64 %51, i64* %2
  %52 = load i32, i32* @x.140
  %53 = load i32, i32* @y.141
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1468709825, i32 -1494011226
  store i32 %65, i32* %6
  br label %86

; <label>:66:                                     ; preds = %8
  %67 = load i32, i32* @x.140
  %68 = load i32, i32* @y.141
  %69 = add i32 %67, 2143458194
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 2143458194
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 -544404918, i32 -1494011226
  store i32 %81, i32* %6
  br label %86

; <label>:82:                                     ; preds = %8
  %83 = load volatile i64, i64* %2
  ret i64 %83

; <label>:84:                                     ; preds = %8
  store i32 798378189, i32* %6
  br label %86

; <label>:85:                                     ; preds = %8
  store i32 -1468709825, i32* %6
  br label %86

; <label>:86:                                     ; preds = %85, %84, %66, %50, %49, %34, %18, %15, %11, %10
  br label %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %8, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 879010819, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %75
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 879010819, label %17
    i32 561451149, label %22
    i32 -94352903, label %24
    i32 -186151811, label %26
    i32 1775891347, label %42
    i32 871753114, label %71
    i32 -354354828, label %73
  ]

; <label>:16:                                     ; preds = %14
  br label %75

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ult i64 %18, %19
  %21 = select i1 %20, i32 561451149, i32 -94352903
  store i32 %21, i32* %13
  br label %75

; <label>:22:                                     ; preds = %14
  %23 = load i64*, i64** %8, align 8
  store i64* %23, i64** %6, align 8
  store i32 -186151811, i32* %13
  br label %75

; <label>:24:                                     ; preds = %14
  %25 = load i64*, i64** %7, align 8
  store i64* %25, i64** %6, align 8
  store i32 -186151811, i32* %13
  br label %75

; <label>:26:                                     ; preds = %14
  %27 = load i32, i32* @x.142
  %28 = load i32, i32* @y.143
  %29 = add i32 %27, -1959768959
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, -1959768959
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 1775891347, i32 -354354828
  store i32 %41, i32* %13
  br label %75

; <label>:42:                                     ; preds = %14
  %43 = load i64*, i64** %6, align 8
  store i64* %43, i64** %3
  %44 = load i32, i32* @x.142
  %45 = load i32, i32* @y.143
  %46 = add i32 %44, 295970331
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 295970331
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 871753114, i32 -354354828
  store i32 %70, i32* %13
  br label %75

; <label>:71:                                     ; preds = %14
  %72 = load volatile i64*, i64** %3
  ret i64* %72

; <label>:73:                                     ; preds = %14
  %74 = load i64*, i64** %6, align 8
  store i32 1775891347, i32* %13
  br label %75

; <label>:75:                                     ; preds = %73, %42, %26, %24, %22, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.17", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %5, %"class.std::_Deque_base"* %8) #3
  %9 = load i64, i64* %4, align 8
  %10 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.17"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %42

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.144
  %13 = load i32, i32* @y.145
  %14 = add i32 %12, -473746184
  %15 = sub i32 %14, 1
  %16 = sub i32 %15, -473746184
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  br i1 %24, label %26, label %51

; <label>:26:                                     ; preds = %11, %51
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %5) #3
  %27 = load i32, i32* @x.144
  %28 = load i32, i32* @y.145
  %29 = sub i32 %27, -1747811469
  %30 = sub i32 %29, 1
  %31 = add i32 %30, -1747811469
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %51

; <label>:41:                                     ; preds = %26
  ret i32** %10

; <label>:42:                                     ; preds = %2
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %6, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %7, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %5) #3
  br label %46

; <label>:46:                                     ; preds = %42
  %47 = load i8*, i8** %6, align 8
  %48 = load i32, i32* %7, align 4
  %49 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  resume { i8*, i32 } %50

; <label>:51:                                     ; preds = %26, %11
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %5) #3
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load i32**, i32*** %5, align 8
  store i32** %11, i32*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %20, %3
  %13 = load i32**, i32*** %7, align 8
  %14 = load i32**, i32*** %6, align 8
  %15 = icmp ult i32** %13, %14
  br i1 %15, label %16, label %73

; <label>:16:                                     ; preds = %12
  %17 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %18 unwind label %23

; <label>:18:                                     ; preds = %16
  %19 = load i32**, i32*** %7, align 8
  store i32* %17, i32** %19, align 8
  br label %20

; <label>:20:                                     ; preds = %18
  %21 = load i32**, i32*** %7, align 8
  %22 = getelementptr inbounds i32*, i32** %21, i32 1
  store i32** %22, i32*** %7, align 8
  br label %12

; <label>:23:                                     ; preds = %16
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %8, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %9, align 4
  br label %27

; <label>:27:                                     ; preds = %23
  %28 = load i32, i32* @x.146
  %29 = load i32, i32* @y.147
  %30 = add i32 %28, 1356320689
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1356320689
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %118

; <label>:42:                                     ; preds = %27, %118
  %43 = load i8*, i8** %8, align 8
  %44 = call i8* @__cxa_begin_catch(i8* %43) #3
  %45 = load i32**, i32*** %5, align 8
  %46 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %10, i32** %45, i32** %46) #3
  %47 = load i32, i32* @x.146
  %48 = load i32, i32* @y.147
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %118

; <label>:72:                                     ; preds = %42
  invoke void @__cxa_rethrow() #13
          to label %88 unwind label %74

; <label>:73:                                     ; preds = %12
  br label %79

; <label>:74:                                     ; preds = %72
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %8, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %78 unwind label %85

; <label>:78:                                     ; preds = %74
  br label %80

; <label>:79:                                     ; preds = %73
  ret void

; <label>:80:                                     ; preds = %78
  %81 = load i8*, i8** %8, align 8
  %82 = load i32, i32* %9, align 4
  %83 = insertvalue { i8*, i32 } undef, i8* %81, 0
  %84 = insertvalue { i8*, i32 } %83, i32 %82, 1
  resume { i8*, i32 } %84

; <label>:85:                                     ; preds = %74
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  call void @__clang_call_terminate(i8* %87) #12
  unreachable

; <label>:88:                                     ; preds = %72
  %89 = load i32, i32* @x.146
  %90 = load i32, i32* @y.147
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %123

; <label>:102:                                    ; preds = %88, %123
  %103 = load i32, i32* @x.146
  %104 = load i32, i32* @y.147
  %105 = sub i32 %103, -277384777
  %106 = sub i32 %105, 1
  %107 = add i32 %106, -277384777
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %123

; <label>:117:                                    ; preds = %102
  unreachable

; <label>:118:                                    ; preds = %42, %27
  %119 = load i8*, i8** %8, align 8
  %120 = call i8* @__cxa_begin_catch(i8* %119) #3
  %121 = load i32**, i32*** %5, align 8
  %122 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %10, i32** %121, i32** %122) #3
  br label %42

; <label>:123:                                    ; preds = %102, %88
  br label %102
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"*, i32**, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::allocator.17", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %7, %"class.std::_Deque_base"* %10) #3
  %11 = load i32**, i32*** %5, align 8
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.17"* dereferenceable(1) %7, i32** %11, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %7) #3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %8, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %9, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %7) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.148
  %20 = load i32, i32* @y.149
  %21 = sub i32 %19, 1165045002
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 1165045002
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %62

; <label>:45:                                     ; preds = %18, %62
  %46 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %46) #12
  %47 = load i32, i32* @x.148
  %48 = load i32, i32* @y.149
  %49 = sub i32 %47, -1684322936
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1684322936
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %62

; <label>:61:                                     ; preds = %45
  unreachable

; <label>:62:                                     ; preds = %45, %18
  %63 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %63) #12
  br label %45
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* noalias sret, %"class.std::_Deque_base"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %3, align 8
  %4 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"* %0, %"class.std::allocator.7"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.17"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i32**
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.154
  %7 = load i32, i32* @y.155
  %8 = sub i32 %6, 1467565587
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1467565587
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1595448911, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1595448911, label %20
    i32 -8621850, label %40
    i32 -1847843387, label %62
    i32 246680828, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -8621850, i32 246680828
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.17"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %41, align 8
  %44 = bitcast %"class.std::allocator.17"* %43 to %"class.__gnu_cxx::new_allocator.18"*
  %45 = load i64, i64* %42, align 8
  %46 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"* %44, i64 %45, i8* null)
  store i32** %46, i32*** %3
  %47 = load i32, i32* @x.154
  %48 = load i32, i32* @y.155
  %49 = sub i32 %47, 1281915541
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1281915541
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1847843387, i32 246680828
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile i32**, i32*** %3
  ret i32** %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.17"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %65, align 8
  %68 = bitcast %"class.std::allocator.17"* %67 to %"class.__gnu_cxx::new_allocator.18"*
  %69 = load i64, i64* %66, align 8
  %70 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"* %68, i64 %69, i8* null)
  store i32 -8621850, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.17"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %2, align 8
  %3 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %2, align 8
  %4 = bitcast %"class.std::allocator.17"* %3 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.17"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %3, align 8
  %6 = bitcast %"class.std::allocator.17"* %5 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.18"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.162
  %5 = load i32, i32* @y.163
  %6 = add i32 %4, -365708565
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -365708565
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -582280625, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -582280625, label %18
    i32 -806798978, label %38
    i32 1937461259, label %56
    i32 1825425317, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -806798978, i32 1825425317
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %39, align 8
  %41 = load i32, i32* @x.162
  %42 = load i32, i32* @y.163
  %43 = add i32 %41, 749932453
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 749932453
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1937461259, i32 1825425317
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %58, align 8
  store i32 -806798978, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.164
  %9 = load i32, i32* @y.165
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1275546709, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %84
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1275546709, label %21
    i32 -182863969, label %41
    i32 1784014002, label %66
    i32 1204812892, label %69
    i32 -303008888, label %70
    i32 -808332892, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %84

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -182863969, i32 -808332892
  store i32 %40, i32* %17
  br label %84

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  %44 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %42, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  store i8* %2, i8** %44, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %42, align 8
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"* %46) #3
  %50 = icmp ugt i64 %48, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.164
  %52 = load i32, i32* @y.165
  %53 = add i32 %51, -395120735
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -395120735
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1784014002, i32 -808332892
  store i32 %65, i32* %17
  br label %84

; <label>:66:                                     ; preds = %18
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 1204812892, i32 -303008888
  store i32 %68, i32* %17
  br label %84

; <label>:69:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:70:                                     ; preds = %18
  %71 = load volatile i64*, i64** %5
  %72 = load i64, i64* %71, align 8
  %73 = mul i64 %72, 8
  %74 = call i8* @_Znwm(i64 %73)
  %75 = bitcast i8* %74 to i32**
  ret i32** %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i8* %2, i8** %79, align 8
  %80 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"* %80) #3
  %83 = icmp ugt i64 %81, %82
  store i32 -182863969, i32* %17
  br label %84

; <label>:84:                                     ; preds = %76, %66, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.7"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %7 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.7"* dereferenceable(1) %5, i64 %6)
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::_Deque_base"*
  %6 = alloca i32***
  %7 = alloca i32***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.172
  %11 = load i32, i32* @y.173
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 1995791116, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %260
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1995791116, label %23
    i32 808221534, label %31
    i32 -2083204565, label %67
    i32 -1769166616, label %68
    i32 577928080, label %95
    i32 -385564674, label %128
    i32 -364367360, label %131
    i32 -1520299245, label %159
    i32 1960060950, label %179
    i32 -407716099, label %180
    i32 995561384, label %185
    i32 166143038, label %213
    i32 100985905, label %240
    i32 -1133522769, label %241
    i32 1522838764, label %248
    i32 287927748, label %254
    i32 -594361302, label %259
  ]

; <label>:22:                                     ; preds = %20
  br label %260

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 808221534, i32 -1133522769
  store i32 %30, i32* %19
  br label %260

; <label>:31:                                     ; preds = %20
  %32 = alloca %"class.std::_Deque_base"*, align 8
  %33 = alloca i32**, align 8
  %34 = alloca i32**, align 8
  store i32*** %34, i32**** %7
  %35 = alloca i32**, align 8
  store i32*** %35, i32**** %6
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %32, align 8
  store i32** %1, i32*** %33, align 8
  %36 = load volatile i32***, i32**** %7
  store i32** %2, i32*** %36, align 8
  %37 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %32, align 8
  store %"class.std::_Deque_base"* %37, %"class.std::_Deque_base"** %5
  %38 = load i32**, i32*** %33, align 8
  %39 = load volatile i32***, i32**** %6
  store i32** %38, i32*** %39, align 8
  %40 = load i32, i32* @x.172
  %41 = load i32, i32* @y.173
  %42 = add i32 %40, -406181407
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -406181407
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -2083204565, i32 -1133522769
  store i32 %66, i32* %19
  br label %260

; <label>:67:                                     ; preds = %20
  store i32 -1769166616, i32* %19
  br label %260

; <label>:68:                                     ; preds = %20
  %69 = load i32, i32* @x.172
  %70 = load i32, i32* @y.173
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 577928080, i32 1522838764
  store i32 %94, i32* %19
  br label %260

; <label>:95:                                     ; preds = %20
  %96 = load volatile i32***, i32**** %6
  %97 = load i32**, i32*** %96, align 8
  %98 = load volatile i32***, i32**** %7
  %99 = load i32**, i32*** %98, align 8
  %100 = icmp ult i32** %97, %99
  store i1 %100, i1* %4
  %101 = load i32, i32* @x.172
  %102 = load i32, i32* @y.173
  %103 = sub i32 %101, -565556006
  %104 = sub i32 %103, 1
  %105 = add i32 %104, -565556006
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  %127 = select i1 %125, i32 -385564674, i32 1522838764
  store i32 %127, i32* %19
  br label %260

; <label>:128:                                    ; preds = %20
  %129 = load volatile i1, i1* %4
  %130 = select i1 %129, i32 -364367360, i32 995561384
  store i32 %130, i32* %19
  br label %260

; <label>:131:                                    ; preds = %20
  %132 = load i32, i32* @x.172
  %133 = load i32, i32* @y.173
  %134 = add i32 %132, 687714210
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, 687714210
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 false, true
  %145 = and i1 %142, false
  %146 = and i1 %140, %144
  %147 = and i1 %143, false
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 false, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  %158 = select i1 %156, i32 -1520299245, i32 287927748
  store i32 %158, i32* %19
  br label %260

; <label>:159:                                    ; preds = %20
  %160 = load volatile i32***, i32**** %6
  %161 = load i32**, i32*** %160, align 8
  %162 = load i32*, i32** %161, align 8
  %163 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %163, i32* %162) #3
  %164 = load i32, i32* @x.172
  %165 = load i32, i32* @y.173
  %166 = sub i32 %164, -1333917465
  %167 = sub i32 %166, 1
  %168 = add i32 %167, -1333917465
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  %178 = select i1 %176, i32 1960060950, i32 287927748
  store i32 %178, i32* %19
  br label %260

; <label>:179:                                    ; preds = %20
  store i32 -407716099, i32* %19
  br label %260

; <label>:180:                                    ; preds = %20
  %181 = load volatile i32***, i32**** %6
  %182 = load i32**, i32*** %181, align 8
  %183 = getelementptr inbounds i32*, i32** %182, i32 1
  %184 = load volatile i32***, i32**** %6
  store i32** %183, i32*** %184, align 8
  store i32 -1769166616, i32* %19
  br label %260

; <label>:185:                                    ; preds = %20
  %186 = load i32, i32* @x.172
  %187 = load i32, i32* @y.173
  %188 = sub i32 %186, 1385299698
  %189 = sub i32 %188, 1
  %190 = add i32 %189, 1385299698
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = xor i1 %194, true
  %197 = xor i1 %195, true
  %198 = xor i1 true, true
  %199 = and i1 %196, true
  %200 = and i1 %194, %198
  %201 = and i1 %197, true
  %202 = and i1 %195, %198
  %203 = or i1 %199, %200
  %204 = or i1 %201, %202
  %205 = xor i1 %203, %204
  %206 = or i1 %196, %197
  %207 = xor i1 %206, true
  %208 = or i1 true, %198
  %209 = and i1 %207, %208
  %210 = or i1 %205, %209
  %211 = or i1 %194, %195
  %212 = select i1 %210, i32 166143038, i32 -594361302
  store i32 %212, i32* %19
  br label %260

; <label>:213:                                    ; preds = %20
  %214 = load i32, i32* @x.172
  %215 = load i32, i32* @y.173
  %216 = sub i32 0, 1
  %217 = add i32 %214, %216
  %218 = sub i32 %214, 1
  %219 = mul i32 %214, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %215, 10
  %223 = xor i1 %221, true
  %224 = xor i1 %222, true
  %225 = xor i1 false, true
  %226 = and i1 %223, false
  %227 = and i1 %221, %225
  %228 = and i1 %224, false
  %229 = and i1 %222, %225
  %230 = or i1 %226, %227
  %231 = or i1 %228, %229
  %232 = xor i1 %230, %231
  %233 = or i1 %223, %224
  %234 = xor i1 %233, true
  %235 = or i1 false, %225
  %236 = and i1 %234, %235
  %237 = or i1 %232, %236
  %238 = or i1 %221, %222
  %239 = select i1 %237, i32 100985905, i32 -594361302
  store i32 %239, i32* %19
  br label %260

; <label>:240:                                    ; preds = %20
  ret void

; <label>:241:                                    ; preds = %20
  %242 = alloca %"class.std::_Deque_base"*, align 8
  %243 = alloca i32**, align 8
  %244 = alloca i32**, align 8
  %245 = alloca i32**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %242, align 8
  store i32** %1, i32*** %243, align 8
  store i32** %2, i32*** %244, align 8
  %246 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %242, align 8
  %247 = load i32**, i32*** %243, align 8
  store i32** %247, i32*** %245, align 8
  store i32 808221534, i32* %19
  br label %260

; <label>:248:                                    ; preds = %20
  %249 = load volatile i32***, i32**** %6
  %250 = load i32**, i32*** %249, align 8
  %251 = load volatile i32***, i32**** %7
  %252 = load i32**, i32*** %251, align 8
  %253 = icmp ult i32** %250, %252
  store i32 577928080, i32* %19
  br label %260

; <label>:254:                                    ; preds = %20
  %255 = load volatile i32***, i32**** %6
  %256 = load i32**, i32*** %255, align 8
  %257 = load i32*, i32** %256, align 8
  %258 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %258, i32* %257) #3
  store i32 -1520299245, i32* %19
  br label %260

; <label>:259:                                    ; preds = %20
  store i32 166143038, i32* %19
  br label %260

; <label>:260:                                    ; preds = %259, %254, %248, %241, %213, %185, %180, %179, %159, %131, %128, %95, %68, %67, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.7"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 1384951943, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %84
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1384951943, label %17
    i32 765066532, label %22
    i32 237175528, label %23
    i32 612979337, label %51
    i32 -93199056, label %70
    i32 726294462, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %84

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 765066532, i32 237175528
  store i32 %21, i32* %13
  br label %84

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.176
  %25 = load i32, i32* @y.177
  %26 = sub i32 %24, -385228394
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -385228394
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 612979337, i32 726294462
  store i32 %50, i32* %13
  br label %84

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8
  %53 = mul i64 %52, 4
  %54 = call i8* @_Znwm(i64 %53)
  %55 = bitcast i8* %54 to i32*
  store i32* %55, i32** %4
  %56 = load i32, i32* @x.176
  %57 = load i32, i32* @y.177
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -93199056, i32 726294462
  store i32 %69, i32* %13
  br label %84

; <label>:70:                                     ; preds = %14
  %71 = load volatile i32*, i32** %4
  ret i32* %71

; <label>:72:                                     ; preds = %14
  %73 = load i64, i64* %8, align 8
  %74 = sub i64 0, -2479948149018146871
  %75 = sub i64 %74, %73
  %76 = add i64 %75, -2479948149018146871
  %77 = sub i64 0, %73
  %78 = sub i64 0, 4
  %79 = sub i64 %76, %78
  %80 = add i64 %76, 4
  %81 = mul i64 %73, 4
  %82 = call i8* @_Znwm(i64 %81)
  %83 = bitcast i8* %82 to i32*
  store i32 612979337, i32* %13
  br label %84

; <label>:84:                                     ; preds = %72, %51, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"*, i32*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.180
  %4 = load i32, i32* @y.181
  %5 = add i32 %3, 667344949
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 667344949
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %57

; <label>:29:                                     ; preds = %2, %57
  %30 = alloca %"class.std::_Deque_base"*, align 8
  %31 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %30, align 8
  store i32* %1, i32** %31, align 8
  %32 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %30, align 8
  %33 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33 to %"class.std::allocator.7"*
  %35 = load i32*, i32** %31, align 8
  %36 = load i32, i32* @x.180
  %37 = load i32, i32* @y.181
  %38 = sub i32 %36, 2015063125
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 2015063125
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %57

; <label>:50:                                     ; preds = %29
  %51 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %52 unwind label %54

; <label>:52:                                     ; preds = %50
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.7"* dereferenceable(1) %34, i32* %35, i64 %51)
          to label %53 unwind label %54

; <label>:53:                                     ; preds = %52
  ret void

; <label>:54:                                     ; preds = %52, %50
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  call void @__clang_call_terminate(i8* %56) #12
  unreachable

; <label>:57:                                     ; preds = %29, %2
  %58 = alloca %"class.std::_Deque_base"*, align 8
  %59 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %58, align 8
  store i32* %1, i32** %59, align 8
  %60 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %58, align 8
  %61 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %60, i32 0, i32 0
  %62 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %61 to %"class.std::allocator.7"*
  %63 = load i32*, i32** %59, align 8
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.7"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.8"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.8"*, i32*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.184
  %7 = load i32, i32* @y.185
  %8 = add i32 %6, 595586162
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 595586162
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1799420011, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1799420011, label %20
    i32 -1368382047, label %40
    i32 1083619211, label %62
    i32 2043894975, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1368382047, i32 2043894975
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %41, align 8
  store i32* %1, i32** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %41, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = bitcast i32* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.184
  %48 = load i32, i32* @y.185
  %49 = sub i32 %47, 1474367750
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1474367750
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1083619211, i32 2043894975
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %65 = alloca i32*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %64, align 8
  store i32* %1, i32** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %64, align 8
  %68 = load i32*, i32** %65, align 8
  %69 = bitcast i32* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -1368382047, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #10

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.17"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.17"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %4, align 8
  %8 = bitcast %"class.std::allocator.17"* %7 to %"class.__gnu_cxx::new_allocator.18"*
  %9 = load i32**, i32*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"* %8, i32** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"*, i32**, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.188
  %7 = load i32, i32* @y.189
  %8 = add i32 %6, -485337288
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -485337288
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -434852592, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -434852592, label %20
    i32 1090513931, label %40
    i32 158767644, label %74
    i32 1212275751, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1090513931, i32 1212275751
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %42 = alloca i32**, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %41, align 8
  store i32** %1, i32*** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %41, align 8
  %45 = load i32**, i32*** %42, align 8
  %46 = bitcast i32** %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.188
  %48 = load i32, i32* @y.189
  %49 = sub i32 %47, 1852051948
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1852051948
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 158767644, i32 1212275751
  store i32 %73, i32* %16
  br label %82

; <label>:74:                                     ; preds = %17
  ret void

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %77 = alloca i32**, align 8
  %78 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %76, align 8
  store i32** %1, i32*** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %76, align 8
  %80 = load i32**, i32*** %77, align 8
  %81 = bitcast i32** %80 to i8*
  call void @_ZdlPv(i8* %81) #3
  store i32 1090513931, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.190
  %2 = load i32, i32* @y.191
  %3 = add i32 %1, -2092549338
  %4 = sub i32 %3, 1
  %5 = sub i32 %4, -2092549338
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %36

; <label>:15:                                     ; preds = %0, %36
  %16 = load i32, i32* @x.190
  %17 = load i32, i32* @y.191
  %18 = add i32 %16, -1106290678
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, -1106290678
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %36

; <label>:30:                                     ; preds = %15
  %31 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %32 unwind label %33

; <label>:32:                                     ; preds = %30
  ret i64 %31

; <label>:33:                                     ; preds = %30
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  call void @__clang_call_terminate(i8* %35) #12
  unreachable

; <label>:36:                                     ; preds = %15, %0
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80)) #4 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to %"class.std::_Deque_base"*
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  %9 = bitcast %"class.std::deque"* %8 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %6, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %4, align 8
  %7 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %8) #3
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %7, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80)) #4 comdat {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  ret %"class.std::_Deque_base"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #3
  %12 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1) %11) #3
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9, %"class.std::allocator.7"* dereferenceable(1) %12) #3
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %76

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %15, i32 0, i32 0
  %17 = load i32**, i32*** %16, align 8
  %18 = icmp ne i32** %17, null
  br i1 %18, label %19, label %108

; <label>:19:                                     ; preds = %13
  %20 = load i32, i32* @x.202
  %21 = load i32, i32* @y.203
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %114

; <label>:45:                                     ; preds = %19, %114
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %47 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %48 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %47, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %48) #3
  %49 = load i32, i32* @x.202
  %50 = load i32, i32* @y.203
  %51 = add i32 %49, -396175719
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -396175719
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %114

; <label>:75:                                     ; preds = %45
  br label %108

; <label>:76:                                     ; preds = %2
  %77 = load i32, i32* @x.202
  %78 = load i32, i32* @y.203
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %118

; <label>:90:                                     ; preds = %76, %118
  %91 = landingpad { i8*, i32 }
          cleanup
  %92 = extractvalue { i8*, i32 } %91, 0
  store i8* %92, i8** %6, align 8
  %93 = extractvalue { i8*, i32 } %91, 1
  store i32 %93, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  %94 = load i32, i32* @x.202
  %95 = load i32, i32* @y.203
  %96 = sub i32 0, 1
  %97 = add i32 %94, %96
  %98 = sub i32 %94, 1
  %99 = mul i32 %94, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %95, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  br i1 %105, label %107, label %118

; <label>:107:                                    ; preds = %90
  br label %109

; <label>:108:                                    ; preds = %75, %13
  ret void

; <label>:109:                                    ; preds = %107
  %110 = load i8*, i8** %6, align 8
  %111 = load i32, i32* %7, align 4
  %112 = insertvalue { i8*, i32 } undef, i8* %110, 0
  %113 = insertvalue { i8*, i32 } %112, i32 %111, 1
  resume { i8*, i32 } %113

; <label>:114:                                    ; preds = %45, %19
  %115 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %116 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %117 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %116, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %115, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %117) #3
  br label %45

; <label>:118:                                    ; preds = %90, %76
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %6, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  br label %90
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  ret %"class.std::allocator.7"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.206
  %6 = load i32, i32* @y.207
  %7 = add i32 %5, 1293466872
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1293466872
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 841377329, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 841377329, label %19
    i32 -2021073008, label %39
    i32 2091289889, label %59
    i32 -275199871, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2021073008, i32 -275199871
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42 to %"class.std::allocator.7"*
  store %"class.std::allocator.7"* %43, %"class.std::allocator.7"** %2
  %44 = load i32, i32* @x.206
  %45 = load i32, i32* @y.207
  %46 = sub i32 %44, -1152124092
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1152124092
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 2091289889, i32 -275199871
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.7"*, %"class.std::allocator.7"** %2
  ret %"class.std::allocator.7"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %62, align 8
  %63 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64 to %"class.std::allocator.7"*
  store i32 -2021073008, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5 to %"class.std::allocator.7"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1) %7) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.7"* %6, %"class.std::allocator.7"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  store i32** null, i32*** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %10 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  %13 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %12, i32*** dereferenceable(8) %14) #3
  %15 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  %16 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %17) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.212
  %6 = load i32, i32* @y.213
  %7 = add i32 %5, -1575157511
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1575157511
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1763698127, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1763698127, label %19
    i32 -862078535, label %27
    i32 725696957, label %46
    i32 291577020, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -862078535, i32 291577020
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %28, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %1, %"class.__gnu_cxx::new_allocator.8"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %28, align 8
  %31 = load i32, i32* @x.212
  %32 = load i32, i32* @y.213
  %33 = add i32 %31, -1626358399
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1626358399
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 725696957, i32 291577020
  store i32 %45, i32* %15
  br label %51

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %49 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %48, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %1, %"class.__gnu_cxx::new_allocator.8"** %49, align 8
  %50 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %48, align 8
  store i32 -862078535, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %10 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %11 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  %13 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %5) #3
  %14 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %15 = bitcast %"struct.std::_Deque_iterator"* %14 to i8*
  %16 = bitcast %"struct.std::_Deque_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8), i32*** dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.216
  %6 = load i32, i32* @y.217
  %7 = sub i32 %5, 454862085
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 454862085
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2133704043, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2133704043, label %19
    i32 -788115699, label %39
    i32 -1836193031, label %68
    i32 -1806413280, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -788115699, i32 -1806413280
  store i32 %38, i32* %15
  br label %83

; <label>:39:                                     ; preds = %16
  %40 = alloca i32***, align 8
  %41 = alloca i32***, align 8
  %42 = alloca i32**, align 8
  store i32*** %0, i32**** %40, align 8
  store i32*** %1, i32**** %41, align 8
  %43 = load i32***, i32**** %40, align 8
  %44 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %43) #3
  %45 = load i32**, i32*** %44, align 8
  store i32** %45, i32*** %42, align 8
  %46 = load i32***, i32**** %41, align 8
  %47 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %46) #3
  %48 = load i32**, i32*** %47, align 8
  %49 = load i32***, i32**** %40, align 8
  store i32** %48, i32*** %49, align 8
  %50 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %42) #3
  %51 = load i32**, i32*** %50, align 8
  %52 = load i32***, i32**** %41, align 8
  store i32** %51, i32*** %52, align 8
  %53 = load i32, i32* @x.216
  %54 = load i32, i32* @y.217
  %55 = add i32 %53, -726190817
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -726190817
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -1836193031, i32 -1806413280
  store i32 %67, i32* %15
  br label %83

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca i32***, align 8
  %71 = alloca i32***, align 8
  %72 = alloca i32**, align 8
  store i32*** %0, i32**** %70, align 8
  store i32*** %1, i32**** %71, align 8
  %73 = load i32***, i32**** %70, align 8
  %74 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %73) #3
  %75 = load i32**, i32*** %74, align 8
  store i32** %75, i32*** %72, align 8
  %76 = load i32***, i32**** %71, align 8
  %77 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %76) #3
  %78 = load i32**, i32*** %77, align 8
  %79 = load i32***, i32**** %70, align 8
  store i32** %78, i32*** %79, align 8
  %80 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %72) #3
  %81 = load i32**, i32*** %80, align 8
  %82 = load i32***, i32**** %71, align 8
  store i32** %81, i32*** %82, align 8
  store i32 -788115699, i32* %15
  br label %83

; <label>:83:                                     ; preds = %69, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.218
  %6 = load i32, i32* @y.219
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1486319447, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %93
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1486319447, label %18
    i32 -1834934890, label %38
    i32 935695988, label %78
    i32 -719187614, label %79
  ]

; <label>:17:                                     ; preds = %15
  br label %93

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1834934890, i32 -719187614
  store i32 %37, i32* %14
  br label %93

; <label>:38:                                     ; preds = %15
  %39 = alloca i64*, align 8
  %40 = alloca i64*, align 8
  %41 = alloca i64, align 8
  store i64* %0, i64** %39, align 8
  store i64* %1, i64** %40, align 8
  %42 = load i64*, i64** %39, align 8
  %43 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %42) #3
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %41, align 8
  %45 = load i64*, i64** %40, align 8
  %46 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %45) #3
  %47 = load i64, i64* %46, align 8
  %48 = load i64*, i64** %39, align 8
  store i64 %47, i64* %48, align 8
  %49 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %41) #3
  %50 = load i64, i64* %49, align 8
  %51 = load i64*, i64** %40, align 8
  store i64 %50, i64* %51, align 8
  %52 = load i32, i32* @x.218
  %53 = load i32, i32* @y.219
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 935695988, i32 -719187614
  store i32 %77, i32* %14
  br label %93

; <label>:78:                                     ; preds = %15
  ret void

; <label>:79:                                     ; preds = %15
  %80 = alloca i64*, align 8
  %81 = alloca i64*, align 8
  %82 = alloca i64, align 8
  store i64* %0, i64** %80, align 8
  store i64* %1, i64** %81, align 8
  %83 = load i64*, i64** %80, align 8
  %84 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %83) #3
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %82, align 8
  %86 = load i64*, i64** %81, align 8
  %87 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %86) #3
  %88 = load i64, i64* %87, align 8
  %89 = load i64*, i64** %80, align 8
  store i64 %88, i64* %89, align 8
  %90 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %82) #3
  %91 = load i64, i64* %90, align 8
  %92 = load i64*, i64** %81, align 8
  store i64 %91, i64* %92, align 8
  store i32 -1834934890, i32* %14
  br label %93

; <label>:93:                                     ; preds = %79, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  ret %"struct.std::_Deque_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 2
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %19, i32 0, i32 3
  %21 = load i32**, i32*** %20, align 8
  store i32** %21, i32*** %18, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8)) #4 comdat {
  %2 = alloca i32***
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.224
  %6 = load i32, i32* @y.225
  %7 = add i32 %5, 1357063888
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1357063888
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -830245629, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -830245629, label %19
    i32 32623481, label %39
    i32 698261251, label %69
    i32 -272325932, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 32623481, i32 -272325932
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca i32***, align 8
  store i32*** %0, i32**** %40, align 8
  %41 = load i32***, i32**** %40, align 8
  store i32*** %41, i32**** %2
  %42 = load i32, i32* @x.224
  %43 = load i32, i32* @y.225
  %44 = sub i32 %42, 624554242
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 624554242
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 698261251, i32 -272325932
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile i32***, i32**** %2
  ret i32*** %70

; <label>:71:                                     ; preds = %16
  %72 = alloca i32***, align 8
  store i32*** %0, i32**** %72, align 8
  %73 = load i32***, i32**** %72, align 8
  store i32 32623481, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.226
  %6 = load i32, i32* @y.227
  %7 = sub i32 %5, 656569827
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 656569827
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -434106250, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -434106250, label %19
    i32 -1439248657, label %27
    i32 1091286301, label %45
    i32 312648890, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1439248657, i32 312648890
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.226
  %31 = load i32, i32* @y.227
  %32 = sub i32 %30, 487673152
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 487673152
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1091286301, i32 312648890
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile i64*, i64** %2
  ret i64* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca i64*, align 8
  store i64* %0, i64** %48, align 8
  %49 = load i64*, i64** %48, align 8
  store i32 -1439248657, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.7"* dereferenceable(1)) #4 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.228
  %8 = load i32, i32* @y.229
  %9 = add i32 %7, 2140954253
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 2140954253
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -577509297, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %65
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -577509297, label %21
    i32 245586074, label %29
    i32 1879577372, label %60
    i32 -2094585240, label %61
  ]

; <label>:20:                                     ; preds = %18
  br label %65

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 245586074, i32 -2094585240
  store i32 %28, i32* %17
  br label %65

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::deque"*, align 8
  %31 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %30, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %31, align 8
  %32 = load %"class.std::deque"*, %"class.std::deque"** %30, align 8
  %33 = load i32, i32* @x.228
  %34 = load i32, i32* @y.229
  %35 = sub i32 %33, 634083253
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 634083253
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1879577372, i32 -2094585240
  store i32 %59, i32* %17
  br label %65

; <label>:60:                                     ; preds = %18
  ret void

; <label>:61:                                     ; preds = %18
  %62 = alloca %"class.std::deque"*, align 8
  %63 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %62, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %63, align 8
  %64 = load %"class.std::deque"*, %"class.std::deque"** %62, align 8
  store i32 245586074, i32* %17
  br label %65

; <label>:65:                                     ; preds = %61, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.230
  %6 = load i32, i32* @y.231
  %7 = sub i32 %5, -71860952
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -71860952
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1865915896, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1865915896, label %19
    i32 -1698979919, label %27
    i32 -275857590, label %48
    i32 253533391, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1698979919, i32 253533391
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %28, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #3
  %33 = load i32, i32* @x.230
  %34 = load i32, i32* @y.231
  %35 = sub i32 %33, 635554510
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 635554510
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -275857590, i32 253533391
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %50, align 8
  %51 = load %"class.std::deque"*, %"class.std::deque"** %50, align 8
  %52 = bitcast %"class.std::deque"* %51 to %"class.std::_Deque_base"*
  %53 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %53, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %54) #3
  store i32 -1698979919, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.234
  %7 = load i32, i32* @y.235
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1211662004, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1211662004, label %19
    i32 -95441270, label %27
    i32 393038978, label %50
    i32 -1909935939, label %53
    i32 -583773042, label %75
    i32 1111765644, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -95441270, i32 1111765644
  store i32 %26, i32* %15
  br label %85

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %28, align 8
  %29 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  store %"class.std::_Deque_base"* %29, %"class.std::_Deque_base"** %3
  %30 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 0
  %33 = load i32**, i32*** %32, align 8
  %34 = icmp ne i32** %33, null
  store i1 %34, i1* %2
  %35 = load i32, i32* @x.234
  %36 = load i32, i32* @y.235
  %37 = add i32 %35, 515370030
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 515370030
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 393038978, i32 1111765644
  store i32 %49, i32* %15
  br label %85

; <label>:50:                                     ; preds = %16
  %51 = load volatile i1, i1* %2
  %52 = select i1 %51, i32 -1909935939, i32 -583773042
  store i32 %52, i32* %15
  br label %85

; <label>:53:                                     ; preds = %16
  %54 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %55 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %55, i32 0, i32 2
  %57 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %56, i32 0, i32 3
  %58 = load i32**, i32*** %57, align 8
  %59 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %60 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %60, i32 0, i32 3
  %62 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %61, i32 0, i32 3
  %63 = load i32**, i32*** %62, align 8
  %64 = getelementptr inbounds i32*, i32** %63, i64 1
  %65 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %65, i32** %58, i32** %64) #3
  %66 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %67 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %67, i32 0, i32 0
  %69 = load i32**, i32*** %68, align 8
  %70 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %71 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %71, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %74, i32** %69, i64 %73) #3
  store i32 -583773042, i32* %15
  br label %85

; <label>:75:                                     ; preds = %16
  %76 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %77 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %76, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %77) #3
  ret void

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %79, align 8
  %80 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %81, i32 0, i32 0
  %83 = load i32**, i32*** %82, align 8
  %84 = icmp ne i32** %83, null
  store i32 -95441270, i32* %15
  br label %85

; <label>:85:                                     ; preds = %78, %53, %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.236
  %5 = load i32, i32* @y.237
  %6 = add i32 %4, -21096573
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -21096573
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -197430599, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -197430599, label %18
    i32 -2060826666, label %26
    i32 -673812432, label %57
    i32 -715694287, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2060826666, i32 -715694287
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %27, align 8
  %28 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.236
  %31 = load i32, i32* @y.237
  %32 = sub i32 %30, 571435844
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 571435844
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -673812432, i32 -715694287
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %59, align 8
  %60 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %60, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %61)
  store i32 -2060826666, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.238
  %5 = load i32, i32* @y.239
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 742563258, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %67
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 742563258, label %17
    i32 -1071126881, label %37
    i32 1399969341, label %59
    i32 597815393, label %60
  ]

; <label>:16:                                     ; preds = %14
  br label %67

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1071126881, i32 597815393
  store i32 %36, i32* %13
  br label %67

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %39 to %"class.std::allocator.2"*
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"* %40) #3
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %39, i32 0, i32 0
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %39, i32 0, i32 1
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %39, i32 0, i32 2
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %43, align 8
  %44 = load i32, i32* @x.238
  %45 = load i32, i32* @y.239
  %46 = sub i32 %44, 1763031778
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1763031778
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1399969341, i32 597815393
  store i32 %58, i32* %13
  br label %67

; <label>:59:                                     ; preds = %14
  ret void

; <label>:60:                                     ; preds = %14
  %61 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %61, align 8
  %62 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %61, align 8
  %63 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %62 to %"class.std::allocator.2"*
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.2"* %63) #3
  %64 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %62, i32 0, i32 0
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %64, align 8
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %62, i32 0, i32 1
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %62, i32 0, i32 2
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %66, align 8
  store i32 -1071126881, i32* %13
  br label %67

; <label>:67:                                     ; preds = %60, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.242
  %5 = load i32, i32* @y.243
  %6 = add i32 %4, 234783368
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 234783368
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 6389584, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 6389584, label %18
    i32 2102344180, label %38
    i32 551958519, label %56
    i32 -2121295594, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2102344180, i32 -2121295594
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %39, align 8
  %40 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.242
  %43 = load i32, i32* @y.243
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 551958519, i32 -2121295594
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %58, align 8
  %59 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %60)
  store i32 2102344180, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.7"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 0
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 1
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 2
  store i32* null, i32** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %2, align 8
  %3 = load %"class.std::vector.10"*, %"class.std::vector.10"** %2, align 8
  %4 = bitcast %"class.std::vector.10"* %3 to %"struct.std::_Vector_base.11"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %6, align 8
  %8 = bitcast %"class.std::vector.10"* %3 to %"struct.std::_Vector_base.11"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %10, align 8
  %12 = ptrtoint %"struct.Strongly_Connected_Components::node"* %7 to i64
  %13 = ptrtoint %"struct.Strongly_Connected_Components::node"* %11 to i64
  %14 = add i64 %12, -8168077236836481015
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -8168077236836481015
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 40
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE17_M_default_appendEm(%"class.std::vector.10"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.248
  %4 = load i32, i32* @y.249
  %5 = sub i32 %3, 1226416463
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1226416463
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %504

; <label>:17:                                     ; preds = %2, %504
  %18 = alloca %"class.std::vector.10"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %23 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %18, align 8
  store i64 %1, i64* %19, align 8
  %26 = load %"class.std::vector.10"*, %"class.std::vector.10"** %18, align 8
  %27 = load i64, i64* %19, align 8
  %28 = icmp ne i64 %27, 0
  %29 = load i32, i32* @x.248
  %30 = load i32, i32* @y.249
  %31 = sub i32 %29, -916762248
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -916762248
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %504

; <label>:43:                                     ; preds = %17
  br i1 %28, label %44, label %398

; <label>:44:                                     ; preds = %43
  %45 = load i32, i32* @x.248
  %46 = load i32, i32* @y.249
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %516

; <label>:58:                                     ; preds = %44, %516
  %59 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %60, i32 0, i32 2
  %62 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %61, align 8
  %63 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %65, align 8
  %67 = ptrtoint %"struct.Strongly_Connected_Components::node"* %62 to i64
  %68 = ptrtoint %"struct.Strongly_Connected_Components::node"* %66 to i64
  %69 = sub i64 %67, -3324999215253501506
  %70 = sub i64 %69, %68
  %71 = add i64 %70, -3324999215253501506
  %72 = sub i64 %67, %68
  %73 = sdiv exact i64 %71, 40
  %74 = load i64, i64* %19, align 8
  %75 = icmp uge i64 %73, %74
  %76 = load i32, i32* @x.248
  %77 = load i32, i32* @y.249
  %78 = sub i32 %76, -59988777
  %79 = sub i32 %78, 1
  %80 = add i32 %79, -59988777
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 false, true
  %89 = and i1 %86, false
  %90 = and i1 %84, %88
  %91 = and i1 %87, false
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 false, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  br i1 %100, label %102, label %516

; <label>:102:                                    ; preds = %58
  br i1 %75, label %103, label %169

; <label>:103:                                    ; preds = %102
  %104 = load i32, i32* @x.248
  %105 = load i32, i32* @y.249
  %106 = sub i32 %104, 1170289799
  %107 = sub i32 %106, 1
  %108 = add i32 %107, 1170289799
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 false, true
  %117 = and i1 %114, false
  %118 = and i1 %112, %116
  %119 = and i1 %115, false
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 false, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  br i1 %128, label %130, label %551

; <label>:130:                                    ; preds = %103, %551
  %131 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %132, i32 0, i32 1
  %134 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %133, align 8
  %135 = load i64, i64* %19, align 8
  %136 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %137 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %136) #3
  %138 = call %"struct.Strongly_Connected_Components::node"* @_ZSt27__uninitialized_default_n_aIPN29Strongly_Connected_Components4nodeEmS1_ET_S3_T0_RSaIT1_E(%"struct.Strongly_Connected_Components::node"* %134, i64 %135, %"class.std::allocator.12"* dereferenceable(1) %137)
  %139 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %139, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %140, i32 0, i32 1
  store %"struct.Strongly_Connected_Components::node"* %138, %"struct.Strongly_Connected_Components::node"** %141, align 8
  %142 = load i32, i32* @x.248
  %143 = load i32, i32* @y.249
  %144 = sub i32 %142, -691745776
  %145 = sub i32 %144, 1
  %146 = add i32 %145, -691745776
  %147 = sub i32 %142, 1
  %148 = mul i32 %142, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %143, 10
  %152 = xor i1 %150, true
  %153 = xor i1 %151, true
  %154 = xor i1 true, true
  %155 = and i1 %152, true
  %156 = and i1 %150, %154
  %157 = and i1 %153, true
  %158 = and i1 %151, %154
  %159 = or i1 %155, %156
  %160 = or i1 %157, %158
  %161 = xor i1 %159, %160
  %162 = or i1 %152, %153
  %163 = xor i1 %162, true
  %164 = or i1 true, %154
  %165 = and i1 %163, %164
  %166 = or i1 %161, %165
  %167 = or i1 %150, %151
  br i1 %166, label %168, label %551

; <label>:168:                                    ; preds = %130
  br label %397

; <label>:169:                                    ; preds = %102
  %170 = load i64, i64* %19, align 8
  %171 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.10"* %26, i64 %170, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %171, i64* %20, align 8
  %172 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"* %26) #3
  store i64 %172, i64* %21, align 8
  %173 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %174 = load i64, i64* %20, align 8
  %175 = call %"struct.Strongly_Connected_Components::node"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.11"* %173, i64 %174)
  store %"struct.Strongly_Connected_Components::node"* %175, %"struct.Strongly_Connected_Components::node"** %22, align 8
  %176 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %22, align 8
  store %"struct.Strongly_Connected_Components::node"* %176, %"struct.Strongly_Connected_Components::node"** %23, align 8
  %177 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %178 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %177, i32 0, i32 0
  %179 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %178, i32 0, i32 0
  %180 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %179, align 8
  %181 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %182 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %181, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %182, i32 0, i32 1
  %184 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %183, align 8
  %185 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %22, align 8
  %186 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %187 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %186) #3
  %188 = invoke %"struct.Strongly_Connected_Components::node"* @_ZSt34__uninitialized_move_if_noexcept_aIPN29Strongly_Connected_Components4nodeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Strongly_Connected_Components::node"* %180, %"struct.Strongly_Connected_Components::node"* %184, %"struct.Strongly_Connected_Components::node"* %185, %"class.std::allocator.12"* dereferenceable(1) %187)
          to label %189 unwind label %196

; <label>:189:                                    ; preds = %169
  store %"struct.Strongly_Connected_Components::node"* %188, %"struct.Strongly_Connected_Components::node"** %23, align 8
  %190 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %23, align 8
  %191 = load i64, i64* %19, align 8
  %192 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %193 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %192) #3
  %194 = invoke %"struct.Strongly_Connected_Components::node"* @_ZSt27__uninitialized_default_n_aIPN29Strongly_Connected_Components4nodeEmS1_ET_S3_T0_RSaIT1_E(%"struct.Strongly_Connected_Components::node"* %190, i64 %191, %"class.std::allocator.12"* dereferenceable(1) %193)
          to label %195 unwind label %196

; <label>:195:                                    ; preds = %189
  store %"struct.Strongly_Connected_Components::node"* %194, %"struct.Strongly_Connected_Components::node"** %23, align 8
  br label %353

; <label>:196:                                    ; preds = %189, %169
  %197 = landingpad { i8*, i32 }
          catch i8* null
  %198 = extractvalue { i8*, i32 } %197, 0
  store i8* %198, i8** %24, align 8
  %199 = extractvalue { i8*, i32 } %197, 1
  store i32 %199, i32* %25, align 4
  br label %200

; <label>:200:                                    ; preds = %196
  %201 = load i32, i32* @x.248
  %202 = load i32, i32* @y.249
  %203 = sub i32 %201, -1009666981
  %204 = sub i32 %203, 1
  %205 = add i32 %204, -1009666981
  %206 = sub i32 %201, 1
  %207 = mul i32 %201, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %202, 10
  %211 = xor i1 %209, true
  %212 = xor i1 %210, true
  %213 = xor i1 false, true
  %214 = and i1 %211, false
  %215 = and i1 %209, %213
  %216 = and i1 %212, false
  %217 = and i1 %210, %213
  %218 = or i1 %214, %215
  %219 = or i1 %216, %217
  %220 = xor i1 %218, %219
  %221 = or i1 %211, %212
  %222 = xor i1 %221, true
  %223 = or i1 false, %213
  %224 = and i1 %222, %223
  %225 = or i1 %220, %224
  %226 = or i1 %209, %210
  br i1 %225, label %227, label %563

; <label>:227:                                    ; preds = %200, %563
  %228 = load i8*, i8** %24, align 8
  %229 = call i8* @__cxa_begin_catch(i8* %228) #3
  %230 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %22, align 8
  %231 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %23, align 8
  %232 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %233 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %232) #3
  %234 = load i32, i32* @x.248
  %235 = load i32, i32* @y.249
  %236 = add i32 %234, -449056171
  %237 = sub i32 %236, 1
  %238 = sub i32 %237, -449056171
  %239 = sub i32 %234, 1
  %240 = mul i32 %234, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %235, 10
  %244 = and i1 %242, %243
  %245 = xor i1 %242, %243
  %246 = or i1 %244, %245
  %247 = or i1 %242, %243
  br i1 %246, label %248, label %563

; <label>:248:                                    ; preds = %227
  invoke void @_ZSt8_DestroyIPN29Strongly_Connected_Components4nodeES1_EvT_S3_RSaIT0_E(%"struct.Strongly_Connected_Components::node"* %230, %"struct.Strongly_Connected_Components::node"* %231, %"class.std::allocator.12"* dereferenceable(1) %233)
          to label %249 unwind label %295

; <label>:249:                                    ; preds = %248
  %250 = load i32, i32* @x.248
  %251 = load i32, i32* @y.249
  %252 = sub i32 0, 1
  %253 = add i32 %250, %252
  %254 = sub i32 %250, 1
  %255 = mul i32 %250, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %251, 10
  %259 = and i1 %257, %258
  %260 = xor i1 %257, %258
  %261 = or i1 %259, %260
  %262 = or i1 %257, %258
  br i1 %261, label %263, label %570

; <label>:263:                                    ; preds = %249, %570
  %264 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %265 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %22, align 8
  %266 = load i64, i64* %20, align 8
  %267 = load i32, i32* @x.248
  %268 = load i32, i32* @y.249
  %269 = add i32 %267, 1769738975
  %270 = sub i32 %269, 1
  %271 = sub i32 %270, 1769738975
  %272 = sub i32 %267, 1
  %273 = mul i32 %267, %271
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %268, 10
  %277 = xor i1 %275, true
  %278 = xor i1 %276, true
  %279 = xor i1 true, true
  %280 = and i1 %277, true
  %281 = and i1 %275, %279
  %282 = and i1 %278, true
  %283 = and i1 %276, %279
  %284 = or i1 %280, %281
  %285 = or i1 %282, %283
  %286 = xor i1 %284, %285
  %287 = or i1 %277, %278
  %288 = xor i1 %287, true
  %289 = or i1 true, %279
  %290 = and i1 %288, %289
  %291 = or i1 %286, %290
  %292 = or i1 %275, %276
  br i1 %291, label %293, label %570

; <label>:293:                                    ; preds = %263
  invoke void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.11"* %264, %"struct.Strongly_Connected_Components::node"* %265, i64 %266)
          to label %294 unwind label %295

; <label>:294:                                    ; preds = %293
  invoke void @__cxa_rethrow() #13
          to label %461 unwind label %295

; <label>:295:                                    ; preds = %294, %293, %248
  %296 = load i32, i32* @x.248
  %297 = load i32, i32* @y.249
  %298 = sub i32 0, 1
  %299 = add i32 %296, %298
  %300 = sub i32 %296, 1
  %301 = mul i32 %296, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %297, 10
  %305 = xor i1 %303, true
  %306 = xor i1 %304, true
  %307 = xor i1 true, true
  %308 = and i1 %305, true
  %309 = and i1 %303, %307
  %310 = and i1 %306, true
  %311 = and i1 %304, %307
  %312 = or i1 %308, %309
  %313 = or i1 %310, %311
  %314 = xor i1 %312, %313
  %315 = or i1 %305, %306
  %316 = xor i1 %315, true
  %317 = or i1 true, %307
  %318 = and i1 %316, %317
  %319 = or i1 %314, %318
  %320 = or i1 %303, %304
  br i1 %319, label %321, label %574

; <label>:321:                                    ; preds = %295, %574
  %322 = landingpad { i8*, i32 }
          cleanup
  %323 = extractvalue { i8*, i32 } %322, 0
  store i8* %323, i8** %24, align 8
  %324 = extractvalue { i8*, i32 } %322, 1
  store i32 %324, i32* %25, align 4
  %325 = load i32, i32* @x.248
  %326 = load i32, i32* @y.249
  %327 = sub i32 %325, -132804305
  %328 = sub i32 %327, 1
  %329 = add i32 %328, -132804305
  %330 = sub i32 %325, 1
  %331 = mul i32 %325, %329
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %326, 10
  %335 = xor i1 %333, true
  %336 = xor i1 %334, true
  %337 = xor i1 false, true
  %338 = and i1 %335, false
  %339 = and i1 %333, %337
  %340 = and i1 %336, false
  %341 = and i1 %334, %337
  %342 = or i1 %338, %339
  %343 = or i1 %340, %341
  %344 = xor i1 %342, %343
  %345 = or i1 %335, %336
  %346 = xor i1 %345, true
  %347 = or i1 false, %337
  %348 = and i1 %346, %347
  %349 = or i1 %344, %348
  %350 = or i1 %333, %334
  br i1 %349, label %351, label %574

; <label>:351:                                    ; preds = %321
  invoke void @__cxa_end_catch()
          to label %352 unwind label %458

; <label>:352:                                    ; preds = %351
  br label %399

; <label>:353:                                    ; preds = %195
  %354 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %355 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %354, i32 0, i32 0
  %356 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %355, i32 0, i32 0
  %357 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %356, align 8
  %358 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %359 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %358, i32 0, i32 0
  %360 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %359, i32 0, i32 1
  %361 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %360, align 8
  %362 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %363 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %362) #3
  call void @_ZSt8_DestroyIPN29Strongly_Connected_Components4nodeES1_EvT_S3_RSaIT0_E(%"struct.Strongly_Connected_Components::node"* %357, %"struct.Strongly_Connected_Components::node"* %361, %"class.std::allocator.12"* dereferenceable(1) %363)
  %364 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %365 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %366 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %365, i32 0, i32 0
  %367 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %366, i32 0, i32 0
  %368 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %367, align 8
  %369 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %370 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %369, i32 0, i32 0
  %371 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %370, i32 0, i32 2
  %372 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %371, align 8
  %373 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %374 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %373, i32 0, i32 0
  %375 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %374, i32 0, i32 0
  %376 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %375, align 8
  %377 = ptrtoint %"struct.Strongly_Connected_Components::node"* %372 to i64
  %378 = ptrtoint %"struct.Strongly_Connected_Components::node"* %376 to i64
  %379 = sub i64 0, %378
  %380 = add i64 %377, %379
  %381 = sub i64 %377, %378
  %382 = sdiv exact i64 %380, 40
  call void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.11"* %364, %"struct.Strongly_Connected_Components::node"* %368, i64 %382)
  %383 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %22, align 8
  %384 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %385 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %384, i32 0, i32 0
  %386 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %385, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* %383, %"struct.Strongly_Connected_Components::node"** %386, align 8
  %387 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %23, align 8
  %388 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %389 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %388, i32 0, i32 0
  %390 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %389, i32 0, i32 1
  store %"struct.Strongly_Connected_Components::node"* %387, %"struct.Strongly_Connected_Components::node"** %390, align 8
  %391 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %22, align 8
  %392 = load i64, i64* %20, align 8
  %393 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %391, i64 %392
  %394 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %395 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %394, i32 0, i32 0
  %396 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %395, i32 0, i32 2
  store %"struct.Strongly_Connected_Components::node"* %393, %"struct.Strongly_Connected_Components::node"** %396, align 8
  br label %397

; <label>:397:                                    ; preds = %353, %168
  br label %398

; <label>:398:                                    ; preds = %397, %43
  ret void

; <label>:399:                                    ; preds = %352
  %400 = load i32, i32* @x.248
  %401 = load i32, i32* @y.249
  %402 = sub i32 %400, 1104567926
  %403 = sub i32 %402, 1
  %404 = add i32 %403, 1104567926
  %405 = sub i32 %400, 1
  %406 = mul i32 %400, %404
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %401, 10
  %410 = xor i1 %408, true
  %411 = xor i1 %409, true
  %412 = xor i1 false, true
  %413 = and i1 %410, false
  %414 = and i1 %408, %412
  %415 = and i1 %411, false
  %416 = and i1 %409, %412
  %417 = or i1 %413, %414
  %418 = or i1 %415, %416
  %419 = xor i1 %417, %418
  %420 = or i1 %410, %411
  %421 = xor i1 %420, true
  %422 = or i1 false, %412
  %423 = and i1 %421, %422
  %424 = or i1 %419, %423
  %425 = or i1 %408, %409
  br i1 %424, label %426, label %578

; <label>:426:                                    ; preds = %399, %578
  %427 = load i8*, i8** %24, align 8
  %428 = load i32, i32* %25, align 4
  %429 = insertvalue { i8*, i32 } undef, i8* %427, 0
  %430 = insertvalue { i8*, i32 } %429, i32 %428, 1
  %431 = load i32, i32* @x.248
  %432 = load i32, i32* @y.249
  %433 = sub i32 %431, 773546932
  %434 = sub i32 %433, 1
  %435 = add i32 %434, 773546932
  %436 = sub i32 %431, 1
  %437 = mul i32 %431, %435
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %432, 10
  %441 = xor i1 %439, true
  %442 = xor i1 %440, true
  %443 = xor i1 false, true
  %444 = and i1 %441, false
  %445 = and i1 %439, %443
  %446 = and i1 %442, false
  %447 = and i1 %440, %443
  %448 = or i1 %444, %445
  %449 = or i1 %446, %447
  %450 = xor i1 %448, %449
  %451 = or i1 %441, %442
  %452 = xor i1 %451, true
  %453 = or i1 false, %443
  %454 = and i1 %452, %453
  %455 = or i1 %450, %454
  %456 = or i1 %439, %440
  br i1 %455, label %457, label %578

; <label>:457:                                    ; preds = %426
  resume { i8*, i32 } %430

; <label>:458:                                    ; preds = %351
  %459 = landingpad { i8*, i32 }
          catch i8* null
  %460 = extractvalue { i8*, i32 } %459, 0
  call void @__clang_call_terminate(i8* %460) #12
  unreachable

; <label>:461:                                    ; preds = %294
  %462 = load i32, i32* @x.248
  %463 = load i32, i32* @y.249
  %464 = sub i32 %462, 1956200294
  %465 = sub i32 %464, 1
  %466 = add i32 %465, 1956200294
  %467 = sub i32 %462, 1
  %468 = mul i32 %462, %466
  %469 = urem i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = icmp slt i32 %463, 10
  %472 = xor i1 %470, true
  %473 = xor i1 %471, true
  %474 = xor i1 true, true
  %475 = and i1 %472, true
  %476 = and i1 %470, %474
  %477 = and i1 %473, true
  %478 = and i1 %471, %474
  %479 = or i1 %475, %476
  %480 = or i1 %477, %478
  %481 = xor i1 %479, %480
  %482 = or i1 %472, %473
  %483 = xor i1 %482, true
  %484 = or i1 true, %474
  %485 = and i1 %483, %484
  %486 = or i1 %481, %485
  %487 = or i1 %470, %471
  br i1 %486, label %488, label %583

; <label>:488:                                    ; preds = %461, %583
  %489 = load i32, i32* @x.248
  %490 = load i32, i32* @y.249
  %491 = add i32 %489, 1002549844
  %492 = sub i32 %491, 1
  %493 = sub i32 %492, 1002549844
  %494 = sub i32 %489, 1
  %495 = mul i32 %489, %493
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %490, 10
  %499 = and i1 %497, %498
  %500 = xor i1 %497, %498
  %501 = or i1 %499, %500
  %502 = or i1 %497, %498
  br i1 %501, label %503, label %583

; <label>:503:                                    ; preds = %488
  unreachable

; <label>:504:                                    ; preds = %17, %2
  %505 = alloca %"class.std::vector.10"*, align 8
  %506 = alloca i64, align 8
  %507 = alloca i64, align 8
  %508 = alloca i64, align 8
  %509 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %510 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %511 = alloca i8*
  %512 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %505, align 8
  store i64 %1, i64* %506, align 8
  %513 = load %"class.std::vector.10"*, %"class.std::vector.10"** %505, align 8
  %514 = load i64, i64* %506, align 8
  %515 = icmp ne i64 %514, 0
  br label %17

; <label>:516:                                    ; preds = %58, %44
  %517 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %518 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %517, i32 0, i32 0
  %519 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %518, i32 0, i32 2
  %520 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %519, align 8
  %521 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %522 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %521, i32 0, i32 0
  %523 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %522, i32 0, i32 1
  %524 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %523, align 8
  %525 = ptrtoint %"struct.Strongly_Connected_Components::node"* %520 to i64
  %526 = ptrtoint %"struct.Strongly_Connected_Components::node"* %524 to i64
  %527 = sub i64 0, 6343700158714892252
  %528 = sub i64 %527, %525
  %529 = add i64 %528, 6343700158714892252
  %530 = sub i64 0, %525
  %531 = sub i64 %529, -5327633957990381282
  %532 = add i64 %531, %526
  %533 = add i64 %532, -5327633957990381282
  %534 = add i64 %529, %526
  %535 = add i64 0, 3651388028991302184
  %536 = sub i64 %535, %525
  %537 = sub i64 %536, 3651388028991302184
  %538 = sub i64 0, %525
  %539 = sub i64 0, %537
  %540 = sub i64 0, %526
  %541 = add i64 %539, %540
  %542 = sub i64 0, %541
  %543 = add i64 %537, %526
  %544 = shl i64 %525, %526
  %545 = sub i64 0, %526
  %546 = add i64 %525, %545
  %547 = sub i64 %525, %526
  %548 = sdiv exact i64 %546, 40
  %549 = load i64, i64* %19, align 8
  %550 = icmp uge i64 %548, %549
  br label %58

; <label>:551:                                    ; preds = %130, %103
  %552 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %553 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %552, i32 0, i32 0
  %554 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %553, i32 0, i32 1
  %555 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %554, align 8
  %556 = load i64, i64* %19, align 8
  %557 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %558 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %557) #3
  %559 = call %"struct.Strongly_Connected_Components::node"* @_ZSt27__uninitialized_default_n_aIPN29Strongly_Connected_Components4nodeEmS1_ET_S3_T0_RSaIT1_E(%"struct.Strongly_Connected_Components::node"* %555, i64 %556, %"class.std::allocator.12"* dereferenceable(1) %558)
  %560 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %561 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %560, i32 0, i32 0
  %562 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %561, i32 0, i32 1
  store %"struct.Strongly_Connected_Components::node"* %559, %"struct.Strongly_Connected_Components::node"** %562, align 8
  br label %130

; <label>:563:                                    ; preds = %227, %200
  %564 = load i8*, i8** %24, align 8
  %565 = call i8* @__cxa_begin_catch(i8* %564) #3
  %566 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %22, align 8
  %567 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %23, align 8
  %568 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %569 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %568) #3
  br label %227

; <label>:570:                                    ; preds = %263, %249
  %571 = bitcast %"class.std::vector.10"* %26 to %"struct.std::_Vector_base.11"*
  %572 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %22, align 8
  %573 = load i64, i64* %20, align 8
  br label %263

; <label>:574:                                    ; preds = %321, %295
  %575 = landingpad { i8*, i32 }
          cleanup
  %576 = extractvalue { i8*, i32 } %575, 0
  store i8* %576, i8** %24, align 8
  %577 = extractvalue { i8*, i32 } %575, 1
  store i32 %577, i32* %25, align 4
  br label %321

; <label>:578:                                    ; preds = %426, %399
  %579 = load i8*, i8** %24, align 8
  %580 = load i32, i32* %25, align 4
  %581 = insertvalue { i8*, i32 } undef, i8* %579, 0
  %582 = insertvalue { i8*, i32 } %581, i32 %580, 1
  br label %426

; <label>:583:                                    ; preds = %488, %461
  br label %488
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.10"*, %"struct.Strongly_Connected_Components::node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.10"*, align 8
  %4 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %3, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %5 = load %"class.std::vector.10"*, %"class.std::vector.10"** %3, align 8
  %6 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %7 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %9, align 8
  %11 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %12 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %11) #3
  invoke void @_ZSt8_DestroyIPN29Strongly_Connected_Components4nodeES1_EvT_S3_RSaIT0_E(%"struct.Strongly_Connected_Components::node"* %6, %"struct.Strongly_Connected_Components::node"* %10, %"class.std::allocator.12"* dereferenceable(1) %12)
          to label %13 unwind label %60

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.250
  %15 = load i32, i32* @y.251
  %16 = sub i32 %14, 600974572
  %17 = sub i32 %16, 1
  %18 = add i32 %17, 600974572
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %63

; <label>:40:                                     ; preds = %13, %63
  %41 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %42 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %43, i32 0, i32 1
  store %"struct.Strongly_Connected_Components::node"* %41, %"struct.Strongly_Connected_Components::node"** %44, align 8
  %45 = load i32, i32* @x.250
  %46 = load i32, i32* @y.251
  %47 = add i32 %45, 1389978374
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1389978374
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %63

; <label>:59:                                     ; preds = %40
  ret void

; <label>:60:                                     ; preds = %2
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #12
  unreachable

; <label>:63:                                     ; preds = %40, %13
  %64 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %65 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %66, i32 0, i32 1
  store %"struct.Strongly_Connected_Components::node"* %64, %"struct.Strongly_Connected_Components::node"** %67, align 8
  br label %40
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZSt27__uninitialized_default_n_aIPN29Strongly_Connected_Components4nodeEmS1_ET_S3_T0_RSaIT1_E(%"struct.Strongly_Connected_Components::node"*, i64, %"class.std::allocator.12"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.12"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %6, align 8
  %7 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"struct.Strongly_Connected_Components::node"* @_ZSt25__uninitialized_default_nIPN29Strongly_Connected_Components4nodeEmET_S3_T0_(%"struct.Strongly_Connected_Components::node"* %7, i64 %8)
  ret %"struct.Strongly_Connected_Components::node"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.254
  %6 = load i32, i32* @y.255
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -368589227, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -368589227, label %18
    i32 -1839723920, label %38
    i32 -1395554252, label %70
    i32 -1096054167, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1839723920, i32 -1096054167
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %39, align 8
  %40 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %41 to %"class.std::allocator.12"*
  store %"class.std::allocator.12"* %42, %"class.std::allocator.12"** %2
  %43 = load i32, i32* @x.254
  %44 = load i32, i32* @y.255
  %45 = add i32 %43, 1282363165
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1282363165
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1395554252, i32 -1096054167
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"class.std::allocator.12"*, %"class.std::allocator.12"** %2
  ret %"class.std::allocator.12"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %73, align 8
  %74 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %75 to %"class.std::allocator.12"*
  store i32 -1839723920, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.10"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.10"*
  %8 = alloca %"class.std::vector.10"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.10"*, %"class.std::vector.10"** %8, align 8
  store %"class.std::vector.10"* %13, %"class.std::vector.10"** %7
  %14 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %7
  %15 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE8max_sizeEv(%"class.std::vector.10"* %14) #3
  %16 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %7
  %17 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"* %16) #3
  %18 = sub i64 %15, -6033393815762304306
  %19 = sub i64 %18, %17
  %20 = add i64 %19, -6033393815762304306
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 -268528662, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %136
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -268528662, label %28
    i32 803567582, label %33
    i32 -1906139817, label %35
    i32 388823785, label %51
    i32 1519884463, label %93
    i32 2082049277, label %96
    i32 -239933752, label %102
    i32 -730931236, label %105
    i32 1507645093, label %107
    i32 1794117033, label %109
  ]

; <label>:27:                                     ; preds = %25
  br label %136

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 803567582, i32 -1906139817
  store i32 %32, i32* %23
  br label %136

; <label>:33:                                     ; preds = %25
  %34 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %34) #13
  unreachable

; <label>:35:                                     ; preds = %25
  %36 = load i32, i32* @x.256
  %37 = load i32, i32* @y.257
  %38 = sub i32 %36, 1800556854
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1800556854
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 388823785, i32 1794117033
  store i32 %50, i32* %23
  br label %136

; <label>:51:                                     ; preds = %25
  %52 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %7
  %53 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"* %52) #3
  %54 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %7
  %55 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"* %54) #3
  store i64 %55, i64* %12, align 8
  %56 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %53, 5601017576175695195
  %59 = add i64 %58, %57
  %60 = add i64 %59, 5601017576175695195
  %61 = add i64 %53, %57
  store i64 %60, i64* %11, align 8
  %62 = load i64, i64* %11, align 8
  %63 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %7
  %64 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"* %63) #3
  %65 = icmp ult i64 %62, %64
  store i1 %65, i1* %4
  %66 = load i32, i32* @x.256
  %67 = load i32, i32* @y.257
  %68 = add i32 %66, -1255310351
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, -1255310351
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 1519884463, i32 1794117033
  store i32 %92, i32* %23
  br label %136

; <label>:93:                                     ; preds = %25
  %94 = load volatile i1, i1* %4
  %95 = select i1 %94, i32 -239933752, i32 2082049277
  store i32 %95, i32* %23
  br label %136

; <label>:96:                                     ; preds = %25
  %97 = load i64, i64* %11, align 8
  %98 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %7
  %99 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE8max_sizeEv(%"class.std::vector.10"* %98) #3
  %100 = icmp ugt i64 %97, %99
  %101 = select i1 %100, i32 -239933752, i32 -730931236
  store i32 %101, i32* %23
  br label %136

; <label>:102:                                    ; preds = %25
  %103 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %7
  %104 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE8max_sizeEv(%"class.std::vector.10"* %103) #3
  store i32 1507645093, i32* %23
  store i64 %104, i64* %24
  br label %136

; <label>:105:                                    ; preds = %25
  %106 = load i64, i64* %11, align 8
  store i32 1507645093, i32* %23
  store i64 %106, i64* %24
  br label %136

; <label>:107:                                    ; preds = %25
  %108 = load i64, i64* %24
  ret i64 %108

; <label>:109:                                    ; preds = %25
  %110 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %7
  %111 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"* %110) #3
  %112 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %7
  %113 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"* %112) #3
  store i64 %113, i64* %12, align 8
  %114 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %115 = load i64, i64* %114, align 8
  %116 = shl i64 %111, %115
  %117 = sub i64 0, 5993584452894888888
  %118 = sub i64 %117, %111
  %119 = add i64 %118, 5993584452894888888
  %120 = sub i64 0, %111
  %121 = sub i64 0, %119
  %122 = sub i64 0, %115
  %123 = add i64 %121, %122
  %124 = sub i64 0, %123
  %125 = add i64 %119, %115
  %126 = shl i64 %111, %115
  %127 = shl i64 %111, %115
  %128 = add i64 %111, -598972280340177412
  %129 = add i64 %128, %115
  %130 = sub i64 %129, -598972280340177412
  %131 = add i64 %111, %115
  store i64 %130, i64* %11, align 8
  %132 = load i64, i64* %11, align 8
  %133 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %7
  %134 = call i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE4sizeEv(%"class.std::vector.10"* %133) #3
  %135 = icmp ult i64 %132, %134
  store i32 388823785, i32* %23
  br label %136

; <label>:136:                                    ; preds = %109, %105, %102, %96, %93, %51, %35, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.11"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.11"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.258
  %9 = load i32, i32* @y.259
  %10 = sub i32 %8, 60039230
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 60039230
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1495964467, i32* %18
  %19 = alloca %"struct.Strongly_Connected_Components::node"*
  br label %20

; <label>:20:                                     ; preds = %2, %85
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 1495964467, label %23
    i32 -754585557, label %31
    i32 -1372036496, label %66
    i32 -208463819, label %69
    i32 -1321089348, label %76
    i32 1674840127, label %77
    i32 -2043681416, label %79
  ]

; <label>:22:                                     ; preds = %20
  br label %85

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -754585557, i32 -2043681416
  store i32 %30, i32* %18
  br label %85

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.11"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %5
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %32, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %32, align 8
  store %"struct.std::_Vector_base.11"* %35, %"struct.std::_Vector_base.11"** %4
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 0
  store i1 %38, i1* %3
  %39 = load i32, i32* @x.258
  %40 = load i32, i32* @y.259
  %41 = add i32 %39, -57640038
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -57640038
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1372036496, i32 -2043681416
  store i32 %65, i32* %18
  br label %85

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %3
  %68 = select i1 %67, i32 -208463819, i32 -1321089348
  store i32 %68, i32* %18
  br label %85

; <label>:69:                                     ; preds = %20
  %70 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %4
  %71 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %71 to %"class.std::allocator.12"*
  %73 = load volatile i64*, i64** %5
  %74 = load i64, i64* %73, align 8
  %75 = call %"struct.Strongly_Connected_Components::node"* @_ZNSt16allocator_traitsISaIN29Strongly_Connected_Components4nodeEEE8allocateERS2_m(%"class.std::allocator.12"* dereferenceable(1) %72, i64 %74)
  store i32 1674840127, i32* %18
  store %"struct.Strongly_Connected_Components::node"* %75, %"struct.Strongly_Connected_Components::node"** %19
  br label %85

; <label>:76:                                     ; preds = %20
  store i32 1674840127, i32* %18
  store %"struct.Strongly_Connected_Components::node"* null, %"struct.Strongly_Connected_Components::node"** %19
  br label %85

; <label>:77:                                     ; preds = %20
  %78 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %19
  ret %"struct.Strongly_Connected_Components::node"* %78

; <label>:79:                                     ; preds = %20
  %80 = alloca %"struct.std::_Vector_base.11"*, align 8
  %81 = alloca i64, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %80, align 8
  store i64 %1, i64* %81, align 8
  %82 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %80, align 8
  %83 = load i64, i64* %81, align 8
  %84 = icmp ne i64 %83, 0
  store i32 -754585557, i32* %18
  br label %85

; <label>:85:                                     ; preds = %79, %76, %69, %66, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZSt34__uninitialized_move_if_noexcept_aIPN29Strongly_Connected_Components4nodeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*, %"class.std::allocator.12"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %6 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %7 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %8 = alloca %"class.std::allocator.12"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %5, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %6, align 8
  store %"struct.Strongly_Connected_Components::node"* %2, %"struct.Strongly_Connected_Components::node"** %7, align 8
  store %"class.std::allocator.12"* %3, %"class.std::allocator.12"** %8, align 8
  %11 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %5, align 8
  %12 = call %"struct.Strongly_Connected_Components::node"* @_ZSt32__make_move_if_noexcept_iteratorIPN29Strongly_Connected_Components4nodeESt13move_iteratorIS2_EET0_T_(%"struct.Strongly_Connected_Components::node"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* %12, %"struct.Strongly_Connected_Components::node"** %13, align 8
  %14 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %6, align 8
  %15 = call %"struct.Strongly_Connected_Components::node"* @_ZSt32__make_move_if_noexcept_iteratorIPN29Strongly_Connected_Components4nodeESt13move_iteratorIS2_EET0_T_(%"struct.Strongly_Connected_Components::node"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* %15, %"struct.Strongly_Connected_Components::node"** %16, align 8
  %17 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %7, align 8
  %18 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %21, align 8
  %23 = call %"struct.Strongly_Connected_Components::node"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN29Strongly_Connected_Components4nodeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Strongly_Connected_Components::node"* %20, %"struct.Strongly_Connected_Components::node"* %22, %"struct.Strongly_Connected_Components::node"* %17, %"class.std::allocator.12"* dereferenceable(1) %18)
  ret %"struct.Strongly_Connected_Components::node"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN29Strongly_Connected_Components4nodeES1_EvT_S3_RSaIT0_E(%"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*, %"class.std::allocator.12"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %5 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %6 = alloca %"class.std::allocator.12"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %4, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %5, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %6, align 8
  %7 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %8 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %5, align 8
  call void @_ZSt8_DestroyIPN29Strongly_Connected_Components4nodeEEvT_S3_(%"struct.Strongly_Connected_Components::node"* %7, %"struct.Strongly_Connected_Components::node"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.11"*, %"struct.Strongly_Connected_Components::node"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.Strongly_Connected_Components::node"*
  %5 = alloca %"struct.std::_Vector_base.11"*
  %6 = alloca %"struct.std::_Vector_base.11"*, align 8
  %7 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %6, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %6, align 8
  store %"struct.std::_Vector_base.11"* %9, %"struct.std::_Vector_base.11"** %5
  %10 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %7, align 8
  store %"struct.Strongly_Connected_Components::node"* %10, %"struct.Strongly_Connected_Components::node"** %4
  %11 = alloca i32
  store i32 -231463577, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -231463577, label %15
    i32 2325157, label %19
    i32 -1003958454, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4
  %17 = icmp ne %"struct.Strongly_Connected_Components::node"* %16, null
  %18 = select i1 %17, i32 2325157, i32 -1003958454
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %21 to %"class.std::allocator.12"*
  %23 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN29Strongly_Connected_Components4nodeEEE10deallocateERS2_PS1_m(%"class.std::allocator.12"* dereferenceable(1) %22, %"struct.Strongly_Connected_Components::node"* %23, i64 %24)
  store i32 -1003958454, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZSt25__uninitialized_default_nIPN29Strongly_Connected_Components4nodeEmET_S3_T0_(%"struct.Strongly_Connected_Components::node"*, i64) #0 comdat {
  %3 = alloca %"struct.Strongly_Connected_Components::node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.266
  %7 = load i32, i32* @y.267
  %8 = add i32 %6, -1974040888
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1974040888
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1424234490, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1424234490, label %20
    i32 1113702498, label %40
    i32 -742198013, label %73
    i32 -1642973160, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1113702498, i32 -1642973160
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i8, align 1
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %41, align 8
  store i64 %1, i64* %42, align 8
  store i8 1, i8* %43, align 1
  %44 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = call %"struct.Strongly_Connected_Components::node"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN29Strongly_Connected_Components4nodeEmEET_S5_T0_(%"struct.Strongly_Connected_Components::node"* %44, i64 %45)
  store %"struct.Strongly_Connected_Components::node"* %46, %"struct.Strongly_Connected_Components::node"** %3
  %47 = load i32, i32* @x.266
  %48 = load i32, i32* @y.267
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -742198013, i32 -1642973160
  store i32 %72, i32* %16
  br label %82

; <label>:73:                                     ; preds = %17
  %74 = load volatile %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3
  ret %"struct.Strongly_Connected_Components::node"* %74

; <label>:75:                                     ; preds = %17
  %76 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8, align 1
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %76, align 8
  store i64 %1, i64* %77, align 8
  store i8 1, i8* %78, align 1
  %79 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call %"struct.Strongly_Connected_Components::node"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN29Strongly_Connected_Components4nodeEmEET_S5_T0_(%"struct.Strongly_Connected_Components::node"* %79, i64 %80)
  store i32 1113702498, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN29Strongly_Connected_Components4nodeEmEET_S5_T0_(%"struct.Strongly_Connected_Components::node"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3, align 8
  store %"struct.Strongly_Connected_Components::node"* %8, %"struct.Strongly_Connected_Components::node"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %16, %2
  %10 = load i64, i64* %4, align 8
  %11 = icmp ugt i64 %10, 0
  br i1 %11, label %12, label %34

; <label>:12:                                     ; preds = %9
  %13 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %5, align 8
  %14 = call %"struct.Strongly_Connected_Components::node"* @_ZSt11__addressofIN29Strongly_Connected_Components4nodeEEPT_RS2_(%"struct.Strongly_Connected_Components::node"* dereferenceable(40) %13) #3
  invoke void @_ZSt10_ConstructIN29Strongly_Connected_Components4nodeEJEEvPT_DpOT0_(%"struct.Strongly_Connected_Components::node"* %14)
          to label %15 unwind label %24

; <label>:15:                                     ; preds = %12
  br label %16

; <label>:16:                                     ; preds = %15
  %17 = load i64, i64* %4, align 8
  %18 = add i64 %17, -5470215544872770659
  %19 = add i64 %18, -1
  %20 = sub i64 %19, -5470215544872770659
  %21 = add i64 %17, -1
  store i64 %20, i64* %4, align 8
  %22 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %5, align 8
  %23 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %22, i32 1
  store %"struct.Strongly_Connected_Components::node"* %23, %"struct.Strongly_Connected_Components::node"** %5, align 8
  br label %9

; <label>:24:                                     ; preds = %12
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %6, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %7, align 4
  br label %28

; <label>:28:                                     ; preds = %24
  %29 = load i8*, i8** %6, align 8
  %30 = call i8* @__cxa_begin_catch(i8* %29) #3
  %31 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3, align 8
  %32 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %5, align 8
  invoke void @_ZSt8_DestroyIPN29Strongly_Connected_Components4nodeEEvT_S3_(%"struct.Strongly_Connected_Components::node"* %31, %"struct.Strongly_Connected_Components::node"* %32)
          to label %33 unwind label %77

; <label>:33:                                     ; preds = %28
  invoke void @__cxa_rethrow() #13
          to label %145 unwind label %77

; <label>:34:                                     ; preds = %9
  %35 = load i32, i32* @x.268
  %36 = load i32, i32* @y.269
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %188

; <label>:60:                                     ; preds = %34, %188
  %61 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %5, align 8
  %62 = load i32, i32* @x.268
  %63 = load i32, i32* @y.269
  %64 = add i32 %62, 270153714
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, 270153714
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %188

; <label>:76:                                     ; preds = %60
  ret %"struct.Strongly_Connected_Components::node"* %61

; <label>:77:                                     ; preds = %33, %28
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %6, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %7, align 4
  invoke void @__cxa_end_catch()
          to label %81 unwind label %142

; <label>:81:                                     ; preds = %77
  br label %83
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:83:                                     ; preds = %81
  %84 = load i32, i32* @x.268
  %85 = load i32, i32* @y.269
  %86 = add i32 %84, -1141854987
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, -1141854987
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %190

; <label>:110:                                    ; preds = %83, %190
  %111 = load i8*, i8** %6, align 8
  %112 = load i32, i32* %7, align 4
  %113 = insertvalue { i8*, i32 } undef, i8* %111, 0
  %114 = insertvalue { i8*, i32 } %113, i32 %112, 1
  %115 = load i32, i32* @x.268
  %116 = load i32, i32* @y.269
  %117 = add i32 %115, 1066679607
  %118 = sub i32 %117, 1
  %119 = sub i32 %118, 1066679607
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 false, true
  %128 = and i1 %125, false
  %129 = and i1 %123, %127
  %130 = and i1 %126, false
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 false, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  br i1 %139, label %141, label %190

; <label>:141:                                    ; preds = %110
  resume { i8*, i32 } %114

; <label>:142:                                    ; preds = %77
  %143 = landingpad { i8*, i32 }
          catch i8* null
  %144 = extractvalue { i8*, i32 } %143, 0
  call void @__clang_call_terminate(i8* %144) #12
  unreachable

; <label>:145:                                    ; preds = %33
  %146 = load i32, i32* @x.268
  %147 = load i32, i32* @y.269
  %148 = add i32 %146, -1274803645
  %149 = sub i32 %148, 1
  %150 = sub i32 %149, -1274803645
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 false, true
  %159 = and i1 %156, false
  %160 = and i1 %154, %158
  %161 = and i1 %157, false
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 false, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  br i1 %170, label %172, label %195

; <label>:172:                                    ; preds = %145, %195
  %173 = load i32, i32* @x.268
  %174 = load i32, i32* @y.269
  %175 = sub i32 %173, -752177907
  %176 = sub i32 %175, 1
  %177 = add i32 %176, -752177907
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  br i1 %185, label %187, label %195

; <label>:187:                                    ; preds = %172
  unreachable

; <label>:188:                                    ; preds = %60, %34
  %189 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %5, align 8
  br label %60

; <label>:190:                                    ; preds = %110, %83
  %191 = load i8*, i8** %6, align 8
  %192 = load i32, i32* %7, align 4
  %193 = insertvalue { i8*, i32 } undef, i8* %191, 0
  %194 = insertvalue { i8*, i32 } %193, i32 %192, 1
  br label %110

; <label>:195:                                    ; preds = %172, %145
  br label %172
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN29Strongly_Connected_Components4nodeEJEEvPT_DpOT0_(%"struct.Strongly_Connected_Components::node"*) #4 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.270
  %5 = load i32, i32* @y.271
  %6 = sub i32 %4, 259279017
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 259279017
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 273884679, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 273884679, label %18
    i32 -16315810, label %26
    i32 203198161, label %58
    i32 396694431, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -16315810, i32 396694431
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %27, align 8
  %28 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %27, align 8
  %29 = bitcast %"struct.Strongly_Connected_Components::node"* %28 to i8*
  %30 = bitcast i8* %29 to %"struct.Strongly_Connected_Components::node"*
  %31 = bitcast %"struct.Strongly_Connected_Components::node"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* %31, i8 0, i64 40, i32 8, i1 false)
  call void @_ZN29Strongly_Connected_Components4nodeC2Ev(%"struct.Strongly_Connected_Components::node"* %30) #3
  %32 = load i32, i32* @x.270
  %33 = load i32, i32* @y.271
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 203198161, i32 396694431
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %60, align 8
  %61 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %60, align 8
  %62 = bitcast %"struct.Strongly_Connected_Components::node"* %61 to i8*
  %63 = bitcast i8* %62 to %"struct.Strongly_Connected_Components::node"*
  %64 = bitcast %"struct.Strongly_Connected_Components::node"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* %64, i8 0, i64 40, i32 8, i1 false)
  call void @_ZN29Strongly_Connected_Components4nodeC2Ev(%"struct.Strongly_Connected_Components::node"* %63) #3
  store i32 -16315810, i32* %14
  br label %65

; <label>:65:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZSt11__addressofIN29Strongly_Connected_Components4nodeEEPT_RS2_(%"struct.Strongly_Connected_Components::node"* dereferenceable(40)) #4 comdat {
  %2 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %2, align 8
  %3 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %2, align 8
  %4 = bitcast %"struct.Strongly_Connected_Components::node"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.Strongly_Connected_Components::node"*
  ret %"struct.Strongly_Connected_Components::node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN29Strongly_Connected_Components4nodeEEvT_S3_(%"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*) #0 comdat {
  %3 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %4 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %3, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %5 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3, align 8
  %6 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN29Strongly_Connected_Components4nodeEEEvT_S5_(%"struct.Strongly_Connected_Components::node"* %5, %"struct.Strongly_Connected_Components::node"* %6)
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN29Strongly_Connected_Components4nodeC2Ev(%"struct.Strongly_Connected_Components::node"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.276
  %5 = load i32, i32* @y.277
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1313042698, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1313042698, label %17
    i32 676999708, label %25
    i32 -202153726, label %43
    i32 -1277018133, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 676999708, i32 -1277018133
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %26, align 8
  %27 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %26, align 8
  %28 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %27, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.5"* %28) #3
  %29 = load i32, i32* @x.276
  %30 = load i32, i32* @y.277
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -202153726, i32 -1277018133
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %45, align 8
  %46 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %45, align 8
  %47 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %46, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.5"* %47) #3
  store i32 676999708, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN29Strongly_Connected_Components4nodeEEEvT_S5_(%"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*) #0 comdat align 2 {
  %3 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %4 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %3, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %5 = alloca i32
  store i32 -1213243059, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %21
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -1213243059, label %9
    i32 -1507372375, label %14
    i32 -461313796, label %17
    i32 1192245267, label %20
  ]

; <label>:8:                                      ; preds = %6
  br label %21

; <label>:9:                                      ; preds = %6
  %10 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3, align 8
  %11 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %12 = icmp ne %"struct.Strongly_Connected_Components::node"* %10, %11
  %13 = select i1 %12, i32 -1507372375, i32 1192245267
  store i32 %13, i32* %5
  br label %21

; <label>:14:                                     ; preds = %6
  %15 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3, align 8
  %16 = call %"struct.Strongly_Connected_Components::node"* @_ZSt11__addressofIN29Strongly_Connected_Components4nodeEEPT_RS2_(%"struct.Strongly_Connected_Components::node"* dereferenceable(40) %15) #3
  call void @_ZSt8_DestroyIN29Strongly_Connected_Components4nodeEEvPT_(%"struct.Strongly_Connected_Components::node"* %16)
  store i32 -461313796, i32* %5
  br label %21

; <label>:17:                                     ; preds = %6
  %18 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3, align 8
  %19 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %18, i32 1
  store %"struct.Strongly_Connected_Components::node"* %19, %"struct.Strongly_Connected_Components::node"** %3, align 8
  store i32 -1213243059, i32* %5
  br label %21

; <label>:20:                                     ; preds = %6
  ret void

; <label>:21:                                     ; preds = %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyIN29Strongly_Connected_Components4nodeEEvPT_(%"struct.Strongly_Connected_Components::node"*) #4 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.280
  %5 = load i32, i32* @y.281
  %6 = add i32 %4, 1572028470
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1572028470
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1564033545, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1564033545, label %18
    i32 -1814928256, label %26
    i32 471319977, label %55
    i32 1984472094, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1814928256, i32 1984472094
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %27, align 8
  %28 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %27, align 8
  call void @_ZN29Strongly_Connected_Components4nodeD2Ev(%"struct.Strongly_Connected_Components::node"* %28) #3
  %29 = load i32, i32* @x.280
  %30 = load i32, i32* @y.281
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 471319977, i32 1984472094
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %57, align 8
  %58 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %57, align 8
  call void @_ZN29Strongly_Connected_Components4nodeD2Ev(%"struct.Strongly_Connected_Components::node"* %58) #3
  store i32 -1814928256, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN29Strongly_Connected_Components4nodeESaIS1_EE8max_sizeEv(%"class.std::vector.10"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %2, align 8
  %3 = load %"class.std::vector.10"*, %"class.std::vector.10"** %2, align 8
  %4 = bitcast %"class.std::vector.10"* %3 to %"struct.std::_Vector_base.11"*
  %5 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNKSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN29Strongly_Connected_Components4nodeEEE8max_sizeERKS2_(%"class.std::allocator.12"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN29Strongly_Connected_Components4nodeEEE8max_sizeERKS2_(%"class.std::allocator.12"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %2, align 8
  %3 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %2, align 8
  %4 = bitcast %"class.std::allocator.12"* %3 to %"class.__gnu_cxx::new_allocator.13"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.12"* @_ZNKSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %2, align 8
  %3 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %4 to %"class.std::allocator.12"*
  ret %"class.std::allocator.12"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret i64 461168601842738790
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZNSt16allocator_traitsISaIN29Strongly_Connected_Components4nodeEEE8allocateERS2_m(%"class.std::allocator.12"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.12"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %3, align 8
  %6 = bitcast %"class.std::allocator.12"* %5 to %"class.__gnu_cxx::new_allocator.13"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.Strongly_Connected_Components::node"* @_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"* %6, i64 %7, i8* null)
  ret %"struct.Strongly_Connected_Components::node"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.292
  %9 = load i32, i32* @y.293
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1644843301, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1644843301, label %21
    i32 -685285275, label %41
    i32 2073913304, label %78
    i32 -1795374526, label %81
    i32 -882065463, label %82
    i32 -960723417, label %88
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -685285275, i32 -960723417
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  %44 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %42, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  store i8* %2, i8** %44, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %42, align 8
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"* %46) #3
  %50 = icmp ugt i64 %48, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.292
  %52 = load i32, i32* @y.293
  %53 = add i32 %51, -1629616388
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1629616388
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 2073913304, i32 -960723417
  store i32 %77, i32* %17
  br label %96

; <label>:78:                                     ; preds = %18
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 -1795374526, i32 -882065463
  store i32 %80, i32* %17
  br label %96

; <label>:81:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:82:                                     ; preds = %18
  %83 = load volatile i64*, i64** %5
  %84 = load i64, i64* %83, align 8
  %85 = mul i64 %84, 40
  %86 = call i8* @_Znwm(i64 %85)
  %87 = bitcast i8* %86 to %"struct.Strongly_Connected_Components::node"*
  ret %"struct.Strongly_Connected_Components::node"* %87

; <label>:88:                                     ; preds = %18
  %89 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %90 = alloca i64, align 8
  %91 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %89, align 8
  store i64 %1, i64* %90, align 8
  store i8* %2, i8** %91, align 8
  %92 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %89, align 8
  %93 = load i64, i64* %90, align 8
  %94 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"* %92) #3
  %95 = icmp ugt i64 %93, %94
  store i32 -685285275, i32* %17
  br label %96

; <label>:96:                                     ; preds = %88, %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN29Strongly_Connected_Components4nodeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*, %"class.std::allocator.12"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Strongly_Connected_Components::node"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.294
  %9 = load i32, i32* @y.295
  %10 = add i32 %8, -1999651930
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1999651930
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1314376643, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %97
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1314376643, label %22
    i32 1537176974, label %30
    i32 -1514287285, label %76
    i32 -1206984819, label %78
  ]

; <label>:21:                                     ; preds = %19
  br label %97

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1537176974, i32 -1206984819
  store i32 %29, i32* %18
  br label %97

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::move_iterator", align 8
  %32 = alloca %"class.std::move_iterator", align 8
  %33 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %34 = alloca %"class.std::allocator.12"*, align 8
  %35 = alloca %"class.std::move_iterator", align 8
  %36 = alloca %"class.std::move_iterator", align 8
  %37 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %31, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %32, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %38, align 8
  store %"struct.Strongly_Connected_Components::node"* %2, %"struct.Strongly_Connected_Components::node"** %33, align 8
  store %"class.std::allocator.12"* %3, %"class.std::allocator.12"** %34, align 8
  %39 = bitcast %"class.std::move_iterator"* %35 to i8*
  %40 = bitcast %"class.std::move_iterator"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.std::move_iterator"* %36 to i8*
  %42 = bitcast %"class.std::move_iterator"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %33, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  %45 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %44, align 8
  %46 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %36, i32 0, i32 0
  %47 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %46, align 8
  %48 = call %"struct.Strongly_Connected_Components::node"* @_ZSt18uninitialized_copyISt13move_iteratorIPN29Strongly_Connected_Components4nodeEES3_ET0_T_S6_S5_(%"struct.Strongly_Connected_Components::node"* %45, %"struct.Strongly_Connected_Components::node"* %47, %"struct.Strongly_Connected_Components::node"* %43)
  store %"struct.Strongly_Connected_Components::node"* %48, %"struct.Strongly_Connected_Components::node"** %5
  %49 = load i32, i32* @x.294
  %50 = load i32, i32* @y.295
  %51 = add i32 %49, 548097121
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 548097121
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1514287285, i32 -1206984819
  store i32 %75, i32* %18
  br label %97

; <label>:76:                                     ; preds = %19
  %77 = load volatile %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %5
  ret %"struct.Strongly_Connected_Components::node"* %77

; <label>:78:                                     ; preds = %19
  %79 = alloca %"class.std::move_iterator", align 8
  %80 = alloca %"class.std::move_iterator", align 8
  %81 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %82 = alloca %"class.std::allocator.12"*, align 8
  %83 = alloca %"class.std::move_iterator", align 8
  %84 = alloca %"class.std::move_iterator", align 8
  %85 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %79, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %85, align 8
  %86 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %80, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %86, align 8
  store %"struct.Strongly_Connected_Components::node"* %2, %"struct.Strongly_Connected_Components::node"** %81, align 8
  store %"class.std::allocator.12"* %3, %"class.std::allocator.12"** %82, align 8
  %87 = bitcast %"class.std::move_iterator"* %83 to i8*
  %88 = bitcast %"class.std::move_iterator"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = bitcast %"class.std::move_iterator"* %84 to i8*
  %90 = bitcast %"class.std::move_iterator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 8, i32 8, i1 false)
  %91 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %81, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  %93 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %92, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  %95 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %94, align 8
  %96 = call %"struct.Strongly_Connected_Components::node"* @_ZSt18uninitialized_copyISt13move_iteratorIPN29Strongly_Connected_Components4nodeEES3_ET0_T_S6_S5_(%"struct.Strongly_Connected_Components::node"* %93, %"struct.Strongly_Connected_Components::node"* %95, %"struct.Strongly_Connected_Components::node"* %91)
  store i32 1537176974, i32* %18
  br label %97

; <label>:97:                                     ; preds = %78, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZSt32__make_move_if_noexcept_iteratorIPN29Strongly_Connected_Components4nodeESt13move_iteratorIS2_EET0_T_(%"struct.Strongly_Connected_Components::node"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %3, align 8
  %4 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3, align 8
  call void @_ZNSt13move_iteratorIPN29Strongly_Connected_Components4nodeEEC2ES2_(%"class.std::move_iterator"* %2, %"struct.Strongly_Connected_Components::node"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %5, align 8
  ret %"struct.Strongly_Connected_Components::node"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZSt18uninitialized_copyISt13move_iteratorIPN29Strongly_Connected_Components4nodeEES3_ET0_T_S6_S5_(%"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %11, align 8
  store %"struct.Strongly_Connected_Components::node"* %2, %"struct.Strongly_Connected_Components::node"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %19, align 8
  %21 = call %"struct.Strongly_Connected_Components::node"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN29Strongly_Connected_Components4nodeEES5_EET0_T_S8_S7_(%"struct.Strongly_Connected_Components::node"* %18, %"struct.Strongly_Connected_Components::node"* %20, %"struct.Strongly_Connected_Components::node"* %16)
  ret %"struct.Strongly_Connected_Components::node"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN29Strongly_Connected_Components4nodeEES5_EET0_T_S8_S7_(%"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %7 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %11, align 8
  store %"struct.Strongly_Connected_Components::node"* %2, %"struct.Strongly_Connected_Components::node"** %6, align 8
  %12 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %6, align 8
  store %"struct.Strongly_Connected_Components::node"* %12, %"struct.Strongly_Connected_Components::node"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %108, %3
  %14 = invoke zeroext i1 @_ZStneIPN29Strongly_Connected_Components4nodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %111

; <label>:15:                                     ; preds = %13
  %16 = load i32, i32* @x.300
  %17 = load i32, i32* @y.301
  %18 = sub i32 %16, 1388818239
  %19 = sub i32 %18, 1
  %20 = add i32 %19, 1388818239
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %250

; <label>:42:                                     ; preds = %15, %250
  %43 = load i32, i32* @x.300
  %44 = load i32, i32* @y.301
  %45 = sub i32 %43, -1541166764
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1541166764
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %250

; <label>:69:                                     ; preds = %42
  br i1 %14, label %70, label %151

; <label>:70:                                     ; preds = %69
  %71 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %7, align 8
  %72 = call %"struct.Strongly_Connected_Components::node"* @_ZSt11__addressofIN29Strongly_Connected_Components4nodeEEPT_RS2_(%"struct.Strongly_Connected_Components::node"* dereferenceable(40) %71) #3
  %73 = invoke dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNKSt13move_iteratorIPN29Strongly_Connected_Components4nodeEEdeEv(%"class.std::move_iterator"* %4)
          to label %74 unwind label %111

; <label>:74:                                     ; preds = %70
  invoke void @_ZSt10_ConstructIN29Strongly_Connected_Components4nodeEJS1_EEvPT_DpOT0_(%"struct.Strongly_Connected_Components::node"* %72, %"struct.Strongly_Connected_Components::node"* dereferenceable(40) %73)
          to label %75 unwind label %111

; <label>:75:                                     ; preds = %74
  %76 = load i32, i32* @x.300
  %77 = load i32, i32* @y.301
  %78 = add i32 %76, -825414099
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, -825414099
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %251

; <label>:90:                                     ; preds = %75, %251
  %91 = load i32, i32* @x.300
  %92 = load i32, i32* @y.301
  %93 = sub i32 %91, -491617041
  %94 = sub i32 %93, 1
  %95 = add i32 %94, -491617041
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %251

; <label>:105:                                    ; preds = %90
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPN29Strongly_Connected_Components4nodeEEppEv(%"class.std::move_iterator"* %4)
          to label %108 unwind label %111

; <label>:108:                                    ; preds = %106
  %109 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %7, align 8
  %110 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %109, i32 1
  store %"struct.Strongly_Connected_Components::node"* %110, %"struct.Strongly_Connected_Components::node"** %7, align 8
  br label %13

; <label>:111:                                    ; preds = %106, %74, %70, %13
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %8, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %9, align 4
  br label %115

; <label>:115:                                    ; preds = %111
  %116 = load i8*, i8** %8, align 8
  %117 = call i8* @__cxa_begin_catch(i8* %116) #3
  %118 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %6, align 8
  %119 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %7, align 8
  invoke void @_ZSt8_DestroyIPN29Strongly_Connected_Components4nodeEEvT_S3_(%"struct.Strongly_Connected_Components::node"* %118, %"struct.Strongly_Connected_Components::node"* %119)
          to label %120 unwind label %193

; <label>:120:                                    ; preds = %115
  %121 = load i32, i32* @x.300
  %122 = load i32, i32* @y.301
  %123 = sub i32 %121, -1241041144
  %124 = sub i32 %123, 1
  %125 = add i32 %124, -1241041144
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  br i1 %133, label %135, label %252

; <label>:135:                                    ; preds = %120, %252
  %136 = load i32, i32* @x.300
  %137 = load i32, i32* @y.301
  %138 = sub i32 %136, 479182845
  %139 = sub i32 %138, 1
  %140 = add i32 %139, 479182845
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  br i1 %148, label %150, label %252

; <label>:150:                                    ; preds = %135
  invoke void @__cxa_rethrow() #13
          to label %207 unwind label %193

; <label>:151:                                    ; preds = %69
  %152 = load i32, i32* @x.300
  %153 = load i32, i32* @y.301
  %154 = sub i32 0, 1
  %155 = add i32 %152, %154
  %156 = sub i32 %152, 1
  %157 = mul i32 %152, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %153, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 false, true
  %164 = and i1 %161, false
  %165 = and i1 %159, %163
  %166 = and i1 %162, false
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 false, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %253

; <label>:177:                                    ; preds = %151, %253
  %178 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %7, align 8
  %179 = load i32, i32* @x.300
  %180 = load i32, i32* @y.301
  %181 = sub i32 0, 1
  %182 = add i32 %179, %181
  %183 = sub i32 %179, 1
  %184 = mul i32 %179, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %180, 10
  %188 = and i1 %186, %187
  %189 = xor i1 %186, %187
  %190 = or i1 %188, %189
  %191 = or i1 %186, %187
  br i1 %190, label %192, label %253

; <label>:192:                                    ; preds = %177
  ret %"struct.Strongly_Connected_Components::node"* %178

; <label>:193:                                    ; preds = %150, %115
  %194 = landingpad { i8*, i32 }
          cleanup
  %195 = extractvalue { i8*, i32 } %194, 0
  store i8* %195, i8** %8, align 8
  %196 = extractvalue { i8*, i32 } %194, 1
  store i32 %196, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %197 unwind label %204

; <label>:197:                                    ; preds = %193
  br label %199
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:199:                                    ; preds = %197
  %200 = load i8*, i8** %8, align 8
  %201 = load i32, i32* %9, align 4
  %202 = insertvalue { i8*, i32 } undef, i8* %200, 0
  %203 = insertvalue { i8*, i32 } %202, i32 %201, 1
  resume { i8*, i32 } %203

; <label>:204:                                    ; preds = %193
  %205 = landingpad { i8*, i32 }
          catch i8* null
  %206 = extractvalue { i8*, i32 } %205, 0
  call void @__clang_call_terminate(i8* %206) #12
  unreachable

; <label>:207:                                    ; preds = %150
  %208 = load i32, i32* @x.300
  %209 = load i32, i32* @y.301
  %210 = sub i32 %208, -1178513863
  %211 = sub i32 %210, 1
  %212 = add i32 %211, -1178513863
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = and i1 %216, %217
  %219 = xor i1 %216, %217
  %220 = or i1 %218, %219
  %221 = or i1 %216, %217
  br i1 %220, label %222, label %255

; <label>:222:                                    ; preds = %207, %255
  %223 = load i32, i32* @x.300
  %224 = load i32, i32* @y.301
  %225 = sub i32 %223, -1453344116
  %226 = sub i32 %225, 1
  %227 = add i32 %226, -1453344116
  %228 = sub i32 %223, 1
  %229 = mul i32 %223, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %224, 10
  %233 = xor i1 %231, true
  %234 = xor i1 %232, true
  %235 = xor i1 false, true
  %236 = and i1 %233, false
  %237 = and i1 %231, %235
  %238 = and i1 %234, false
  %239 = and i1 %232, %235
  %240 = or i1 %236, %237
  %241 = or i1 %238, %239
  %242 = xor i1 %240, %241
  %243 = or i1 %233, %234
  %244 = xor i1 %243, true
  %245 = or i1 false, %235
  %246 = and i1 %244, %245
  %247 = or i1 %242, %246
  %248 = or i1 %231, %232
  br i1 %247, label %249, label %255

; <label>:249:                                    ; preds = %222
  unreachable

; <label>:250:                                    ; preds = %42, %15
  br label %42

; <label>:251:                                    ; preds = %90, %75
  br label %90

; <label>:252:                                    ; preds = %135, %120
  br label %135

; <label>:253:                                    ; preds = %177, %151
  %254 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %7, align 8
  br label %177

; <label>:255:                                    ; preds = %222, %207
  br label %222
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN29Strongly_Connected_Components4nodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPN29Strongly_Connected_Components4nodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN29Strongly_Connected_Components4nodeEJS1_EEvPT_DpOT0_(%"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"* dereferenceable(40)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.304
  %6 = load i32, i32* @y.305
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 609962205, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 609962205, label %18
    i32 -939099031, label %38
    i32 553349990, label %61
    i32 -2059723438, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -939099031, i32 -2059723438
  store i32 %37, i32* %14
  br label %70

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %40 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %39, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %40, align 8
  %41 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %39, align 8
  %42 = bitcast %"struct.Strongly_Connected_Components::node"* %41 to i8*
  %43 = bitcast i8* %42 to %"struct.Strongly_Connected_Components::node"*
  %44 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %40, align 8
  %45 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZSt7forwardIN29Strongly_Connected_Components4nodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Strongly_Connected_Components::node"* dereferenceable(40) %44) #3
  call void @_ZN29Strongly_Connected_Components4nodeC2EOS0_(%"struct.Strongly_Connected_Components::node"* %43, %"struct.Strongly_Connected_Components::node"* dereferenceable(40) %45) #3
  %46 = load i32, i32* @x.304
  %47 = load i32, i32* @y.305
  %48 = sub i32 %46, 2120168532
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 2120168532
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 553349990, i32 -2059723438
  store i32 %60, i32* %14
  br label %70

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %64 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %63, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %64, align 8
  %65 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %63, align 8
  %66 = bitcast %"struct.Strongly_Connected_Components::node"* %65 to i8*
  %67 = bitcast i8* %66 to %"struct.Strongly_Connected_Components::node"*
  %68 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %64, align 8
  %69 = call dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZSt7forwardIN29Strongly_Connected_Components4nodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Strongly_Connected_Components::node"* dereferenceable(40) %68) #3
  call void @_ZN29Strongly_Connected_Components4nodeC2EOS0_(%"struct.Strongly_Connected_Components::node"* %67, %"struct.Strongly_Connected_Components::node"* dereferenceable(40) %69) #3
  store i32 -939099031, i32* %14
  br label %70

; <label>:70:                                     ; preds = %62, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZNKSt13move_iteratorIPN29Strongly_Connected_Components4nodeEEdeEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  ret %"struct.Strongly_Connected_Components::node"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPN29Strongly_Connected_Components4nodeEEppEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %6 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %5, i32 1
  store %"struct.Strongly_Connected_Components::node"* %6, %"struct.Strongly_Connected_Components::node"** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN29Strongly_Connected_Components4nodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"struct.Strongly_Connected_Components::node"* @_ZNKSt13move_iteratorIPN29Strongly_Connected_Components4nodeEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"struct.Strongly_Connected_Components::node"* @_ZNKSt13move_iteratorIPN29Strongly_Connected_Components4nodeEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"struct.Strongly_Connected_Components::node"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Strongly_Connected_Components::node"* @_ZNKSt13move_iteratorIPN29Strongly_Connected_Components4nodeEE4baseEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.Strongly_Connected_Components::node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.312
  %6 = load i32, i32* @y.313
  %7 = add i32 %5, 1177737172
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1177737172
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -425183466, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -425183466, label %19
    i32 432135912, label %27
    i32 -2030935454, label %59
    i32 1692319562, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 432135912, i32 1692319562
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  %29 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %29, i32 0, i32 0
  %31 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %30, align 8
  store %"struct.Strongly_Connected_Components::node"* %31, %"struct.Strongly_Connected_Components::node"** %2
  %32 = load i32, i32* @x.312
  %33 = load i32, i32* @y.313
  %34 = add i32 %32, 444248727
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 444248727
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -2030935454, i32 1692319562
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %2
  ret %"struct.Strongly_Connected_Components::node"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %62, align 8
  %63 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %63, i32 0, i32 0
  %65 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %64, align 8
  store i32 432135912, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %"struct.Strongly_Connected_Components::node"* @_ZSt7forwardIN29Strongly_Connected_Components4nodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Strongly_Connected_Components::node"* dereferenceable(40)) #4 comdat {
  %2 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %2, align 8
  %3 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %2, align 8
  ret %"struct.Strongly_Connected_Components::node"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN29Strongly_Connected_Components4nodeC2EOS0_(%"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"* dereferenceable(40)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %4 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"struct.Strongly_Connected_Components::node"* %0, %"struct.Strongly_Connected_Components::node"** %3, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %5 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %3, align 8
  %6 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %5, i32 0, i32 0
  %7 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %8 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %7, i32 0, i32 0
  %9 = bitcast i32* %6 to i8*
  %10 = bitcast i32* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 5, i32 8, i1 false)
  %11 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %5, i32 0, i32 3
  %12 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %13 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %12, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2EOS1_(%"class.std::vector.5"* %11, %"class.std::vector.5"* dereferenceable(24) %13) #3
  %14 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %5, i32 0, i32 4
  %15 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %16 = getelementptr inbounds %"struct.Strongly_Connected_Components::node", %"struct.Strongly_Connected_Components::node"* %15, i32 0, i32 4
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %14, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EOS1_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.5"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.5"* %8 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EOS1_(%"struct.std::_Vector_base.6"* %6, %"struct.std::_Vector_base.6"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.5"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.320
  %6 = load i32, i32* @y.321
  %7 = add i32 %5, 2024453707
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2024453707
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -61570238, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -61570238, label %19
    i32 -932551671, label %27
    i32 -801882998, label %45
    i32 -1295095966, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -932551671, i32 -1295095966
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  %29 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  store %"class.std::vector.5"* %29, %"class.std::vector.5"** %2
  %30 = load i32, i32* @x.320
  %31 = load i32, i32* @y.321
  %32 = sub i32 %30, 1137199007
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1137199007
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -801882998, i32 -1295095966
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %48, align 8
  %49 = load %"class.std::vector.5"*, %"class.std::vector.5"** %48, align 8
  store i32 -932551671, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EOS1_(%"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.6"*, align 8
  %4 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %3, align 8
  store %"struct.std::_Vector_base.6"* %1, %"struct.std::_Vector_base.6"** %4, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, %"class.std::allocator.7"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.326
  %6 = load i32, i32* @y.327
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -34195307, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -34195307, label %18
    i32 -1585529864, label %26
    i32 -946466411, label %51
    i32 -748086564, label %52
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1585529864, i32 -748086564
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %28 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %28, align 8
  %29 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29 to %"class.std::allocator.7"*
  %31 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %28, align 8
  %32 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1) %31) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.7"* %30, %"class.std::allocator.7"* dereferenceable(1) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 0
  store i32* null, i32** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 1
  store i32* null, i32** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 2
  store i32* null, i32** %35, align 8
  %36 = load i32, i32* @x.326
  %37 = load i32, i32* @y.327
  %38 = sub i32 %36, 683420514
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 683420514
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -946466411, i32 -748086564
  store i32 %50, i32* %14
  br label %62

; <label>:51:                                     ; preds = %15
  ret void

; <label>:52:                                     ; preds = %15
  %53 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %54 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %53, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %54, align 8
  %55 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %53, align 8
  %56 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %55 to %"class.std::allocator.7"*
  %57 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %54, align 8
  %58 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1) %57) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.7"* %56, %"class.std::allocator.7"* dereferenceable(1) %58) #3
  %59 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %55, i32 0, i32 0
  store i32* null, i32** %59, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %55, i32 0, i32 1
  store i32* null, i32** %60, align 8
  %61 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %55, i32 0, i32 2
  store i32* null, i32** %61, align 8
  store i32 -1585529864, i32* %14
  br label %62

; <label>:62:                                     ; preds = %52, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %6, i32** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %9, i32** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %12, i32** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8), i32** dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.330
  %6 = load i32, i32* @y.331
  %7 = sub i32 %5, 1431166155
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1431166155
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1133930410, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1133930410, label %19
    i32 -1618275125, label %39
    i32 993763662, label %80
    i32 248228885, label %81
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1618275125, i32 248228885
  store i32 %38, i32* %15
  br label %95

; <label>:39:                                     ; preds = %16
  %40 = alloca i32**, align 8
  %41 = alloca i32**, align 8
  %42 = alloca i32*, align 8
  store i32** %0, i32*** %40, align 8
  store i32** %1, i32*** %41, align 8
  %43 = load i32**, i32*** %40, align 8
  %44 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %43) #3
  %45 = load i32*, i32** %44, align 8
  store i32* %45, i32** %42, align 8
  %46 = load i32**, i32*** %41, align 8
  %47 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %46) #3
  %48 = load i32*, i32** %47, align 8
  %49 = load i32**, i32*** %40, align 8
  store i32* %48, i32** %49, align 8
  %50 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %42) #3
  %51 = load i32*, i32** %50, align 8
  %52 = load i32**, i32*** %41, align 8
  store i32* %51, i32** %52, align 8
  %53 = load i32, i32* @x.330
  %54 = load i32, i32* @y.331
  %55 = add i32 %53, 1357563535
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1357563535
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 993763662, i32 248228885
  store i32 %79, i32* %15
  br label %95

; <label>:80:                                     ; preds = %16
  ret void

; <label>:81:                                     ; preds = %16
  %82 = alloca i32**, align 8
  %83 = alloca i32**, align 8
  %84 = alloca i32*, align 8
  store i32** %0, i32*** %82, align 8
  store i32** %1, i32*** %83, align 8
  %85 = load i32**, i32*** %82, align 8
  %86 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %85) #3
  %87 = load i32*, i32** %86, align 8
  store i32* %87, i32** %84, align 8
  %88 = load i32**, i32*** %83, align 8
  %89 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %88) #3
  %90 = load i32*, i32** %89, align 8
  %91 = load i32**, i32*** %82, align 8
  store i32* %90, i32** %91, align 8
  %92 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %84) #3
  %93 = load i32*, i32** %92, align 8
  %94 = load i32**, i32*** %83, align 8
  store i32* %93, i32** %94, align 8
  store i32 -1618275125, i32* %15
  br label %95

; <label>:95:                                     ; preds = %81, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8)) #4 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN29Strongly_Connected_Components4nodeEEC2ES2_(%"class.std::move_iterator"*, %"struct.Strongly_Connected_Components::node"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %4, align 8
  store %"struct.Strongly_Connected_Components::node"* %7, %"struct.Strongly_Connected_Components::node"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN29Strongly_Connected_Components4nodeEEE10deallocateERS2_PS1_m(%"class.std::allocator.12"* dereferenceable(1), %"struct.Strongly_Connected_Components::node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.12"*, align 8
  %5 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %4, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %4, align 8
  %8 = bitcast %"class.std::allocator.12"* %7 to %"class.__gnu_cxx::new_allocator.13"*
  %9 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.13"* %8, %"struct.Strongly_Connected_Components::node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.13"*, %"struct.Strongly_Connected_Components::node"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.338
  %7 = load i32, i32* @y.339
  %8 = add i32 %6, 1930027306
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1930027306
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1760421090, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1760421090, label %20
    i32 -190674691, label %40
    i32 1209222734, label %74
    i32 131805128, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -190674691, i32 131805128
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %42 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %41, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %41, align 8
  %45 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %42, align 8
  %46 = bitcast %"struct.Strongly_Connected_Components::node"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.338
  %48 = load i32, i32* @y.339
  %49 = add i32 %47, -219250334
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -219250334
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1209222734, i32 131805128
  store i32 %73, i32* %16
  br label %82

; <label>:74:                                     ; preds = %17
  ret void

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %77 = alloca %"struct.Strongly_Connected_Components::node"*, align 8
  %78 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %76, align 8
  store %"struct.Strongly_Connected_Components::node"* %1, %"struct.Strongly_Connected_Components::node"** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %76, align 8
  %80 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %77, align 8
  %81 = bitcast %"struct.Strongly_Connected_Components::node"* %80 to i8*
  call void @_ZdlPv(i8* %81) #3
  store i32 -190674691, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIiSaIiEEaSEOS1_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.340
  %7 = load i32, i32* @y.341
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -438116851, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -438116851, label %19
    i32 -479800303, label %39
    i32 1106301222, label %75
    i32 1469605074, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -479800303, i32 1469605074
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.5"*, align 8
  %41 = alloca %"class.std::vector.5"*, align 8
  %42 = alloca i8, align 1
  %43 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %40, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %41, align 8
  %44 = load %"class.std::vector.5"*, %"class.std::vector.5"** %40, align 8
  store %"class.std::vector.5"* %44, %"class.std::vector.5"** %3
  store i8 1, i8* %42, align 1
  %45 = load %"class.std::vector.5"*, %"class.std::vector.5"** %41, align 8
  %46 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.5"* dereferenceable(24) %45) #3
  %47 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %3
  call void @_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE(%"class.std::vector.5"* %47, %"class.std::vector.5"* dereferenceable(24) %46) #3
  %48 = load i32, i32* @x.340
  %49 = load i32, i32* @y.341
  %50 = add i32 %48, -900836529
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -900836529
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1106301222, i32 1469605074
  store i32 %74, i32* %15
  br label %85

; <label>:75:                                     ; preds = %16
  %76 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %3
  ret %"class.std::vector.5"* %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %"class.std::vector.5"*, align 8
  %79 = alloca %"class.std::vector.5"*, align 8
  %80 = alloca i8, align 1
  %81 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %78, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %79, align 8
  %82 = load %"class.std::vector.5"*, %"class.std::vector.5"** %78, align 8
  store i8 1, i8* %80, align 1
  %83 = load %"class.std::vector.5"*, %"class.std::vector.5"** %79, align 8
  %84 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.5"* dereferenceable(24) %83) #3
  call void @_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE(%"class.std::vector.5"* %82, %"class.std::vector.5"* dereferenceable(24) %84) #3
  store i32 -479800303, i32* %15
  br label %85

; <label>:85:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.342
  %4 = load i32, i32* @y.343
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %91

; <label>:16:                                     ; preds = %2, %91
  %17 = alloca %"struct.std::integral_constant", align 1
  %18 = alloca %"class.std::vector.5"*, align 8
  %19 = alloca %"class.std::vector.5"*, align 8
  %20 = alloca %"class.std::vector.5", align 8
  %21 = alloca %"class.std::allocator.7", align 1
  %22 = alloca i8*
  %23 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %18, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %19, align 8
  %24 = load %"class.std::vector.5"*, %"class.std::vector.5"** %18, align 8
  %25 = bitcast %"class.std::vector.5"* %24 to %"struct.std::_Vector_base.6"*
  call void @_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv(%"class.std::allocator.7"* sret %21, %"struct.std::_Vector_base.6"* %25) #3
  call void @_ZNSt6vectorIiSaIiEEC2ERKS0_(%"class.std::vector.5"* %20, %"class.std::allocator.7"* dereferenceable(1) %21) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.7"* %21) #3
  %26 = bitcast %"class.std::vector.5"* %24 to %"struct.std::_Vector_base.6"*
  %27 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %26, i32 0, i32 0
  %28 = bitcast %"class.std::vector.5"* %20 to %"struct.std::_Vector_base.6"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %27, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %29) #3
  %30 = bitcast %"class.std::vector.5"* %24 to %"struct.std::_Vector_base.6"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %32 = load %"class.std::vector.5"*, %"class.std::vector.5"** %19, align 8
  %33 = bitcast %"class.std::vector.5"* %32 to %"struct.std::_Vector_base.6"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %33, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %31, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %34) #3
  %35 = bitcast %"class.std::vector.5"* %24 to %"struct.std::_Vector_base.6"*
  %36 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %35) #3
  %37 = load %"class.std::vector.5"*, %"class.std::vector.5"** %19, align 8
  %38 = bitcast %"class.std::vector.5"* %37 to %"struct.std::_Vector_base.6"*
  %39 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %38) #3
  %40 = load i32, i32* @x.342
  %41 = load i32, i32* @y.343
  %42 = add i32 %40, -1097751710
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1097751710
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %91

; <label>:54:                                     ; preds = %16
  invoke void @_ZSt15__alloc_on_moveISaIiEEvRT_S2_(%"class.std::allocator.7"* dereferenceable(1) %36, %"class.std::allocator.7"* dereferenceable(1) %39)
          to label %55 unwind label %56

; <label>:55:                                     ; preds = %54
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %20) #3
  ret void

; <label>:56:                                     ; preds = %54
  %57 = load i32, i32* @x.342
  %58 = load i32, i32* @y.343
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %115

; <label>:70:                                     ; preds = %56, %115
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %22, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %23, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %20) #3
  %74 = load i32, i32* @x.342
  %75 = load i32, i32* @y.343
  %76 = add i32 %74, 1872113003
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 1872113003
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %115

; <label>:88:                                     ; preds = %70
  br label %89

; <label>:89:                                     ; preds = %88
  %90 = load i8*, i8** %22, align 8
  call void @__clang_call_terminate(i8* %90) #12
  unreachable

; <label>:91:                                     ; preds = %16, %2
  %92 = alloca %"struct.std::integral_constant", align 1
  %93 = alloca %"class.std::vector.5"*, align 8
  %94 = alloca %"class.std::vector.5"*, align 8
  %95 = alloca %"class.std::vector.5", align 8
  %96 = alloca %"class.std::allocator.7", align 1
  %97 = alloca i8*
  %98 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %93, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %94, align 8
  %99 = load %"class.std::vector.5"*, %"class.std::vector.5"** %93, align 8
  %100 = bitcast %"class.std::vector.5"* %99 to %"struct.std::_Vector_base.6"*
  call void @_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv(%"class.std::allocator.7"* sret %96, %"struct.std::_Vector_base.6"* %100) #3
  call void @_ZNSt6vectorIiSaIiEEC2ERKS0_(%"class.std::vector.5"* %95, %"class.std::allocator.7"* dereferenceable(1) %96) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.7"* %96) #3
  %101 = bitcast %"class.std::vector.5"* %99 to %"struct.std::_Vector_base.6"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %101, i32 0, i32 0
  %103 = bitcast %"class.std::vector.5"* %95 to %"struct.std::_Vector_base.6"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %103, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %102, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %104) #3
  %105 = bitcast %"class.std::vector.5"* %99 to %"struct.std::_Vector_base.6"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %105, i32 0, i32 0
  %107 = load %"class.std::vector.5"*, %"class.std::vector.5"** %94, align 8
  %108 = bitcast %"class.std::vector.5"* %107 to %"struct.std::_Vector_base.6"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %108, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %106, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %109) #3
  %110 = bitcast %"class.std::vector.5"* %99 to %"struct.std::_Vector_base.6"*
  %111 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %110) #3
  %112 = load %"class.std::vector.5"*, %"class.std::vector.5"** %94, align 8
  %113 = bitcast %"class.std::vector.5"* %112 to %"struct.std::_Vector_base.6"*
  %114 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %113) #3
  br label %16

; <label>:115:                                    ; preds = %70, %56
  %116 = landingpad { i8*, i32 }
          catch i8* null
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %22, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %23, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %20) #3
  br label %70
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv(%"class.std::allocator.7"* noalias sret, %"struct.std::_Vector_base.6"*) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %1, %"struct.std::_Vector_base.6"** %3, align 8
  %4 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %4) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.7"* %0, %"class.std::allocator.7"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2ERKS0_(%"class.std::vector.5"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_(%"struct.std::_Vector_base.6"* %6, %"class.std::allocator.7"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.7"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt15__alloc_on_moveISaIiEEvRT_S2_(%"class.std::allocator.7"* dereferenceable(1), %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %6 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  call void @_ZSt18__do_alloc_on_moveISaIiEEvRT_S2_St17integral_constantIbLb1EE(%"class.std::allocator.7"* dereferenceable(1) %6, %"class.std::allocator.7"* dereferenceable(1) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.7"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.8"* %6, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_(%"struct.std::_Vector_base.6"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.356
  %6 = load i32, i32* @y.357
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1053861114, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1053861114, label %18
    i32 1609912766, label %38
    i32 -1861610746, label %58
    i32 -1189348066, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1609912766, i32 -1189348066
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.6"*, align 8
  %40 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %39, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %40, align 8
  %41 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %41, i32 0, i32 0
  %43 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %40, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, %"class.std::allocator.7"* dereferenceable(1) %43) #3
  %44 = load i32, i32* @x.356
  %45 = load i32, i32* @y.357
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1861610746, i32 -1189348066
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Vector_base.6"*, align 8
  %61 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %60, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %61, align 8
  %62 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %60, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %62, i32 0, i32 0
  %64 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %61, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %63, %"class.std::allocator.7"* dereferenceable(1) %64) #3
  store i32 1609912766, i32* %14
  br label %65

; <label>:65:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator.7"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.7"* %6, %"class.std::allocator.7"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt18__do_alloc_on_moveISaIiEEvRT_S2_St17integral_constantIbLb1EE(%"class.std::allocator.7"* dereferenceable(1), %"class.std::allocator.7"* dereferenceable(1)) #4 comdat {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %5, align 8
  %6 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %5, align 8
  %7 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1) %6) #3
  %8 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.15"*, i32** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.366
  %6 = load i32, i32* @y.367
  %7 = add i32 %5, -1438262545
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1438262545
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1628003992, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %135
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1628003992, label %19
    i32 921870297, label %39
    i32 -1579579173, label %71
    i32 -2081197490, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %135

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 921870297, i32 -2081197490
  store i32 %38, i32* %15
  br label %135

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %40, align 8
  %41 = load %"class.std::vector.5"*, %"class.std::vector.5"** %40, align 8
  %42 = bitcast %"class.std::vector.5"* %41 to %"struct.std::_Vector_base.6"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load i32*, i32** %44, align 8
  %46 = bitcast %"class.std::vector.5"* %41 to %"struct.std::_Vector_base.6"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = ptrtoint i32* %45 to i64
  %51 = ptrtoint i32* %49 to i64
  %52 = sub i64 %50, 8618073352839408544
  %53 = sub i64 %52, %51
  %54 = add i64 %53, 8618073352839408544
  %55 = sub i64 %50, %51
  %56 = sdiv exact i64 %54, 4
  store i64 %56, i64* %2
  %57 = load i32, i32* @x.366
  %58 = load i32, i32* @y.367
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -1579579173, i32 -2081197490
  store i32 %70, i32* %15
  br label %135

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %74, align 8
  %75 = load %"class.std::vector.5"*, %"class.std::vector.5"** %74, align 8
  %76 = bitcast %"class.std::vector.5"* %75 to %"struct.std::_Vector_base.6"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load i32*, i32** %78, align 8
  %80 = bitcast %"class.std::vector.5"* %75 to %"struct.std::_Vector_base.6"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = ptrtoint i32* %79 to i64
  %85 = ptrtoint i32* %83 to i64
  %86 = sub i64 0, -4042766594468029407
  %87 = sub i64 %86, %84
  %88 = add i64 %87, -4042766594468029407
  %89 = sub i64 0, %84
  %90 = sub i64 0, %88
  %91 = sub i64 0, %85
  %92 = add i64 %90, %91
  %93 = sub i64 0, %92
  %94 = add i64 %88, %85
  %95 = sub i64 0, %85
  %96 = add i64 %84, %95
  %97 = sub i64 %84, %85
  %98 = sub i64 %96, 301540037946610331
  %99 = sub i64 %98, 4
  %100 = add i64 %99, 301540037946610331
  %101 = sub i64 %96, 4
  %102 = mul i64 %100, 4
  %103 = sub i64 0, %96
  %104 = add i64 0, %103
  %105 = sub i64 0, %96
  %106 = sub i64 0, 4
  %107 = sub i64 %104, %106
  %108 = add i64 %104, 4
  %109 = sub i64 %96, 1830721738293302416
  %110 = sub i64 %109, 4
  %111 = add i64 %110, 1830721738293302416
  %112 = sub i64 %96, 4
  %113 = mul i64 %111, 4
  %114 = shl i64 %96, 4
  %115 = sub i64 %96, 6103350880646036844
  %116 = sub i64 %115, 4
  %117 = add i64 %116, 6103350880646036844
  %118 = sub i64 %96, 4
  %119 = mul i64 %117, 4
  %120 = sub i64 0, 4
  %121 = add i64 %96, %120
  %122 = sub i64 %96, 4
  %123 = mul i64 %121, 4
  %124 = add i64 0, 1632177120651590372
  %125 = sub i64 %124, %96
  %126 = sub i64 %125, 1632177120651590372
  %127 = sub i64 0, %96
  %128 = sub i64 0, %126
  %129 = sub i64 0, 4
  %130 = add i64 %128, %129
  %131 = sub i64 0, %130
  %132 = add i64 %126, 4
  %133 = shl i64 %96, 4
  %134 = sdiv exact i64 %96, 4
  store i32 921870297, i32* %15
  br label %135

; <label>:135:                                    ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5stackIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::stack"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::stack"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::stack"* %0, %"class.std::stack"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::stack"*, %"class.std::stack"** %3, align 8
  %6 = getelementptr inbounds %"class.std::stack", %"class.std::stack"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  call void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"* %6, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 2
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 -1
  store i32* %21, i32** %3
  %22 = alloca i32
  store i32 1796723511, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %54
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 1796723511, label %26
    i32 -1419396219, label %31
    i32 830998967, label %50
    i32 -893529705, label %53
  ]

; <label>:25:                                     ; preds = %23
  br label %54

; <label>:26:                                     ; preds = %23
  %27 = load volatile i32*, i32** %4
  %28 = load volatile i32*, i32** %3
  %29 = icmp ne i32* %27, %28
  %30 = select i1 %29, i32 -1419396219, i32 830998967
  store i32 %30, i32* %22
  br label %54

; <label>:31:                                     ; preds = %23
  %32 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %33 = bitcast %"class.std::deque"* %32 to %"class.std::_Deque_base"*
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34 to %"class.std::allocator.7"*
  %36 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %37 = bitcast %"class.std::deque"* %36 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.7"* dereferenceable(1) %35, i32* %41, i32* dereferenceable(4) %42)
  %43 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %44 = bitcast %"class.std::deque"* %43 to %"class.std::_Deque_base"*
  %45 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %45, i32 0, i32 3
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %46, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds i32, i32* %48, i32 1
  store i32* %49, i32** %47, align 8
  store i32 -893529705, i32* %22
  br label %54

; <label>:50:                                     ; preds = %23
  %51 = load i32*, i32** %7, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"* %52, i32* dereferenceable(4) %51)
  store i32 -893529705, i32* %22
  br label %54

; <label>:53:                                     ; preds = %23
  ret void

; <label>:54:                                     ; preds = %50, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.7"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.8"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.374
  %4 = load i32, i32* @y.375
  %5 = sub i32 %3, 559673636
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 559673636
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %283

; <label>:29:                                     ; preds = %2, %283
  %30 = alloca %"class.std::deque"*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i8*
  %33 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %30, align 8
  store i32* %1, i32** %31, align 8
  %34 = load %"class.std::deque"*, %"class.std::deque"** %30, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %34, i64 1)
  %35 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %36 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %35)
  %37 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 3
  %41 = load i32**, i32*** %40, align 8
  %42 = getelementptr inbounds i32*, i32** %41, i64 1
  store i32* %36, i32** %42, align 8
  %43 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %44 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %43, i32 0, i32 0
  %45 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %44 to %"class.std::allocator.7"*
  %46 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %47 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %47, i32 0, i32 3
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %48, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = load i32*, i32** %31, align 8
  %52 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %51) #3
  %53 = load i32, i32* @x.374
  %54 = load i32, i32* @y.375
  %55 = add i32 %53, -127589889
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -127589889
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %283

; <label>:67:                                     ; preds = %29
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.7"* dereferenceable(1) %45, i32* %50, i32* dereferenceable(4) %52)
          to label %68 unwind label %87

; <label>:68:                                     ; preds = %67
  %69 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %70 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %70, i32 0, i32 3
  %72 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %73 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %73, i32 0, i32 3
  %75 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %74, i32 0, i32 3
  %76 = load i32**, i32*** %75, align 8
  %77 = getelementptr inbounds i32*, i32** %76, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %71, i32** %77) #3
  %78 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %79 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %79, i32 0, i32 3
  %81 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %80, i32 0, i32 1
  %82 = load i32*, i32** %81, align 8
  %83 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %84 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %84, i32 0, i32 3
  %86 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %85, i32 0, i32 0
  store i32* %82, i32** %86, align 8
  br label %178

; <label>:87:                                     ; preds = %67
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %32, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %33, align 4
  br label %91

; <label>:91:                                     ; preds = %87
  %92 = load i8*, i8** %32, align 8
  %93 = call i8* @__cxa_begin_catch(i8* %92) #3
  %94 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %95 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %96 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %95, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %96, i32 0, i32 3
  %98 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %97, i32 0, i32 3
  %99 = load i32**, i32*** %98, align 8
  %100 = getelementptr inbounds i32*, i32** %99, i64 1
  %101 = load i32*, i32** %100, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %94, i32* %101) #3
  invoke void @__cxa_rethrow() #13
          to label %241 unwind label %102

; <label>:102:                                    ; preds = %91
  %103 = load i32, i32* @x.374
  %104 = load i32, i32* @y.375
  %105 = add i32 %103, 808619901
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, 808619901
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %307

; <label>:117:                                    ; preds = %102, %307
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %32, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %33, align 4
  %121 = load i32, i32* @x.374
  %122 = load i32, i32* @y.375
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 true, true
  %133 = and i1 %130, true
  %134 = and i1 %128, %132
  %135 = and i1 %131, true
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 true, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %307

; <label>:146:                                    ; preds = %117
  invoke void @__cxa_end_catch()
          to label %147 unwind label %238

; <label>:147:                                    ; preds = %146
  %148 = load i32, i32* @x.374
  %149 = load i32, i32* @y.375
  %150 = sub i32 %148, -84790767
  %151 = sub i32 %150, 1
  %152 = add i32 %151, -84790767
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  br i1 %160, label %162, label %311

; <label>:162:                                    ; preds = %147, %311
  %163 = load i32, i32* @x.374
  %164 = load i32, i32* @y.375
  %165 = sub i32 %163, -592466480
  %166 = sub i32 %165, 1
  %167 = add i32 %166, -592466480
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  br i1 %175, label %177, label %311

; <label>:177:                                    ; preds = %162
  br label %179

; <label>:178:                                    ; preds = %68
  ret void

; <label>:179:                                    ; preds = %177
  %180 = load i32, i32* @x.374
  %181 = load i32, i32* @y.375
  %182 = add i32 %180, -1183213601
  %183 = sub i32 %182, 1
  %184 = sub i32 %183, -1183213601
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %312

; <label>:206:                                    ; preds = %179, %312
  %207 = load i8*, i8** %32, align 8
  %208 = load i32, i32* %33, align 4
  %209 = insertvalue { i8*, i32 } undef, i8* %207, 0
  %210 = insertvalue { i8*, i32 } %209, i32 %208, 1
  %211 = load i32, i32* @x.374
  %212 = load i32, i32* @y.375
  %213 = sub i32 %211, -1135486946
  %214 = sub i32 %213, 1
  %215 = add i32 %214, -1135486946
  %216 = sub i32 %211, 1
  %217 = mul i32 %211, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %212, 10
  %221 = xor i1 %219, true
  %222 = xor i1 %220, true
  %223 = xor i1 false, true
  %224 = and i1 %221, false
  %225 = and i1 %219, %223
  %226 = and i1 %222, false
  %227 = and i1 %220, %223
  %228 = or i1 %224, %225
  %229 = or i1 %226, %227
  %230 = xor i1 %228, %229
  %231 = or i1 %221, %222
  %232 = xor i1 %231, true
  %233 = or i1 false, %223
  %234 = and i1 %232, %233
  %235 = or i1 %230, %234
  %236 = or i1 %219, %220
  br i1 %235, label %237, label %312

; <label>:237:                                    ; preds = %206
  resume { i8*, i32 } %210

; <label>:238:                                    ; preds = %146
  %239 = landingpad { i8*, i32 }
          catch i8* null
  %240 = extractvalue { i8*, i32 } %239, 0
  call void @__clang_call_terminate(i8* %240) #12
  unreachable

; <label>:241:                                    ; preds = %91
  %242 = load i32, i32* @x.374
  %243 = load i32, i32* @y.375
  %244 = sub i32 %242, -117609399
  %245 = sub i32 %244, 1
  %246 = add i32 %245, -117609399
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = xor i1 %250, true
  %253 = xor i1 %251, true
  %254 = xor i1 false, true
  %255 = and i1 %252, false
  %256 = and i1 %250, %254
  %257 = and i1 %253, false
  %258 = and i1 %251, %254
  %259 = or i1 %255, %256
  %260 = or i1 %257, %258
  %261 = xor i1 %259, %260
  %262 = or i1 %252, %253
  %263 = xor i1 %262, true
  %264 = or i1 false, %254
  %265 = and i1 %263, %264
  %266 = or i1 %261, %265
  %267 = or i1 %250, %251
  br i1 %266, label %268, label %317

; <label>:268:                                    ; preds = %241, %317
  %269 = load i32, i32* @x.374
  %270 = load i32, i32* @y.375
  %271 = sub i32 0, 1
  %272 = add i32 %269, %271
  %273 = sub i32 %269, 1
  %274 = mul i32 %269, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %270, 10
  %278 = and i1 %276, %277
  %279 = xor i1 %276, %277
  %280 = or i1 %278, %279
  %281 = or i1 %276, %277
  br i1 %280, label %282, label %317

; <label>:282:                                    ; preds = %268
  unreachable

; <label>:283:                                    ; preds = %29, %2
  %284 = alloca %"class.std::deque"*, align 8
  %285 = alloca i32*, align 8
  %286 = alloca i8*
  %287 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %284, align 8
  store i32* %1, i32** %285, align 8
  %288 = load %"class.std::deque"*, %"class.std::deque"** %284, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %288, i64 1)
  %289 = bitcast %"class.std::deque"* %288 to %"class.std::_Deque_base"*
  %290 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %289)
  %291 = bitcast %"class.std::deque"* %288 to %"class.std::_Deque_base"*
  %292 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %291, i32 0, i32 0
  %293 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %292, i32 0, i32 3
  %294 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %293, i32 0, i32 3
  %295 = load i32**, i32*** %294, align 8
  %296 = getelementptr inbounds i32*, i32** %295, i64 1
  store i32* %290, i32** %296, align 8
  %297 = bitcast %"class.std::deque"* %288 to %"class.std::_Deque_base"*
  %298 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %297, i32 0, i32 0
  %299 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %298 to %"class.std::allocator.7"*
  %300 = bitcast %"class.std::deque"* %288 to %"class.std::_Deque_base"*
  %301 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %300, i32 0, i32 0
  %302 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %301, i32 0, i32 3
  %303 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %302, i32 0, i32 0
  %304 = load i32*, i32** %303, align 8
  %305 = load i32*, i32** %285, align 8
  %306 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %305) #3
  br label %29

; <label>:307:                                    ; preds = %117, %102
  %308 = landingpad { i8*, i32 }
          cleanup
  %309 = extractvalue { i8*, i32 } %308, 0
  store i8* %309, i8** %32, align 8
  %310 = extractvalue { i8*, i32 } %308, 1
  store i32 %310, i32* %33, align 4
  br label %117

; <label>:311:                                    ; preds = %162, %147
  br label %162

; <label>:312:                                    ; preds = %206, %179
  %313 = load i8*, i8** %32, align 8
  %314 = load i32, i32* %33, align 4
  %315 = insertvalue { i8*, i32 } undef, i8* %313, 0
  %316 = insertvalue { i8*, i32 } %315, i32 %314, 1
  br label %206

; <label>:317:                                    ; preds = %268, %241
  br label %268
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.8"*, i32*, i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load i64, i64* %7, align 8
  %10 = sub i64 0, %9
  %11 = sub i64 0, 1
  %12 = add i64 %10, %11
  %13 = sub i64 0, %12
  %14 = add i64 %9, 1
  store i64 %13, i64* %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %21 = bitcast %"class.std::deque"* %20 to %"class.std::_Deque_base"*
  %22 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %22, i32 0, i32 3
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %23, i32 0, i32 3
  %25 = load i32**, i32*** %24, align 8
  %26 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %27 = bitcast %"class.std::deque"* %26 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 0
  %30 = load i32**, i32*** %29, align 8
  %31 = ptrtoint i32** %25 to i64
  %32 = ptrtoint i32** %30 to i64
  %33 = sub i64 %31, 3503268001675111899
  %34 = sub i64 %33, %32
  %35 = add i64 %34, 3503268001675111899
  %36 = sub i64 %31, %32
  %37 = sdiv exact i64 %35, 8
  %38 = sub i64 0, %37
  %39 = add i64 %19, %38
  %40 = sub i64 %19, %37
  store i64 %39, i64* %3
  %41 = alloca i32
  store i32 -308492964, i32* %41
  br label %42

; <label>:42:                                     ; preds = %2, %54
  %43 = load i32, i32* %41
  switch i32 %43, label %44 [
    i32 -308492964, label %45
    i32 -245347355, label %50
    i32 338419100, label %53
  ]

; <label>:44:                                     ; preds = %42
  br label %54

; <label>:45:                                     ; preds = %42
  %46 = load volatile i64, i64* %4
  %47 = load volatile i64, i64* %3
  %48 = icmp ugt i64 %46, %47
  %49 = select i1 %48, i32 -245347355, i32 338419100
  store i32 %49, i32* %41
  br label %54

; <label>:50:                                     ; preds = %42
  %51 = load i64, i64* %7, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %52, i64 %51, i1 zeroext false)
  store i32 338419100, i32* %41
  br label %54

; <label>:53:                                     ; preds = %42
  ret void

; <label>:54:                                     ; preds = %50, %45, %44
  br label %42
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**
  %6 = alloca i32**
  %7 = alloca i1
  %8 = alloca %"class.std::deque"*
  %9 = alloca i32***
  %10 = alloca i64*
  %11 = alloca i32***
  %12 = alloca i64*
  %13 = alloca i64*
  %14 = alloca i8*
  %15 = alloca i64*
  %16 = alloca i1
  %17 = alloca i1
  %18 = load i32, i32* @x.382
  %19 = load i32, i32* @y.383
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  store i1 %25, i1* %17
  %26 = icmp slt i32 %19, 10
  store i1 %26, i1* %16
  %27 = alloca i32
  store i32 1869508553, i32* %27
  %28 = alloca i64
  %29 = alloca i64
  br label %30

; <label>:30:                                     ; preds = %3, %655
  %31 = load i32, i32* %27
  switch i32 %31, label %32 [
    i32 1869508553, label %33
    i32 686880464, label %53
    i32 -1887271668, label %133
    i32 -1783704910, label %136
    i32 991711772, label %158
    i32 -759609136, label %161
    i32 684136883, label %162
    i32 488839691, label %177
    i32 1376315891, label %194
    i32 -89378655, label %214
    i32 2059123372, label %230
    i32 1097924259, label %258
    i32 1481476738, label %259
    i32 1650517623, label %301
    i32 -212522519, label %304
    i32 -2026231733, label %319
    i32 -2067809760, label %334
    i32 -1657113630, label %335
    i32 1546154856, label %352
    i32 2120468522, label %424
    i32 1607148015, label %425
    i32 539018562, label %453
    i32 1803503364, label %484
    i32 -1057033792, label %485
    i32 -1492360019, label %591
    i32 -1411206129, label %592
    i32 -1786050482, label %593
    i32 1800358510, label %638
  ]

; <label>:32:                                     ; preds = %30
  br label %655

; <label>:33:                                     ; preds = %30
  %34 = load volatile i1, i1* %17
  %35 = load volatile i1, i1* %16
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 686880464, i32 -1057033792
  store i32 %52, i32* %27
  br label %655

; <label>:53:                                     ; preds = %30
  %54 = alloca %"class.std::deque"*, align 8
  %55 = alloca i64, align 8
  store i64* %55, i64** %15
  %56 = alloca i8, align 1
  store i8* %56, i8** %14
  %57 = alloca i64, align 8
  store i64* %57, i64** %13
  %58 = alloca i64, align 8
  store i64* %58, i64** %12
  %59 = alloca i32**, align 8
  store i32*** %59, i32**** %11
  %60 = alloca i64, align 8
  store i64* %60, i64** %10
  %61 = alloca i32**, align 8
  store i32*** %61, i32**** %9
  store %"class.std::deque"* %0, %"class.std::deque"** %54, align 8
  %62 = load volatile i64*, i64** %15
  store i64 %1, i64* %62, align 8
  %63 = zext i1 %2 to i8
  %64 = load volatile i8*, i8** %14
  store i8 %63, i8* %64, align 1
  %65 = load %"class.std::deque"*, %"class.std::deque"** %54, align 8
  store %"class.std::deque"* %65, %"class.std::deque"** %8
  %66 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %67 = bitcast %"class.std::deque"* %66 to %"class.std::_Deque_base"*
  %68 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 3
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %69, i32 0, i32 3
  %71 = load i32**, i32*** %70, align 8
  %72 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %73 = bitcast %"class.std::deque"* %72 to %"class.std::_Deque_base"*
  %74 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74, i32 0, i32 2
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 3
  %77 = load i32**, i32*** %76, align 8
  %78 = ptrtoint i32** %71 to i64
  %79 = ptrtoint i32** %77 to i64
  %80 = sub i64 %78, 4020626253834889517
  %81 = sub i64 %80, %79
  %82 = add i64 %81, 4020626253834889517
  %83 = sub i64 %78, %79
  %84 = sdiv exact i64 %82, 8
  %85 = sub i64 %84, 3005121263944552214
  %86 = add i64 %85, 1
  %87 = add i64 %86, 3005121263944552214
  %88 = add nsw i64 %84, 1
  %89 = load volatile i64*, i64** %13
  store i64 %87, i64* %89, align 8
  %90 = load volatile i64*, i64** %13
  %91 = load i64, i64* %90, align 8
  %92 = load volatile i64*, i64** %15
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 0, %93
  %95 = sub i64 %91, %94
  %96 = add i64 %91, %93
  %97 = load volatile i64*, i64** %12
  store i64 %95, i64* %97, align 8
  %98 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %99 = bitcast %"class.std::deque"* %98 to %"class.std::_Deque_base"*
  %100 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %100, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = load volatile i64*, i64** %12
  %104 = load i64, i64* %103, align 8
  %105 = mul i64 2, %104
  %106 = icmp ugt i64 %102, %105
  store i1 %106, i1* %7
  %107 = load i32, i32* @x.382
  %108 = load i32, i32* @y.383
  %109 = sub i32 0, 1
  %110 = add i32 %107, %109
  %111 = sub i32 %107, 1
  %112 = mul i32 %107, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %108, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 -1887271668, i32 -1057033792
  store i32 %132, i32* %27
  br label %655

; <label>:133:                                    ; preds = %30
  %134 = load volatile i1, i1* %7
  %135 = select i1 %134, i32 -1783704910, i32 1481476738
  store i32 %135, i32* %27
  br label %655

; <label>:136:                                    ; preds = %30
  %137 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %138 = bitcast %"class.std::deque"* %137 to %"class.std::_Deque_base"*
  %139 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %138, i32 0, i32 0
  %140 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %139, i32 0, i32 0
  %141 = load i32**, i32*** %140, align 8
  %142 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %143 = bitcast %"class.std::deque"* %142 to %"class.std::_Deque_base"*
  %144 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %144, i32 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = load volatile i64*, i64** %12
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 0, %148
  %150 = add i64 %146, %149
  %151 = sub i64 %146, %148
  %152 = udiv i64 %150, 2
  %153 = getelementptr inbounds i32*, i32** %141, i64 %152
  store i32** %153, i32*** %6
  %154 = load volatile i8*, i8** %14
  %155 = load i8, i8* %154, align 1
  %156 = trunc i8 %155 to i1
  %157 = select i1 %156, i32 991711772, i32 -759609136
  store i32 %157, i32* %27
  br label %655

; <label>:158:                                    ; preds = %30
  %159 = load volatile i64*, i64** %15
  %160 = load i64, i64* %159, align 8
  store i32 684136883, i32* %27
  store i64 %160, i64* %28
  br label %655

; <label>:161:                                    ; preds = %30
  store i32 684136883, i32* %27
  store i64 0, i64* %28
  br label %655

; <label>:162:                                    ; preds = %30
  %163 = load i64, i64* %28
  %164 = load volatile i32**, i32*** %6
  %165 = getelementptr inbounds i32*, i32** %164, i64 %163
  %166 = load volatile i32***, i32**** %11
  store i32** %165, i32*** %166, align 8
  %167 = load volatile i32***, i32**** %11
  %168 = load i32**, i32*** %167, align 8
  %169 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %170 = bitcast %"class.std::deque"* %169 to %"class.std::_Deque_base"*
  %171 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %171, i32 0, i32 2
  %173 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %172, i32 0, i32 3
  %174 = load i32**, i32*** %173, align 8
  %175 = icmp ult i32** %168, %174
  %176 = select i1 %175, i32 488839691, i32 1376315891
  store i32 %176, i32* %27
  br label %655

; <label>:177:                                    ; preds = %30
  %178 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %179 = bitcast %"class.std::deque"* %178 to %"class.std::_Deque_base"*
  %180 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %179, i32 0, i32 0
  %181 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %180, i32 0, i32 2
  %182 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %181, i32 0, i32 3
  %183 = load i32**, i32*** %182, align 8
  %184 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %185 = bitcast %"class.std::deque"* %184 to %"class.std::_Deque_base"*
  %186 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %185, i32 0, i32 0
  %187 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %186, i32 0, i32 3
  %188 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %187, i32 0, i32 3
  %189 = load i32**, i32*** %188, align 8
  %190 = getelementptr inbounds i32*, i32** %189, i64 1
  %191 = load volatile i32***, i32**** %11
  %192 = load i32**, i32*** %191, align 8
  %193 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %183, i32** %190, i32** %192)
  store i32 -89378655, i32* %27
  br label %655

; <label>:194:                                    ; preds = %30
  %195 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %196 = bitcast %"class.std::deque"* %195 to %"class.std::_Deque_base"*
  %197 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %196, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %197, i32 0, i32 2
  %199 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %198, i32 0, i32 3
  %200 = load i32**, i32*** %199, align 8
  %201 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %202 = bitcast %"class.std::deque"* %201 to %"class.std::_Deque_base"*
  %203 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %202, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %203, i32 0, i32 3
  %205 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %204, i32 0, i32 3
  %206 = load i32**, i32*** %205, align 8
  %207 = getelementptr inbounds i32*, i32** %206, i64 1
  %208 = load volatile i32***, i32**** %11
  %209 = load i32**, i32*** %208, align 8
  %210 = load volatile i64*, i64** %13
  %211 = load i64, i64* %210, align 8
  %212 = getelementptr inbounds i32*, i32** %209, i64 %211
  %213 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %200, i32** %207, i32** %212)
  store i32 -89378655, i32* %27
  br label %655

; <label>:214:                                    ; preds = %30
  %215 = load i32, i32* @x.382
  %216 = load i32, i32* @y.383
  %217 = add i32 %215, 837595269
  %218 = sub i32 %217, 1
  %219 = sub i32 %218, 837595269
  %220 = sub i32 %215, 1
  %221 = mul i32 %215, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %216, 10
  %225 = and i1 %223, %224
  %226 = xor i1 %223, %224
  %227 = or i1 %225, %226
  %228 = or i1 %223, %224
  %229 = select i1 %227, i32 2059123372, i32 -1492360019
  store i32 %229, i32* %27
  br label %655

; <label>:230:                                    ; preds = %30
  %231 = load i32, i32* @x.382
  %232 = load i32, i32* @y.383
  %233 = add i32 %231, 444661754
  %234 = sub i32 %233, 1
  %235 = sub i32 %234, 444661754
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 true, true
  %244 = and i1 %241, true
  %245 = and i1 %239, %243
  %246 = and i1 %242, true
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 true, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  %257 = select i1 %255, i32 1097924259, i32 -1492360019
  store i32 %257, i32* %27
  br label %655

; <label>:258:                                    ; preds = %30
  store i32 1607148015, i32* %27
  br label %655

; <label>:259:                                    ; preds = %30
  %260 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %261 = bitcast %"class.std::deque"* %260 to %"class.std::_Deque_base"*
  %262 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %261, i32 0, i32 0
  %263 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %262, i32 0, i32 1
  %264 = load i64, i64* %263, align 8
  %265 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %266 = bitcast %"class.std::deque"* %265 to %"class.std::_Deque_base"*
  %267 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %266, i32 0, i32 0
  %268 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %267, i32 0, i32 1
  %269 = load volatile i64*, i64** %15
  %270 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %268, i64* dereferenceable(8) %269)
  %271 = load i64, i64* %270, align 8
  %272 = sub i64 0, %271
  %273 = sub i64 %264, %272
  %274 = add i64 %264, %271
  %275 = sub i64 0, 2
  %276 = sub i64 %273, %275
  %277 = add i64 %273, 2
  %278 = load volatile i64*, i64** %10
  store i64 %276, i64* %278, align 8
  %279 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %280 = bitcast %"class.std::deque"* %279 to %"class.std::_Deque_base"*
  %281 = load volatile i64*, i64** %10
  %282 = load i64, i64* %281, align 8
  %283 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %280, i64 %282)
  %284 = load volatile i32***, i32**** %9
  store i32** %283, i32*** %284, align 8
  %285 = load volatile i32***, i32**** %9
  %286 = load i32**, i32*** %285, align 8
  %287 = load volatile i64*, i64** %10
  %288 = load i64, i64* %287, align 8
  %289 = load volatile i64*, i64** %12
  %290 = load i64, i64* %289, align 8
  %291 = sub i64 %288, 7304656678102310155
  %292 = sub i64 %291, %290
  %293 = add i64 %292, 7304656678102310155
  %294 = sub i64 %288, %290
  %295 = udiv i64 %293, 2
  %296 = getelementptr inbounds i32*, i32** %286, i64 %295
  store i32** %296, i32*** %5
  %297 = load volatile i8*, i8** %14
  %298 = load i8, i8* %297, align 1
  %299 = trunc i8 %298 to i1
  %300 = select i1 %299, i32 1650517623, i32 -212522519
  store i32 %300, i32* %27
  br label %655

; <label>:301:                                    ; preds = %30
  %302 = load volatile i64*, i64** %15
  %303 = load i64, i64* %302, align 8
  store i32 -1657113630, i32* %27
  store i64 %303, i64* %29
  br label %655

; <label>:304:                                    ; preds = %30
  %305 = load i32, i32* @x.382
  %306 = load i32, i32* @y.383
  %307 = sub i32 0, 1
  %308 = add i32 %305, %307
  %309 = sub i32 %305, 1
  %310 = mul i32 %305, %308
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %306, 10
  %314 = and i1 %312, %313
  %315 = xor i1 %312, %313
  %316 = or i1 %314, %315
  %317 = or i1 %312, %313
  %318 = select i1 %316, i32 -2026231733, i32 -1411206129
  store i32 %318, i32* %27
  br label %655

; <label>:319:                                    ; preds = %30
  %320 = load i32, i32* @x.382
  %321 = load i32, i32* @y.383
  %322 = sub i32 0, 1
  %323 = add i32 %320, %322
  %324 = sub i32 %320, 1
  %325 = mul i32 %320, %323
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %321, 10
  %329 = and i1 %327, %328
  %330 = xor i1 %327, %328
  %331 = or i1 %329, %330
  %332 = or i1 %327, %328
  %333 = select i1 %331, i32 -2067809760, i32 -1411206129
  store i32 %333, i32* %27
  br label %655

; <label>:334:                                    ; preds = %30
  store i32 -1657113630, i32* %27
  store i64 0, i64* %29
  br label %655

; <label>:335:                                    ; preds = %30
  %336 = load i64, i64* %29
  store i64 %336, i64* %4
  %337 = load i32, i32* @x.382
  %338 = load i32, i32* @y.383
  %339 = sub i32 %337, 1584121080
  %340 = sub i32 %339, 1
  %341 = add i32 %340, 1584121080
  %342 = sub i32 %337, 1
  %343 = mul i32 %337, %341
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %338, 10
  %347 = and i1 %345, %346
  %348 = xor i1 %345, %346
  %349 = or i1 %347, %348
  %350 = or i1 %345, %346
  %351 = select i1 %349, i32 1546154856, i32 -1786050482
  store i32 %351, i32* %27
  br label %655

; <label>:352:                                    ; preds = %30
  %353 = load volatile i32**, i32*** %5
  %354 = load volatile i64, i64* %4
  %355 = getelementptr inbounds i32*, i32** %353, i64 %354
  %356 = load volatile i32***, i32**** %11
  store i32** %355, i32*** %356, align 8
  %357 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %358 = bitcast %"class.std::deque"* %357 to %"class.std::_Deque_base"*
  %359 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %358, i32 0, i32 0
  %360 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %359, i32 0, i32 2
  %361 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %360, i32 0, i32 3
  %362 = load i32**, i32*** %361, align 8
  %363 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %364 = bitcast %"class.std::deque"* %363 to %"class.std::_Deque_base"*
  %365 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %364, i32 0, i32 0
  %366 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %365, i32 0, i32 3
  %367 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %366, i32 0, i32 3
  %368 = load i32**, i32*** %367, align 8
  %369 = getelementptr inbounds i32*, i32** %368, i64 1
  %370 = load volatile i32***, i32**** %11
  %371 = load i32**, i32*** %370, align 8
  %372 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %362, i32** %369, i32** %371)
  %373 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %374 = bitcast %"class.std::deque"* %373 to %"class.std::_Deque_base"*
  %375 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %376 = bitcast %"class.std::deque"* %375 to %"class.std::_Deque_base"*
  %377 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %376, i32 0, i32 0
  %378 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %377, i32 0, i32 0
  %379 = load i32**, i32*** %378, align 8
  %380 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %381 = bitcast %"class.std::deque"* %380 to %"class.std::_Deque_base"*
  %382 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %381, i32 0, i32 0
  %383 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %382, i32 0, i32 1
  %384 = load i64, i64* %383, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %374, i32** %379, i64 %384) #3
  %385 = load volatile i32***, i32**** %9
  %386 = load i32**, i32*** %385, align 8
  %387 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %388 = bitcast %"class.std::deque"* %387 to %"class.std::_Deque_base"*
  %389 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %388, i32 0, i32 0
  %390 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %389, i32 0, i32 0
  store i32** %386, i32*** %390, align 8
  %391 = load volatile i64*, i64** %10
  %392 = load i64, i64* %391, align 8
  %393 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %394 = bitcast %"class.std::deque"* %393 to %"class.std::_Deque_base"*
  %395 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %394, i32 0, i32 0
  %396 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %395, i32 0, i32 1
  store i64 %392, i64* %396, align 8
  %397 = load i32, i32* @x.382
  %398 = load i32, i32* @y.383
  %399 = sub i32 %397, 77612964
  %400 = sub i32 %399, 1
  %401 = add i32 %400, 77612964
  %402 = sub i32 %397, 1
  %403 = mul i32 %397, %401
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %398, 10
  %407 = xor i1 %405, true
  %408 = xor i1 %406, true
  %409 = xor i1 false, true
  %410 = and i1 %407, false
  %411 = and i1 %405, %409
  %412 = and i1 %408, false
  %413 = and i1 %406, %409
  %414 = or i1 %410, %411
  %415 = or i1 %412, %413
  %416 = xor i1 %414, %415
  %417 = or i1 %407, %408
  %418 = xor i1 %417, true
  %419 = or i1 false, %409
  %420 = and i1 %418, %419
  %421 = or i1 %416, %420
  %422 = or i1 %405, %406
  %423 = select i1 %421, i32 2120468522, i32 -1786050482
  store i32 %423, i32* %27
  br label %655

; <label>:424:                                    ; preds = %30
  store i32 1607148015, i32* %27
  br label %655

; <label>:425:                                    ; preds = %30
  %426 = load i32, i32* @x.382
  %427 = load i32, i32* @y.383
  %428 = add i32 %426, 2011227997
  %429 = sub i32 %428, 1
  %430 = sub i32 %429, 2011227997
  %431 = sub i32 %426, 1
  %432 = mul i32 %426, %430
  %433 = urem i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %427, 10
  %436 = xor i1 %434, true
  %437 = xor i1 %435, true
  %438 = xor i1 true, true
  %439 = and i1 %436, true
  %440 = and i1 %434, %438
  %441 = and i1 %437, true
  %442 = and i1 %435, %438
  %443 = or i1 %439, %440
  %444 = or i1 %441, %442
  %445 = xor i1 %443, %444
  %446 = or i1 %436, %437
  %447 = xor i1 %446, true
  %448 = or i1 true, %438
  %449 = and i1 %447, %448
  %450 = or i1 %445, %449
  %451 = or i1 %434, %435
  %452 = select i1 %450, i32 539018562, i32 1800358510
  store i32 %452, i32* %27
  br label %655

; <label>:453:                                    ; preds = %30
  %454 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %455 = bitcast %"class.std::deque"* %454 to %"class.std::_Deque_base"*
  %456 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %455, i32 0, i32 0
  %457 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %456, i32 0, i32 2
  %458 = load volatile i32***, i32**** %11
  %459 = load i32**, i32*** %458, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %457, i32** %459) #3
  %460 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %461 = bitcast %"class.std::deque"* %460 to %"class.std::_Deque_base"*
  %462 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %461, i32 0, i32 0
  %463 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %462, i32 0, i32 3
  %464 = load volatile i32***, i32**** %11
  %465 = load i32**, i32*** %464, align 8
  %466 = load volatile i64*, i64** %13
  %467 = load i64, i64* %466, align 8
  %468 = getelementptr inbounds i32*, i32** %465, i64 %467
  %469 = getelementptr inbounds i32*, i32** %468, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %463, i32** %469) #3
  %470 = load i32, i32* @x.382
  %471 = load i32, i32* @y.383
  %472 = sub i32 0, 1
  %473 = add i32 %470, %472
  %474 = sub i32 %470, 1
  %475 = mul i32 %470, %473
  %476 = urem i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %471, 10
  %479 = and i1 %477, %478
  %480 = xor i1 %477, %478
  %481 = or i1 %479, %480
  %482 = or i1 %477, %478
  %483 = select i1 %481, i32 1803503364, i32 1800358510
  store i32 %483, i32* %27
  br label %655

; <label>:484:                                    ; preds = %30
  ret void

; <label>:485:                                    ; preds = %30
  %486 = alloca %"class.std::deque"*, align 8
  %487 = alloca i64, align 8
  %488 = alloca i8, align 1
  %489 = alloca i64, align 8
  %490 = alloca i64, align 8
  %491 = alloca i32**, align 8
  %492 = alloca i64, align 8
  %493 = alloca i32**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %486, align 8
  store i64 %1, i64* %487, align 8
  %494 = zext i1 %2 to i8
  store i8 %494, i8* %488, align 1
  %495 = load %"class.std::deque"*, %"class.std::deque"** %486, align 8
  %496 = bitcast %"class.std::deque"* %495 to %"class.std::_Deque_base"*
  %497 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %496, i32 0, i32 0
  %498 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %497, i32 0, i32 3
  %499 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %498, i32 0, i32 3
  %500 = load i32**, i32*** %499, align 8
  %501 = bitcast %"class.std::deque"* %495 to %"class.std::_Deque_base"*
  %502 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %501, i32 0, i32 0
  %503 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %502, i32 0, i32 2
  %504 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %503, i32 0, i32 3
  %505 = load i32**, i32*** %504, align 8
  %506 = ptrtoint i32** %500 to i64
  %507 = ptrtoint i32** %505 to i64
  %508 = shl i64 %506, %507
  %509 = shl i64 %506, %507
  %510 = sub i64 0, %507
  %511 = add i64 %506, %510
  %512 = sub i64 %506, %507
  %513 = add i64 %511, -2782603905282696782
  %514 = sub i64 %513, 8
  %515 = sub i64 %514, -2782603905282696782
  %516 = sub i64 %511, 8
  %517 = mul i64 %515, 8
  %518 = sub i64 0, %511
  %519 = add i64 0, %518
  %520 = sub i64 0, %511
  %521 = sub i64 %519, -2161398616483728686
  %522 = add i64 %521, 8
  %523 = add i64 %522, -2161398616483728686
  %524 = add i64 %519, 8
  %525 = sub i64 0, 8
  %526 = add i64 %511, %525
  %527 = sub i64 %511, 8
  %528 = mul i64 %526, 8
  %529 = sub i64 0, 8
  %530 = add i64 %511, %529
  %531 = sub i64 %511, 8
  %532 = mul i64 %530, 8
  %533 = add i64 %511, 791103323965653327
  %534 = sub i64 %533, 8
  %535 = sub i64 %534, 791103323965653327
  %536 = sub i64 %511, 8
  %537 = mul i64 %535, 8
  %538 = sdiv exact i64 %511, 8
  %539 = shl i64 %538, 1
  %540 = shl i64 %538, 1
  %541 = sub i64 0, 1
  %542 = sub i64 %538, %541
  %543 = add nsw i64 %538, 1
  store i64 %542, i64* %489, align 8
  %544 = load i64, i64* %489, align 8
  %545 = load i64, i64* %487, align 8
  %546 = sub i64 0, %545
  %547 = add i64 %544, %546
  %548 = sub i64 %544, %545
  %549 = mul i64 %547, %545
  %550 = sub i64 0, %544
  %551 = add i64 0, %550
  %552 = sub i64 0, %544
  %553 = sub i64 %551, 8010560099938586970
  %554 = add i64 %553, %545
  %555 = add i64 %554, 8010560099938586970
  %556 = add i64 %551, %545
  %557 = shl i64 %544, %545
  %558 = sub i64 0, %545
  %559 = add i64 %544, %558
  %560 = sub i64 %544, %545
  %561 = mul i64 %559, %545
  %562 = shl i64 %544, %545
  %563 = sub i64 0, %544
  %564 = sub i64 0, %545
  %565 = add i64 %563, %564
  %566 = sub i64 0, %565
  %567 = add i64 %544, %545
  store i64 %566, i64* %490, align 8
  %568 = bitcast %"class.std::deque"* %495 to %"class.std::_Deque_base"*
  %569 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %568, i32 0, i32 0
  %570 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %569, i32 0, i32 1
  %571 = load i64, i64* %570, align 8
  %572 = load i64, i64* %490, align 8
  %573 = shl i64 2, %572
  %574 = sub i64 0, %572
  %575 = add i64 2, %574
  %576 = sub i64 2, %572
  %577 = mul i64 %575, %572
  %578 = shl i64 2, %572
  %579 = sub i64 2, 6365307463967425662
  %580 = sub i64 %579, %572
  %581 = add i64 %580, 6365307463967425662
  %582 = sub i64 2, %572
  %583 = mul i64 %581, %572
  %584 = sub i64 2, -8492988288392555459
  %585 = sub i64 %584, %572
  %586 = add i64 %585, -8492988288392555459
  %587 = sub i64 2, %572
  %588 = mul i64 %586, %572
  %589 = mul i64 2, %572
  %590 = icmp ugt i64 %571, %589
  store i32 686880464, i32* %27
  br label %655

; <label>:591:                                    ; preds = %30
  store i32 2059123372, i32* %27
  br label %655

; <label>:592:                                    ; preds = %30
  store i32 -2026231733, i32* %27
  br label %655

; <label>:593:                                    ; preds = %30
  %594 = load volatile i32**, i32*** %5
  %595 = load volatile i64, i64* %4
  %596 = getelementptr inbounds i32*, i32** %594, i64 %595
  %597 = load volatile i32***, i32**** %11
  store i32** %596, i32*** %597, align 8
  %598 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %599 = bitcast %"class.std::deque"* %598 to %"class.std::_Deque_base"*
  %600 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %599, i32 0, i32 0
  %601 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %600, i32 0, i32 2
  %602 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %601, i32 0, i32 3
  %603 = load i32**, i32*** %602, align 8
  %604 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %605 = bitcast %"class.std::deque"* %604 to %"class.std::_Deque_base"*
  %606 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %605, i32 0, i32 0
  %607 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %606, i32 0, i32 3
  %608 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %607, i32 0, i32 3
  %609 = load i32**, i32*** %608, align 8
  %610 = getelementptr inbounds i32*, i32** %609, i64 1
  %611 = load volatile i32***, i32**** %11
  %612 = load i32**, i32*** %611, align 8
  %613 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %603, i32** %610, i32** %612)
  %614 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %615 = bitcast %"class.std::deque"* %614 to %"class.std::_Deque_base"*
  %616 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %617 = bitcast %"class.std::deque"* %616 to %"class.std::_Deque_base"*
  %618 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %617, i32 0, i32 0
  %619 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %618, i32 0, i32 0
  %620 = load i32**, i32*** %619, align 8
  %621 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %622 = bitcast %"class.std::deque"* %621 to %"class.std::_Deque_base"*
  %623 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %622, i32 0, i32 0
  %624 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %623, i32 0, i32 1
  %625 = load i64, i64* %624, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %615, i32** %620, i64 %625) #3
  %626 = load volatile i32***, i32**** %9
  %627 = load i32**, i32*** %626, align 8
  %628 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %629 = bitcast %"class.std::deque"* %628 to %"class.std::_Deque_base"*
  %630 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %629, i32 0, i32 0
  %631 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %630, i32 0, i32 0
  store i32** %627, i32*** %631, align 8
  %632 = load volatile i64*, i64** %10
  %633 = load i64, i64* %632, align 8
  %634 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %635 = bitcast %"class.std::deque"* %634 to %"class.std::_Deque_base"*
  %636 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %635, i32 0, i32 0
  %637 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %636, i32 0, i32 1
  store i64 %633, i64* %637, align 8
  store i32 1546154856, i32* %27
  br label %655

; <label>:638:                                    ; preds = %30
  %639 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %640 = bitcast %"class.std::deque"* %639 to %"class.std::_Deque_base"*
  %641 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %640, i32 0, i32 0
  %642 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %641, i32 0, i32 2
  %643 = load volatile i32***, i32**** %11
  %644 = load i32**, i32*** %643, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %642, i32** %644) #3
  %645 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %646 = bitcast %"class.std::deque"* %645 to %"class.std::_Deque_base"*
  %647 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %646, i32 0, i32 0
  %648 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %647, i32 0, i32 3
  %649 = load volatile i32***, i32**** %11
  %650 = load i32**, i32*** %649, align 8
  %651 = load volatile i64*, i64** %13
  %652 = load i64, i64* %651, align 8
  %653 = getelementptr inbounds i32*, i32** %650, i64 %652
  %654 = getelementptr inbounds i32*, i32** %653, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %648, i32** %654) #3
  store i32 539018562, i32* %27
  br label %655

; <label>:655:                                    ; preds = %638, %593, %592, %591, %485, %453, %425, %424, %352, %335, %334, %319, %304, %301, %259, %258, %230, %214, %194, %177, %162, %161, %158, %136, %133, %53, %33, %32
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #4 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.392
  %8 = load i32, i32* @y.393
  %9 = sub i32 %7, 1394683196
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1394683196
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1001035779, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1001035779, label %21
    i32 1042297409, label %41
    i32 -811517076, label %65
    i32 -1230391644, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1042297409, i32 -1230391644
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  %45 = alloca i8, align 1
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = load i32**, i32*** %44, align 8
  %49 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %46, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.392
  %51 = load i32, i32* @y.393
  %52 = sub i32 %50, -1316838084
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1316838084
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -811517076, i32 -1230391644
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i32**, i32*** %4
  ret i32** %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i8, align 1
  store i32** %0, i32*** %68, align 8
  store i32** %1, i32*** %69, align 8
  store i32** %2, i32*** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i32**, i32*** %68, align 8
  %73 = load i32**, i32*** %69, align 8
  %74 = load i32**, i32*** %70, align 8
  %75 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %72, i32** %73, i32** %74)
  store i32 1042297409, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #0 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 -2098657042, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %102
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -2098657042, label %22
    i32 1992734177, label %26
    i32 -1717340286, label %42
    i32 -1540030139, label %64
    i32 1621879884, label %65
    i32 -1250848194, label %69
  ]

; <label>:21:                                     ; preds = %19
  br label %102

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 1992734177, i32 1621879884
  store i32 %25, i32* %18
  br label %102

; <label>:26:                                     ; preds = %19
  %27 = load i32, i32* @x.396
  %28 = load i32, i32* @y.397
  %29 = sub i32 %27, 795330349
  %30 = sub i32 %29, 1
  %31 = add i32 %30, 795330349
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 -1717340286, i32 -1250848194
  store i32 %41, i32* %18
  br label %102

; <label>:42:                                     ; preds = %19
  %43 = load i32**, i32*** %7, align 8
  %44 = bitcast i32** %43 to i8*
  %45 = load i32**, i32*** %5, align 8
  %46 = bitcast i32** %45 to i8*
  %47 = load i64, i64* %8, align 8
  %48 = mul i64 8, %47
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %44, i8* %46, i64 %48, i32 8, i1 false)
  %49 = load i32, i32* @x.396
  %50 = load i32, i32* @y.397
  %51 = add i32 %49, -2099187696
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -2099187696
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1540030139, i32 -1250848194
  store i32 %63, i32* %18
  br label %102

; <label>:64:                                     ; preds = %19
  store i32 1621879884, i32* %18
  br label %102

; <label>:65:                                     ; preds = %19
  %66 = load i32**, i32*** %7, align 8
  %67 = load i64, i64* %8, align 8
  %68 = getelementptr inbounds i32*, i32** %66, i64 %67
  ret i32** %68

; <label>:69:                                     ; preds = %19
  %70 = load i32**, i32*** %7, align 8
  %71 = bitcast i32** %70 to i8*
  %72 = load i32**, i32*** %5, align 8
  %73 = bitcast i32** %72 to i8*
  %74 = load i64, i64* %8, align 8
  %75 = shl i64 8, %74
  %76 = sub i64 0, -1381215209136403406
  %77 = sub i64 %76, 8
  %78 = add i64 %77, -1381215209136403406
  %79 = sub i64 0, 8
  %80 = sub i64 %78, 3959868716962696532
  %81 = add i64 %80, %74
  %82 = add i64 %81, 3959868716962696532
  %83 = add i64 %78, %74
  %84 = sub i64 8, 268140273744207388
  %85 = sub i64 %84, %74
  %86 = add i64 %85, 268140273744207388
  %87 = sub i64 8, %74
  %88 = mul i64 %86, %74
  %89 = sub i64 0, %74
  %90 = add i64 8, %89
  %91 = sub i64 8, %74
  %92 = mul i64 %90, %74
  %93 = sub i64 0, -1510556632700458394
  %94 = sub i64 %93, 8
  %95 = add i64 %94, -1510556632700458394
  %96 = sub i64 0, 8
  %97 = sub i64 %95, 8355227106594756393
  %98 = add i64 %97, %74
  %99 = add i64 %98, 8355227106594756393
  %100 = add i64 %95, %74
  %101 = mul i64 8, %74
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %71, i8* %73, i64 %101, i32 8, i1 false)
  store i32 -1717340286, i32* %18
  br label %102

; <label>:102:                                    ; preds = %69, %64, %42, %26, %22, %21
  br label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #4 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.398
  %6 = load i32, i32* @y.399
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 492413771, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 492413771, label %18
    i32 -227853814, label %38
    i32 1935551672, label %68
    i32 -1322575316, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -227853814, i32 -1322575316
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca i32**, align 8
  store i32** %0, i32*** %39, align 8
  %40 = load i32**, i32*** %39, align 8
  store i32** %40, i32*** %2
  %41 = load i32, i32* @x.398
  %42 = load i32, i32* @y.399
  %43 = sub i32 %41, 181817964
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 181817964
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1935551672, i32 -1322575316
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile i32**, i32*** %2
  ret i32** %69

; <label>:70:                                     ; preds = %15
  %71 = alloca i32**, align 8
  store i32** %0, i32*** %71, align 8
  %72 = load i32**, i32*** %71, align 8
  store i32 -227853814, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.400
  %8 = load i32, i32* @y.401
  %9 = sub i32 %7, 428947488
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 428947488
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 592920846, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %91
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 592920846, label %21
    i32 -796975590, label %41
    i32 -366467503, label %78
    i32 -603421688, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %91

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -796975590, i32 -603421688
  store i32 %40, i32* %17
  br label %91

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  %45 = load i32**, i32*** %42, align 8
  %46 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %45)
  %47 = load i32**, i32*** %43, align 8
  %48 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %47)
  %49 = load i32**, i32*** %44, align 8
  %50 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %49)
  %51 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %46, i32** %48, i32** %50)
  store i32** %51, i32*** %4
  %52 = load i32, i32* @x.400
  %53 = load i32, i32* @y.401
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -366467503, i32 -603421688
  store i32 %77, i32* %17
  br label %91

; <label>:78:                                     ; preds = %18
  %79 = load volatile i32**, i32*** %4
  ret i32** %79

; <label>:80:                                     ; preds = %18
  %81 = alloca i32**, align 8
  %82 = alloca i32**, align 8
  %83 = alloca i32**, align 8
  store i32** %0, i32*** %81, align 8
  store i32** %1, i32*** %82, align 8
  store i32** %2, i32*** %83, align 8
  %84 = load i32**, i32*** %81, align 8
  %85 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %84)
  %86 = load i32**, i32*** %82, align 8
  %87 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %86)
  %88 = load i32**, i32*** %83, align 8
  %89 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %88)
  %90 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %85, i32** %87, i32** %89)
  store i32 -796975590, i32* %17
  br label %91

; <label>:91:                                     ; preds = %80, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i8, align 1
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32**, i32*** %5, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %8, i32** %9, i32** %10)
  ret i32** %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32***
  %7 = alloca i32***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.404
  %11 = load i32, i32* @y.405
  %12 = add i32 %10, -1053261805
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -1053261805
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1390961452, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %166
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1390961452, label %24
    i32 1115086797, label %44
    i32 1571366957, label %79
    i32 585097985, label %82
    i32 478272992, label %99
    i32 -462324410, label %108
  ]

; <label>:23:                                     ; preds = %21
  br label %166

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 1115086797, i32 -462324410
  store i32 %43, i32* %20
  br label %166

; <label>:44:                                     ; preds = %21
  %45 = alloca i32**, align 8
  store i32*** %45, i32**** %7
  %46 = alloca i32**, align 8
  %47 = alloca i32**, align 8
  store i32*** %47, i32**** %6
  %48 = alloca i64, align 8
  store i64* %48, i64** %5
  %49 = load volatile i32***, i32**** %7
  store i32** %0, i32*** %49, align 8
  store i32** %1, i32*** %46, align 8
  %50 = load volatile i32***, i32**** %6
  store i32** %2, i32*** %50, align 8
  %51 = load i32**, i32*** %46, align 8
  %52 = load volatile i32***, i32**** %7
  %53 = load i32**, i32*** %52, align 8
  %54 = ptrtoint i32** %51 to i64
  %55 = ptrtoint i32** %53 to i64
  %56 = sub i64 %54, -4879750748226939543
  %57 = sub i64 %56, %55
  %58 = add i64 %57, -4879750748226939543
  %59 = sub i64 %54, %55
  %60 = sdiv exact i64 %58, 8
  %61 = load volatile i64*, i64** %5
  store i64 %60, i64* %61, align 8
  %62 = load volatile i64*, i64** %5
  %63 = load i64, i64* %62, align 8
  %64 = icmp ne i64 %63, 0
  store i1 %64, i1* %4
  %65 = load i32, i32* @x.404
  %66 = load i32, i32* @y.405
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 1571366957, i32 -462324410
  store i32 %78, i32* %20
  br label %166

; <label>:79:                                     ; preds = %21
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 585097985, i32 478272992
  store i32 %81, i32* %20
  br label %166

; <label>:82:                                     ; preds = %21
  %83 = load volatile i32***, i32**** %6
  %84 = load i32**, i32*** %83, align 8
  %85 = load volatile i64*, i64** %5
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 0, -6076648820475314716
  %88 = sub i64 %87, %86
  %89 = add i64 %88, -6076648820475314716
  %90 = sub i64 0, %86
  %91 = getelementptr inbounds i32*, i32** %84, i64 %89
  %92 = bitcast i32** %91 to i8*
  %93 = load volatile i32***, i32**** %7
  %94 = load i32**, i32*** %93, align 8
  %95 = bitcast i32** %94 to i8*
  %96 = load volatile i64*, i64** %5
  %97 = load i64, i64* %96, align 8
  %98 = mul i64 8, %97
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %92, i8* %95, i64 %98, i32 8, i1 false)
  store i32 478272992, i32* %20
  br label %166

; <label>:99:                                     ; preds = %21
  %100 = load volatile i32***, i32**** %6
  %101 = load i32**, i32*** %100, align 8
  %102 = load volatile i64*, i64** %5
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 0, %103
  %105 = add i64 0, %104
  %106 = sub i64 0, %103
  %107 = getelementptr inbounds i32*, i32** %101, i64 %105
  ret i32** %107

; <label>:108:                                    ; preds = %21
  %109 = alloca i32**, align 8
  %110 = alloca i32**, align 8
  %111 = alloca i32**, align 8
  %112 = alloca i64, align 8
  store i32** %0, i32*** %109, align 8
  store i32** %1, i32*** %110, align 8
  store i32** %2, i32*** %111, align 8
  %113 = load i32**, i32*** %110, align 8
  %114 = load i32**, i32*** %109, align 8
  %115 = ptrtoint i32** %113 to i64
  %116 = ptrtoint i32** %114 to i64
  %117 = sub i64 %115, 1780979447500800071
  %118 = sub i64 %117, %116
  %119 = add i64 %118, 1780979447500800071
  %120 = sub i64 %115, %116
  %121 = mul i64 %119, %116
  %122 = sub i64 0, %116
  %123 = add i64 %115, %122
  %124 = sub i64 %115, %116
  %125 = mul i64 %123, %116
  %126 = add i64 0, 5691942659428930695
  %127 = sub i64 %126, %115
  %128 = sub i64 %127, 5691942659428930695
  %129 = sub i64 0, %115
  %130 = add i64 %128, 9205441493160910034
  %131 = add i64 %130, %116
  %132 = sub i64 %131, 9205441493160910034
  %133 = add i64 %128, %116
  %134 = shl i64 %115, %116
  %135 = sub i64 %115, 18124321830561332
  %136 = sub i64 %135, %116
  %137 = add i64 %136, 18124321830561332
  %138 = sub i64 %115, %116
  %139 = sub i64 0, %137
  %140 = add i64 0, %139
  %141 = sub i64 0, %137
  %142 = add i64 %140, -2338361572914755077
  %143 = add i64 %142, 8
  %144 = sub i64 %143, -2338361572914755077
  %145 = add i64 %140, 8
  %146 = sub i64 0, %137
  %147 = add i64 0, %146
  %148 = sub i64 0, %137
  %149 = sub i64 0, 8
  %150 = sub i64 %147, %149
  %151 = add i64 %147, 8
  %152 = add i64 %137, 7140219804462313199
  %153 = sub i64 %152, 8
  %154 = sub i64 %153, 7140219804462313199
  %155 = sub i64 %137, 8
  %156 = mul i64 %154, 8
  %157 = add i64 %137, -2504310081819443095
  %158 = sub i64 %157, 8
  %159 = sub i64 %158, -2504310081819443095
  %160 = sub i64 %137, 8
  %161 = mul i64 %159, 8
  %162 = shl i64 %137, 8
  %163 = sdiv exact i64 %137, 8
  store i64 %163, i64* %112, align 8
  %164 = load i64, i64* %112, align 8
  %165 = icmp ne i64 %164, 0
  store i32 1115086797, i32* %20
  br label %166

; <label>:166:                                    ; preds = %108, %82, %79, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.406
  %6 = load i32, i32* @y.407
  %7 = add i32 %5, 1376138840
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1376138840
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 260269556, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 260269556, label %19
    i32 -1578092809, label %39
    i32 -1050219675, label %76
    i32 731062310, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1578092809, i32 731062310
  store i32 %38, i32* %15
  br label %88

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %40, align 8
  %41 = load %"class.std::deque"*, %"class.std::deque"** %40, align 8
  %42 = bitcast %"class.std::deque"* %41 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 3
  %45 = bitcast %"class.std::deque"* %41 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 2
  %48 = call i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %44, %"struct.std::_Deque_iterator"* dereferenceable(32) %47) #3
  store i64 %48, i64* %2
  %49 = load i32, i32* @x.406
  %50 = load i32, i32* @y.407
  %51 = add i32 %49, -876222849
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -876222849
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1050219675, i32 731062310
  store i32 %75, i32* %15
  br label %88

; <label>:76:                                     ; preds = %16
  %77 = load volatile i64, i64* %2
  ret i64 %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %79, align 8
  %80 = load %"class.std::deque"*, %"class.std::deque"** %79, align 8
  %81 = bitcast %"class.std::deque"* %80 to %"class.std::_Deque_base"*
  %82 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %82, i32 0, i32 3
  %84 = bitcast %"class.std::deque"* %80 to %"class.std::_Deque_base"*
  %85 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %85, i32 0, i32 2
  %87 = call i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %83, %"struct.std::_Deque_iterator"* dereferenceable(32) %86) #3
  store i32 -1578092809, i32* %15
  br label %88

; <label>:88:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 3
  %8 = load i32**, i32*** %7, align 8
  %9 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %9, i32 0, i32 3
  %11 = load i32**, i32*** %10, align 8
  %12 = ptrtoint i32** %8 to i64
  %13 = ptrtoint i32** %11 to i64
  %14 = sub i64 %12, 7363425576747235731
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 7363425576747235731
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  %19 = sub i64 %18, 5534800523344015527
  %20 = sub i64 %19, 1
  %21 = add i64 %20, 5534800523344015527
  %22 = sub nsw i64 %18, 1
  %23 = mul nsw i64 %5, %21
  %24 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %25 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %24, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 1
  %29 = load i32*, i32** %28, align 8
  %30 = ptrtoint i32* %26 to i64
  %31 = ptrtoint i32* %29 to i64
  %32 = sub i64 %30, 4308145543087145090
  %33 = sub i64 %32, %31
  %34 = add i64 %33, 4308145543087145090
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 4
  %37 = add i64 %23, -3222790690693908223
  %38 = add i64 %37, %36
  %39 = sub i64 %38, -3222790690693908223
  %40 = add nsw i64 %23, %36
  %41 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %41, i32 0, i32 2
  %43 = load i32*, i32** %42, align 8
  %44 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = ptrtoint i32* %43 to i64
  %48 = ptrtoint i32* %46 to i64
  %49 = sub i64 %47, 4096783897476432636
  %50 = sub i64 %49, %48
  %51 = add i64 %50, 4096783897476432636
  %52 = sub i64 %47, %48
  %53 = sdiv exact i64 %51, 4
  %54 = sub i64 0, %53
  %55 = sub i64 %39, %54
  %56 = add nsw i64 %39, %53
  ret i64 %55
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE4backEv(%"class.std::deque"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.410
  %6 = load i32, i32* @y.411
  %7 = add i32 %5, 1130220692
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1130220692
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1348562223, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1348562223, label %19
    i32 2012863428, label %27
    i32 -1556135878, label %60
    i32 1652125913, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2012863428, i32 1652125913
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  %29 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %28, align 8
  %30 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %29, %"class.std::deque"* %30) #3
  %31 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEmmEv(%"struct.std::_Deque_iterator"* %29) #3
  %32 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %29) #3
  store i32* %32, i32** %2
  %33 = load i32, i32* @x.410
  %34 = load i32, i32* @y.411
  %35 = add i32 %33, 1581630977
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1581630977
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1556135878, i32 1652125913
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i32*, i32** %2
  ret i32* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::deque"*, align 8
  %64 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %63, align 8
  %65 = load %"class.std::deque"*, %"class.std::deque"** %63, align 8
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %64, %"class.std::deque"* %65) #3
  %66 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEmmEv(%"struct.std::_Deque_iterator"* %64) #3
  %67 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %64) #3
  store i32 2012863428, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorIiRiPiEmmEv(%"struct.std::_Deque_iterator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"struct.std::_Deque_iterator"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.412
  %7 = load i32, i32* @y.413
  %8 = sub i32 %6, 1209061313
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1209061313
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1371432777, i32* %16
  br label %17

; <label>:17:                                     ; preds = %1, %93
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1371432777, label %20
    i32 -954937872, label %40
    i32 -101482190, label %65
    i32 2046560021, label %68
    i32 494477124, label %79
    i32 1272595739, label %85
  ]

; <label>:19:                                     ; preds = %17
  br label %93

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -954937872, i32 1272595739
  store i32 %39, i32* %16
  br label %93

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %41, align 8
  %42 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  store %"struct.std::_Deque_iterator"* %42, %"struct.std::_Deque_iterator"** %3
  %43 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %46, i32 0, i32 1
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %45, %48
  store i1 %49, i1* %2
  %50 = load i32, i32* @x.412
  %51 = load i32, i32* @y.413
  %52 = add i32 %50, -632013440
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -632013440
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -101482190, i32 1272595739
  store i32 %64, i32* %16
  br label %93

; <label>:65:                                     ; preds = %17
  %66 = load volatile i1, i1* %2
  %67 = select i1 %66, i32 2046560021, i32 494477124
  store i32 %67, i32* %16
  br label %93

; <label>:68:                                     ; preds = %17
  %69 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %69, i32 0, i32 3
  %71 = load i32**, i32*** %70, align 8
  %72 = getelementptr inbounds i32*, i32** %71, i64 -1
  %73 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %73, i32** %72) #3
  %74 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %75 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %74, i32 0, i32 2
  %76 = load i32*, i32** %75, align 8
  %77 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %77, i32 0, i32 0
  store i32* %76, i32** %78, align 8
  store i32 494477124, i32* %16
  br label %93

; <label>:79:                                     ; preds = %17
  %80 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %81 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %80, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = getelementptr inbounds i32, i32* %82, i32 -1
  store i32* %83, i32** %81, align 8
  %84 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  ret %"struct.std::_Deque_iterator"* %84

; <label>:85:                                     ; preds = %17
  %86 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %86, align 8
  %87 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %86, align 8
  %88 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %87, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %87, i32 0, i32 1
  %91 = load i32*, i32** %90, align 8
  %92 = icmp eq i32* %89, %91
  store i32 -954937872, i32* %16
  br label %93

; <label>:93:                                     ; preds = %85, %68, %65, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE8pop_backEv(%"class.std::deque"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.416
  %3 = load i32, i32* @y.417
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %242

; <label>:27:                                     ; preds = %1, %242
  %28 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %28, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %36, i32 0, i32 3
  %38 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %37, i32 0, i32 1
  %39 = load i32*, i32** %38, align 8
  %40 = icmp ne i32* %34, %39
  %41 = load i32, i32* @x.416
  %42 = load i32, i32* @y.417
  %43 = sub i32 %41, 2091600082
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 2091600082
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %242

; <label>:67:                                     ; preds = %27
  br i1 %40, label %68, label %112

; <label>:68:                                     ; preds = %67
  %69 = load i32, i32* @x.416
  %70 = load i32, i32* @y.417
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  br i1 %80, label %82, label %256

; <label>:82:                                     ; preds = %68, %256
  %83 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %84 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %84, i32 0, i32 3
  %86 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %85, i32 0, i32 0
  %87 = load i32*, i32** %86, align 8
  %88 = getelementptr inbounds i32, i32* %87, i32 -1
  store i32* %88, i32** %86, align 8
  %89 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %90 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %89, i32 0, i32 0
  %91 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %90 to %"class.std::allocator.7"*
  %92 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %93 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %93, i32 0, i32 3
  %95 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %94, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = load i32, i32* @x.416
  %98 = load i32, i32* @y.417
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %256

; <label>:110:                                    ; preds = %82
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.7"* dereferenceable(1) %91, i32* %96)
          to label %111 unwind label %197

; <label>:111:                                    ; preds = %110
  br label %155

; <label>:112:                                    ; preds = %67
  %113 = load i32, i32* @x.416
  %114 = load i32, i32* @y.417
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %271

; <label>:138:                                    ; preds = %112, %271
  %139 = load i32, i32* @x.416
  %140 = load i32, i32* @y.417
  %141 = sub i32 %139, 1835343047
  %142 = sub i32 %141, 1
  %143 = add i32 %142, 1835343047
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = and i1 %147, %148
  %150 = xor i1 %147, %148
  %151 = or i1 %149, %150
  %152 = or i1 %147, %148
  br i1 %151, label %153, label %271

; <label>:153:                                    ; preds = %138
  invoke void @_ZNSt5dequeIiSaIiEE15_M_pop_back_auxEv(%"class.std::deque"* %29)
          to label %154 unwind label %197

; <label>:154:                                    ; preds = %153
  br label %155

; <label>:155:                                    ; preds = %154, %111
  %156 = load i32, i32* @x.416
  %157 = load i32, i32* @y.417
  %158 = sub i32 0, 1
  %159 = add i32 %156, %158
  %160 = sub i32 %156, 1
  %161 = mul i32 %156, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %157, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  br i1 %167, label %169, label %272

; <label>:169:                                    ; preds = %155, %272
  %170 = load i32, i32* @x.416
  %171 = load i32, i32* @y.417
  %172 = add i32 %170, 844514995
  %173 = sub i32 %172, 1
  %174 = sub i32 %173, 844514995
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = xor i1 %178, true
  %181 = xor i1 %179, true
  %182 = xor i1 true, true
  %183 = and i1 %180, true
  %184 = and i1 %178, %182
  %185 = and i1 %181, true
  %186 = and i1 %179, %182
  %187 = or i1 %183, %184
  %188 = or i1 %185, %186
  %189 = xor i1 %187, %188
  %190 = or i1 %180, %181
  %191 = xor i1 %190, true
  %192 = or i1 true, %182
  %193 = and i1 %191, %192
  %194 = or i1 %189, %193
  %195 = or i1 %178, %179
  br i1 %194, label %196, label %272

; <label>:196:                                    ; preds = %169
  ret void

; <label>:197:                                    ; preds = %153, %110
  %198 = load i32, i32* @x.416
  %199 = load i32, i32* @y.417
  %200 = sub i32 %198, 265230188
  %201 = sub i32 %200, 1
  %202 = add i32 %201, 265230188
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = xor i1 %206, true
  %209 = xor i1 %207, true
  %210 = xor i1 true, true
  %211 = and i1 %208, true
  %212 = and i1 %206, %210
  %213 = and i1 %209, true
  %214 = and i1 %207, %210
  %215 = or i1 %211, %212
  %216 = or i1 %213, %214
  %217 = xor i1 %215, %216
  %218 = or i1 %208, %209
  %219 = xor i1 %218, true
  %220 = or i1 true, %210
  %221 = and i1 %219, %220
  %222 = or i1 %217, %221
  %223 = or i1 %206, %207
  br i1 %222, label %224, label %273

; <label>:224:                                    ; preds = %197, %273
  %225 = landingpad { i8*, i32 }
          catch i8* null
  %226 = extractvalue { i8*, i32 } %225, 0
  call void @__clang_call_terminate(i8* %226) #12
  %227 = load i32, i32* @x.416
  %228 = load i32, i32* @y.417
  %229 = sub i32 %227, 483079301
  %230 = sub i32 %229, 1
  %231 = add i32 %230, 483079301
  %232 = sub i32 %227, 1
  %233 = mul i32 %227, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %228, 10
  %237 = and i1 %235, %236
  %238 = xor i1 %235, %236
  %239 = or i1 %237, %238
  %240 = or i1 %235, %236
  br i1 %239, label %241, label %273

; <label>:241:                                    ; preds = %224
  unreachable

; <label>:242:                                    ; preds = %27, %1
  %243 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %243, align 8
  %244 = load %"class.std::deque"*, %"class.std::deque"** %243, align 8
  %245 = bitcast %"class.std::deque"* %244 to %"class.std::_Deque_base"*
  %246 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %245, i32 0, i32 0
  %247 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %246, i32 0, i32 3
  %248 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %247, i32 0, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = bitcast %"class.std::deque"* %244 to %"class.std::_Deque_base"*
  %251 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %250, i32 0, i32 0
  %252 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %251, i32 0, i32 3
  %253 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %252, i32 0, i32 1
  %254 = load i32*, i32** %253, align 8
  %255 = icmp ne i32* %249, %254
  br label %27

; <label>:256:                                    ; preds = %82, %68
  %257 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %258 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %257, i32 0, i32 0
  %259 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %258, i32 0, i32 3
  %260 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %259, i32 0, i32 0
  %261 = load i32*, i32** %260, align 8
  %262 = getelementptr inbounds i32, i32* %261, i32 -1
  store i32* %262, i32** %260, align 8
  %263 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %264 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %263, i32 0, i32 0
  %265 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %264 to %"class.std::allocator.7"*
  %266 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %267 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %266, i32 0, i32 0
  %268 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %267, i32 0, i32 3
  %269 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %268, i32 0, i32 0
  %270 = load i32*, i32** %269, align 8
  br label %82

; <label>:271:                                    ; preds = %138, %112
  br label %138

; <label>:272:                                    ; preds = %169, %155
  br label %169

; <label>:273:                                    ; preds = %224, %197
  %274 = landingpad { i8*, i32 }
          catch i8* null
  %275 = extractvalue { i8*, i32 } %274, 0
  call void @__clang_call_terminate(i8* %275) #12
  br label %224
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.7"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.8"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_pop_back_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 3
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %4, i32* %9) #3
  %10 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %14 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %13, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %14, i32 0, i32 3
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 3
  %17 = load i32**, i32*** %16, align 8
  %18 = getelementptr inbounds i32*, i32** %17, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %12, i32** %18) #3
  %19 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 2
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 -1
  %25 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %26 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %26, i32 0, i32 3
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 0
  store i32* %24, i32** %28, align 8
  %29 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %30 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %29) #3
  %31 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 3
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.7"* dereferenceable(1) %30, i32* %35)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.8"*, i32*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %4 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.0"*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"class.std::vector.5"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.424
  %9 = load i32, i32* @y.425
  %10 = sub i32 %8, 1825858811
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1825858811
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1716559039, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %220
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1716559039, label %22
    i32 2145047431, label %42
    i32 -2126521465, label %84
    i32 -1721173679, label %87
    i32 -329576760, label %103
    i32 406441806, label %137
    i32 -1528229907, label %138
    i32 1961206356, label %143
    i32 -383875579, label %158
    i32 1269225854, label %186
    i32 1958506248, label %187
    i32 1587843395, label %200
    i32 1217156298, label %219
  ]

; <label>:21:                                     ; preds = %19
  br label %220

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 2145047431, i32 1958506248
  store i32 %41, i32* %18
  br label %220

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector.0"*, align 8
  %44 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"** %44, %"class.std::vector.5"*** %5
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %43, align 8
  %45 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %5
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %45, align 8
  %46 = load %"class.std::vector.0"*, %"class.std::vector.0"** %43, align 8
  store %"class.std::vector.0"* %46, %"class.std::vector.0"** %4
  %47 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %48 = bitcast %"class.std::vector.0"* %47 to %"struct.std::_Vector_base.1"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %49, i32 0, i32 1
  %51 = load %"class.std::vector.5"*, %"class.std::vector.5"** %50, align 8
  %52 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %53 = bitcast %"class.std::vector.0"* %52 to %"struct.std::_Vector_base.1"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %54, i32 0, i32 2
  %56 = load %"class.std::vector.5"*, %"class.std::vector.5"** %55, align 8
  %57 = icmp ne %"class.std::vector.5"* %51, %56
  store i1 %57, i1* %3
  %58 = load i32, i32* @x.424
  %59 = load i32, i32* @y.425
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 -2126521465, i32 1958506248
  store i32 %83, i32* %18
  br label %220

; <label>:84:                                     ; preds = %19
  %85 = load volatile i1, i1* %3
  %86 = select i1 %85, i32 -1721173679, i32 -1528229907
  store i32 %86, i32* %18
  br label %220

; <label>:87:                                     ; preds = %19
  %88 = load i32, i32* @x.424
  %89 = load i32, i32* @y.425
  %90 = add i32 %88, -317443413
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -317443413
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 -329576760, i32 1587843395
  store i32 %102, i32* %18
  br label %220

; <label>:103:                                    ; preds = %19
  %104 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %105 = bitcast %"class.std::vector.0"* %104 to %"struct.std::_Vector_base.1"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %105, i32 0, i32 0
  %107 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %106 to %"class.std::allocator.2"*
  %108 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %109 = bitcast %"class.std::vector.0"* %108 to %"struct.std::_Vector_base.1"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %110, i32 0, i32 1
  %112 = load %"class.std::vector.5"*, %"class.std::vector.5"** %111, align 8
  %113 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %5
  %114 = load %"class.std::vector.5"*, %"class.std::vector.5"** %113, align 8
  %115 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.5"* dereferenceable(24) %114) #3
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %107, %"class.std::vector.5"* %112, %"class.std::vector.5"* dereferenceable(24) %115)
  %116 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %117 = bitcast %"class.std::vector.0"* %116 to %"struct.std::_Vector_base.1"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %118, i32 0, i32 1
  %120 = load %"class.std::vector.5"*, %"class.std::vector.5"** %119, align 8
  %121 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %120, i32 1
  store %"class.std::vector.5"* %121, %"class.std::vector.5"** %119, align 8
  %122 = load i32, i32* @x.424
  %123 = load i32, i32* @y.425
  %124 = sub i32 %122, 1141186582
  %125 = sub i32 %124, 1
  %126 = add i32 %125, 1141186582
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  %136 = select i1 %134, i32 406441806, i32 1587843395
  store i32 %136, i32* %18
  br label %220

; <label>:137:                                    ; preds = %19
  store i32 1961206356, i32* %18
  br label %220

; <label>:138:                                    ; preds = %19
  %139 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %5
  %140 = load %"class.std::vector.5"*, %"class.std::vector.5"** %139, align 8
  %141 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.5"* dereferenceable(24) %140) #3
  %142 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.0"* %142, %"class.std::vector.5"* dereferenceable(24) %141)
  store i32 1961206356, i32* %18
  br label %220

; <label>:143:                                    ; preds = %19
  %144 = load i32, i32* @x.424
  %145 = load i32, i32* @y.425
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  %157 = select i1 %155, i32 -383875579, i32 1217156298
  store i32 %157, i32* %18
  br label %220

; <label>:158:                                    ; preds = %19
  %159 = load i32, i32* @x.424
  %160 = load i32, i32* @y.425
  %161 = add i32 %159, 1619523139
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, 1619523139
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 true, true
  %172 = and i1 %169, true
  %173 = and i1 %167, %171
  %174 = and i1 %170, true
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 true, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  %185 = select i1 %183, i32 1269225854, i32 1217156298
  store i32 %185, i32* %18
  br label %220

; <label>:186:                                    ; preds = %19
  ret void

; <label>:187:                                    ; preds = %19
  %188 = alloca %"class.std::vector.0"*, align 8
  %189 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %188, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %189, align 8
  %190 = load %"class.std::vector.0"*, %"class.std::vector.0"** %188, align 8
  %191 = bitcast %"class.std::vector.0"* %190 to %"struct.std::_Vector_base.1"*
  %192 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %191, i32 0, i32 0
  %193 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %192, i32 0, i32 1
  %194 = load %"class.std::vector.5"*, %"class.std::vector.5"** %193, align 8
  %195 = bitcast %"class.std::vector.0"* %190 to %"struct.std::_Vector_base.1"*
  %196 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %195, i32 0, i32 0
  %197 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %196, i32 0, i32 2
  %198 = load %"class.std::vector.5"*, %"class.std::vector.5"** %197, align 8
  %199 = icmp ne %"class.std::vector.5"* %194, %198
  store i32 2145047431, i32* %18
  br label %220

; <label>:200:                                    ; preds = %19
  %201 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %202 = bitcast %"class.std::vector.0"* %201 to %"struct.std::_Vector_base.1"*
  %203 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %202, i32 0, i32 0
  %204 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %203 to %"class.std::allocator.2"*
  %205 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %206 = bitcast %"class.std::vector.0"* %205 to %"struct.std::_Vector_base.1"*
  %207 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %206, i32 0, i32 0
  %208 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %207, i32 0, i32 1
  %209 = load %"class.std::vector.5"*, %"class.std::vector.5"** %208, align 8
  %210 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %5
  %211 = load %"class.std::vector.5"*, %"class.std::vector.5"** %210, align 8
  %212 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.5"* dereferenceable(24) %211) #3
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %204, %"class.std::vector.5"* %209, %"class.std::vector.5"* dereferenceable(24) %212)
  %213 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %214 = bitcast %"class.std::vector.0"* %213 to %"struct.std::_Vector_base.1"*
  %215 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %214, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %215, i32 0, i32 1
  %217 = load %"class.std::vector.5"*, %"class.std::vector.5"** %216, align 8
  %218 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %217, i32 1
  store %"class.std::vector.5"* %218, %"class.std::vector.5"** %216, align 8
  store i32 -329576760, i32* %18
  br label %220

; <label>:219:                                    ; preds = %19
  store i32 -383875579, i32* %18
  br label %220

; <label>:220:                                    ; preds = %219, %200, %187, %158, %143, %138, %137, %103, %87, %84, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1), %"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %11 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.5"* dereferenceable(24) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE9constructIS3_JS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %8, %"class.std::vector.5"* %9, %"class.std::vector.5"* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.5"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  ret %"class.std::vector.5"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.0"*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.0"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"class.std::vector.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %12, i64 %13)
  store %"class.std::vector.5"* %14, %"class.std::vector.5"** %6, align 8
  %15 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  store %"class.std::vector.5"* %15, %"class.std::vector.5"** %7, align 8
  %16 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %17 to %"class.std::allocator.2"*
  %19 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %10) #3
  %21 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %19, i64 %20
  %22 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %23 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.5"* dereferenceable(24) %22) #3
  invoke void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %18, %"class.std::vector.5"* %21, %"class.std::vector.5"* dereferenceable(24) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %7, align 8
  %25 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %"class.std::vector.5"*, %"class.std::vector.5"** %27, align 8
  %29 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"class.std::vector.5"*, %"class.std::vector.5"** %31, align 8
  %33 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %34 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %35 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %34) #3
  %36 = invoke %"class.std::vector.5"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.5"* %28, %"class.std::vector.5"* %32, %"class.std::vector.5"* %33, %"class.std::allocator.2"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store %"class.std::vector.5"* %36, %"class.std::vector.5"** %7, align 8
  %38 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %39 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %38, i32 1
  store %"class.std::vector.5"* %39, %"class.std::vector.5"** %7, align 8
  br label %197

; <label>:40:                                     ; preds = %24, %2
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %8, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %9, align 4
  br label %44

; <label>:44:                                     ; preds = %40
  %45 = load i8*, i8** %8, align 8
  %46 = call i8* @__cxa_begin_catch(i8* %45) #3
  %47 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %48 = icmp ne %"class.std::vector.5"* %47, null
  br i1 %48, label %61, label %49

; <label>:49:                                     ; preds = %44
  %50 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %51 to %"class.std::allocator.2"*
  %53 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %54 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %10) #3
  %55 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %53, i64 %54
  invoke void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.2"* dereferenceable(1) %52, %"class.std::vector.5"* %55)
          to label %56 unwind label %57

; <label>:56:                                     ; preds = %49
  br label %108

; <label>:57:                                     ; preds = %195, %153, %106, %49
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %8, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %196 unwind label %276

; <label>:61:                                     ; preds = %44
  %62 = load i32, i32* @x.430
  %63 = load i32, i32* @y.431
  %64 = sub i32 %62, -791664027
  %65 = sub i32 %64, 1
  %66 = add i32 %65, -791664027
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %322

; <label>:76:                                     ; preds = %61, %322
  %77 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %78 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %79 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %80 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %79) #3
  %81 = load i32, i32* @x.430
  %82 = load i32, i32* @y.431
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  br i1 %104, label %106, label %322

; <label>:106:                                    ; preds = %76
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.5"* %77, %"class.std::vector.5"* %78, %"class.std::allocator.2"* dereferenceable(1) %80)
          to label %107 unwind label %57

; <label>:107:                                    ; preds = %106
  br label %108

; <label>:108:                                    ; preds = %107, %56
  %109 = load i32, i32* @x.430
  %110 = load i32, i32* @y.431
  %111 = add i32 %109, -644711829
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, -644711829
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 false, true
  %122 = and i1 %119, false
  %123 = and i1 %117, %121
  %124 = and i1 %120, false
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 false, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %327

; <label>:135:                                    ; preds = %108, %327
  %136 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %137 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %138 = load i64, i64* %5, align 8
  %139 = load i32, i32* @x.430
  %140 = load i32, i32* @y.431
  %141 = add i32 %139, 1317085739
  %142 = sub i32 %141, 1
  %143 = sub i32 %142, 1317085739
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = and i1 %147, %148
  %150 = xor i1 %147, %148
  %151 = or i1 %149, %150
  %152 = or i1 %147, %148
  br i1 %151, label %153, label %327

; <label>:153:                                    ; preds = %135
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %136, %"class.std::vector.5"* %137, i64 %138)
          to label %154 unwind label %57

; <label>:154:                                    ; preds = %153
  %155 = load i32, i32* @x.430
  %156 = load i32, i32* @y.431
  %157 = add i32 %155, -1164933411
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, -1164933411
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  br i1 %167, label %169, label %331

; <label>:169:                                    ; preds = %154, %331
  %170 = load i32, i32* @x.430
  %171 = load i32, i32* @y.431
  %172 = sub i32 0, 1
  %173 = add i32 %170, %172
  %174 = sub i32 %170, 1
  %175 = mul i32 %170, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %171, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 true, true
  %182 = and i1 %179, true
  %183 = and i1 %177, %181
  %184 = and i1 %180, true
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 true, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  br i1 %193, label %195, label %331

; <label>:195:                                    ; preds = %169
  invoke void @__cxa_rethrow() #13
          to label %279 unwind label %57

; <label>:196:                                    ; preds = %57
  br label %271

; <label>:197:                                    ; preds = %37
  %198 = load i32, i32* @x.430
  %199 = load i32, i32* @y.431
  %200 = add i32 %198, 641624681
  %201 = sub i32 %200, 1
  %202 = sub i32 %201, 641624681
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  br i1 %210, label %212, label %332

; <label>:212:                                    ; preds = %197, %332
  %213 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %214 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %213, i32 0, i32 0
  %215 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %214, i32 0, i32 0
  %216 = load %"class.std::vector.5"*, %"class.std::vector.5"** %215, align 8
  %217 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %218 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %218, i32 0, i32 1
  %220 = load %"class.std::vector.5"*, %"class.std::vector.5"** %219, align 8
  %221 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %222 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %221) #3
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.5"* %216, %"class.std::vector.5"* %220, %"class.std::allocator.2"* dereferenceable(1) %222)
  %223 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %224 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %225 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %224, i32 0, i32 0
  %226 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %225, i32 0, i32 0
  %227 = load %"class.std::vector.5"*, %"class.std::vector.5"** %226, align 8
  %228 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %229 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %228, i32 0, i32 0
  %230 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %229, i32 0, i32 2
  %231 = load %"class.std::vector.5"*, %"class.std::vector.5"** %230, align 8
  %232 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %233 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %232, i32 0, i32 0
  %234 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %233, i32 0, i32 0
  %235 = load %"class.std::vector.5"*, %"class.std::vector.5"** %234, align 8
  %236 = ptrtoint %"class.std::vector.5"* %231 to i64
  %237 = ptrtoint %"class.std::vector.5"* %235 to i64
  %238 = sub i64 0, %237
  %239 = add i64 %236, %238
  %240 = sub i64 %236, %237
  %241 = sdiv exact i64 %239, 24
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %223, %"class.std::vector.5"* %227, i64 %241)
  %242 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %243 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %244 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %243, i32 0, i32 0
  %245 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %244, i32 0, i32 0
  store %"class.std::vector.5"* %242, %"class.std::vector.5"** %245, align 8
  %246 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %247 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %248 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %247, i32 0, i32 0
  %249 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %248, i32 0, i32 1
  store %"class.std::vector.5"* %246, %"class.std::vector.5"** %249, align 8
  %250 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %251 = load i64, i64* %5, align 8
  %252 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %250, i64 %251
  %253 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %254 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %253, i32 0, i32 0
  %255 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %254, i32 0, i32 2
  store %"class.std::vector.5"* %252, %"class.std::vector.5"** %255, align 8
  %256 = load i32, i32* @x.430
  %257 = load i32, i32* @y.431
  %258 = add i32 %256, -29690326
  %259 = sub i32 %258, 1
  %260 = sub i32 %259, -29690326
  %261 = sub i32 %256, 1
  %262 = mul i32 %256, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %257, 10
  %266 = and i1 %264, %265
  %267 = xor i1 %264, %265
  %268 = or i1 %266, %267
  %269 = or i1 %264, %265
  br i1 %268, label %270, label %332

; <label>:270:                                    ; preds = %212
  ret void

; <label>:271:                                    ; preds = %196
  %272 = load i8*, i8** %8, align 8
  %273 = load i32, i32* %9, align 4
  %274 = insertvalue { i8*, i32 } undef, i8* %272, 0
  %275 = insertvalue { i8*, i32 } %274, i32 %273, 1
  resume { i8*, i32 } %275

; <label>:276:                                    ; preds = %57
  %277 = landingpad { i8*, i32 }
          catch i8* null
  %278 = extractvalue { i8*, i32 } %277, 0
  call void @__clang_call_terminate(i8* %278) #12
  unreachable

; <label>:279:                                    ; preds = %195
  %280 = load i32, i32* @x.430
  %281 = load i32, i32* @y.431
  %282 = sub i32 %280, -660674800
  %283 = sub i32 %282, 1
  %284 = add i32 %283, -660674800
  %285 = sub i32 %280, 1
  %286 = mul i32 %280, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %281, 10
  %290 = and i1 %288, %289
  %291 = xor i1 %288, %289
  %292 = or i1 %290, %291
  %293 = or i1 %288, %289
  br i1 %292, label %294, label %426

; <label>:294:                                    ; preds = %279, %426
  %295 = load i32, i32* @x.430
  %296 = load i32, i32* @y.431
  %297 = sub i32 %295, 953672513
  %298 = sub i32 %297, 1
  %299 = add i32 %298, 953672513
  %300 = sub i32 %295, 1
  %301 = mul i32 %295, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %296, 10
  %305 = xor i1 %303, true
  %306 = xor i1 %304, true
  %307 = xor i1 false, true
  %308 = and i1 %305, false
  %309 = and i1 %303, %307
  %310 = and i1 %306, false
  %311 = and i1 %304, %307
  %312 = or i1 %308, %309
  %313 = or i1 %310, %311
  %314 = xor i1 %312, %313
  %315 = or i1 %305, %306
  %316 = xor i1 %315, true
  %317 = or i1 false, %307
  %318 = and i1 %316, %317
  %319 = or i1 %314, %318
  %320 = or i1 %303, %304
  br i1 %319, label %321, label %426

; <label>:321:                                    ; preds = %294
  unreachable

; <label>:322:                                    ; preds = %76, %61
  %323 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %324 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %325 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %326 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %325) #3
  br label %76

; <label>:327:                                    ; preds = %135, %108
  %328 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %329 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %330 = load i64, i64* %5, align 8
  br label %135

; <label>:331:                                    ; preds = %169, %154
  br label %169

; <label>:332:                                    ; preds = %212, %197
  %333 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %334 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %333, i32 0, i32 0
  %335 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %334, i32 0, i32 0
  %336 = load %"class.std::vector.5"*, %"class.std::vector.5"** %335, align 8
  %337 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %338 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %337, i32 0, i32 0
  %339 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %338, i32 0, i32 1
  %340 = load %"class.std::vector.5"*, %"class.std::vector.5"** %339, align 8
  %341 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %342 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %341) #3
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.5"* %336, %"class.std::vector.5"* %340, %"class.std::allocator.2"* dereferenceable(1) %342)
  %343 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %344 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %345 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %344, i32 0, i32 0
  %346 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %345, i32 0, i32 0
  %347 = load %"class.std::vector.5"*, %"class.std::vector.5"** %346, align 8
  %348 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %349 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %348, i32 0, i32 0
  %350 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %349, i32 0, i32 2
  %351 = load %"class.std::vector.5"*, %"class.std::vector.5"** %350, align 8
  %352 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %353 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %352, i32 0, i32 0
  %354 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %353, i32 0, i32 0
  %355 = load %"class.std::vector.5"*, %"class.std::vector.5"** %354, align 8
  %356 = ptrtoint %"class.std::vector.5"* %351 to i64
  %357 = ptrtoint %"class.std::vector.5"* %355 to i64
  %358 = sub i64 0, %357
  %359 = add i64 %356, %358
  %360 = sub i64 %356, %357
  %361 = mul i64 %359, %357
  %362 = shl i64 %356, %357
  %363 = sub i64 %356, 7160805629592897549
  %364 = sub i64 %363, %357
  %365 = add i64 %364, 7160805629592897549
  %366 = sub i64 %356, %357
  %367 = mul i64 %365, %357
  %368 = shl i64 %356, %357
  %369 = sub i64 0, -6045493757069066661
  %370 = sub i64 %369, %356
  %371 = add i64 %370, -6045493757069066661
  %372 = sub i64 0, %356
  %373 = sub i64 0, %371
  %374 = sub i64 0, %357
  %375 = add i64 %373, %374
  %376 = sub i64 0, %375
  %377 = add i64 %371, %357
  %378 = sub i64 0, %357
  %379 = add i64 %356, %378
  %380 = sub i64 %356, %357
  %381 = sub i64 0, -7829343956755933620
  %382 = sub i64 %381, %379
  %383 = add i64 %382, -7829343956755933620
  %384 = sub i64 0, %379
  %385 = sub i64 0, 24
  %386 = sub i64 %383, %385
  %387 = add i64 %383, 24
  %388 = add i64 0, -6734884150559331264
  %389 = sub i64 %388, %379
  %390 = sub i64 %389, -6734884150559331264
  %391 = sub i64 0, %379
  %392 = sub i64 0, 24
  %393 = sub i64 %390, %392
  %394 = add i64 %390, 24
  %395 = add i64 0, 2169339733329811739
  %396 = sub i64 %395, %379
  %397 = sub i64 %396, 2169339733329811739
  %398 = sub i64 0, %379
  %399 = sub i64 0, 24
  %400 = sub i64 %397, %399
  %401 = add i64 %397, 24
  %402 = shl i64 %379, 24
  %403 = sub i64 0, %379
  %404 = add i64 0, %403
  %405 = sub i64 0, %379
  %406 = sub i64 0, %404
  %407 = sub i64 0, 24
  %408 = add i64 %406, %407
  %409 = sub i64 0, %408
  %410 = add i64 %404, 24
  %411 = sdiv exact i64 %379, 24
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %343, %"class.std::vector.5"* %347, i64 %411)
  %412 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %413 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %414 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %413, i32 0, i32 0
  %415 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %414, i32 0, i32 0
  store %"class.std::vector.5"* %412, %"class.std::vector.5"** %415, align 8
  %416 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %417 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %418 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %417, i32 0, i32 0
  %419 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %418, i32 0, i32 1
  store %"class.std::vector.5"* %416, %"class.std::vector.5"** %419, align 8
  %420 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %421 = load i64, i64* %5, align 8
  %422 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %420, i64 %421
  %423 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %424 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %423, i32 0, i32 0
  %425 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %424, i32 0, i32 2
  store %"class.std::vector.5"* %422, %"class.std::vector.5"** %425, align 8
  br label %212

; <label>:426:                                    ; preds = %294, %279
  br label %294
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE9constructIS3_JS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %9 = bitcast %"class.std::vector.5"* %8 to i8*
  %10 = bitcast i8* %9 to %"class.std::vector.5"*
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %12 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.5"* dereferenceable(24) %11) #3
  call void @_ZNSt6vectorIiSaIiEEC2EOS1_(%"class.std::vector.5"* %10, %"class.std::vector.5"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.0"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.0"*
  %8 = alloca %"class.std::vector.0"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  store %"class.std::vector.0"* %13, %"class.std::vector.0"** %7
  %14 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %15 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.0"* %14) #3
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %17 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %16) #3
  %18 = add i64 %15, -2540508754875460870
  %19 = sub i64 %18, %17
  %20 = sub i64 %19, -2540508754875460870
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 -501749051, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %190
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -501749051, label %28
    i32 -1192068180, label %33
    i32 1117765058, label %49
    i32 1068848788, label %78
    i32 -811802157, label %79
    i32 -26981953, label %94
    i32 -407753544, label %124
    i32 1006572057, label %127
    i32 -868704284, label %133
    i32 -1704817153, label %136
    i32 -1818434103, label %138
    i32 -1248306217, label %140
    i32 -138478463, label %142
  ]

; <label>:27:                                     ; preds = %25
  br label %190

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 -1192068180, i32 -811802157
  store i32 %32, i32* %23
  br label %190

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.434
  %35 = load i32, i32* @y.435
  %36 = sub i32 %34, 812159957
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 812159957
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1117765058, i32 -1248306217
  store i32 %48, i32* %23
  br label %190

; <label>:49:                                     ; preds = %25
  %50 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %50) #13
  %51 = load i32, i32* @x.434
  %52 = load i32, i32* @y.435
  %53 = sub i32 %51, 672998089
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 672998089
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1068848788, i32 -1248306217
  store i32 %77, i32* %23
  br label %190

; <label>:78:                                     ; preds = %25
  unreachable

; <label>:79:                                     ; preds = %25
  %80 = load i32, i32* @x.434
  %81 = load i32, i32* @y.435
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 -26981953, i32 -138478463
  store i32 %93, i32* %23
  br label %190

; <label>:94:                                     ; preds = %25
  %95 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %96 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %95) #3
  %97 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %98 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %97) #3
  store i64 %98, i64* %12, align 8
  %99 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %96, 1020697708239596065
  %102 = add i64 %101, %100
  %103 = sub i64 %102, 1020697708239596065
  %104 = add i64 %96, %100
  store i64 %103, i64* %11, align 8
  %105 = load i64, i64* %11, align 8
  %106 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %107 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %106) #3
  %108 = icmp ult i64 %105, %107
  store i1 %108, i1* %4
  %109 = load i32, i32* @x.434
  %110 = load i32, i32* @y.435
  %111 = add i32 %109, -510441157
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, -510441157
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 -407753544, i32 -138478463
  store i32 %123, i32* %23
  br label %190

; <label>:124:                                    ; preds = %25
  %125 = load volatile i1, i1* %4
  %126 = select i1 %125, i32 -868704284, i32 1006572057
  store i32 %126, i32* %23
  br label %190

; <label>:127:                                    ; preds = %25
  %128 = load i64, i64* %11, align 8
  %129 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %130 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.0"* %129) #3
  %131 = icmp ugt i64 %128, %130
  %132 = select i1 %131, i32 -868704284, i32 -1704817153
  store i32 %132, i32* %23
  br label %190

; <label>:133:                                    ; preds = %25
  %134 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %135 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.0"* %134) #3
  store i32 -1818434103, i32* %23
  store i64 %135, i64* %24
  br label %190

; <label>:136:                                    ; preds = %25
  %137 = load i64, i64* %11, align 8
  store i32 -1818434103, i32* %23
  store i64 %137, i64* %24
  br label %190

; <label>:138:                                    ; preds = %25
  %139 = load i64, i64* %24
  ret i64 %139

; <label>:140:                                    ; preds = %25
  %141 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %141) #13
  store i32 1117765058, i32* %23
  br label %190

; <label>:142:                                    ; preds = %25
  %143 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %144 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %143) #3
  %145 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %146 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %145) #3
  store i64 %146, i64* %12, align 8
  %147 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 0, -7039006172508748064
  %150 = sub i64 %149, %144
  %151 = add i64 %150, -7039006172508748064
  %152 = sub i64 0, %144
  %153 = add i64 %151, 4673332685090885332
  %154 = add i64 %153, %148
  %155 = sub i64 %154, 4673332685090885332
  %156 = add i64 %151, %148
  %157 = sub i64 %144, 6057097138593746642
  %158 = sub i64 %157, %148
  %159 = add i64 %158, 6057097138593746642
  %160 = sub i64 %144, %148
  %161 = mul i64 %159, %148
  %162 = add i64 0, 5545047187017101554
  %163 = sub i64 %162, %144
  %164 = sub i64 %163, 5545047187017101554
  %165 = sub i64 0, %144
  %166 = sub i64 0, %148
  %167 = sub i64 %164, %166
  %168 = add i64 %164, %148
  %169 = sub i64 %144, 4250019269076736275
  %170 = sub i64 %169, %148
  %171 = add i64 %170, 4250019269076736275
  %172 = sub i64 %144, %148
  %173 = mul i64 %171, %148
  %174 = sub i64 0, -4352951724507780085
  %175 = sub i64 %174, %144
  %176 = add i64 %175, -4352951724507780085
  %177 = sub i64 0, %144
  %178 = add i64 %176, -2999955341887599407
  %179 = add i64 %178, %148
  %180 = sub i64 %179, -2999955341887599407
  %181 = add i64 %176, %148
  %182 = add i64 %144, 2608791389689141636
  %183 = add i64 %182, %148
  %184 = sub i64 %183, 2608791389689141636
  %185 = add i64 %144, %148
  store i64 %184, i64* %11, align 8
  %186 = load i64, i64* %11, align 8
  %187 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %7
  %188 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.0"* %187) #3
  %189 = icmp ult i64 %186, %188
  store i32 -26981953, i32* %23
  br label %190

; <label>:190:                                    ; preds = %142, %140, %136, %133, %127, %124, %94, %79, %49, %33, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.1"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.436
  %9 = load i32, i32* @y.437
  %10 = add i32 %8, 1150497854
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1150497854
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1887537584, i32* %18
  %19 = alloca %"class.std::vector.5"*
  br label %20

; <label>:20:                                     ; preds = %2, %97
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 1887537584, label %23
    i32 1609957541, label %43
    i32 -365687723, label %78
    i32 938066132, label %81
    i32 1830579458, label %88
    i32 1924196061, label %89
    i32 -111099184, label %91
  ]

; <label>:22:                                     ; preds = %20
  br label %97

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1609957541, i32 -111099184
  store i32 %42, i32* %18
  br label %97

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.1"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %5
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %44, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  %47 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %44, align 8
  store %"struct.std::_Vector_base.1"* %47, %"struct.std::_Vector_base.1"** %4
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.436
  %52 = load i32, i32* @y.437
  %53 = add i32 %51, 844792004
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 844792004
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -365687723, i32 -111099184
  store i32 %77, i32* %18
  br label %97

; <label>:78:                                     ; preds = %20
  %79 = load volatile i1, i1* %3
  %80 = select i1 %79, i32 938066132, i32 1830579458
  store i32 %80, i32* %18
  br label %97

; <label>:81:                                     ; preds = %20
  %82 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4
  %83 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %82, i32 0, i32 0
  %84 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %83 to %"class.std::allocator.2"*
  %85 = load volatile i64*, i64** %5
  %86 = load i64, i64* %85, align 8
  %87 = call %"class.std::vector.5"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.2"* dereferenceable(1) %84, i64 %86)
  store i32 1924196061, i32* %18
  store %"class.std::vector.5"* %87, %"class.std::vector.5"** %19
  br label %97

; <label>:88:                                     ; preds = %20
  store i32 1924196061, i32* %18
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %19
  br label %97

; <label>:89:                                     ; preds = %20
  %90 = load %"class.std::vector.5"*, %"class.std::vector.5"** %19
  ret %"class.std::vector.5"* %90

; <label>:91:                                     ; preds = %20
  %92 = alloca %"struct.std::_Vector_base.1"*, align 8
  %93 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %92, align 8
  store i64 %1, i64* %93, align 8
  %94 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %92, align 8
  %95 = load i64, i64* %93, align 8
  %96 = icmp ne i64 %95, 0
  store i32 1609957541, i32* %18
  br label %97

; <label>:97:                                     ; preds = %91, %88, %81, %78, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.5"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.438
  %9 = load i32, i32* @y.439
  %10 = add i32 %8, 2051007756
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 2051007756
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1571233292, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %87
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1571233292, label %22
    i32 1741013306, label %30
    i32 226314394, label %65
    i32 -2138684486, label %67
  ]

; <label>:21:                                     ; preds = %19
  br label %87

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1741013306, i32 -2138684486
  store i32 %29, i32* %18
  br label %87

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.5"*, align 8
  %32 = alloca %"class.std::vector.5"*, align 8
  %33 = alloca %"class.std::vector.5"*, align 8
  %34 = alloca %"class.std::allocator.2"*, align 8
  %35 = alloca %"class.std::move_iterator.20", align 8
  %36 = alloca %"class.std::move_iterator.20", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %31, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %32, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %33, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %34, align 8
  %37 = load %"class.std::vector.5"*, %"class.std::vector.5"** %31, align 8
  %38 = call %"class.std::vector.5"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.5"* %37)
  %39 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %35, i32 0, i32 0
  store %"class.std::vector.5"* %38, %"class.std::vector.5"** %39, align 8
  %40 = load %"class.std::vector.5"*, %"class.std::vector.5"** %32, align 8
  %41 = call %"class.std::vector.5"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.5"* %40)
  %42 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %36, i32 0, i32 0
  store %"class.std::vector.5"* %41, %"class.std::vector.5"** %42, align 8
  %43 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %44 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %34, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %35, i32 0, i32 0
  %46 = load %"class.std::vector.5"*, %"class.std::vector.5"** %45, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %36, i32 0, i32 0
  %48 = load %"class.std::vector.5"*, %"class.std::vector.5"** %47, align 8
  %49 = call %"class.std::vector.5"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.5"* %46, %"class.std::vector.5"* %48, %"class.std::vector.5"* %43, %"class.std::allocator.2"* dereferenceable(1) %44)
  store %"class.std::vector.5"* %49, %"class.std::vector.5"** %5
  %50 = load i32, i32* @x.438
  %51 = load i32, i32* @y.439
  %52 = add i32 %50, 41378247
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 41378247
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 226314394, i32 -2138684486
  store i32 %64, i32* %18
  br label %87

; <label>:65:                                     ; preds = %19
  %66 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  ret %"class.std::vector.5"* %66

; <label>:67:                                     ; preds = %19
  %68 = alloca %"class.std::vector.5"*, align 8
  %69 = alloca %"class.std::vector.5"*, align 8
  %70 = alloca %"class.std::vector.5"*, align 8
  %71 = alloca %"class.std::allocator.2"*, align 8
  %72 = alloca %"class.std::move_iterator.20", align 8
  %73 = alloca %"class.std::move_iterator.20", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %68, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %69, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %70, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %71, align 8
  %74 = load %"class.std::vector.5"*, %"class.std::vector.5"** %68, align 8
  %75 = call %"class.std::vector.5"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.5"* %74)
  %76 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %72, i32 0, i32 0
  store %"class.std::vector.5"* %75, %"class.std::vector.5"** %76, align 8
  %77 = load %"class.std::vector.5"*, %"class.std::vector.5"** %69, align 8
  %78 = call %"class.std::vector.5"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.5"* %77)
  %79 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %73, i32 0, i32 0
  store %"class.std::vector.5"* %78, %"class.std::vector.5"** %79, align 8
  %80 = load %"class.std::vector.5"*, %"class.std::vector.5"** %70, align 8
  %81 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %71, align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %72, i32 0, i32 0
  %83 = load %"class.std::vector.5"*, %"class.std::vector.5"** %82, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %73, i32 0, i32 0
  %85 = load %"class.std::vector.5"*, %"class.std::vector.5"** %84, align 8
  %86 = call %"class.std::vector.5"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.5"* %83, %"class.std::vector.5"* %85, %"class.std::vector.5"* %80, %"class.std::allocator.2"* dereferenceable(1) %81)
  store i32 1741013306, i32* %18
  br label %87

; <label>:87:                                     ; preds = %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.2"* dereferenceable(1), %"class.std::vector.5"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.std::vector.5"* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.5"* %7, %"class.std::vector.5"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"*, %"class.std::vector.5"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.5"*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  store %"class.std::vector.5"* %10, %"class.std::vector.5"** %4
  %11 = alloca i32
  store i32 1351044790, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1351044790, label %15
    i32 -1027568750, label %19
    i32 -1002375705, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %4
  %17 = icmp ne %"class.std::vector.5"* %16, null
  %18 = select i1 %17, i32 -1027568750, i32 -1002375705
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %21 to %"class.std::allocator.2"*
  %23 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.2"* dereferenceable(1) %22, %"class.std::vector.5"* %23, i64 %24)
  store i32 -1002375705, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_(%"class.std::allocator.2"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_(%"class.std::allocator.2"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.452
  %6 = load i32, i32* @y.453
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1243551810, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1243551810, label %18
    i32 1650019301, label %38
    i32 -445820144, label %70
    i32 -1709736303, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1650019301, i32 -1709736303
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %39, align 8
  %40 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %41 to %"class.std::allocator.2"*
  store %"class.std::allocator.2"* %42, %"class.std::allocator.2"** %2
  %43 = load i32, i32* @x.452
  %44 = load i32, i32* @y.453
  %45 = sub i32 %43, 1094371259
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1094371259
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -445820144, i32 -1709736303
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %73, align 8
  %74 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %75 to %"class.std::allocator.2"*
  store i32 1650019301, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.5"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret %"class.std::vector.5"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1945821810, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1945821810, label %16
    i32 2060871286, label %21
    i32 -1503696950, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 2060871286, i32 -1503696950
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.5"*
  ret %"class.std::vector.5"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.20", align 8
  %6 = alloca %"class.std::move_iterator.20", align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator.20", align 8
  %10 = alloca %"class.std::move_iterator.20", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %5, i32 0, i32 0
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %6, i32 0, i32 0
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %12, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.20"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.20"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.20"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.20"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.5"*, %"class.std::vector.5"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.5"*, %"class.std::vector.5"** %20, align 8
  %22 = call %"class.std::vector.5"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_(%"class.std::vector.5"* %19, %"class.std::vector.5"* %21, %"class.std::vector.5"* %17)
  ret %"class.std::vector.5"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.5"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.20", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_(%"class.std::move_iterator.20"* %2, %"class.std::vector.5"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  ret %"class.std::vector.5"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.20", align 8
  %5 = alloca %"class.std::move_iterator.20", align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.20", align 8
  %9 = alloca %"class.std::move_iterator.20", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %4, i32 0, i32 0
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %5, i32 0, i32 0
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %11, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.20"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.20"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.20"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.20"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.5"*, %"class.std::vector.5"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.5"*, %"class.std::vector.5"** %19, align 8
  %21 = call %"class.std::vector.5"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_(%"class.std::vector.5"* %18, %"class.std::vector.5"* %20, %"class.std::vector.5"* %16)
  ret %"class.std::vector.5"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.466
  %5 = load i32, i32* @y.467
  %6 = sub i32 %4, -1226005674
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1226005674
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %382

; <label>:30:                                     ; preds = %3, %382
  %31 = alloca %"class.std::move_iterator.20", align 8
  %32 = alloca %"class.std::move_iterator.20", align 8
  %33 = alloca %"class.std::vector.5"*, align 8
  %34 = alloca %"class.std::vector.5"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  %37 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %31, i32 0, i32 0
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %32, i32 0, i32 0
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %38, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %33, align 8
  %39 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  store %"class.std::vector.5"* %39, %"class.std::vector.5"** %34, align 8
  %40 = load i32, i32* @x.466
  %41 = load i32, i32* @y.467
  %42 = add i32 %40, 1445693677
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1445693677
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %382

; <label>:66:                                     ; preds = %30
  br label %67

; <label>:67:                                     ; preds = %203, %66
  %68 = load i32, i32* @x.466
  %69 = load i32, i32* @y.467
  %70 = sub i32 %68, 431210436
  %71 = sub i32 %70, 1
  %72 = add i32 %71, 431210436
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  br i1 %80, label %82, label %392

; <label>:82:                                     ; preds = %67, %392
  %83 = load i32, i32* @x.466
  %84 = load i32, i32* @y.467
  %85 = add i32 %83, 629328318
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, 629328318
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  br i1 %95, label %97, label %392

; <label>:97:                                     ; preds = %82
  %98 = invoke zeroext i1 @_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.20"* dereferenceable(8) %31, %"class.std::move_iterator.20"* dereferenceable(8) %32)
          to label %99 unwind label %206

; <label>:99:                                     ; preds = %97
  br i1 %98, label %100, label %311

; <label>:100:                                    ; preds = %99
  %101 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  %102 = call %"class.std::vector.5"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.5"* dereferenceable(24) %101) #3
  %103 = invoke dereferenceable(24) %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv(%"class.std::move_iterator.20"* %31)
          to label %104 unwind label %206

; <label>:104:                                    ; preds = %100
  %105 = load i32, i32* @x.466
  %106 = load i32, i32* @y.467
  %107 = add i32 %105, 734558064
  %108 = sub i32 %107, 1
  %109 = sub i32 %108, 734558064
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  br i1 %117, label %119, label %393

; <label>:119:                                    ; preds = %104, %393
  %120 = load i32, i32* @x.466
  %121 = load i32, i32* @y.467
  %122 = add i32 %120, -1674037184
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, -1674037184
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 true, true
  %133 = and i1 %130, true
  %134 = and i1 %128, %132
  %135 = and i1 %131, true
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 true, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %393

; <label>:146:                                    ; preds = %119
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_(%"class.std::vector.5"* %102, %"class.std::vector.5"* dereferenceable(24) %103)
          to label %147 unwind label %206

; <label>:147:                                    ; preds = %146
  %148 = load i32, i32* @x.466
  %149 = load i32, i32* @y.467
  %150 = add i32 %148, 1058154408
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, 1058154408
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 true, true
  %161 = and i1 %158, true
  %162 = and i1 %156, %160
  %163 = and i1 %159, true
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 true, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %394

; <label>:174:                                    ; preds = %147, %394
  %175 = load i32, i32* @x.466
  %176 = load i32, i32* @y.467
  %177 = sub i32 0, 1
  %178 = add i32 %175, %177
  %179 = sub i32 %175, 1
  %180 = mul i32 %175, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %176, 10
  %184 = xor i1 %182, true
  %185 = xor i1 %183, true
  %186 = xor i1 false, true
  %187 = and i1 %184, false
  %188 = and i1 %182, %186
  %189 = and i1 %185, false
  %190 = and i1 %183, %186
  %191 = or i1 %187, %188
  %192 = or i1 %189, %190
  %193 = xor i1 %191, %192
  %194 = or i1 %184, %185
  %195 = xor i1 %194, true
  %196 = or i1 false, %186
  %197 = and i1 %195, %196
  %198 = or i1 %193, %197
  %199 = or i1 %182, %183
  br i1 %198, label %200, label %394

; <label>:200:                                    ; preds = %174
  br label %201

; <label>:201:                                    ; preds = %200
  %202 = invoke dereferenceable(8) %"class.std::move_iterator.20"* @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv(%"class.std::move_iterator.20"* %31)
          to label %203 unwind label %206

; <label>:203:                                    ; preds = %201
  %204 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  %205 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %204, i32 1
  store %"class.std::vector.5"* %205, %"class.std::vector.5"** %34, align 8
  br label %67

; <label>:206:                                    ; preds = %201, %146, %100, %97
  %207 = landingpad { i8*, i32 }
          catch i8* null
  %208 = extractvalue { i8*, i32 } %207, 0
  store i8* %208, i8** %35, align 8
  %209 = extractvalue { i8*, i32 } %207, 1
  store i32 %209, i32* %36, align 4
  br label %210

; <label>:210:                                    ; preds = %206
  %211 = load i32, i32* @x.466
  %212 = load i32, i32* @y.467
  %213 = sub i32 0, 1
  %214 = add i32 %211, %213
  %215 = sub i32 %211, 1
  %216 = mul i32 %211, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %212, 10
  %220 = xor i1 %218, true
  %221 = xor i1 %219, true
  %222 = xor i1 true, true
  %223 = and i1 %220, true
  %224 = and i1 %218, %222
  %225 = and i1 %221, true
  %226 = and i1 %219, %222
  %227 = or i1 %223, %224
  %228 = or i1 %225, %226
  %229 = xor i1 %227, %228
  %230 = or i1 %220, %221
  %231 = xor i1 %230, true
  %232 = or i1 true, %222
  %233 = and i1 %231, %232
  %234 = or i1 %229, %233
  %235 = or i1 %218, %219
  br i1 %234, label %236, label %395

; <label>:236:                                    ; preds = %210, %395
  %237 = load i8*, i8** %35, align 8
  %238 = call i8* @__cxa_begin_catch(i8* %237) #3
  %239 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %240 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  %241 = load i32, i32* @x.466
  %242 = load i32, i32* @y.467
  %243 = sub i32 %241, -1545053737
  %244 = sub i32 %243, 1
  %245 = add i32 %244, -1545053737
  %246 = sub i32 %241, 1
  %247 = mul i32 %241, %245
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %242, 10
  %251 = and i1 %249, %250
  %252 = xor i1 %249, %250
  %253 = or i1 %251, %252
  %254 = or i1 %249, %250
  br i1 %253, label %255, label %395

; <label>:255:                                    ; preds = %236
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.5"* %239, %"class.std::vector.5"* %240)
          to label %256 unwind label %313

; <label>:256:                                    ; preds = %255
  %257 = load i32, i32* @x.466
  %258 = load i32, i32* @y.467
  %259 = sub i32 %257, 896284024
  %260 = sub i32 %259, 1
  %261 = add i32 %260, 896284024
  %262 = sub i32 %257, 1
  %263 = mul i32 %257, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %258, 10
  %267 = xor i1 %265, true
  %268 = xor i1 %266, true
  %269 = xor i1 true, true
  %270 = and i1 %267, true
  %271 = and i1 %265, %269
  %272 = and i1 %268, true
  %273 = and i1 %266, %269
  %274 = or i1 %270, %271
  %275 = or i1 %272, %273
  %276 = xor i1 %274, %275
  %277 = or i1 %267, %268
  %278 = xor i1 %277, true
  %279 = or i1 true, %269
  %280 = and i1 %278, %279
  %281 = or i1 %276, %280
  %282 = or i1 %265, %266
  br i1 %281, label %283, label %400

; <label>:283:                                    ; preds = %256, %400
  %284 = load i32, i32* @x.466
  %285 = load i32, i32* @y.467
  %286 = sub i32 %284, -452905545
  %287 = sub i32 %286, 1
  %288 = add i32 %287, -452905545
  %289 = sub i32 %284, 1
  %290 = mul i32 %284, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %285, 10
  %294 = xor i1 %292, true
  %295 = xor i1 %293, true
  %296 = xor i1 false, true
  %297 = and i1 %294, false
  %298 = and i1 %292, %296
  %299 = and i1 %295, false
  %300 = and i1 %293, %296
  %301 = or i1 %297, %298
  %302 = or i1 %299, %300
  %303 = xor i1 %301, %302
  %304 = or i1 %294, %295
  %305 = xor i1 %304, true
  %306 = or i1 false, %296
  %307 = and i1 %305, %306
  %308 = or i1 %303, %307
  %309 = or i1 %292, %293
  br i1 %308, label %310, label %400

; <label>:310:                                    ; preds = %283
  invoke void @__cxa_rethrow() #13
          to label %381 unwind label %313

; <label>:311:                                    ; preds = %99
  %312 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  ret %"class.std::vector.5"* %312

; <label>:313:                                    ; preds = %310, %255
  %314 = landingpad { i8*, i32 }
          cleanup
  %315 = extractvalue { i8*, i32 } %314, 0
  store i8* %315, i8** %35, align 8
  %316 = extractvalue { i8*, i32 } %314, 1
  store i32 %316, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %317 unwind label %378

; <label>:317:                                    ; preds = %313
  br label %319
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:319:                                    ; preds = %317
  %320 = load i32, i32* @x.466
  %321 = load i32, i32* @y.467
  %322 = add i32 %320, -2007076648
  %323 = sub i32 %322, 1
  %324 = sub i32 %323, -2007076648
  %325 = sub i32 %320, 1
  %326 = mul i32 %320, %324
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %321, 10
  %330 = xor i1 %328, true
  %331 = xor i1 %329, true
  %332 = xor i1 false, true
  %333 = and i1 %330, false
  %334 = and i1 %328, %332
  %335 = and i1 %331, false
  %336 = and i1 %329, %332
  %337 = or i1 %333, %334
  %338 = or i1 %335, %336
  %339 = xor i1 %337, %338
  %340 = or i1 %330, %331
  %341 = xor i1 %340, true
  %342 = or i1 false, %332
  %343 = and i1 %341, %342
  %344 = or i1 %339, %343
  %345 = or i1 %328, %329
  br i1 %344, label %346, label %401

; <label>:346:                                    ; preds = %319, %401
  %347 = load i8*, i8** %35, align 8
  %348 = load i32, i32* %36, align 4
  %349 = insertvalue { i8*, i32 } undef, i8* %347, 0
  %350 = insertvalue { i8*, i32 } %349, i32 %348, 1
  %351 = load i32, i32* @x.466
  %352 = load i32, i32* @y.467
  %353 = add i32 %351, 1572820245
  %354 = sub i32 %353, 1
  %355 = sub i32 %354, 1572820245
  %356 = sub i32 %351, 1
  %357 = mul i32 %351, %355
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %352, 10
  %361 = xor i1 %359, true
  %362 = xor i1 %360, true
  %363 = xor i1 false, true
  %364 = and i1 %361, false
  %365 = and i1 %359, %363
  %366 = and i1 %362, false
  %367 = and i1 %360, %363
  %368 = or i1 %364, %365
  %369 = or i1 %366, %367
  %370 = xor i1 %368, %369
  %371 = or i1 %361, %362
  %372 = xor i1 %371, true
  %373 = or i1 false, %363
  %374 = and i1 %372, %373
  %375 = or i1 %370, %374
  %376 = or i1 %359, %360
  br i1 %375, label %377, label %401

; <label>:377:                                    ; preds = %346
  resume { i8*, i32 } %350

; <label>:378:                                    ; preds = %313
  %379 = landingpad { i8*, i32 }
          catch i8* null
  %380 = extractvalue { i8*, i32 } %379, 0
  call void @__clang_call_terminate(i8* %380) #12
  unreachable

; <label>:381:                                    ; preds = %310
  unreachable

; <label>:382:                                    ; preds = %30, %3
  %383 = alloca %"class.std::move_iterator.20", align 8
  %384 = alloca %"class.std::move_iterator.20", align 8
  %385 = alloca %"class.std::vector.5"*, align 8
  %386 = alloca %"class.std::vector.5"*, align 8
  %387 = alloca i8*
  %388 = alloca i32
  %389 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %383, i32 0, i32 0
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %389, align 8
  %390 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %384, i32 0, i32 0
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %390, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %385, align 8
  %391 = load %"class.std::vector.5"*, %"class.std::vector.5"** %385, align 8
  store %"class.std::vector.5"* %391, %"class.std::vector.5"** %386, align 8
  br label %30

; <label>:392:                                    ; preds = %82, %67
  br label %82

; <label>:393:                                    ; preds = %119, %104
  br label %119

; <label>:394:                                    ; preds = %174, %147
  br label %174

; <label>:395:                                    ; preds = %236, %210
  %396 = load i8*, i8** %35, align 8
  %397 = call i8* @__cxa_begin_catch(i8* %396) #3
  %398 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %399 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  br label %236

; <label>:400:                                    ; preds = %283, %256
  br label %283

; <label>:401:                                    ; preds = %346, %319
  %402 = load i8*, i8** %35, align 8
  %403 = load i32, i32* %36, align 4
  %404 = insertvalue { i8*, i32 } undef, i8* %402, 0
  %405 = insertvalue { i8*, i32 } %404, i32 %403, 1
  br label %346
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.20"* dereferenceable(8), %"class.std::move_iterator.20"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.468
  %7 = load i32, i32* @y.469
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 2090144754, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %123
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2090144754, label %19
    i32 832206372, label %39
    i32 -1320990277, label %83
    i32 1587414704, label %85
  ]

; <label>:18:                                     ; preds = %16
  br label %123

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 832206372, i32 1587414704
  store i32 %38, i32* %15
  br label %123

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.20"*, align 8
  %41 = alloca %"class.std::move_iterator.20"*, align 8
  store %"class.std::move_iterator.20"* %0, %"class.std::move_iterator.20"** %40, align 8
  store %"class.std::move_iterator.20"* %1, %"class.std::move_iterator.20"** %41, align 8
  %42 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %40, align 8
  %43 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %41, align 8
  %44 = call zeroext i1 @_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.20"* dereferenceable(8) %42, %"class.std::move_iterator.20"* dereferenceable(8) %43)
  %45 = xor i1 %44, true
  %46 = and i1 true, %45
  %47 = xor i1 true, true
  %48 = and i1 %44, %47
  %49 = xor i1 true, true
  %50 = and i1 %49, true
  %51 = and i1 true, %47
  %52 = or i1 %46, %48
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = xor i1 %44, true
  store i1 %54, i1* %3
  %56 = load i32, i32* @x.468
  %57 = load i32, i32* @y.469
  %58 = sub i32 %56, -1380080206
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -1380080206
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -1320990277, i32 1587414704
  store i32 %82, i32* %15
  br label %123

; <label>:83:                                     ; preds = %16
  %84 = load volatile i1, i1* %3
  ret i1 %84

; <label>:85:                                     ; preds = %16
  %86 = alloca %"class.std::move_iterator.20"*, align 8
  %87 = alloca %"class.std::move_iterator.20"*, align 8
  store %"class.std::move_iterator.20"* %0, %"class.std::move_iterator.20"** %86, align 8
  store %"class.std::move_iterator.20"* %1, %"class.std::move_iterator.20"** %87, align 8
  %88 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %86, align 8
  %89 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %87, align 8
  %90 = call zeroext i1 @_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.20"* dereferenceable(8) %88, %"class.std::move_iterator.20"* dereferenceable(8) %89)
  %91 = add i1 false, false
  %92 = sub i1 %91, %90
  %93 = sub i1 %92, false
  %94 = sub i1 false, %90
  %95 = add i1 %93, true
  %96 = add i1 %95, true
  %97 = sub i1 %96, true
  %98 = add i1 %93, true
  %99 = sub i1 false, %90
  %100 = add i1 false, %99
  %101 = sub i1 false, %90
  %102 = sub i1 false, %100
  %103 = sub i1 false, true
  %104 = add i1 %102, %103
  %105 = sub i1 false, %104
  %106 = add i1 %100, true
  %107 = sub i1 false, true
  %108 = add i1 %90, %107
  %109 = sub i1 %90, true
  %110 = mul i1 %108, true
  %111 = shl i1 %90, true
  %112 = xor i1 %90, true
  %113 = and i1 true, %112
  %114 = xor i1 true, true
  %115 = and i1 %90, %114
  %116 = xor i1 true, true
  %117 = and i1 %116, true
  %118 = and i1 true, %114
  %119 = or i1 %113, %115
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = xor i1 %90, true
  store i32 832206372, i32* %15
  br label %123

; <label>:123:                                    ; preds = %85, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #4 comdat {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.5"*
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.5"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIiSaIiEEC2EOS1_(%"class.std::vector.5"* %7, %"class.std::vector.5"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.5"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.472
  %6 = load i32, i32* @y.473
  %7 = add i32 %5, -759304517
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -759304517
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1081819687, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1081819687, label %19
    i32 -1803505738, label %27
    i32 -464922081, label %58
    i32 -1556131666, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1803505738, i32 -1556131666
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  %29 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  %30 = bitcast %"class.std::vector.5"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::vector.5"*
  store %"class.std::vector.5"* %31, %"class.std::vector.5"** %2
  %32 = load i32, i32* @x.472
  %33 = load i32, i32* @y.473
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -464922081, i32 -1556131666
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %61, align 8
  %62 = load %"class.std::vector.5"*, %"class.std::vector.5"** %61, align 8
  %63 = bitcast %"class.std::vector.5"* %62 to i8*
  %64 = bitcast i8* %63 to %"class.std::vector.5"*
  store i32 -1803505738, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv(%"class.std::move_iterator.20"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.20"*, align 8
  store %"class.std::move_iterator.20"* %0, %"class.std::move_iterator.20"** %2, align 8
  %3 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  ret %"class.std::vector.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.20"* @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv(%"class.std::move_iterator.20"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.20"*, align 8
  store %"class.std::move_iterator.20"* %0, %"class.std::move_iterator.20"** %2, align 8
  %3 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %5, i32 1
  store %"class.std::vector.5"* %6, %"class.std::vector.5"** %4, align 8
  ret %"class.std::move_iterator.20"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.5"*, %"class.std::vector.5"*) #0 comdat {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.5"* %5, %"class.std::vector.5"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.20"* dereferenceable(8), %"class.std::move_iterator.20"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.480
  %7 = load i32, i32* @y.481
  %8 = sub i32 %6, -515915246
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -515915246
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1680682243, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1680682243, label %20
    i32 1981998734, label %40
    i32 797393215, label %63
    i32 -825732000, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1981998734, i32 -825732000
  store i32 %39, i32* %16
  br label %73

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator.20"*, align 8
  %42 = alloca %"class.std::move_iterator.20"*, align 8
  store %"class.std::move_iterator.20"* %0, %"class.std::move_iterator.20"** %41, align 8
  store %"class.std::move_iterator.20"* %1, %"class.std::move_iterator.20"** %42, align 8
  %43 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %41, align 8
  %44 = call %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.20"* %43)
  %45 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %42, align 8
  %46 = call %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.20"* %45)
  %47 = icmp eq %"class.std::vector.5"* %44, %46
  store i1 %47, i1* %3
  %48 = load i32, i32* @x.480
  %49 = load i32, i32* @y.481
  %50 = add i32 %48, 1524820667
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 1524820667
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 797393215, i32 -825732000
  store i32 %62, i32* %16
  br label %73

; <label>:63:                                     ; preds = %17
  %64 = load volatile i1, i1* %3
  ret i1 %64

; <label>:65:                                     ; preds = %17
  %66 = alloca %"class.std::move_iterator.20"*, align 8
  %67 = alloca %"class.std::move_iterator.20"*, align 8
  store %"class.std::move_iterator.20"* %0, %"class.std::move_iterator.20"** %66, align 8
  store %"class.std::move_iterator.20"* %1, %"class.std::move_iterator.20"** %67, align 8
  %68 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %66, align 8
  %69 = call %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.20"* %68)
  %70 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %67, align 8
  %71 = call %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.20"* %70)
  %72 = icmp eq %"class.std::vector.5"* %69, %71
  store i32 1981998734, i32* %16
  br label %73

; <label>:73:                                     ; preds = %65, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.20"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.20"*, align 8
  store %"class.std::move_iterator.20"* %0, %"class.std::move_iterator.20"** %2, align 8
  %3 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  ret %"class.std::vector.5"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.5"*, %"class.std::vector.5"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.5"**
  %4 = alloca %"class.std::vector.5"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.484
  %8 = load i32, i32* @y.485
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 564235143, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %81
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 564235143, label %20
    i32 -866779266, label %28
    i32 325831588, label %60
    i32 -1251553684, label %61
    i32 806255631, label %68
    i32 40712342, label %72
    i32 -1538235516, label %77
    i32 1793547952, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %81

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -866779266, i32 1793547952
  store i32 %27, i32* %16
  br label %81

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"** %29, %"class.std::vector.5"*** %4
  %30 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"** %30, %"class.std::vector.5"*** %3
  %31 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %31, align 8
  %32 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %3
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %32, align 8
  %33 = load i32, i32* @x.484
  %34 = load i32, i32* @y.485
  %35 = sub i32 %33, -2020683028
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -2020683028
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 325831588, i32 1793547952
  store i32 %59, i32* %16
  br label %81

; <label>:60:                                     ; preds = %17
  store i32 -1251553684, i32* %16
  br label %81

; <label>:61:                                     ; preds = %17
  %62 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  %63 = load %"class.std::vector.5"*, %"class.std::vector.5"** %62, align 8
  %64 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %3
  %65 = load %"class.std::vector.5"*, %"class.std::vector.5"** %64, align 8
  %66 = icmp ne %"class.std::vector.5"* %63, %65
  %67 = select i1 %66, i32 806255631, i32 -1538235516
  store i32 %67, i32* %16
  br label %81

; <label>:68:                                     ; preds = %17
  %69 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  %70 = load %"class.std::vector.5"*, %"class.std::vector.5"** %69, align 8
  %71 = call %"class.std::vector.5"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.5"* dereferenceable(24) %70) #3
  call void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.5"* %71)
  store i32 40712342, i32* %16
  br label %81

; <label>:72:                                     ; preds = %17
  %73 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  %74 = load %"class.std::vector.5"*, %"class.std::vector.5"** %73, align 8
  %75 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %74, i32 1
  %76 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %4
  store %"class.std::vector.5"* %75, %"class.std::vector.5"** %76, align 8
  store i32 -1251553684, i32* %16
  br label %81

; <label>:77:                                     ; preds = %17
  ret void

; <label>:78:                                     ; preds = %17
  %79 = alloca %"class.std::vector.5"*, align 8
  %80 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %79, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %80, align 8
  store i32 -866779266, i32* %16
  br label %81

; <label>:81:                                     ; preds = %78, %72, %68, %61, %60, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.5"*) #4 comdat {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_(%"class.std::move_iterator.20"*, %"class.std::vector.5"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.488
  %6 = load i32, i32* @y.489
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1406615083, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %54
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1406615083, label %18
    i32 -1182302497, label %26
    i32 -1267094193, label %47
    i32 -815548461, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %54

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1182302497, i32 -815548461
  store i32 %25, i32* %14
  br label %54

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator.20"*, align 8
  %28 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::move_iterator.20"* %0, %"class.std::move_iterator.20"** %27, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %28, align 8
  %29 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %27, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %29, i32 0, i32 0
  %31 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  store %"class.std::vector.5"* %31, %"class.std::vector.5"** %30, align 8
  %32 = load i32, i32* @x.488
  %33 = load i32, i32* @y.489
  %34 = add i32 %32, 1548069015
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1548069015
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1267094193, i32 -815548461
  store i32 %46, i32* %14
  br label %54

; <label>:47:                                     ; preds = %15
  ret void

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::move_iterator.20"*, align 8
  %50 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::move_iterator.20"* %0, %"class.std::move_iterator.20"** %49, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %50, align 8
  %51 = load %"class.std::move_iterator.20"*, %"class.std::move_iterator.20"** %49, align 8
  %52 = getelementptr inbounds %"class.std::move_iterator.20", %"class.std::move_iterator.20"* %51, i32 0, i32 0
  %53 = load %"class.std::vector.5"*, %"class.std::vector.5"** %50, align 8
  store %"class.std::vector.5"* %53, %"class.std::vector.5"** %52, align 8
  store i32 -1182302497, i32* %14
  br label %54

; <label>:54:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::vector.5"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  %6 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.5"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.2"* dereferenceable(1), %"class.std::vector.5"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.492
  %7 = load i32, i32* @y.493
  %8 = add i32 %6, 640269247
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 640269247
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -725208853, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -725208853, label %20
    i32 460044987, label %40
    i32 55589053, label %74
    i32 -342714330, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 460044987, i32 -342714330
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.2"*, align 8
  %42 = alloca %"class.std::vector.5"*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %41, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %41, align 8
  %45 = bitcast %"class.std::allocator.2"* %44 to %"class.__gnu_cxx::new_allocator.3"*
  %46 = load %"class.std::vector.5"*, %"class.std::vector.5"** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.3"* %45, %"class.std::vector.5"* %46, i64 %47)
  %48 = load i32, i32* @x.492
  %49 = load i32, i32* @y.493
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 55589053, i32 -342714330
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  ret void

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.std::allocator.2"*, align 8
  %77 = alloca %"class.std::vector.5"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %76, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %76, align 8
  %80 = bitcast %"class.std::allocator.2"* %79 to %"class.__gnu_cxx::new_allocator.3"*
  %81 = load %"class.std::vector.5"*, %"class.std::vector.5"** %77, align 8
  %82 = load i64, i64* %78, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.3"* %80, %"class.std::vector.5"* %81, i64 %82)
  store i32 460044987, i32* %16
  br label %83

; <label>:83:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::vector.5"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %9 = bitcast %"class.std::vector.5"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32*, i32*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  store i32* %0, i32** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %1, i32** %13, align 8
  %14 = alloca i32
  store i32 1217202934, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %87
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1217202934, label %18
    i32 -649193926, label %21
    i32 -1176875681, label %41
    i32 -1056098819, label %57
    i32 -503938297, label %85
    i32 -2126983288, label %86
  ]

; <label>:17:                                     ; preds = %15
  br label %87

; <label>:18:                                     ; preds = %15
  %19 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %4) #3
  %20 = select i1 %19, i32 -649193926, i32 -1176875681
  store i32 %20, i32* %14
  br label %87

; <label>:21:                                     ; preds = %15
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = call i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %3) #3
  %27 = call i64 @_ZSt4__lgl(i64 %26)
  %28 = mul nsw i64 %27, 2
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %30, i32* %32, i64 %28)
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  %34 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 8, i1 false)
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %9, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %10, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  call void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %38, i32* %40)
  store i32 -1176875681, i32* %14
  br label %87

; <label>:41:                                     ; preds = %15
  %42 = load i32, i32* @x.496
  %43 = load i32, i32* @y.497
  %44 = add i32 %42, 1686326759
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1686326759
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1056098819, i32 -2126983288
  store i32 %56, i32* %14
  br label %87

; <label>:57:                                     ; preds = %15
  %58 = load i32, i32* @x.496
  %59 = load i32, i32* @y.497
  %60 = add i32 %58, -2104104289
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -2104104289
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -503938297, i32 -2126983288
  store i32 %84, i32* %14
  br label %87

; <label>:85:                                     ; preds = %15
  ret void

; <label>:86:                                     ; preds = %15
  store i32 -1056098819, i32* %14
  br label %87

; <label>:87:                                     ; preds = %86, %57, %41, %21, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv() #4 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.498
  %4 = load i32, i32* @y.499
  %5 = add i32 %3, -1037627727
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -1037627727
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -1797543291, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %44
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1797543291, label %17
    i32 718949290, label %25
    i32 1043446920, label %41
    i32 233114886, label %42
  ]

; <label>:16:                                     ; preds = %14
  br label %44

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 718949290, i32 233114886
  store i32 %24, i32* %13
  br label %44

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %27 = load i32, i32* @x.498
  %28 = load i32, i32* @y.499
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 1043446920, i32 233114886
  store i32 %40, i32* %13
  br label %44

; <label>:41:                                     ; preds = %14
  ret void

; <label>:42:                                     ; preds = %14
  %43 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store i32 718949290, i32* %13
  br label %44

; <label>:44:                                     ; preds = %42, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.500
  %7 = load i32, i32* @y.501
  %8 = add i32 %6, -535052991
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -535052991
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1277896753, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %64
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1277896753, label %20
    i32 100472588, label %28
    i32 -1374431104, label %52
    i32 -1157924278, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %64

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 100472588, i32 -1157924278
  store i32 %27, i32* %16
  br label %64

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %1, %"class.__gnu_cxx::__normal_iterator.16"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %29, align 8
  %32 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %31) #3
  %33 = load i32*, i32** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %30, align 8
  %35 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %34) #3
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i32* %33, %36
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.500
  %39 = load i32, i32* @y.501
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -1374431104, i32 -1157924278
  store i32 %51, i32* %16
  br label %64

; <label>:52:                                     ; preds = %17
  %53 = load volatile i1, i1* %3
  ret i1 %53

; <label>:54:                                     ; preds = %17
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %55, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %1, %"class.__gnu_cxx::__normal_iterator.16"** %56, align 8
  %57 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %55, align 8
  %58 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %57) #3
  %59 = load i32*, i32** %58, align 8
  %60 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %56, align 8
  %61 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %60) #3
  %62 = load i32*, i32** %61, align 8
  %63 = icmp ne i32* %59, %62
  store i32 100472588, i32* %16
  br label %64

; <label>:64:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32*, i32*, i64) #0 comdat {
  %4 = alloca i1
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca i64, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %16 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %19 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  store i32* %0, i32** %20, align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  store i32* %1, i32** %21, align 8
  store i64 %2, i64* %8, align 8
  %22 = alloca i32
  store i32 -1394489833, i32* %22
  br label %23

; <label>:23:                                     ; preds = %3, %155
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -1394489833, label %26
    i32 995997015, label %41
    i32 -1361153057, label %59
    i32 -1358891114, label %62
    i32 1920655178, label %66
    i32 -1803822903, label %79
    i32 -1200174134, label %106
    i32 1628972148, label %134
    i32 1561367862, label %150
    i32 -724099908, label %151
    i32 -792888624, label %154
  ]

; <label>:25:                                     ; preds = %23
  br label %155

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* @x.502
  %28 = load i32, i32* @y.503
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 995997015, i32 -724099908
  store i32 %40, i32* %22
  br label %155

; <label>:41:                                     ; preds = %23
  %42 = call i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %5) #3
  %43 = icmp sgt i64 %42, 16
  store i1 %43, i1* %4
  %44 = load i32, i32* @x.502
  %45 = load i32, i32* @y.503
  %46 = sub i32 %44, 221261240
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 221261240
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1361153057, i32 -724099908
  store i32 %58, i32* %22
  br label %155

; <label>:59:                                     ; preds = %23
  %60 = load volatile i1, i1* %4
  %61 = select i1 %60, i32 -1358891114, i32 -1200174134
  store i32 %61, i32* %22
  br label %155

; <label>:62:                                     ; preds = %23
  %63 = load i64, i64* %8, align 8
  %64 = icmp eq i64 %63, 0
  %65 = select i1 %64, i32 1920655178, i32 -1803822903
  store i32 %65, i32* %22
  br label %155

; <label>:66:                                     ; preds = %23
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 8, i1 false)
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 8, i1 false)
  %71 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  %72 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 8, i32 8, i1 false)
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %9, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %10, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  call void @_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i32* %74, i32* %76, i32* %78)
  store i32 -1200174134, i32* %22
  br label %155

; <label>:79:                                     ; preds = %23
  %80 = load i64, i64* %8, align 8
  %81 = add i64 %80, 3823989465430975740
  %82 = add i64 %81, -1
  %83 = sub i64 %82, 3823989465430975740
  %84 = add nsw i64 %80, -1
  store i64 %83, i64* %8, align 8
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %14 to i8*
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %15 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %14, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %15, i32 0, i32 0
  %92 = load i32*, i32** %91, align 8
  %93 = call i32* @_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_T0_(i32* %90, i32* %92)
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %13, i32 0, i32 0
  store i32* %93, i32** %94, align 8
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %17 to i8*
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %18 to i8*
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = load i64, i64* %8, align 8
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %17, i32 0, i32 0
  %101 = load i32*, i32** %100, align 8
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %18, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i32* %101, i32* %103, i64 %99)
  %104 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 8, i32 8, i1 false)
  store i32 -1394489833, i32* %22
  br label %155

; <label>:106:                                    ; preds = %23
  %107 = load i32, i32* @x.502
  %108 = load i32, i32* @y.503
  %109 = sub i32 %107, 2005238493
  %110 = sub i32 %109, 1
  %111 = add i32 %110, 2005238493
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 false, true
  %120 = and i1 %117, false
  %121 = and i1 %115, %119
  %122 = and i1 %118, false
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 false, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  %133 = select i1 %131, i32 1628972148, i32 -792888624
  store i32 %133, i32* %22
  br label %155

; <label>:134:                                    ; preds = %23
  %135 = load i32, i32* @x.502
  %136 = load i32, i32* @y.503
  %137 = sub i32 %135, 1493527351
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 1493527351
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 1561367862, i32 -792888624
  store i32 %149, i32* %22
  br label %155

; <label>:150:                                    ; preds = %23
  ret void

; <label>:151:                                    ; preds = %23
  %152 = call i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %5) #3
  %153 = icmp sgt i64 %152, 16
  store i32 995997015, i32* %22
  br label %155

; <label>:154:                                    ; preds = %23
  store i32 1628972148, i32* %22
  br label %155

; <label>:155:                                    ; preds = %154, %151, %134, %106, %79, %66, %62, %59, %41, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt4__lgl(i64) #4 comdat {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call i64 @llvm.ctlz.i64(i64 %3, i1 true)
  %5 = trunc i64 %4 to i32
  %6 = sext i32 %5 to i64
  %7 = sub i64 63, -2315975111327199767
  %8 = sub i64 %7, %6
  %9 = add i64 %8, -2315975111327199767
  %10 = sub i64 63, %6
  ret i64 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.506
  %7 = load i32, i32* @y.507
  %8 = add i32 %6, 193765417
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 193765417
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1549257325, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %113
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1549257325, label %20
    i32 -76328343, label %28
    i32 -1934475362, label %58
    i32 -344546984, label %60
  ]

; <label>:19:                                     ; preds = %17
  br label %113

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -76328343, i32 -344546984
  store i32 %27, i32* %16
  br label %113

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %1, %"class.__gnu_cxx::__normal_iterator.16"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %29, align 8
  %32 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %31) #3
  %33 = load i32*, i32** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %30, align 8
  %35 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %34) #3
  %36 = load i32*, i32** %35, align 8
  %37 = ptrtoint i32* %33 to i64
  %38 = ptrtoint i32* %36 to i64
  %39 = sub i64 0, %38
  %40 = add i64 %37, %39
  %41 = sub i64 %37, %38
  %42 = sdiv exact i64 %40, 4
  store i64 %42, i64* %3
  %43 = load i32, i32* @x.506
  %44 = load i32, i32* @y.507
  %45 = sub i32 %43, 296224258
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 296224258
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1934475362, i32 -344546984
  store i32 %57, i32* %16
  br label %113

; <label>:58:                                     ; preds = %17
  %59 = load volatile i64, i64* %3
  ret i64 %59

; <label>:60:                                     ; preds = %17
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %61, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %1, %"class.__gnu_cxx::__normal_iterator.16"** %62, align 8
  %63 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %61, align 8
  %64 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %63) #3
  %65 = load i32*, i32** %64, align 8
  %66 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %62, align 8
  %67 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %66) #3
  %68 = load i32*, i32** %67, align 8
  %69 = ptrtoint i32* %65 to i64
  %70 = ptrtoint i32* %68 to i64
  %71 = add i64 %69, -5381570578904017905
  %72 = sub i64 %71, %70
  %73 = sub i64 %72, -5381570578904017905
  %74 = sub i64 %69, %70
  %75 = mul i64 %73, %70
  %76 = sub i64 0, -3376734651741278530
  %77 = sub i64 %76, %69
  %78 = add i64 %77, -3376734651741278530
  %79 = sub i64 0, %69
  %80 = sub i64 0, %70
  %81 = sub i64 %78, %80
  %82 = add i64 %78, %70
  %83 = sub i64 0, %70
  %84 = add i64 %69, %83
  %85 = sub i64 %69, %70
  %86 = shl i64 %84, 4
  %87 = shl i64 %84, 4
  %88 = add i64 0, 3010382537665657660
  %89 = sub i64 %88, %84
  %90 = sub i64 %89, 3010382537665657660
  %91 = sub i64 0, %84
  %92 = sub i64 %90, -1418027895212005995
  %93 = add i64 %92, 4
  %94 = add i64 %93, -1418027895212005995
  %95 = add i64 %90, 4
  %96 = sub i64 0, -2774325954224107012
  %97 = sub i64 %96, %84
  %98 = add i64 %97, -2774325954224107012
  %99 = sub i64 0, %84
  %100 = sub i64 %98, -4984678454143903065
  %101 = add i64 %100, 4
  %102 = add i64 %101, -4984678454143903065
  %103 = add i64 %98, 4
  %104 = sub i64 0, 2645045272868655705
  %105 = sub i64 %104, %84
  %106 = add i64 %105, 2645045272868655705
  %107 = sub i64 0, %84
  %108 = add i64 %106, 1760192521202076479
  %109 = add i64 %108, 4
  %110 = sub i64 %109, 1760192521202076479
  %111 = add i64 %106, 4
  %112 = sdiv exact i64 %84, 4
  store i32 -76328343, i32* %16
  br label %113

; <label>:113:                                    ; preds = %60, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32*, i32*) #0 comdat {
  %3 = alloca i64
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %15 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %0, i32** %16, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  store i32* %1, i32** %17, align 8
  %18 = call i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %4) #3
  store i64 %18, i64* %3
  %19 = alloca i32
  store i32 62857412, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %54
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 62857412, label %23
    i32 -110890905, label %27
    i32 396966897, label %44
    i32 -1531617852, label %53
  ]

; <label>:22:                                     ; preds = %20
  br label %54

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %3
  %25 = icmp sgt i64 %24, 16
  %26 = select i1 %25, i32 -110890905, i32 396966897
  store i32 %26, i32* %19
  br label %54

; <label>:27:                                     ; preds = %20
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %4, i64 16) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %8, i32 0, i32 0
  store i32* %30, i32** %31, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %8, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  call void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %33, i32* %35)
  %36 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %4, i64 16) #3
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %10, i32 0, i32 0
  store i32* %36, i32** %37, align 8
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %10, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  call void @_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %41, i32* %43)
  store i32 -1531617852, i32* %19
  br label %54

; <label>:44:                                     ; preds = %20
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %13 to i8*
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 8, i1 false)
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %14 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %13, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %14, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  call void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %50, i32* %52)
  store i32 -1531617852, i32* %19
  br label %54

; <label>:53:                                     ; preds = %20
  ret void

; <label>:54:                                     ; preds = %44, %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %14 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %0, i32** %15, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  store i32* %1, i32** %16, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  store i32* %2, i32** %17, align 8
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %8 to i8*
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 8, i1 false)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %8, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %9, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %10, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  call void @_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i32* %25, i32* %27, i32* %29)
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 8, i1 false)
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %13 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %12, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %13, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  call void @_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %35, i32* %37)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_T0_(i32*, i32*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %16 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %0, i32** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  store i32* %1, i32** %18, align 8
  %19 = call i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %4) #3
  %20 = sdiv i64 %19, 2
  %21 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %4, i64 %20) #3
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  store i32* %21, i32** %22, align 8
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %8 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %4, i64 1) #3
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %9, i32 0, i32 0
  store i32* %25, i32** %26, align 8
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEl(%"class.__gnu_cxx::__normal_iterator.16"* %5, i64 1) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  store i32* %29, i32** %30, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %8, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %9, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %10, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  call void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_(i32* %32, i32* %34, i32* %36, i32* %38)
  %39 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %4, i64 1) #3
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %13, i32 0, i32 0
  store i32* %39, i32** %40, align 8
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %14 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %15 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %13, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %14, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %15, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = call i32* @_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_S9_T0_(i32* %46, i32* %48, i32* %50)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  store i32* %51, i32** %52, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  ret i32* %54
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %17 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %0, i32** %18, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  store i32* %1, i32** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  store i32* %2, i32** %20, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %8 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %8, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %9, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32* %26, i32* %28)
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 8, i1 false)
  %31 = alloca i32
  store i32 404386796, i32* %31
  br label %32

; <label>:32:                                     ; preds = %3, %142
  %33 = load i32, i32* %31
  switch i32 %33, label %34 [
    i32 404386796, label %35
    i32 -1707854177, label %38
    i32 884065214, label %49
    i32 -1632594238, label %62
    i32 -1299892758, label %77
    i32 -732995313, label %92
    i32 1597889998, label %93
    i32 -376348305, label %95
    i32 1697018085, label %111
    i32 1311974357, label %139
    i32 920985067, label %140
    i32 316234369, label %141
  ]

; <label>:34:                                     ; preds = %32
  br label %142

; <label>:35:                                     ; preds = %32
  %36 = call zeroext i1 @_ZN9__gnu_cxxltIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %6) #3
  %37 = select i1 %36, i32 -1707854177, i32 -376348305
  store i32 %37, i32* %31
  br label %142

; <label>:38:                                     ; preds = %32
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %13 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %12, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %13, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %7, i32* %44, i32* %46)
  %48 = select i1 %47, i32 884065214, i32 -1632594238
  store i32 %48, i32* %31
  br label %142

; <label>:49:                                     ; preds = %32
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %14 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %15 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %16 to i8*
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %14, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %15, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %16, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i32* %57, i32* %59, i32* %61)
  store i32 -1632594238, i32* %31
  br label %142

; <label>:62:                                     ; preds = %32
  %63 = load i32, i32* @x.516
  %64 = load i32, i32* @y.517
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 -1299892758, i32 920985067
  store i32 %76, i32* %31
  br label %142

; <label>:77:                                     ; preds = %32
  %78 = load i32, i32* @x.516
  %79 = load i32, i32* @y.517
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  %91 = select i1 %89, i32 -732995313, i32 920985067
  store i32 %91, i32* %31
  br label %142

; <label>:92:                                     ; preds = %32
  store i32 1597889998, i32* %31
  br label %142

; <label>:93:                                     ; preds = %32
  %94 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.16"* %11) #3
  store i32 404386796, i32* %31
  br label %142

; <label>:95:                                     ; preds = %32
  %96 = load i32, i32* @x.516
  %97 = load i32, i32* @y.517
  %98 = add i32 %96, 99264400
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, 99264400
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  %110 = select i1 %108, i32 1697018085, i32 316234369
  store i32 %110, i32* %31
  br label %142

; <label>:111:                                    ; preds = %32
  %112 = load i32, i32* @x.516
  %113 = load i32, i32* @y.517
  %114 = sub i32 %112, 1261945743
  %115 = sub i32 %114, 1
  %116 = add i32 %115, 1261945743
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  %138 = select i1 %136, i32 1311974357, i32 316234369
  store i32 %138, i32* %31
  br label %142

; <label>:139:                                    ; preds = %32
  ret void

; <label>:140:                                    ; preds = %32
  store i32 -1299892758, i32* %31
  br label %142

; <label>:141:                                    ; preds = %32
  store i32 1697018085, i32* %31
  br label %142

; <label>:142:                                    ; preds = %141, %140, %111, %95, %93, %92, %77, %62, %49, %38, %35, %34
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32*, i32*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  %12 = alloca i32
  store i32 -1770472302, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %35
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1770472302, label %16
    i32 -481625820, label %20
    i32 1401222404, label %34
  ]

; <label>:15:                                     ; preds = %13
  br label %35

; <label>:16:                                     ; preds = %13
  %17 = call i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %3) #3
  %18 = icmp sgt i64 %17, 1
  %19 = select i1 %18, i32 -481625820, i32 1401222404
  store i32 %19, i32* %12
  br label %35

; <label>:20:                                     ; preds = %13
  %21 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.16"* %4) #3
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %8 to i8*
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %8, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i32* %29, i32* %31, i32* %33)
  store i32 -1770472302, i32* %12
  br label %35

; <label>:34:                                     ; preds = %13
  ret void

; <label>:35:                                     ; preds = %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32*, i32*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %13 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  store i32* %0, i32** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  store i32* %1, i32** %15, align 8
  %16 = call i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %5) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 -487791272, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %181
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -487791272, label %21
    i32 -884208518, label %25
    i32 -956553456, label %26
    i32 1023760858, label %34
    i32 -1197289675, label %50
    i32 1964714775, label %82
    i32 1294572679, label %85
    i32 -1719139970, label %86
    i32 -971217564, label %102
    i32 1563066343, label %123
    i32 -1900981330, label %124
    i32 -155049132, label %125
    i32 1628177935, label %142
  ]

; <label>:20:                                     ; preds = %18
  br label %181

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %4
  %23 = icmp slt i64 %22, 2
  %24 = select i1 %23, i32 -884208518, i32 -956553456
  store i32 %24, i32* %17
  br label %181

; <label>:25:                                     ; preds = %18
  store i32 -1900981330, i32* %17
  br label %181

; <label>:26:                                     ; preds = %18
  %27 = call i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %5) #3
  store i64 %27, i64* %8, align 8
  %28 = load i64, i64* %8, align 8
  %29 = sub i64 %28, 8828686978259541806
  %30 = sub i64 %29, 2
  %31 = add i64 %30, 8828686978259541806
  %32 = sub nsw i64 %28, 2
  %33 = sdiv i64 %31, 2
  store i64 %33, i64* %9, align 8
  store i32 1023760858, i32* %17
  br label %181

; <label>:34:                                     ; preds = %18
  %35 = load i32, i32* @x.520
  %36 = load i32, i32* @y.521
  %37 = sub i32 %35, -701719380
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -701719380
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1197289675, i32 -155049132
  store i32 %49, i32* %17
  br label %181

; <label>:50:                                     ; preds = %18
  %51 = load i64, i64* %9, align 8
  %52 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %5, i64 %51) #3
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  store i32* %52, i32** %53, align 8
  %54 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %11) #3
  %55 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %54) #3
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %10, align 4
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  %58 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 8, i1 false)
  %59 = load i64, i64* %9, align 8
  %60 = load i64, i64* %8, align 8
  %61 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %10) #3
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %12, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_(i32* %64, i64 %59, i64 %60, i32 %62)
  %65 = load i64, i64* %9, align 8
  %66 = icmp eq i64 %65, 0
  store i1 %66, i1* %3
  %67 = load i32, i32* @x.520
  %68 = load i32, i32* @y.521
  %69 = add i32 %67, -2093163110
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -2093163110
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 1964714775, i32 -155049132
  store i32 %81, i32* %17
  br label %181

; <label>:82:                                     ; preds = %18
  %83 = load volatile i1, i1* %3
  %84 = select i1 %83, i32 1294572679, i32 -1719139970
  store i32 %84, i32* %17
  br label %181

; <label>:85:                                     ; preds = %18
  store i32 -1900981330, i32* %17
  br label %181

; <label>:86:                                     ; preds = %18
  %87 = load i32, i32* @x.520
  %88 = load i32, i32* @y.521
  %89 = sub i32 %87, -758015404
  %90 = sub i32 %89, 1
  %91 = add i32 %90, -758015404
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 -971217564, i32 1628177935
  store i32 %101, i32* %17
  br label %181

; <label>:102:                                    ; preds = %18
  %103 = load i64, i64* %9, align 8
  %104 = sub i64 %103, 5182784525649218117
  %105 = add i64 %104, -1
  %106 = add i64 %105, 5182784525649218117
  %107 = add nsw i64 %103, -1
  store i64 %106, i64* %9, align 8
  %108 = load i32, i32* @x.520
  %109 = load i32, i32* @y.521
  %110 = add i32 %108, -2134785326
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, -2134785326
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  %122 = select i1 %120, i32 1563066343, i32 1628177935
  store i32 %122, i32* %17
  br label %181

; <label>:123:                                    ; preds = %18
  store i32 1023760858, i32* %17
  br label %181

; <label>:124:                                    ; preds = %18
  ret void

; <label>:125:                                    ; preds = %18
  %126 = load i64, i64* %9, align 8
  %127 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %5, i64 %126) #3
  %128 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  store i32* %127, i32** %128, align 8
  %129 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %11) #3
  %130 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %129) #3
  %131 = load i32, i32* %130, align 4
  store i32 %131, i32* %10, align 4
  %132 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  %133 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %133, i64 8, i32 8, i1 false)
  %134 = load i64, i64* %9, align 8
  %135 = load i64, i64* %8, align 8
  %136 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %10) #3
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %12, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_(i32* %139, i64 %134, i64 %135, i32 %137)
  %140 = load i64, i64* %9, align 8
  %141 = icmp eq i64 %140, 0
  store i32 -1197289675, i32* %17
  br label %181

; <label>:142:                                    ; preds = %18
  %143 = load i64, i64* %9, align 8
  %144 = sub i64 %143, -8333359134427226785
  %145 = sub i64 %144, -1
  %146 = add i64 %145, -8333359134427226785
  %147 = sub i64 %143, -1
  %148 = mul i64 %146, -1
  %149 = shl i64 %143, -1
  %150 = add i64 %143, -536210005911699966
  %151 = sub i64 %150, -1
  %152 = sub i64 %151, -536210005911699966
  %153 = sub i64 %143, -1
  %154 = mul i64 %152, -1
  %155 = sub i64 0, 159733439697256015
  %156 = sub i64 %155, %143
  %157 = add i64 %156, 159733439697256015
  %158 = sub i64 0, %143
  %159 = add i64 %157, -6186329089702979570
  %160 = add i64 %159, -1
  %161 = sub i64 %160, -6186329089702979570
  %162 = add i64 %157, -1
  %163 = shl i64 %143, -1
  %164 = sub i64 0, %143
  %165 = add i64 0, %164
  %166 = sub i64 0, %143
  %167 = sub i64 0, %165
  %168 = sub i64 0, -1
  %169 = add i64 %167, %168
  %170 = sub i64 0, %169
  %171 = add i64 %165, -1
  %172 = sub i64 0, %143
  %173 = add i64 0, %172
  %174 = sub i64 0, %143
  %175 = sub i64 0, -1
  %176 = sub i64 %173, %175
  %177 = add i64 %173, -1
  %178 = sub i64 0, -1
  %179 = sub i64 %143, %178
  %180 = add nsw i64 %143, -1
  store i64 %179, i64* %9, align 8
  store i32 -971217564, i32* %17
  br label %181

; <label>:181:                                    ; preds = %142, %125, %123, %102, %86, %85, %82, %50, %34, %26, %25, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxltIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %1, %"class.__gnu_cxx::__normal_iterator.16"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %5) #3
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %8) #3
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"*, i32*, i32*) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %1, i32** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  store i32* %2, i32** %8, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %6, align 8
  %9 = load %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %6, align 8
  %10 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %4) #3
  %11 = load i32, i32* %10, align 4
  %12 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %5) #3
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %11, %13
  ret i1 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca i32, align 4
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  store i32* %2, i32** %13, align 8
  %14 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %6) #3
  %15 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %14) #3
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %8, align 4
  %17 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %4) #3
  %18 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %17) #3
  %19 = load i32, i32* %18, align 4
  %20 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %6) #3
  store i32 %19, i32* %20, align 4
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = call i64 @_ZN9__gnu_cxxmiIPiSt6vectorIiSaIiEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %4) #3
  %24 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %8) #3
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %9, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_(i32* %27, i64 0, i64 %23, i32 %25)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.16"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i32 1
  store i32* %6, i32** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.16"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  store i32* %11, i32** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.16"* %3, i32** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  ret i32* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_(i32*, i64, i64, i32) #0 comdat {
  %5 = alloca i1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %13 = alloca i64*
  %14 = alloca i64*
  %15 = alloca i32*
  %16 = alloca i64*
  %17 = alloca i64*
  %18 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %20 = alloca i1
  %21 = alloca i1
  %22 = load i32, i32* @x.536
  %23 = load i32, i32* @y.537
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  store i1 %29, i1* %21
  %30 = icmp slt i32 %23, 10
  store i1 %30, i1* %20
  %31 = alloca i32
  store i32 -1169409626, i32* %31
  br label %32

; <label>:32:                                     ; preds = %4, %434
  %33 = load i32, i32* %31
  switch i32 %33, label %34 [
    i32 -1169409626, label %35
    i32 214174255, label %55
    i32 1141889225, label %111
    i32 -860764617, label %112
    i32 -984847190, label %140
    i32 1493476635, label %164
    i32 -1406641803, label %167
    i32 1365710476, label %201
    i32 -702922437, label %209
    i32 -199184515, label %225
    i32 2000720840, label %261
    i32 -1358598911, label %262
    i32 426460914, label %275
    i32 -872123535, label %287
    i32 -1373003279, label %325
    i32 1106286392, label %340
    i32 -724557439, label %361
    i32 432358467, label %412
  ]

; <label>:34:                                     ; preds = %32
  br label %434

; <label>:35:                                     ; preds = %32
  %36 = load volatile i1, i1* %21
  %37 = load volatile i1, i1* %20
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 214174255, i32 1106286392
  store i32 %54, i32* %31
  br label %434

; <label>:55:                                     ; preds = %32
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %56, %"class.__gnu_cxx::__normal_iterator.16"** %19
  %57 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %57, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %18
  %58 = alloca i64, align 8
  store i64* %58, i64** %17
  %59 = alloca i64, align 8
  store i64* %59, i64** %16
  %60 = alloca i32, align 4
  store i32* %60, i32** %15
  %61 = alloca i64, align 8
  store i64* %61, i64** %14
  %62 = alloca i64, align 8
  store i64* %62, i64** %13
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %63, %"class.__gnu_cxx::__normal_iterator.16"** %12
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %64, %"class.__gnu_cxx::__normal_iterator.16"** %11
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %65, %"class.__gnu_cxx::__normal_iterator.16"** %10
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %66, %"class.__gnu_cxx::__normal_iterator.16"** %9
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %67, %"class.__gnu_cxx::__normal_iterator.16"** %8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %68, %"class.__gnu_cxx::__normal_iterator.16"** %7
  %69 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %69, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %70 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %71 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %72 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %73 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %19
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %73, i32 0, i32 0
  store i32* %0, i32** %74, align 8
  %75 = load volatile i64*, i64** %17
  store i64 %1, i64* %75, align 8
  %76 = load volatile i64*, i64** %16
  store i64 %2, i64* %76, align 8
  %77 = load volatile i32*, i32** %15
  store i32 %3, i32* %77, align 4
  %78 = load volatile i64*, i64** %17
  %79 = load i64, i64* %78, align 8
  %80 = load volatile i64*, i64** %14
  store i64 %79, i64* %80, align 8
  %81 = load volatile i64*, i64** %17
  %82 = load i64, i64* %81, align 8
  %83 = load volatile i64*, i64** %13
  store i64 %82, i64* %83, align 8
  %84 = load i32, i32* @x.536
  %85 = load i32, i32* @y.537
  %86 = add i32 %84, 1396685838
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, 1396685838
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  %110 = select i1 %108, i32 1141889225, i32 1106286392
  store i32 %110, i32* %31
  br label %434

; <label>:111:                                    ; preds = %32
  store i32 -860764617, i32* %31
  br label %434

; <label>:112:                                    ; preds = %32
  %113 = load i32, i32* @x.536
  %114 = load i32, i32* @y.537
  %115 = add i32 %113, -1771252829
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, -1771252829
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  %139 = select i1 %137, i32 -984847190, i32 -724557439
  store i32 %139, i32* %31
  br label %434

; <label>:140:                                    ; preds = %32
  %141 = load volatile i64*, i64** %13
  %142 = load i64, i64* %141, align 8
  %143 = load volatile i64*, i64** %16
  %144 = load i64, i64* %143, align 8
  %145 = sub i64 0, 1
  %146 = add i64 %144, %145
  %147 = sub nsw i64 %144, 1
  %148 = sdiv i64 %146, 2
  %149 = icmp slt i64 %142, %148
  store i1 %149, i1* %5
  %150 = load i32, i32* @x.536
  %151 = load i32, i32* @y.537
  %152 = sub i32 0, 1
  %153 = add i32 %150, %152
  %154 = sub i32 %150, 1
  %155 = mul i32 %150, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %151, 10
  %159 = and i1 %157, %158
  %160 = xor i1 %157, %158
  %161 = or i1 %159, %160
  %162 = or i1 %157, %158
  %163 = select i1 %161, i32 1493476635, i32 -724557439
  store i32 %163, i32* %31
  br label %434

; <label>:164:                                    ; preds = %32
  %165 = load volatile i1, i1* %5
  %166 = select i1 %165, i32 -1406641803, i32 -1358598911
  store i32 %166, i32* %31
  br label %434

; <label>:167:                                    ; preds = %32
  %168 = load volatile i64*, i64** %13
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %169, 5514210937097462691
  %171 = add i64 %170, 1
  %172 = add i64 %171, 5514210937097462691
  %173 = add nsw i64 %169, 1
  %174 = mul nsw i64 2, %172
  %175 = load volatile i64*, i64** %13
  store i64 %174, i64* %175, align 8
  %176 = load volatile i64*, i64** %13
  %177 = load i64, i64* %176, align 8
  %178 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %19
  %179 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %178, i64 %177) #3
  %180 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %12
  %181 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %180, i32 0, i32 0
  store i32* %179, i32** %181, align 8
  %182 = load volatile i64*, i64** %13
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, -5278859232163622869
  %185 = sub i64 %184, 1
  %186 = sub i64 %185, -5278859232163622869
  %187 = sub nsw i64 %183, 1
  %188 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %19
  %189 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %188, i64 %186) #3
  %190 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %11
  %191 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %190, i32 0, i32 0
  store i32* %189, i32** %191, align 8
  %192 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %12
  %193 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %192, i32 0, i32 0
  %194 = load i32*, i32** %193, align 8
  %195 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %11
  %196 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %195, i32 0, i32 0
  %197 = load i32*, i32** %196, align 8
  %198 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %18
  %199 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %198, i32* %194, i32* %197)
  %200 = select i1 %199, i32 1365710476, i32 -702922437
  store i32 %200, i32* %31
  br label %434

; <label>:201:                                    ; preds = %32
  %202 = load volatile i64*, i64** %13
  %203 = load i64, i64* %202, align 8
  %204 = sub i64 %203, -7645218842491232725
  %205 = add i64 %204, -1
  %206 = add i64 %205, -7645218842491232725
  %207 = add nsw i64 %203, -1
  %208 = load volatile i64*, i64** %13
  store i64 %206, i64* %208, align 8
  store i32 -702922437, i32* %31
  br label %434

; <label>:209:                                    ; preds = %32
  %210 = load i32, i32* @x.536
  %211 = load i32, i32* @y.537
  %212 = add i32 %210, -1869336028
  %213 = sub i32 %212, 1
  %214 = sub i32 %213, -1869336028
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  %224 = select i1 %222, i32 -199184515, i32 432358467
  store i32 %224, i32* %31
  br label %434

; <label>:225:                                    ; preds = %32
  %226 = load volatile i64*, i64** %13
  %227 = load i64, i64* %226, align 8
  %228 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %19
  %229 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %228, i64 %227) #3
  %230 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %10
  %231 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %230, i32 0, i32 0
  store i32* %229, i32** %231, align 8
  %232 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %10
  %233 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %232) #3
  %234 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %233) #3
  %235 = load i32, i32* %234, align 4
  %236 = load volatile i64*, i64** %17
  %237 = load i64, i64* %236, align 8
  %238 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %19
  %239 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %238, i64 %237) #3
  %240 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %9
  %241 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %240, i32 0, i32 0
  store i32* %239, i32** %241, align 8
  %242 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %9
  %243 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %242) #3
  store i32 %235, i32* %243, align 4
  %244 = load volatile i64*, i64** %13
  %245 = load i64, i64* %244, align 8
  %246 = load volatile i64*, i64** %17
  store i64 %245, i64* %246, align 8
  %247 = load i32, i32* @x.536
  %248 = load i32, i32* @y.537
  %249 = sub i32 0, 1
  %250 = add i32 %247, %249
  %251 = sub i32 %247, 1
  %252 = mul i32 %247, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %248, 10
  %256 = and i1 %254, %255
  %257 = xor i1 %254, %255
  %258 = or i1 %256, %257
  %259 = or i1 %254, %255
  %260 = select i1 %258, i32 2000720840, i32 432358467
  store i32 %260, i32* %31
  br label %434

; <label>:261:                                    ; preds = %32
  store i32 -860764617, i32* %31
  br label %434

; <label>:262:                                    ; preds = %32
  %263 = load volatile i64*, i64** %16
  %264 = load i64, i64* %263, align 8
  %265 = xor i64 %264, -1
  %266 = xor i64 1, -1
  %267 = xor i64 7868277446386423168, -1
  %268 = or i64 %265, %266
  %269 = or i64 7868277446386423168, %267
  %270 = xor i64 %268, -1
  %271 = and i64 %270, %269
  %272 = and i64 %264, 1
  %273 = icmp eq i64 %271, 0
  %274 = select i1 %273, i32 426460914, i32 -1373003279
  store i32 %274, i32* %31
  br label %434

; <label>:275:                                    ; preds = %32
  %276 = load volatile i64*, i64** %13
  %277 = load i64, i64* %276, align 8
  %278 = load volatile i64*, i64** %16
  %279 = load i64, i64* %278, align 8
  %280 = sub i64 %279, 6599902215078693717
  %281 = sub i64 %280, 2
  %282 = add i64 %281, 6599902215078693717
  %283 = sub nsw i64 %279, 2
  %284 = sdiv i64 %282, 2
  %285 = icmp eq i64 %277, %284
  %286 = select i1 %285, i32 -872123535, i32 -1373003279
  store i32 %286, i32* %31
  br label %434

; <label>:287:                                    ; preds = %32
  %288 = load volatile i64*, i64** %13
  %289 = load i64, i64* %288, align 8
  %290 = sub i64 %289, -9053049654861392900
  %291 = add i64 %290, 1
  %292 = add i64 %291, -9053049654861392900
  %293 = add nsw i64 %289, 1
  %294 = mul nsw i64 2, %292
  %295 = load volatile i64*, i64** %13
  store i64 %294, i64* %295, align 8
  %296 = load volatile i64*, i64** %13
  %297 = load i64, i64* %296, align 8
  %298 = sub i64 %297, 4405048199144033026
  %299 = sub i64 %298, 1
  %300 = add i64 %299, 4405048199144033026
  %301 = sub nsw i64 %297, 1
  %302 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %19
  %303 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %302, i64 %300) #3
  %304 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %8
  %305 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %304, i32 0, i32 0
  store i32* %303, i32** %305, align 8
  %306 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %8
  %307 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %306) #3
  %308 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %307) #3
  %309 = load i32, i32* %308, align 4
  %310 = load volatile i64*, i64** %17
  %311 = load i64, i64* %310, align 8
  %312 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %19
  %313 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %312, i64 %311) #3
  %314 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %7
  %315 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %314, i32 0, i32 0
  store i32* %313, i32** %315, align 8
  %316 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %7
  %317 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %316) #3
  store i32 %309, i32* %317, align 4
  %318 = load volatile i64*, i64** %13
  %319 = load i64, i64* %318, align 8
  %320 = add i64 %319, 4251708634082123262
  %321 = sub i64 %320, 1
  %322 = sub i64 %321, 4251708634082123262
  %323 = sub nsw i64 %319, 1
  %324 = load volatile i64*, i64** %17
  store i64 %322, i64* %324, align 8
  store i32 -1373003279, i32* %31
  br label %434

; <label>:325:                                    ; preds = %32
  %326 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %327 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %326 to i8*
  %328 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %19
  %329 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %328 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %327, i8* %329, i64 8, i32 8, i1 false)
  %330 = load volatile i64*, i64** %17
  %331 = load i64, i64* %330, align 8
  %332 = load volatile i64*, i64** %14
  %333 = load i64, i64* %332, align 8
  %334 = load volatile i32*, i32** %15
  %335 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %334) #3
  %336 = load i32, i32* %335, align 4
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valENS0_15_Iter_less_iterE()
  %337 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %338 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %337, i32 0, i32 0
  %339 = load i32*, i32** %338, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliNS0_5__ops14_Iter_less_valEEvT_T0_SA_T1_T2_(i32* %339, i64 %331, i64 %333, i32 %336)
  ret void

; <label>:340:                                    ; preds = %32
  %341 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %342 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %343 = alloca i64, align 8
  %344 = alloca i64, align 8
  %345 = alloca i32, align 4
  %346 = alloca i64, align 8
  %347 = alloca i64, align 8
  %348 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %349 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %350 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %351 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %352 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %353 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %354 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %355 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %356 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %357 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %358 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %341, i32 0, i32 0
  store i32* %0, i32** %358, align 8
  store i64 %1, i64* %343, align 8
  store i64 %2, i64* %344, align 8
  store i32 %3, i32* %345, align 4
  %359 = load i64, i64* %343, align 8
  store i64 %359, i64* %346, align 8
  %360 = load i64, i64* %343, align 8
  store i64 %360, i64* %347, align 8
  store i32 214174255, i32* %31
  br label %434

; <label>:361:                                    ; preds = %32
  %362 = load volatile i64*, i64** %13
  %363 = load i64, i64* %362, align 8
  %364 = load volatile i64*, i64** %16
  %365 = load i64, i64* %364, align 8
  %366 = shl i64 %365, 1
  %367 = sub i64 0, 1
  %368 = add i64 %365, %367
  %369 = sub i64 %365, 1
  %370 = mul i64 %368, 1
  %371 = shl i64 %365, 1
  %372 = add i64 %365, 8882120260629951999
  %373 = sub i64 %372, 1
  %374 = sub i64 %373, 8882120260629951999
  %375 = sub i64 %365, 1
  %376 = mul i64 %374, 1
  %377 = sub i64 0, -7912199851415872681
  %378 = sub i64 %377, %365
  %379 = add i64 %378, -7912199851415872681
  %380 = sub i64 0, %365
  %381 = sub i64 %379, -9173402719158314281
  %382 = add i64 %381, 1
  %383 = add i64 %382, -9173402719158314281
  %384 = add i64 %379, 1
  %385 = shl i64 %365, 1
  %386 = sub i64 0, 1
  %387 = add i64 %365, %386
  %388 = sub i64 %365, 1
  %389 = mul i64 %387, 1
  %390 = add i64 %365, 1272444773733236195
  %391 = sub i64 %390, 1
  %392 = sub i64 %391, 1272444773733236195
  %393 = sub nsw i64 %365, 1
  %394 = sub i64 0, 2
  %395 = add i64 %392, %394
  %396 = sub i64 %392, 2
  %397 = mul i64 %395, 2
  %398 = add i64 %392, -3750070875710624818
  %399 = sub i64 %398, 2
  %400 = sub i64 %399, -3750070875710624818
  %401 = sub i64 %392, 2
  %402 = mul i64 %400, 2
  %403 = add i64 0, 9197079217387764751
  %404 = sub i64 %403, %392
  %405 = sub i64 %404, 9197079217387764751
  %406 = sub i64 0, %392
  %407 = sub i64 0, 2
  %408 = sub i64 %405, %407
  %409 = add i64 %405, 2
  %410 = sdiv i64 %392, 2
  %411 = icmp slt i64 %363, %410
  store i32 -984847190, i32* %31
  br label %434

; <label>:412:                                    ; preds = %32
  %413 = load volatile i64*, i64** %13
  %414 = load i64, i64* %413, align 8
  %415 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %19
  %416 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %415, i64 %414) #3
  %417 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %10
  %418 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %417, i32 0, i32 0
  store i32* %416, i32** %418, align 8
  %419 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %10
  %420 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %419) #3
  %421 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %420) #3
  %422 = load i32, i32* %421, align 4
  %423 = load volatile i64*, i64** %17
  %424 = load i64, i64* %423, align 8
  %425 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %19
  %426 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %425, i64 %424) #3
  %427 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %9
  %428 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %427, i32 0, i32 0
  store i32* %426, i32** %428, align 8
  %429 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %9
  %430 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %429) #3
  store i32 %422, i32* %430, align 4
  %431 = load volatile i64*, i64** %13
  %432 = load i64, i64* %431, align 8
  %433 = load volatile i64*, i64** %17
  store i64 %432, i64* %433, align 8
  store i32 -199184515, i32* %31
  br label %434

; <label>:434:                                    ; preds = %412, %361, %340, %287, %275, %262, %261, %225, %209, %201, %167, %164, %140, %112, %111, %55, %35, %34
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.16"*, i32** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.538
  %6 = load i32, i32* @y.539
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 47441681, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 47441681, label %18
    i32 719536132, label %38
    i32 -1612041901, label %72
    i32 -1724717167, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 719536132, i32 -1724717167
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %40 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %39, align 8
  store i32** %1, i32*** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %39, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %41, i32 0, i32 0
  %43 = load i32**, i32*** %40, align 8
  %44 = load i32*, i32** %43, align 8
  store i32* %44, i32** %42, align 8
  %45 = load i32, i32* @x.538
  %46 = load i32, i32* @y.539
  %47 = sub i32 %45, -1128690303
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1128690303
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1612041901, i32 -1724717167
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %75 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %74, align 8
  store i32** %1, i32*** %75, align 8
  %76 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %74, align 8
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %76, i32 0, i32 0
  %78 = load i32**, i32*** %75, align 8
  %79 = load i32*, i32** %78, align 8
  store i32* %79, i32** %77, align 8
  store i32 719536132, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliNS0_5__ops14_Iter_less_valEEvT_T0_SA_T1_T2_(i32*, i64, i64, i32) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  store i32* %0, i32** %15, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store i32 %3, i32* %9, align 4
  %16 = load i64, i64* %7, align 8
  %17 = sub i64 0, 1
  %18 = add i64 %16, %17
  %19 = sub nsw i64 %16, 1
  %20 = sdiv i64 %18, 2
  store i64 %20, i64* %10, align 8
  %21 = alloca i32
  store i32 1803922148, i32* %21
  %22 = alloca i1
  br label %23

; <label>:23:                                     ; preds = %4, %232
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 1803922148, label %26
    i32 1029805748, label %31
    i32 -1384026437, label %38
    i32 964063669, label %41
    i32 886693261, label %56
    i32 822516365, label %100
    i32 -850050879, label %101
    i32 1684274863, label %129
    i32 624715263, label %163
    i32 258908978, label %164
    i32 722103525, label %225
  ]

; <label>:25:                                     ; preds = %23
  br label %232

; <label>:26:                                     ; preds = %23
  %27 = load i64, i64* %7, align 8
  %28 = load i64, i64* %8, align 8
  %29 = icmp sgt i64 %27, %28
  %30 = select i1 %29, i32 1029805748, i32 -1384026437
  store i32 %30, i32* %21
  store i1 false, i1* %22
  br label %232

; <label>:31:                                     ; preds = %23
  %32 = load i64, i64* %10, align 8
  %33 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %5, i64 %32) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  store i32* %33, i32** %34, align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = call zeroext i1 @_ZNK9__gnu_cxx5__ops14_Iter_less_valclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_less_val"* %6, i32* %36, i32* dereferenceable(4) %9)
  store i32 -1384026437, i32* %21
  store i1 %37, i1* %22
  br label %232

; <label>:38:                                     ; preds = %23
  %39 = load i1, i1* %22
  %40 = select i1 %39, i32 964063669, i32 -850050879
  store i32 %40, i32* %21
  br label %232

; <label>:41:                                     ; preds = %23
  %42 = load i32, i32* @x.540
  %43 = load i32, i32* @y.541
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 886693261, i32 258908978
  store i32 %55, i32* %21
  br label %232

; <label>:56:                                     ; preds = %23
  %57 = load i64, i64* %10, align 8
  %58 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %5, i64 %57) #3
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %12, i32 0, i32 0
  store i32* %58, i32** %59, align 8
  %60 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %12) #3
  %61 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %60) #3
  %62 = load i32, i32* %61, align 4
  %63 = load i64, i64* %7, align 8
  %64 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %5, i64 %63) #3
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %13, i32 0, i32 0
  store i32* %64, i32** %65, align 8
  %66 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %13) #3
  store i32 %62, i32* %66, align 4
  %67 = load i64, i64* %10, align 8
  store i64 %67, i64* %7, align 8
  %68 = load i64, i64* %7, align 8
  %69 = sub i64 0, 1
  %70 = add i64 %68, %69
  %71 = sub nsw i64 %68, 1
  %72 = sdiv i64 %70, 2
  store i64 %72, i64* %10, align 8
  %73 = load i32, i32* @x.540
  %74 = load i32, i32* @y.541
  %75 = add i32 %73, -387406092
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -387406092
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 822516365, i32 258908978
  store i32 %99, i32* %21
  br label %232

; <label>:100:                                    ; preds = %23
  store i32 1803922148, i32* %21
  br label %232

; <label>:101:                                    ; preds = %23
  %102 = load i32, i32* @x.540
  %103 = load i32, i32* @y.541
  %104 = add i32 %102, -1306558440
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, -1306558440
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 1684274863, i32 722103525
  store i32 %128, i32* %21
  br label %232

; <label>:129:                                    ; preds = %23
  %130 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %9) #3
  %131 = load i32, i32* %130, align 4
  %132 = load i64, i64* %7, align 8
  %133 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %5, i64 %132) #3
  %134 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %14, i32 0, i32 0
  store i32* %133, i32** %134, align 8
  %135 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %14) #3
  store i32 %131, i32* %135, align 4
  %136 = load i32, i32* @x.540
  %137 = load i32, i32* @y.541
  %138 = sub i32 %136, -1454525799
  %139 = sub i32 %138, 1
  %140 = add i32 %139, -1454525799
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  %162 = select i1 %160, i32 624715263, i32 722103525
  store i32 %162, i32* %21
  br label %232

; <label>:163:                                    ; preds = %23
  ret void

; <label>:164:                                    ; preds = %23
  %165 = load i64, i64* %10, align 8
  %166 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %5, i64 %165) #3
  %167 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %12, i32 0, i32 0
  store i32* %166, i32** %167, align 8
  %168 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %12) #3
  %169 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %168) #3
  %170 = load i32, i32* %169, align 4
  %171 = load i64, i64* %7, align 8
  %172 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %5, i64 %171) #3
  %173 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %13, i32 0, i32 0
  store i32* %172, i32** %173, align 8
  %174 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %13) #3
  store i32 %170, i32* %174, align 4
  %175 = load i64, i64* %10, align 8
  store i64 %175, i64* %7, align 8
  %176 = load i64, i64* %7, align 8
  %177 = shl i64 %176, 1
  %178 = sub i64 %176, 417059112980041751
  %179 = sub i64 %178, 1
  %180 = add i64 %179, 417059112980041751
  %181 = sub i64 %176, 1
  %182 = mul i64 %180, 1
  %183 = add i64 %176, -2616287793442008209
  %184 = sub i64 %183, 1
  %185 = sub i64 %184, -2616287793442008209
  %186 = sub i64 %176, 1
  %187 = mul i64 %185, 1
  %188 = sub i64 0, 1
  %189 = add i64 %176, %188
  %190 = sub i64 %176, 1
  %191 = mul i64 %189, 1
  %192 = shl i64 %176, 1
  %193 = shl i64 %176, 1
  %194 = sub i64 0, 1
  %195 = add i64 %176, %194
  %196 = sub nsw i64 %176, 1
  %197 = add i64 0, -4875281736573955588
  %198 = sub i64 %197, %195
  %199 = sub i64 %198, -4875281736573955588
  %200 = sub i64 0, %195
  %201 = sub i64 0, %199
  %202 = sub i64 0, 2
  %203 = add i64 %201, %202
  %204 = sub i64 0, %203
  %205 = add i64 %199, 2
  %206 = shl i64 %195, 2
  %207 = sub i64 0, %195
  %208 = add i64 0, %207
  %209 = sub i64 0, %195
  %210 = sub i64 0, %208
  %211 = sub i64 0, 2
  %212 = add i64 %210, %211
  %213 = sub i64 0, %212
  %214 = add i64 %208, 2
  %215 = shl i64 %195, 2
  %216 = shl i64 %195, 2
  %217 = add i64 0, -1679025209788960245
  %218 = sub i64 %217, %195
  %219 = sub i64 %218, -1679025209788960245
  %220 = sub i64 0, %195
  %221 = sub i64 0, 2
  %222 = sub i64 %219, %221
  %223 = add i64 %219, 2
  %224 = sdiv i64 %195, 2
  store i64 %224, i64* %10, align 8
  store i32 886693261, i32* %21
  br label %232

; <label>:225:                                    ; preds = %23
  %226 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %9) #3
  %227 = load i32, i32* %226, align 4
  %228 = load i64, i64* %7, align 8
  %229 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %5, i64 %228) #3
  %230 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %14, i32 0, i32 0
  store i32* %229, i32** %230, align 8
  %231 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %14) #3
  store i32 %227, i32* %231, align 4
  store i32 1684274863, i32* %21
  br label %232

; <label>:232:                                    ; preds = %225, %164, %129, %101, %100, %56, %41, %38, %31, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valENS0_15_Iter_less_iterE() #4 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops14_Iter_less_valclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_less_val"*, i32*, i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val"*, align 8
  %6 = alloca i32*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %1, i32** %7, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_less_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_less_val"** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load %"struct.__gnu_cxx::__ops::_Iter_less_val"*, %"struct.__gnu_cxx::__ops::_Iter_less_val"** %5, align 8
  %9 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %4) #3
  %10 = load i32, i32* %9, align 4
  %11 = load i32*, i32** %6, align 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %10, %12
  ret i1 %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.16"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i32 -1
  store i32* %6, i32** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.16"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_(i32*, i32*, i32*, i32*) #0 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i32*
  %8 = alloca i32*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %13 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %9, i32 0, i32 0
  store i32* %0, i32** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %10, i32 0, i32 0
  store i32* %1, i32** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  store i32* %2, i32** %38, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %12, i32 0, i32 0
  store i32* %3, i32** %39, align 8
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %14 to i8*
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %15 to i8*
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %14, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  store i32* %45, i32** %8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %15, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  store i32* %47, i32** %7
  %48 = alloca i32
  store i32 -293857294, i32* %48
  br label %49

; <label>:49:                                     ; preds = %4, %494
  %50 = load i32, i32* %48
  switch i32 %50, label %51 [
    i32 -293857294, label %52
    i32 -1621413282, label %57
    i32 -1344427889, label %73
    i32 -617915100, label %110
    i32 -1090845634, label %113
    i32 -1724540127, label %140
    i32 2074907551, label %164
    i32 -54553264, label %165
    i32 1894904512, label %193
    i32 13182752, label %230
    i32 1719816627, label %233
    i32 -560939971, label %242
    i32 1921839321, label %251
    i32 -259756026, label %252
    i32 -843845558, label %267
    i32 -843045983, label %283
    i32 864535739, label %284
    i32 389613656, label %295
    i32 -1919922719, label %310
    i32 -348892471, label %345
    i32 -1145724415, label %346
    i32 -1963031961, label %357
    i32 1638708275, label %366
    i32 -1259855846, label %375
    i32 -246980187, label %391
    i32 -1305495441, label %406
    i32 -413885378, label %407
    i32 1893867089, label %435
    i32 469257419, label %451
    i32 1450902603, label %452
    i32 231830707, label %453
    i32 577163491, label %463
    i32 -1423018803, label %472
    i32 -2067149411, label %482
    i32 587417173, label %483
    i32 -2051155094, label %492
    i32 -1197194912, label %493
  ]

; <label>:51:                                     ; preds = %49
  br label %494

; <label>:52:                                     ; preds = %49
  %53 = load volatile i32*, i32** %8
  %54 = load volatile i32*, i32** %7
  %55 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %13, i32* %53, i32* %54)
  %56 = select i1 %55, i32 -1621413282, i32 864535739
  store i32 %56, i32* %48
  br label %494

; <label>:57:                                     ; preds = %49
  %58 = load i32, i32* @x.548
  %59 = load i32, i32* @y.549
  %60 = add i32 %58, 219011430
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 219011430
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -1344427889, i32 231830707
  store i32 %72, i32* %48
  br label %494

; <label>:73:                                     ; preds = %49
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %16 to i8*
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %17 to i8*
  %77 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 8, i1 false)
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %16, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %17, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %13, i32* %79, i32* %81)
  store i1 %82, i1* %6
  %83 = load i32, i32* @x.548
  %84 = load i32, i32* @y.549
  %85 = add i32 %83, -812518597
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, -812518597
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 true, true
  %96 = and i1 %93, true
  %97 = and i1 %91, %95
  %98 = and i1 %94, true
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 true, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 -617915100, i32 231830707
  store i32 %109, i32* %48
  br label %494

; <label>:110:                                    ; preds = %49
  %111 = load volatile i1, i1* %6
  %112 = select i1 %111, i32 -1090845634, i32 -54553264
  store i32 %112, i32* %48
  br label %494

; <label>:113:                                    ; preds = %49
  %114 = load i32, i32* @x.548
  %115 = load i32, i32* @y.549
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 false, true
  %126 = and i1 %123, false
  %127 = and i1 %121, %125
  %128 = and i1 %124, false
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 false, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  %139 = select i1 %137, i32 -1724540127, i32 577163491
  store i32 %139, i32* %48
  br label %494

; <label>:140:                                    ; preds = %49
  %141 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %18 to i8*
  %142 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 8, i32 8, i1 false)
  %143 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %19 to i8*
  %144 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %144, i64 8, i32 8, i1 false)
  %145 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %18, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %19, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %146, i32* %148)
  %149 = load i32, i32* @x.548
  %150 = load i32, i32* @y.549
  %151 = sub i32 %149, -1989264323
  %152 = sub i32 %151, 1
  %153 = add i32 %152, -1989264323
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = and i1 %157, %158
  %160 = xor i1 %157, %158
  %161 = or i1 %159, %160
  %162 = or i1 %157, %158
  %163 = select i1 %161, i32 2074907551, i32 577163491
  store i32 %163, i32* %48
  br label %494

; <label>:164:                                    ; preds = %49
  store i32 -259756026, i32* %48
  br label %494

; <label>:165:                                    ; preds = %49
  %166 = load i32, i32* @x.548
  %167 = load i32, i32* @y.549
  %168 = add i32 %166, -1846795408
  %169 = sub i32 %168, 1
  %170 = sub i32 %169, -1846795408
  %171 = sub i32 %166, 1
  %172 = mul i32 %166, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %167, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 true, true
  %179 = and i1 %176, true
  %180 = and i1 %174, %178
  %181 = and i1 %177, true
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 true, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  %192 = select i1 %190, i32 1894904512, i32 -1423018803
  store i32 %192, i32* %48
  br label %494

; <label>:193:                                    ; preds = %49
  %194 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %20 to i8*
  %195 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %194, i8* %195, i64 8, i32 8, i1 false)
  %196 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %21 to i8*
  %197 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %196, i8* %197, i64 8, i32 8, i1 false)
  %198 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %20, i32 0, i32 0
  %199 = load i32*, i32** %198, align 8
  %200 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %21, i32 0, i32 0
  %201 = load i32*, i32** %200, align 8
  %202 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %13, i32* %199, i32* %201)
  store i1 %202, i1* %5
  %203 = load i32, i32* @x.548
  %204 = load i32, i32* @y.549
  %205 = add i32 %203, -1690992826
  %206 = sub i32 %205, 1
  %207 = sub i32 %206, -1690992826
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = xor i1 %211, true
  %214 = xor i1 %212, true
  %215 = xor i1 false, true
  %216 = and i1 %213, false
  %217 = and i1 %211, %215
  %218 = and i1 %214, false
  %219 = and i1 %212, %215
  %220 = or i1 %216, %217
  %221 = or i1 %218, %219
  %222 = xor i1 %220, %221
  %223 = or i1 %213, %214
  %224 = xor i1 %223, true
  %225 = or i1 false, %215
  %226 = and i1 %224, %225
  %227 = or i1 %222, %226
  %228 = or i1 %211, %212
  %229 = select i1 %227, i32 13182752, i32 -1423018803
  store i32 %229, i32* %48
  br label %494

; <label>:230:                                    ; preds = %49
  %231 = load volatile i1, i1* %5
  %232 = select i1 %231, i32 1719816627, i32 -560939971
  store i32 %232, i32* %48
  br label %494

; <label>:233:                                    ; preds = %49
  %234 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %22 to i8*
  %235 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %234, i8* %235, i64 8, i32 8, i1 false)
  %236 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %23 to i8*
  %237 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %236, i8* %237, i64 8, i32 8, i1 false)
  %238 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %22, i32 0, i32 0
  %239 = load i32*, i32** %238, align 8
  %240 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %23, i32 0, i32 0
  %241 = load i32*, i32** %240, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %239, i32* %241)
  store i32 1921839321, i32* %48
  br label %494

; <label>:242:                                    ; preds = %49
  %243 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %24 to i8*
  %244 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %243, i8* %244, i64 8, i32 8, i1 false)
  %245 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %25 to i8*
  %246 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %245, i8* %246, i64 8, i32 8, i1 false)
  %247 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %24, i32 0, i32 0
  %248 = load i32*, i32** %247, align 8
  %249 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %25, i32 0, i32 0
  %250 = load i32*, i32** %249, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %248, i32* %250)
  store i32 1921839321, i32* %48
  br label %494

; <label>:251:                                    ; preds = %49
  store i32 -259756026, i32* %48
  br label %494

; <label>:252:                                    ; preds = %49
  %253 = load i32, i32* @x.548
  %254 = load i32, i32* @y.549
  %255 = sub i32 0, 1
  %256 = add i32 %253, %255
  %257 = sub i32 %253, 1
  %258 = mul i32 %253, %256
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %254, 10
  %262 = and i1 %260, %261
  %263 = xor i1 %260, %261
  %264 = or i1 %262, %263
  %265 = or i1 %260, %261
  %266 = select i1 %264, i32 -843845558, i32 -2067149411
  store i32 %266, i32* %48
  br label %494

; <label>:267:                                    ; preds = %49
  %268 = load i32, i32* @x.548
  %269 = load i32, i32* @y.549
  %270 = add i32 %268, -1304631601
  %271 = sub i32 %270, 1
  %272 = sub i32 %271, -1304631601
  %273 = sub i32 %268, 1
  %274 = mul i32 %268, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %269, 10
  %278 = and i1 %276, %277
  %279 = xor i1 %276, %277
  %280 = or i1 %278, %279
  %281 = or i1 %276, %277
  %282 = select i1 %280, i32 -843045983, i32 -2067149411
  store i32 %282, i32* %48
  br label %494

; <label>:283:                                    ; preds = %49
  store i32 1450902603, i32* %48
  br label %494

; <label>:284:                                    ; preds = %49
  %285 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %26 to i8*
  %286 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %285, i8* %286, i64 8, i32 8, i1 false)
  %287 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %27 to i8*
  %288 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %287, i8* %288, i64 8, i32 8, i1 false)
  %289 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %26, i32 0, i32 0
  %290 = load i32*, i32** %289, align 8
  %291 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %27, i32 0, i32 0
  %292 = load i32*, i32** %291, align 8
  %293 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %13, i32* %290, i32* %292)
  %294 = select i1 %293, i32 389613656, i32 -1145724415
  store i32 %294, i32* %48
  br label %494

; <label>:295:                                    ; preds = %49
  %296 = load i32, i32* @x.548
  %297 = load i32, i32* @y.549
  %298 = sub i32 0, 1
  %299 = add i32 %296, %298
  %300 = sub i32 %296, 1
  %301 = mul i32 %296, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %297, 10
  %305 = and i1 %303, %304
  %306 = xor i1 %303, %304
  %307 = or i1 %305, %306
  %308 = or i1 %303, %304
  %309 = select i1 %307, i32 -1919922719, i32 587417173
  store i32 %309, i32* %48
  br label %494

; <label>:310:                                    ; preds = %49
  %311 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %28 to i8*
  %312 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %311, i8* %312, i64 8, i32 8, i1 false)
  %313 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %29 to i8*
  %314 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %313, i8* %314, i64 8, i32 8, i1 false)
  %315 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %28, i32 0, i32 0
  %316 = load i32*, i32** %315, align 8
  %317 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %29, i32 0, i32 0
  %318 = load i32*, i32** %317, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %316, i32* %318)
  %319 = load i32, i32* @x.548
  %320 = load i32, i32* @y.549
  %321 = sub i32 0, 1
  %322 = add i32 %319, %321
  %323 = sub i32 %319, 1
  %324 = mul i32 %319, %322
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %320, 10
  %328 = xor i1 %326, true
  %329 = xor i1 %327, true
  %330 = xor i1 true, true
  %331 = and i1 %328, true
  %332 = and i1 %326, %330
  %333 = and i1 %329, true
  %334 = and i1 %327, %330
  %335 = or i1 %331, %332
  %336 = or i1 %333, %334
  %337 = xor i1 %335, %336
  %338 = or i1 %328, %329
  %339 = xor i1 %338, true
  %340 = or i1 true, %330
  %341 = and i1 %339, %340
  %342 = or i1 %337, %341
  %343 = or i1 %326, %327
  %344 = select i1 %342, i32 -348892471, i32 587417173
  store i32 %344, i32* %48
  br label %494

; <label>:345:                                    ; preds = %49
  store i32 -413885378, i32* %48
  br label %494

; <label>:346:                                    ; preds = %49
  %347 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %30 to i8*
  %348 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %347, i8* %348, i64 8, i32 8, i1 false)
  %349 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %31 to i8*
  %350 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %349, i8* %350, i64 8, i32 8, i1 false)
  %351 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %30, i32 0, i32 0
  %352 = load i32*, i32** %351, align 8
  %353 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %31, i32 0, i32 0
  %354 = load i32*, i32** %353, align 8
  %355 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %13, i32* %352, i32* %354)
  %356 = select i1 %355, i32 -1963031961, i32 1638708275
  store i32 %356, i32* %48
  br label %494

; <label>:357:                                    ; preds = %49
  %358 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %32 to i8*
  %359 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %358, i8* %359, i64 8, i32 8, i1 false)
  %360 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %33 to i8*
  %361 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %360, i8* %361, i64 8, i32 8, i1 false)
  %362 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %32, i32 0, i32 0
  %363 = load i32*, i32** %362, align 8
  %364 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %33, i32 0, i32 0
  %365 = load i32*, i32** %364, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %363, i32* %365)
  store i32 -1259855846, i32* %48
  br label %494

; <label>:366:                                    ; preds = %49
  %367 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %34 to i8*
  %368 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %367, i8* %368, i64 8, i32 8, i1 false)
  %369 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %35 to i8*
  %370 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %369, i8* %370, i64 8, i32 8, i1 false)
  %371 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %34, i32 0, i32 0
  %372 = load i32*, i32** %371, align 8
  %373 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %35, i32 0, i32 0
  %374 = load i32*, i32** %373, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %372, i32* %374)
  store i32 -1259855846, i32* %48
  br label %494

; <label>:375:                                    ; preds = %49
  %376 = load i32, i32* @x.548
  %377 = load i32, i32* @y.549
  %378 = sub i32 %376, 995897119
  %379 = sub i32 %378, 1
  %380 = add i32 %379, 995897119
  %381 = sub i32 %376, 1
  %382 = mul i32 %376, %380
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %377, 10
  %386 = and i1 %384, %385
  %387 = xor i1 %384, %385
  %388 = or i1 %386, %387
  %389 = or i1 %384, %385
  %390 = select i1 %388, i32 -246980187, i32 -2051155094
  store i32 %390, i32* %48
  br label %494

; <label>:391:                                    ; preds = %49
  %392 = load i32, i32* @x.548
  %393 = load i32, i32* @y.549
  %394 = sub i32 0, 1
  %395 = add i32 %392, %394
  %396 = sub i32 %392, 1
  %397 = mul i32 %392, %395
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %393, 10
  %401 = and i1 %399, %400
  %402 = xor i1 %399, %400
  %403 = or i1 %401, %402
  %404 = or i1 %399, %400
  %405 = select i1 %403, i32 -1305495441, i32 -2051155094
  store i32 %405, i32* %48
  br label %494

; <label>:406:                                    ; preds = %49
  store i32 -413885378, i32* %48
  br label %494

; <label>:407:                                    ; preds = %49
  %408 = load i32, i32* @x.548
  %409 = load i32, i32* @y.549
  %410 = add i32 %408, -919336866
  %411 = sub i32 %410, 1
  %412 = sub i32 %411, -919336866
  %413 = sub i32 %408, 1
  %414 = mul i32 %408, %412
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %409, 10
  %418 = xor i1 %416, true
  %419 = xor i1 %417, true
  %420 = xor i1 false, true
  %421 = and i1 %418, false
  %422 = and i1 %416, %420
  %423 = and i1 %419, false
  %424 = and i1 %417, %420
  %425 = or i1 %421, %422
  %426 = or i1 %423, %424
  %427 = xor i1 %425, %426
  %428 = or i1 %418, %419
  %429 = xor i1 %428, true
  %430 = or i1 false, %420
  %431 = and i1 %429, %430
  %432 = or i1 %427, %431
  %433 = or i1 %416, %417
  %434 = select i1 %432, i32 1893867089, i32 -1197194912
  store i32 %434, i32* %48
  br label %494

; <label>:435:                                    ; preds = %49
  %436 = load i32, i32* @x.548
  %437 = load i32, i32* @y.549
  %438 = add i32 %436, 1501753925
  %439 = sub i32 %438, 1
  %440 = sub i32 %439, 1501753925
  %441 = sub i32 %436, 1
  %442 = mul i32 %436, %440
  %443 = urem i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %437, 10
  %446 = and i1 %444, %445
  %447 = xor i1 %444, %445
  %448 = or i1 %446, %447
  %449 = or i1 %444, %445
  %450 = select i1 %448, i32 469257419, i32 -1197194912
  store i32 %450, i32* %48
  br label %494

; <label>:451:                                    ; preds = %49
  store i32 1450902603, i32* %48
  br label %494

; <label>:452:                                    ; preds = %49
  ret void

; <label>:453:                                    ; preds = %49
  %454 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %16 to i8*
  %455 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %454, i8* %455, i64 8, i32 8, i1 false)
  %456 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %17 to i8*
  %457 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %456, i8* %457, i64 8, i32 8, i1 false)
  %458 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %16, i32 0, i32 0
  %459 = load i32*, i32** %458, align 8
  %460 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %17, i32 0, i32 0
  %461 = load i32*, i32** %460, align 8
  %462 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %13, i32* %459, i32* %461)
  store i32 -1344427889, i32* %48
  br label %494

; <label>:463:                                    ; preds = %49
  %464 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %18 to i8*
  %465 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %464, i8* %465, i64 8, i32 8, i1 false)
  %466 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %19 to i8*
  %467 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %466, i8* %467, i64 8, i32 8, i1 false)
  %468 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %18, i32 0, i32 0
  %469 = load i32*, i32** %468, align 8
  %470 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %19, i32 0, i32 0
  %471 = load i32*, i32** %470, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %469, i32* %471)
  store i32 -1724540127, i32* %48
  br label %494

; <label>:472:                                    ; preds = %49
  %473 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %20 to i8*
  %474 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %473, i8* %474, i64 8, i32 8, i1 false)
  %475 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %21 to i8*
  %476 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %475, i8* %476, i64 8, i32 8, i1 false)
  %477 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %20, i32 0, i32 0
  %478 = load i32*, i32** %477, align 8
  %479 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %21, i32 0, i32 0
  %480 = load i32*, i32** %479, align 8
  %481 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %13, i32* %478, i32* %480)
  store i32 1894904512, i32* %48
  br label %494

; <label>:482:                                    ; preds = %49
  store i32 -843845558, i32* %48
  br label %494

; <label>:483:                                    ; preds = %49
  %484 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %28 to i8*
  %485 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %484, i8* %485, i64 8, i32 8, i1 false)
  %486 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %29 to i8*
  %487 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %486, i8* %487, i64 8, i32 8, i1 false)
  %488 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %28, i32 0, i32 0
  %489 = load i32*, i32** %488, align 8
  %490 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %29, i32 0, i32 0
  %491 = load i32*, i32** %490, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %489, i32* %491)
  store i32 -1919922719, i32* %48
  br label %494

; <label>:492:                                    ; preds = %49
  store i32 -246980187, i32* %48
  br label %494

; <label>:493:                                    ; preds = %49
  store i32 1893867089, i32* %48
  br label %494

; <label>:494:                                    ; preds = %493, %492, %483, %482, %472, %463, %453, %451, %435, %407, %406, %391, %375, %366, %357, %346, %345, %310, %295, %284, %283, %267, %252, %251, %242, %233, %230, %193, %165, %164, %140, %113, %110, %73, %57, %52, %51
  br label %49
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmiEl(%"class.__gnu_cxx::__normal_iterator.16"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = sub i64 0, %10
  %12 = add i64 0, %11
  %13 = sub i64 0, %10
  %14 = getelementptr inbounds i32, i32* %9, i64 %12
  store i32* %14, i32** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.16"* %3, i32** dereferenceable(8) %6) #3
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  ret i32* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_S9_T0_(i32*, i32*, i32*) #4 comdat {
  %4 = alloca i32*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  store i32* %0, i32** %16, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  store i32* %1, i32** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %8, i32 0, i32 0
  store i32* %2, i32** %18, align 8
  %19 = alloca i32
  store i32 -1651944820, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %217
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1651944820, label %23
    i32 -796694743, label %24
    i32 -50752266, label %35
    i32 257817615, label %37
    i32 1552040902, label %39
    i32 -85854617, label %50
    i32 330703471, label %65
    i32 -489923692, label %94
    i32 835480426, label %95
    i32 1131104358, label %98
    i32 1504128718, label %114
    i32 1129516293, label %145
    i32 -1443354597, label %147
    i32 1426325390, label %174
    i32 -557979709, label %199
    i32 338576845, label %200
    i32 -154436920, label %202
    i32 812749552, label %207
  ]

; <label>:22:                                     ; preds = %20
  br label %217

; <label>:23:                                     ; preds = %20
  store i32 -796694743, i32* %19
  br label %217

; <label>:24:                                     ; preds = %20
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %10, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %9, i32* %30, i32* %32)
  %34 = select i1 %33, i32 -50752266, i32 257817615
  store i32 %34, i32* %19
  br label %217

; <label>:35:                                     ; preds = %20
  %36 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.16"* %6) #3
  store i32 -796694743, i32* %19
  br label %217

; <label>:37:                                     ; preds = %20
  %38 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.16"* %7) #3
  store i32 1552040902, i32* %19
  br label %217

; <label>:39:                                     ; preds = %20
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %12 to i8*
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %13 to i8*
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %12, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %13, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %9, i32* %45, i32* %47)
  %49 = select i1 %48, i32 -85854617, i32 835480426
  store i32 %49, i32* %19
  br label %217

; <label>:50:                                     ; preds = %20
  %51 = load i32, i32* @x.552
  %52 = load i32, i32* @y.553
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 330703471, i32 338576845
  store i32 %64, i32* %19
  br label %217

; <label>:65:                                     ; preds = %20
  %66 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.16"* %7) #3
  %67 = load i32, i32* @x.552
  %68 = load i32, i32* @y.553
  %69 = add i32 %67, 1484754339
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 1484754339
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 -489923692, i32 338576845
  store i32 %93, i32* %19
  br label %217

; <label>:94:                                     ; preds = %20
  store i32 1552040902, i32* %19
  br label %217

; <label>:95:                                     ; preds = %20
  %96 = call zeroext i1 @_ZN9__gnu_cxxltIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %7) #3
  %97 = select i1 %96, i32 -1443354597, i32 1131104358
  store i32 %97, i32* %19
  br label %217

; <label>:98:                                     ; preds = %20
  %99 = load i32, i32* @x.552
  %100 = load i32, i32* @y.553
  %101 = add i32 %99, -741314305
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, -741314305
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 1504128718, i32 -154436920
  store i32 %113, i32* %19
  br label %217

; <label>:114:                                    ; preds = %20
  %115 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  %116 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %116, i64 8, i32 8, i1 false)
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  store i32* %118, i32** %4
  %119 = load i32, i32* @x.552
  %120 = load i32, i32* @y.553
  %121 = sub i32 0, 1
  %122 = add i32 %119, %121
  %123 = sub i32 %119, 1
  %124 = mul i32 %119, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %120, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 1129516293, i32 -154436920
  store i32 %144, i32* %19
  br label %217

; <label>:145:                                    ; preds = %20
  %146 = load volatile i32*, i32** %4
  ret i32* %146

; <label>:147:                                    ; preds = %20
  %148 = load i32, i32* @x.552
  %149 = load i32, i32* @y.553
  %150 = sub i32 0, 1
  %151 = add i32 %148, %150
  %152 = sub i32 %148, 1
  %153 = mul i32 %148, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %149, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 false, true
  %160 = and i1 %157, false
  %161 = and i1 %155, %159
  %162 = and i1 %158, false
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 false, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  %173 = select i1 %171, i32 1426325390, i32 812749552
  store i32 %173, i32* %19
  br label %217

; <label>:174:                                    ; preds = %20
  %175 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %14 to i8*
  %176 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %176, i64 8, i32 8, i1 false)
  %177 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %15 to i8*
  %178 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %177, i8* %178, i64 8, i32 8, i1 false)
  %179 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %14, i32 0, i32 0
  %180 = load i32*, i32** %179, align 8
  %181 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %15, i32 0, i32 0
  %182 = load i32*, i32** %181, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %180, i32* %182)
  %183 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.16"* %6) #3
  %184 = load i32, i32* @x.552
  %185 = load i32, i32* @y.553
  %186 = add i32 %184, 1218844002
  %187 = sub i32 %186, 1
  %188 = sub i32 %187, 1218844002
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  %198 = select i1 %196, i32 -557979709, i32 812749552
  store i32 %198, i32* %19
  br label %217

; <label>:199:                                    ; preds = %20
  store i32 -1651944820, i32* %19
  br label %217

; <label>:200:                                    ; preds = %20
  %201 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.16"* %7) #3
  store i32 330703471, i32* %19
  br label %217

; <label>:202:                                    ; preds = %20
  %203 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  %204 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %203, i8* %204, i64 8, i32 8, i1 false)
  %205 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  %206 = load i32*, i32** %205, align 8
  store i32 1504128718, i32* %19
  br label %217

; <label>:207:                                    ; preds = %20
  %208 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %14 to i8*
  %209 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %208, i8* %209, i64 8, i32 8, i1 false)
  %210 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %15 to i8*
  %211 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %210, i8* %211, i64 8, i32 8, i1 false)
  %212 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %14, i32 0, i32 0
  %213 = load i32*, i32** %212, align 8
  %214 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %15, i32 0, i32 0
  %215 = load i32*, i32** %214, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32* %213, i32* %215)
  %216 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.16"* %6) #3
  store i32 1426325390, i32* %19
  br label %217

; <label>:217:                                    ; preds = %207, %202, %200, %199, %174, %147, %114, %98, %95, %94, %65, %50, %39, %37, %35, %24, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_EvT_T0_(i32*, i32*) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.554
  %6 = load i32, i32* @y.555
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 778969829, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 778969829, label %18
    i32 -1386742147, label %26
    i32 464258850, label %60
    i32 -2125351802, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1386742147, i32 -2125351802
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %27, i32 0, i32 0
  store i32* %0, i32** %29, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %28, i32 0, i32 0
  store i32* %1, i32** %30, align 8
  %31 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %27) #3
  %32 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %28) #3
  call void @_ZSt4swapIiEvRT_S1_(i32* dereferenceable(4) %31, i32* dereferenceable(4) %32) #3
  %33 = load i32, i32* @x.554
  %34 = load i32, i32* @y.555
  %35 = sub i32 %33, -886479244
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -886479244
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 464258850, i32 -2125351802
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %62, i32 0, i32 0
  store i32* %0, i32** %64, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %63, i32 0, i32 0
  store i32* %1, i32** %65, align 8
  %66 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %62) #3
  %67 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %63) #3
  call void @_ZSt4swapIiEvRT_S1_(i32* dereferenceable(4) %66, i32* dereferenceable(4) %67) #3
  store i32 -1386742147, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIiEvRT_S1_(i32* dereferenceable(4), i32* dereferenceable(4)) #4 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %6) #3
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %5, align 4
  %9 = load i32*, i32** %4, align 8
  %10 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %9) #3
  %11 = load i32, i32* %10, align 4
  %12 = load i32*, i32** %3, align 8
  store i32 %11, i32* %12, align 4
  %13 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %5) #3
  %14 = load i32, i32* %13, align 4
  %15 = load i32*, i32** %4, align 8
  store i32 %14, i32* %15, align 4
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #6

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32*, i32*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %15 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %16 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %17 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  store i32* %0, i32** %18, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %1, i32** %19, align 8
  %20 = alloca i32
  store i32 -1248537690, i32* %20
  br label %21

; <label>:21:                                     ; preds = %2, %75
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1248537690, label %24
    i32 416733632, label %27
    i32 1621358257, label %28
    i32 -1748257128, label %31
    i32 1571469229, label %34
    i32 -429714530, label %45
    i32 -1146808318, label %66
    i32 491883017, label %71
    i32 92984811, label %72
    i32 -1335526966, label %74
  ]

; <label>:23:                                     ; preds = %21
  br label %75

; <label>:24:                                     ; preds = %21
  %25 = call zeroext i1 @_ZN9__gnu_cxxeqIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %4) #3
  %26 = select i1 %25, i32 416733632, i32 1621358257
  store i32 %26, i32* %20
  br label %75

; <label>:27:                                     ; preds = %21
  store i32 -1335526966, i32* %20
  br label %75

; <label>:28:                                     ; preds = %21
  %29 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %3, i64 1) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  store i32* %29, i32** %30, align 8
  store i32 -1748257128, i32* %20
  br label %75

; <label>:31:                                     ; preds = %21
  %32 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %4) #3
  %33 = select i1 %32, i32 1571469229, i32 -1335526966
  store i32 %33, i32* %20
  br label %75

; <label>:34:                                     ; preds = %21
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false)
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %8 to i8*
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %8, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPiSt6vectorIiSaIiEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %5, i32* %40, i32* %42)
  %44 = select i1 %43, i32 -429714530, i32 -1146808318
  store i32 %44, i32* %20
  br label %75

; <label>:45:                                     ; preds = %21
  %46 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %6) #3
  %47 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %46) #3
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %9, align 4
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = call i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEplEl(%"class.__gnu_cxx::__normal_iterator.16"* %6, i64 1) #3
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %12, i32 0, i32 0
  store i32* %53, i32** %54, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %10, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %12, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = call i32* @_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET0_T_S8_S7_(i32* %56, i32* %58, i32* %60)
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %13, i32 0, i32 0
  store i32* %61, i32** %62, align 8
  %63 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %9) #3
  %64 = load i32, i32* %63, align 4
  %65 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %3) #3
  store i32 %64, i32* %65, align 4
  store i32 491883017, i32* %20
  br label %75

; <label>:66:                                     ; preds = %21
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %14 to i8*
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__val_comp_iterENS0_15_Iter_less_iterE()
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %14, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  call void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops14_Val_less_iterEEvT_T0_(i32* %70)
  store i32 491883017, i32* %20
  br label %75

; <label>:71:                                     ; preds = %21
  store i32 92984811, i32* %20
  br label %75

; <label>:72:                                     ; preds = %21
  %73 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.16"* %6) #3
  store i32 -1748257128, i32* %20
  br label %75

; <label>:74:                                     ; preds = %21
  ret void

; <label>:75:                                     ; preds = %72, %71, %66, %45, %34, %31, %28, %27, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i32*, i32*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = alloca i32
  store i32 -1754569857, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %178
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1754569857, label %19
    i32 -145931660, label %22
    i32 -577057097, label %37
    i32 -1023756171, label %68
    i32 1612667122, label %69
    i32 2014025542, label %96
    i32 1288636729, label %113
    i32 -871556813, label %114
    i32 826075282, label %142
    i32 -1158940718, label %169
    i32 -920698254, label %170
    i32 2121552355, label %175
    i32 -1787851261, label %177
  ]

; <label>:18:                                     ; preds = %16
  br label %178

; <label>:19:                                     ; preds = %16
  %20 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8) %4) #3
  %21 = select i1 %20, i32 -145931660, i32 -871556813
  store i32 %21, i32* %15
  br label %178

; <label>:22:                                     ; preds = %16
  %23 = load i32, i32* @x.560
  %24 = load i32, i32* @y.561
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -577057097, i32 -920698254
  store i32 %36, i32* %15
  br label %178

; <label>:37:                                     ; preds = %16
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__val_comp_iterENS0_15_Iter_less_iterE()
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  call void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops14_Val_less_iterEEvT_T0_(i32* %41)
  %42 = load i32, i32* @x.560
  %43 = load i32, i32* @y.561
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1023756171, i32 -920698254
  store i32 %67, i32* %15
  br label %178

; <label>:68:                                     ; preds = %16
  store i32 1612667122, i32* %15
  br label %178

; <label>:69:                                     ; preds = %16
  %70 = load i32, i32* @x.560
  %71 = load i32, i32* @y.561
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 false, true
  %82 = and i1 %79, false
  %83 = and i1 %77, %81
  %84 = and i1 %80, false
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 false, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 2014025542, i32 2121552355
  store i32 %95, i32* %15
  br label %178

; <label>:96:                                     ; preds = %16
  %97 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.16"* %6) #3
  %98 = load i32, i32* @x.560
  %99 = load i32, i32* @y.561
  %100 = sub i32 %98, -344537367
  %101 = sub i32 %100, 1
  %102 = add i32 %101, -344537367
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 1288636729, i32 2121552355
  store i32 %112, i32* %15
  br label %178

; <label>:113:                                    ; preds = %16
  store i32 -1754569857, i32* %15
  br label %178

; <label>:114:                                    ; preds = %16
  %115 = load i32, i32* @x.560
  %116 = load i32, i32* @y.561
  %117 = add i32 %115, -149516994
  %118 = sub i32 %117, 1
  %119 = sub i32 %118, -149516994
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 true, true
  %128 = and i1 %125, true
  %129 = and i1 %123, %127
  %130 = and i1 %126, true
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 true, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  %141 = select i1 %139, i32 826075282, i32 -1787851261
  store i32 %141, i32* %15
  br label %178

; <label>:142:                                    ; preds = %16
  %143 = load i32, i32* @x.560
  %144 = load i32, i32* @y.561
  %145 = sub i32 0, 1
  %146 = add i32 %143, %145
  %147 = sub i32 %143, 1
  %148 = mul i32 %143, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %144, 10
  %152 = xor i1 %150, true
  %153 = xor i1 %151, true
  %154 = xor i1 true, true
  %155 = and i1 %152, true
  %156 = and i1 %150, %154
  %157 = and i1 %153, true
  %158 = and i1 %151, %154
  %159 = or i1 %155, %156
  %160 = or i1 %157, %158
  %161 = xor i1 %159, %160
  %162 = or i1 %152, %153
  %163 = xor i1 %162, true
  %164 = or i1 true, %154
  %165 = and i1 %163, %164
  %166 = or i1 %161, %165
  %167 = or i1 %150, %151
  %168 = select i1 %166, i32 -1158940718, i32 -1787851261
  store i32 %168, i32* %15
  br label %178

; <label>:169:                                    ; preds = %16
  ret void

; <label>:170:                                    ; preds = %16
  %171 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  %172 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %171, i8* %172, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__val_comp_iterENS0_15_Iter_less_iterE()
  %173 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  %174 = load i32*, i32** %173, align 8
  call void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops14_Val_less_iterEEvT_T0_(i32* %174)
  store i32 -577057097, i32* %15
  br label %178

; <label>:175:                                    ; preds = %16
  %176 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.16"* %6) #3
  store i32 2014025542, i32* %15
  br label %178

; <label>:177:                                    ; preds = %16
  store i32 826075282, i32* %15
  br label %178

; <label>:178:                                    ; preds = %177, %175, %170, %142, %114, %113, %96, %69, %68, %37, %22, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.16"* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.562
  %7 = load i32, i32* @y.563
  %8 = add i32 %6, 597096112
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 597096112
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1950391180, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1950391180, label %20
    i32 -699656131, label %28
    i32 -1001764367, label %53
    i32 -1674978415, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -699656131, i32 -1674978415
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %1, %"class.__gnu_cxx::__normal_iterator.16"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %29, align 8
  %32 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %31) #3
  %33 = load i32*, i32** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %30, align 8
  %35 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %34) #3
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %33, %36
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.562
  %39 = load i32, i32* @y.563
  %40 = add i32 %38, -2003269100
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -2003269100
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1001764367, i32 -1674978415
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile i1, i1* %3
  ret i1 %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.16"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %0, %"class.__gnu_cxx::__normal_iterator.16"** %56, align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %1, %"class.__gnu_cxx::__normal_iterator.16"** %57, align 8
  %58 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %56, align 8
  %59 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %58) #3
  %60 = load i32*, i32** %59, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %57, align 8
  %62 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %61) #3
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq i32* %60, %63
  store i32 -699656131, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET0_T_S8_S7_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.564
  %8 = load i32, i32* @y.565
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1384821592, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %119
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1384821592, label %20
    i32 -558110003, label %28
    i32 2119474712, label %80
    i32 822845119, label %82
  ]

; <label>:19:                                     ; preds = %17
  br label %119

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -558110003, i32 822845119
  store i32 %27, i32* %16
  br label %119

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %30, i32 0, i32 0
  store i32* %0, i32** %38, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %31, i32 0, i32 0
  store i32* %1, i32** %39, align 8
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %32, i32 0, i32 0
  store i32* %2, i32** %40, align 8
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %34 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %34, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32* %44)
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %33, i32 0, i32 0
  store i32* %45, i32** %46, align 8
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %36 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %36, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32* %50)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %35, i32 0, i32 0
  store i32* %51, i32** %52, align 8
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %37 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %33, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %35, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %37, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = call i32* @_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET1_T0_S8_S7_(i32* %56, i32* %58, i32* %60)
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %29, i32 0, i32 0
  store i32* %61, i32** %62, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %29, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  store i32* %64, i32** %4
  %65 = load i32, i32* @x.564
  %66 = load i32, i32* @y.565
  %67 = add i32 %65, 1761462548
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 1761462548
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 2119474712, i32 822845119
  store i32 %79, i32* %16
  br label %119

; <label>:80:                                     ; preds = %17
  %81 = load volatile i32*, i32** %4
  ret i32* %81

; <label>:82:                                     ; preds = %17
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %84 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %85 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %86 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %87 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %88 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %84, i32 0, i32 0
  store i32* %0, i32** %92, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %85, i32 0, i32 0
  store i32* %1, i32** %93, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %86, i32 0, i32 0
  store i32* %2, i32** %94, align 8
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %88 to i8*
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %88, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32* %98)
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %87, i32 0, i32 0
  store i32* %99, i32** %100, align 8
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %90 to i8*
  %102 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 8, i32 8, i1 false)
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %90, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32* %104)
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %89, i32 0, i32 0
  store i32* %105, i32** %106, align 8
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %91 to i8*
  %108 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 8, i1 false)
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %87, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %89, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %91, i32 0, i32 0
  %114 = load i32*, i32** %113, align 8
  %115 = call i32* @_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET1_T0_S8_S7_(i32* %110, i32* %112, i32* %114)
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %83, i32 0, i32 0
  store i32* %115, i32** %116, align 8
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %83, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  store i32 -558110003, i32* %16
  br label %119

; <label>:119:                                    ; preds = %82, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEENS0_5__ops14_Val_less_iterEEvT_T0_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %4 = alloca i32*
  %5 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16"*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.566
  %10 = load i32, i32* @y.567
  %11 = sub i32 %9, 794028936
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 794028936
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -1610444228, i32* %19
  br label %20

; <label>:20:                                     ; preds = %1, %170
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1610444228, label %23
    i32 -1025704374, label %43
    i32 2056023431, label %76
    i32 832193390, label %77
    i32 -359806357, label %89
    i32 -1624082087, label %102
    i32 136706759, label %130
    i32 1898804793, label %150
    i32 -899652616, label %151
    i32 -402935419, label %164
  ]

; <label>:22:                                     ; preds = %20
  br label %170

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1025704374, i32 -899652616
  store i32 %42, i32* %19
  br label %170

; <label>:43:                                     ; preds = %20
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %44, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %45 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Val_less_iter"* %45, %"struct.__gnu_cxx::__ops::_Val_less_iter"** %5
  %46 = alloca i32, align 4
  store i32* %46, i32** %4
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %47, %"class.__gnu_cxx::__normal_iterator.16"** %3
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  store %"class.__gnu_cxx::__normal_iterator.16"* %48, %"class.__gnu_cxx::__normal_iterator.16"** %2
  %49 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %49, i32 0, i32 0
  store i32* %0, i32** %50, align 8
  %51 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %52 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %51) #3
  %53 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %52) #3
  %54 = load i32, i32* %53, align 4
  %55 = load volatile i32*, i32** %4
  store i32 %54, i32* %55, align 4
  %56 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %3
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %56 to i8*
  %58 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %59, i64 8, i32 8, i1 false)
  %60 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %3
  %61 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.16"* %60) #3
  %62 = load i32, i32* @x.566
  %63 = load i32, i32* @y.567
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 2056023431, i32 -899652616
  store i32 %75, i32* %19
  br label %170

; <label>:76:                                     ; preds = %20
  store i32 832193390, i32* %19
  br label %170

; <label>:77:                                     ; preds = %20
  %78 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %2
  %79 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %78 to i8*
  %80 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %3
  %81 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %81, i64 8, i32 8, i1 false)
  %82 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %2
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = load volatile %"struct.__gnu_cxx::__ops::_Val_less_iter"*, %"struct.__gnu_cxx::__ops::_Val_less_iter"** %5
  %86 = load volatile i32*, i32** %4
  %87 = call zeroext i1 @_ZNK9__gnu_cxx5__ops14_Val_less_iterclIiNS_17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEbRT_T0_(%"struct.__gnu_cxx::__ops::_Val_less_iter"* %85, i32* dereferenceable(4) %86, i32* %84)
  %88 = select i1 %87, i32 -359806357, i32 -1624082087
  store i32 %88, i32* %19
  br label %170

; <label>:89:                                     ; preds = %20
  %90 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %3
  %91 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %90) #3
  %92 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %91) #3
  %93 = load i32, i32* %92, align 4
  %94 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %95 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %94) #3
  store i32 %93, i32* %95, align 4
  %96 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %96 to i8*
  %98 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %3
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %99, i64 8, i32 8, i1 false)
  %100 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %3
  %101 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.16"* %100) #3
  store i32 832193390, i32* %19
  br label %170

; <label>:102:                                    ; preds = %20
  %103 = load i32, i32* @x.566
  %104 = load i32, i32* @y.567
  %105 = sub i32 %103, 167383361
  %106 = sub i32 %105, 1
  %107 = add i32 %106, 167383361
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 136706759, i32 -402935419
  store i32 %129, i32* %19
  br label %170

; <label>:130:                                    ; preds = %20
  %131 = load volatile i32*, i32** %4
  %132 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %131) #3
  %133 = load i32, i32* %132, align 4
  %134 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %135 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %134) #3
  store i32 %133, i32* %135, align 4
  %136 = load i32, i32* @x.566
  %137 = load i32, i32* @y.567
  %138 = sub i32 0, 1
  %139 = add i32 %136, %138
  %140 = sub i32 %136, 1
  %141 = mul i32 %136, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %137, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 1898804793, i32 -402935419
  store i32 %149, i32* %19
  br label %170

; <label>:150:                                    ; preds = %20
  ret void

; <label>:151:                                    ; preds = %20
  %152 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %153 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %154 = alloca i32, align 4
  %155 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %156 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %157 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %152, i32 0, i32 0
  store i32* %0, i32** %157, align 8
  %158 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %152) #3
  %159 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %158) #3
  %160 = load i32, i32* %159, align 4
  store i32 %160, i32* %154, align 4
  %161 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %155 to i8*
  %162 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %161, i8* %162, i64 8, i32 8, i1 false)
  %163 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.16"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEmmEv(%"class.__gnu_cxx::__normal_iterator.16"* %155) #3
  store i32 -1025704374, i32* %19
  br label %170

; <label>:164:                                    ; preds = %20
  %165 = load volatile i32*, i32** %4
  %166 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %165) #3
  %167 = load i32, i32* %166, align 4
  %168 = load volatile %"class.__gnu_cxx::__normal_iterator.16"*, %"class.__gnu_cxx::__normal_iterator.16"** %6
  %169 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %168) #3
  store i32 %167, i32* %169, align 4
  store i32 136706759, i32* %19
  br label %170

; <label>:170:                                    ; preds = %164, %151, %130, %102, %89, %77, %76, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__val_comp_iterENS0_15_Iter_less_iterE() #4 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEES6_ET1_T0_S8_S7_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %8 = alloca i32*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %5, i32 0, i32 0
  store i32* %0, i32** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %6, i32 0, i32 0
  store i32* %1, i32** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %7, i32 0, i32 0
  store i32* %2, i32** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %9, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %10, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %11, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %28)
  %30 = call i32* @_ZSt22__copy_move_backward_aILb1EPiS0_ET1_T0_S2_S1_(i32* %19, i32* %24, i32* %29)
  store i32* %30, i32** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.16"* %4, i32** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  ret i32* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.572
  %6 = load i32, i32* @y.573
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1033457675, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1033457675, label %18
    i32 -1876115902, label %26
    i32 2028748864, label %65
    i32 1957021688, label %67
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1876115902, i32 1957021688
  store i32 %25, i32* %14
  br label %80

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %28, i32 0, i32 0
  store i32* %0, i32** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %29 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %29, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb0EE7_S_baseES6_(i32* %34)
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %27, i32 0, i32 0
  store i32* %35, i32** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %27, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  store i32* %38, i32** %2
  %39 = load i32, i32* @x.572
  %40 = load i32, i32* @y.573
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 2028748864, i32 1957021688
  store i32 %64, i32* %14
  br label %80

; <label>:65:                                     ; preds = %15
  %66 = load volatile i32*, i32** %2
  ret i32* %66

; <label>:67:                                     ; preds = %15
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %69 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %69, i32 0, i32 0
  store i32* %0, i32** %71, align 8
  %72 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %70 to i8*
  %73 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 8, i1 false)
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %70, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb0EE7_S_baseES6_(i32* %75)
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %68, i32 0, i32 0
  store i32* %76, i32** %77, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %68, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  store i32 -1876115902, i32* %14
  br label %80

; <label>:80:                                     ; preds = %67, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__copy_move_backward_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32**
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.578
  %11 = load i32, i32* @y.579
  %12 = sub i32 %10, -1817657586
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -1817657586
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -552002425, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %167
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -552002425, label %24
    i32 -845739898, label %44
    i32 349894456, label %80
    i32 1235863528, label %83
    i32 -466096406, label %100
    i32 -1646973108, label %109
  ]

; <label>:23:                                     ; preds = %21
  br label %167

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -845739898, i32 -1646973108
  store i32 %43, i32* %20
  br label %167

; <label>:44:                                     ; preds = %21
  %45 = alloca i32*, align 8
  store i32** %45, i32*** %7
  %46 = alloca i32*, align 8
  %47 = alloca i32*, align 8
  store i32** %47, i32*** %6
  %48 = alloca i64, align 8
  store i64* %48, i64** %5
  %49 = load volatile i32**, i32*** %7
  store i32* %0, i32** %49, align 8
  store i32* %1, i32** %46, align 8
  %50 = load volatile i32**, i32*** %6
  store i32* %2, i32** %50, align 8
  %51 = load i32*, i32** %46, align 8
  %52 = load volatile i32**, i32*** %7
  %53 = load i32*, i32** %52, align 8
  %54 = ptrtoint i32* %51 to i64
  %55 = ptrtoint i32* %53 to i64
  %56 = sub i64 %54, 7225023851308562333
  %57 = sub i64 %56, %55
  %58 = add i64 %57, 7225023851308562333
  %59 = sub i64 %54, %55
  %60 = sdiv exact i64 %58, 4
  %61 = load volatile i64*, i64** %5
  store i64 %60, i64* %61, align 8
  %62 = load volatile i64*, i64** %5
  %63 = load i64, i64* %62, align 8
  %64 = icmp ne i64 %63, 0
  store i1 %64, i1* %4
  %65 = load i32, i32* @x.578
  %66 = load i32, i32* @y.579
  %67 = add i32 %65, 451201151
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 451201151
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 349894456, i32 -1646973108
  store i32 %79, i32* %20
  br label %167

; <label>:80:                                     ; preds = %21
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 1235863528, i32 -466096406
  store i32 %82, i32* %20
  br label %167

; <label>:83:                                     ; preds = %21
  %84 = load volatile i32**, i32*** %6
  %85 = load i32*, i32** %84, align 8
  %86 = load volatile i64*, i64** %5
  %87 = load i64, i64* %86, align 8
  %88 = add i64 0, -8102558503981141202
  %89 = sub i64 %88, %87
  %90 = sub i64 %89, -8102558503981141202
  %91 = sub i64 0, %87
  %92 = getelementptr inbounds i32, i32* %85, i64 %90
  %93 = bitcast i32* %92 to i8*
  %94 = load volatile i32**, i32*** %7
  %95 = load i32*, i32** %94, align 8
  %96 = bitcast i32* %95 to i8*
  %97 = load volatile i64*, i64** %5
  %98 = load i64, i64* %97, align 8
  %99 = mul i64 4, %98
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %93, i8* %96, i64 %99, i32 4, i1 false)
  store i32 -466096406, i32* %20
  br label %167

; <label>:100:                                    ; preds = %21
  %101 = load volatile i32**, i32*** %6
  %102 = load i32*, i32** %101, align 8
  %103 = load volatile i64*, i64** %5
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 0, %104
  %106 = add i64 0, %105
  %107 = sub i64 0, %104
  %108 = getelementptr inbounds i32, i32* %102, i64 %106
  ret i32* %108

; <label>:109:                                    ; preds = %21
  %110 = alloca i32*, align 8
  %111 = alloca i32*, align 8
  %112 = alloca i32*, align 8
  %113 = alloca i64, align 8
  store i32* %0, i32** %110, align 8
  store i32* %1, i32** %111, align 8
  store i32* %2, i32** %112, align 8
  %114 = load i32*, i32** %111, align 8
  %115 = load i32*, i32** %110, align 8
  %116 = ptrtoint i32* %114 to i64
  %117 = ptrtoint i32* %115 to i64
  %118 = shl i64 %116, %117
  %119 = sub i64 %116, 2251311461384020804
  %120 = sub i64 %119, %117
  %121 = add i64 %120, 2251311461384020804
  %122 = sub i64 %116, %117
  %123 = mul i64 %121, %117
  %124 = sub i64 0, %116
  %125 = add i64 0, %124
  %126 = sub i64 0, %116
  %127 = add i64 %125, -3552142522706573814
  %128 = add i64 %127, %117
  %129 = sub i64 %128, -3552142522706573814
  %130 = add i64 %125, %117
  %131 = add i64 %116, -3537355698969135952
  %132 = sub i64 %131, %117
  %133 = sub i64 %132, -3537355698969135952
  %134 = sub i64 %116, %117
  %135 = mul i64 %133, %117
  %136 = add i64 %116, -5150173925266290545
  %137 = sub i64 %136, %117
  %138 = sub i64 %137, -5150173925266290545
  %139 = sub i64 %116, %117
  %140 = mul i64 %138, %117
  %141 = add i64 %116, -5894634400055603362
  %142 = sub i64 %141, %117
  %143 = sub i64 %142, -5894634400055603362
  %144 = sub i64 %116, %117
  %145 = mul i64 %143, %117
  %146 = shl i64 %116, %117
  %147 = sub i64 %116, 8301164557817364537
  %148 = sub i64 %147, %117
  %149 = add i64 %148, 8301164557817364537
  %150 = sub i64 %116, %117
  %151 = mul i64 %149, %117
  %152 = sub i64 %116, 3067535424569824045
  %153 = sub i64 %152, %117
  %154 = add i64 %153, 3067535424569824045
  %155 = sub i64 %116, %117
  %156 = shl i64 %154, 4
  %157 = sub i64 0, %154
  %158 = add i64 0, %157
  %159 = sub i64 0, %154
  %160 = sub i64 0, 4
  %161 = sub i64 %158, %160
  %162 = add i64 %158, 4
  %163 = shl i64 %154, 4
  %164 = sdiv exact i64 %154, 4
  store i64 %164, i64* %113, align 8
  %165 = load i64, i64* %113, align 8
  %166 = icmp ne i64 %165, 0
  store i32 -845739898, i32* %20
  br label %167

; <label>:167:                                    ; preds = %109, %83, %80, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.16"* %2) #3
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb0EE7_S_baseES6_(i32*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %3, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %2, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  ret i32* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops14_Val_less_iterclIiNS_17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEbRT_T0_(%"struct.__gnu_cxx::__ops::_Val_less_iter"*, i32* dereferenceable(4), i32*) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.16", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter"*, align 8
  %6 = alloca i32*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.16", %"class.__gnu_cxx::__normal_iterator.16"* %4, i32 0, i32 0
  store i32* %2, i32** %7, align 8
  store %"struct.__gnu_cxx::__ops::_Val_less_iter"* %0, %"struct.__gnu_cxx::__ops::_Val_less_iter"** %5, align 8
  store i32* %1, i32** %6, align 8
  %8 = load %"struct.__gnu_cxx::__ops::_Val_less_iter"*, %"struct.__gnu_cxx::__ops::_Val_less_iter"** %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32, i32* %9, align 4
  %11 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.16"* %4) #3
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %10, %12
  ret i1 %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EE3endEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.586
  %6 = load i32, i32* @y.587
  %7 = sub i32 %5, 1632024999
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1632024999
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -144200395, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %86
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -144200395, label %19
    i32 1319137453, label %39
    i32 -1502189882, label %75
    i32 2106385380, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %86

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1319137453, i32 2106385380
  store i32 %38, i32* %15
  br label %86

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  %42 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %43 = bitcast %"class.std::vector.0"* %42 to %"struct.std::_Vector_base.1"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %44, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.21"* %40, %"class.std::vector.5"** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %40, i32 0, i32 0
  %47 = load %"class.std::vector.5"*, %"class.std::vector.5"** %46, align 8
  store %"class.std::vector.5"* %47, %"class.std::vector.5"** %2
  %48 = load i32, i32* @x.586
  %49 = load i32, i32* @y.587
  %50 = add i32 %48, 1709643565
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 1709643565
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -1502189882, i32 2106385380
  store i32 %74, i32* %15
  br label %86

; <label>:75:                                     ; preds = %16
  %76 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %79 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %79, align 8
  %80 = load %"class.std::vector.0"*, %"class.std::vector.0"** %79, align 8
  %81 = bitcast %"class.std::vector.0"* %80 to %"struct.std::_Vector_base.1"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %82, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.21"* %78, %"class.std::vector.5"** dereferenceable(8) %83) #3
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %78, i32 0, i32 0
  %85 = load %"class.std::vector.5"*, %"class.std::vector.5"** %84, align 8
  store i32 1319137453, i32* %15
  br label %86

; <label>:86:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.21"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = sub i64 0, %10
  %12 = add i64 0, %11
  %13 = sub i64 0, %10
  %14 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %9, i64 %12
  store %"class.std::vector.5"* %14, %"class.std::vector.5"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.21"* %3, %"class.std::vector.5"** dereferenceable(8) %6) #3
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  %16 = load %"class.std::vector.5"*, %"class.std::vector.5"** %15, align 8
  ret %"class.std::vector.5"* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.21"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  ret %"class.std::vector.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.21"*, %"class.std::vector.5"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  %4 = alloca %"class.std::vector.5"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %3, align 8
  store %"class.std::vector.5"** %1, %"class.std::vector.5"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.5"**, %"class.std::vector.5"*** %4, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  store %"class.std::vector.5"* %8, %"class.std::vector.5"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EED2Ev(%"struct.std::_Vector_base.11"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.594
  %3 = load i32, i32* @y.595
  %4 = add i32 %2, 330562108
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 330562108
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %113

; <label>:16:                                     ; preds = %1, %113
  %17 = alloca %"struct.std::_Vector_base.11"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %17, align 8
  %20 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %28, align 8
  %30 = ptrtoint %"struct.Strongly_Connected_Components::node"* %26 to i64
  %31 = ptrtoint %"struct.Strongly_Connected_Components::node"* %29 to i64
  %32 = sub i64 %30, -5485113855066962043
  %33 = sub i64 %32, %31
  %34 = add i64 %33, -5485113855066962043
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 40
  %37 = load i32, i32* @x.594
  %38 = load i32, i32* @y.595
  %39 = sub i32 %37, -1537860685
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1537860685
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %113

; <label>:51:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.11"* %20, %"struct.Strongly_Connected_Components::node"* %23, i64 %36)
          to label %52 unwind label %106

; <label>:52:                                     ; preds = %51
  %53 = load i32, i32* @x.594
  %54 = load i32, i32* @y.595
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %185

; <label>:78:                                     ; preds = %52, %185
  %79 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %79) #3
  %80 = load i32, i32* @x.594
  %81 = load i32, i32* @y.595
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %185

; <label>:105:                                    ; preds = %78
  ret void

; <label>:106:                                    ; preds = %51
  %107 = landingpad { i8*, i32 }
          catch i8* null
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %18, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %19, align 4
  %110 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %110) #3
  br label %111

; <label>:111:                                    ; preds = %106
  %112 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %112) #12
  unreachable

; <label>:113:                                    ; preds = %16, %1
  %114 = alloca %"struct.std::_Vector_base.11"*, align 8
  %115 = alloca i8*
  %116 = alloca i32
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %114, align 8
  %117 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %114, align 8
  %118 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %118, i32 0, i32 0
  %120 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %119, align 8
  %121 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %117, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %121, i32 0, i32 2
  %123 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %122, align 8
  %124 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %117, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl", %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %124, i32 0, i32 0
  %126 = load %"struct.Strongly_Connected_Components::node"*, %"struct.Strongly_Connected_Components::node"** %125, align 8
  %127 = ptrtoint %"struct.Strongly_Connected_Components::node"* %123 to i64
  %128 = ptrtoint %"struct.Strongly_Connected_Components::node"* %126 to i64
  %129 = sub i64 0, %127
  %130 = add i64 0, %129
  %131 = sub i64 0, %127
  %132 = add i64 %130, -285906404612447584
  %133 = add i64 %132, %128
  %134 = sub i64 %133, -285906404612447584
  %135 = add i64 %130, %128
  %136 = sub i64 %127, -8634344795146699272
  %137 = sub i64 %136, %128
  %138 = add i64 %137, -8634344795146699272
  %139 = sub i64 %127, %128
  %140 = shl i64 %138, 40
  %141 = sub i64 0, 8643931052510049270
  %142 = sub i64 %141, %138
  %143 = add i64 %142, 8643931052510049270
  %144 = sub i64 0, %138
  %145 = sub i64 0, 40
  %146 = sub i64 %143, %145
  %147 = add i64 %143, 40
  %148 = sub i64 0, %138
  %149 = add i64 0, %148
  %150 = sub i64 0, %138
  %151 = sub i64 %149, 2852605363248618969
  %152 = add i64 %151, 40
  %153 = add i64 %152, 2852605363248618969
  %154 = add i64 %149, 40
  %155 = shl i64 %138, 40
  %156 = add i64 0, -8830203470058417297
  %157 = sub i64 %156, %138
  %158 = sub i64 %157, -8830203470058417297
  %159 = sub i64 0, %138
  %160 = add i64 %158, 3675805734943133859
  %161 = add i64 %160, 40
  %162 = sub i64 %161, 3675805734943133859
  %163 = add i64 %158, 40
  %164 = add i64 0, -2332427914711755819
  %165 = sub i64 %164, %138
  %166 = sub i64 %165, -2332427914711755819
  %167 = sub i64 0, %138
  %168 = add i64 %166, 7585120926979622743
  %169 = add i64 %168, 40
  %170 = sub i64 %169, 7585120926979622743
  %171 = add i64 %166, 40
  %172 = sub i64 %138, 619143318819112970
  %173 = sub i64 %172, 40
  %174 = add i64 %173, 619143318819112970
  %175 = sub i64 %138, 40
  %176 = mul i64 %174, 40
  %177 = sub i64 0, %138
  %178 = add i64 0, %177
  %179 = sub i64 0, %138
  %180 = add i64 %178, 7946002246230831369
  %181 = add i64 %180, 40
  %182 = sub i64 %181, 7946002246230831369
  %183 = add i64 %178, 40
  %184 = sdiv exact i64 %138, 40
  br label %16

; <label>:185:                                    ; preds = %78, %52
  %186 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %186) #3
  br label %78
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN29Strongly_Connected_Components4nodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.596
  %5 = load i32, i32* @y.597
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1214167621, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1214167621, label %17
    i32 -1144548946, label %25
    i32 1235248587, label %44
    i32 594981500, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1144548946, i32 594981500
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"** %26, align 8
  %27 = load %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"*, %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %27 to %"class.std::allocator.12"*
  call void @_ZNSaIN29Strongly_Connected_Components4nodeEED2Ev(%"class.std::allocator.12"* %28) #3
  %29 = load i32, i32* @x.596
  %30 = load i32, i32* @y.597
  %31 = add i32 %29, 1711558205
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1711558205
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1235248587, i32 594981500
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"** %46, align 8
  %47 = load %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"*, %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"** %46, align 8
  %48 = bitcast %"struct.std::_Vector_base<Strongly_Connected_Components::node, std::allocator<Strongly_Connected_Components::node> >::_Vector_impl"* %47 to %"class.std::allocator.12"*
  call void @_ZNSaIN29Strongly_Connected_Components4nodeEED2Ev(%"class.std::allocator.12"* %48) #3
  store i32 -1144548946, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN29Strongly_Connected_Components4nodeEED2Ev(%"class.std::allocator.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %2, align 8
  %3 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %2, align 8
  %4 = bitcast %"class.std::allocator.12"* %3 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEED2Ev(%"class.__gnu_cxx::new_allocator.13"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN29Strongly_Connected_Components4nodeEED2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt6vectorIiSaIiEE5emptyEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %6 = call i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.5"* %5) #3
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  store i32* %6, i32** %7, align 8
  %8 = call i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.5"* %5) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store i32* %8, i32** %9, align 8
  %10 = call zeroext i1 @_ZN9__gnu_cxxeqIPKiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %4) #3
  ret i1 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.5"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.5"*
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  store %"class.std::vector.5"* %9, %"class.std::vector.5"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %12 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %11) #3
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 -256368099, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %149
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -256368099, label %17
    i32 -998178945, label %22
    i32 -779961550, label %30
    i32 1233014067, label %45
    i32 6204374, label %77
    i32 -1581735895, label %80
    i32 1059356784, label %108
    i32 -1301820410, label %132
    i32 -1224342382, label %133
    i32 1267796930, label %134
    i32 -189822072, label %135
    i32 -975491352, label %140
  ]

; <label>:16:                                     ; preds = %14
  br label %149

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -998178945, i32 -779961550
  store i32 %21, i32* %13
  br label %149

; <label>:22:                                     ; preds = %14
  %23 = load i64, i64* %8, align 8
  %24 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %25 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %24) #3
  %26 = sub i64 0, %25
  %27 = add i64 %23, %26
  %28 = sub i64 %23, %25
  %29 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.5"* %29, i64 %27)
  store i32 1267796930, i32* %13
  br label %149

; <label>:30:                                     ; preds = %14
  %31 = load i32, i32* @x.604
  %32 = load i32, i32* @y.605
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1233014067, i32 -189822072
  store i32 %44, i32* %13
  br label %149

; <label>:45:                                     ; preds = %14
  %46 = load i64, i64* %8, align 8
  %47 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %48 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %47) #3
  %49 = icmp ult i64 %46, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.604
  %51 = load i32, i32* @y.605
  %52 = add i32 %50, -2071056527
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -2071056527
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 6204374, i32 -189822072
  store i32 %76, i32* %13
  br label %149

; <label>:77:                                     ; preds = %14
  %78 = load volatile i1, i1* %3
  %79 = select i1 %78, i32 -1581735895, i32 -1224342382
  store i32 %79, i32* %13
  br label %149

; <label>:80:                                     ; preds = %14
  %81 = load i32, i32* @x.604
  %82 = load i32, i32* @y.605
  %83 = add i32 %81, 821935700
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, 821935700
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 false, true
  %94 = and i1 %91, false
  %95 = and i1 %89, %93
  %96 = and i1 %92, false
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 false, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 1059356784, i32 -975491352
  store i32 %107, i32* %13
  br label %149

; <label>:108:                                    ; preds = %14
  %109 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %110 = bitcast %"class.std::vector.5"* %109 to %"struct.std::_Vector_base.6"*
  %111 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %110, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %111, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = load i64, i64* %8, align 8
  %115 = getelementptr inbounds i32, i32* %113, i64 %114
  %116 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.5"* %116, i32* %115) #3
  %117 = load i32, i32* @x.604
  %118 = load i32, i32* @y.605
  %119 = sub i32 %117, -2013218482
  %120 = sub i32 %119, 1
  %121 = add i32 %120, -2013218482
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 -1301820410, i32 -975491352
  store i32 %131, i32* %13
  br label %149

; <label>:132:                                    ; preds = %14
  store i32 -1224342382, i32* %13
  br label %149

; <label>:133:                                    ; preds = %14
  store i32 1267796930, i32* %13
  br label %149

; <label>:134:                                    ; preds = %14
  ret void

; <label>:135:                                    ; preds = %14
  %136 = load i64, i64* %8, align 8
  %137 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %138 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %137) #3
  %139 = icmp ult i64 %136, %138
  store i32 1233014067, i32* %13
  br label %149

; <label>:140:                                    ; preds = %14
  %141 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %142 = bitcast %"class.std::vector.5"* %141 to %"struct.std::_Vector_base.6"*
  %143 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %142, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %143, i32 0, i32 0
  %145 = load i32*, i32** %144, align 8
  %146 = load i64, i64* %8, align 8
  %147 = getelementptr inbounds i32, i32* %145, i64 %146
  %148 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.5"* %148, i32* %147) #3
  store i32 1059356784, i32* %13
  br label %149

; <label>:149:                                    ; preds = %140, %135, %133, %132, %108, %80, %77, %45, %30, %22, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca %"class.std::allocator.7", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %11 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %12 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %12) #3
  %14 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %15 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %16 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator.7"* sret %5, %"class.std::allocator.7"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.6"* %11, i64 %13, %"class.std::allocator.7"* dereferenceable(1) %5)
          to label %17 unwind label %39

; <label>:17:                                     ; preds = %2
  call void @_ZNSaIiED2Ev(%"class.std::allocator.7"* %5) #3
  %18 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %19 = call i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.5"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  store i32* %19, i32** %20, align 8
  %21 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %22 = call i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.5"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  store i32* %22, i32** %23, align 8
  %24 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %25, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %29 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %28) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = invoke i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E(i32* %31, i32* %33, i32* %27, %"class.std::allocator.7"* dereferenceable(1) %29)
          to label %35 unwind label %43

; <label>:35:                                     ; preds = %17
  %36 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37, i32 0, i32 1
  store i32* %34, i32** %38, align 8
  ret void

; <label>:39:                                     ; preds = %2
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %6, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %7, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.7"* %5) #3
  br label %48

; <label>:43:                                     ; preds = %17
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %6, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %7, align 4
  %47 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.6"* %47) #3
  br label %48

; <label>:48:                                     ; preds = %43, %39
  %49 = load i8*, i8** %6, align 8
  %50 = load i32, i32* %7, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPKiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %1, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %5) #3
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %8) #3
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.5"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %12 = load i64, i64* %4, align 8
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %320

; <label>:14:                                     ; preds = %2
  %15 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i32*, i32** %17, align 8
  %19 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 1
  %22 = load i32*, i32** %21, align 8
  %23 = ptrtoint i32* %18 to i64
  %24 = ptrtoint i32* %22 to i64
  %25 = sub i64 0, %24
  %26 = add i64 %23, %25
  %27 = sub i64 %23, %24
  %28 = sdiv exact i64 %26, 4
  %29 = load i64, i64* %4, align 8
  %30 = icmp uge i64 %28, %29
  br i1 %30, label %31, label %43

; <label>:31:                                     ; preds = %14
  %32 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 1
  %35 = load i32*, i32** %34, align 8
  %36 = load i64, i64* %4, align 8
  %37 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %38 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %37) #3
  %39 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %35, i64 %36, %"class.std::allocator.7"* dereferenceable(1) %38)
  %40 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41, i32 0, i32 1
  store i32* %39, i32** %42, align 8
  br label %289

; <label>:43:                                     ; preds = %14
  %44 = load i64, i64* %4, align 8
  %45 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.5"* %11, i64 %44, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %45, i64* %5, align 8
  %46 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %11) #3
  store i64 %46, i64* %6, align 8
  %47 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %48 = load i64, i64* %5, align 8
  %49 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %47, i64 %48)
  store i32* %49, i32** %7, align 8
  %50 = load i32*, i32** %7, align 8
  store i32* %50, i32** %8, align 8
  %51 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %56, i32 0, i32 1
  %58 = load i32*, i32** %57, align 8
  %59 = load i32*, i32** %7, align 8
  %60 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %61 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %60) #3
  %62 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %54, i32* %58, i32* %59, %"class.std::allocator.7"* dereferenceable(1) %61)
          to label %63 unwind label %152

; <label>:63:                                     ; preds = %43
  %64 = load i32, i32* @x.610
  %65 = load i32, i32* @y.611
  %66 = add i32 %64, -241442987
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, -241442987
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %330

; <label>:90:                                     ; preds = %63, %330
  store i32* %62, i32** %8, align 8
  %91 = load i32*, i32** %8, align 8
  %92 = load i64, i64* %4, align 8
  %93 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %94 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %93) #3
  %95 = load i32, i32* @x.610
  %96 = load i32, i32* @y.611
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %330

; <label>:120:                                    ; preds = %90
  %121 = invoke i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %91, i64 %92, %"class.std::allocator.7"* dereferenceable(1) %94)
          to label %122 unwind label %152

; <label>:122:                                    ; preds = %120
  %123 = load i32, i32* @x.610
  %124 = load i32, i32* @y.611
  %125 = sub i32 %123, 939858941
  %126 = sub i32 %125, 1
  %127 = add i32 %126, 939858941
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  br i1 %135, label %137, label %335

; <label>:137:                                    ; preds = %122, %335
  store i32* %121, i32** %8, align 8
  %138 = load i32, i32* @x.610
  %139 = load i32, i32* @y.611
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  br i1 %149, label %151, label %335

; <label>:151:                                    ; preds = %137
  br label %203

; <label>:152:                                    ; preds = %120, %43
  %153 = landingpad { i8*, i32 }
          catch i8* null
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %9, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %10, align 4
  br label %156

; <label>:156:                                    ; preds = %152
  %157 = load i8*, i8** %9, align 8
  %158 = call i8* @__cxa_begin_catch(i8* %157) #3
  %159 = load i32*, i32** %7, align 8
  %160 = load i32*, i32** %8, align 8
  %161 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %162 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %161) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %159, i32* %160, %"class.std::allocator.7"* dereferenceable(1) %162)
          to label %163 unwind label %168

; <label>:163:                                    ; preds = %156
  %164 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %165 = load i32*, i32** %7, align 8
  %166 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.6"* %164, i32* %165, i64 %166)
          to label %167 unwind label %168

; <label>:167:                                    ; preds = %163
  invoke void @__cxa_rethrow() #13
          to label %329 unwind label %168

; <label>:168:                                    ; preds = %167, %163, %156
  %169 = landingpad { i8*, i32 }
          cleanup
  %170 = extractvalue { i8*, i32 } %169, 0
  store i8* %170, i8** %9, align 8
  %171 = extractvalue { i8*, i32 } %169, 1
  store i32 %171, i32* %10, align 4
  invoke void @__cxa_end_catch()
          to label %172 unwind label %326

; <label>:172:                                    ; preds = %168
  %173 = load i32, i32* @x.610
  %174 = load i32, i32* @y.611
  %175 = sub i32 %173, -1743455463
  %176 = sub i32 %175, 1
  %177 = add i32 %176, -1743455463
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  br i1 %185, label %187, label %336

; <label>:187:                                    ; preds = %172, %336
  %188 = load i32, i32* @x.610
  %189 = load i32, i32* @y.611
  %190 = sub i32 %188, -1263696185
  %191 = sub i32 %190, 1
  %192 = add i32 %191, -1263696185
  %193 = sub i32 %188, 1
  %194 = mul i32 %188, %192
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %189, 10
  %198 = and i1 %196, %197
  %199 = xor i1 %196, %197
  %200 = or i1 %198, %199
  %201 = or i1 %196, %197
  br i1 %200, label %202, label %336

; <label>:202:                                    ; preds = %187
  br label %321

; <label>:203:                                    ; preds = %151
  %204 = load i32, i32* @x.610
  %205 = load i32, i32* @y.611
  %206 = add i32 %204, -488207532
  %207 = sub i32 %206, 1
  %208 = sub i32 %207, -488207532
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 false, true
  %217 = and i1 %214, false
  %218 = and i1 %212, %216
  %219 = and i1 %215, false
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 false, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  br i1 %228, label %230, label %337

; <label>:230:                                    ; preds = %203, %337
  %231 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %232 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %231, i32 0, i32 0
  %233 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %232, i32 0, i32 0
  %234 = load i32*, i32** %233, align 8
  %235 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %236 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %235, i32 0, i32 0
  %237 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %236, i32 0, i32 1
  %238 = load i32*, i32** %237, align 8
  %239 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %240 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %239) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %234, i32* %238, %"class.std::allocator.7"* dereferenceable(1) %240)
  %241 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %242 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %242, i32 0, i32 0
  %244 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %243, i32 0, i32 0
  %245 = load i32*, i32** %244, align 8
  %246 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %247 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %246, i32 0, i32 0
  %248 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %247, i32 0, i32 2
  %249 = load i32*, i32** %248, align 8
  %250 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %251 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %250, i32 0, i32 0
  %252 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %251, i32 0, i32 0
  %253 = load i32*, i32** %252, align 8
  %254 = ptrtoint i32* %249 to i64
  %255 = ptrtoint i32* %253 to i64
  %256 = sub i64 0, %255
  %257 = add i64 %254, %256
  %258 = sub i64 %254, %255
  %259 = sdiv exact i64 %257, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.6"* %241, i32* %245, i64 %259)
  %260 = load i32*, i32** %7, align 8
  %261 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %262 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %261, i32 0, i32 0
  %263 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %262, i32 0, i32 0
  store i32* %260, i32** %263, align 8
  %264 = load i32*, i32** %8, align 8
  %265 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %266 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %265, i32 0, i32 0
  %267 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %266, i32 0, i32 1
  store i32* %264, i32** %267, align 8
  %268 = load i32*, i32** %7, align 8
  %269 = load i64, i64* %5, align 8
  %270 = getelementptr inbounds i32, i32* %268, i64 %269
  %271 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %272 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %271, i32 0, i32 0
  %273 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %272, i32 0, i32 2
  store i32* %270, i32** %273, align 8
  %274 = load i32, i32* @x.610
  %275 = load i32, i32* @y.611
  %276 = add i32 %274, -1790783030
  %277 = sub i32 %276, 1
  %278 = sub i32 %277, -1790783030
  %279 = sub i32 %274, 1
  %280 = mul i32 %274, %278
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %275, 10
  %284 = and i1 %282, %283
  %285 = xor i1 %282, %283
  %286 = or i1 %284, %285
  %287 = or i1 %282, %283
  br i1 %286, label %288, label %337

; <label>:288:                                    ; preds = %230
  br label %289

; <label>:289:                                    ; preds = %288, %31
  %290 = load i32, i32* @x.610
  %291 = load i32, i32* @y.611
  %292 = add i32 %290, -1606998392
  %293 = sub i32 %292, 1
  %294 = sub i32 %293, -1606998392
  %295 = sub i32 %290, 1
  %296 = mul i32 %290, %294
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %291, 10
  %300 = and i1 %298, %299
  %301 = xor i1 %298, %299
  %302 = or i1 %300, %301
  %303 = or i1 %298, %299
  br i1 %302, label %304, label %395

; <label>:304:                                    ; preds = %289, %395
  %305 = load i32, i32* @x.610
  %306 = load i32, i32* @y.611
  %307 = sub i32 %305, -1318249889
  %308 = sub i32 %307, 1
  %309 = add i32 %308, -1318249889
  %310 = sub i32 %305, 1
  %311 = mul i32 %305, %309
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %306, 10
  %315 = and i1 %313, %314
  %316 = xor i1 %313, %314
  %317 = or i1 %315, %316
  %318 = or i1 %313, %314
  br i1 %317, label %319, label %395

; <label>:319:                                    ; preds = %304
  br label %320

; <label>:320:                                    ; preds = %319, %2
  ret void

; <label>:321:                                    ; preds = %202
  %322 = load i8*, i8** %9, align 8
  %323 = load i32, i32* %10, align 4
  %324 = insertvalue { i8*, i32 } undef, i8* %322, 0
  %325 = insertvalue { i8*, i32 } %324, i32 %323, 1
  resume { i8*, i32 } %325

; <label>:326:                                    ; preds = %168
  %327 = landingpad { i8*, i32 }
          catch i8* null
  %328 = extractvalue { i8*, i32 } %327, 0
  call void @__clang_call_terminate(i8* %328) #12
  unreachable

; <label>:329:                                    ; preds = %167
  unreachable

; <label>:330:                                    ; preds = %90, %63
  store i32* %62, i32** %8, align 8
  %331 = load i32*, i32** %8, align 8
  %332 = load i64, i64* %4, align 8
  %333 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %334 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %333) #3
  br label %90

; <label>:335:                                    ; preds = %137, %122
  store i32* %121, i32** %8, align 8
  br label %137

; <label>:336:                                    ; preds = %187, %172
  br label %187

; <label>:337:                                    ; preds = %230, %203
  %338 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %339 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %338, i32 0, i32 0
  %340 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %339, i32 0, i32 0
  %341 = load i32*, i32** %340, align 8
  %342 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %343 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %342, i32 0, i32 0
  %344 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %343, i32 0, i32 1
  %345 = load i32*, i32** %344, align 8
  %346 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %347 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %346) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %341, i32* %345, %"class.std::allocator.7"* dereferenceable(1) %347)
  %348 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %349 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %350 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %349, i32 0, i32 0
  %351 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %350, i32 0, i32 0
  %352 = load i32*, i32** %351, align 8
  %353 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %354 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %353, i32 0, i32 0
  %355 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %354, i32 0, i32 2
  %356 = load i32*, i32** %355, align 8
  %357 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %358 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %357, i32 0, i32 0
  %359 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %358, i32 0, i32 0
  %360 = load i32*, i32** %359, align 8
  %361 = ptrtoint i32* %356 to i64
  %362 = ptrtoint i32* %360 to i64
  %363 = sub i64 %361, -785598335654025741
  %364 = sub i64 %363, %362
  %365 = add i64 %364, -785598335654025741
  %366 = sub i64 %361, %362
  %367 = mul i64 %365, %362
  %368 = sub i64 0, %362
  %369 = add i64 %361, %368
  %370 = sub i64 %361, %362
  %371 = sub i64 0, -1911719332044862110
  %372 = sub i64 %371, %369
  %373 = add i64 %372, -1911719332044862110
  %374 = sub i64 0, %369
  %375 = sub i64 0, 4
  %376 = sub i64 %373, %375
  %377 = add i64 %373, 4
  %378 = shl i64 %369, 4
  %379 = shl i64 %369, 4
  %380 = sdiv exact i64 %369, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.6"* %348, i32* %352, i64 %380)
  %381 = load i32*, i32** %7, align 8
  %382 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %383 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %382, i32 0, i32 0
  %384 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %383, i32 0, i32 0
  store i32* %381, i32** %384, align 8
  %385 = load i32*, i32** %8, align 8
  %386 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %387 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %386, i32 0, i32 0
  %388 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %387, i32 0, i32 1
  store i32* %385, i32** %388, align 8
  %389 = load i32*, i32** %7, align 8
  %390 = load i64, i64* %5, align 8
  %391 = getelementptr inbounds i32, i32* %389, i64 %390
  %392 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %393 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %392, i32 0, i32 0
  %394 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %393, i32 0, i32 2
  store i32* %391, i32** %394, align 8
  br label %230

; <label>:395:                                    ; preds = %304, %289
  br label %304
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.5"*, i32*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %12 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %11) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %6, i32* %10, %"class.std::allocator.7"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load i32*, i32** %4, align 8
  %15 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 1
  store i32* %14, i32** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32*, i64, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.614
  %8 = load i32, i32* @y.615
  %9 = add i32 %7, 1177209875
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1177209875
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1738934297, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %84
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1738934297, label %21
    i32 224809178, label %41
    i32 -1836051498, label %75
    i32 209605560, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %84

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 224809178, i32 209605560
  store i32 %40, i32* %17
  br label %84

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %44, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = call i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32* %45, i64 %46)
  store i32* %47, i32** %4
  %48 = load i32, i32* @x.614
  %49 = load i32, i32* @y.615
  %50 = sub i32 %48, -888203073
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -888203073
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -1836051498, i32 209605560
  store i32 %74, i32* %17
  br label %84

; <label>:75:                                     ; preds = %18
  %76 = load volatile i32*, i32** %4
  ret i32* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca i32*, align 8
  %79 = alloca i64, align 8
  %80 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %78, align 8
  store i64 %1, i64* %79, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %80, align 8
  %81 = load i32*, i32** %78, align 8
  %82 = load i64, i64* %79, align 8
  %83 = call i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32* %81, i64 %82)
  store i32 224809178, i32* %17
  br label %84

; <label>:84:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.5"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.5"*
  %8 = alloca %"class.std::vector.5"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  store %"class.std::vector.5"* %13, %"class.std::vector.5"** %7
  %14 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %15 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.5"* %14) #3
  %16 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %17 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %16) #3
  %18 = sub i64 %15, -8083023558780200305
  %19 = sub i64 %18, %17
  %20 = add i64 %19, -8083023558780200305
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 -734286841, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %97
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -734286841, label %28
    i32 -236896727, label %33
    i32 492200604, label %35
    i32 1856662463, label %51
    i32 -339035314, label %57
    i32 732262267, label %60
    i32 1697392824, label %75
    i32 338946823, label %91
    i32 -1653471776, label %93
    i32 -1034083210, label %95
  ]

; <label>:27:                                     ; preds = %25
  br label %97

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 -236896727, i32 492200604
  store i32 %32, i32* %23
  br label %97

; <label>:33:                                     ; preds = %25
  %34 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %34) #13
  unreachable

; <label>:35:                                     ; preds = %25
  %36 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %37 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %36) #3
  %38 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %39 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %38) #3
  store i64 %39, i64* %12, align 8
  %40 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %37, -5357215751858440973
  %43 = add i64 %42, %41
  %44 = sub i64 %43, -5357215751858440973
  %45 = add i64 %37, %41
  store i64 %44, i64* %11, align 8
  %46 = load i64, i64* %11, align 8
  %47 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %48 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %47) #3
  %49 = icmp ult i64 %46, %48
  %50 = select i1 %49, i32 -339035314, i32 1856662463
  store i32 %50, i32* %23
  br label %97

; <label>:51:                                     ; preds = %25
  %52 = load i64, i64* %11, align 8
  %53 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %54 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.5"* %53) #3
  %55 = icmp ugt i64 %52, %54
  %56 = select i1 %55, i32 -339035314, i32 732262267
  store i32 %56, i32* %23
  br label %97

; <label>:57:                                     ; preds = %25
  %58 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %7
  %59 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.5"* %58) #3
  store i32 -1653471776, i32* %23
  store i64 %59, i64* %24
  br label %97

; <label>:60:                                     ; preds = %25
  %61 = load i32, i32* @x.616
  %62 = load i32, i32* @y.617
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 1697392824, i32 -1034083210
  store i32 %74, i32* %23
  br label %97

; <label>:75:                                     ; preds = %25
  %76 = load i64, i64* %11, align 8
  store i64 %76, i64* %4
  %77 = load i32, i32* @x.616
  %78 = load i32, i32* @y.617
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 338946823, i32 -1034083210
  store i32 %90, i32* %23
  br label %97

; <label>:91:                                     ; preds = %25
  store i32 -1653471776, i32* %23
  %92 = load volatile i64, i64* %4
  store i64 %92, i64* %24
  br label %97

; <label>:93:                                     ; preds = %25
  %94 = load i64, i64* %24
  ret i64 %94

; <label>:95:                                     ; preds = %25
  %96 = load i64, i64* %11, align 8
  store i32 1697392824, i32* %23
  br label %97

; <label>:97:                                     ; preds = %95, %91, %75, %60, %57, %51, %35, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.6"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.618
  %9 = load i32, i32* @y.619
  %10 = sub i32 %8, -777218223
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -777218223
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1871577343, i32* %18
  %19 = alloca i32*
  br label %20

; <label>:20:                                     ; preds = %2, %129
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 1871577343, label %23
    i32 638710754, label %43
    i32 416482352, label %66
    i32 -1005898022, label %69
    i32 149991602, label %76
    i32 -707423897, label %104
    i32 1127160442, label %119
    i32 -2006707131, label %120
    i32 -1993259699, label %122
    i32 1864035250, label %128
  ]

; <label>:22:                                     ; preds = %20
  br label %129

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 638710754, i32 -1993259699
  store i32 %42, i32* %18
  br label %129

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.6"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %5
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %44, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  %47 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %44, align 8
  store %"struct.std::_Vector_base.6"* %47, %"struct.std::_Vector_base.6"** %4
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.618
  %52 = load i32, i32* @y.619
  %53 = sub i32 %51, -340423209
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -340423209
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 416482352, i32 -1993259699
  store i32 %65, i32* %18
  br label %129

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %3
  %68 = select i1 %67, i32 -1005898022, i32 149991602
  store i32 %68, i32* %18
  br label %129

; <label>:69:                                     ; preds = %20
  %70 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %4
  %71 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %71 to %"class.std::allocator.7"*
  %73 = load volatile i64*, i64** %5
  %74 = load i64, i64* %73, align 8
  %75 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.7"* dereferenceable(1) %72, i64 %74)
  store i32 -2006707131, i32* %18
  store i32* %75, i32** %19
  br label %129

; <label>:76:                                     ; preds = %20
  %77 = load i32, i32* @x.618
  %78 = load i32, i32* @y.619
  %79 = sub i32 %77, 2095747260
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 2095747260
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 -707423897, i32 1864035250
  store i32 %103, i32* %18
  br label %129

; <label>:104:                                    ; preds = %20
  %105 = load i32, i32* @x.618
  %106 = load i32, i32* @y.619
  %107 = sub i32 0, 1
  %108 = add i32 %105, %107
  %109 = sub i32 %105, 1
  %110 = mul i32 %105, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %106, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 1127160442, i32 1864035250
  store i32 %118, i32* %18
  br label %129

; <label>:119:                                    ; preds = %20
  store i32 -2006707131, i32* %18
  store i32* null, i32** %19
  br label %129

; <label>:120:                                    ; preds = %20
  %121 = load i32*, i32** %19
  ret i32* %121

; <label>:122:                                    ; preds = %20
  %123 = alloca %"struct.std::_Vector_base.6"*, align 8
  %124 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %123, align 8
  store i64 %1, i64* %124, align 8
  %125 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %123, align 8
  %126 = load i64, i64* %124, align 8
  %127 = icmp ne i64 %126, 0
  store i32 638710754, i32* %18
  br label %129

; <label>:128:                                    ; preds = %20
  store i32 -707423897, i32* %18
  br label %129

; <label>:129:                                    ; preds = %128, %122, %119, %104, %76, %69, %66, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca %"class.std::move_iterator.22", align 8
  %10 = alloca %"class.std::move_iterator.22", align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %11 = load i32*, i32** %5, align 8
  %12 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %9, i32 0, i32 0
  store i32* %12, i32** %13, align 8
  %14 = load i32*, i32** %6, align 8
  %15 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %10, i32 0, i32 0
  store i32* %15, i32** %16, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %20, i32* %22, i32* %17, %"class.std::allocator.7"* dereferenceable(1) %18)
  ret i32* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.622
  %7 = load i32, i32* @y.623
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 624248814, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 624248814, label %19
    i32 -1444448033, label %39
    i32 -1287550599, label %71
    i32 1843598034, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1444448033, i32 1843598034
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  %42 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %40, align 8
  store i32* %1, i32** %41, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %42, align 8
  %43 = load i32*, i32** %40, align 8
  %44 = load i32*, i32** %41, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %43, i32* %44)
  %45 = load i32, i32* @x.622
  %46 = load i32, i32* @y.623
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1287550599, i32 1843598034
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca i32*, align 8
  %74 = alloca i32*, align 8
  %75 = alloca %"class.std::allocator.7"*, align 8
  store i32* %0, i32** %73, align 8
  store i32* %1, i32** %74, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %75, align 8
  %76 = load i32*, i32** %73, align 8
  %77 = load i32*, i32** %74, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %76, i32* %77)
  store i32 -1444448033, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.6"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base.6"*
  %6 = alloca %"struct.std::_Vector_base.6"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %6, align 8
  store %"struct.std::_Vector_base.6"* %9, %"struct.std::_Vector_base.6"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 -1336374582, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1336374582, label %15
    i32 -1102231845, label %19
    i32 -618759904, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 -1102231845, i32 -618759904
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.7"*
  %23 = load i32*, i32** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.7"* dereferenceable(1) %22, i32* %23, i64 %24)
  store i32 -618759904, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32*, i64) #0 comdat {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.626
  %7 = load i32, i32* @y.627
  %8 = sub i32 %6, 1857182306
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1857182306
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1852129940, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1852129940, label %20
    i32 1475575260, label %40
    i32 466594059, label %74
    i32 -639247811, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1475575260, i32 -639247811
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca i32*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i8, align 1
  store i32* %0, i32** %41, align 8
  store i64 %1, i64* %42, align 8
  store i8 1, i8* %43, align 1
  %44 = load i32*, i32** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %44, i64 %45)
  store i32* %46, i32** %3
  %47 = load i32, i32* @x.626
  %48 = load i32, i32* @y.627
  %49 = sub i32 %47, -50433296
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -50433296
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 466594059, i32 -639247811
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  %75 = load volatile i32*, i32** %3
  ret i32* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca i32*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i8, align 1
  store i32* %0, i32** %77, align 8
  store i64 %1, i64* %78, align 8
  store i8 1, i8* %79, align 1
  %80 = load i32*, i32** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %80, i64 %81)
  store i32 1475575260, i32* %16
  br label %83

; <label>:83:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32*, i64) #0 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  store i32 0, i32* %5, align 4
  %8 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %6, i64 %7, i32* dereferenceable(4) %5)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i1
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  %10 = load i32*, i32** %7, align 8
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %12 = load i64, i64* %6, align 8
  store i64 %12, i64* %9, align 8
  %13 = alloca i32
  store i32 384291046, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %120
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 384291046, label %17
    i32 1600817940, label %44
    i32 603456126, label %62
    i32 -1278471622, label %65
    i32 -1543680648, label %68
    i32 -1021966774, label %84
    i32 1722476093, label %107
    i32 -1271439620, label %108
    i32 1915272811, label %110
    i32 -1155556702, label %113
  ]

; <label>:16:                                     ; preds = %14
  br label %120

; <label>:17:                                     ; preds = %14
  %18 = load i32, i32* @x.632
  %19 = load i32, i32* @y.633
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 1600817940, i32 1915272811
  store i32 %43, i32* %13
  br label %120

; <label>:44:                                     ; preds = %14
  %45 = load i64, i64* %9, align 8
  %46 = icmp ugt i64 %45, 0
  store i1 %46, i1* %4
  %47 = load i32, i32* @x.632
  %48 = load i32, i32* @y.633
  %49 = sub i32 %47, 627591546
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 627591546
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 603456126, i32 1915272811
  store i32 %61, i32* %13
  br label %120

; <label>:62:                                     ; preds = %14
  %63 = load volatile i1, i1* %4
  %64 = select i1 %63, i32 -1278471622, i32 -1271439620
  store i32 %64, i32* %13
  br label %120

; <label>:65:                                     ; preds = %14
  %66 = load i32, i32* %8, align 4
  %67 = load i32*, i32** %5, align 8
  store i32 %66, i32* %67, align 4
  store i32 -1543680648, i32* %13
  br label %120

; <label>:68:                                     ; preds = %14
  %69 = load i32, i32* @x.632
  %70 = load i32, i32* @y.633
  %71 = add i32 %69, 624460117
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, 624460117
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 -1021966774, i32 -1155556702
  store i32 %83, i32* %13
  br label %120

; <label>:84:                                     ; preds = %14
  %85 = load i64, i64* %9, align 8
  %86 = sub i64 0, %85
  %87 = sub i64 0, -1
  %88 = add i64 %86, %87
  %89 = sub i64 0, %88
  %90 = add i64 %85, -1
  store i64 %89, i64* %9, align 8
  %91 = load i32*, i32** %5, align 8
  %92 = getelementptr inbounds i32, i32* %91, i32 1
  store i32* %92, i32** %5, align 8
  %93 = load i32, i32* @x.632
  %94 = load i32, i32* @y.633
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 1722476093, i32 -1155556702
  store i32 %106, i32* %13
  br label %120

; <label>:107:                                    ; preds = %14
  store i32 384291046, i32* %13
  br label %120

; <label>:108:                                    ; preds = %14
  %109 = load i32*, i32** %5, align 8
  ret i32* %109

; <label>:110:                                    ; preds = %14
  %111 = load i64, i64* %9, align 8
  %112 = icmp ugt i64 %111, 0
  store i32 1600817940, i32* %13
  br label %120

; <label>:113:                                    ; preds = %14
  %114 = load i64, i64* %9, align 8
  %115 = sub i64 0, -1
  %116 = sub i64 %114, %115
  %117 = add i64 %114, -1
  store i64 %116, i64* %9, align 8
  %118 = load i32*, i32** %5, align 8
  %119 = getelementptr inbounds i32, i32* %118, i32 1
  store i32* %119, i32** %5, align 8
  store i32 -1021966774, i32* %13
  br label %120

; <label>:120:                                    ; preds = %113, %110, %107, %84, %68, %65, %62, %44, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.634
  %6 = load i32, i32* @y.635
  %7 = sub i32 %5, -1377666391
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1377666391
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1238301975, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1238301975, label %19
    i32 -254681711, label %39
    i32 648531786, label %58
    i32 -1385594324, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -254681711, i32 -1385594324
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  %41 = load i32*, i32** %40, align 8
  %42 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %41)
  store i32* %42, i32** %2
  %43 = load i32, i32* @x.634
  %44 = load i32, i32* @y.635
  %45 = sub i32 %43, -1669435687
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1669435687
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 648531786, i32 -1385594324
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile i32*, i32** %2
  ret i32* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca i32*, align 8
  store i32* %0, i32** %61, align 8
  %62 = load i32*, i32** %61, align 8
  %63 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %62)
  store i32 -254681711, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.636
  %6 = load i32, i32* @y.637
  %7 = add i32 %5, -1805518127
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1805518127
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1638935614, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1638935614, label %19
    i32 -89521260, label %39
    i32 -703607394, label %57
    i32 -1101769116, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -89521260, i32 -1101769116
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  %41 = load i32*, i32** %40, align 8
  store i32* %41, i32** %2
  %42 = load i32, i32* @x.636
  %43 = load i32, i32* @y.637
  %44 = add i32 %42, -1191328455
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1191328455
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -703607394, i32 -1101769116
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32*, i32** %2
  ret i32* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i32*, align 8
  store i32* %0, i32** %60, align 8
  %61 = load i32*, i32** %60, align 8
  store i32 -89521260, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %5 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.642
  %9 = load i32, i32* @y.643
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -119978521, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -119978521, label %21
    i32 1686796417, label %41
    i32 200485066, label %75
    i32 1399233358, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1686796417, i32 1399233358
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.22", align 8
  %43 = alloca %"class.std::move_iterator.22", align 8
  %44 = alloca i32*, align 8
  %45 = alloca %"class.std::allocator.7"*, align 8
  %46 = alloca %"class.std::move_iterator.22", align 8
  %47 = alloca %"class.std::move_iterator.22", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %42, i32 0, i32 0
  store i32* %0, i32** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %43, i32 0, i32 0
  store i32* %1, i32** %49, align 8
  store i32* %2, i32** %44, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %45, align 8
  %50 = bitcast %"class.std::move_iterator.22"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.22"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.22"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.22"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load i32*, i32** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %46, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %47, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %56, i32* %58, i32* %54)
  store i32* %59, i32** %5
  %60 = load i32, i32* @x.642
  %61 = load i32, i32* @y.643
  %62 = add i32 %60, 983876146
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 983876146
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 200485066, i32 1399233358
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile i32*, i32** %5
  ret i32* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.std::move_iterator.22", align 8
  %79 = alloca %"class.std::move_iterator.22", align 8
  %80 = alloca i32*, align 8
  %81 = alloca %"class.std::allocator.7"*, align 8
  %82 = alloca %"class.std::move_iterator.22", align 8
  %83 = alloca %"class.std::move_iterator.22", align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %78, i32 0, i32 0
  store i32* %0, i32** %84, align 8
  %85 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %79, i32 0, i32 0
  store i32* %1, i32** %85, align 8
  store i32* %2, i32** %80, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %81, align 8
  %86 = bitcast %"class.std::move_iterator.22"* %82 to i8*
  %87 = bitcast %"class.std::move_iterator.22"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.std::move_iterator.22"* %83 to i8*
  %89 = bitcast %"class.std::move_iterator.22"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load i32*, i32** %80, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %82, i32 0, i32 0
  %92 = load i32*, i32** %91, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %83, i32 0, i32 0
  %94 = load i32*, i32** %93, align 8
  %95 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %92, i32* %94, i32* %90)
  store i32 1686796417, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.22", align 8
  %3 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  %4 = load i32*, i32** %3, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.22"* %2, i32* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %2, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  ret i32* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.646
  %8 = load i32, i32* @y.647
  %9 = add i32 %7, 873409955
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 873409955
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1379170544, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1379170544, label %21
    i32 912029565, label %29
    i32 -1594804217, label %74
    i32 341445419, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 912029565, i32 341445419
  store i32 %28, i32* %17
  br label %95

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator.22", align 8
  %31 = alloca %"class.std::move_iterator.22", align 8
  %32 = alloca i32*, align 8
  %33 = alloca i8, align 1
  %34 = alloca %"class.std::move_iterator.22", align 8
  %35 = alloca %"class.std::move_iterator.22", align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %30, i32 0, i32 0
  store i32* %0, i32** %36, align 8
  %37 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %31, i32 0, i32 0
  store i32* %1, i32** %37, align 8
  store i32* %2, i32** %32, align 8
  store i8 1, i8* %33, align 1
  %38 = bitcast %"class.std::move_iterator.22"* %34 to i8*
  %39 = bitcast %"class.std::move_iterator.22"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.std::move_iterator.22"* %35 to i8*
  %41 = bitcast %"class.std::move_iterator.22"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load i32*, i32** %32, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %34, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %35, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %44, i32* %46, i32* %42)
  store i32* %47, i32** %4
  %48 = load i32, i32* @x.646
  %49 = load i32, i32* @y.647
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1594804217, i32 341445419
  store i32 %73, i32* %17
  br label %95

; <label>:74:                                     ; preds = %18
  %75 = load volatile i32*, i32** %4
  ret i32* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.std::move_iterator.22", align 8
  %78 = alloca %"class.std::move_iterator.22", align 8
  %79 = alloca i32*, align 8
  %80 = alloca i8, align 1
  %81 = alloca %"class.std::move_iterator.22", align 8
  %82 = alloca %"class.std::move_iterator.22", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %77, i32 0, i32 0
  store i32* %0, i32** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %78, i32 0, i32 0
  store i32* %1, i32** %84, align 8
  store i32* %2, i32** %79, align 8
  store i8 1, i8* %80, align 1
  %85 = bitcast %"class.std::move_iterator.22"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator.22"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.std::move_iterator.22"* %82 to i8*
  %88 = bitcast %"class.std::move_iterator.22"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load i32*, i32** %79, align 8
  %90 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %81, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %82, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %91, i32* %93, i32* %89)
  store i32 912029565, i32* %17
  br label %95

; <label>:95:                                     ; preds = %76, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.648
  %8 = load i32, i32* @y.649
  %9 = sub i32 %7, 1902574322
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1902574322
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 162975067, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %105
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 162975067, label %21
    i32 87747943, label %41
    i32 -2102273174, label %85
    i32 -429275458, label %87
  ]

; <label>:20:                                     ; preds = %18
  br label %105

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 87747943, i32 -429275458
  store i32 %40, i32* %17
  br label %105

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.22", align 8
  %43 = alloca %"class.std::move_iterator.22", align 8
  %44 = alloca i32*, align 8
  %45 = alloca %"class.std::move_iterator.22", align 8
  %46 = alloca %"class.std::move_iterator.22", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %42, i32 0, i32 0
  store i32* %0, i32** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %43, i32 0, i32 0
  store i32* %1, i32** %48, align 8
  store i32* %2, i32** %44, align 8
  %49 = bitcast %"class.std::move_iterator.22"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.22"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator.22"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator.22"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %45, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %46, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %55, i32* %57, i32* %53)
  store i32* %58, i32** %4
  %59 = load i32, i32* @x.648
  %60 = load i32, i32* @y.649
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -2102273174, i32 -429275458
  store i32 %84, i32* %17
  br label %105

; <label>:85:                                     ; preds = %18
  %86 = load volatile i32*, i32** %4
  ret i32* %86

; <label>:87:                                     ; preds = %18
  %88 = alloca %"class.std::move_iterator.22", align 8
  %89 = alloca %"class.std::move_iterator.22", align 8
  %90 = alloca i32*, align 8
  %91 = alloca %"class.std::move_iterator.22", align 8
  %92 = alloca %"class.std::move_iterator.22", align 8
  %93 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %88, i32 0, i32 0
  store i32* %0, i32** %93, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %89, i32 0, i32 0
  store i32* %1, i32** %94, align 8
  store i32* %2, i32** %90, align 8
  %95 = bitcast %"class.std::move_iterator.22"* %91 to i8*
  %96 = bitcast %"class.std::move_iterator.22"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = bitcast %"class.std::move_iterator.22"* %92 to i8*
  %98 = bitcast %"class.std::move_iterator.22"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = load i32*, i32** %90, align 8
  %100 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %91, i32 0, i32 0
  %101 = load i32*, i32** %100, align 8
  %102 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %92, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %101, i32* %103, i32* %99)
  store i32 87747943, i32* %17
  br label %105

; <label>:105:                                    ; preds = %87, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.22", align 8
  %5 = alloca %"class.std::move_iterator.22", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::move_iterator.22", align 8
  %8 = alloca %"class.std::move_iterator.22", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.std::move_iterator.22"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.22"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %14)
  %16 = bitcast %"class.std::move_iterator.22"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.22"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  %22 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %15, i32* %20, i32* %21)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.22", align 8
  %3 = alloca %"class.std::move_iterator.22", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.std::move_iterator.22"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.22"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32**
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.658
  %11 = load i32, i32* @y.659
  %12 = add i32 %10, 418967769
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 418967769
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1051658251, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %200
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1051658251, label %24
    i32 -1167626118, label %44
    i32 -844065167, label %79
    i32 1266813199, label %82
    i32 -1070793364, label %97
    i32 418381678, label %122
    i32 -166269824, label %123
    i32 -424029238, label %129
    i32 890292993, label %180
  ]

; <label>:23:                                     ; preds = %21
  br label %200

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -1167626118, i32 -424029238
  store i32 %43, i32* %20
  br label %200

; <label>:44:                                     ; preds = %21
  %45 = alloca i32*, align 8
  store i32** %45, i32*** %7
  %46 = alloca i32*, align 8
  %47 = alloca i32*, align 8
  store i32** %47, i32*** %6
  %48 = alloca i64, align 8
  store i64* %48, i64** %5
  %49 = load volatile i32**, i32*** %7
  store i32* %0, i32** %49, align 8
  store i32* %1, i32** %46, align 8
  %50 = load volatile i32**, i32*** %6
  store i32* %2, i32** %50, align 8
  %51 = load i32*, i32** %46, align 8
  %52 = load volatile i32**, i32*** %7
  %53 = load i32*, i32** %52, align 8
  %54 = ptrtoint i32* %51 to i64
  %55 = ptrtoint i32* %53 to i64
  %56 = add i64 %54, 2866631884506805574
  %57 = sub i64 %56, %55
  %58 = sub i64 %57, 2866631884506805574
  %59 = sub i64 %54, %55
  %60 = sdiv exact i64 %58, 4
  %61 = load volatile i64*, i64** %5
  store i64 %60, i64* %61, align 8
  %62 = load volatile i64*, i64** %5
  %63 = load i64, i64* %62, align 8
  %64 = icmp ne i64 %63, 0
  store i1 %64, i1* %4
  %65 = load i32, i32* @x.658
  %66 = load i32, i32* @y.659
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 -844065167, i32 -424029238
  store i32 %78, i32* %20
  br label %200

; <label>:79:                                     ; preds = %21
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 1266813199, i32 -166269824
  store i32 %81, i32* %20
  br label %200

; <label>:82:                                     ; preds = %21
  %83 = load i32, i32* @x.658
  %84 = load i32, i32* @y.659
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 -1070793364, i32 890292993
  store i32 %96, i32* %20
  br label %200

; <label>:97:                                     ; preds = %21
  %98 = load volatile i32**, i32*** %6
  %99 = load i32*, i32** %98, align 8
  %100 = bitcast i32* %99 to i8*
  %101 = load volatile i32**, i32*** %7
  %102 = load i32*, i32** %101, align 8
  %103 = bitcast i32* %102 to i8*
  %104 = load volatile i64*, i64** %5
  %105 = load i64, i64* %104, align 8
  %106 = mul i64 4, %105
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %100, i8* %103, i64 %106, i32 4, i1 false)
  %107 = load i32, i32* @x.658
  %108 = load i32, i32* @y.659
  %109 = sub i32 %107, -1725713372
  %110 = sub i32 %109, 1
  %111 = add i32 %110, -1725713372
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  %121 = select i1 %119, i32 418381678, i32 890292993
  store i32 %121, i32* %20
  br label %200

; <label>:122:                                    ; preds = %21
  store i32 -166269824, i32* %20
  br label %200

; <label>:123:                                    ; preds = %21
  %124 = load volatile i32**, i32*** %6
  %125 = load i32*, i32** %124, align 8
  %126 = load volatile i64*, i64** %5
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds i32, i32* %125, i64 %127
  ret i32* %128

; <label>:129:                                    ; preds = %21
  %130 = alloca i32*, align 8
  %131 = alloca i32*, align 8
  %132 = alloca i32*, align 8
  %133 = alloca i64, align 8
  store i32* %0, i32** %130, align 8
  store i32* %1, i32** %131, align 8
  store i32* %2, i32** %132, align 8
  %134 = load i32*, i32** %131, align 8
  %135 = load i32*, i32** %130, align 8
  %136 = ptrtoint i32* %134 to i64
  %137 = ptrtoint i32* %135 to i64
  %138 = sub i64 0, %136
  %139 = add i64 0, %138
  %140 = sub i64 0, %136
  %141 = add i64 %139, 8206154303988817490
  %142 = add i64 %141, %137
  %143 = sub i64 %142, 8206154303988817490
  %144 = add i64 %139, %137
  %145 = sub i64 0, %137
  %146 = add i64 %136, %145
  %147 = sub i64 %136, %137
  %148 = shl i64 %146, 4
  %149 = sub i64 0, 7681632269022112822
  %150 = sub i64 %149, %146
  %151 = add i64 %150, 7681632269022112822
  %152 = sub i64 0, %146
  %153 = sub i64 %151, 7507486903958102904
  %154 = add i64 %153, 4
  %155 = add i64 %154, 7507486903958102904
  %156 = add i64 %151, 4
  %157 = sub i64 0, -2681795842403166568
  %158 = sub i64 %157, %146
  %159 = add i64 %158, -2681795842403166568
  %160 = sub i64 0, %146
  %161 = sub i64 %159, -8507960029246110895
  %162 = add i64 %161, 4
  %163 = add i64 %162, -8507960029246110895
  %164 = add i64 %159, 4
  %165 = add i64 %146, 4381643200688032944
  %166 = sub i64 %165, 4
  %167 = sub i64 %166, 4381643200688032944
  %168 = sub i64 %146, 4
  %169 = mul i64 %167, 4
  %170 = sub i64 0, %146
  %171 = add i64 0, %170
  %172 = sub i64 0, %146
  %173 = sub i64 %171, -3123093606753625885
  %174 = add i64 %173, 4
  %175 = add i64 %174, -3123093606753625885
  %176 = add i64 %171, 4
  %177 = sdiv exact i64 %146, 4
  store i64 %177, i64* %133, align 8
  %178 = load i64, i64* %133, align 8
  %179 = icmp ne i64 %178, 0
  store i32 -1167626118, i32* %20
  br label %200

; <label>:180:                                    ; preds = %21
  %181 = load volatile i32**, i32*** %6
  %182 = load i32*, i32** %181, align 8
  %183 = bitcast i32* %182 to i8*
  %184 = load volatile i32**, i32*** %7
  %185 = load i32*, i32** %184, align 8
  %186 = bitcast i32* %185 to i8*
  %187 = load volatile i64*, i64** %5
  %188 = load i64, i64* %187, align 8
  %189 = sub i64 4, -3561109276810444029
  %190 = sub i64 %189, %188
  %191 = add i64 %190, -3561109276810444029
  %192 = sub i64 4, %188
  %193 = mul i64 %191, %188
  %194 = add i64 4, -5342061421319651472
  %195 = sub i64 %194, %188
  %196 = sub i64 %195, -5342061421319651472
  %197 = sub i64 4, %188
  %198 = mul i64 %196, %188
  %199 = mul i64 4, %188
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %183, i8* %186, i64 %199, i32 4, i1 false)
  store i32 -1070793364, i32* %20
  br label %200

; <label>:200:                                    ; preds = %180, %129, %122, %97, %82, %79, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32*) #0 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.660
  %6 = load i32, i32* @y.661
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -16026575, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -16026575, label %18
    i32 -1437191601, label %26
    i32 825266037, label %45
    i32 -1309431724, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1437191601, i32 -1309431724
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator.22", align 8
  %28 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %27, i32 0, i32 0
  store i32* %0, i32** %28, align 8
  %29 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.22"* %27)
  store i32* %29, i32** %2
  %30 = load i32, i32* @x.660
  %31 = load i32, i32* @y.661
  %32 = sub i32 %30, -2008041404
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -2008041404
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 825266037, i32 -1309431724
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  %46 = load volatile i32*, i32** %2
  ret i32* %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.std::move_iterator.22", align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %48, i32 0, i32 0
  store i32* %0, i32** %49, align 8
  %50 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.22"* %48)
  store i32 -1437191601, i32* %14
  br label %51

; <label>:51:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.22"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.662
  %6 = load i32, i32* @y.663
  %7 = add i32 %5, -1278835088
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1278835088
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 526037878, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 526037878, label %19
    i32 -663067103, label %27
    i32 -2121629689, label %59
    i32 -542525583, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -663067103, i32 -542525583
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %28, align 8
  %29 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %29, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.662
  %33 = load i32, i32* @y.663
  %34 = sub i32 %32, 1461303975
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1461303975
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -2121629689, i32 -542525583
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %62, align 8
  %63 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %63, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  store i32 -663067103, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.22"*, i32*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.664
  %6 = load i32, i32* @y.665
  %7 = sub i32 %5, -97700204
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -97700204
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -820959953, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -820959953, label %19
    i32 868181537, label %27
    i32 -939174457, label %60
    i32 -636888392, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 868181537, i32 -636888392
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.22"*, align 8
  %29 = alloca i32*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %30, i32 0, i32 0
  %32 = load i32*, i32** %29, align 8
  store i32* %32, i32** %31, align 8
  %33 = load i32, i32* @x.664
  %34 = load i32, i32* @y.665
  %35 = sub i32 %33, -405559617
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -405559617
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -939174457, i32 -636888392
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.22"*, align 8
  %63 = alloca i32*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %62, align 8
  store i32* %1, i32** %63, align 8
  %64 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %62, align 8
  %65 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %64, i32 0, i32 0
  %66 = load i32*, i32** %63, align 8
  store i32* %66, i32** %65, align 8
  store i32 868181537, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.666
  %6 = load i32, i32* @y.667
  %7 = add i32 %5, -1103407758
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1103407758
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -635005280, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -635005280, label %19
    i32 -1532838553, label %39
    i32 -944912097, label %59
    i32 -1439687623, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1532838553, i32 -1439687623
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load i32*, i32** %40, align 8
  %43 = load i32*, i32** %41, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %42, i32* %43)
  %44 = load i32, i32* @x.666
  %45 = load i32, i32* @y.667
  %46 = add i32 %44, 300867231
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 300867231
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -944912097, i32 -1439687623
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca i32*, align 8
  %62 = alloca i32*, align 8
  store i32* %0, i32** %61, align 8
  store i32* %1, i32** %62, align 8
  %63 = load i32*, i32** %61, align 8
  %64 = load i32*, i32** %62, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %63, i32* %64)
  store i32 -1532838553, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #4 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator.7"* noalias sret, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %3, align 8
  %4 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.7"* sret %0, %"class.std::allocator.7"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.6"*, i64, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.672
  %5 = load i32, i32* @y.673
  %6 = add i32 %4, 2023412329
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2023412329
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %116

; <label>:30:                                     ; preds = %3, %116
  %31 = alloca %"struct.std::_Vector_base.6"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::allocator.7"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %33, align 8
  %36 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %31, align 8
  %37 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %36, i32 0, i32 0
  %38 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %33, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37, %"class.std::allocator.7"* dereferenceable(1) %38) #3
  %39 = load i64, i64* %32, align 8
  %40 = load i32, i32* @x.672
  %41 = load i32, i32* @y.673
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %116

; <label>:65:                                     ; preds = %30
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.6"* %36, i64 %39)
          to label %66 unwind label %107

; <label>:66:                                     ; preds = %65
  %67 = load i32, i32* @x.672
  %68 = load i32, i32* @y.673
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %126

; <label>:92:                                     ; preds = %66, %126
  %93 = load i32, i32* @x.672
  %94 = load i32, i32* @y.673
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %126

; <label>:106:                                    ; preds = %92
  ret void

; <label>:107:                                    ; preds = %65
  %108 = landingpad { i8*, i32 }
          cleanup
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %34, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %35, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37) #3
  br label %111

; <label>:111:                                    ; preds = %107
  %112 = load i8*, i8** %34, align 8
  %113 = load i32, i32* %35, align 4
  %114 = insertvalue { i8*, i32 } undef, i8* %112, 0
  %115 = insertvalue { i8*, i32 } %114, i32 %113, 1
  resume { i8*, i32 } %115

; <label>:116:                                    ; preds = %30, %3
  %117 = alloca %"struct.std::_Vector_base.6"*, align 8
  %118 = alloca i64, align 8
  %119 = alloca %"class.std::allocator.7"*, align 8
  %120 = alloca i8*
  %121 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %117, align 8
  store i64 %1, i64* %118, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %119, align 8
  %122 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %117, align 8
  %123 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %122, i32 0, i32 0
  %124 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %119, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %123, %"class.std::allocator.7"* dereferenceable(1) %124) #3
  %125 = load i64, i64* %118, align 8
  br label %30

; <label>:126:                                    ; preds = %92, %66
  br label %92
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %10, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = call i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32* %19, i32* %21, i32* %17)
  ret i32* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = add i64 %15, 4368523338155268472
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 4368523338155268472
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.6"* %5, i32* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.7"* noalias sret, %"class.std::allocator.7"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %3, align 8
  %4 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.7"* %0, %"class.std::allocator.7"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.680
  %6 = load i32, i32* @y.681
  %7 = add i32 %5, -829373865
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -829373865
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1733330038, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1733330038, label %19
    i32 180075552, label %39
    i32 1319176032, label %73
    i32 809538784, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 180075552, i32 809538784
  store i32 %38, i32* %15
  br label %94

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.6"*, align 8
  %41 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %40, align 8
  %43 = load i64, i64* %41, align 8
  %44 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %42, i64 %43)
  %45 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %45, i32 0, i32 0
  store i32* %44, i32** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %50, i32 0, i32 1
  store i32* %49, i32** %51, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = load i64, i64* %41, align 8
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  %57 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %57, i32 0, i32 2
  store i32* %56, i32** %58, align 8
  %59 = load i32, i32* @x.680
  %60 = load i32, i32* @y.681
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 1319176032, i32 809538784
  store i32 %72, i32* %15
  br label %94

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Vector_base.6"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %80, i32 0, i32 0
  store i32* %79, i32** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %85, i32 0, i32 1
  store i32* %84, i32** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds i32, i32* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %92, i32 0, i32 2
  store i32* %91, i32** %93, align 8
  store i32 180075552, i32* %15
  br label %94

; <label>:94:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.682
  %5 = load i32, i32* @y.683
  %6 = add i32 %4, 1886661414
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1886661414
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1215343697, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1215343697, label %18
    i32 -503769879, label %26
    i32 -1552801259, label %57
    i32 -1879275725, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -503769879, i32 -1879275725
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28 to %"class.std::allocator.7"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.7"* %29) #3
  %30 = load i32, i32* @x.682
  %31 = load i32, i32* @y.683
  %32 = sub i32 %30, 40370085
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 40370085
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1552801259, i32 -1879275725
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %59, align 8
  %60 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %60 to %"class.std::allocator.7"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.7"* %61) #3
  store i32 -503769879, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.686
  %8 = load i32, i32* @y.687
  %9 = add i32 %7, -1734338002
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1734338002
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1959517832, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %105
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1959517832, label %21
    i32 -1932584230, label %41
    i32 964860929, label %85
    i32 1207964554, label %87
  ]

; <label>:20:                                     ; preds = %18
  br label %105

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1932584230, i32 1207964554
  store i32 %40, i32* %17
  br label %105

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %44 = alloca i32*, align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %42, i32 0, i32 0
  store i32* %0, i32** %47, align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %43, i32 0, i32 0
  store i32* %1, i32** %48, align 8
  store i32* %2, i32** %44, align 8
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %45 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %46 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %45, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %46, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32* %55, i32* %57, i32* %53)
  store i32* %58, i32** %4
  %59 = load i32, i32* @x.686
  %60 = load i32, i32* @y.687
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 964860929, i32 1207964554
  store i32 %84, i32* %17
  br label %105

; <label>:85:                                     ; preds = %18
  %86 = load volatile i32*, i32** %4
  ret i32* %86

; <label>:87:                                     ; preds = %18
  %88 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %90 = alloca i32*, align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %92 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %88, i32 0, i32 0
  store i32* %0, i32** %93, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %89, i32 0, i32 0
  store i32* %1, i32** %94, align 8
  store i32* %2, i32** %90, align 8
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %91 to i8*
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %92 to i8*
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = load i32*, i32** %90, align 8
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %91, i32 0, i32 0
  %101 = load i32*, i32** %100, align 8
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %92, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32* %101, i32* %103, i32* %99)
  store i32 -1932584230, i32* %17
  br label %105

; <label>:105:                                    ; preds = %87, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  store i32* %17, i32** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  store i32* %23, i32** %24, align 8
  %25 = load i32*, i32** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %9, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_(i32* %27, i32* %29, i32* %25)
  ret i32* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  %22 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %21)
  %23 = call i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32* %15, i32* %20, i32* %22)
  ret i32* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  store i32* %0, i32** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_(i32* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  store i32* %10, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.696
  %6 = load i32, i32* @y.697
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 827163931, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 827163931, label %18
    i32 -1244952752, label %38
    i32 1447416997, label %62
    i32 -47925050, label %64
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1244952752, i32 -47925050
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %39, i32 0, i32 0
  store i32* %0, i32** %41, align 8
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %40 to i8*
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %40, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_(i32* %45)
  store i32* %46, i32** %2
  %47 = load i32, i32* @x.696
  %48 = load i32, i32* @y.697
  %49 = add i32 %47, -360972033
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -360972033
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1447416997, i32 -47925050
  store i32 %61, i32* %14
  br label %73

; <label>:62:                                     ; preds = %15
  %63 = load volatile i32*, i32** %2
  ret i32* %63

; <label>:64:                                     ; preds = %15
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %65, i32 0, i32 0
  store i32* %0, i32** %67, align 8
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %66 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %66, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_(i32* %71)
  store i32 -1244952752, i32* %14
  br label %73

; <label>:73:                                     ; preds = %64, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32**
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.698
  %11 = load i32, i32* @y.699
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1355228425, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %170
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1355228425, label %23
    i32 988049124, label %43
    i32 -937797114, label %90
    i32 1165130448, label %93
    i32 -1213303140, label %103
    i32 323916760, label %109
  ]

; <label>:22:                                     ; preds = %20
  br label %170

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 988049124, i32 323916760
  store i32 %42, i32* %19
  br label %170

; <label>:43:                                     ; preds = %20
  %44 = alloca i32*, align 8
  store i32** %44, i32*** %7
  %45 = alloca i32*, align 8
  %46 = alloca i32*, align 8
  store i32** %46, i32*** %6
  %47 = alloca i64, align 8
  store i64* %47, i64** %5
  %48 = load volatile i32**, i32*** %7
  store i32* %0, i32** %48, align 8
  store i32* %1, i32** %45, align 8
  %49 = load volatile i32**, i32*** %6
  store i32* %2, i32** %49, align 8
  %50 = load i32*, i32** %45, align 8
  %51 = load volatile i32**, i32*** %7
  %52 = load i32*, i32** %51, align 8
  %53 = ptrtoint i32* %50 to i64
  %54 = ptrtoint i32* %52 to i64
  %55 = sub i64 0, %54
  %56 = add i64 %53, %55
  %57 = sub i64 %53, %54
  %58 = sdiv exact i64 %56, 4
  %59 = load volatile i64*, i64** %5
  store i64 %58, i64* %59, align 8
  %60 = load volatile i64*, i64** %5
  %61 = load i64, i64* %60, align 8
  %62 = icmp ne i64 %61, 0
  store i1 %62, i1* %4
  %63 = load i32, i32* @x.698
  %64 = load i32, i32* @y.699
  %65 = add i32 %63, 2139074828
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, 2139074828
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  %89 = select i1 %87, i32 -937797114, i32 323916760
  store i32 %89, i32* %19
  br label %170

; <label>:90:                                     ; preds = %20
  %91 = load volatile i1, i1* %4
  %92 = select i1 %91, i32 1165130448, i32 -1213303140
  store i32 %92, i32* %19
  br label %170

; <label>:93:                                     ; preds = %20
  %94 = load volatile i32**, i32*** %6
  %95 = load i32*, i32** %94, align 8
  %96 = bitcast i32* %95 to i8*
  %97 = load volatile i32**, i32*** %7
  %98 = load i32*, i32** %97, align 8
  %99 = bitcast i32* %98 to i8*
  %100 = load volatile i64*, i64** %5
  %101 = load i64, i64* %100, align 8
  %102 = mul i64 4, %101
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %96, i8* %99, i64 %102, i32 4, i1 false)
  store i32 -1213303140, i32* %19
  br label %170

; <label>:103:                                    ; preds = %20
  %104 = load volatile i32**, i32*** %6
  %105 = load i32*, i32** %104, align 8
  %106 = load volatile i64*, i64** %5
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds i32, i32* %105, i64 %107
  ret i32* %108

; <label>:109:                                    ; preds = %20
  %110 = alloca i32*, align 8
  %111 = alloca i32*, align 8
  %112 = alloca i32*, align 8
  %113 = alloca i64, align 8
  store i32* %0, i32** %110, align 8
  store i32* %1, i32** %111, align 8
  store i32* %2, i32** %112, align 8
  %114 = load i32*, i32** %111, align 8
  %115 = load i32*, i32** %110, align 8
  %116 = ptrtoint i32* %114 to i64
  %117 = ptrtoint i32* %115 to i64
  %118 = sub i64 0, %116
  %119 = add i64 0, %118
  %120 = sub i64 0, %116
  %121 = sub i64 0, %119
  %122 = sub i64 0, %117
  %123 = add i64 %121, %122
  %124 = sub i64 0, %123
  %125 = add i64 %119, %117
  %126 = shl i64 %116, %117
  %127 = shl i64 %116, %117
  %128 = shl i64 %116, %117
  %129 = shl i64 %116, %117
  %130 = add i64 0, -7651829901120293407
  %131 = sub i64 %130, %116
  %132 = sub i64 %131, -7651829901120293407
  %133 = sub i64 0, %116
  %134 = add i64 %132, -8525845729270446633
  %135 = add i64 %134, %117
  %136 = sub i64 %135, -8525845729270446633
  %137 = add i64 %132, %117
  %138 = sub i64 %116, 7997839163286534283
  %139 = sub i64 %138, %117
  %140 = add i64 %139, 7997839163286534283
  %141 = sub i64 %116, %117
  %142 = sub i64 0, 4
  %143 = add i64 %140, %142
  %144 = sub i64 %140, 4
  %145 = mul i64 %143, 4
  %146 = add i64 0, -9018317419945614774
  %147 = sub i64 %146, %140
  %148 = sub i64 %147, -9018317419945614774
  %149 = sub i64 0, %140
  %150 = sub i64 %148, 4036261571691502366
  %151 = add i64 %150, 4
  %152 = add i64 %151, 4036261571691502366
  %153 = add i64 %148, 4
  %154 = sub i64 0, -6242824549535629802
  %155 = sub i64 %154, %140
  %156 = add i64 %155, -6242824549535629802
  %157 = sub i64 0, %140
  %158 = add i64 %156, 7780077630978816388
  %159 = add i64 %158, 4
  %160 = sub i64 %159, 7780077630978816388
  %161 = add i64 %156, 4
  %162 = sub i64 %140, 125230783650768739
  %163 = sub i64 %162, 4
  %164 = add i64 %163, 125230783650768739
  %165 = sub i64 %140, 4
  %166 = mul i64 %164, 4
  %167 = sdiv exact i64 %140, 4
  store i64 %167, i64* %113, align 8
  %168 = load i64, i64* %113, align 8
  %169 = icmp ne i64 %168, 0
  store i32 988049124, i32* %19
  br label %170

; <label>:170:                                    ; preds = %109, %93, %90, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_(i32*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %2) #3
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_(i32*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  ret i32* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"*, i64** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store i64** %1, i64*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load i64**, i64*** %4, align 8
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.5"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.708
  %4 = load i32, i32* @y.709
  %5 = add i32 %3, -2095439144
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -2095439144
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %427

; <label>:17:                                     ; preds = %2, %427
  %18 = alloca %"class.std::vector.5"*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %18, align 8
  store i32* %1, i32** %19, align 8
  %25 = load %"class.std::vector.5"*, %"class.std::vector.5"** %18, align 8
  %26 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.5"* %25, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %26, i64* %20, align 8
  %27 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %28 = load i64, i64* %20, align 8
  %29 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %27, i64 %28)
  store i32* %29, i32** %21, align 8
  %30 = load i32*, i32** %21, align 8
  store i32* %30, i32** %22, align 8
  %31 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %31, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32 to %"class.std::allocator.7"*
  %34 = load i32*, i32** %21, align 8
  %35 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %25) #3
  %36 = getelementptr inbounds i32, i32* %34, i64 %35
  %37 = load i32*, i32** %19, align 8
  %38 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %37) #3
  %39 = load i32, i32* @x.708
  %40 = load i32, i32* @y.709
  %41 = add i32 %39, -310618040
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -310618040
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %427

; <label>:53:                                     ; preds = %17
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.7"* dereferenceable(1) %33, i32* %36, i32* dereferenceable(4) %38)
          to label %54 unwind label %70

; <label>:54:                                     ; preds = %53
  store i32* null, i32** %22, align 8
  %55 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %56, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %60, i32 0, i32 1
  %62 = load i32*, i32** %61, align 8
  %63 = load i32*, i32** %21, align 8
  %64 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %65 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %64) #3
  %66 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %58, i32* %62, i32* %63, %"class.std::allocator.7"* dereferenceable(1) %65)
          to label %67 unwind label %70

; <label>:67:                                     ; preds = %54
  store i32* %66, i32** %22, align 8
  %68 = load i32*, i32** %22, align 8
  %69 = getelementptr inbounds i32, i32* %68, i32 1
  store i32* %69, i32** %22, align 8
  br label %292

; <label>:70:                                     ; preds = %54, %53
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %23, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %24, align 4
  br label %74

; <label>:74:                                     ; preds = %70
  %75 = load i32, i32* @x.708
  %76 = load i32, i32* @y.709
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %449

; <label>:100:                                    ; preds = %74, %449
  %101 = load i8*, i8** %23, align 8
  %102 = call i8* @__cxa_begin_catch(i8* %101) #3
  %103 = load i32*, i32** %22, align 8
  %104 = icmp ne i32* %103, null
  %105 = load i32, i32* @x.708
  %106 = load i32, i32* @y.709
  %107 = sub i32 %105, 2121546637
  %108 = sub i32 %107, 1
  %109 = add i32 %108, 2121546637
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 true, true
  %118 = and i1 %115, true
  %119 = and i1 %113, %117
  %120 = and i1 %116, true
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 true, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  br i1 %129, label %131, label %449

; <label>:131:                                    ; preds = %100
  br i1 %104, label %198, label %132

; <label>:132:                                    ; preds = %131
  %133 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %133, i32 0, i32 0
  %135 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %134 to %"class.std::allocator.7"*
  %136 = load i32*, i32** %21, align 8
  %137 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %25) #3
  %138 = getelementptr inbounds i32, i32* %136, i64 %137
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.7"* dereferenceable(1) %135, i32* %138)
          to label %139 unwind label %140

; <label>:139:                                    ; preds = %132
  br label %245

; <label>:140:                                    ; preds = %290, %289, %198, %132
  %141 = load i32, i32* @x.708
  %142 = load i32, i32* @y.709
  %143 = add i32 %141, -567901466
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, -567901466
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 true, true
  %154 = and i1 %151, true
  %155 = and i1 %149, %153
  %156 = and i1 %152, true
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 true, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %454

; <label>:167:                                    ; preds = %140, %454
  %168 = landingpad { i8*, i32 }
          cleanup
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %23, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %24, align 4
  %171 = load i32, i32* @x.708
  %172 = load i32, i32* @y.709
  %173 = add i32 %171, 684662273
  %174 = sub i32 %173, 1
  %175 = sub i32 %174, 684662273
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = xor i1 %179, true
  %182 = xor i1 %180, true
  %183 = xor i1 true, true
  %184 = and i1 %181, true
  %185 = and i1 %179, %183
  %186 = and i1 %182, true
  %187 = and i1 %180, %183
  %188 = or i1 %184, %185
  %189 = or i1 %186, %187
  %190 = xor i1 %188, %189
  %191 = or i1 %181, %182
  %192 = xor i1 %191, true
  %193 = or i1 true, %183
  %194 = and i1 %192, %193
  %195 = or i1 %190, %194
  %196 = or i1 %179, %180
  br i1 %195, label %197, label %454

; <label>:197:                                    ; preds = %167
  invoke void @__cxa_end_catch()
          to label %291 unwind label %394

; <label>:198:                                    ; preds = %131
  %199 = load i32*, i32** %21, align 8
  %200 = load i32*, i32** %22, align 8
  %201 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %202 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %201) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %199, i32* %200, %"class.std::allocator.7"* dereferenceable(1) %202)
          to label %203 unwind label %140

; <label>:203:                                    ; preds = %198
  %204 = load i32, i32* @x.708
  %205 = load i32, i32* @y.709
  %206 = sub i32 %204, -1226141
  %207 = sub i32 %206, 1
  %208 = add i32 %207, -1226141
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 true, true
  %217 = and i1 %214, true
  %218 = and i1 %212, %216
  %219 = and i1 %215, true
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 true, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  br i1 %228, label %230, label %458

; <label>:230:                                    ; preds = %203, %458
  %231 = load i32, i32* @x.708
  %232 = load i32, i32* @y.709
  %233 = sub i32 0, 1
  %234 = add i32 %231, %233
  %235 = sub i32 %231, 1
  %236 = mul i32 %231, %234
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %232, 10
  %240 = and i1 %238, %239
  %241 = xor i1 %238, %239
  %242 = or i1 %240, %241
  %243 = or i1 %238, %239
  br i1 %242, label %244, label %458

; <label>:244:                                    ; preds = %230
  br label %245

; <label>:245:                                    ; preds = %244, %139
  %246 = load i32, i32* @x.708
  %247 = load i32, i32* @y.709
  %248 = sub i32 %246, 1354052494
  %249 = sub i32 %248, 1
  %250 = add i32 %249, 1354052494
  %251 = sub i32 %246, 1
  %252 = mul i32 %246, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %247, 10
  %256 = xor i1 %254, true
  %257 = xor i1 %255, true
  %258 = xor i1 true, true
  %259 = and i1 %256, true
  %260 = and i1 %254, %258
  %261 = and i1 %257, true
  %262 = and i1 %255, %258
  %263 = or i1 %259, %260
  %264 = or i1 %261, %262
  %265 = xor i1 %263, %264
  %266 = or i1 %256, %257
  %267 = xor i1 %266, true
  %268 = or i1 true, %258
  %269 = and i1 %267, %268
  %270 = or i1 %265, %269
  %271 = or i1 %254, %255
  br i1 %270, label %272, label %459

; <label>:272:                                    ; preds = %245, %459
  %273 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %274 = load i32*, i32** %21, align 8
  %275 = load i64, i64* %20, align 8
  %276 = load i32, i32* @x.708
  %277 = load i32, i32* @y.709
  %278 = sub i32 0, 1
  %279 = add i32 %276, %278
  %280 = sub i32 %276, 1
  %281 = mul i32 %276, %279
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %277, 10
  %285 = and i1 %283, %284
  %286 = xor i1 %283, %284
  %287 = or i1 %285, %286
  %288 = or i1 %283, %284
  br i1 %287, label %289, label %459

; <label>:289:                                    ; preds = %272
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.6"* %273, i32* %274, i64 %275)
          to label %290 unwind label %140

; <label>:290:                                    ; preds = %289
  invoke void @__cxa_rethrow() #13
          to label %426 unwind label %140

; <label>:291:                                    ; preds = %197
  br label %336

; <label>:292:                                    ; preds = %67
  %293 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %294 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %293, i32 0, i32 0
  %295 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %294, i32 0, i32 0
  %296 = load i32*, i32** %295, align 8
  %297 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %298 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %298, i32 0, i32 1
  %300 = load i32*, i32** %299, align 8
  %301 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %302 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %301) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %296, i32* %300, %"class.std::allocator.7"* dereferenceable(1) %302)
  %303 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %304 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %305 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %304, i32 0, i32 0
  %306 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %305, i32 0, i32 0
  %307 = load i32*, i32** %306, align 8
  %308 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %309 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %308, i32 0, i32 0
  %310 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %309, i32 0, i32 2
  %311 = load i32*, i32** %310, align 8
  %312 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %313 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %312, i32 0, i32 0
  %314 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %313, i32 0, i32 0
  %315 = load i32*, i32** %314, align 8
  %316 = ptrtoint i32* %311 to i64
  %317 = ptrtoint i32* %315 to i64
  %318 = sub i64 0, %317
  %319 = add i64 %316, %318
  %320 = sub i64 %316, %317
  %321 = sdiv exact i64 %319, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.6"* %303, i32* %307, i64 %321)
  %322 = load i32*, i32** %21, align 8
  %323 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %324 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %323, i32 0, i32 0
  %325 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %324, i32 0, i32 0
  store i32* %322, i32** %325, align 8
  %326 = load i32*, i32** %22, align 8
  %327 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %328 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %327, i32 0, i32 0
  %329 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %328, i32 0, i32 1
  store i32* %326, i32** %329, align 8
  %330 = load i32*, i32** %21, align 8
  %331 = load i64, i64* %20, align 8
  %332 = getelementptr inbounds i32, i32* %330, i64 %331
  %333 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %334 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %333, i32 0, i32 0
  %335 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %334, i32 0, i32 2
  store i32* %332, i32** %335, align 8
  ret void

; <label>:336:                                    ; preds = %291
  %337 = load i32, i32* @x.708
  %338 = load i32, i32* @y.709
  %339 = add i32 %337, 1885293040
  %340 = sub i32 %339, 1
  %341 = sub i32 %340, 1885293040
  %342 = sub i32 %337, 1
  %343 = mul i32 %337, %341
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %338, 10
  %347 = xor i1 %345, true
  %348 = xor i1 %346, true
  %349 = xor i1 false, true
  %350 = and i1 %347, false
  %351 = and i1 %345, %349
  %352 = and i1 %348, false
  %353 = and i1 %346, %349
  %354 = or i1 %350, %351
  %355 = or i1 %352, %353
  %356 = xor i1 %354, %355
  %357 = or i1 %347, %348
  %358 = xor i1 %357, true
  %359 = or i1 false, %349
  %360 = and i1 %358, %359
  %361 = or i1 %356, %360
  %362 = or i1 %345, %346
  br i1 %361, label %363, label %463

; <label>:363:                                    ; preds = %336, %463
  %364 = load i8*, i8** %23, align 8
  %365 = load i32, i32* %24, align 4
  %366 = insertvalue { i8*, i32 } undef, i8* %364, 0
  %367 = insertvalue { i8*, i32 } %366, i32 %365, 1
  %368 = load i32, i32* @x.708
  %369 = load i32, i32* @y.709
  %370 = sub i32 0, 1
  %371 = add i32 %368, %370
  %372 = sub i32 %368, 1
  %373 = mul i32 %368, %371
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %369, 10
  %377 = xor i1 %375, true
  %378 = xor i1 %376, true
  %379 = xor i1 false, true
  %380 = and i1 %377, false
  %381 = and i1 %375, %379
  %382 = and i1 %378, false
  %383 = and i1 %376, %379
  %384 = or i1 %380, %381
  %385 = or i1 %382, %383
  %386 = xor i1 %384, %385
  %387 = or i1 %377, %378
  %388 = xor i1 %387, true
  %389 = or i1 false, %379
  %390 = and i1 %388, %389
  %391 = or i1 %386, %390
  %392 = or i1 %375, %376
  br i1 %391, label %393, label %463

; <label>:393:                                    ; preds = %363
  resume { i8*, i32 } %367

; <label>:394:                                    ; preds = %197
  %395 = load i32, i32* @x.708
  %396 = load i32, i32* @y.709
  %397 = sub i32 %395, 501585583
  %398 = sub i32 %397, 1
  %399 = add i32 %398, 501585583
  %400 = sub i32 %395, 1
  %401 = mul i32 %395, %399
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %396, 10
  %405 = and i1 %403, %404
  %406 = xor i1 %403, %404
  %407 = or i1 %405, %406
  %408 = or i1 %403, %404
  br i1 %407, label %409, label %468

; <label>:409:                                    ; preds = %394, %468
  %410 = landingpad { i8*, i32 }
          catch i8* null
  %411 = extractvalue { i8*, i32 } %410, 0
  call void @__clang_call_terminate(i8* %411) #12
  %412 = load i32, i32* @x.708
  %413 = load i32, i32* @y.709
  %414 = sub i32 0, 1
  %415 = add i32 %412, %414
  %416 = sub i32 %412, 1
  %417 = mul i32 %412, %415
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %413, 10
  %421 = and i1 %419, %420
  %422 = xor i1 %419, %420
  %423 = or i1 %421, %422
  %424 = or i1 %419, %420
  br i1 %423, label %425, label %468

; <label>:425:                                    ; preds = %409
  unreachable

; <label>:426:                                    ; preds = %290
  unreachable

; <label>:427:                                    ; preds = %17, %2
  %428 = alloca %"class.std::vector.5"*, align 8
  %429 = alloca i32*, align 8
  %430 = alloca i64, align 8
  %431 = alloca i32*, align 8
  %432 = alloca i32*, align 8
  %433 = alloca i8*
  %434 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %428, align 8
  store i32* %1, i32** %429, align 8
  %435 = load %"class.std::vector.5"*, %"class.std::vector.5"** %428, align 8
  %436 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.5"* %435, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %436, i64* %430, align 8
  %437 = bitcast %"class.std::vector.5"* %435 to %"struct.std::_Vector_base.6"*
  %438 = load i64, i64* %430, align 8
  %439 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %437, i64 %438)
  store i32* %439, i32** %431, align 8
  %440 = load i32*, i32** %431, align 8
  store i32* %440, i32** %432, align 8
  %441 = bitcast %"class.std::vector.5"* %435 to %"struct.std::_Vector_base.6"*
  %442 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %441, i32 0, i32 0
  %443 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %442 to %"class.std::allocator.7"*
  %444 = load i32*, i32** %431, align 8
  %445 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.5"* %435) #3
  %446 = getelementptr inbounds i32, i32* %444, i64 %445
  %447 = load i32*, i32** %429, align 8
  %448 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %447) #3
  br label %17

; <label>:449:                                    ; preds = %100, %74
  %450 = load i8*, i8** %23, align 8
  %451 = call i8* @__cxa_begin_catch(i8* %450) #3
  %452 = load i32*, i32** %22, align 8
  %453 = icmp ne i32* %452, null
  br label %100

; <label>:454:                                    ; preds = %167, %140
  %455 = landingpad { i8*, i32 }
          cleanup
  %456 = extractvalue { i8*, i32 } %455, 0
  store i8* %456, i8** %23, align 8
  %457 = extractvalue { i8*, i32 } %455, 1
  store i32 %457, i32* %24, align 4
  br label %167

; <label>:458:                                    ; preds = %230, %203
  br label %230

; <label>:459:                                    ; preds = %272, %245
  %460 = bitcast %"class.std::vector.5"* %25 to %"struct.std::_Vector_base.6"*
  %461 = load i32*, i32** %21, align 8
  %462 = load i64, i64* %20, align 8
  br label %272

; <label>:463:                                    ; preds = %363, %336
  %464 = load i8*, i8** %23, align 8
  %465 = load i32, i32* %24, align 4
  %466 = insertvalue { i8*, i32 } undef, i8* %464, 0
  %467 = insertvalue { i8*, i32 } %466, i32 %465, 1
  br label %363

; <label>:468:                                    ; preds = %409, %394
  %469 = landingpad { i8*, i32 }
          catch i8* null
  %470 = extractvalue { i8*, i32 } %469, 0
  call void @__clang_call_terminate(i8* %470) #12
  br label %409
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.5"*, %"class.std::vector.5"** %13, align 8
  %15 = ptrtoint %"class.std::vector.5"* %11 to i64
  %16 = ptrtoint %"class.std::vector.5"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %5, %"class.std::vector.5"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.710
  %25 = load i32, i32* @y.711
  %26 = sub i32 %24, 693531871
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 693531871
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %71

; <label>:50:                                     ; preds = %23, %71
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %54) #3
  %55 = load i32, i32* @x.710
  %56 = load i32, i32* @y.711
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %71

; <label>:68:                                     ; preds = %50
  br label %69

; <label>:69:                                     ; preds = %68
  %70 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %70) #12
  unreachable

; <label>:71:                                     ; preds = %50, %23
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %3, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %4, align 4
  %75 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %75) #3
  br label %50
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.714
  %5 = load i32, i32* @y.715
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -665371661, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -665371661, label %17
    i32 -416016407, label %37
    i32 -441045655, label %55
    i32 -1639970538, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -416016407, i32 -1639970538
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %38, align 8
  %40 = load i32, i32* @x.714
  %41 = load i32, i32* @y.715
  %42 = sub i32 %40, -1712749214
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1712749214
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -441045655, i32 -1639970538
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  store i32 -416016407, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.716
  %20 = load i32, i32* @y.717
  %21 = sub i32 %19, 319824206
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 319824206
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %77

; <label>:45:                                     ; preds = %18, %77
  %46 = load i8*, i8** %7, align 8
  %47 = load i32, i32* %8, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  %50 = load i32, i32* @x.716
  %51 = load i32, i32* @y.717
  %52 = add i32 %50, -395628797
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -395628797
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %77

; <label>:76:                                     ; preds = %45
  resume { i8*, i32 } %49

; <label>:77:                                     ; preds = %45, %18
  %78 = load i8*, i8** %7, align 8
  %79 = load i32, i32* %8, align 4
  %80 = insertvalue { i8*, i32 } undef, i8* %78, 0
  %81 = insertvalue { i8*, i32 } %80, i32 %79, 1
  br label %45
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE21_M_default_initializeEm(%"class.std::vector.0"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %12 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %11) #3
  %13 = call %"class.std::vector.5"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.5"* %9, i64 %10, %"class.std::allocator.2"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %15, i32 0, i32 1
  store %"class.std::vector.5"* %13, %"class.std::vector.5"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSaISt6vectorIiSaIiEEEC2ERKS2_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.5"* %7, %"class.std::vector.5"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.5"*, %"class.std::vector.5"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.5"* %12, %"class.std::vector.5"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.5"*, %"class.std::vector.5"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.5"* %19, %"class.std::vector.5"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2ERKS2_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.726
  %6 = load i32, i32* @y.727
  %7 = add i32 %5, -450444813
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -450444813
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 171673066, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 171673066, label %19
    i32 -1660396282, label %39
    i32 2109948711, label %58
    i32 752414947, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1660396282, i32 752414947
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  %43 = load i32, i32* @x.726
  %44 = load i32, i32* @y.727
  %45 = sub i32 %43, -172169539
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -172169539
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 2109948711, i32 752414947
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %61 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %60, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %60, align 8
  store i32 -1660396282, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.5"*, i64, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.5"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.728
  %8 = load i32, i32* @y.729
  %9 = sub i32 %7, -960248935
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -960248935
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1256705373, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %71
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1256705373, label %21
    i32 -1973646595, label %41
    i32 383364382, label %62
    i32 -2097532163, label %64
  ]

; <label>:20:                                     ; preds = %18
  br label %71

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1973646595, i32 -2097532163
  store i32 %40, i32* %17
  br label %71

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.5"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %44, align 8
  %45 = load %"class.std::vector.5"*, %"class.std::vector.5"** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = call %"class.std::vector.5"* @_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_(%"class.std::vector.5"* %45, i64 %46)
  store %"class.std::vector.5"* %47, %"class.std::vector.5"** %4
  %48 = load i32, i32* @x.728
  %49 = load i32, i32* @y.729
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 383364382, i32 -2097532163
  store i32 %61, i32* %17
  br label %71

; <label>:62:                                     ; preds = %18
  %63 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %4
  ret %"class.std::vector.5"* %63

; <label>:64:                                     ; preds = %18
  %65 = alloca %"class.std::vector.5"*, align 8
  %66 = alloca i64, align 8
  %67 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %65, align 8
  store i64 %1, i64* %66, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %67, align 8
  %68 = load %"class.std::vector.5"*, %"class.std::vector.5"** %65, align 8
  %69 = load i64, i64* %66, align 8
  %70 = call %"class.std::vector.5"* @_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_(%"class.std::vector.5"* %68, i64 %69)
  store i32 -1973646595, i32* %17
  br label %71

; <label>:71:                                     ; preds = %64, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_(%"class.std::vector.5"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.5"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_(%"class.std::vector.5"* %6, i64 %7)
  ret %"class.std::vector.5"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_(%"class.std::vector.5"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.732
  %4 = load i32, i32* @y.733
  %5 = sub i32 %3, -2017774420
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -2017774420
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %325

; <label>:17:                                     ; preds = %2, %325
  %18 = alloca %"class.std::vector.5"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::vector.5"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %18, align 8
  store i64 %1, i64* %19, align 8
  %23 = load %"class.std::vector.5"*, %"class.std::vector.5"** %18, align 8
  store %"class.std::vector.5"* %23, %"class.std::vector.5"** %20, align 8
  %24 = load i32, i32* @x.732
  %25 = load i32, i32* @y.733
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %325

; <label>:49:                                     ; preds = %17
  br label %50

; <label>:50:                                     ; preds = %99, %49
  %51 = load i64, i64* %19, align 8
  %52 = icmp ugt i64 %51, 0
  br i1 %52, label %53, label %172

; <label>:53:                                     ; preds = %50
  %54 = load i32, i32* @x.732
  %55 = load i32, i32* @y.733
  %56 = add i32 %54, -807153340
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -807153340
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %332

; <label>:68:                                     ; preds = %53, %332
  %69 = load %"class.std::vector.5"*, %"class.std::vector.5"** %20, align 8
  %70 = call %"class.std::vector.5"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.5"* dereferenceable(24) %69) #3
  %71 = load i32, i32* @x.732
  %72 = load i32, i32* @y.733
  %73 = add i32 %71, 688279003
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 688279003
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %332

; <label>:97:                                     ; preds = %68
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_(%"class.std::vector.5"* %70)
          to label %98 unwind label %108

; <label>:98:                                     ; preds = %97
  br label %99

; <label>:99:                                     ; preds = %98
  %100 = load i64, i64* %19, align 8
  %101 = sub i64 0, %100
  %102 = sub i64 0, -1
  %103 = add i64 %101, %102
  %104 = sub i64 0, %103
  %105 = add i64 %100, -1
  store i64 %104, i64* %19, align 8
  %106 = load %"class.std::vector.5"*, %"class.std::vector.5"** %20, align 8
  %107 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %106, i32 1
  store %"class.std::vector.5"* %107, %"class.std::vector.5"** %20, align 8
  br label %50

; <label>:108:                                    ; preds = %97
  %109 = load i32, i32* @x.732
  %110 = load i32, i32* @y.733
  %111 = add i32 %109, -1854926495
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, -1854926495
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 false, true
  %122 = and i1 %119, false
  %123 = and i1 %117, %121
  %124 = and i1 %120, false
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 false, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %335

; <label>:135:                                    ; preds = %108, %335
  %136 = landingpad { i8*, i32 }
          catch i8* null
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %21, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %22, align 4
  %139 = load i32, i32* @x.732
  %140 = load i32, i32* @y.733
  %141 = sub i32 %139, 673215520
  %142 = sub i32 %141, 1
  %143 = add i32 %142, 673215520
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 true, true
  %152 = and i1 %149, true
  %153 = and i1 %147, %151
  %154 = and i1 %150, true
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 true, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  br i1 %163, label %165, label %335

; <label>:165:                                    ; preds = %135
  br label %166

; <label>:166:                                    ; preds = %165
  %167 = load i8*, i8** %21, align 8
  %168 = call i8* @__cxa_begin_catch(i8* %167) #3
  %169 = load %"class.std::vector.5"*, %"class.std::vector.5"** %18, align 8
  %170 = load %"class.std::vector.5"*, %"class.std::vector.5"** %20, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.5"* %169, %"class.std::vector.5"* %170)
          to label %171 unwind label %174

; <label>:171:                                    ; preds = %166
  invoke void @__cxa_rethrow() #13
          to label %324 unwind label %174

; <label>:172:                                    ; preds = %50
  %173 = load %"class.std::vector.5"*, %"class.std::vector.5"** %20, align 8
  ret %"class.std::vector.5"* %173

; <label>:174:                                    ; preds = %171, %166
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %21, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %22, align 4
  invoke void @__cxa_end_catch()
          to label %178 unwind label %279

; <label>:178:                                    ; preds = %174
  %179 = load i32, i32* @x.732
  %180 = load i32, i32* @y.733
  %181 = sub i32 0, 1
  %182 = add i32 %179, %181
  %183 = sub i32 %179, 1
  %184 = mul i32 %179, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %180, 10
  %188 = and i1 %186, %187
  %189 = xor i1 %186, %187
  %190 = or i1 %188, %189
  %191 = or i1 %186, %187
  br i1 %190, label %192, label %339

; <label>:192:                                    ; preds = %178, %339
  %193 = load i32, i32* @x.732
  %194 = load i32, i32* @y.733
  %195 = add i32 %193, 125084965
  %196 = sub i32 %195, 1
  %197 = sub i32 %196, 125084965
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = xor i1 %201, true
  %204 = xor i1 %202, true
  %205 = xor i1 true, true
  %206 = and i1 %203, true
  %207 = and i1 %201, %205
  %208 = and i1 %204, true
  %209 = and i1 %202, %205
  %210 = or i1 %206, %207
  %211 = or i1 %208, %209
  %212 = xor i1 %210, %211
  %213 = or i1 %203, %204
  %214 = xor i1 %213, true
  %215 = or i1 true, %205
  %216 = and i1 %214, %215
  %217 = or i1 %212, %216
  %218 = or i1 %201, %202
  br i1 %217, label %219, label %339

; <label>:219:                                    ; preds = %192
  br label %221
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:221:                                    ; preds = %219
  %222 = load i32, i32* @x.732
  %223 = load i32, i32* @y.733
  %224 = add i32 %222, 1833269223
  %225 = sub i32 %224, 1
  %226 = sub i32 %225, 1833269223
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = xor i1 %230, true
  %233 = xor i1 %231, true
  %234 = xor i1 true, true
  %235 = and i1 %232, true
  %236 = and i1 %230, %234
  %237 = and i1 %233, true
  %238 = and i1 %231, %234
  %239 = or i1 %235, %236
  %240 = or i1 %237, %238
  %241 = xor i1 %239, %240
  %242 = or i1 %232, %233
  %243 = xor i1 %242, true
  %244 = or i1 true, %234
  %245 = and i1 %243, %244
  %246 = or i1 %241, %245
  %247 = or i1 %230, %231
  br i1 %246, label %248, label %340

; <label>:248:                                    ; preds = %221, %340
  %249 = load i8*, i8** %21, align 8
  %250 = load i32, i32* %22, align 4
  %251 = insertvalue { i8*, i32 } undef, i8* %249, 0
  %252 = insertvalue { i8*, i32 } %251, i32 %250, 1
  %253 = load i32, i32* @x.732
  %254 = load i32, i32* @y.733
  %255 = sub i32 0, 1
  %256 = add i32 %253, %255
  %257 = sub i32 %253, 1
  %258 = mul i32 %253, %256
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %254, 10
  %262 = xor i1 %260, true
  %263 = xor i1 %261, true
  %264 = xor i1 true, true
  %265 = and i1 %262, true
  %266 = and i1 %260, %264
  %267 = and i1 %263, true
  %268 = and i1 %261, %264
  %269 = or i1 %265, %266
  %270 = or i1 %267, %268
  %271 = xor i1 %269, %270
  %272 = or i1 %262, %263
  %273 = xor i1 %272, true
  %274 = or i1 true, %264
  %275 = and i1 %273, %274
  %276 = or i1 %271, %275
  %277 = or i1 %260, %261
  br i1 %276, label %278, label %340

; <label>:278:                                    ; preds = %248
  resume { i8*, i32 } %252

; <label>:279:                                    ; preds = %174
  %280 = load i32, i32* @x.732
  %281 = load i32, i32* @y.733
  %282 = add i32 %280, 1816093138
  %283 = sub i32 %282, 1
  %284 = sub i32 %283, 1816093138
  %285 = sub i32 %280, 1
  %286 = mul i32 %280, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %281, 10
  %290 = xor i1 %288, true
  %291 = xor i1 %289, true
  %292 = xor i1 true, true
  %293 = and i1 %290, true
  %294 = and i1 %288, %292
  %295 = and i1 %291, true
  %296 = and i1 %289, %292
  %297 = or i1 %293, %294
  %298 = or i1 %295, %296
  %299 = xor i1 %297, %298
  %300 = or i1 %290, %291
  %301 = xor i1 %300, true
  %302 = or i1 true, %292
  %303 = and i1 %301, %302
  %304 = or i1 %299, %303
  %305 = or i1 %288, %289
  br i1 %304, label %306, label %345

; <label>:306:                                    ; preds = %279, %345
  %307 = landingpad { i8*, i32 }
          catch i8* null
  %308 = extractvalue { i8*, i32 } %307, 0
  call void @__clang_call_terminate(i8* %308) #12
  %309 = load i32, i32* @x.732
  %310 = load i32, i32* @y.733
  %311 = add i32 %309, 1053261850
  %312 = sub i32 %311, 1
  %313 = sub i32 %312, 1053261850
  %314 = sub i32 %309, 1
  %315 = mul i32 %309, %313
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %310, 10
  %319 = and i1 %317, %318
  %320 = xor i1 %317, %318
  %321 = or i1 %319, %320
  %322 = or i1 %317, %318
  br i1 %321, label %323, label %345

; <label>:323:                                    ; preds = %306
  unreachable

; <label>:324:                                    ; preds = %171
  unreachable

; <label>:325:                                    ; preds = %17, %2
  %326 = alloca %"class.std::vector.5"*, align 8
  %327 = alloca i64, align 8
  %328 = alloca %"class.std::vector.5"*, align 8
  %329 = alloca i8*
  %330 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %326, align 8
  store i64 %1, i64* %327, align 8
  %331 = load %"class.std::vector.5"*, %"class.std::vector.5"** %326, align 8
  store %"class.std::vector.5"* %331, %"class.std::vector.5"** %328, align 8
  br label %17

; <label>:332:                                    ; preds = %68, %53
  %333 = load %"class.std::vector.5"*, %"class.std::vector.5"** %20, align 8
  %334 = call %"class.std::vector.5"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.5"* dereferenceable(24) %333) #3
  br label %68

; <label>:335:                                    ; preds = %135, %108
  %336 = landingpad { i8*, i32 }
          catch i8* null
  %337 = extractvalue { i8*, i32 } %336, 0
  store i8* %337, i8** %21, align 8
  %338 = extractvalue { i8*, i32 } %336, 1
  store i32 %338, i32* %22, align 4
  br label %135

; <label>:339:                                    ; preds = %192, %178
  br label %192

; <label>:340:                                    ; preds = %248, %221
  %341 = load i8*, i8** %21, align 8
  %342 = load i32, i32* %22, align 4
  %343 = insertvalue { i8*, i32 } undef, i8* %341, 0
  %344 = insertvalue { i8*, i32 } %343, i32 %342, 1
  br label %248

; <label>:345:                                    ; preds = %306, %279
  %346 = landingpad { i8*, i32 }
          catch i8* null
  %347 = extractvalue { i8*, i32 } %346, 0
  call void @__clang_call_terminate(i8* %347) #12
  br label %306
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_(%"class.std::vector.5"*) #4 comdat {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.5"*
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.5"* %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s884462908.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
