; ModuleID = 'Project_CodeNet_C++1400/p02368/s164270794.cpp'
source_filename = "Project_CodeNet_C++1400/p02368/s164270794.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%class.SCC = type { %class.Graph, %class.Graph, %class.Graph, %"class.std::vector.5", %"class.std::vector.5", %"class.std::vector.10", %"class.std::vector.14", i64, i64 }
%class.Graph = type { i64, i64, %"class.std::vector", %"class.std::vector.0" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl" }
%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl" = type { %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"* }
%"struct.Graph<0>::Edge" = type { i64, i64, i64, i64 }
%"class.std::vector.5" = type { %"struct.std::_Vector_base.6" }
%"struct.std::_Vector_base.6" = type { %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl" }
%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::vector.10" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", i64* }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ i64*, i32 }>
%"class.std::vector.14" = type { %"struct.std::_Vector_base.15" }
%"struct.std::_Vector_base.15" = type { %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl" = type { %"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"* }
%"class.std::allocator.7" = type { i8 }
%"class.std::allocator.19" = type { i8 }
%"struct.std::_Bit_reference" = type { i64*, i64 }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.Graph<0>::Edge"* }
%"class.__gnu_cxx::new_allocator.8" = type { i8 }
%"class.__gnu_cxx::new_allocator.20" = type { i8 }
%"struct.std::_Bit_iterator_base" = type <{ i64*, i32, [4 x i8] }>
%"class.std::allocator.2" = type { i8 }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.std::move_iterator" = type { %"class.std::vector.0"* }
%"class.std::allocator.11" = type { i8 }
%"class.__gnu_cxx::new_allocator.12" = type { i8 }
%"struct.std::iterator" = type { i8 }
%"class.std::allocator.16" = type { i8 }
%"class.__gnu_cxx::new_allocator.17" = type { i8 }
%"class.std::move_iterator.22" = type { %"struct.Graph<0>::Edge"* }
%"class.__gnu_cxx::__normal_iterator.23" = type { %"class.std::vector.5"* }
%"class.__gnu_cxx::__normal_iterator.24" = type { %"class.std::vector.5"* }
%"class.__gnu_cxx::__normal_iterator.25" = type { i64* }
%"class.std::move_iterator.26" = type { %"class.std::vector.5"* }
%"struct.std::integral_constant" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.27" = type { i64* }
%"class.std::move_iterator.28" = type { i64* }
%"class.__gnu_cxx::__normal_iterator.30" = type { %"class.std::vector.0"* }
%"class.__gnu_cxx::__normal_iterator.29" = type { %"class.std::vector.0"* }
%"class.__gnu_cxx::__normal_iterator.31" = type { %"struct.Graph<0>::Edge"* }

$_ZN3SCCC2El = comdat any

$_ZN3SCC8add_edgeEll = comdat any

$_ZN3SCC5buildEv = comdat any

$_ZN3SCCixEl = comdat any

$_ZN3SCCD2Ev = comdat any

$_ZN5GraphILl0EEC2El = comdat any

$_ZN5GraphILl0EEC2Ev = comdat any

$_ZNSt6vectorIlSaIlEEC2Ev = comdat any

$_ZNSaIlEC2Ev = comdat any

$_ZNSt6vectorIlSaIlEEC2EmRKlRKS0_ = comdat any

$_ZNSaIlED2Ev = comdat any

$_ZNSaIbEC2Ev = comdat any

$_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_ = comdat any

$_ZNSaIbED2Ev = comdat any

$_ZNSt6vectorIS_IlSaIlEESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIlSaIlEED2Ev = comdat any

$_ZN5GraphILl0EED2Ev = comdat any

$_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEC2Ev = comdat any

$_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2Ev = comdat any

$_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE6resizeEm = comdat any

$_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EED2Ev = comdat any

$_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIN5GraphILl0EE4EdgeESaIS2_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5GraphILl0EE4EdgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEEC2Ev = comdat any

$_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv = comdat any

$_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_ = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEmET_S7_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EEmEET_S9_T0_ = comdat any

$_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEPT_RS6_ = comdat any

$_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EEEEvT_S9_ = comdat any

$_ZSt8_DestroyISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEvPT_ = comdat any

$_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEE8max_sizeERKS6_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EESt13move_iteratorIS6_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EEES7_ET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS6_EEES9_EET0_T_SC_SB_ = comdat any

$_ZStneIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJS5_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEppEv = comdat any

$_ZSteqIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2EOS4_ = comdat any

$_ZSt4moveIRSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EEC2EOS4_ = comdat any

$_ZSt4moveIRSaIN5GraphILl0EE4EdgeEEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implC2EOS3_ = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEEC2ERKS4_ = comdat any

$_ZSt4swapIPN5GraphILl0EE4EdgeEEvRT_S5_ = comdat any

$_ZSt4moveIRPN5GraphILl0EE4EdgeEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEC2ES6_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE10deallocateEPS6_m = comdat any

$_ZSt8_DestroyIPN5GraphILl0EE4EdgeES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPN5GraphILl0EE4EdgeEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN5GraphILl0EE4EdgeEEEvT_S6_ = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE10deallocateEPS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIN5GraphILl0EE4EdgeESaIS2_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEED2Ev = comdat any

$_ZNSt12_Vector_baseIlSaIlEEC2Ev = comdat any

$_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIlEC2Ev = comdat any

$_ZNSt12_Vector_baseIlSaIlEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIlSaIlEE18_M_fill_initializeEmRKl = comdat any

$_ZNSt12_Vector_baseIlSaIlEED2Ev = comdat any

$_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIlSaIlEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIlEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIlSaIlEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIlEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIlE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIlE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIlED2Ev = comdat any

$_ZSt24__uninitialized_fill_n_aIPlmllET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPlmlET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPlmlEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPlmlET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPlmlEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPlLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm = comdat any

$_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm = comdat any

$_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm = comdat any

$_ZN9__gnu_cxx13new_allocatorIbEC2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEEC2ERKS0_ = comdat any

$_ZNSt6vectorIbSaIbEE13_M_initializeEm = comdat any

$_ZSt4fillIPmiEvT_S1_RKT0_ = comdat any

$_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv = comdat any

$_ZNSt13_Bvector_baseISaIbEED2Ev = comdat any

$_ZNSaImEC2IbEERKSaIT_E = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2EOSaImE = comdat any

$_ZNSaImED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2Ev = comdat any

$_ZSt4moveIRSaImEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSaImEC2ERKS_ = comdat any

$_ZNSt13_Bit_iteratorC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_ = comdat any

$_ZNSt18_Bit_iterator_baseC2EPmj = comdat any

$_ZN9__gnu_cxx13new_allocatorImED2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm = comdat any

$_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm = comdat any

$_ZSt11__addressofImEPT_RS0_ = comdat any

$_ZNSt13_Bit_iteratorC2EPmj = comdat any

$_ZNKSt13_Bit_iteratorplEl = comdat any

$_ZNSt16allocator_traitsISaImEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv = comdat any

$_ZNSt13_Bit_iteratorpLEl = comdat any

$_ZNSt18_Bit_iterator_base7_M_incrEl = comdat any

$_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_ = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm = comdat any

$_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm = comdat any

$_ZN9__gnu_cxx13new_allocatorIbED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIlSaIlEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEEC2Ev = comdat any

$_ZSt8_DestroyIPllEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPlEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_ = comdat any

$_ZN5GraphILl0EE8add_edgeEllll = comdat any

$_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEixEm = comdat any

$_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE12emplace_backIJRlS6_S6_S6_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE9constructIS2_JRlS6_S6_S6_EEEvRS3_PT_DpOT0_ = comdat any

$_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE19_M_emplace_back_auxIJRlS6_S6_S6_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE9constructIS3_JRlS6_S6_S6_EEEvPT_DpOT0_ = comdat any

$_ZN5GraphILl0EE4EdgeC2Ellll = comdat any

$_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5GraphILl0EE4EdgeES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE8max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5GraphILl0EE4EdgeEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5GraphILl0EE4EdgeESt13move_iteratorIS3_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5GraphILl0EE4EdgeEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5GraphILl0EE4EdgeEES6_EET0_T_S9_S8_ = comdat any

$_ZStneIPN5GraphILl0EE4EdgeEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZSt10_ConstructIN5GraphILl0EE4EdgeEJS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN5GraphILl0EE4EdgeEEPT_RS3_ = comdat any

$_ZNKSt13move_iteratorIPN5GraphILl0EE4EdgeEEdeEv = comdat any

$_ZNSt13move_iteratorIPN5GraphILl0EE4EdgeEEppEv = comdat any

$_ZSteqIPN5GraphILl0EE4EdgeEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZNKSt13move_iteratorIPN5GraphILl0EE4EdgeEE4baseEv = comdat any

$_ZSt7forwardIN5GraphILl0EE4EdgeEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt13move_iteratorIPN5GraphILl0EE4EdgeEEC2ES3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE7destroyIS3_EEvPT_ = comdat any

$_ZNSt6vectorIbSaIbEEixEm = comdat any

$_ZNKSt14_Bit_referencecvbEv = comdat any

$_ZN3SCC3dfsEl = comdat any

$_ZSt4fillISt13_Bit_iteratoriEvT_S1_RKT0_ = comdat any

$_ZNSt6vectorIbSaIbEE5beginEv = comdat any

$_ZNSt6vectorIbSaIbEE3endEv = comdat any

$_ZNKSt6vectorIlSaIlEE4sizeEv = comdat any

$_ZNSt6vectorIlSaIlEEixEm = comdat any

$_ZN3SCC4rdfsEll = comdat any

$_ZNSt6vectorIS_IlSaIlEESaIS1_EE6resizeEmRKS1_ = comdat any

$_ZNSt6vectorIS_IlSaIlEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIlSaIlEE9push_backERKl = comdat any

$_ZN5GraphILl0EEaSERKS0_ = comdat any

$_ZN5GraphILl0EEixEl = comdat any

$_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv = comdat any

$_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEppEv = comdat any

$_ZNKSt13_Bit_iteratordeEv = comdat any

$_ZNSt14_Bit_referenceC2EPmm = comdat any

$_ZNSt14_Bit_referenceaSEb = comdat any

$_ZSt8__fill_aISt13_Bit_iteratoriEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNKSt18_Bit_iterator_baseneERKS_ = comdat any

$_ZNSt13_Bit_iteratorppEv = comdat any

$_ZNKSt18_Bit_iterator_baseeqERKS_ = comdat any

$_ZNSt18_Bit_iterator_base10_M_bump_upEv = comdat any

$_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_ = comdat any

$_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorIS_IlSaIlEESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEmRS6_ = comdat any

$_ZNSt6vectorIS_IlSaIlEESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2IPS3_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE = comdat any

$_ZNSt6vectorIS_IlSaIlEESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZN9__gnu_cxxmiIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ = comdat any

$_ZNKSt6vectorIS_IlSaIlEESaIS1_EE6cbeginEv = comdat any

$_ZNSt6vectorIS_IlSaIlEESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_ = comdat any

$_ZNSt6vectorIS_IlSaIlEESaIS1_EE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2ERKS5_ = comdat any

$_ZNSt6vectorIlSaIlEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxxmiIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt22__uninitialized_move_aIPSt6vectorIlSaIlEES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt13move_backwardIPSt6vectorIlSaIlEES3_ET0_T_S5_S4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv = comdat any

$_ZSt4fillIPSt6vectorIlSaIlEES2_EvT_S4_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIlSaIlEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIS_IlSaIlEESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIlSaIlEES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIlEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPllET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIlSaIlEE5beginEv = comdat any

$_ZNKSt6vectorIlSaIlEE3endEv = comdat any

$_ZNSt16allocator_traitsISaIlEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaIlEC2ERKS_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKlPlET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2ERKS2_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIlSaIlEEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt18make_move_iteratorIPSt6vectorIlSaIlEEESt13move_iteratorIT_ES5_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIlSaIlEEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_ = comdat any

$_ZStneIPSt6vectorIlSaIlEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZSt10_ConstructISt6vectorIlSaIlEEJS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIlSaIlEEEPT_RS3_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIlSaIlEEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIlSaIlEEEppEv = comdat any

$_ZSt8_DestroyIPSt6vectorIlSaIlEEEvT_S4_ = comdat any

$_ZSteqIPSt6vectorIlSaIlEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIlSaIlEEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIlSaIlEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt6vectorIlSaIlEEC2EOS1_ = comdat any

$_ZSt4moveIRSt6vectorIlSaIlEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIlSaIlEEC2EOS1_ = comdat any

$_ZSt4moveIRSaIlEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2EOS0_ = comdat any

$_ZNSt12_Vector_baseIlSaIlEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZSt4swapIPlEvRT_S2_ = comdat any

$_ZSt4moveIRPlEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIlSaIlEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIlSaIlEEEvPT_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIlSaIlEEEC2ES3_ = comdat any

$_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIlSaIlEES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__miter_baseIPSt6vectorIlSaIlEEENSt11_Miter_baseIT_E13iterator_typeES5_ = comdat any

$_ZSt22__copy_move_backward_aILb1EPSt6vectorIlSaIlEES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__niter_baseIPSt6vectorIlSaIlEEENSt11_Niter_baseIT_E13iterator_typeES5_ = comdat any

$_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIlSaIlEES6_EET0_T_S8_S7_ = comdat any

$_ZNSt6vectorIlSaIlEEaSEOS1_ = comdat any

$_ZNSt6vectorIlSaIlEE14_M_move_assignEOS1_St17integral_constantIbLb1EE = comdat any

$_ZNKSt12_Vector_baseIlSaIlEE13get_allocatorEv = comdat any

$_ZNSt6vectorIlSaIlEEC2ERKS0_ = comdat any

$_ZSt15__alloc_on_moveISaIlEEvRT_S2_ = comdat any

$_ZNSt12_Vector_baseIlSaIlEEC2ERKS0_ = comdat any

$_ZSt18__do_alloc_on_moveISaIlEEvRT_S2_St17integral_constantIbLb1EE = comdat any

$_ZNSt10_Iter_baseIPSt6vectorIlSaIlEELb0EE7_S_baseES3_ = comdat any

$_ZSt8__fill_aIPSt6vectorIlSaIlEES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_ = comdat any

$_ZNSt6vectorIlSaIlEEaSERKS1_ = comdat any

$_ZNKSt6vectorIlSaIlEE8capacityEv = comdat any

$_ZNSt6vectorIlSaIlEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKlS1_EEEEPlmT_S9_ = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEElEvT_S7_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEENS1_IPlS6_EEET0_T_SB_SA_ = comdat any

$_ZNSt6vectorIlSaIlEE5beginEv = comdat any

$_ZNSt6vectorIlSaIlEE3endEv = comdat any

$_ZSt4copyIPlS0_ET0_T_S2_S1_ = comdat any

$_ZSt22__uninitialized_copy_aIPlS0_lET0_T_S2_S1_RSaIT1_E = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEEEvT_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEENS1_IPlS6_EEET1_T0_SB_SA_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EPlS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPlENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt13__copy_move_aILb0EPlS0_ET1_T0_S2_S1_ = comdat any

$_ZSt18uninitialized_copyIPlS0_ET0_T_S2_S1_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPlS2_EET0_T_S4_S3_ = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIlSaIlEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIlSaIlEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIlSaIlEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt6vectorIlSaIlEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNKSt6vectorIS_IlSaIlEESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIlSaIlEEEE8max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIlSaIlEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEE8allocateEmPKv = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIlSaIlEESt13move_iteratorIS3_EET0_T_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIlSaIlEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEE10deallocateEPS3_m = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNSt16allocator_traitsISaIlEE9constructIlJRKlEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt6vectorIlSaIlEE19_M_emplace_back_auxIJRKlEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIlE9constructIlJRKlEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKlEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPlS0_SaIlEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIlEE7destroyIlEEvRS0_PT_ = comdat any

$_ZNKSt6vectorIlSaIlEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIlEE8max_sizeERKS0_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPlES1_lET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPlSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPlES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPlES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPlES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPlS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPlEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPlS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPlELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPlE4baseEv = comdat any

$_ZNSt13move_iteratorIPlEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIlE7destroyIlEEvPT_ = comdat any

$_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEaSERKS6_ = comdat any

$_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEaSERKS4_ = comdat any

$_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE8capacityEv = comdat any

$_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS4_S6_EEEEPS4_mT_SE_ = comdat any

$_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE5beginEv = comdat any

$_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE3endEv = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEES7_EvT_SC_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEENS1_IPS7_SB_EEET0_T_SG_SF_ = comdat any

$_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE5beginEv = comdat any

$_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE3endEv = comdat any

$_ZSt4copyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET0_T_S8_S7_ = comdat any

$_ZSt22__uninitialized_copy_aIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_S5_ET0_T_S8_S7_RSaIT1_E = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEPS7_S7_ET0_T_SF_SE_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEPS7_ET0_T_SF_SE_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS7_EES4_IS9_SaIS9_EEEEPS9_EET0_T_SH_SG_ = comdat any

$_ZN9__gnu_cxxneIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_ = comdat any

$_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJRKS5_EEvPT_DpOT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv = comdat any

$_ZSt7forwardIRKSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEOT_RNSt16remove_referenceIS8_E4typeE = comdat any

$_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2ERKS4_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN5GraphILl0EE4EdgeEEE17_S_select_on_copyERKS4_ = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSaIN5GraphILl0EE4EdgeEED2Ev = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEPS4_S4_ET0_T_SD_SC_RSaIT1_E = comdat any

$_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE37select_on_container_copy_constructionERKS3_ = comdat any

$_ZNSaIN5GraphILl0EE4EdgeEEC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE17_M_create_storageEm = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS6_SaIS6_EEEEPS6_EET0_T_SF_SE_ = comdat any

$_ZSt10_ConstructIN5GraphILl0EE4EdgeEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKN5GraphILl0EE4EdgeEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS8_ = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEEvT_SC_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS7_EES4_IS9_SaIS9_EEEEEEvT_SE_ = comdat any

$_ZN9__gnu_cxxneIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEENS1_IPS7_SB_EEET1_T0_SG_SF_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEENSt11_Miter_baseIT_E13iterator_typeESE_ = comdat any

$_ZSt13__copy_move_aILb0EPKSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEPS5_ET1_T0_SA_S9_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEENSt11_Niter_baseIT_E13iterator_typeESE_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS7_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt6vectorIN5GraphILl0EE4EdgeESaIS6_EEPS8_EET0_T_SD_SC_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEELb1EE7_S_baseESC_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEELb1EE7_S_baseESB_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEELb0EE7_S_baseESC_ = comdat any

$_ZSt14__copy_move_a2ILb0EPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET1_T0_S8_S7_ = comdat any

$_ZSt12__miter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEENSt11_Miter_baseIT_E13iterator_typeES8_ = comdat any

$_ZSt13__copy_move_aILb0EPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET1_T0_S8_S7_ = comdat any

$_ZSt12__niter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN5GraphILl0EE4EdgeESaIS6_EES9_EET0_T_SB_SA_ = comdat any

$_ZNSt10_Iter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EELb0EE7_S_baseES6_ = comdat any

$_ZSt18uninitialized_copyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET0_T_S8_S7_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES8_EET0_T_SA_S9_ = comdat any

$_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJRS5_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE8capacityEv = comdat any

$_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEPS2_mT_SC_ = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEES4_EvT_SA_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET0_T_SE_SD_ = comdat any

$_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv = comdat any

$_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv = comdat any

$_ZSt4copyIPN5GraphILl0EE4EdgeES3_ET0_T_S5_S4_ = comdat any

$_ZSt22__uninitialized_copy_aIPN5GraphILl0EE4EdgeES3_S2_ET0_T_S5_S4_RSaIT1_E = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEEvT_SA_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS6_SaIS6_EEEEEEvT_SC_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET1_T0_SE_SD_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_ = comdat any

$_ZSt13__copy_move_aILb0EPKN5GraphILl0EE4EdgeEPS2_ET1_T0_S7_S6_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN5GraphILl0EE4EdgeEPS5_EET0_T_SA_S9_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseESA_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseES9_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEELb0EE7_S_baseESA_ = comdat any

$_ZSt14__copy_move_a2ILb0EPN5GraphILl0EE4EdgeES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__miter_baseIPN5GraphILl0EE4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_ = comdat any

$_ZSt13__copy_move_aILb0EPN5GraphILl0EE4EdgeES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__niter_baseIPN5GraphILl0EE4EdgeEENSt11_Niter_baseIT_E13iterator_typeES5_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN5GraphILl0EE4EdgeES6_EET0_T_S8_S7_ = comdat any

$_ZNSt10_Iter_baseIPN5GraphILl0EE4EdgeELb0EE7_S_baseES3_ = comdat any

$_ZSt18uninitialized_copyIPN5GraphILl0EE4EdgeES3_ET0_T_S5_S4_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN5GraphILl0EE4EdgeES5_EET0_T_S7_S6_ = comdat any

$_ZSt10_ConstructIN5GraphILl0EE4EdgeEJRS2_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRN5GraphILl0EE4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEC2ERKS5_ = comdat any

$_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIbSaIbEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIlSaIlEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEED2Ev = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s164270794.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0
@x.867 = common global i32 0
@y.868 = common global i32 0
@x.869 = common global i32 0
@y.870 = common global i32 0
@x.871 = common global i32 0
@y.872 = common global i32 0
@x.873 = common global i32 0
@y.874 = common global i32 0
@x.875 = common global i32 0
@y.876 = common global i32 0
@x.877 = common global i32 0
@y.878 = common global i32 0
@x.879 = common global i32 0
@y.880 = common global i32 0
@x.881 = common global i32 0
@y.882 = common global i32 0
@x.883 = common global i32 0
@y.884 = common global i32 0
@x.885 = common global i32 0
@y.886 = common global i32 0
@x.887 = common global i32 0
@y.888 = common global i32 0
@x.889 = common global i32 0
@y.890 = common global i32 0
@x.891 = common global i32 0
@y.892 = common global i32 0
@x.893 = common global i32 0
@y.894 = common global i32 0
@x.895 = common global i32 0
@y.896 = common global i32 0
@x.897 = common global i32 0
@y.898 = common global i32 0
@x.899 = common global i32 0
@y.900 = common global i32 0
@x.901 = common global i32 0
@y.902 = common global i32 0
@x.903 = common global i32 0
@y.904 = common global i32 0
@x.905 = common global i32 0
@y.906 = common global i32 0
@x.907 = common global i32 0
@y.908 = common global i32 0
@x.909 = common global i32 0
@y.910 = common global i32 0
@x.911 = common global i32 0
@y.912 = common global i32 0
@x.913 = common global i32 0
@y.914 = common global i32 0
@x.915 = common global i32 0
@y.916 = common global i32 0
@x.917 = common global i32 0
@y.918 = common global i32 0
@x.919 = common global i32 0
@y.920 = common global i32 0
@x.921 = common global i32 0
@y.922 = common global i32 0
@x.923 = common global i32 0
@y.924 = common global i32 0
@x.925 = common global i32 0
@y.926 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca %class.SCC, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  %14 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %15 = getelementptr i8, i8* %14, i64 -24
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %17
  %19 = bitcast i8* %18 to %"class.std::basic_ios"*
  %20 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %19, %"class.std::basic_ostream"* null)
  %21 = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %22 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %2)
  %23 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* %22, i64* dereferenceable(8) %3)
  %24 = load i64, i64* %2, align 8
  call void @_ZN3SCCC2El(%class.SCC* %4, i64 %24)
  store i32 0, i32* %5, align 4
  br label %25

; <label>:25:                                     ; preds = %125, %0
  %26 = load i32, i32* %5, align 4
  %27 = sext i32 %26 to i64
  %28 = load i64, i64* %3, align 8
  %29 = icmp slt i64 %27, %28
  br i1 %29, label %30, label %130

; <label>:30:                                     ; preds = %25
  %31 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %6)
          to label %32 unwind label %126

; <label>:32:                                     ; preds = %30
  %33 = load i32, i32* @x.3
  %34 = load i32, i32* @y.4
  %35 = sub i32 %33, 510725103
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 510725103
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %293

; <label>:47:                                     ; preds = %32, %293
  %48 = load i32, i32* @x.3
  %49 = load i32, i32* @y.4
  %50 = add i32 %48, 1544153946
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 1544153946
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %293

; <label>:74:                                     ; preds = %47
  %75 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* %31, i64* dereferenceable(8) %7)
          to label %76 unwind label %126

; <label>:76:                                     ; preds = %74
  %77 = load i64, i64* %6, align 8
  %78 = load i64, i64* %7, align 8
  invoke void @_ZN3SCC8add_edgeEll(%class.SCC* %4, i64 %77, i64 %78)
          to label %79 unwind label %126

; <label>:79:                                     ; preds = %76
  br label %80

; <label>:80:                                     ; preds = %79
  %81 = load i32, i32* @x.3
  %82 = load i32, i32* @y.4
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 false, true
  %93 = and i1 %90, false
  %94 = and i1 %88, %92
  %95 = and i1 %91, false
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 false, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  br i1 %104, label %106, label %294

; <label>:106:                                    ; preds = %80, %294
  %107 = load i32, i32* %5, align 4
  %108 = sub i32 0, 1
  %109 = sub i32 %107, %108
  %110 = add nsw i32 %107, 1
  store i32 %109, i32* %5, align 4
  %111 = load i32, i32* @x.3
  %112 = load i32, i32* @y.4
  %113 = sub i32 %111, -1075842826
  %114 = sub i32 %113, 1
  %115 = add i32 %114, -1075842826
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = and i1 %119, %120
  %122 = xor i1 %119, %120
  %123 = or i1 %121, %122
  %124 = or i1 %119, %120
  br i1 %123, label %125, label %294

; <label>:125:                                    ; preds = %106
  br label %25

; <label>:126:                                    ; preds = %194, %192, %147, %144, %142, %140, %132, %130, %76, %74, %30
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %8, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %9, align 4
  call void @_ZN3SCCD2Ev(%class.SCC* %4) #3
  br label %288

; <label>:130:                                    ; preds = %25
  %131 = invoke i64 @_ZN3SCC5buildEv(%class.SCC* %4)
          to label %132 unwind label %126

; <label>:132:                                    ; preds = %130
  %133 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %10)
          to label %134 unwind label %126

; <label>:134:                                    ; preds = %132
  store i32 0, i32* %11, align 4
  br label %135

; <label>:135:                                    ; preds = %238, %134
  %136 = load i32, i32* %11, align 4
  %137 = sext i32 %136 to i64
  %138 = load i64, i64* %10, align 8
  %139 = icmp slt i64 %137, %138
  br i1 %139, label %140, label %244

; <label>:140:                                    ; preds = %135
  %141 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %12)
          to label %142 unwind label %126

; <label>:142:                                    ; preds = %140
  %143 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"* %141, i64* dereferenceable(8) %13)
          to label %144 unwind label %126

; <label>:144:                                    ; preds = %142
  %145 = load i64, i64* %12, align 8
  %146 = invoke i64 @_ZN3SCCixEl(%class.SCC* %4, i64 %145)
          to label %147 unwind label %126

; <label>:147:                                    ; preds = %144
  %148 = load i64, i64* %13, align 8
  %149 = invoke i64 @_ZN3SCCixEl(%class.SCC* %4, i64 %148)
          to label %150 unwind label %126

; <label>:150:                                    ; preds = %147
  %151 = load i32, i32* @x.3
  %152 = load i32, i32* @y.4
  %153 = sub i32 %151, 355333293
  %154 = sub i32 %153, 1
  %155 = add i32 %154, 355333293
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  br i1 %163, label %165, label %311

; <label>:165:                                    ; preds = %150, %311
  %166 = icmp eq i64 %146, %149
  %167 = load i32, i32* @x.3
  %168 = load i32, i32* @y.4
  %169 = sub i32 0, 1
  %170 = add i32 %167, %169
  %171 = sub i32 %167, 1
  %172 = mul i32 %167, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %168, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 false, true
  %179 = and i1 %176, false
  %180 = and i1 %174, %178
  %181 = and i1 %177, false
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 false, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  br i1 %190, label %192, label %311

; <label>:192:                                    ; preds = %165
  %193 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEb(%"class.std::basic_ostream"* @_ZSt4cout, i1 zeroext %166)
          to label %194 unwind label %126

; <label>:194:                                    ; preds = %192
  %195 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %193, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %196 unwind label %126

; <label>:196:                                    ; preds = %194
  %197 = load i32, i32* @x.3
  %198 = load i32, i32* @y.4
  %199 = sub i32 %197, -342365884
  %200 = sub i32 %199, 1
  %201 = add i32 %200, -342365884
  %202 = sub i32 %197, 1
  %203 = mul i32 %197, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %198, 10
  %207 = and i1 %205, %206
  %208 = xor i1 %205, %206
  %209 = or i1 %207, %208
  %210 = or i1 %205, %206
  br i1 %209, label %211, label %313

; <label>:211:                                    ; preds = %196, %313
  %212 = load i32, i32* @x.3
  %213 = load i32, i32* @y.4
  %214 = sub i32 0, 1
  %215 = add i32 %212, %214
  %216 = sub i32 %212, 1
  %217 = mul i32 %212, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %213, 10
  %221 = xor i1 %219, true
  %222 = xor i1 %220, true
  %223 = xor i1 false, true
  %224 = and i1 %221, false
  %225 = and i1 %219, %223
  %226 = and i1 %222, false
  %227 = and i1 %220, %223
  %228 = or i1 %224, %225
  %229 = or i1 %226, %227
  %230 = xor i1 %228, %229
  %231 = or i1 %221, %222
  %232 = xor i1 %231, true
  %233 = or i1 false, %223
  %234 = and i1 %232, %233
  %235 = or i1 %230, %234
  %236 = or i1 %219, %220
  br i1 %235, label %237, label %313

; <label>:237:                                    ; preds = %211
  br label %238

; <label>:238:                                    ; preds = %237
  %239 = load i32, i32* %11, align 4
  %240 = add i32 %239, -908448230
  %241 = add i32 %240, 1
  %242 = sub i32 %241, -908448230
  %243 = add nsw i32 %239, 1
  store i32 %242, i32* %11, align 4
  br label %135

; <label>:244:                                    ; preds = %135
  %245 = load i32, i32* @x.3
  %246 = load i32, i32* @y.4
  %247 = sub i32 %245, 2049636544
  %248 = sub i32 %247, 1
  %249 = add i32 %248, 2049636544
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = and i1 %253, %254
  %256 = xor i1 %253, %254
  %257 = or i1 %255, %256
  %258 = or i1 %253, %254
  br i1 %257, label %259, label %314

; <label>:259:                                    ; preds = %244, %314
  call void @_ZN3SCCD2Ev(%class.SCC* %4) #3
  %260 = load i32, i32* %1, align 4
  %261 = load i32, i32* @x.3
  %262 = load i32, i32* @y.4
  %263 = add i32 %261, 23837527
  %264 = sub i32 %263, 1
  %265 = sub i32 %264, 23837527
  %266 = sub i32 %261, 1
  %267 = mul i32 %261, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %262, 10
  %271 = xor i1 %269, true
  %272 = xor i1 %270, true
  %273 = xor i1 false, true
  %274 = and i1 %271, false
  %275 = and i1 %269, %273
  %276 = and i1 %272, false
  %277 = and i1 %270, %273
  %278 = or i1 %274, %275
  %279 = or i1 %276, %277
  %280 = xor i1 %278, %279
  %281 = or i1 %271, %272
  %282 = xor i1 %281, true
  %283 = or i1 false, %273
  %284 = and i1 %282, %283
  %285 = or i1 %280, %284
  %286 = or i1 %269, %270
  br i1 %285, label %287, label %314

; <label>:287:                                    ; preds = %259
  ret i32 %260

; <label>:288:                                    ; preds = %126
  %289 = load i8*, i8** %8, align 8
  %290 = load i32, i32* %9, align 4
  %291 = insertvalue { i8*, i32 } undef, i8* %289, 0
  %292 = insertvalue { i8*, i32 } %291, i32 %290, 1
  resume { i8*, i32 } %292

; <label>:293:                                    ; preds = %47, %32
  br label %47

; <label>:294:                                    ; preds = %106, %80
  %295 = load i32, i32* %5, align 4
  %296 = sub i32 %295, 174336133
  %297 = sub i32 %296, 1
  %298 = add i32 %297, 174336133
  %299 = sub i32 %295, 1
  %300 = mul i32 %298, 1
  %301 = shl i32 %295, 1
  %302 = sub i32 0, 1
  %303 = add i32 %295, %302
  %304 = sub i32 %295, 1
  %305 = mul i32 %303, 1
  %306 = sub i32 0, %295
  %307 = sub i32 0, 1
  %308 = add i32 %306, %307
  %309 = sub i32 0, %308
  %310 = add nsw i32 %295, 1
  store i32 %309, i32* %5, align 4
  br label %106

; <label>:311:                                    ; preds = %165, %150
  %312 = icmp eq i64 %146, %149
  br label %165

; <label>:313:                                    ; preds = %211, %196
  br label %211

; <label>:314:                                    ; preds = %259, %244
  call void @_ZN3SCCD2Ev(%class.SCC* %4) #3
  %315 = load i32, i32* %1, align 4
  br label %259
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERl(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN3SCCC2El(%class.SCC*, i64) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.SCC*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*
  %6 = alloca i32
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::allocator.7", align 1
  %9 = alloca i8, align 1
  %10 = alloca %"class.std::allocator.19", align 1
  store %class.SCC* %0, %class.SCC** %3, align 8
  store i64 %1, i64* %4, align 8
  %11 = load %class.SCC*, %class.SCC** %3, align 8
  %12 = getelementptr inbounds %class.SCC, %class.SCC* %11, i32 0, i32 0
  %13 = load i64, i64* %4, align 8
  call void @_ZN5GraphILl0EEC2El(%class.Graph* %12, i64 %13)
  %14 = getelementptr inbounds %class.SCC, %class.SCC* %11, i32 0, i32 1
  %15 = load i64, i64* %4, align 8
  invoke void @_ZN5GraphILl0EEC2El(%class.Graph* %14, i64 %15)
          to label %16 unwind label %29

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds %class.SCC, %class.SCC* %11, i32 0, i32 2
  invoke void @_ZN5GraphILl0EEC2Ev(%class.Graph* %17)
          to label %18 unwind label %87

; <label>:18:                                     ; preds = %16
  %19 = getelementptr inbounds %class.SCC, %class.SCC* %11, i32 0, i32 3
  call void @_ZNSt6vectorIlSaIlEEC2Ev(%"class.std::vector.5"* %19) #3
  %20 = getelementptr inbounds %class.SCC, %class.SCC* %11, i32 0, i32 4
  %21 = load i64, i64* %4, align 8
  store i64 -1, i64* %7, align 8
  call void @_ZNSaIlEC2Ev(%"class.std::allocator.7"* %8) #3
  invoke void @_ZNSt6vectorIlSaIlEEC2EmRKlRKS0_(%"class.std::vector.5"* %20, i64 %21, i64* dereferenceable(8) %7, %"class.std::allocator.7"* dereferenceable(1) %8)
          to label %22 unwind label %91

; <label>:22:                                     ; preds = %18
  call void @_ZNSaIlED2Ev(%"class.std::allocator.7"* %8) #3
  %23 = getelementptr inbounds %class.SCC, %class.SCC* %11, i32 0, i32 5
  %24 = load i64, i64* %4, align 8
  store i8 0, i8* %9, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.19"* %10) #3
  invoke void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.10"* %23, i64 %24, i8* dereferenceable(1) %9, %"class.std::allocator.19"* dereferenceable(1) %10)
          to label %25 unwind label %136

; <label>:25:                                     ; preds = %22
  call void @_ZNSaIbED2Ev(%"class.std::allocator.19"* %10) #3
  %26 = getelementptr inbounds %class.SCC, %class.SCC* %11, i32 0, i32 6
  call void @_ZNSt6vectorIS_IlSaIlEESaIS1_EEC2Ev(%"class.std::vector.14"* %26) #3
  %27 = getelementptr inbounds %class.SCC, %class.SCC* %11, i32 0, i32 7
  %28 = load i64, i64* %4, align 8
  store i64 %28, i64* %27, align 8
  ret void

; <label>:29:                                     ; preds = %2
  %30 = load i32, i32* @x.5
  %31 = load i32, i32* @y.6
  %32 = sub i32 %30, -680371663
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -680371663
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %243

; <label>:56:                                     ; preds = %29, %243
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %5, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %6, align 4
  %60 = load i32, i32* @x.5
  %61 = load i32, i32* @y.6
  %62 = sub i32 %60, -673641324
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -673641324
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %243

; <label>:86:                                     ; preds = %56
  br label %195

; <label>:87:                                     ; preds = %16
  %88 = landingpad { i8*, i32 }
          cleanup
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %5, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %6, align 4
  br label %141

; <label>:91:                                     ; preds = %18
  %92 = load i32, i32* @x.5
  %93 = load i32, i32* @y.6
  %94 = add i32 %92, -1385134437
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, -1385134437
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %247

; <label>:106:                                    ; preds = %91, %247
  %107 = landingpad { i8*, i32 }
          cleanup
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %5, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %6, align 4
  call void @_ZNSaIlED2Ev(%"class.std::allocator.7"* %8) #3
  %110 = load i32, i32* @x.5
  %111 = load i32, i32* @y.6
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 true, true
  %122 = and i1 %119, true
  %123 = and i1 %117, %121
  %124 = and i1 %120, true
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 true, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %247

; <label>:135:                                    ; preds = %106
  br label %140

; <label>:136:                                    ; preds = %22
  %137 = landingpad { i8*, i32 }
          cleanup
  %138 = extractvalue { i8*, i32 } %137, 0
  store i8* %138, i8** %5, align 8
  %139 = extractvalue { i8*, i32 } %137, 1
  store i32 %139, i32* %6, align 4
  call void @_ZNSaIbED2Ev(%"class.std::allocator.19"* %10) #3
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %20) #3
  br label %140

; <label>:140:                                    ; preds = %136, %135
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %19) #3
  call void @_ZN5GraphILl0EED2Ev(%class.Graph* %17) #3
  br label %141

; <label>:141:                                    ; preds = %140, %87
  %142 = load i32, i32* @x.5
  %143 = load i32, i32* @y.6
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 false, true
  %154 = and i1 %151, false
  %155 = and i1 %149, %153
  %156 = and i1 %152, false
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 false, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %251

; <label>:167:                                    ; preds = %141, %251
  call void @_ZN5GraphILl0EED2Ev(%class.Graph* %14) #3
  %168 = load i32, i32* @x.5
  %169 = load i32, i32* @y.6
  %170 = add i32 %168, -523886603
  %171 = sub i32 %170, 1
  %172 = sub i32 %171, -523886603
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 true, true
  %181 = and i1 %178, true
  %182 = and i1 %176, %180
  %183 = and i1 %179, true
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 true, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  br i1 %192, label %194, label %251

; <label>:194:                                    ; preds = %167
  br label %195

; <label>:195:                                    ; preds = %194, %86
  call void @_ZN5GraphILl0EED2Ev(%class.Graph* %12) #3
  br label %196

; <label>:196:                                    ; preds = %195
  %197 = load i32, i32* @x.5
  %198 = load i32, i32* @y.6
  %199 = sub i32 %197, -607690124
  %200 = sub i32 %199, 1
  %201 = add i32 %200, -607690124
  %202 = sub i32 %197, 1
  %203 = mul i32 %197, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %198, 10
  %207 = and i1 %205, %206
  %208 = xor i1 %205, %206
  %209 = or i1 %207, %208
  %210 = or i1 %205, %206
  br i1 %209, label %211, label %252

; <label>:211:                                    ; preds = %196, %252
  %212 = load i8*, i8** %5, align 8
  %213 = load i32, i32* %6, align 4
  %214 = insertvalue { i8*, i32 } undef, i8* %212, 0
  %215 = insertvalue { i8*, i32 } %214, i32 %213, 1
  %216 = load i32, i32* @x.5
  %217 = load i32, i32* @y.6
  %218 = sub i32 %216, -1740010773
  %219 = sub i32 %218, 1
  %220 = add i32 %219, -1740010773
  %221 = sub i32 %216, 1
  %222 = mul i32 %216, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %217, 10
  %226 = xor i1 %224, true
  %227 = xor i1 %225, true
  %228 = xor i1 true, true
  %229 = and i1 %226, true
  %230 = and i1 %224, %228
  %231 = and i1 %227, true
  %232 = and i1 %225, %228
  %233 = or i1 %229, %230
  %234 = or i1 %231, %232
  %235 = xor i1 %233, %234
  %236 = or i1 %226, %227
  %237 = xor i1 %236, true
  %238 = or i1 true, %228
  %239 = and i1 %237, %238
  %240 = or i1 %235, %239
  %241 = or i1 %224, %225
  br i1 %240, label %242, label %252

; <label>:242:                                    ; preds = %211
  resume { i8*, i32 } %215

; <label>:243:                                    ; preds = %56, %29
  %244 = landingpad { i8*, i32 }
          cleanup
  %245 = extractvalue { i8*, i32 } %244, 0
  store i8* %245, i8** %5, align 8
  %246 = extractvalue { i8*, i32 } %244, 1
  store i32 %246, i32* %6, align 4
  br label %56

; <label>:247:                                    ; preds = %106, %91
  %248 = landingpad { i8*, i32 }
          cleanup
  %249 = extractvalue { i8*, i32 } %248, 0
  store i8* %249, i8** %5, align 8
  %250 = extractvalue { i8*, i32 } %248, 1
  store i32 %250, i32* %6, align 4
  call void @_ZNSaIlED2Ev(%"class.std::allocator.7"* %8) #3
  br label %106

; <label>:251:                                    ; preds = %167, %141
  call void @_ZN5GraphILl0EED2Ev(%class.Graph* %14) #3
  br label %167

; <label>:252:                                    ; preds = %211, %196
  %253 = load i8*, i8** %5, align 8
  %254 = load i32, i32* %6, align 4
  %255 = insertvalue { i8*, i32 } undef, i8* %253, 0
  %256 = insertvalue { i8*, i32 } %255, i32 %254, 1
  br label %211
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN3SCC8add_edgeEll(%class.SCC*, i64, i64) #0 comdat align 2 {
  %4 = alloca %class.SCC*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %class.SCC* %0, %class.SCC** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %class.SCC*, %class.SCC** %4, align 8
  %8 = getelementptr inbounds %class.SCC, %class.SCC* %7, i32 0, i32 0
  %9 = load i64, i64* %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN5GraphILl0EE8add_edgeEllll(%class.Graph* %8, i64 %9, i64 %10, i64 0, i64 0)
  %11 = getelementptr inbounds %class.SCC, %class.SCC* %7, i32 0, i32 1
  %12 = load i64, i64* %6, align 8
  %13 = load i64, i64* %5, align 8
  call void @_ZN5GraphILl0EE8add_edgeEllll(%class.Graph* %11, i64 %12, i64 %13, i64 0, i64 0)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN3SCC5buildEv(%class.SCC*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.9
  %3 = load i32, i32* @y.10
  %4 = sub i32 %2, -1065276965
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1065276965
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %583

; <label>:16:                                     ; preds = %1, %583
  %17 = alloca %class.SCC*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"struct.std::_Bit_reference", align 8
  %20 = alloca %"struct.std::_Bit_iterator", align 8
  %21 = alloca %"struct.std::_Bit_iterator", align 8
  %22 = alloca i32, align 4
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca %"struct.std::_Bit_reference", align 8
  %26 = alloca %"class.std::vector.5", align 8
  %27 = alloca i8*
  %28 = alloca i32
  %29 = alloca i64, align 8
  %30 = alloca %class.Graph, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %35 = alloca %"struct.Graph<0>::Edge", align 8
  store %class.SCC* %0, %class.SCC** %17, align 8
  %36 = load %class.SCC*, %class.SCC** %17, align 8
  store i64 0, i64* %18, align 8
  %37 = load i32, i32* @x.9
  %38 = load i32, i32* @y.10
  %39 = sub i32 %37, 806980344
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 806980344
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %583

; <label>:63:                                     ; preds = %16
  br label %64

; <label>:64:                                     ; preds = %82, %63
  %65 = load i64, i64* %18, align 8
  %66 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 7
  %67 = load i64, i64* %66, align 8
  %68 = icmp slt i64 %65, %67
  br i1 %68, label %69, label %87

; <label>:69:                                     ; preds = %64
  %70 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 5
  %71 = load i64, i64* %18, align 8
  %72 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.10"* %70, i64 %71)
  %73 = bitcast %"struct.std::_Bit_reference"* %19 to { i64*, i64 }*
  %74 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %73, i32 0, i32 0
  %75 = extractvalue { i64*, i64 } %72, 0
  store i64* %75, i64** %74, align 8
  %76 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %73, i32 0, i32 1
  %77 = extractvalue { i64*, i64 } %72, 1
  store i64 %77, i64* %76, align 8
  %78 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %19) #3
  br i1 %78, label %81, label %79

; <label>:79:                                     ; preds = %69
  %80 = load i64, i64* %18, align 8
  call void @_ZN3SCC3dfsEl(%class.SCC* %36, i64 %80)
  br label %81

; <label>:81:                                     ; preds = %79, %69
  br label %82

; <label>:82:                                     ; preds = %81
  %83 = load i64, i64* %18, align 8
  %84 = sub i64 0, 1
  %85 = sub i64 %83, %84
  %86 = add nsw i64 %83, 1
  store i64 %85, i64* %18, align 8
  br label %64

; <label>:87:                                     ; preds = %64
  %88 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 5
  %89 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.10"* %88) #3
  %90 = bitcast %"struct.std::_Bit_iterator"* %20 to { i64*, i32 }*
  %91 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %90, i32 0, i32 0
  %92 = extractvalue { i64*, i32 } %89, 0
  store i64* %92, i64** %91, align 8
  %93 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %90, i32 0, i32 1
  %94 = extractvalue { i64*, i32 } %89, 1
  store i32 %94, i32* %93, align 8
  %95 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 5
  %96 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.10"* %95) #3
  %97 = bitcast %"struct.std::_Bit_iterator"* %21 to { i64*, i32 }*
  %98 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %97, i32 0, i32 0
  %99 = extractvalue { i64*, i32 } %96, 0
  store i64* %99, i64** %98, align 8
  %100 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %97, i32 0, i32 1
  %101 = extractvalue { i64*, i32 } %96, 1
  store i32 %101, i32* %100, align 8
  store i32 0, i32* %22, align 4
  %102 = bitcast %"struct.std::_Bit_iterator"* %20 to { i64*, i32 }*
  %103 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %102, i32 0, i32 0
  %104 = load i64*, i64** %103, align 8
  %105 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %102, i32 0, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = bitcast %"struct.std::_Bit_iterator"* %21 to { i64*, i32 }*
  %108 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %107, i32 0, i32 0
  %109 = load i64*, i64** %108, align 8
  %110 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %107, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  call void @_ZSt4fillISt13_Bit_iteratoriEvT_S1_RKT0_(i64* %104, i32 %106, i64* %109, i32 %111, i32* dereferenceable(4) %22)
  store i64 0, i64* %23, align 8
  %112 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 3
  %113 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %112) #3
  %114 = add i64 %113, 3786378658016283733
  %115 = sub i64 %114, 1
  %116 = sub i64 %115, 3786378658016283733
  %117 = sub i64 %113, 1
  store i64 %116, i64* %24, align 8
  br label %118

; <label>:118:                                    ; preds = %174, %87
  %119 = load i32, i32* @x.9
  %120 = load i32, i32* @y.10
  %121 = add i32 %119, 1690078602
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, 1690078602
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  br i1 %131, label %133, label %604

; <label>:133:                                    ; preds = %118, %604
  %134 = load i64, i64* %24, align 8
  %135 = icmp sge i64 %134, 0
  %136 = load i32, i32* @x.9
  %137 = load i32, i32* @y.10
  %138 = sub i32 0, 1
  %139 = add i32 %136, %138
  %140 = sub i32 %136, 1
  %141 = mul i32 %136, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %137, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %604

; <label>:149:                                    ; preds = %133
  br i1 %135, label %150, label %179

; <label>:150:                                    ; preds = %149
  %151 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 5
  %152 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 3
  %153 = load i64, i64* %24, align 8
  %154 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %152, i64 %153) #3
  %155 = load i64, i64* %154, align 8
  %156 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.10"* %151, i64 %155)
  %157 = bitcast %"struct.std::_Bit_reference"* %25 to { i64*, i64 }*
  %158 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %157, i32 0, i32 0
  %159 = extractvalue { i64*, i64 } %156, 0
  store i64* %159, i64** %158, align 8
  %160 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %157, i32 0, i32 1
  %161 = extractvalue { i64*, i64 } %156, 1
  store i64 %161, i64* %160, align 8
  %162 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %25) #3
  br i1 %162, label %173, label %163

; <label>:163:                                    ; preds = %150
  %164 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 3
  %165 = load i64, i64* %24, align 8
  %166 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %164, i64 %165) #3
  %167 = load i64, i64* %166, align 8
  %168 = load i64, i64* %23, align 8
  %169 = add i64 %168, 1282221671614480423
  %170 = add i64 %169, 1
  %171 = sub i64 %170, 1282221671614480423
  %172 = add nsw i64 %168, 1
  store i64 %171, i64* %23, align 8
  call void @_ZN3SCC4rdfsEll(%class.SCC* %36, i64 %167, i64 %168)
  br label %173

; <label>:173:                                    ; preds = %163, %150
  br label %174

; <label>:174:                                    ; preds = %173
  %175 = load i64, i64* %24, align 8
  %176 = sub i64 0, -1
  %177 = sub i64 %175, %176
  %178 = add nsw i64 %175, -1
  store i64 %177, i64* %24, align 8
  br label %118

; <label>:179:                                    ; preds = %149
  %180 = load i64, i64* %23, align 8
  %181 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 8
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 6
  %183 = load i64, i64* %23, align 8
  call void @_ZNSt6vectorIlSaIlEEC2Ev(%"class.std::vector.5"* %26) #3
  invoke void @_ZNSt6vectorIS_IlSaIlEESaIS1_EE6resizeEmRKS1_(%"class.std::vector.14"* %182, i64 %183, %"class.std::vector.5"* dereferenceable(24) %26)
          to label %184 unwind label %286

; <label>:184:                                    ; preds = %179
  %185 = load i32, i32* @x.9
  %186 = load i32, i32* @y.10
  %187 = add i32 %185, -436735148
  %188 = sub i32 %187, 1
  %189 = sub i32 %188, -436735148
  %190 = sub i32 %185, 1
  %191 = mul i32 %185, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %186, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  br i1 %197, label %199, label %607

; <label>:199:                                    ; preds = %184, %607
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %26) #3
  store i64 0, i64* %29, align 8
  %200 = load i32, i32* @x.9
  %201 = load i32, i32* @y.10
  %202 = sub i32 0, 1
  %203 = add i32 %200, %202
  %204 = sub i32 %200, 1
  %205 = mul i32 %200, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %201, 10
  %209 = xor i1 %207, true
  %210 = xor i1 %208, true
  %211 = xor i1 false, true
  %212 = and i1 %209, false
  %213 = and i1 %207, %211
  %214 = and i1 %210, false
  %215 = and i1 %208, %211
  %216 = or i1 %212, %213
  %217 = or i1 %214, %215
  %218 = xor i1 %216, %217
  %219 = or i1 %209, %210
  %220 = xor i1 %219, true
  %221 = or i1 false, %211
  %222 = and i1 %220, %221
  %223 = or i1 %218, %222
  %224 = or i1 %207, %208
  br i1 %223, label %225, label %607

; <label>:225:                                    ; preds = %199
  br label %226

; <label>:226:                                    ; preds = %285, %225
  %227 = load i64, i64* %29, align 8
  %228 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 7
  %229 = load i64, i64* %228, align 8
  %230 = icmp slt i64 %227, %229
  br i1 %230, label %231, label %290

; <label>:231:                                    ; preds = %226
  %232 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 6
  %233 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 4
  %234 = load i64, i64* %29, align 8
  %235 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %233, i64 %234) #3
  %236 = load i64, i64* %235, align 8
  %237 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EEixEm(%"class.std::vector.14"* %232, i64 %236) #3
  call void @_ZNSt6vectorIlSaIlEE9push_backERKl(%"class.std::vector.5"* %237, i64* dereferenceable(8) %29)
  br label %238

; <label>:238:                                    ; preds = %231
  %239 = load i32, i32* @x.9
  %240 = load i32, i32* @y.10
  %241 = add i32 %239, -887476980
  %242 = sub i32 %241, 1
  %243 = sub i32 %242, -887476980
  %244 = sub i32 %239, 1
  %245 = mul i32 %239, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %240, 10
  %249 = xor i1 %247, true
  %250 = xor i1 %248, true
  %251 = xor i1 false, true
  %252 = and i1 %249, false
  %253 = and i1 %247, %251
  %254 = and i1 %250, false
  %255 = and i1 %248, %251
  %256 = or i1 %252, %253
  %257 = or i1 %254, %255
  %258 = xor i1 %256, %257
  %259 = or i1 %249, %250
  %260 = xor i1 %259, true
  %261 = or i1 false, %251
  %262 = and i1 %260, %261
  %263 = or i1 %258, %262
  %264 = or i1 %247, %248
  br i1 %263, label %265, label %608

; <label>:265:                                    ; preds = %238, %608
  %266 = load i64, i64* %29, align 8
  %267 = add i64 %266, 6535640744511838575
  %268 = add i64 %267, 1
  %269 = sub i64 %268, 6535640744511838575
  %270 = add nsw i64 %266, 1
  store i64 %269, i64* %29, align 8
  %271 = load i32, i32* @x.9
  %272 = load i32, i32* @y.10
  %273 = add i32 %271, 1239543860
  %274 = sub i32 %273, 1
  %275 = sub i32 %274, 1239543860
  %276 = sub i32 %271, 1
  %277 = mul i32 %271, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %272, 10
  %281 = and i1 %279, %280
  %282 = xor i1 %279, %280
  %283 = or i1 %281, %282
  %284 = or i1 %279, %280
  br i1 %283, label %285, label %608

; <label>:285:                                    ; preds = %265
  br label %226

; <label>:286:                                    ; preds = %179
  %287 = landingpad { i8*, i32 }
          cleanup
  %288 = extractvalue { i8*, i32 } %287, 0
  store i8* %288, i8** %27, align 8
  %289 = extractvalue { i8*, i32 } %287, 1
  store i32 %289, i32* %28, align 4
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %26) #3
  br label %578

; <label>:290:                                    ; preds = %226
  %291 = load i64, i64* %23, align 8
  call void @_ZN5GraphILl0EEC2El(%class.Graph* %30, i64 %291)
  %292 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 2
  %293 = invoke dereferenceable(64) %class.Graph* @_ZN5GraphILl0EEaSERKS0_(%class.Graph* %292, %class.Graph* dereferenceable(64) %30)
          to label %294 unwind label %408

; <label>:294:                                    ; preds = %290
  call void @_ZN5GraphILl0EED2Ev(%class.Graph* %30) #3
  store i64 0, i64* %31, align 8
  br label %295

; <label>:295:                                    ; preds = %546, %294
  %296 = load i64, i64* %31, align 8
  %297 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 7
  %298 = load i64, i64* %297, align 8
  %299 = icmp slt i64 %296, %298
  br i1 %299, label %300, label %547

; <label>:300:                                    ; preds = %295
  %301 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 0
  %302 = load i64, i64* %31, align 8
  %303 = call dereferenceable(24) %"class.std::vector.0"* @_ZN5GraphILl0EEixEl(%class.Graph* %301, i64 %302)
  store %"class.std::vector.0"* %303, %"class.std::vector.0"** %32, align 8
  %304 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %305 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv(%"class.std::vector.0"* %304) #3
  %306 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %305, %"struct.Graph<0>::Edge"** %306, align 8
  %307 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %308 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv(%"class.std::vector.0"* %307) #3
  %309 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %308, %"struct.Graph<0>::Edge"** %309, align 8
  br label %310

; <label>:310:                                    ; preds = %455, %300
  %311 = load i32, i32* @x.9
  %312 = load i32, i32* @y.10
  %313 = sub i32 0, 1
  %314 = add i32 %311, %313
  %315 = sub i32 %311, 1
  %316 = mul i32 %311, %314
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %312, 10
  %320 = xor i1 %318, true
  %321 = xor i1 %319, true
  %322 = xor i1 true, true
  %323 = and i1 %320, true
  %324 = and i1 %318, %322
  %325 = and i1 %321, true
  %326 = and i1 %319, %322
  %327 = or i1 %323, %324
  %328 = or i1 %325, %326
  %329 = xor i1 %327, %328
  %330 = or i1 %320, %321
  %331 = xor i1 %330, true
  %332 = or i1 true, %322
  %333 = and i1 %331, %332
  %334 = or i1 %329, %333
  %335 = or i1 %318, %319
  br i1 %334, label %336, label %623

; <label>:336:                                    ; preds = %310, %623
  %337 = call zeroext i1 @_ZN9__gnu_cxxneIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %33, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %34) #3
  %338 = load i32, i32* @x.9
  %339 = load i32, i32* @y.10
  %340 = add i32 %338, -1488044880
  %341 = sub i32 %340, 1
  %342 = sub i32 %341, -1488044880
  %343 = sub i32 %338, 1
  %344 = mul i32 %338, %342
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %339, 10
  %348 = and i1 %346, %347
  %349 = xor i1 %346, %347
  %350 = or i1 %348, %349
  %351 = or i1 %346, %347
  br i1 %350, label %352, label %623

; <label>:352:                                    ; preds = %336
  br i1 %337, label %353, label %456

; <label>:353:                                    ; preds = %352
  %354 = call dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %33) #3
  %355 = bitcast %"struct.Graph<0>::Edge"* %35 to i8*
  %356 = bitcast %"struct.Graph<0>::Edge"* %354 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %355, i8* %356, i64 32, i32 8, i1 false)
  %357 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 4
  %358 = load i64, i64* %31, align 8
  %359 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %357, i64 %358) #3
  %360 = load i64, i64* %359, align 8
  %361 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 4
  %362 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %35, i32 0, i32 1
  %363 = load i64, i64* %362, align 8
  %364 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %361, i64 %363) #3
  %365 = load i64, i64* %364, align 8
  %366 = icmp ne i64 %360, %365
  br i1 %366, label %367, label %412

; <label>:367:                                    ; preds = %353
  %368 = load i32, i32* @x.9
  %369 = load i32, i32* @y.10
  %370 = sub i32 0, 1
  %371 = add i32 %368, %370
  %372 = sub i32 %368, 1
  %373 = mul i32 %368, %371
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %369, 10
  %377 = and i1 %375, %376
  %378 = xor i1 %375, %376
  %379 = or i1 %377, %378
  %380 = or i1 %375, %376
  br i1 %379, label %381, label %625

; <label>:381:                                    ; preds = %367, %625
  %382 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 2
  %383 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 4
  %384 = load i64, i64* %31, align 8
  %385 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %383, i64 %384) #3
  %386 = load i64, i64* %385, align 8
  %387 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 4
  %388 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %35, i32 0, i32 1
  %389 = load i64, i64* %388, align 8
  %390 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %387, i64 %389) #3
  %391 = load i64, i64* %390, align 8
  %392 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %35, i32 0, i32 3
  %393 = load i64, i64* %392, align 8
  call void @_ZN5GraphILl0EE8add_edgeEllll(%class.Graph* %382, i64 %386, i64 %391, i64 %393, i64 0)
  %394 = load i32, i32* @x.9
  %395 = load i32, i32* @y.10
  %396 = sub i32 0, 1
  %397 = add i32 %394, %396
  %398 = sub i32 %394, 1
  %399 = mul i32 %394, %397
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %395, 10
  %403 = and i1 %401, %402
  %404 = xor i1 %401, %402
  %405 = or i1 %403, %404
  %406 = or i1 %401, %402
  br i1 %405, label %407, label %625

; <label>:407:                                    ; preds = %381
  br label %412

; <label>:408:                                    ; preds = %290
  %409 = landingpad { i8*, i32 }
          cleanup
  %410 = extractvalue { i8*, i32 } %409, 0
  store i8* %410, i8** %27, align 8
  %411 = extractvalue { i8*, i32 } %409, 1
  store i32 %411, i32* %28, align 4
  call void @_ZN5GraphILl0EED2Ev(%class.Graph* %30) #3
  br label %578

; <label>:412:                                    ; preds = %407, %353
  br label %413

; <label>:413:                                    ; preds = %412
  %414 = load i32, i32* @x.9
  %415 = load i32, i32* @y.10
  %416 = sub i32 %414, -1567216668
  %417 = sub i32 %416, 1
  %418 = add i32 %417, -1567216668
  %419 = sub i32 %414, 1
  %420 = mul i32 %414, %418
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %415, 10
  %424 = xor i1 %422, true
  %425 = xor i1 %423, true
  %426 = xor i1 false, true
  %427 = and i1 %424, false
  %428 = and i1 %422, %426
  %429 = and i1 %425, false
  %430 = and i1 %423, %426
  %431 = or i1 %427, %428
  %432 = or i1 %429, %430
  %433 = xor i1 %431, %432
  %434 = or i1 %424, %425
  %435 = xor i1 %434, true
  %436 = or i1 false, %426
  %437 = and i1 %435, %436
  %438 = or i1 %433, %437
  %439 = or i1 %422, %423
  br i1 %438, label %440, label %638

; <label>:440:                                    ; preds = %413, %638
  %441 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %33) #3
  %442 = load i32, i32* @x.9
  %443 = load i32, i32* @y.10
  %444 = sub i32 0, 1
  %445 = add i32 %442, %444
  %446 = sub i32 %442, 1
  %447 = mul i32 %442, %445
  %448 = urem i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = icmp slt i32 %443, 10
  %451 = and i1 %449, %450
  %452 = xor i1 %449, %450
  %453 = or i1 %451, %452
  %454 = or i1 %449, %450
  br i1 %453, label %455, label %638

; <label>:455:                                    ; preds = %440
  br label %310

; <label>:456:                                    ; preds = %352
  %457 = load i32, i32* @x.9
  %458 = load i32, i32* @y.10
  %459 = add i32 %457, 313593578
  %460 = sub i32 %459, 1
  %461 = sub i32 %460, 313593578
  %462 = sub i32 %457, 1
  %463 = mul i32 %457, %461
  %464 = urem i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = icmp slt i32 %458, 10
  %467 = xor i1 %465, true
  %468 = xor i1 %466, true
  %469 = xor i1 false, true
  %470 = and i1 %467, false
  %471 = and i1 %465, %469
  %472 = and i1 %468, false
  %473 = and i1 %466, %469
  %474 = or i1 %470, %471
  %475 = or i1 %472, %473
  %476 = xor i1 %474, %475
  %477 = or i1 %467, %468
  %478 = xor i1 %477, true
  %479 = or i1 false, %469
  %480 = and i1 %478, %479
  %481 = or i1 %476, %480
  %482 = or i1 %465, %466
  br i1 %481, label %483, label %640

; <label>:483:                                    ; preds = %456, %640
  %484 = load i32, i32* @x.9
  %485 = load i32, i32* @y.10
  %486 = add i32 %484, 1213292817
  %487 = sub i32 %486, 1
  %488 = sub i32 %487, 1213292817
  %489 = sub i32 %484, 1
  %490 = mul i32 %484, %488
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %485, 10
  %494 = and i1 %492, %493
  %495 = xor i1 %492, %493
  %496 = or i1 %494, %495
  %497 = or i1 %492, %493
  br i1 %496, label %498, label %640

; <label>:498:                                    ; preds = %483
  br label %499

; <label>:499:                                    ; preds = %498
  %500 = load i32, i32* @x.9
  %501 = load i32, i32* @y.10
  %502 = sub i32 %500, 1402345002
  %503 = sub i32 %502, 1
  %504 = add i32 %503, 1402345002
  %505 = sub i32 %500, 1
  %506 = mul i32 %500, %504
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %501, 10
  %510 = and i1 %508, %509
  %511 = xor i1 %508, %509
  %512 = or i1 %510, %511
  %513 = or i1 %508, %509
  br i1 %512, label %514, label %641

; <label>:514:                                    ; preds = %499, %641
  %515 = load i64, i64* %31, align 8
  %516 = add i64 %515, 6097769260614742625
  %517 = add i64 %516, 1
  %518 = sub i64 %517, 6097769260614742625
  %519 = add nsw i64 %515, 1
  store i64 %518, i64* %31, align 8
  %520 = load i32, i32* @x.9
  %521 = load i32, i32* @y.10
  %522 = sub i32 %520, 1032015154
  %523 = sub i32 %522, 1
  %524 = add i32 %523, 1032015154
  %525 = sub i32 %520, 1
  %526 = mul i32 %520, %524
  %527 = urem i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = icmp slt i32 %521, 10
  %530 = xor i1 %528, true
  %531 = xor i1 %529, true
  %532 = xor i1 false, true
  %533 = and i1 %530, false
  %534 = and i1 %528, %532
  %535 = and i1 %531, false
  %536 = and i1 %529, %532
  %537 = or i1 %533, %534
  %538 = or i1 %535, %536
  %539 = xor i1 %537, %538
  %540 = or i1 %530, %531
  %541 = xor i1 %540, true
  %542 = or i1 false, %532
  %543 = and i1 %541, %542
  %544 = or i1 %539, %543
  %545 = or i1 %528, %529
  br i1 %544, label %546, label %641

; <label>:546:                                    ; preds = %514
  br label %295

; <label>:547:                                    ; preds = %295
  %548 = load i32, i32* @x.9
  %549 = load i32, i32* @y.10
  %550 = sub i32 0, 1
  %551 = add i32 %548, %550
  %552 = sub i32 %548, 1
  %553 = mul i32 %548, %551
  %554 = urem i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = icmp slt i32 %549, 10
  %557 = and i1 %555, %556
  %558 = xor i1 %555, %556
  %559 = or i1 %557, %558
  %560 = or i1 %555, %556
  br i1 %559, label %561, label %667

; <label>:561:                                    ; preds = %547, %667
  %562 = load i64, i64* %23, align 8
  %563 = load i32, i32* @x.9
  %564 = load i32, i32* @y.10
  %565 = add i32 %563, 2095354576
  %566 = sub i32 %565, 1
  %567 = sub i32 %566, 2095354576
  %568 = sub i32 %563, 1
  %569 = mul i32 %563, %567
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %564, 10
  %573 = and i1 %571, %572
  %574 = xor i1 %571, %572
  %575 = or i1 %573, %574
  %576 = or i1 %571, %572
  br i1 %575, label %577, label %667

; <label>:577:                                    ; preds = %561
  ret i64 %562

; <label>:578:                                    ; preds = %408, %286
  %579 = load i8*, i8** %27, align 8
  %580 = load i32, i32* %28, align 4
  %581 = insertvalue { i8*, i32 } undef, i8* %579, 0
  %582 = insertvalue { i8*, i32 } %581, i32 %580, 1
  resume { i8*, i32 } %582

; <label>:583:                                    ; preds = %16, %1
  %584 = alloca %class.SCC*, align 8
  %585 = alloca i64, align 8
  %586 = alloca %"struct.std::_Bit_reference", align 8
  %587 = alloca %"struct.std::_Bit_iterator", align 8
  %588 = alloca %"struct.std::_Bit_iterator", align 8
  %589 = alloca i32, align 4
  %590 = alloca i64, align 8
  %591 = alloca i64, align 8
  %592 = alloca %"struct.std::_Bit_reference", align 8
  %593 = alloca %"class.std::vector.5", align 8
  %594 = alloca i8*
  %595 = alloca i32
  %596 = alloca i64, align 8
  %597 = alloca %class.Graph, align 8
  %598 = alloca i64, align 8
  %599 = alloca %"class.std::vector.0"*, align 8
  %600 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %601 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %602 = alloca %"struct.Graph<0>::Edge", align 8
  store %class.SCC* %0, %class.SCC** %584, align 8
  %603 = load %class.SCC*, %class.SCC** %584, align 8
  store i64 0, i64* %585, align 8
  br label %16

; <label>:604:                                    ; preds = %133, %118
  %605 = load i64, i64* %24, align 8
  %606 = icmp sge i64 %605, 0
  br label %133

; <label>:607:                                    ; preds = %199, %184
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %26) #3
  store i64 0, i64* %29, align 8
  br label %199

; <label>:608:                                    ; preds = %265, %238
  %609 = load i64, i64* %29, align 8
  %610 = shl i64 %609, 1
  %611 = add i64 %609, 7812942155015340871
  %612 = sub i64 %611, 1
  %613 = sub i64 %612, 7812942155015340871
  %614 = sub i64 %609, 1
  %615 = mul i64 %613, 1
  %616 = shl i64 %609, 1
  %617 = shl i64 %609, 1
  %618 = sub i64 0, %609
  %619 = sub i64 0, 1
  %620 = add i64 %618, %619
  %621 = sub i64 0, %620
  %622 = add nsw i64 %609, 1
  store i64 %621, i64* %29, align 8
  br label %265

; <label>:623:                                    ; preds = %336, %310
  %624 = call zeroext i1 @_ZN9__gnu_cxxneIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %33, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %34) #3
  br label %336

; <label>:625:                                    ; preds = %381, %367
  %626 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 2
  %627 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 4
  %628 = load i64, i64* %31, align 8
  %629 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %627, i64 %628) #3
  %630 = load i64, i64* %629, align 8
  %631 = getelementptr inbounds %class.SCC, %class.SCC* %36, i32 0, i32 4
  %632 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %35, i32 0, i32 1
  %633 = load i64, i64* %632, align 8
  %634 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %631, i64 %633) #3
  %635 = load i64, i64* %634, align 8
  %636 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %35, i32 0, i32 3
  %637 = load i64, i64* %636, align 8
  call void @_ZN5GraphILl0EE8add_edgeEllll(%class.Graph* %626, i64 %630, i64 %635, i64 %637, i64 0)
  br label %381

; <label>:638:                                    ; preds = %440, %413
  %639 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %33) #3
  br label %440

; <label>:640:                                    ; preds = %483, %456
  br label %483

; <label>:641:                                    ; preds = %514, %499
  %642 = load i64, i64* %31, align 8
  %643 = sub i64 0, 1
  %644 = add i64 %642, %643
  %645 = sub i64 %642, 1
  %646 = mul i64 %644, 1
  %647 = sub i64 %642, -333204542907771763
  %648 = sub i64 %647, 1
  %649 = add i64 %648, -333204542907771763
  %650 = sub i64 %642, 1
  %651 = mul i64 %649, 1
  %652 = shl i64 %642, 1
  %653 = sub i64 0, -8411522084024766894
  %654 = sub i64 %653, %642
  %655 = add i64 %654, -8411522084024766894
  %656 = sub i64 0, %642
  %657 = sub i64 0, %655
  %658 = sub i64 0, 1
  %659 = add i64 %657, %658
  %660 = sub i64 0, %659
  %661 = add i64 %655, 1
  %662 = sub i64 0, %642
  %663 = sub i64 0, 1
  %664 = add i64 %662, %663
  %665 = sub i64 0, %664
  %666 = add nsw i64 %642, 1
  store i64 %665, i64* %31, align 8
  br label %514

; <label>:667:                                    ; preds = %561, %547
  %668 = load i64, i64* %23, align 8
  br label %561
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEb(%"class.std::basic_ostream"*, i1 zeroext) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN3SCCixEl(%class.SCC*, i64) #5 comdat align 2 {
  %3 = alloca %class.SCC*, align 8
  %4 = alloca i64, align 8
  store %class.SCC* %0, %class.SCC** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %class.SCC*, %class.SCC** %3, align 8
  %6 = getelementptr inbounds %class.SCC, %class.SCC* %5, i32 0, i32 4
  %7 = load i64, i64* %4, align 8
  %8 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %6, i64 %7) #3
  %9 = load i64, i64* %8, align 8
  ret i64 %9
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN3SCCD2Ev(%class.SCC*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.SCC*, align 8
  store %class.SCC* %0, %class.SCC** %2, align 8
  %3 = load %class.SCC*, %class.SCC** %2, align 8
  %4 = getelementptr inbounds %class.SCC, %class.SCC* %3, i32 0, i32 6
  call void @_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev(%"class.std::vector.14"* %4) #3
  %5 = getelementptr inbounds %class.SCC, %class.SCC* %3, i32 0, i32 5
  call void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.10"* %5) #3
  %6 = getelementptr inbounds %class.SCC, %class.SCC* %3, i32 0, i32 4
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %6) #3
  %7 = getelementptr inbounds %class.SCC, %class.SCC* %3, i32 0, i32 3
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %7) #3
  %8 = getelementptr inbounds %class.SCC, %class.SCC* %3, i32 0, i32 2
  call void @_ZN5GraphILl0EED2Ev(%class.Graph* %8) #3
  %9 = getelementptr inbounds %class.SCC, %class.SCC* %3, i32 0, i32 1
  call void @_ZN5GraphILl0EED2Ev(%class.Graph* %9) #3
  %10 = getelementptr inbounds %class.SCC, %class.SCC* %3, i32 0, i32 0
  call void @_ZN5GraphILl0EED2Ev(%class.Graph* %10) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5GraphILl0EEC2El(%class.Graph*, i64) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.15
  %4 = load i32, i32* @y.16
  %5 = add i32 %3, 281784059
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 281784059
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %78

; <label>:29:                                     ; preds = %2, %78
  %30 = alloca %class.Graph*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i8*
  %33 = alloca i32
  store %class.Graph* %0, %class.Graph** %30, align 8
  store i64 %1, i64* %31, align 8
  %34 = load %class.Graph*, %class.Graph** %30, align 8
  %35 = getelementptr inbounds %class.Graph, %class.Graph* %34, i32 0, i32 0
  %36 = load i64, i64* %31, align 8
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %class.Graph, %class.Graph* %34, i32 0, i32 2
  call void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEC2Ev(%"class.std::vector"* %37) #3
  %38 = getelementptr inbounds %class.Graph, %class.Graph* %34, i32 0, i32 3
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2Ev(%"class.std::vector.0"* %38) #3
  %39 = getelementptr inbounds %class.Graph, %class.Graph* %34, i32 0, i32 2
  %40 = load i64, i64* %31, align 8
  %41 = load i32, i32* @x.15
  %42 = load i32, i32* @y.16
  %43 = sub i32 %41, -2070256260
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -2070256260
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %78

; <label>:67:                                     ; preds = %29
  invoke void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE6resizeEm(%"class.std::vector"* %39, i64 %40)
          to label %68 unwind label %69

; <label>:68:                                     ; preds = %67
  ret void

; <label>:69:                                     ; preds = %67
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %32, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %33, align 4
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EED2Ev(%"class.std::vector.0"* %38) #3
  call void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector"* %37) #3
  br label %73

; <label>:73:                                     ; preds = %69
  %74 = load i8*, i8** %32, align 8
  %75 = load i32, i32* %33, align 4
  %76 = insertvalue { i8*, i32 } undef, i8* %74, 0
  %77 = insertvalue { i8*, i32 } %76, i32 %75, 1
  resume { i8*, i32 } %77

; <label>:78:                                     ; preds = %29, %2
  %79 = alloca %class.Graph*, align 8
  %80 = alloca i64, align 8
  %81 = alloca i8*
  %82 = alloca i32
  store %class.Graph* %0, %class.Graph** %79, align 8
  store i64 %1, i64* %80, align 8
  %83 = load %class.Graph*, %class.Graph** %79, align 8
  %84 = getelementptr inbounds %class.Graph, %class.Graph* %83, i32 0, i32 0
  %85 = load i64, i64* %80, align 8
  store i64 %85, i64* %84, align 8
  %86 = getelementptr inbounds %class.Graph, %class.Graph* %83, i32 0, i32 2
  call void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEC2Ev(%"class.std::vector"* %86) #3
  %87 = getelementptr inbounds %class.Graph, %class.Graph* %83, i32 0, i32 3
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2Ev(%"class.std::vector.0"* %87) #3
  %88 = getelementptr inbounds %class.Graph, %class.Graph* %83, i32 0, i32 2
  %89 = load i64, i64* %80, align 8
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5GraphILl0EEC2Ev(%class.Graph*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.Graph*, align 8
  store %class.Graph* %0, %class.Graph** %2, align 8
  %3 = load %class.Graph*, %class.Graph** %2, align 8
  %4 = getelementptr inbounds %class.Graph, %class.Graph* %3, i32 0, i32 2
  call void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEC2Ev(%"class.std::vector"* %4) #3
  %5 = getelementptr inbounds %class.Graph, %class.Graph* %3, i32 0, i32 3
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2Ev(%"class.std::vector.0"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEEC2Ev(%"class.std::vector.5"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.19
  %3 = load i32, i32* @y.20
  %4 = sub i32 %2, 1308131650
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1308131650
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %116

; <label>:28:                                     ; preds = %1, %116
  %29 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %29, align 8
  %30 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %31 = bitcast %"class.std::vector.5"* %30 to %"struct.std::_Vector_base.6"*
  %32 = load i32, i32* @x.19
  %33 = load i32, i32* @y.20
  %34 = add i32 %32, 1989653402
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1989653402
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %116

; <label>:58:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIlSaIlEEC2Ev(%"struct.std::_Vector_base.6"* %31)
          to label %59 unwind label %113

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.19
  %61 = load i32, i32* @y.20
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %120

; <label>:85:                                     ; preds = %59, %120
  %86 = load i32, i32* @x.19
  %87 = load i32, i32* @y.20
  %88 = sub i32 %86, -831061592
  %89 = sub i32 %88, 1
  %90 = add i32 %89, -831061592
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 false, true
  %99 = and i1 %96, false
  %100 = and i1 %94, %98
  %101 = and i1 %97, false
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 false, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %120

; <label>:112:                                    ; preds = %85
  ret void

; <label>:113:                                    ; preds = %58
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  call void @__clang_call_terminate(i8* %115) #7
  unreachable

; <label>:116:                                    ; preds = %28, %1
  %117 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %117, align 8
  %118 = load %"class.std::vector.5"*, %"class.std::vector.5"** %117, align 8
  %119 = bitcast %"class.std::vector.5"* %118 to %"struct.std::_Vector_base.6"*
  br label %28

; <label>:120:                                    ; preds = %85, %59
  br label %85
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIlEC2Ev(%"class.std::allocator.7"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIlEC2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEEC2EmRKlRKS0_(%"class.std::vector.5"*, i64, i64* dereferenceable(8), %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %12 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  call void @_ZNSt12_Vector_baseIlSaIlEEC2EmRKS0_(%"struct.std::_Vector_base.6"* %12, i64 %13, %"class.std::allocator.7"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i64*, i64** %7, align 8
  invoke void @_ZNSt6vectorIlSaIlEE18_M_fill_initializeEmRKl(%"class.std::vector.5"* %11, i64 %15, i64* dereferenceable(8) %16)
          to label %17 unwind label %71

; <label>:17:                                     ; preds = %4
  %18 = load i32, i32* @x.23
  %19 = load i32, i32* @y.24
  %20 = sub i32 %18, 505913200
  %21 = sub i32 %20, 1
  %22 = add i32 %21, 505913200
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %122

; <label>:44:                                     ; preds = %17, %122
  %45 = load i32, i32* @x.23
  %46 = load i32, i32* @y.24
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %122

; <label>:70:                                     ; preds = %44
  ret void

; <label>:71:                                     ; preds = %4
  %72 = load i32, i32* @x.23
  %73 = load i32, i32* @y.24
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %123

; <label>:85:                                     ; preds = %71, %123
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %9, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %10, align 4
  %89 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIlSaIlEED2Ev(%"struct.std::_Vector_base.6"* %89) #3
  %90 = load i32, i32* @x.23
  %91 = load i32, i32* @y.24
  %92 = add i32 %90, -1206863267
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, -1206863267
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %123

; <label>:116:                                    ; preds = %85
  br label %117

; <label>:117:                                    ; preds = %116
  %118 = load i8*, i8** %9, align 8
  %119 = load i32, i32* %10, align 4
  %120 = insertvalue { i8*, i32 } undef, i8* %118, 0
  %121 = insertvalue { i8*, i32 } %120, i32 %119, 1
  resume { i8*, i32 } %121

; <label>:122:                                    ; preds = %44, %17
  br label %44

; <label>:123:                                    ; preds = %85, %71
  %124 = landingpad { i8*, i32 }
          cleanup
  %125 = extractvalue { i8*, i32 } %124, 0
  store i8* %125, i8** %9, align 8
  %126 = extractvalue { i8*, i32 } %124, 1
  store i32 %126, i32* %10, align 4
  %127 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIlSaIlEED2Ev(%"struct.std::_Vector_base.6"* %127) #3
  br label %85
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIlED2Ev(%"class.std::allocator.7"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIlED2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbEC2Ev(%"class.std::allocator.19"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.27
  %5 = load i32, i32* @y.28
  %6 = sub i32 %4, -17402778
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -17402778
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 142974888, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 142974888, label %18
    i32 -1648959097, label %26
    i32 -1996011531, label %57
    i32 693527770, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1648959097, i32 693527770
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.19"*, align 8
  store %"class.std::allocator.19"* %0, %"class.std::allocator.19"** %27, align 8
  %28 = load %"class.std::allocator.19"*, %"class.std::allocator.19"** %27, align 8
  %29 = bitcast %"class.std::allocator.19"* %28 to %"class.__gnu_cxx::new_allocator.20"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.20"* %29) #3
  %30 = load i32, i32* @x.27
  %31 = load i32, i32* @y.28
  %32 = add i32 %30, -129187848
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -129187848
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1996011531, i32 693527770
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.19"*, align 8
  store %"class.std::allocator.19"* %0, %"class.std::allocator.19"** %59, align 8
  %60 = load %"class.std::allocator.19"*, %"class.std::allocator.19"** %59, align 8
  %61 = bitcast %"class.std::allocator.19"* %60 to %"class.__gnu_cxx::new_allocator.20"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.20"* %61) #3
  store i32 -1648959097, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEEC2EmRKbRKS0_(%"class.std::vector.10"*, i64, i8* dereferenceable(1), %"class.std::allocator.19"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.29
  %6 = load i32, i32* @y.30
  %7 = add i32 %5, 1924912366
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1924912366
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %230

; <label>:19:                                     ; preds = %4, %230
  %20 = alloca %"class.std::vector.10"*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca %"class.std::allocator.19"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  %26 = alloca i32, align 4
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %20, align 8
  store i64 %1, i64* %21, align 8
  store i8* %2, i8** %22, align 8
  store %"class.std::allocator.19"* %3, %"class.std::allocator.19"** %23, align 8
  %27 = load %"class.std::vector.10"*, %"class.std::vector.10"** %20, align 8
  %28 = bitcast %"class.std::vector.10"* %27 to %"struct.std::_Bvector_base"*
  %29 = load %"class.std::allocator.19"*, %"class.std::allocator.19"** %23, align 8
  call void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"* %28, %"class.std::allocator.19"* dereferenceable(1) %29)
  %30 = load i64, i64* %21, align 8
  %31 = load i32, i32* @x.29
  %32 = load i32, i32* @y.30
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %230

; <label>:56:                                     ; preds = %19
  invoke void @_ZNSt6vectorIbSaIbEE13_M_initializeEm(%"class.std::vector.10"* %27, i64 %30)
          to label %57 unwind label %114

; <label>:57:                                     ; preds = %56
  %58 = bitcast %"class.std::vector.10"* %27 to %"struct.std::_Bvector_base"*
  %59 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %59, i32 0, i32 0
  %61 = bitcast %"struct.std::_Bit_iterator"* %60 to %"struct.std::_Bit_iterator_base"*
  %62 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %61, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = bitcast %"class.std::vector.10"* %27 to %"struct.std::_Bvector_base"*
  %65 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %64, i32 0, i32 0
  %66 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %65) #3
  %67 = load i8*, i8** %22, align 8
  %68 = load i8, i8* %67, align 1
  %69 = trunc i8 %68 to i1
  %70 = select i1 %69, i32 -1, i32 0
  store i32 %70, i32* %26, align 4
  invoke void @_ZSt4fillIPmiEvT_S1_RKT0_(i64* %63, i64* %66, i32* dereferenceable(4) %26)
          to label %71 unwind label %114

; <label>:71:                                     ; preds = %57
  %72 = load i32, i32* @x.29
  %73 = load i32, i32* @y.30
  %74 = add i32 %72, 2121685649
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, 2121685649
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %242

; <label>:98:                                     ; preds = %71, %242
  %99 = load i32, i32* @x.29
  %100 = load i32, i32* @y.30
  %101 = sub i32 %99, 1668898100
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 1668898100
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %242

; <label>:113:                                    ; preds = %98
  ret void

; <label>:114:                                    ; preds = %57, %56
  %115 = load i32, i32* @x.29
  %116 = load i32, i32* @y.30
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 false, true
  %127 = and i1 %124, false
  %128 = and i1 %122, %126
  %129 = and i1 %125, false
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 false, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %243

; <label>:140:                                    ; preds = %114, %243
  %141 = landingpad { i8*, i32 }
          cleanup
  %142 = extractvalue { i8*, i32 } %141, 0
  store i8* %142, i8** %24, align 8
  %143 = extractvalue { i8*, i32 } %141, 1
  store i32 %143, i32* %25, align 4
  %144 = bitcast %"class.std::vector.10"* %27 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %144) #3
  %145 = load i32, i32* @x.29
  %146 = load i32, i32* @y.30
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = xor i1 %152, true
  %155 = xor i1 %153, true
  %156 = xor i1 false, true
  %157 = and i1 %154, false
  %158 = and i1 %152, %156
  %159 = and i1 %155, false
  %160 = and i1 %153, %156
  %161 = or i1 %157, %158
  %162 = or i1 %159, %160
  %163 = xor i1 %161, %162
  %164 = or i1 %154, %155
  %165 = xor i1 %164, true
  %166 = or i1 false, %156
  %167 = and i1 %165, %166
  %168 = or i1 %163, %167
  %169 = or i1 %152, %153
  br i1 %168, label %170, label %243

; <label>:170:                                    ; preds = %140
  br label %171

; <label>:171:                                    ; preds = %170
  %172 = load i32, i32* @x.29
  %173 = load i32, i32* @y.30
  %174 = sub i32 %172, -1392272110
  %175 = sub i32 %174, 1
  %176 = add i32 %175, -1392272110
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 false, true
  %185 = and i1 %182, false
  %186 = and i1 %180, %184
  %187 = and i1 %183, false
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 false, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  br i1 %196, label %198, label %248

; <label>:198:                                    ; preds = %171, %248
  %199 = load i8*, i8** %24, align 8
  %200 = load i32, i32* %25, align 4
  %201 = insertvalue { i8*, i32 } undef, i8* %199, 0
  %202 = insertvalue { i8*, i32 } %201, i32 %200, 1
  %203 = load i32, i32* @x.29
  %204 = load i32, i32* @y.30
  %205 = sub i32 %203, -10054886
  %206 = sub i32 %205, 1
  %207 = add i32 %206, -10054886
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = xor i1 %211, true
  %214 = xor i1 %212, true
  %215 = xor i1 true, true
  %216 = and i1 %213, true
  %217 = and i1 %211, %215
  %218 = and i1 %214, true
  %219 = and i1 %212, %215
  %220 = or i1 %216, %217
  %221 = or i1 %218, %219
  %222 = xor i1 %220, %221
  %223 = or i1 %213, %214
  %224 = xor i1 %223, true
  %225 = or i1 true, %215
  %226 = and i1 %224, %225
  %227 = or i1 %222, %226
  %228 = or i1 %211, %212
  br i1 %227, label %229, label %248

; <label>:229:                                    ; preds = %198
  resume { i8*, i32 } %202

; <label>:230:                                    ; preds = %19, %4
  %231 = alloca %"class.std::vector.10"*, align 8
  %232 = alloca i64, align 8
  %233 = alloca i8*, align 8
  %234 = alloca %"class.std::allocator.19"*, align 8
  %235 = alloca i8*
  %236 = alloca i32
  %237 = alloca i32, align 4
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %231, align 8
  store i64 %1, i64* %232, align 8
  store i8* %2, i8** %233, align 8
  store %"class.std::allocator.19"* %3, %"class.std::allocator.19"** %234, align 8
  %238 = load %"class.std::vector.10"*, %"class.std::vector.10"** %231, align 8
  %239 = bitcast %"class.std::vector.10"* %238 to %"struct.std::_Bvector_base"*
  %240 = load %"class.std::allocator.19"*, %"class.std::allocator.19"** %234, align 8
  call void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"* %239, %"class.std::allocator.19"* dereferenceable(1) %240)
  %241 = load i64, i64* %232, align 8
  br label %19

; <label>:242:                                    ; preds = %98, %71
  br label %98

; <label>:243:                                    ; preds = %140, %114
  %244 = landingpad { i8*, i32 }
          cleanup
  %245 = extractvalue { i8*, i32 } %244, 0
  store i8* %245, i8** %24, align 8
  %246 = extractvalue { i8*, i32 } %244, 1
  store i32 %246, i32* %25, align 4
  %247 = bitcast %"class.std::vector.10"* %27 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %247) #3
  br label %140

; <label>:248:                                    ; preds = %198, %171
  %249 = load i8*, i8** %24, align 8
  %250 = load i32, i32* %25, align 4
  %251 = insertvalue { i8*, i32 } undef, i8* %249, 0
  %252 = insertvalue { i8*, i32 } %251, i32 %250, 1
  br label %198
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbED2Ev(%"class.std::allocator.19"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.19"*, align 8
  store %"class.std::allocator.19"* %0, %"class.std::allocator.19"** %2, align 8
  %3 = load %"class.std::allocator.19"*, %"class.std::allocator.19"** %2, align 8
  %4 = bitcast %"class.std::allocator.19"* %3 to %"class.__gnu_cxx::new_allocator.20"*
  call void @_ZN9__gnu_cxx13new_allocatorIbED2Ev(%"class.__gnu_cxx::new_allocator.20"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IlSaIlEESaIS1_EEC2Ev(%"class.std::vector.14"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %2, align 8
  %3 = load %"class.std::vector.14"*, %"class.std::vector.14"** %2, align 8
  %4 = bitcast %"class.std::vector.14"* %3 to %"struct.std::_Vector_base.15"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EEC2Ev(%"struct.std::_Vector_base.15"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.5"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %15 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %14) #3
  invoke void @_ZSt8_DestroyIPllEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator.7"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIlSaIlEED2Ev(%"struct.std::_Vector_base.6"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIlSaIlEED2Ev(%"struct.std::_Vector_base.6"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5GraphILl0EED2Ev(%class.Graph*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.Graph*, align 8
  store %class.Graph* %0, %class.Graph** %2, align 8
  %3 = load %class.Graph*, %class.Graph** %2, align 8
  %4 = getelementptr inbounds %class.Graph, %class.Graph* %3, i32 0, i32 3
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EED2Ev(%"class.std::vector.0"* %4) #3
  %5 = getelementptr inbounds %class.Graph, %class.Graph* %3, i32 0, i32 2
  call void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEC2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2Ev(%"class.std::vector.0"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EEC2Ev(%"struct.std::_Vector_base.1"* %4)
          to label %5 unwind label %59

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.41
  %7 = load i32, i32* @y.42
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 false, true
  %18 = and i1 %15, false
  %19 = and i1 %13, %17
  %20 = and i1 %16, false
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 false, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %62

; <label>:31:                                     ; preds = %5, %62
  %32 = load i32, i32* @x.41
  %33 = load i32, i32* @y.42
  %34 = sub i32 %32, 1991276976
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1991276976
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %62

; <label>:58:                                     ; preds = %31
  ret void

; <label>:59:                                     ; preds = %1
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  call void @__clang_call_terminate(i8* %61) #7
  unreachable

; <label>:62:                                     ; preds = %31, %5
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE6resizeEm(%"class.std::vector"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %8, %"class.std::vector"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %11 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %10) #3
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 2071603426, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %244
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 2071603426, label %16
    i32 355814914, label %21
    i32 482466932, label %49
    i32 -1977806632, label %85
    i32 436645080, label %86
    i32 -696362963, label %92
    i32 -417568919, label %120
    i32 -1896401673, label %156
    i32 1108165946, label %157
    i32 -1240050333, label %158
    i32 1728481260, label %186
    i32 1237086076, label %201
    i32 259930677, label %202
    i32 1415393942, label %234
    i32 -1675730552, label %243
  ]

; <label>:15:                                     ; preds = %13
  br label %244

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 355814914, i32 436645080
  store i32 %20, i32* %12
  br label %244

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.43
  %23 = load i32, i32* @y.44
  %24 = add i32 %22, -962782996
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -962782996
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 482466932, i32 259930677
  store i32 %48, i32* %12
  br label %244

; <label>:49:                                     ; preds = %13
  %50 = load i64, i64* %7, align 8
  %51 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %52 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %51) #3
  %53 = sub i64 %50, -3656713172201566460
  %54 = sub i64 %53, %52
  %55 = add i64 %54, -3656713172201566460
  %56 = sub i64 %50, %52
  %57 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE17_M_default_appendEm(%"class.std::vector"* %57, i64 %55)
  %58 = load i32, i32* @x.43
  %59 = load i32, i32* @y.44
  %60 = add i32 %58, 284194705
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 284194705
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1977806632, i32 259930677
  store i32 %84, i32* %12
  br label %244

; <label>:85:                                     ; preds = %13
  store i32 -1240050333, i32* %12
  br label %244

; <label>:86:                                     ; preds = %13
  %87 = load i64, i64* %7, align 8
  %88 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %89 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %88) #3
  %90 = icmp ult i64 %87, %89
  %91 = select i1 %90, i32 -696362963, i32 1108165946
  store i32 %91, i32* %12
  br label %244

; <label>:92:                                     ; preds = %13
  %93 = load i32, i32* @x.43
  %94 = load i32, i32* @y.44
  %95 = add i32 %93, 1817453114
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, 1817453114
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 false, true
  %106 = and i1 %103, false
  %107 = and i1 %101, %105
  %108 = and i1 %104, false
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 false, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 -417568919, i32 1415393942
  store i32 %119, i32* %12
  br label %244

; <label>:120:                                    ; preds = %13
  %121 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %122 = bitcast %"class.std::vector"* %121 to %"struct.std::_Vector_base"*
  %123 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %122, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %123, i32 0, i32 0
  %125 = load %"class.std::vector.0"*, %"class.std::vector.0"** %124, align 8
  %126 = load i64, i64* %7, align 8
  %127 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %125, i64 %126
  %128 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector"* %128, %"class.std::vector.0"* %127) #3
  %129 = load i32, i32* @x.43
  %130 = load i32, i32* @y.44
  %131 = add i32 %129, 901307467
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, 901307467
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 false, true
  %142 = and i1 %139, false
  %143 = and i1 %137, %141
  %144 = and i1 %140, false
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 false, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  %155 = select i1 %153, i32 -1896401673, i32 1415393942
  store i32 %155, i32* %12
  br label %244

; <label>:156:                                    ; preds = %13
  store i32 1108165946, i32* %12
  br label %244

; <label>:157:                                    ; preds = %13
  store i32 -1240050333, i32* %12
  br label %244

; <label>:158:                                    ; preds = %13
  %159 = load i32, i32* @x.43
  %160 = load i32, i32* @y.44
  %161 = add i32 %159, -1313173053
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, -1313173053
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 false, true
  %172 = and i1 %169, false
  %173 = and i1 %167, %171
  %174 = and i1 %170, false
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 false, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  %185 = select i1 %183, i32 1728481260, i32 -1675730552
  store i32 %185, i32* %12
  br label %244

; <label>:186:                                    ; preds = %13
  %187 = load i32, i32* @x.43
  %188 = load i32, i32* @y.44
  %189 = sub i32 0, 1
  %190 = add i32 %187, %189
  %191 = sub i32 %187, 1
  %192 = mul i32 %187, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %188, 10
  %196 = and i1 %194, %195
  %197 = xor i1 %194, %195
  %198 = or i1 %196, %197
  %199 = or i1 %194, %195
  %200 = select i1 %198, i32 1237086076, i32 -1675730552
  store i32 %200, i32* %12
  br label %244

; <label>:201:                                    ; preds = %13
  ret void

; <label>:202:                                    ; preds = %13
  %203 = load i64, i64* %7, align 8
  %204 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %205 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %204) #3
  %206 = shl i64 %203, %205
  %207 = shl i64 %203, %205
  %208 = sub i64 0, 4539255137227989034
  %209 = sub i64 %208, %203
  %210 = add i64 %209, 4539255137227989034
  %211 = sub i64 0, %203
  %212 = sub i64 %210, -8271300273718732674
  %213 = add i64 %212, %205
  %214 = add i64 %213, -8271300273718732674
  %215 = add i64 %210, %205
  %216 = shl i64 %203, %205
  %217 = sub i64 0, %205
  %218 = add i64 %203, %217
  %219 = sub i64 %203, %205
  %220 = mul i64 %218, %205
  %221 = sub i64 0, 2769902173263064140
  %222 = sub i64 %221, %203
  %223 = add i64 %222, 2769902173263064140
  %224 = sub i64 0, %203
  %225 = add i64 %223, -4018524519843558803
  %226 = add i64 %225, %205
  %227 = sub i64 %226, -4018524519843558803
  %228 = add i64 %223, %205
  %229 = add i64 %203, -1271929379987640032
  %230 = sub i64 %229, %205
  %231 = sub i64 %230, -1271929379987640032
  %232 = sub i64 %203, %205
  %233 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE17_M_default_appendEm(%"class.std::vector"* %233, i64 %231)
  store i32 482466932, i32* %12
  br label %244

; <label>:234:                                    ; preds = %13
  %235 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %236 = bitcast %"class.std::vector"* %235 to %"struct.std::_Vector_base"*
  %237 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %236, i32 0, i32 0
  %238 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %237, i32 0, i32 0
  %239 = load %"class.std::vector.0"*, %"class.std::vector.0"** %238, align 8
  %240 = load i64, i64* %7, align 8
  %241 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %239, i64 %240
  %242 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector"* %242, %"class.std::vector.0"* %241) #3
  store i32 -417568919, i32* %12
  br label %244

; <label>:243:                                    ; preds = %13
  store i32 1728481260, i32* %12
  br label %244

; <label>:244:                                    ; preds = %243, %234, %202, %186, %158, %157, %156, %120, %92, %86, %85, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EED2Ev(%"class.std::vector.0"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.45
  %3 = load i32, i32* @y.46
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %135

; <label>:27:                                     ; preds = %1, %135
  %28 = alloca %"class.std::vector.0"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %34, align 8
  %36 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %38, align 8
  %40 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %41 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %40) #3
  %42 = load i32, i32* @x.45
  %43 = load i32, i32* @y.46
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %135

; <label>:67:                                     ; preds = %27
  invoke void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeES2_EvT_S4_RSaIT0_E(%"struct.Graph<0>::Edge"* %35, %"struct.Graph<0>::Edge"* %39, %"class.std::allocator.2"* dereferenceable(1) %41)
          to label %68 unwind label %99

; <label>:68:                                     ; preds = %67
  %69 = load i32, i32* @x.45
  %70 = load i32, i32* @y.46
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  br i1 %80, label %82, label %150

; <label>:82:                                     ; preds = %68, %150
  %83 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %83) #3
  %84 = load i32, i32* @x.45
  %85 = load i32, i32* @y.46
  %86 = add i32 %84, 2118029032
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, 2118029032
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %150

; <label>:98:                                     ; preds = %82
  ret void

; <label>:99:                                     ; preds = %67
  %100 = landingpad { i8*, i32 }
          catch i8* null
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %29, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %30, align 4
  %103 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %103) #3
  br label %104

; <label>:104:                                    ; preds = %99
  %105 = load i32, i32* @x.45
  %106 = load i32, i32* @y.46
  %107 = sub i32 %105, 1737104792
  %108 = sub i32 %107, 1
  %109 = add i32 %108, 1737104792
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  br i1 %117, label %119, label %152

; <label>:119:                                    ; preds = %104, %152
  %120 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %120) #7
  %121 = load i32, i32* @x.45
  %122 = load i32, i32* @y.46
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %152

; <label>:134:                                    ; preds = %119
  unreachable

; <label>:135:                                    ; preds = %27, %1
  %136 = alloca %"class.std::vector.0"*, align 8
  %137 = alloca i8*
  %138 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %136, align 8
  %139 = load %"class.std::vector.0"*, %"class.std::vector.0"** %136, align 8
  %140 = bitcast %"class.std::vector.0"* %139 to %"struct.std::_Vector_base.1"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %141, i32 0, i32 0
  %143 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %142, align 8
  %144 = bitcast %"class.std::vector.0"* %139 to %"struct.std::_Vector_base.1"*
  %145 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %144, i32 0, i32 0
  %146 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %145, i32 0, i32 1
  %147 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %146, align 8
  %148 = bitcast %"class.std::vector.0"* %139 to %"struct.std::_Vector_base.1"*
  %149 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %148) #3
  br label %27

; <label>:150:                                    ; preds = %82, %68
  %151 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %151) #3
  br label %82

; <label>:152:                                    ; preds = %119, %104
  %153 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %153) #7
  br label %119
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.0"* %9, %"class.std::vector.0"* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.47
  %20 = load i32, i32* @y.48
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %53

; <label>:32:                                     ; preds = %18, %53
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %3, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %4, align 4
  %36 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base"* %36) #3
  %37 = load i32, i32* @x.47
  %38 = load i32, i32* @y.48
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %53

; <label>:50:                                     ; preds = %32
  br label %51

; <label>:51:                                     ; preds = %50
  %52 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %52) #7
  unreachable

; <label>:53:                                     ; preds = %32, %18
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %3, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %4, align 4
  %57 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base"* %57) #3
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #7
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.53
  %5 = load i32, i32* @y.54
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1278266361, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %55
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1278266361, label %17
    i32 -1003738551, label %25
    i32 -1496173099, label %47
    i32 -165429154, label %48
  ]

; <label>:16:                                     ; preds = %14
  br label %55

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1003738551, i32 -165429154
  store i32 %24, i32* %13
  br label %55

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"** %26, align 8
  %27 = load %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %27 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorIN5GraphILl0EE4EdgeESaIS2_EEEC2Ev(%"class.std::allocator"* %28) #3
  %29 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %27, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %29, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %27, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %27, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %31, align 8
  %32 = load i32, i32* @x.53
  %33 = load i32, i32* @y.54
  %34 = add i32 %32, -1246333088
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1246333088
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1496173099, i32 -165429154
  store i32 %46, i32* %13
  br label %55

; <label>:47:                                     ; preds = %14
  ret void

; <label>:48:                                     ; preds = %14
  %49 = alloca %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"** %49, align 8
  %50 = load %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"** %49, align 8
  %51 = bitcast %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %50 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorIN5GraphILl0EE4EdgeESaIS2_EEEC2Ev(%"class.std::allocator"* %51) #3
  %52 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %50, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %52, align 8
  %53 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %50, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %53, align 8
  %54 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %50, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %54, align 8
  store i32 -1003738551, i32* %13
  br label %55

; <label>:55:                                     ; preds = %48, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN5GraphILl0EE4EdgeESaIS2_EEEC2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.57
  %5 = load i32, i32* @y.58
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1074263984, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %71
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1074263984, label %17
    i32 -1066700045, label %37
    i32 329894513, label %67
    i32 1258656183, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %71

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1066700045, i32 1258656183
  store i32 %36, i32* %13
  br label %71

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %38, align 8
  %40 = load i32, i32* @x.57
  %41 = load i32, i32* @y.58
  %42 = add i32 %40, -939611856
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -939611856
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 329894513, i32 1258656183
  store i32 %66, i32* %13
  br label %71

; <label>:67:                                     ; preds = %14
  ret void

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %69, align 8
  store i32 -1066700045, i32* %13
  br label %71

; <label>:71:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.59
  %5 = load i32, i32* @y.60
  %6 = sub i32 %4, -907394054
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -907394054
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 2118934482, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2118934482, label %18
    i32 84176468, label %26
    i32 1556189510, label %56
    i32 -1857384285, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 84176468, i32 -1857384285
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %27, align 8
  %28 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.59
  %31 = load i32, i32* @y.60
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1556189510, i32 -1857384285
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %58, align 8
  %59 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %60)
  store i32 84176468, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.61
  %5 = load i32, i32* @y.62
  %6 = sub i32 %4, -744265568
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -744265568
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 130640778, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 130640778, label %18
    i32 -1798443717, label %38
    i32 -101016274, label %72
    i32 -269189701, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1798443717, i32 -269189701
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %40 to %"class.std::allocator.2"*
  call void @_ZNSaIN5GraphILl0EE4EdgeEEC2Ev(%"class.std::allocator.2"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %40, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %40, i32 0, i32 1
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %40, i32 0, i32 2
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %44, align 8
  %45 = load i32, i32* @x.61
  %46 = load i32, i32* @y.62
  %47 = add i32 %45, -1745706036
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1745706036
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -101016274, i32 -269189701
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %74, align 8
  %75 = load %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %74, align 8
  %76 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %75 to %"class.std::allocator.2"*
  call void @_ZNSaIN5GraphILl0EE4EdgeEEC2Ev(%"class.std::allocator.2"* %76) #3
  %77 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %75, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %75, i32 0, i32 1
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %78, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %75, i32 0, i32 2
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %79, align 8
  store i32 -1798443717, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5GraphILl0EE4EdgeEEC2Ev(%"class.std::allocator.2"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.63
  %5 = load i32, i32* @y.64
  %6 = add i32 %4, -1466409768
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1466409768
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1730267736, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1730267736, label %18
    i32 -1157086992, label %38
    i32 1741065433, label %57
    i32 -1284528345, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1157086992, i32 -1284528345
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %39, align 8
  %40 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %39, align 8
  %41 = bitcast %"class.std::allocator.2"* %40 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %41) #3
  %42 = load i32, i32* @x.63
  %43 = load i32, i32* @y.64
  %44 = add i32 %42, -1360661192
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1360661192
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1741065433, i32 -1284528345
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %59, align 8
  %60 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %59, align 8
  %61 = bitcast %"class.std::allocator.2"* %60 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %61) #3
  store i32 -1157086992, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.67
  %6 = load i32, i32* @y.68
  %7 = add i32 %5, 2048025383
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2048025383
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1934646354, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %123
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1934646354, label %19
    i32 -496073829, label %27
    i32 -1292763218, label %60
    i32 -1826767596, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %123

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -496073829, i32 -1826767596
  store i32 %26, i32* %15
  br label %123

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %34 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %36, align 8
  %38 = ptrtoint %"class.std::vector.0"* %33 to i64
  %39 = ptrtoint %"class.std::vector.0"* %37 to i64
  %40 = add i64 %38, 6344681647024121191
  %41 = sub i64 %40, %39
  %42 = sub i64 %41, 6344681647024121191
  %43 = sub i64 %38, %39
  %44 = sdiv exact i64 %42, 24
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.67
  %46 = load i32, i32* @y.68
  %47 = sub i32 %45, -431251771
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -431251771
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1292763218, i32 -1826767596
  store i32 %59, i32* %15
  br label %123

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %63, align 8
  %64 = load %"class.std::vector"*, %"class.std::vector"** %63, align 8
  %65 = bitcast %"class.std::vector"* %64 to %"struct.std::_Vector_base"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %66, i32 0, i32 1
  %68 = load %"class.std::vector.0"*, %"class.std::vector.0"** %67, align 8
  %69 = bitcast %"class.std::vector"* %64 to %"struct.std::_Vector_base"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"class.std::vector.0"*, %"class.std::vector.0"** %71, align 8
  %73 = ptrtoint %"class.std::vector.0"* %68 to i64
  %74 = ptrtoint %"class.std::vector.0"* %72 to i64
  %75 = shl i64 %73, %74
  %76 = add i64 %73, 7645121262077918304
  %77 = sub i64 %76, %74
  %78 = sub i64 %77, 7645121262077918304
  %79 = sub i64 %73, %74
  %80 = mul i64 %78, %74
  %81 = sub i64 0, 6843916989418968748
  %82 = sub i64 %81, %73
  %83 = add i64 %82, 6843916989418968748
  %84 = sub i64 0, %73
  %85 = sub i64 %83, 3867608752396530418
  %86 = add i64 %85, %74
  %87 = add i64 %86, 3867608752396530418
  %88 = add i64 %83, %74
  %89 = sub i64 %73, 5326102486045364223
  %90 = sub i64 %89, %74
  %91 = add i64 %90, 5326102486045364223
  %92 = sub i64 %73, %74
  %93 = mul i64 %91, %74
  %94 = sub i64 0, -2398708061574342409
  %95 = sub i64 %94, %73
  %96 = add i64 %95, -2398708061574342409
  %97 = sub i64 0, %73
  %98 = sub i64 0, %74
  %99 = sub i64 %96, %98
  %100 = add i64 %96, %74
  %101 = shl i64 %73, %74
  %102 = add i64 %73, 1208266964209508655
  %103 = sub i64 %102, %74
  %104 = sub i64 %103, 1208266964209508655
  %105 = sub i64 %73, %74
  %106 = mul i64 %104, %74
  %107 = sub i64 0, %74
  %108 = add i64 %73, %107
  %109 = sub i64 %73, %74
  %110 = sub i64 0, 24
  %111 = add i64 %108, %110
  %112 = sub i64 %108, 24
  %113 = mul i64 %111, 24
  %114 = shl i64 %108, 24
  %115 = shl i64 %108, 24
  %116 = shl i64 %108, 24
  %117 = sub i64 %108, 1417198885620259016
  %118 = sub i64 %117, 24
  %119 = add i64 %118, 1417198885620259016
  %120 = sub i64 %108, 24
  %121 = mul i64 %119, 24
  %122 = sdiv exact i64 %108, 24
  store i32 -496073829, i32* %15
  br label %123

; <label>:123:                                    ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE17_M_default_appendEm(%"class.std::vector"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.69
  %4 = load i32, i32* @y.70
  %5 = sub i32 %3, 2129906175
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 2129906175
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %677

; <label>:17:                                     ; preds = %2, %677
  %18 = alloca %"class.std::vector"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca %"class.std::vector.0"*, align 8
  %23 = alloca %"class.std::vector.0"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %18, align 8
  store i64 %1, i64* %19, align 8
  %26 = load %"class.std::vector"*, %"class.std::vector"** %18, align 8
  %27 = load i64, i64* %19, align 8
  %28 = icmp ne i64 %27, 0
  %29 = load i32, i32* @x.69
  %30 = load i32, i32* @y.70
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %677

; <label>:42:                                     ; preds = %17
  br i1 %28, label %43, label %572

; <label>:43:                                     ; preds = %42
  %44 = load i32, i32* @x.69
  %45 = load i32, i32* @y.70
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %689

; <label>:69:                                     ; preds = %43, %689
  %70 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %71, i32 0, i32 2
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %72, align 8
  %74 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %75 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %74, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %75, i32 0, i32 1
  %77 = load %"class.std::vector.0"*, %"class.std::vector.0"** %76, align 8
  %78 = ptrtoint %"class.std::vector.0"* %73 to i64
  %79 = ptrtoint %"class.std::vector.0"* %77 to i64
  %80 = sub i64 0, %79
  %81 = add i64 %78, %80
  %82 = sub i64 %78, %79
  %83 = sdiv exact i64 %81, 24
  %84 = load i64, i64* %19, align 8
  %85 = icmp uge i64 %83, %84
  %86 = load i32, i32* @x.69
  %87 = load i32, i32* @y.70
  %88 = add i32 %86, 1810060713
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, 1810060713
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 false, true
  %99 = and i1 %96, false
  %100 = and i1 %94, %98
  %101 = and i1 %97, false
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 false, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %689

; <label>:112:                                    ; preds = %69
  br i1 %85, label %113, label %179

; <label>:113:                                    ; preds = %112
  %114 = load i32, i32* @x.69
  %115 = load i32, i32* @y.70
  %116 = sub i32 %114, 1525402436
  %117 = sub i32 %116, 1
  %118 = add i32 %117, 1525402436
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %746

; <label>:140:                                    ; preds = %113, %746
  %141 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %142 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %141, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %142, i32 0, i32 1
  %144 = load %"class.std::vector.0"*, %"class.std::vector.0"** %143, align 8
  %145 = load i64, i64* %19, align 8
  %146 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %147 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %146) #3
  %148 = call %"class.std::vector.0"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::vector.0"* %144, i64 %145, %"class.std::allocator"* dereferenceable(1) %147)
  %149 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %150 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %149, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %150, i32 0, i32 1
  store %"class.std::vector.0"* %148, %"class.std::vector.0"** %151, align 8
  %152 = load i32, i32* @x.69
  %153 = load i32, i32* @y.70
  %154 = add i32 %152, 1991378247
  %155 = sub i32 %154, 1
  %156 = sub i32 %155, 1991378247
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = xor i1 %160, true
  %163 = xor i1 %161, true
  %164 = xor i1 true, true
  %165 = and i1 %162, true
  %166 = and i1 %160, %164
  %167 = and i1 %163, true
  %168 = and i1 %161, %164
  %169 = or i1 %165, %166
  %170 = or i1 %167, %168
  %171 = xor i1 %169, %170
  %172 = or i1 %162, %163
  %173 = xor i1 %172, true
  %174 = or i1 true, %164
  %175 = and i1 %173, %174
  %176 = or i1 %171, %175
  %177 = or i1 %160, %161
  br i1 %176, label %178, label %746

; <label>:178:                                    ; preds = %140
  br label %518

; <label>:179:                                    ; preds = %112
  %180 = load i64, i64* %19, align 8
  %181 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector"* %26, i64 %180, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %181, i64* %20, align 8
  %182 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %26) #3
  store i64 %182, i64* %21, align 8
  %183 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %184 = load i64, i64* %20, align 8
  %185 = call %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base"* %183, i64 %184)
  store %"class.std::vector.0"* %185, %"class.std::vector.0"** %22, align 8
  %186 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  store %"class.std::vector.0"* %186, %"class.std::vector.0"** %23, align 8
  %187 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %188, i32 0, i32 0
  %190 = load %"class.std::vector.0"*, %"class.std::vector.0"** %189, align 8
  %191 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %192 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %191, i32 0, i32 0
  %193 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %192, i32 0, i32 1
  %194 = load %"class.std::vector.0"*, %"class.std::vector.0"** %193, align 8
  %195 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %196 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %197 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %196) #3
  %198 = invoke %"class.std::vector.0"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.0"* %190, %"class.std::vector.0"* %194, %"class.std::vector.0"* %195, %"class.std::allocator"* dereferenceable(1) %197)
          to label %199 unwind label %290

; <label>:199:                                    ; preds = %179
  %200 = load i32, i32* @x.69
  %201 = load i32, i32* @y.70
  %202 = add i32 %200, 1276706952
  %203 = sub i32 %202, 1
  %204 = sub i32 %203, 1276706952
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = and i1 %208, %209
  %211 = xor i1 %208, %209
  %212 = or i1 %210, %211
  %213 = or i1 %208, %209
  br i1 %212, label %214, label %758

; <label>:214:                                    ; preds = %199, %758
  store %"class.std::vector.0"* %198, %"class.std::vector.0"** %23, align 8
  %215 = load %"class.std::vector.0"*, %"class.std::vector.0"** %23, align 8
  %216 = load i64, i64* %19, align 8
  %217 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %218 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %217) #3
  %219 = load i32, i32* @x.69
  %220 = load i32, i32* @y.70
  %221 = sub i32 %219, -294397435
  %222 = sub i32 %221, 1
  %223 = add i32 %222, -294397435
  %224 = sub i32 %219, 1
  %225 = mul i32 %219, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %220, 10
  %229 = and i1 %227, %228
  %230 = xor i1 %227, %228
  %231 = or i1 %229, %230
  %232 = or i1 %227, %228
  br i1 %231, label %233, label %758

; <label>:233:                                    ; preds = %214
  %234 = invoke %"class.std::vector.0"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::vector.0"* %215, i64 %216, %"class.std::allocator"* dereferenceable(1) %218)
          to label %235 unwind label %290

; <label>:235:                                    ; preds = %233
  %236 = load i32, i32* @x.69
  %237 = load i32, i32* @y.70
  %238 = sub i32 %236, -1331416529
  %239 = sub i32 %238, 1
  %240 = add i32 %239, -1331416529
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 false, true
  %249 = and i1 %246, false
  %250 = and i1 %244, %248
  %251 = and i1 %247, false
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 false, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  br i1 %260, label %262, label %763

; <label>:262:                                    ; preds = %235, %763
  store %"class.std::vector.0"* %234, %"class.std::vector.0"** %23, align 8
  %263 = load i32, i32* @x.69
  %264 = load i32, i32* @y.70
  %265 = sub i32 %263, 2012926529
  %266 = sub i32 %265, 1
  %267 = add i32 %266, 2012926529
  %268 = sub i32 %263, 1
  %269 = mul i32 %263, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %264, 10
  %273 = xor i1 %271, true
  %274 = xor i1 %272, true
  %275 = xor i1 true, true
  %276 = and i1 %273, true
  %277 = and i1 %271, %275
  %278 = and i1 %274, true
  %279 = and i1 %272, %275
  %280 = or i1 %276, %277
  %281 = or i1 %278, %279
  %282 = xor i1 %280, %281
  %283 = or i1 %273, %274
  %284 = xor i1 %283, true
  %285 = or i1 true, %275
  %286 = and i1 %284, %285
  %287 = or i1 %282, %286
  %288 = or i1 %271, %272
  br i1 %287, label %289, label %763

; <label>:289:                                    ; preds = %262
  br label %421

; <label>:290:                                    ; preds = %233, %179
  %291 = landingpad { i8*, i32 }
          catch i8* null
  %292 = extractvalue { i8*, i32 } %291, 0
  store i8* %292, i8** %24, align 8
  %293 = extractvalue { i8*, i32 } %291, 1
  store i32 %293, i32* %25, align 4
  br label %294

; <label>:294:                                    ; preds = %290
  %295 = load i32, i32* @x.69
  %296 = load i32, i32* @y.70
  %297 = sub i32 0, 1
  %298 = add i32 %295, %297
  %299 = sub i32 %295, 1
  %300 = mul i32 %295, %298
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %296, 10
  %304 = xor i1 %302, true
  %305 = xor i1 %303, true
  %306 = xor i1 false, true
  %307 = and i1 %304, false
  %308 = and i1 %302, %306
  %309 = and i1 %305, false
  %310 = and i1 %303, %306
  %311 = or i1 %307, %308
  %312 = or i1 %309, %310
  %313 = xor i1 %311, %312
  %314 = or i1 %304, %305
  %315 = xor i1 %314, true
  %316 = or i1 false, %306
  %317 = and i1 %315, %316
  %318 = or i1 %313, %317
  %319 = or i1 %302, %303
  br i1 %318, label %320, label %764

; <label>:320:                                    ; preds = %294, %764
  %321 = load i8*, i8** %24, align 8
  %322 = call i8* @__cxa_begin_catch(i8* %321) #3
  %323 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %324 = load %"class.std::vector.0"*, %"class.std::vector.0"** %23, align 8
  %325 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %326 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %325) #3
  %327 = load i32, i32* @x.69
  %328 = load i32, i32* @y.70
  %329 = sub i32 0, 1
  %330 = add i32 %327, %329
  %331 = sub i32 %327, 1
  %332 = mul i32 %327, %330
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %328, 10
  %336 = xor i1 %334, true
  %337 = xor i1 %335, true
  %338 = xor i1 true, true
  %339 = and i1 %336, true
  %340 = and i1 %334, %338
  %341 = and i1 %337, true
  %342 = and i1 %335, %338
  %343 = or i1 %339, %340
  %344 = or i1 %341, %342
  %345 = xor i1 %343, %344
  %346 = or i1 %336, %337
  %347 = xor i1 %346, true
  %348 = or i1 true, %338
  %349 = and i1 %347, %348
  %350 = or i1 %345, %349
  %351 = or i1 %334, %335
  br i1 %350, label %352, label %764

; <label>:352:                                    ; preds = %320
  invoke void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.0"* %323, %"class.std::vector.0"* %324, %"class.std::allocator"* dereferenceable(1) %326)
          to label %353 unwind label %387

; <label>:353:                                    ; preds = %352
  %354 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %355 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %356 = load i64, i64* %20, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %354, %"class.std::vector.0"* %355, i64 %356)
          to label %357 unwind label %387

; <label>:357:                                    ; preds = %353
  %358 = load i32, i32* @x.69
  %359 = load i32, i32* @y.70
  %360 = sub i32 0, 1
  %361 = add i32 %358, %360
  %362 = sub i32 %358, 1
  %363 = mul i32 %358, %361
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %359, 10
  %367 = and i1 %365, %366
  %368 = xor i1 %365, %366
  %369 = or i1 %367, %368
  %370 = or i1 %365, %366
  br i1 %369, label %371, label %771

; <label>:371:                                    ; preds = %357, %771
  %372 = load i32, i32* @x.69
  %373 = load i32, i32* @y.70
  %374 = add i32 %372, 779763348
  %375 = sub i32 %374, 1
  %376 = sub i32 %375, 779763348
  %377 = sub i32 %372, 1
  %378 = mul i32 %372, %376
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %373, 10
  %382 = and i1 %380, %381
  %383 = xor i1 %380, %381
  %384 = or i1 %382, %383
  %385 = or i1 %380, %381
  br i1 %384, label %386, label %771

; <label>:386:                                    ; preds = %371
  invoke void @__cxa_rethrow() #12
          to label %634 unwind label %387

; <label>:387:                                    ; preds = %386, %353, %352
  %388 = load i32, i32* @x.69
  %389 = load i32, i32* @y.70
  %390 = sub i32 0, 1
  %391 = add i32 %388, %390
  %392 = sub i32 %388, 1
  %393 = mul i32 %388, %391
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %389, 10
  %397 = and i1 %395, %396
  %398 = xor i1 %395, %396
  %399 = or i1 %397, %398
  %400 = or i1 %395, %396
  br i1 %399, label %401, label %772

; <label>:401:                                    ; preds = %387, %772
  %402 = landingpad { i8*, i32 }
          cleanup
  %403 = extractvalue { i8*, i32 } %402, 0
  store i8* %403, i8** %24, align 8
  %404 = extractvalue { i8*, i32 } %402, 1
  store i32 %404, i32* %25, align 4
  %405 = load i32, i32* @x.69
  %406 = load i32, i32* @y.70
  %407 = sub i32 %405, 2135265262
  %408 = sub i32 %407, 1
  %409 = add i32 %408, 2135265262
  %410 = sub i32 %405, 1
  %411 = mul i32 %405, %409
  %412 = urem i32 %411, 2
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %406, 10
  %415 = and i1 %413, %414
  %416 = xor i1 %413, %414
  %417 = or i1 %415, %416
  %418 = or i1 %413, %414
  br i1 %417, label %419, label %772

; <label>:419:                                    ; preds = %401
  invoke void @__cxa_end_catch()
          to label %420 unwind label %631

; <label>:420:                                    ; preds = %419
  br label %626

; <label>:421:                                    ; preds = %289
  %422 = load i32, i32* @x.69
  %423 = load i32, i32* @y.70
  %424 = sub i32 %422, 189419352
  %425 = sub i32 %424, 1
  %426 = add i32 %425, 189419352
  %427 = sub i32 %422, 1
  %428 = mul i32 %422, %426
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %423, 10
  %432 = xor i1 %430, true
  %433 = xor i1 %431, true
  %434 = xor i1 true, true
  %435 = and i1 %432, true
  %436 = and i1 %430, %434
  %437 = and i1 %433, true
  %438 = and i1 %431, %434
  %439 = or i1 %435, %436
  %440 = or i1 %437, %438
  %441 = xor i1 %439, %440
  %442 = or i1 %432, %433
  %443 = xor i1 %442, true
  %444 = or i1 true, %434
  %445 = and i1 %443, %444
  %446 = or i1 %441, %445
  %447 = or i1 %430, %431
  br i1 %446, label %448, label %776

; <label>:448:                                    ; preds = %421, %776
  %449 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %450 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %449, i32 0, i32 0
  %451 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %450, i32 0, i32 0
  %452 = load %"class.std::vector.0"*, %"class.std::vector.0"** %451, align 8
  %453 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %454 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %453, i32 0, i32 0
  %455 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %454, i32 0, i32 1
  %456 = load %"class.std::vector.0"*, %"class.std::vector.0"** %455, align 8
  %457 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %458 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %457) #3
  call void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.0"* %452, %"class.std::vector.0"* %456, %"class.std::allocator"* dereferenceable(1) %458)
  %459 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %460 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %461 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %460, i32 0, i32 0
  %462 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %461, i32 0, i32 0
  %463 = load %"class.std::vector.0"*, %"class.std::vector.0"** %462, align 8
  %464 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %465 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %464, i32 0, i32 0
  %466 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %465, i32 0, i32 2
  %467 = load %"class.std::vector.0"*, %"class.std::vector.0"** %466, align 8
  %468 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %469 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %468, i32 0, i32 0
  %470 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %469, i32 0, i32 0
  %471 = load %"class.std::vector.0"*, %"class.std::vector.0"** %470, align 8
  %472 = ptrtoint %"class.std::vector.0"* %467 to i64
  %473 = ptrtoint %"class.std::vector.0"* %471 to i64
  %474 = sub i64 0, %473
  %475 = add i64 %472, %474
  %476 = sub i64 %472, %473
  %477 = sdiv exact i64 %475, 24
  call void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %459, %"class.std::vector.0"* %463, i64 %477)
  %478 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %479 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %480 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %479, i32 0, i32 0
  %481 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %480, i32 0, i32 0
  store %"class.std::vector.0"* %478, %"class.std::vector.0"** %481, align 8
  %482 = load %"class.std::vector.0"*, %"class.std::vector.0"** %23, align 8
  %483 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %484 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %483, i32 0, i32 0
  %485 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %484, i32 0, i32 1
  store %"class.std::vector.0"* %482, %"class.std::vector.0"** %485, align 8
  %486 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %487 = load i64, i64* %20, align 8
  %488 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %486, i64 %487
  %489 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %490 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %489, i32 0, i32 0
  %491 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %490, i32 0, i32 2
  store %"class.std::vector.0"* %488, %"class.std::vector.0"** %491, align 8
  %492 = load i32, i32* @x.69
  %493 = load i32, i32* @y.70
  %494 = sub i32 0, 1
  %495 = add i32 %492, %494
  %496 = sub i32 %492, 1
  %497 = mul i32 %492, %495
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %493, 10
  %501 = xor i1 %499, true
  %502 = xor i1 %500, true
  %503 = xor i1 false, true
  %504 = and i1 %501, false
  %505 = and i1 %499, %503
  %506 = and i1 %502, false
  %507 = and i1 %500, %503
  %508 = or i1 %504, %505
  %509 = or i1 %506, %507
  %510 = xor i1 %508, %509
  %511 = or i1 %501, %502
  %512 = xor i1 %511, true
  %513 = or i1 false, %503
  %514 = and i1 %512, %513
  %515 = or i1 %510, %514
  %516 = or i1 %499, %500
  br i1 %515, label %517, label %776

; <label>:517:                                    ; preds = %448
  br label %518

; <label>:518:                                    ; preds = %517, %178
  %519 = load i32, i32* @x.69
  %520 = load i32, i32* @y.70
  %521 = sub i32 %519, 1958333118
  %522 = sub i32 %521, 1
  %523 = add i32 %522, 1958333118
  %524 = sub i32 %519, 1
  %525 = mul i32 %519, %523
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %520, 10
  %529 = xor i1 %527, true
  %530 = xor i1 %528, true
  %531 = xor i1 true, true
  %532 = and i1 %529, true
  %533 = and i1 %527, %531
  %534 = and i1 %530, true
  %535 = and i1 %528, %531
  %536 = or i1 %532, %533
  %537 = or i1 %534, %535
  %538 = xor i1 %536, %537
  %539 = or i1 %529, %530
  %540 = xor i1 %539, true
  %541 = or i1 true, %531
  %542 = and i1 %540, %541
  %543 = or i1 %538, %542
  %544 = or i1 %527, %528
  br i1 %543, label %545, label %859

; <label>:545:                                    ; preds = %518, %859
  %546 = load i32, i32* @x.69
  %547 = load i32, i32* @y.70
  %548 = sub i32 0, 1
  %549 = add i32 %546, %548
  %550 = sub i32 %546, 1
  %551 = mul i32 %546, %549
  %552 = urem i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %547, 10
  %555 = xor i1 %553, true
  %556 = xor i1 %554, true
  %557 = xor i1 false, true
  %558 = and i1 %555, false
  %559 = and i1 %553, %557
  %560 = and i1 %556, false
  %561 = and i1 %554, %557
  %562 = or i1 %558, %559
  %563 = or i1 %560, %561
  %564 = xor i1 %562, %563
  %565 = or i1 %555, %556
  %566 = xor i1 %565, true
  %567 = or i1 false, %557
  %568 = and i1 %566, %567
  %569 = or i1 %564, %568
  %570 = or i1 %553, %554
  br i1 %569, label %571, label %859

; <label>:571:                                    ; preds = %545
  br label %572

; <label>:572:                                    ; preds = %571, %42
  %573 = load i32, i32* @x.69
  %574 = load i32, i32* @y.70
  %575 = sub i32 0, 1
  %576 = add i32 %573, %575
  %577 = sub i32 %573, 1
  %578 = mul i32 %573, %576
  %579 = urem i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = icmp slt i32 %574, 10
  %582 = xor i1 %580, true
  %583 = xor i1 %581, true
  %584 = xor i1 false, true
  %585 = and i1 %582, false
  %586 = and i1 %580, %584
  %587 = and i1 %583, false
  %588 = and i1 %581, %584
  %589 = or i1 %585, %586
  %590 = or i1 %587, %588
  %591 = xor i1 %589, %590
  %592 = or i1 %582, %583
  %593 = xor i1 %592, true
  %594 = or i1 false, %584
  %595 = and i1 %593, %594
  %596 = or i1 %591, %595
  %597 = or i1 %580, %581
  br i1 %596, label %598, label %860

; <label>:598:                                    ; preds = %572, %860
  %599 = load i32, i32* @x.69
  %600 = load i32, i32* @y.70
  %601 = add i32 %599, 1252784320
  %602 = sub i32 %601, 1
  %603 = sub i32 %602, 1252784320
  %604 = sub i32 %599, 1
  %605 = mul i32 %599, %603
  %606 = urem i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = icmp slt i32 %600, 10
  %609 = xor i1 %607, true
  %610 = xor i1 %608, true
  %611 = xor i1 true, true
  %612 = and i1 %609, true
  %613 = and i1 %607, %611
  %614 = and i1 %610, true
  %615 = and i1 %608, %611
  %616 = or i1 %612, %613
  %617 = or i1 %614, %615
  %618 = xor i1 %616, %617
  %619 = or i1 %609, %610
  %620 = xor i1 %619, true
  %621 = or i1 true, %611
  %622 = and i1 %620, %621
  %623 = or i1 %618, %622
  %624 = or i1 %607, %608
  br i1 %623, label %625, label %860

; <label>:625:                                    ; preds = %598
  ret void

; <label>:626:                                    ; preds = %420
  %627 = load i8*, i8** %24, align 8
  %628 = load i32, i32* %25, align 4
  %629 = insertvalue { i8*, i32 } undef, i8* %627, 0
  %630 = insertvalue { i8*, i32 } %629, i32 %628, 1
  resume { i8*, i32 } %630

; <label>:631:                                    ; preds = %419
  %632 = landingpad { i8*, i32 }
          catch i8* null
  %633 = extractvalue { i8*, i32 } %632, 0
  call void @__clang_call_terminate(i8* %633) #7
  unreachable

; <label>:634:                                    ; preds = %386
  %635 = load i32, i32* @x.69
  %636 = load i32, i32* @y.70
  %637 = add i32 %635, -899192031
  %638 = sub i32 %637, 1
  %639 = sub i32 %638, -899192031
  %640 = sub i32 %635, 1
  %641 = mul i32 %635, %639
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %636, 10
  %645 = xor i1 %643, true
  %646 = xor i1 %644, true
  %647 = xor i1 true, true
  %648 = and i1 %645, true
  %649 = and i1 %643, %647
  %650 = and i1 %646, true
  %651 = and i1 %644, %647
  %652 = or i1 %648, %649
  %653 = or i1 %650, %651
  %654 = xor i1 %652, %653
  %655 = or i1 %645, %646
  %656 = xor i1 %655, true
  %657 = or i1 true, %647
  %658 = and i1 %656, %657
  %659 = or i1 %654, %658
  %660 = or i1 %643, %644
  br i1 %659, label %661, label %861

; <label>:661:                                    ; preds = %634, %861
  %662 = load i32, i32* @x.69
  %663 = load i32, i32* @y.70
  %664 = sub i32 %662, 1217717139
  %665 = sub i32 %664, 1
  %666 = add i32 %665, 1217717139
  %667 = sub i32 %662, 1
  %668 = mul i32 %662, %666
  %669 = urem i32 %668, 2
  %670 = icmp eq i32 %669, 0
  %671 = icmp slt i32 %663, 10
  %672 = and i1 %670, %671
  %673 = xor i1 %670, %671
  %674 = or i1 %672, %673
  %675 = or i1 %670, %671
  br i1 %674, label %676, label %861

; <label>:676:                                    ; preds = %661
  unreachable

; <label>:677:                                    ; preds = %17, %2
  %678 = alloca %"class.std::vector"*, align 8
  %679 = alloca i64, align 8
  %680 = alloca i64, align 8
  %681 = alloca i64, align 8
  %682 = alloca %"class.std::vector.0"*, align 8
  %683 = alloca %"class.std::vector.0"*, align 8
  %684 = alloca i8*
  %685 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %678, align 8
  store i64 %1, i64* %679, align 8
  %686 = load %"class.std::vector"*, %"class.std::vector"** %678, align 8
  %687 = load i64, i64* %679, align 8
  %688 = icmp ne i64 %687, 0
  br label %17

; <label>:689:                                    ; preds = %69, %43
  %690 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %691 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %690, i32 0, i32 0
  %692 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %691, i32 0, i32 2
  %693 = load %"class.std::vector.0"*, %"class.std::vector.0"** %692, align 8
  %694 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %695 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %694, i32 0, i32 0
  %696 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %695, i32 0, i32 1
  %697 = load %"class.std::vector.0"*, %"class.std::vector.0"** %696, align 8
  %698 = ptrtoint %"class.std::vector.0"* %693 to i64
  %699 = ptrtoint %"class.std::vector.0"* %697 to i64
  %700 = sub i64 %698, 3093627821721051373
  %701 = sub i64 %700, %699
  %702 = add i64 %701, 3093627821721051373
  %703 = sub i64 %698, %699
  %704 = mul i64 %702, %699
  %705 = add i64 %698, 4372651260606122913
  %706 = sub i64 %705, %699
  %707 = sub i64 %706, 4372651260606122913
  %708 = sub i64 %698, %699
  %709 = mul i64 %707, %699
  %710 = sub i64 0, %699
  %711 = add i64 %698, %710
  %712 = sub i64 %698, %699
  %713 = mul i64 %711, %699
  %714 = shl i64 %698, %699
  %715 = shl i64 %698, %699
  %716 = shl i64 %698, %699
  %717 = sub i64 %698, -1741608688933173483
  %718 = sub i64 %717, %699
  %719 = add i64 %718, -1741608688933173483
  %720 = sub i64 %698, %699
  %721 = sub i64 0, 24
  %722 = add i64 %719, %721
  %723 = sub i64 %719, 24
  %724 = mul i64 %722, 24
  %725 = sub i64 0, %719
  %726 = add i64 0, %725
  %727 = sub i64 0, %719
  %728 = add i64 %726, 6861858563213510465
  %729 = add i64 %728, 24
  %730 = sub i64 %729, 6861858563213510465
  %731 = add i64 %726, 24
  %732 = add i64 %719, 1479332037353998730
  %733 = sub i64 %732, 24
  %734 = sub i64 %733, 1479332037353998730
  %735 = sub i64 %719, 24
  %736 = mul i64 %734, 24
  %737 = shl i64 %719, 24
  %738 = add i64 %719, 7395732069543644875
  %739 = sub i64 %738, 24
  %740 = sub i64 %739, 7395732069543644875
  %741 = sub i64 %719, 24
  %742 = mul i64 %740, 24
  %743 = sdiv exact i64 %719, 24
  %744 = load i64, i64* %19, align 8
  %745 = icmp uge i64 %743, %744
  br label %69

; <label>:746:                                    ; preds = %140, %113
  %747 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %748 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %747, i32 0, i32 0
  %749 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %748, i32 0, i32 1
  %750 = load %"class.std::vector.0"*, %"class.std::vector.0"** %749, align 8
  %751 = load i64, i64* %19, align 8
  %752 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %753 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %752) #3
  %754 = call %"class.std::vector.0"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::vector.0"* %750, i64 %751, %"class.std::allocator"* dereferenceable(1) %753)
  %755 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %756 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %755, i32 0, i32 0
  %757 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %756, i32 0, i32 1
  store %"class.std::vector.0"* %754, %"class.std::vector.0"** %757, align 8
  br label %140

; <label>:758:                                    ; preds = %214, %199
  store %"class.std::vector.0"* %198, %"class.std::vector.0"** %23, align 8
  %759 = load %"class.std::vector.0"*, %"class.std::vector.0"** %23, align 8
  %760 = load i64, i64* %19, align 8
  %761 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %762 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %761) #3
  br label %214

; <label>:763:                                    ; preds = %262, %235
  store %"class.std::vector.0"* %234, %"class.std::vector.0"** %23, align 8
  br label %262

; <label>:764:                                    ; preds = %320, %294
  %765 = load i8*, i8** %24, align 8
  %766 = call i8* @__cxa_begin_catch(i8* %765) #3
  %767 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %768 = load %"class.std::vector.0"*, %"class.std::vector.0"** %23, align 8
  %769 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %770 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %769) #3
  br label %320

; <label>:771:                                    ; preds = %371, %357
  br label %371

; <label>:772:                                    ; preds = %401, %387
  %773 = landingpad { i8*, i32 }
          cleanup
  %774 = extractvalue { i8*, i32 } %773, 0
  store i8* %774, i8** %24, align 8
  %775 = extractvalue { i8*, i32 } %773, 1
  store i32 %775, i32* %25, align 4
  br label %401

; <label>:776:                                    ; preds = %448, %421
  %777 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %778 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %777, i32 0, i32 0
  %779 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %778, i32 0, i32 0
  %780 = load %"class.std::vector.0"*, %"class.std::vector.0"** %779, align 8
  %781 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %782 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %781, i32 0, i32 0
  %783 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %782, i32 0, i32 1
  %784 = load %"class.std::vector.0"*, %"class.std::vector.0"** %783, align 8
  %785 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %786 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %785) #3
  call void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.0"* %780, %"class.std::vector.0"* %784, %"class.std::allocator"* dereferenceable(1) %786)
  %787 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %788 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %789 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %788, i32 0, i32 0
  %790 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %789, i32 0, i32 0
  %791 = load %"class.std::vector.0"*, %"class.std::vector.0"** %790, align 8
  %792 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %793 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %792, i32 0, i32 0
  %794 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %793, i32 0, i32 2
  %795 = load %"class.std::vector.0"*, %"class.std::vector.0"** %794, align 8
  %796 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %797 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %796, i32 0, i32 0
  %798 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %797, i32 0, i32 0
  %799 = load %"class.std::vector.0"*, %"class.std::vector.0"** %798, align 8
  %800 = ptrtoint %"class.std::vector.0"* %795 to i64
  %801 = ptrtoint %"class.std::vector.0"* %799 to i64
  %802 = sub i64 0, %801
  %803 = add i64 %800, %802
  %804 = sub i64 %800, %801
  %805 = mul i64 %803, %801
  %806 = shl i64 %800, %801
  %807 = sub i64 %800, -6204093712680242332
  %808 = sub i64 %807, %801
  %809 = add i64 %808, -6204093712680242332
  %810 = sub i64 %800, %801
  %811 = mul i64 %809, %801
  %812 = sub i64 %800, -7037409194390796439
  %813 = sub i64 %812, %801
  %814 = add i64 %813, -7037409194390796439
  %815 = sub i64 %800, %801
  %816 = mul i64 %814, %801
  %817 = shl i64 %800, %801
  %818 = shl i64 %800, %801
  %819 = add i64 %800, -8823774725442113862
  %820 = sub i64 %819, %801
  %821 = sub i64 %820, -8823774725442113862
  %822 = sub i64 %800, %801
  %823 = sub i64 %821, 320399975672917738
  %824 = sub i64 %823, 24
  %825 = add i64 %824, 320399975672917738
  %826 = sub i64 %821, 24
  %827 = mul i64 %825, 24
  %828 = add i64 %821, 1746554961464908213
  %829 = sub i64 %828, 24
  %830 = sub i64 %829, 1746554961464908213
  %831 = sub i64 %821, 24
  %832 = mul i64 %830, 24
  %833 = shl i64 %821, 24
  %834 = add i64 %821, -8881041338932132841
  %835 = sub i64 %834, 24
  %836 = sub i64 %835, -8881041338932132841
  %837 = sub i64 %821, 24
  %838 = mul i64 %836, 24
  %839 = sub i64 %821, -8827755229144028056
  %840 = sub i64 %839, 24
  %841 = add i64 %840, -8827755229144028056
  %842 = sub i64 %821, 24
  %843 = mul i64 %841, 24
  %844 = sdiv exact i64 %821, 24
  call void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %787, %"class.std::vector.0"* %791, i64 %844)
  %845 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %846 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %847 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %846, i32 0, i32 0
  %848 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %847, i32 0, i32 0
  store %"class.std::vector.0"* %845, %"class.std::vector.0"** %848, align 8
  %849 = load %"class.std::vector.0"*, %"class.std::vector.0"** %23, align 8
  %850 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %851 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %850, i32 0, i32 0
  %852 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %851, i32 0, i32 1
  store %"class.std::vector.0"* %849, %"class.std::vector.0"** %852, align 8
  %853 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %854 = load i64, i64* %20, align 8
  %855 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %853, i64 %854
  %856 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %857 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %856, i32 0, i32 0
  %858 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %857, i32 0, i32 2
  store %"class.std::vector.0"* %855, %"class.std::vector.0"** %858, align 8
  br label %448

; <label>:859:                                    ; preds = %545, %518
  br label %545

; <label>:860:                                    ; preds = %598, %572
  br label %598

; <label>:861:                                    ; preds = %661, %634
  br label %661
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector"*, %"class.std::vector.0"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %7 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %11) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.0"* %6, %"class.std::vector.0"* %10, %"class.std::allocator"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %15 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::vector.0"* %14, %"class.std::vector.0"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #7
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::vector.0"*, i64, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::vector.0"* @_ZSt25__uninitialized_default_nIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEmET_S7_T0_(%"class.std::vector.0"* %7, i64 %8)
  ret %"class.std::vector.0"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector"*
  %9 = alloca %"class.std::vector"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  store %"class.std::vector"* %14, %"class.std::vector"** %8
  %15 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %16 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"* %15) #3
  %17 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %18 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %17) #3
  %19 = sub i64 %16, -6935579683550263858
  %20 = sub i64 %19, %18
  %21 = add i64 %20, -6935579683550263858
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 1468006279, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %220
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 1468006279, label %29
    i32 -355670378, label %34
    i32 -9492096, label %62
    i32 216943369, label %78
    i32 -724530619, label %79
    i32 1297329583, label %94
    i32 840080436, label %136
    i32 -2112996736, label %139
    i32 2127277131, label %145
    i32 264909997, label %160
    i32 117560628, label %177
    i32 1129830366, label %179
    i32 -1268157466, label %181
    i32 1221528385, label %183
    i32 -98725892, label %185
    i32 -412668885, label %217
  ]

; <label>:28:                                     ; preds = %26
  br label %220

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -355670378, i32 -724530619
  store i32 %33, i32* %24
  br label %220

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.77
  %36 = load i32, i32* @y.78
  %37 = add i32 %35, 1528068469
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1528068469
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -9492096, i32 1221528385
  store i32 %61, i32* %24
  br label %220

; <label>:62:                                     ; preds = %26
  %63 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %63) #12
  %64 = load i32, i32* @x.77
  %65 = load i32, i32* @y.78
  %66 = sub i32 0, 1
  %67 = add i32 %64, %66
  %68 = sub i32 %64, 1
  %69 = mul i32 %64, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %65, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  %77 = select i1 %75, i32 216943369, i32 1221528385
  store i32 %77, i32* %24
  br label %220

; <label>:78:                                     ; preds = %26
  unreachable

; <label>:79:                                     ; preds = %26
  %80 = load i32, i32* @x.77
  %81 = load i32, i32* @y.78
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 1297329583, i32 -98725892
  store i32 %93, i32* %24
  br label %220

; <label>:94:                                     ; preds = %26
  %95 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %96 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %95) #3
  %97 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %98 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %97) #3
  store i64 %98, i64* %13, align 8
  %99 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %96, 6063862249964639936
  %102 = add i64 %101, %100
  %103 = add i64 %102, 6063862249964639936
  %104 = add i64 %96, %100
  store i64 %103, i64* %12, align 8
  %105 = load i64, i64* %12, align 8
  %106 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %107 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %106) #3
  %108 = icmp ult i64 %105, %107
  store i1 %108, i1* %5
  %109 = load i32, i32* @x.77
  %110 = load i32, i32* @y.78
  %111 = sub i32 %109, 968203190
  %112 = sub i32 %111, 1
  %113 = add i32 %112, 968203190
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 false, true
  %122 = and i1 %119, false
  %123 = and i1 %117, %121
  %124 = and i1 %120, false
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 false, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  %135 = select i1 %133, i32 840080436, i32 -98725892
  store i32 %135, i32* %24
  br label %220

; <label>:136:                                    ; preds = %26
  %137 = load volatile i1, i1* %5
  %138 = select i1 %137, i32 2127277131, i32 -2112996736
  store i32 %138, i32* %24
  br label %220

; <label>:139:                                    ; preds = %26
  %140 = load i64, i64* %12, align 8
  %141 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %142 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"* %141) #3
  %143 = icmp ugt i64 %140, %142
  %144 = select i1 %143, i32 2127277131, i32 1129830366
  store i32 %144, i32* %24
  br label %220

; <label>:145:                                    ; preds = %26
  %146 = load i32, i32* @x.77
  %147 = load i32, i32* @y.78
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 264909997, i32 -412668885
  store i32 %159, i32* %24
  br label %220

; <label>:160:                                    ; preds = %26
  %161 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %162 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"* %161) #3
  store i64 %162, i64* %4
  %163 = load i32, i32* @x.77
  %164 = load i32, i32* @y.78
  %165 = sub i32 0, 1
  %166 = add i32 %163, %165
  %167 = sub i32 %163, 1
  %168 = mul i32 %163, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %164, 10
  %172 = and i1 %170, %171
  %173 = xor i1 %170, %171
  %174 = or i1 %172, %173
  %175 = or i1 %170, %171
  %176 = select i1 %174, i32 117560628, i32 -412668885
  store i32 %176, i32* %24
  br label %220

; <label>:177:                                    ; preds = %26
  store i32 -1268157466, i32* %24
  %178 = load volatile i64, i64* %4
  store i64 %178, i64* %25
  br label %220

; <label>:179:                                    ; preds = %26
  %180 = load i64, i64* %12, align 8
  store i32 -1268157466, i32* %24
  store i64 %180, i64* %25
  br label %220

; <label>:181:                                    ; preds = %26
  %182 = load i64, i64* %25
  ret i64 %182

; <label>:183:                                    ; preds = %26
  %184 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %184) #12
  store i32 -9492096, i32* %24
  br label %220

; <label>:185:                                    ; preds = %26
  %186 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %187 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %186) #3
  %188 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %189 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %188) #3
  store i64 %189, i64* %13, align 8
  %190 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %191 = load i64, i64* %190, align 8
  %192 = shl i64 %187, %191
  %193 = sub i64 0, %187
  %194 = add i64 0, %193
  %195 = sub i64 0, %187
  %196 = sub i64 0, %194
  %197 = sub i64 0, %191
  %198 = add i64 %196, %197
  %199 = sub i64 0, %198
  %200 = add i64 %194, %191
  %201 = add i64 %187, 2794055170498852432
  %202 = sub i64 %201, %191
  %203 = sub i64 %202, 2794055170498852432
  %204 = sub i64 %187, %191
  %205 = mul i64 %203, %191
  %206 = sub i64 0, %191
  %207 = add i64 %187, %206
  %208 = sub i64 %187, %191
  %209 = mul i64 %207, %191
  %210 = sub i64 0, %191
  %211 = sub i64 %187, %210
  %212 = add i64 %187, %191
  store i64 %211, i64* %12, align 8
  %213 = load i64, i64* %12, align 8
  %214 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %215 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %214) #3
  %216 = icmp ult i64 %213, %215
  store i32 1297329583, i32* %24
  br label %220

; <label>:217:                                    ; preds = %26
  %218 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %219 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"* %218) #3
  store i32 264909997, i32* %24
  br label %220

; <label>:220:                                    ; preds = %217, %185, %183, %179, %177, %160, %145, %139, %136, %94, %79, %62, %34, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.79
  %10 = load i32, i32* @y.80
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 965343738, i32* %18
  %19 = alloca %"class.std::vector.0"*
  br label %20

; <label>:20:                                     ; preds = %2, %130
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 965343738, label %23
    i32 -149632266, label %31
    i32 308820843, label %53
    i32 -570533734, label %56
    i32 1638293065, label %63
    i32 1272995062, label %64
    i32 1395123119, label %93
    i32 2010602032, label %121
    i32 1866017154, label %123
    i32 1320356169, label %129
  ]

; <label>:22:                                     ; preds = %20
  br label %130

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -149632266, i32 1866017154
  store i32 %30, i32* %18
  br label %130

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %32, align 8
  %34 = load volatile i64*, i64** %6
  store i64 %1, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %32, align 8
  store %"struct.std::_Vector_base"* %35, %"struct.std::_Vector_base"** %5
  %36 = load volatile i64*, i64** %6
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 0
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.79
  %40 = load i32, i32* @y.80
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 308820843, i32 1866017154
  store i32 %52, i32* %18
  br label %130

; <label>:53:                                     ; preds = %20
  %54 = load volatile i1, i1* %4
  %55 = select i1 %54, i32 -570533734, i32 1638293065
  store i32 %55, i32* %18
  br label %130

; <label>:56:                                     ; preds = %20
  %57 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %58 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %58 to %"class.std::allocator"*
  %60 = load volatile i64*, i64** %6
  %61 = load i64, i64* %60, align 8
  %62 = call %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEE8allocateERS6_m(%"class.std::allocator"* dereferenceable(1) %59, i64 %61)
  store i32 1272995062, i32* %18
  store %"class.std::vector.0"* %62, %"class.std::vector.0"** %19
  br label %130

; <label>:63:                                     ; preds = %20
  store i32 1272995062, i32* %18
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %19
  br label %130

; <label>:64:                                     ; preds = %20
  %65 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19
  store %"class.std::vector.0"* %65, %"class.std::vector.0"** %3
  %66 = load i32, i32* @x.79
  %67 = load i32, i32* @y.80
  %68 = sub i32 %66, 1795342981
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 1795342981
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 1395123119, i32 1320356169
  store i32 %92, i32* %18
  br label %130

; <label>:93:                                     ; preds = %20
  %94 = load i32, i32* @x.79
  %95 = load i32, i32* @y.80
  %96 = sub i32 %94, -429431244
  %97 = sub i32 %96, 1
  %98 = add i32 %97, -429431244
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 false, true
  %107 = and i1 %104, false
  %108 = and i1 %102, %106
  %109 = and i1 %105, false
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 false, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 2010602032, i32 1320356169
  store i32 %120, i32* %18
  br label %130

; <label>:121:                                    ; preds = %20
  %122 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %122

; <label>:123:                                    ; preds = %20
  %124 = alloca %"struct.std::_Vector_base"*, align 8
  %125 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %124, align 8
  store i64 %1, i64* %125, align 8
  %126 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %124, align 8
  %127 = load i64, i64* %125, align 8
  %128 = icmp ne i64 %127, 0
  store i32 -149632266, i32* %18
  br label %130

; <label>:129:                                    ; preds = %20
  store i32 1395123119, i32* %18
  br label %130

; <label>:130:                                    ; preds = %129, %123, %93, %64, %63, %56, %53, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.0"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.81
  %9 = load i32, i32* @y.82
  %10 = sub i32 %8, -973486617
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -973486617
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 546678799, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %98
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 546678799, label %22
    i32 -639507573, label %30
    i32 -1878051624, label %76
    i32 -941464296, label %78
  ]

; <label>:21:                                     ; preds = %19
  br label %98

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -639507573, i32 -941464296
  store i32 %29, i32* %18
  br label %98

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.0"*, align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca %"class.std::vector.0"*, align 8
  %34 = alloca %"class.std::allocator"*, align 8
  %35 = alloca %"class.std::move_iterator", align 8
  %36 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %31, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %32, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %33, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %34, align 8
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %38 = call %"class.std::vector.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.0"* %37)
  %39 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  store %"class.std::vector.0"* %38, %"class.std::vector.0"** %39, align 8
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %41 = call %"class.std::vector.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.0"* %40)
  %42 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %36, i32 0, i32 0
  store %"class.std::vector.0"* %41, %"class.std::vector.0"** %42, align 8
  %43 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %44 = load %"class.std::allocator"*, %"class.std::allocator"** %34, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  %46 = load %"class.std::vector.0"*, %"class.std::vector.0"** %45, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %36, i32 0, i32 0
  %48 = load %"class.std::vector.0"*, %"class.std::vector.0"** %47, align 8
  %49 = call %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::vector.0"* %46, %"class.std::vector.0"* %48, %"class.std::vector.0"* %43, %"class.std::allocator"* dereferenceable(1) %44)
  store %"class.std::vector.0"* %49, %"class.std::vector.0"** %5
  %50 = load i32, i32* @x.81
  %51 = load i32, i32* @y.82
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1878051624, i32 -941464296
  store i32 %75, i32* %18
  br label %98

; <label>:76:                                     ; preds = %19
  %77 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  ret %"class.std::vector.0"* %77

; <label>:78:                                     ; preds = %19
  %79 = alloca %"class.std::vector.0"*, align 8
  %80 = alloca %"class.std::vector.0"*, align 8
  %81 = alloca %"class.std::vector.0"*, align 8
  %82 = alloca %"class.std::allocator"*, align 8
  %83 = alloca %"class.std::move_iterator", align 8
  %84 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %79, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %80, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %81, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %82, align 8
  %85 = load %"class.std::vector.0"*, %"class.std::vector.0"** %79, align 8
  %86 = call %"class.std::vector.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.0"* %85)
  %87 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  store %"class.std::vector.0"* %86, %"class.std::vector.0"** %87, align 8
  %88 = load %"class.std::vector.0"*, %"class.std::vector.0"** %80, align 8
  %89 = call %"class.std::vector.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.0"* %88)
  %90 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  store %"class.std::vector.0"* %89, %"class.std::vector.0"** %90, align 8
  %91 = load %"class.std::vector.0"*, %"class.std::vector.0"** %81, align 8
  %92 = load %"class.std::allocator"*, %"class.std::allocator"** %82, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  %94 = load %"class.std::vector.0"*, %"class.std::vector.0"** %93, align 8
  %95 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  %96 = load %"class.std::vector.0"*, %"class.std::vector.0"** %95, align 8
  %97 = call %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::vector.0"* %94, %"class.std::vector.0"* %96, %"class.std::vector.0"* %91, %"class.std::allocator"* dereferenceable(1) %92)
  store i32 -639507573, i32* %18
  br label %98

; <label>:98:                                     ; preds = %78, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEvT_S7_(%"class.std::vector.0"* %7, %"class.std::vector.0"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"*, %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %4
  %11 = alloca i32
  store i32 -40376468, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %70
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -40376468, label %15
    i32 -655889084, label %19
    i32 -215673629, label %25
    i32 -1976837858, label %53
    i32 -923868603, label %68
    i32 -806738236, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %70

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %17 = icmp ne %"class.std::vector.0"* %16, null
  %18 = select i1 %17, i32 -655889084, i32 -215673629
  store i32 %18, i32* %11
  br label %70

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %21 to %"class.std::allocator"*
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEE10deallocateERS6_PS5_m(%"class.std::allocator"* dereferenceable(1) %22, %"class.std::vector.0"* %23, i64 %24)
  store i32 -215673629, i32* %11
  br label %70

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.85
  %27 = load i32, i32* @y.86
  %28 = sub i32 %26, 1780048414
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 1780048414
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -1976837858, i32 -806738236
  store i32 %52, i32* %11
  br label %70

; <label>:53:                                     ; preds = %12
  %54 = load i32, i32* @x.85
  %55 = load i32, i32* @y.86
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -923868603, i32 -806738236
  store i32 %67, i32* %11
  br label %70

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  store i32 -1976837858, i32* %11
  br label %70

; <label>:70:                                     ; preds = %69, %53, %25, %19, %15, %14
  br label %12
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt25__uninitialized_default_nIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEmET_S7_T0_(%"class.std::vector.0"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.0"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EEmEET_S9_T0_(%"class.std::vector.0"* %6, i64 %7)
  ret %"class.std::vector.0"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EEmEET_S9_T0_(%"class.std::vector.0"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.89
  %4 = load i32, i32* @y.90
  %5 = add i32 %3, 1868401846
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 1868401846
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %254

; <label>:29:                                     ; preds = %2, %254
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  store i64 %1, i64* %31, align 8
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  store %"class.std::vector.0"* %35, %"class.std::vector.0"** %32, align 8
  %36 = load i32, i32* @x.89
  %37 = load i32, i32* @y.90
  %38 = sub i32 %36, 927857736
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 927857736
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %254

; <label>:62:                                     ; preds = %29
  br label %63

; <label>:63:                                     ; preds = %131, %62
  %64 = load i64, i64* %31, align 8
  %65 = icmp ugt i64 %64, 0
  br i1 %65, label %66, label %195

; <label>:66:                                     ; preds = %63
  %67 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %68 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEPT_RS6_(%"class.std::vector.0"* dereferenceable(24) %67) #3
  invoke void @_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJEEvPT_DpOT0_(%"class.std::vector.0"* %68)
          to label %69 unwind label %132

; <label>:69:                                     ; preds = %66
  br label %70

; <label>:70:                                     ; preds = %69
  %71 = load i32, i32* @x.89
  %72 = load i32, i32* @y.90
  %73 = sub i32 %71, 1471106584
  %74 = sub i32 %73, 1
  %75 = add i32 %74, 1471106584
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %261

; <label>:97:                                     ; preds = %70, %261
  %98 = load i64, i64* %31, align 8
  %99 = sub i64 %98, -1818619554395090866
  %100 = add i64 %99, -1
  %101 = add i64 %100, -1818619554395090866
  %102 = add i64 %98, -1
  store i64 %101, i64* %31, align 8
  %103 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %104 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %103, i32 1
  store %"class.std::vector.0"* %104, %"class.std::vector.0"** %32, align 8
  %105 = load i32, i32* @x.89
  %106 = load i32, i32* @y.90
  %107 = add i32 %105, 809481982
  %108 = sub i32 %107, 1
  %109 = sub i32 %108, 809481982
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  br i1 %129, label %131, label %261

; <label>:131:                                    ; preds = %97
  br label %63

; <label>:132:                                    ; preds = %66
  %133 = load i32, i32* @x.89
  %134 = load i32, i32* @y.90
  %135 = sub i32 0, 1
  %136 = add i32 %133, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 %133, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %134, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 false, true
  %145 = and i1 %142, false
  %146 = and i1 %140, %144
  %147 = and i1 %143, false
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 false, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  br i1 %156, label %158, label %297

; <label>:158:                                    ; preds = %132, %297
  %159 = landingpad { i8*, i32 }
          catch i8* null
  %160 = extractvalue { i8*, i32 } %159, 0
  store i8* %160, i8** %33, align 8
  %161 = extractvalue { i8*, i32 } %159, 1
  store i32 %161, i32* %34, align 4
  %162 = load i32, i32* @x.89
  %163 = load i32, i32* @y.90
  %164 = add i32 %162, 837714023
  %165 = sub i32 %164, 1
  %166 = sub i32 %165, 837714023
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = xor i1 %170, true
  %173 = xor i1 %171, true
  %174 = xor i1 false, true
  %175 = and i1 %172, false
  %176 = and i1 %170, %174
  %177 = and i1 %173, false
  %178 = and i1 %171, %174
  %179 = or i1 %175, %176
  %180 = or i1 %177, %178
  %181 = xor i1 %179, %180
  %182 = or i1 %172, %173
  %183 = xor i1 %182, true
  %184 = or i1 false, %174
  %185 = and i1 %183, %184
  %186 = or i1 %181, %185
  %187 = or i1 %170, %171
  br i1 %186, label %188, label %297

; <label>:188:                                    ; preds = %158
  br label %189

; <label>:189:                                    ; preds = %188
  %190 = load i8*, i8** %33, align 8
  %191 = call i8* @__cxa_begin_catch(i8* %190) #3
  %192 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %193 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEvT_S7_(%"class.std::vector.0"* %192, %"class.std::vector.0"* %193)
          to label %194 unwind label %197

; <label>:194:                                    ; preds = %189
  invoke void @__cxa_rethrow() #12
          to label %253 unwind label %197

; <label>:195:                                    ; preds = %63
  %196 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  ret %"class.std::vector.0"* %196

; <label>:197:                                    ; preds = %194, %189
  %198 = landingpad { i8*, i32 }
          cleanup
  %199 = extractvalue { i8*, i32 } %198, 0
  store i8* %199, i8** %33, align 8
  %200 = extractvalue { i8*, i32 } %198, 1
  store i32 %200, i32* %34, align 4
  invoke void @__cxa_end_catch()
          to label %201 unwind label %250

; <label>:201:                                    ; preds = %197
  br label %203
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:203:                                    ; preds = %201
  %204 = load i32, i32* @x.89
  %205 = load i32, i32* @y.90
  %206 = add i32 %204, -1873158549
  %207 = sub i32 %206, 1
  %208 = sub i32 %207, -1873158549
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 false, true
  %217 = and i1 %214, false
  %218 = and i1 %212, %216
  %219 = and i1 %215, false
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 false, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  br i1 %228, label %230, label %301

; <label>:230:                                    ; preds = %203, %301
  %231 = load i8*, i8** %33, align 8
  %232 = load i32, i32* %34, align 4
  %233 = insertvalue { i8*, i32 } undef, i8* %231, 0
  %234 = insertvalue { i8*, i32 } %233, i32 %232, 1
  %235 = load i32, i32* @x.89
  %236 = load i32, i32* @y.90
  %237 = sub i32 %235, -2132339080
  %238 = sub i32 %237, 1
  %239 = add i32 %238, -2132339080
  %240 = sub i32 %235, 1
  %241 = mul i32 %235, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %236, 10
  %245 = and i1 %243, %244
  %246 = xor i1 %243, %244
  %247 = or i1 %245, %246
  %248 = or i1 %243, %244
  br i1 %247, label %249, label %301

; <label>:249:                                    ; preds = %230
  resume { i8*, i32 } %234

; <label>:250:                                    ; preds = %197
  %251 = landingpad { i8*, i32 }
          catch i8* null
  %252 = extractvalue { i8*, i32 } %251, 0
  call void @__clang_call_terminate(i8* %252) #7
  unreachable

; <label>:253:                                    ; preds = %194
  unreachable

; <label>:254:                                    ; preds = %29, %2
  %255 = alloca %"class.std::vector.0"*, align 8
  %256 = alloca i64, align 8
  %257 = alloca %"class.std::vector.0"*, align 8
  %258 = alloca i8*
  %259 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %255, align 8
  store i64 %1, i64* %256, align 8
  %260 = load %"class.std::vector.0"*, %"class.std::vector.0"** %255, align 8
  store %"class.std::vector.0"* %260, %"class.std::vector.0"** %257, align 8
  br label %29

; <label>:261:                                    ; preds = %97, %70
  %262 = load i64, i64* %31, align 8
  %263 = sub i64 %262, -8038380519368360034
  %264 = sub i64 %263, -1
  %265 = add i64 %264, -8038380519368360034
  %266 = sub i64 %262, -1
  %267 = mul i64 %265, -1
  %268 = sub i64 0, -1
  %269 = add i64 %262, %268
  %270 = sub i64 %262, -1
  %271 = mul i64 %269, -1
  %272 = sub i64 0, -3208331831683154220
  %273 = sub i64 %272, %262
  %274 = add i64 %273, -3208331831683154220
  %275 = sub i64 0, %262
  %276 = sub i64 %274, 6968851377736381021
  %277 = add i64 %276, -1
  %278 = add i64 %277, 6968851377736381021
  %279 = add i64 %274, -1
  %280 = add i64 %262, -3785746639813115569
  %281 = sub i64 %280, -1
  %282 = sub i64 %281, -3785746639813115569
  %283 = sub i64 %262, -1
  %284 = mul i64 %282, -1
  %285 = sub i64 %262, -795589568203475475
  %286 = sub i64 %285, -1
  %287 = add i64 %286, -795589568203475475
  %288 = sub i64 %262, -1
  %289 = mul i64 %287, -1
  %290 = sub i64 0, %262
  %291 = sub i64 0, -1
  %292 = add i64 %290, %291
  %293 = sub i64 0, %292
  %294 = add i64 %262, -1
  store i64 %293, i64* %31, align 8
  %295 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %296 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %295, i32 1
  store %"class.std::vector.0"* %296, %"class.std::vector.0"** %32, align 8
  br label %97

; <label>:297:                                    ; preds = %158, %132
  %298 = landingpad { i8*, i32 }
          catch i8* null
  %299 = extractvalue { i8*, i32 } %298, 0
  store i8* %299, i8** %33, align 8
  %300 = extractvalue { i8*, i32 } %298, 1
  store i32 %300, i32* %34, align 4
  br label %158

; <label>:301:                                    ; preds = %230, %203
  %302 = load i8*, i8** %33, align 8
  %303 = load i32, i32* %34, align 4
  %304 = insertvalue { i8*, i32 } undef, i8* %302, 0
  %305 = insertvalue { i8*, i32 } %304, i32 %303, 1
  br label %230
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJEEvPT_DpOT0_(%"class.std::vector.0"*) #5 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.0"*
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2Ev(%"class.std::vector.0"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEPT_RS6_(%"class.std::vector.0"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.0"*
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEvT_S7_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EEEEvT_S9_(%"class.std::vector.0"* %5, %"class.std::vector.0"* %6)
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EEEEvT_S9_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  %6 = alloca i32
  store i32 -2033098922, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %59
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -2033098922, label %10
    i32 -2086100491, label %26
    i32 759685077, label %45
    i32 -1443083598, label %48
    i32 -758700812, label %51
    i32 527264185, label %54
    i32 1213842447, label %55
  ]

; <label>:9:                                      ; preds = %7
  br label %59

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.97
  %12 = load i32, i32* @y.98
  %13 = sub i32 %11, 324958871
  %14 = sub i32 %13, 1
  %15 = add i32 %14, 324958871
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2086100491, i32 1213842447
  store i32 %25, i32* %6
  br label %59

; <label>:26:                                     ; preds = %7
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %29 = icmp ne %"class.std::vector.0"* %27, %28
  store i1 %29, i1* %3
  %30 = load i32, i32* @x.97
  %31 = load i32, i32* @y.98
  %32 = sub i32 %30, 343834521
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 343834521
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 759685077, i32 1213842447
  store i32 %44, i32* %6
  br label %59

; <label>:45:                                     ; preds = %7
  %46 = load volatile i1, i1* %3
  %47 = select i1 %46, i32 -1443083598, i32 527264185
  store i32 %47, i32* %6
  br label %59

; <label>:48:                                     ; preds = %7
  %49 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %50 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEPT_RS6_(%"class.std::vector.0"* dereferenceable(24) %49) #3
  call void @_ZSt8_DestroyISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEvPT_(%"class.std::vector.0"* %50)
  store i32 -758700812, i32* %6
  br label %59

; <label>:51:                                     ; preds = %7
  %52 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %53 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %52, i32 1
  store %"class.std::vector.0"* %53, %"class.std::vector.0"** %4, align 8
  store i32 -2033098922, i32* %6
  br label %59

; <label>:54:                                     ; preds = %7
  ret void

; <label>:55:                                     ; preds = %7
  %56 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %57 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %58 = icmp ne %"class.std::vector.0"* %56, %57
  store i32 -2086100491, i32* %6
  br label %59

; <label>:59:                                     ; preds = %55, %51, %48, %45, %26, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEvPT_(%"class.std::vector.0"*) #5 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EED2Ev(%"class.std::vector.0"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.101
  %6 = load i32, i32* @y.102
  %7 = sub i32 %5, -2047813043
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2047813043
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 246493222, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 246493222, label %19
    i32 -2130479433, label %39
    i32 -1107931785, label %60
    i32 915183984, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2130479433, i32 915183984
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %42) #3
  %44 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEE8max_sizeERKS6_(%"class.std::allocator"* dereferenceable(1) %43) #3
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.101
  %46 = load i32, i32* @y.102
  %47 = add i32 %45, -1654860360
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1654860360
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1107931785, i32 915183984
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %63, align 8
  %64 = load %"class.std::vector"*, %"class.std::vector"** %63, align 8
  %65 = bitcast %"class.std::vector"* %64 to %"struct.std::_Vector_base"*
  %66 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %65) #3
  %67 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEE8max_sizeERKS6_(%"class.std::allocator"* dereferenceable(1) %66) #3
  store i32 -2130479433, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.103
  %11 = load i32, i32* @y.104
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1393007207, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %212
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1393007207, label %23
    i32 1210791976, label %43
    i32 -1260283066, label %70
    i32 1160060545, label %73
    i32 -768956027, label %89
    i32 454449240, label %108
    i32 980919093, label %109
    i32 -1157731750, label %125
    i32 1014845044, label %143
    i32 -1424606398, label %144
    i32 167498101, label %160
    i32 1391376093, label %190
    i32 -1954817502, label %192
    i32 443716974, label %201
    i32 -1886584432, label %205
    i32 462476993, label %209
  ]

; <label>:22:                                     ; preds = %20
  br label %212

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1210791976, i32 -1954817502
  store i32 %42, i32* %19
  br label %212

; <label>:43:                                     ; preds = %20
  %44 = alloca i64*, align 8
  store i64** %44, i64*** %7
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %6
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %5
  %47 = load volatile i64**, i64*** %6
  store i64* %0, i64** %47, align 8
  %48 = load volatile i64**, i64*** %5
  store i64* %1, i64** %48, align 8
  %49 = load volatile i64**, i64*** %6
  %50 = load i64*, i64** %49, align 8
  %51 = load i64, i64* %50, align 8
  %52 = load volatile i64**, i64*** %5
  %53 = load i64*, i64** %52, align 8
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %51, %54
  store i1 %55, i1* %4
  %56 = load i32, i32* @x.103
  %57 = load i32, i32* @y.104
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -1260283066, i32 -1954817502
  store i32 %69, i32* %19
  br label %212

; <label>:70:                                     ; preds = %20
  %71 = load volatile i1, i1* %4
  %72 = select i1 %71, i32 1160060545, i32 980919093
  store i32 %72, i32* %19
  br label %212

; <label>:73:                                     ; preds = %20
  %74 = load i32, i32* @x.103
  %75 = load i32, i32* @y.104
  %76 = add i32 %74, 974015218
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 974015218
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  %88 = select i1 %86, i32 -768956027, i32 443716974
  store i32 %88, i32* %19
  br label %212

; <label>:89:                                     ; preds = %20
  %90 = load volatile i64**, i64*** %5
  %91 = load i64*, i64** %90, align 8
  %92 = load volatile i64**, i64*** %7
  store i64* %91, i64** %92, align 8
  %93 = load i32, i32* @x.103
  %94 = load i32, i32* @y.104
  %95 = sub i32 %93, 1549392961
  %96 = sub i32 %95, 1
  %97 = add i32 %96, 1549392961
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  %107 = select i1 %105, i32 454449240, i32 443716974
  store i32 %107, i32* %19
  br label %212

; <label>:108:                                    ; preds = %20
  store i32 -1424606398, i32* %19
  br label %212

; <label>:109:                                    ; preds = %20
  %110 = load i32, i32* @x.103
  %111 = load i32, i32* @y.104
  %112 = sub i32 %110, -688443747
  %113 = sub i32 %112, 1
  %114 = add i32 %113, -688443747
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 -1157731750, i32 -1886584432
  store i32 %124, i32* %19
  br label %212

; <label>:125:                                    ; preds = %20
  %126 = load volatile i64**, i64*** %6
  %127 = load i64*, i64** %126, align 8
  %128 = load volatile i64**, i64*** %7
  store i64* %127, i64** %128, align 8
  %129 = load i32, i32* @x.103
  %130 = load i32, i32* @y.104
  %131 = sub i32 0, 1
  %132 = add i32 %129, %131
  %133 = sub i32 %129, 1
  %134 = mul i32 %129, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %130, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  %142 = select i1 %140, i32 1014845044, i32 -1886584432
  store i32 %142, i32* %19
  br label %212

; <label>:143:                                    ; preds = %20
  store i32 -1424606398, i32* %19
  br label %212

; <label>:144:                                    ; preds = %20
  %145 = load i32, i32* @x.103
  %146 = load i32, i32* @y.104
  %147 = sub i32 %145, 1548460368
  %148 = sub i32 %147, 1
  %149 = add i32 %148, 1548460368
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 167498101, i32 462476993
  store i32 %159, i32* %19
  br label %212

; <label>:160:                                    ; preds = %20
  %161 = load volatile i64**, i64*** %7
  %162 = load i64*, i64** %161, align 8
  store i64* %162, i64** %3
  %163 = load i32, i32* @x.103
  %164 = load i32, i32* @y.104
  %165 = sub i32 %163, -42071048
  %166 = sub i32 %165, 1
  %167 = add i32 %166, -42071048
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 true, true
  %176 = and i1 %173, true
  %177 = and i1 %171, %175
  %178 = and i1 %174, true
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 true, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  %189 = select i1 %187, i32 1391376093, i32 462476993
  store i32 %189, i32* %19
  br label %212

; <label>:190:                                    ; preds = %20
  %191 = load volatile i64*, i64** %3
  ret i64* %191

; <label>:192:                                    ; preds = %20
  %193 = alloca i64*, align 8
  %194 = alloca i64*, align 8
  %195 = alloca i64*, align 8
  store i64* %0, i64** %194, align 8
  store i64* %1, i64** %195, align 8
  %196 = load i64*, i64** %194, align 8
  %197 = load i64, i64* %196, align 8
  %198 = load i64*, i64** %195, align 8
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %197, %199
  store i32 1210791976, i32* %19
  br label %212

; <label>:201:                                    ; preds = %20
  %202 = load volatile i64**, i64*** %5
  %203 = load i64*, i64** %202, align 8
  %204 = load volatile i64**, i64*** %7
  store i64* %203, i64** %204, align 8
  store i32 -768956027, i32* %19
  br label %212

; <label>:205:                                    ; preds = %20
  %206 = load volatile i64**, i64*** %6
  %207 = load i64*, i64** %206, align 8
  %208 = load volatile i64**, i64*** %7
  store i64* %207, i64** %208, align 8
  store i32 -1157731750, i32* %19
  br label %212

; <label>:209:                                    ; preds = %20
  %210 = load volatile i64**, i64*** %7
  %211 = load i64*, i64** %210, align 8
  store i32 167498101, i32* %19
  br label %212

; <label>:212:                                    ; preds = %209, %205, %201, %192, %160, %144, %143, %125, %109, %108, %89, %73, %70, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEE8max_sizeERKS6_(%"class.std::allocator"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.105
  %6 = load i32, i32* @y.106
  %7 = add i32 %5, -1368655516
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1368655516
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -498529294, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -498529294, label %19
    i32 -218625514, label %39
    i32 1269140188, label %59
    i32 -1897539113, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -218625514, i32 -1897539113
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %40, align 8
  %41 = load %"class.std::allocator"*, %"class.std::allocator"** %40, align 8
  %42 = bitcast %"class.std::allocator"* %41 to %"class.__gnu_cxx::new_allocator"*
  %43 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.105
  %45 = load i32, i32* @y.106
  %46 = sub i32 %44, 668561126
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 668561126
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1269140188, i32 -1897539113
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %62, align 8
  %63 = load %"class.std::allocator"*, %"class.std::allocator"** %62, align 8
  %64 = bitcast %"class.std::allocator"* %63 to %"class.__gnu_cxx::new_allocator"*
  %65 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %64) #3
  store i32 -218625514, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEE8allocateERS6_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"class.std::vector.0"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 150017677, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %159
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 150017677, label %17
    i32 -195683597, label %22
    i32 93800114, label %50
    i32 567577290, label %78
    i32 2108227303, label %79
    i32 1199391700, label %106
    i32 -2114408011, label %138
    i32 -480423879, label %140
    i32 -1927586316, label %141
  ]

; <label>:16:                                     ; preds = %14
  br label %159

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -195683597, i32 2108227303
  store i32 %21, i32* %13
  br label %159

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.113
  %24 = load i32, i32* @y.114
  %25 = sub i32 %23, 379606921
  %26 = sub i32 %25, 1
  %27 = add i32 %26, 379606921
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 93800114, i32 -480423879
  store i32 %49, i32* %13
  br label %159

; <label>:50:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  %51 = load i32, i32* @x.113
  %52 = load i32, i32* @y.114
  %53 = add i32 %51, 1099849729
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 1099849729
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 567577290, i32 -480423879
  store i32 %77, i32* %13
  br label %159

; <label>:78:                                     ; preds = %14
  unreachable

; <label>:79:                                     ; preds = %14
  %80 = load i32, i32* @x.113
  %81 = load i32, i32* @y.114
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 false, true
  %92 = and i1 %89, false
  %93 = and i1 %87, %91
  %94 = and i1 %90, false
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 false, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  %105 = select i1 %103, i32 1199391700, i32 -1927586316
  store i32 %105, i32* %13
  br label %159

; <label>:106:                                    ; preds = %14
  %107 = load i64, i64* %8, align 8
  %108 = mul i64 %107, 24
  %109 = call i8* @_Znwm(i64 %108)
  %110 = bitcast i8* %109 to %"class.std::vector.0"*
  store %"class.std::vector.0"* %110, %"class.std::vector.0"** %4
  %111 = load i32, i32* @x.113
  %112 = load i32, i32* @y.114
  %113 = sub i32 %111, 1566768671
  %114 = sub i32 %113, 1
  %115 = add i32 %114, 1566768671
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  %137 = select i1 %135, i32 -2114408011, i32 -1927586316
  store i32 %137, i32* %13
  br label %159

; <label>:138:                                    ; preds = %14
  %139 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %139

; <label>:140:                                    ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 93800114, i32* %13
  br label %159

; <label>:141:                                    ; preds = %14
  %142 = load i64, i64* %8, align 8
  %143 = sub i64 0, 24
  %144 = add i64 %142, %143
  %145 = sub i64 %142, 24
  %146 = mul i64 %144, 24
  %147 = shl i64 %142, 24
  %148 = sub i64 0, %142
  %149 = add i64 0, %148
  %150 = sub i64 0, %142
  %151 = sub i64 0, %149
  %152 = sub i64 0, 24
  %153 = add i64 %151, %152
  %154 = sub i64 0, %153
  %155 = add i64 %149, 24
  %156 = mul i64 %142, 24
  %157 = call i8* @_Znwm(i64 %156)
  %158 = bitcast i8* %157 to %"class.std::vector.0"*
  store i32 1199391700, i32* %13
  br label %159

; <label>:159:                                    ; preds = %141, %140, %106, %79, %50, %22, %17, %16
  br label %14
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.0"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.115
  %9 = load i32, i32* @y.116
  %10 = add i32 %8, 1232996636
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1232996636
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 2118988905, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %97
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 2118988905, label %22
    i32 1025737100, label %42
    i32 452372900, label %76
    i32 -705171688, label %78
  ]

; <label>:21:                                     ; preds = %19
  br label %97

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1025737100, i32 -705171688
  store i32 %41, i32* %18
  br label %97

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::move_iterator", align 8
  %44 = alloca %"class.std::move_iterator", align 8
  %45 = alloca %"class.std::vector.0"*, align 8
  %46 = alloca %"class.std::allocator"*, align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = alloca %"class.std::move_iterator", align 8
  %49 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %43, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %49, align 8
  %50 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %44, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %50, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %45, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %46, align 8
  %51 = bitcast %"class.std::move_iterator"* %47 to i8*
  %52 = bitcast %"class.std::move_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = bitcast %"class.std::move_iterator"* %48 to i8*
  %54 = bitcast %"class.std::move_iterator"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = load %"class.std::vector.0"*, %"class.std::vector.0"** %45, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %57 = load %"class.std::vector.0"*, %"class.std::vector.0"** %56, align 8
  %58 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %58, align 8
  %60 = call %"class.std::vector.0"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EEES7_ET0_T_SA_S9_(%"class.std::vector.0"* %57, %"class.std::vector.0"* %59, %"class.std::vector.0"* %55)
  store %"class.std::vector.0"* %60, %"class.std::vector.0"** %5
  %61 = load i32, i32* @x.115
  %62 = load i32, i32* @y.116
  %63 = sub i32 %61, 2034759288
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 2034759288
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 452372900, i32 -705171688
  store i32 %75, i32* %18
  br label %97

; <label>:76:                                     ; preds = %19
  %77 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  ret %"class.std::vector.0"* %77

; <label>:78:                                     ; preds = %19
  %79 = alloca %"class.std::move_iterator", align 8
  %80 = alloca %"class.std::move_iterator", align 8
  %81 = alloca %"class.std::vector.0"*, align 8
  %82 = alloca %"class.std::allocator"*, align 8
  %83 = alloca %"class.std::move_iterator", align 8
  %84 = alloca %"class.std::move_iterator", align 8
  %85 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %79, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %85, align 8
  %86 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %80, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %86, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %81, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %82, align 8
  %87 = bitcast %"class.std::move_iterator"* %83 to i8*
  %88 = bitcast %"class.std::move_iterator"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = bitcast %"class.std::move_iterator"* %84 to i8*
  %90 = bitcast %"class.std::move_iterator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 8, i32 8, i1 false)
  %91 = load %"class.std::vector.0"*, %"class.std::vector.0"** %81, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  %93 = load %"class.std::vector.0"*, %"class.std::vector.0"** %92, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  %95 = load %"class.std::vector.0"*, %"class.std::vector.0"** %94, align 8
  %96 = call %"class.std::vector.0"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EEES7_ET0_T_SA_S9_(%"class.std::vector.0"* %93, %"class.std::vector.0"* %95, %"class.std::vector.0"* %91)
  store i32 1025737100, i32* %18
  br label %97

; <label>:97:                                     ; preds = %78, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEC2ES6_(%"class.std::move_iterator"* %2, %"class.std::vector.0"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  ret %"class.std::vector.0"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EEES7_ET0_T_SA_S9_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.119
  %8 = load i32, i32* @y.120
  %9 = sub i32 %7, -2106370096
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -2106370096
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1619514838, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %83
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1619514838, label %21
    i32 -1118755545, label %29
    i32 1668777946, label %62
    i32 -1246447807, label %64
  ]

; <label>:20:                                     ; preds = %18
  br label %83

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1118755545, i32 -1246447807
  store i32 %28, i32* %17
  br label %83

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator", align 8
  %31 = alloca %"class.std::move_iterator", align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca i8, align 1
  %34 = alloca %"class.std::move_iterator", align 8
  %35 = alloca %"class.std::move_iterator", align 8
  %36 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %30, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %36, align 8
  %37 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %31, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %37, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %32, align 8
  store i8 1, i8* %33, align 1
  %38 = bitcast %"class.std::move_iterator"* %34 to i8*
  %39 = bitcast %"class.std::move_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.std::move_iterator"* %35 to i8*
  %41 = bitcast %"class.std::move_iterator"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %34, i32 0, i32 0
  %44 = load %"class.std::vector.0"*, %"class.std::vector.0"** %43, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  %46 = load %"class.std::vector.0"*, %"class.std::vector.0"** %45, align 8
  %47 = call %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS6_EEES9_EET0_T_SC_SB_(%"class.std::vector.0"* %44, %"class.std::vector.0"* %46, %"class.std::vector.0"* %42)
  store %"class.std::vector.0"* %47, %"class.std::vector.0"** %4
  %48 = load i32, i32* @x.119
  %49 = load i32, i32* @y.120
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1668777946, i32 -1246447807
  store i32 %61, i32* %17
  br label %83

; <label>:62:                                     ; preds = %18
  %63 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %63

; <label>:64:                                     ; preds = %18
  %65 = alloca %"class.std::move_iterator", align 8
  %66 = alloca %"class.std::move_iterator", align 8
  %67 = alloca %"class.std::vector.0"*, align 8
  %68 = alloca i8, align 1
  %69 = alloca %"class.std::move_iterator", align 8
  %70 = alloca %"class.std::move_iterator", align 8
  %71 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %65, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %71, align 8
  %72 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %66, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %72, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %67, align 8
  store i8 1, i8* %68, align 1
  %73 = bitcast %"class.std::move_iterator"* %69 to i8*
  %74 = bitcast %"class.std::move_iterator"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = bitcast %"class.std::move_iterator"* %70 to i8*
  %76 = bitcast %"class.std::move_iterator"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 8, i1 false)
  %77 = load %"class.std::vector.0"*, %"class.std::vector.0"** %67, align 8
  %78 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %69, i32 0, i32 0
  %79 = load %"class.std::vector.0"*, %"class.std::vector.0"** %78, align 8
  %80 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %70, i32 0, i32 0
  %81 = load %"class.std::vector.0"*, %"class.std::vector.0"** %80, align 8
  %82 = call %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS6_EEES9_EET0_T_SC_SB_(%"class.std::vector.0"* %79, %"class.std::vector.0"* %81, %"class.std::vector.0"* %77)
  store i32 -1118755545, i32* %17
  br label %83

; <label>:83:                                     ; preds = %64, %29, %21, %20
  br label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS6_EEES9_EET0_T_SC_SB_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %11, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  store %"class.std::vector.0"* %12, %"class.std::vector.0"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %136, %3
  %14 = invoke zeroext i1 @_ZStneIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %139

; <label>:15:                                     ; preds = %13
  %16 = load i32, i32* @x.121
  %17 = load i32, i32* @y.122
  %18 = sub i32 0, 1
  %19 = add i32 %16, %18
  %20 = sub i32 %16, 1
  %21 = mul i32 %16, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %17, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %430

; <label>:41:                                     ; preds = %15, %430
  %42 = load i32, i32* @x.121
  %43 = load i32, i32* @y.122
  %44 = add i32 %42, 300555032
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 300555032
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %430

; <label>:56:                                     ; preds = %41
  br i1 %14, label %57, label %231

; <label>:57:                                     ; preds = %56
  %58 = load i32, i32* @x.121
  %59 = load i32, i32* @y.122
  %60 = add i32 %58, 340814703
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 340814703
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %431

; <label>:72:                                     ; preds = %57, %431
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %74 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEPT_RS6_(%"class.std::vector.0"* dereferenceable(24) %73) #3
  %75 = load i32, i32* @x.121
  %76 = load i32, i32* @y.122
  %77 = add i32 %75, -79362287
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -79362287
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %431

; <label>:101:                                    ; preds = %72
  %102 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEdeEv(%"class.std::move_iterator"* %4)
          to label %103 unwind label %139

; <label>:103:                                    ; preds = %101
  invoke void @_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJS5_EEvPT_DpOT0_(%"class.std::vector.0"* %74, %"class.std::vector.0"* dereferenceable(24) %102)
          to label %104 unwind label %139

; <label>:104:                                    ; preds = %103
  br label %105

; <label>:105:                                    ; preds = %104
  %106 = load i32, i32* @x.121
  %107 = load i32, i32* @y.122
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  br i1 %117, label %119, label %434

; <label>:119:                                    ; preds = %105, %434
  %120 = load i32, i32* @x.121
  %121 = load i32, i32* @y.122
  %122 = add i32 %120, -183025687
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, -183025687
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %434

; <label>:134:                                    ; preds = %119
  %135 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEppEv(%"class.std::move_iterator"* %4)
          to label %136 unwind label %139

; <label>:136:                                    ; preds = %134
  %137 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %138 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %137, i32 1
  store %"class.std::vector.0"* %138, %"class.std::vector.0"** %7, align 8
  br label %13

; <label>:139:                                    ; preds = %134, %103, %101, %13
  %140 = load i32, i32* @x.121
  %141 = load i32, i32* @y.122
  %142 = sub i32 %140, 435576790
  %143 = sub i32 %142, 1
  %144 = add i32 %143, 435576790
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 false, true
  %153 = and i1 %150, false
  %154 = and i1 %148, %152
  %155 = and i1 %151, false
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 false, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  br i1 %164, label %166, label %435

; <label>:166:                                    ; preds = %139, %435
  %167 = landingpad { i8*, i32 }
          catch i8* null
  %168 = extractvalue { i8*, i32 } %167, 0
  store i8* %168, i8** %8, align 8
  %169 = extractvalue { i8*, i32 } %167, 1
  store i32 %169, i32* %9, align 4
  %170 = load i32, i32* @x.121
  %171 = load i32, i32* @y.122
  %172 = sub i32 0, 1
  %173 = add i32 %170, %172
  %174 = sub i32 %170, 1
  %175 = mul i32 %170, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %171, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  br i1 %181, label %183, label %435

; <label>:183:                                    ; preds = %166
  br label %184

; <label>:184:                                    ; preds = %183
  %185 = load i8*, i8** %8, align 8
  %186 = call i8* @__cxa_begin_catch(i8* %185) #3
  %187 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %188 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEvT_S7_(%"class.std::vector.0"* %187, %"class.std::vector.0"* %188)
          to label %189 unwind label %262

; <label>:189:                                    ; preds = %184
  %190 = load i32, i32* @x.121
  %191 = load i32, i32* @y.122
  %192 = sub i32 %190, -1150757607
  %193 = sub i32 %192, 1
  %194 = add i32 %193, -1150757607
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = xor i1 %198, true
  %201 = xor i1 %199, true
  %202 = xor i1 false, true
  %203 = and i1 %200, false
  %204 = and i1 %198, %202
  %205 = and i1 %201, false
  %206 = and i1 %199, %202
  %207 = or i1 %203, %204
  %208 = or i1 %205, %206
  %209 = xor i1 %207, %208
  %210 = or i1 %200, %201
  %211 = xor i1 %210, true
  %212 = or i1 false, %202
  %213 = and i1 %211, %212
  %214 = or i1 %209, %213
  %215 = or i1 %198, %199
  br i1 %214, label %216, label %439

; <label>:216:                                    ; preds = %189, %439
  %217 = load i32, i32* @x.121
  %218 = load i32, i32* @y.122
  %219 = sub i32 0, 1
  %220 = add i32 %217, %219
  %221 = sub i32 %217, 1
  %222 = mul i32 %217, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %218, 10
  %226 = and i1 %224, %225
  %227 = xor i1 %224, %225
  %228 = or i1 %226, %227
  %229 = or i1 %224, %225
  br i1 %228, label %230, label %439

; <label>:230:                                    ; preds = %216
  invoke void @__cxa_rethrow() #12
          to label %388 unwind label %262

; <label>:231:                                    ; preds = %56
  %232 = load i32, i32* @x.121
  %233 = load i32, i32* @y.122
  %234 = add i32 %232, -2114934087
  %235 = sub i32 %234, 1
  %236 = sub i32 %235, -2114934087
  %237 = sub i32 %232, 1
  %238 = mul i32 %232, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %233, 10
  %242 = and i1 %240, %241
  %243 = xor i1 %240, %241
  %244 = or i1 %242, %243
  %245 = or i1 %240, %241
  br i1 %244, label %246, label %440

; <label>:246:                                    ; preds = %231, %440
  %247 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %248 = load i32, i32* @x.121
  %249 = load i32, i32* @y.122
  %250 = sub i32 0, 1
  %251 = add i32 %248, %250
  %252 = sub i32 %248, 1
  %253 = mul i32 %248, %251
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %249, 10
  %257 = and i1 %255, %256
  %258 = xor i1 %255, %256
  %259 = or i1 %257, %258
  %260 = or i1 %255, %256
  br i1 %259, label %261, label %440

; <label>:261:                                    ; preds = %246
  ret %"class.std::vector.0"* %247

; <label>:262:                                    ; preds = %230, %184
  %263 = load i32, i32* @x.121
  %264 = load i32, i32* @y.122
  %265 = add i32 %263, 1275918034
  %266 = sub i32 %265, 1
  %267 = sub i32 %266, 1275918034
  %268 = sub i32 %263, 1
  %269 = mul i32 %263, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %264, 10
  %273 = and i1 %271, %272
  %274 = xor i1 %271, %272
  %275 = or i1 %273, %274
  %276 = or i1 %271, %272
  br i1 %275, label %277, label %442

; <label>:277:                                    ; preds = %262, %442
  %278 = landingpad { i8*, i32 }
          cleanup
  %279 = extractvalue { i8*, i32 } %278, 0
  store i8* %279, i8** %8, align 8
  %280 = extractvalue { i8*, i32 } %278, 1
  store i32 %280, i32* %9, align 4
  %281 = load i32, i32* @x.121
  %282 = load i32, i32* @y.122
  %283 = sub i32 0, 1
  %284 = add i32 %281, %283
  %285 = sub i32 %281, 1
  %286 = mul i32 %281, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %282, 10
  %290 = and i1 %288, %289
  %291 = xor i1 %288, %289
  %292 = or i1 %290, %291
  %293 = or i1 %288, %289
  br i1 %292, label %294, label %442

; <label>:294:                                    ; preds = %277
  invoke void @__cxa_end_catch()
          to label %295 unwind label %331

; <label>:295:                                    ; preds = %294
  br label %297
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:297:                                    ; preds = %295
  %298 = load i32, i32* @x.121
  %299 = load i32, i32* @y.122
  %300 = sub i32 0, 1
  %301 = add i32 %298, %300
  %302 = sub i32 %298, 1
  %303 = mul i32 %298, %301
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %299, 10
  %307 = and i1 %305, %306
  %308 = xor i1 %305, %306
  %309 = or i1 %307, %308
  %310 = or i1 %305, %306
  br i1 %309, label %311, label %446

; <label>:311:                                    ; preds = %297, %446
  %312 = load i8*, i8** %8, align 8
  %313 = load i32, i32* %9, align 4
  %314 = insertvalue { i8*, i32 } undef, i8* %312, 0
  %315 = insertvalue { i8*, i32 } %314, i32 %313, 1
  %316 = load i32, i32* @x.121
  %317 = load i32, i32* @y.122
  %318 = sub i32 %316, 881846390
  %319 = sub i32 %318, 1
  %320 = add i32 %319, 881846390
  %321 = sub i32 %316, 1
  %322 = mul i32 %316, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %317, 10
  %326 = and i1 %324, %325
  %327 = xor i1 %324, %325
  %328 = or i1 %326, %327
  %329 = or i1 %324, %325
  br i1 %328, label %330, label %446

; <label>:330:                                    ; preds = %311
  resume { i8*, i32 } %315

; <label>:331:                                    ; preds = %294
  %332 = load i32, i32* @x.121
  %333 = load i32, i32* @y.122
  %334 = sub i32 %332, -1279026785
  %335 = sub i32 %334, 1
  %336 = add i32 %335, -1279026785
  %337 = sub i32 %332, 1
  %338 = mul i32 %332, %336
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %333, 10
  %342 = xor i1 %340, true
  %343 = xor i1 %341, true
  %344 = xor i1 false, true
  %345 = and i1 %342, false
  %346 = and i1 %340, %344
  %347 = and i1 %343, false
  %348 = and i1 %341, %344
  %349 = or i1 %345, %346
  %350 = or i1 %347, %348
  %351 = xor i1 %349, %350
  %352 = or i1 %342, %343
  %353 = xor i1 %352, true
  %354 = or i1 false, %344
  %355 = and i1 %353, %354
  %356 = or i1 %351, %355
  %357 = or i1 %340, %341
  br i1 %356, label %358, label %451

; <label>:358:                                    ; preds = %331, %451
  %359 = landingpad { i8*, i32 }
          catch i8* null
  %360 = extractvalue { i8*, i32 } %359, 0
  call void @__clang_call_terminate(i8* %360) #7
  %361 = load i32, i32* @x.121
  %362 = load i32, i32* @y.122
  %363 = sub i32 %361, 306794886
  %364 = sub i32 %363, 1
  %365 = add i32 %364, 306794886
  %366 = sub i32 %361, 1
  %367 = mul i32 %361, %365
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %362, 10
  %371 = xor i1 %369, true
  %372 = xor i1 %370, true
  %373 = xor i1 true, true
  %374 = and i1 %371, true
  %375 = and i1 %369, %373
  %376 = and i1 %372, true
  %377 = and i1 %370, %373
  %378 = or i1 %374, %375
  %379 = or i1 %376, %377
  %380 = xor i1 %378, %379
  %381 = or i1 %371, %372
  %382 = xor i1 %381, true
  %383 = or i1 true, %373
  %384 = and i1 %382, %383
  %385 = or i1 %380, %384
  %386 = or i1 %369, %370
  br i1 %385, label %387, label %451

; <label>:387:                                    ; preds = %358
  unreachable

; <label>:388:                                    ; preds = %230
  %389 = load i32, i32* @x.121
  %390 = load i32, i32* @y.122
  %391 = sub i32 0, 1
  %392 = add i32 %389, %391
  %393 = sub i32 %389, 1
  %394 = mul i32 %389, %392
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %390, 10
  %398 = xor i1 %396, true
  %399 = xor i1 %397, true
  %400 = xor i1 false, true
  %401 = and i1 %398, false
  %402 = and i1 %396, %400
  %403 = and i1 %399, false
  %404 = and i1 %397, %400
  %405 = or i1 %401, %402
  %406 = or i1 %403, %404
  %407 = xor i1 %405, %406
  %408 = or i1 %398, %399
  %409 = xor i1 %408, true
  %410 = or i1 false, %400
  %411 = and i1 %409, %410
  %412 = or i1 %407, %411
  %413 = or i1 %396, %397
  br i1 %412, label %414, label %454

; <label>:414:                                    ; preds = %388, %454
  %415 = load i32, i32* @x.121
  %416 = load i32, i32* @y.122
  %417 = add i32 %415, -28093373
  %418 = sub i32 %417, 1
  %419 = sub i32 %418, -28093373
  %420 = sub i32 %415, 1
  %421 = mul i32 %415, %419
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %416, 10
  %425 = and i1 %423, %424
  %426 = xor i1 %423, %424
  %427 = or i1 %425, %426
  %428 = or i1 %423, %424
  br i1 %427, label %429, label %454

; <label>:429:                                    ; preds = %414
  unreachable

; <label>:430:                                    ; preds = %41, %15
  br label %41

; <label>:431:                                    ; preds = %72, %57
  %432 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %433 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEPT_RS6_(%"class.std::vector.0"* dereferenceable(24) %432) #3
  br label %72

; <label>:434:                                    ; preds = %119, %105
  br label %119

; <label>:435:                                    ; preds = %166, %139
  %436 = landingpad { i8*, i32 }
          catch i8* null
  %437 = extractvalue { i8*, i32 } %436, 0
  store i8* %437, i8** %8, align 8
  %438 = extractvalue { i8*, i32 } %436, 1
  store i32 %438, i32* %9, align 4
  br label %166

; <label>:439:                                    ; preds = %216, %189
  br label %216

; <label>:440:                                    ; preds = %246, %231
  %441 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  br label %246

; <label>:442:                                    ; preds = %277, %262
  %443 = landingpad { i8*, i32 }
          cleanup
  %444 = extractvalue { i8*, i32 } %443, 0
  store i8* %444, i8** %8, align 8
  %445 = extractvalue { i8*, i32 } %443, 1
  store i32 %445, i32* %9, align 4
  br label %277

; <label>:446:                                    ; preds = %311, %297
  %447 = load i8*, i8** %8, align 8
  %448 = load i32, i32* %9, align 4
  %449 = insertvalue { i8*, i32 } undef, i8* %447, 0
  %450 = insertvalue { i8*, i32 } %449, i32 %448, 1
  br label %311

; <label>:451:                                    ; preds = %358, %331
  %452 = landingpad { i8*, i32 }
          catch i8* null
  %453 = extractvalue { i8*, i32 } %452, 0
  call void @__clang_call_terminate(i8* %453) #7
  br label %358

; <label>:454:                                    ; preds = %414, %388
  br label %414
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJS5_EEvPT_DpOT0_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #5 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.0"*
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.0"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2EOS4_(%"class.std::vector.0"* %7, %"class.std::vector.0"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.129
  %6 = load i32, i32* @y.130
  %7 = add i32 %5, 592704428
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 592704428
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 376613566, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 376613566, label %19
    i32 414569234, label %39
    i32 1033904487, label %73
    i32 736082594, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 414569234, i32 736082594
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %40, align 8
  %41 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %40, align 8
  store %"class.std::move_iterator"* %41, %"class.std::move_iterator"** %2
  %42 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  %44 = load %"class.std::vector.0"*, %"class.std::vector.0"** %43, align 8
  %45 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %44, i32 1
  store %"class.std::vector.0"* %45, %"class.std::vector.0"** %43, align 8
  %46 = load i32, i32* @x.129
  %47 = load i32, i32* @y.130
  %48 = sub i32 %46, -572485411
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -572485411
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1033904487, i32 736082594
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  %74 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  ret %"class.std::move_iterator"* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %76, align 8
  %77 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %76, align 8
  %78 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %77, i32 0, i32 0
  %79 = load %"class.std::vector.0"*, %"class.std::vector.0"** %78, align 8
  %80 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %79, i32 1
  store %"class.std::vector.0"* %80, %"class.std::vector.0"** %78, align 8
  store i32 414569234, i32* %15
  br label %81

; <label>:81:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.131
  %7 = load i32, i32* @y.132
  %8 = sub i32 %6, 634965443
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 634965443
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 344065590, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 344065590, label %20
    i32 974450258, label %40
    i32 -1971423248, label %62
    i32 698699379, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 974450258, i32 698699379
  store i32 %39, i32* %16
  br label %72

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator"*, align 8
  %42 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %41, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %42, align 8
  %43 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %41, align 8
  %44 = call %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEE4baseEv(%"class.std::move_iterator"* %43)
  %45 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %42, align 8
  %46 = call %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEE4baseEv(%"class.std::move_iterator"* %45)
  %47 = icmp eq %"class.std::vector.0"* %44, %46
  store i1 %47, i1* %3
  %48 = load i32, i32* @x.131
  %49 = load i32, i32* @y.132
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1971423248, i32 698699379
  store i32 %61, i32* %16
  br label %72

; <label>:62:                                     ; preds = %17
  %63 = load volatile i1, i1* %3
  ret i1 %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::move_iterator"*, align 8
  %66 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %65, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %66, align 8
  %67 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %65, align 8
  %68 = call %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEE4baseEv(%"class.std::move_iterator"* %67)
  %69 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %66, align 8
  %70 = call %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEE4baseEv(%"class.std::move_iterator"* %69)
  %71 = icmp eq %"class.std::vector.0"* %68, %70
  store i32 974450258, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.133
  %6 = load i32, i32* @y.134
  %7 = sub i32 %5, -878371933
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -878371933
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -567464491, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -567464491, label %19
    i32 -1067740869, label %39
    i32 1448773374, label %59
    i32 -2139569379, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1067740869, i32 -2139569379
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %40, align 8
  %41 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %40, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %41, i32 0, i32 0
  %43 = load %"class.std::vector.0"*, %"class.std::vector.0"** %42, align 8
  store %"class.std::vector.0"* %43, %"class.std::vector.0"** %2
  %44 = load i32, i32* @x.133
  %45 = load i32, i32* @y.134
  %46 = add i32 %44, 1899123071
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1899123071
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1448773374, i32 -2139569379
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %62, align 8
  %63 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %63, i32 0, i32 0
  %65 = load %"class.std::vector.0"*, %"class.std::vector.0"** %64, align 8
  store i32 -1067740869, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.0"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2EOS4_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt4moveIRSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.0"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.0"* %8 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EEC2EOS4_(%"struct.std::_Vector_base.1"* %6, %"struct.std::_Vector_base.1"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt4moveIRSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.0"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EEC2EOS4_(%"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store %"struct.std::_Vector_base.1"* %1, %"struct.std::_Vector_base.1"** %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaIN5GraphILl0EE4EdgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.2"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implC2EOS3_(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %6, %"class.std::allocator.2"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %10, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaIN5GraphILl0EE4EdgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.2"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.143
  %6 = load i32, i32* @y.144
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1024680458, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1024680458, label %18
    i32 611193240, label %38
    i32 998858773, label %56
    i32 -1060237364, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 611193240, i32 -1060237364
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %39, align 8
  %40 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %39, align 8
  store %"class.std::allocator.2"* %40, %"class.std::allocator.2"** %2
  %41 = load i32, i32* @x.143
  %42 = load i32, i32* @y.144
  %43 = sub i32 %41, 1309468560
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1309468560
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 998858773, i32 -1060237364
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %59, align 8
  %60 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %59, align 8
  store i32 611193240, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implC2EOS3_(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaIN5GraphILl0EE4EdgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.2"* dereferenceable(1) %7) #3
  call void @_ZNSaIN5GraphILl0EE4EdgeEEC2ERKS2_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %1, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPN5GraphILl0EE4EdgeEEvRT_S5_(%"struct.Graph<0>::Edge"** dereferenceable(8) %6, %"struct.Graph<0>::Edge"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPN5GraphILl0EE4EdgeEEvRT_S5_(%"struct.Graph<0>::Edge"** dereferenceable(8) %9, %"struct.Graph<0>::Edge"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPN5GraphILl0EE4EdgeEEvRT_S5_(%"struct.Graph<0>::Edge"** dereferenceable(8) %12, %"struct.Graph<0>::Edge"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPN5GraphILl0EE4EdgeEEvRT_S5_(%"struct.Graph<0>::Edge"** dereferenceable(8), %"struct.Graph<0>::Edge"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.Graph<0>::Edge"**, align 8
  %4 = alloca %"struct.Graph<0>::Edge"**, align 8
  %5 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"** %0, %"struct.Graph<0>::Edge"*** %3, align 8
  store %"struct.Graph<0>::Edge"** %1, %"struct.Graph<0>::Edge"*** %4, align 8
  %6 = load %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.Graph<0>::Edge"** @_ZSt4moveIRPN5GraphILl0EE4EdgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Graph<0>::Edge"** dereferenceable(8) %6) #3
  %8 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  store %"struct.Graph<0>::Edge"* %8, %"struct.Graph<0>::Edge"** %5, align 8
  %9 = load %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.Graph<0>::Edge"** @_ZSt4moveIRPN5GraphILl0EE4EdgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Graph<0>::Edge"** dereferenceable(8) %9) #3
  %11 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %10, align 8
  %12 = load %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %3, align 8
  store %"struct.Graph<0>::Edge"* %11, %"struct.Graph<0>::Edge"** %12, align 8
  %13 = call dereferenceable(8) %"struct.Graph<0>::Edge"** @_ZSt4moveIRPN5GraphILl0EE4EdgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Graph<0>::Edge"** dereferenceable(8) %5) #3
  %14 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %13, align 8
  %15 = load %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %4, align 8
  store %"struct.Graph<0>::Edge"* %14, %"struct.Graph<0>::Edge"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph<0>::Edge"** @_ZSt4moveIRPN5GraphILl0EE4EdgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Graph<0>::Edge"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.Graph<0>::Edge"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.155
  %6 = load i32, i32* @y.156
  %7 = sub i32 %5, -1674196036
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1674196036
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 33985392, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 33985392, label %19
    i32 782030931, label %39
    i32 1030867032, label %57
    i32 -149314602, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 782030931, i32 -149314602
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Graph<0>::Edge"**, align 8
  store %"struct.Graph<0>::Edge"** %0, %"struct.Graph<0>::Edge"*** %40, align 8
  %41 = load %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %40, align 8
  store %"struct.Graph<0>::Edge"** %41, %"struct.Graph<0>::Edge"*** %2
  %42 = load i32, i32* @x.155
  %43 = load i32, i32* @y.156
  %44 = sub i32 %42, -1875316669
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1875316669
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1030867032, i32 -149314602
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %2
  ret %"struct.Graph<0>::Edge"** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.Graph<0>::Edge"**, align 8
  store %"struct.Graph<0>::Edge"** %0, %"struct.Graph<0>::Edge"*** %60, align 8
  %61 = load %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %60, align 8
  store i32 782030931, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEC2ES6_(%"class.std::move_iterator"*, %"class.std::vector.0"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %7, %"class.std::vector.0"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEE10deallocateERS6_PS5_m(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.159
  %7 = load i32, i32* @y.160
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1108017981, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1108017981, label %19
    i32 1843845837, label %39
    i32 -902064211, label %62
    i32 -1087234777, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1843845837, i32 -1087234777
  store i32 %38, i32* %15
  br label %71

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator"*, align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %40, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.std::allocator"*, %"class.std::allocator"** %40, align 8
  %44 = bitcast %"class.std::allocator"* %43 to %"class.__gnu_cxx::new_allocator"*
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %46 = load i64, i64* %42, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator"* %44, %"class.std::vector.0"* %45, i64 %46)
  %47 = load i32, i32* @x.159
  %48 = load i32, i32* @y.160
  %49 = sub i32 %47, 295421002
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 295421002
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -902064211, i32 -1087234777
  store i32 %61, i32* %15
  br label %71

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator"*, align 8
  %65 = alloca %"class.std::vector.0"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %64, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.std::allocator"*, %"class.std::allocator"** %64, align 8
  %68 = bitcast %"class.std::allocator"* %67 to %"class.__gnu_cxx::new_allocator"*
  %69 = load %"class.std::vector.0"*, %"class.std::vector.0"** %65, align 8
  %70 = load i64, i64* %66, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator"* %68, %"class.std::vector.0"* %69, i64 %70)
  store i32 1843845837, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.0"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.161
  %7 = load i32, i32* @y.162
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1876239050, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1876239050, label %19
    i32 -482884962, label %39
    i32 -1141440131, label %73
    i32 2128505364, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -482884962, i32 2128505364
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  %42 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %40, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %40, align 8
  %44 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %45 = bitcast %"class.std::vector.0"* %44 to i8*
  call void @_ZdlPv(i8* %45) #3
  %46 = load i32, i32* @x.161
  %47 = load i32, i32* @y.162
  %48 = add i32 %46, 1155406150
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1155406150
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1141440131, i32 2128505364
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %76 = alloca %"class.std::vector.0"*, align 8
  %77 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %75, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %76, align 8
  store i64 %2, i64* %77, align 8
  %78 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %75, align 8
  %79 = load %"class.std::vector.0"*, %"class.std::vector.0"** %76, align 8
  %80 = bitcast %"class.std::vector.0"* %79 to i8*
  call void @_ZdlPv(i8* %80) #3
  store i32 -482884962, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #11

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeES2_EvT_S4_RSaIT0_E(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.163
  %7 = load i32, i32* @y.164
  %8 = sub i32 %6, -56751448
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -56751448
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 815611182, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 815611182, label %20
    i32 734864641, label %28
    i32 1727120793, label %61
    i32 527732155, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 734864641, i32 527732155
  store i32 %27, i32* %16
  br label %68

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.Graph<0>::Edge"*, align 8
  %30 = alloca %"struct.Graph<0>::Edge"*, align 8
  %31 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %29, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %30, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %31, align 8
  %32 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %29, align 8
  %33 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %30, align 8
  call void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeEEvT_S4_(%"struct.Graph<0>::Edge"* %32, %"struct.Graph<0>::Edge"* %33)
  %34 = load i32, i32* @x.163
  %35 = load i32, i32* @y.164
  %36 = add i32 %34, -228473789
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -228473789
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1727120793, i32 527732155
  store i32 %60, i32* %16
  br label %68

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"struct.Graph<0>::Edge"*, align 8
  %64 = alloca %"struct.Graph<0>::Edge"*, align 8
  %65 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %63, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %64, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %65, align 8
  %66 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %63, align 8
  %67 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %64, align 8
  call void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeEEvT_S4_(%"struct.Graph<0>::Edge"* %66, %"struct.Graph<0>::Edge"* %67)
  store i32 734864641, i32* %16
  br label %68

; <label>:68:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.165
  %3 = load i32, i32* @y.166
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %84

; <label>:27:                                     ; preds = %1, %84
  %28 = alloca %"struct.std::_Vector_base.1"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %28, align 8
  %31 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %35, i32 0, i32 2
  %37 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %39, align 8
  %41 = ptrtoint %"struct.Graph<0>::Edge"* %37 to i64
  %42 = ptrtoint %"struct.Graph<0>::Edge"* %40 to i64
  %43 = add i64 %41, -912559374324368837
  %44 = sub i64 %43, %42
  %45 = sub i64 %44, -912559374324368837
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 32
  %48 = load i32, i32* @x.165
  %49 = load i32, i32* @y.166
  %50 = sub i32 %48, 157415346
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 157415346
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %84

; <label>:74:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %31, %"struct.Graph<0>::Edge"* %34, i64 %47)
          to label %75 unwind label %77

; <label>:75:                                     ; preds = %74
  %76 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %76) #3
  ret void

; <label>:77:                                     ; preds = %74
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %29, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %30, align 4
  %81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %81) #3
  br label %82

; <label>:82:                                     ; preds = %77
  %83 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %83) #7
  unreachable

; <label>:84:                                     ; preds = %27, %1
  %85 = alloca %"struct.std::_Vector_base.1"*, align 8
  %86 = alloca i8*
  %87 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %85, align 8
  %88 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %85, align 8
  %89 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %89, i32 0, i32 0
  %91 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %90, align 8
  %92 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %88, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %92, i32 0, i32 2
  %94 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %93, align 8
  %95 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %88, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %95, i32 0, i32 0
  %97 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %96, align 8
  %98 = ptrtoint %"struct.Graph<0>::Edge"* %94 to i64
  %99 = ptrtoint %"struct.Graph<0>::Edge"* %97 to i64
  %100 = sub i64 %98, 8953098197854001438
  %101 = sub i64 %100, %99
  %102 = add i64 %101, 8953098197854001438
  %103 = sub i64 %98, %99
  %104 = mul i64 %102, %99
  %105 = sub i64 %98, -6089444218489730652
  %106 = sub i64 %105, %99
  %107 = add i64 %106, -6089444218489730652
  %108 = sub i64 %98, %99
  %109 = shl i64 %107, 32
  %110 = sdiv exact i64 %107, 32
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeEEvT_S4_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat {
  %3 = alloca %"struct.Graph<0>::Edge"*, align 8
  %4 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %3, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %4, align 8
  %5 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %3, align 8
  %6 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5GraphILl0EE4EdgeEEEvT_S6_(%"struct.Graph<0>::Edge"* %5, %"struct.Graph<0>::Edge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5GraphILl0EE4EdgeEEEvT_S6_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #5 comdat align 2 {
  %3 = alloca %"struct.Graph<0>::Edge"*, align 8
  %4 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %3, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"*, %"struct.Graph<0>::Edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.Graph<0>::Edge"*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca %"struct.Graph<0>::Edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  store %"struct.Graph<0>::Edge"* %10, %"struct.Graph<0>::Edge"** %4
  %11 = alloca i32
  store i32 -1584790278, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %76
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1584790278, label %15
    i32 -748258767, label %19
    i32 1665605562, label %47
    i32 1883510999, label %68
    i32 620825357, label %69
    i32 679879644, label %70
  ]

; <label>:14:                                     ; preds = %12
  br label %76

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4
  %17 = icmp ne %"struct.Graph<0>::Edge"* %16, null
  %18 = select i1 %17, i32 -748258767, i32 620825357
  store i32 %18, i32* %11
  br label %76

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.171
  %21 = load i32, i32* @y.172
  %22 = add i32 %20, 1333109635
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 1333109635
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 1665605562, i32 679879644
  store i32 %46, i32* %11
  br label %76

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %49 to %"class.std::allocator.2"*
  %51 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE10deallocateERS3_PS2_m(%"class.std::allocator.2"* dereferenceable(1) %50, %"struct.Graph<0>::Edge"* %51, i64 %52)
  %53 = load i32, i32* @x.171
  %54 = load i32, i32* @y.172
  %55 = add i32 %53, -487459869
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -487459869
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 1883510999, i32 679879644
  store i32 %67, i32* %11
  br label %76

; <label>:68:                                     ; preds = %12
  store i32 620825357, i32* %11
  br label %76

; <label>:69:                                     ; preds = %12
  ret void

; <label>:70:                                     ; preds = %12
  %71 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %72 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %72 to %"class.std::allocator.2"*
  %74 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %75 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE10deallocateERS3_PS2_m(%"class.std::allocator.2"* dereferenceable(1) %73, %"struct.Graph<0>::Edge"* %74, i64 %75)
  store i32 1665605562, i32* %11
  br label %76

; <label>:76:                                     ; preds = %70, %68, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaIN5GraphILl0EE4EdgeEED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE10deallocateERS3_PS2_m(%"class.std::allocator.2"* dereferenceable(1), %"struct.Graph<0>::Edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %"struct.Graph<0>::Edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.3"* %8, %"struct.Graph<0>::Edge"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.3"*, %"struct.Graph<0>::Edge"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %"struct.Graph<0>::Edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %9 = bitcast %"struct.Graph<0>::Edge"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.181
  %3 = load i32, i32* @y.182
  %4 = add i32 %2, 1101214305
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1101214305
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %112

; <label>:16:                                     ; preds = %1, %112
  %17 = alloca %"struct.std::_Vector_base"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %17, align 8
  %20 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"class.std::vector.0"*, %"class.std::vector.0"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %30 = ptrtoint %"class.std::vector.0"* %26 to i64
  %31 = ptrtoint %"class.std::vector.0"* %29 to i64
  %32 = sub i64 %30, -8238774935648713243
  %33 = sub i64 %32, %31
  %34 = add i64 %33, -8238774935648713243
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 24
  %37 = load i32, i32* @x.181
  %38 = load i32, i32* @y.182
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %112

; <label>:62:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %20, %"class.std::vector.0"* %23, i64 %36)
          to label %63 unwind label %65

; <label>:63:                                     ; preds = %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %64) #3
  ret void

; <label>:65:                                     ; preds = %62
  %66 = load i32, i32* @x.181
  %67 = load i32, i32* @y.182
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %194

; <label>:79:                                     ; preds = %65, %194
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %18, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %19, align 4
  %83 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %83) #3
  %84 = load i32, i32* @x.181
  %85 = load i32, i32* @y.182
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %194

; <label>:109:                                    ; preds = %79
  br label %110

; <label>:110:                                    ; preds = %109
  %111 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %111) #7
  unreachable

; <label>:112:                                    ; preds = %16, %1
  %113 = alloca %"struct.std::_Vector_base"*, align 8
  %114 = alloca i8*
  %115 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %113, align 8
  %116 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %113, align 8
  %117 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %117, i32 0, i32 0
  %119 = load %"class.std::vector.0"*, %"class.std::vector.0"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %116, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %120, i32 0, i32 2
  %122 = load %"class.std::vector.0"*, %"class.std::vector.0"** %121, align 8
  %123 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %116, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %123, i32 0, i32 0
  %125 = load %"class.std::vector.0"*, %"class.std::vector.0"** %124, align 8
  %126 = ptrtoint %"class.std::vector.0"* %122 to i64
  %127 = ptrtoint %"class.std::vector.0"* %125 to i64
  %128 = sub i64 0, %127
  %129 = add i64 %126, %128
  %130 = sub i64 %126, %127
  %131 = mul i64 %129, %127
  %132 = sub i64 %126, -1823570132670559372
  %133 = sub i64 %132, %127
  %134 = add i64 %133, -1823570132670559372
  %135 = sub i64 %126, %127
  %136 = mul i64 %134, %127
  %137 = sub i64 0, %126
  %138 = add i64 0, %137
  %139 = sub i64 0, %126
  %140 = sub i64 0, %127
  %141 = sub i64 %138, %140
  %142 = add i64 %138, %127
  %143 = shl i64 %126, %127
  %144 = sub i64 0, %126
  %145 = add i64 0, %144
  %146 = sub i64 0, %126
  %147 = sub i64 0, %145
  %148 = sub i64 0, %127
  %149 = add i64 %147, %148
  %150 = sub i64 0, %149
  %151 = add i64 %145, %127
  %152 = shl i64 %126, %127
  %153 = shl i64 %126, %127
  %154 = add i64 %126, -1260846670008161640
  %155 = sub i64 %154, %127
  %156 = sub i64 %155, -1260846670008161640
  %157 = sub i64 %126, %127
  %158 = add i64 0, -4644276431983036784
  %159 = sub i64 %158, %156
  %160 = sub i64 %159, -4644276431983036784
  %161 = sub i64 0, %156
  %162 = add i64 %160, 1676372168033958414
  %163 = add i64 %162, 24
  %164 = sub i64 %163, 1676372168033958414
  %165 = add i64 %160, 24
  %166 = shl i64 %156, 24
  %167 = shl i64 %156, 24
  %168 = shl i64 %156, 24
  %169 = add i64 0, -8559425371930844984
  %170 = sub i64 %169, %156
  %171 = sub i64 %170, -8559425371930844984
  %172 = sub i64 0, %156
  %173 = sub i64 0, %171
  %174 = sub i64 0, 24
  %175 = add i64 %173, %174
  %176 = sub i64 0, %175
  %177 = add i64 %171, 24
  %178 = sub i64 0, %156
  %179 = add i64 0, %178
  %180 = sub i64 0, %156
  %181 = sub i64 0, %179
  %182 = sub i64 0, 24
  %183 = add i64 %181, %182
  %184 = sub i64 0, %183
  %185 = add i64 %179, 24
  %186 = sub i64 0, %156
  %187 = add i64 0, %186
  %188 = sub i64 0, %156
  %189 = add i64 %187, 6112568060006546083
  %190 = add i64 %189, 24
  %191 = sub i64 %190, 6112568060006546083
  %192 = add i64 %187, 24
  %193 = sdiv exact i64 %156, 24
  br label %16

; <label>:194:                                    ; preds = %79, %65
  %195 = landingpad { i8*, i32 }
          catch i8* null
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %18, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %19, align 4
  %198 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %198) #3
  br label %79
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorIN5GraphILl0EE4EdgeESaIS2_EEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN5GraphILl0EE4EdgeESaIS2_EEED2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.185
  %5 = load i32, i32* @y.186
  %6 = add i32 %4, 116382728
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 116382728
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1809610786, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1809610786, label %18
    i32 69538899, label %38
    i32 -291049945, label %69
    i32 1194378493, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 69538899, i32 1194378493
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %39, align 8
  %40 = load %"class.std::allocator"*, %"class.std::allocator"** %39, align 8
  %41 = bitcast %"class.std::allocator"* %40 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEED2Ev(%"class.__gnu_cxx::new_allocator"* %41) #3
  %42 = load i32, i32* @x.185
  %43 = load i32, i32* @y.186
  %44 = sub i32 %42, 437301405
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 437301405
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -291049945, i32 1194378493
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %71, align 8
  %72 = load %"class.std::allocator"*, %"class.std::allocator"** %71, align 8
  %73 = bitcast %"class.std::allocator"* %72 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEED2Ev(%"class.__gnu_cxx::new_allocator"* %73) #3
  store i32 69538899, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5GraphILl0EE4EdgeESaIS4_EEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.187
  %5 = load i32, i32* @y.188
  %6 = sub i32 %4, 709793704
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 709793704
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1534209364, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1534209364, label %18
    i32 417348994, label %38
    i32 -2104097114, label %56
    i32 -525109353, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 417348994, i32 -525109353
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %39, align 8
  %41 = load i32, i32* @x.187
  %42 = load i32, i32* @y.188
  %43 = sub i32 %41, -1667271062
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1667271062
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -2104097114, i32 -525109353
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %58, align 8
  store i32 417348994, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEEC2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.189
  %5 = load i32, i32* @y.190
  %6 = add i32 %4, 255185320
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 255185320
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1579509054, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1579509054, label %18
    i32 -1182413984, label %26
    i32 -670083178, label %45
    i32 -214886078, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1182413984, i32 -214886078
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %27, align 8
  %28 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.189
  %31 = load i32, i32* @y.190
  %32 = add i32 %30, -1723152559
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1723152559
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -670083178, i32 -214886078
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %47, align 8
  %48 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %48, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %49)
  store i32 -1182413984, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaIlEC2Ev(%"class.std::allocator.7"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %3, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %3, i32 0, i32 1
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %3, i32 0, i32 2
  store i64* null, i64** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIlEC2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEEC2EmRKS0_(%"struct.std::_Vector_base.6"*, i64, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.6"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %9 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %6, align 8
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %10, %"class.std::allocator.7"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIlSaIlEE17_M_create_storageEm(%"struct.std::_Vector_base.6"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEE18_M_fill_initializeEmRKl(%"class.std::vector.5"*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = bitcast %"class.std::vector.5"* %7 to %"struct.std::_Vector_base.6"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i64*, i64** %6, align 8
  %14 = bitcast %"class.std::vector.5"* %7 to %"struct.std::_Vector_base.6"*
  %15 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %14) #3
  %16 = call i64* @_ZSt24__uninitialized_fill_n_aIPlmllET_S1_T0_RKT1_RSaIT2_E(i64* %11, i64 %12, i64* dereferenceable(8) %13, %"class.std::allocator.7"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.5"* %7 to %"struct.std::_Vector_base.6"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %18, i32 0, i32 1
  store i64* %16, i64** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEED2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = ptrtoint i64* %11 to i64
  %16 = ptrtoint i64* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 8
  invoke void @_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm(%"struct.std::_Vector_base.6"* %5, i64* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.199
  %25 = load i32, i32* @y.200
  %26 = sub i32 %24, 1480587776
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 1480587776
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %60

; <label>:38:                                     ; preds = %23, %60
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %3, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %4, align 4
  %42 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %42) #3
  %43 = load i32, i32* @x.199
  %44 = load i32, i32* @y.200
  %45 = sub i32 %43, -794657428
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -794657428
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %60

; <label>:57:                                     ; preds = %38
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %59) #7
  unreachable

; <label>:60:                                     ; preds = %38, %23
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %3, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %4, align 4
  %64 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %64) #3
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.201
  %6 = load i32, i32* @y.202
  %7 = sub i32 %5, -1325240916
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1325240916
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -496186484, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -496186484, label %19
    i32 1934853187, label %39
    i32 -133552350, label %63
    i32 -1418025660, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1934853187, i32 -1418025660
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %40, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %41, align 8
  %42 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %42 to %"class.std::allocator.7"*
  %44 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %41, align 8
  call void @_ZNSaIlEC2ERKS_(%"class.std::allocator.7"* %43, %"class.std::allocator.7"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %42, i32 0, i32 0
  store i64* null, i64** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %42, i32 0, i32 1
  store i64* null, i64** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %42, i32 0, i32 2
  store i64* null, i64** %47, align 8
  %48 = load i32, i32* @x.201
  %49 = load i32, i32* @y.202
  %50 = sub i32 %48, -1691926195
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1691926195
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -133552350, i32 -1418025660
  store i32 %62, i32* %15
  br label %73

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, align 8
  %66 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %65, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %66, align 8
  %67 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %65, align 8
  %68 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %67 to %"class.std::allocator.7"*
  %69 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %66, align 8
  call void @_ZNSaIlEC2ERKS_(%"class.std::allocator.7"* %68, %"class.std::allocator.7"* dereferenceable(1) %69) #3
  %70 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %67, i32 0, i32 0
  store i64* null, i64** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %67, i32 0, i32 1
  store i64* null, i64** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %67, i32 0, i32 2
  store i64* null, i64** %72, align 8
  store i32 1934853187, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEE17_M_create_storageEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.203
  %6 = load i32, i32* @y.204
  %7 = add i32 %5, 1855997279
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1855997279
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 192048522, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 192048522, label %19
    i32 193599910, label %39
    i32 1857969106, label %73
    i32 953526600, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 193599910, i32 953526600
  store i32 %38, i32* %15
  br label %94

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.6"*, align 8
  %41 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %40, align 8
  %43 = load i64, i64* %41, align 8
  %44 = call i64* @_ZNSt12_Vector_baseIlSaIlEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %42, i64 %43)
  %45 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %45, i32 0, i32 0
  store i64* %44, i64** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %50, i32 0, i32 1
  store i64* %49, i64** %51, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = load i64, i64* %41, align 8
  %56 = getelementptr inbounds i64, i64* %54, i64 %55
  %57 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %57, i32 0, i32 2
  store i64* %56, i64** %58, align 8
  %59 = load i32, i32* @x.203
  %60 = load i32, i32* @y.204
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 1857969106, i32 953526600
  store i32 %72, i32* %15
  br label %94

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Vector_base.6"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call i64* @_ZNSt12_Vector_baseIlSaIlEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %80, i32 0, i32 0
  store i64* %79, i64** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %85, i32 0, i32 1
  store i64* %84, i64** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds i64, i64* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %92, i32 0, i32 2
  store i64* %91, i64** %93, align 8
  store i32 193599910, i32* %15
  br label %94

; <label>:94:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.205
  %5 = load i32, i32* @y.206
  %6 = add i32 %4, -1566722967
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1566722967
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1970649303, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1970649303, label %18
    i32 931950813, label %38
    i32 840806704, label %56
    i32 1895650520, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 931950813, i32 1895650520
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %40 to %"class.std::allocator.7"*
  call void @_ZNSaIlED2Ev(%"class.std::allocator.7"* %41) #3
  %42 = load i32, i32* @x.205
  %43 = load i32, i32* @y.206
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 840806704, i32 1895650520
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %58, align 8
  %59 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %59 to %"class.std::allocator.7"*
  call void @_ZNSaIlED2Ev(%"class.std::allocator.7"* %60) #3
  store i32 931950813, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIlEC2ERKS1_(%"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %1, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIlSaIlEE11_M_allocateEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.6"*
  %6 = alloca %"struct.std::_Vector_base.6"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %6, align 8
  store %"struct.std::_Vector_base.6"* %8, %"struct.std::_Vector_base.6"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1802522715, i32* %10
  %11 = alloca i64*
  br label %12

; <label>:12:                                     ; preds = %2, %111
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1802522715, label %15
    i32 -1528516705, label %19
    i32 -392165686, label %34
    i32 921341980, label %55
    i32 -1325348768, label %57
    i32 1572979244, label %85
    i32 -2064678399, label %101
    i32 1524556264, label %102
    i32 -950748785, label %104
    i32 -2119701672, label %110
  ]

; <label>:14:                                     ; preds = %12
  br label %111

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -1528516705, i32 -1325348768
  store i32 %18, i32* %10
  br label %111

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.209
  %21 = load i32, i32* @y.210
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -392165686, i32 -950748785
  store i32 %33, i32* %10
  br label %111

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %36 to %"class.std::allocator.7"*
  %38 = load i64, i64* %7, align 8
  %39 = call i64* @_ZNSt16allocator_traitsISaIlEE8allocateERS0_m(%"class.std::allocator.7"* dereferenceable(1) %37, i64 %38)
  store i64* %39, i64** %3
  %40 = load i32, i32* @x.209
  %41 = load i32, i32* @y.210
  %42 = sub i32 %40, -1539833389
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1539833389
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 921341980, i32 -950748785
  store i32 %54, i32* %10
  br label %111

; <label>:55:                                     ; preds = %12
  store i32 1524556264, i32* %10
  %56 = load volatile i64*, i64** %3
  store i64* %56, i64** %11
  br label %111

; <label>:57:                                     ; preds = %12
  %58 = load i32, i32* @x.209
  %59 = load i32, i32* @y.210
  %60 = sub i32 %58, -1703106299
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -1703106299
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 1572979244, i32 -2119701672
  store i32 %84, i32* %10
  br label %111

; <label>:85:                                     ; preds = %12
  %86 = load i32, i32* @x.209
  %87 = load i32, i32* @y.210
  %88 = sub i32 %86, 1047963942
  %89 = sub i32 %88, 1
  %90 = add i32 %89, 1047963942
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 -2064678399, i32 -2119701672
  store i32 %100, i32* %10
  br label %111

; <label>:101:                                    ; preds = %12
  store i32 1524556264, i32* %10
  store i64* null, i64** %11
  br label %111

; <label>:102:                                    ; preds = %12
  %103 = load i64*, i64** %11
  ret i64* %103

; <label>:104:                                    ; preds = %12
  %105 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %106 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %105, i32 0, i32 0
  %107 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %106 to %"class.std::allocator.7"*
  %108 = load i64, i64* %7, align 8
  %109 = call i64* @_ZNSt16allocator_traitsISaIlEE8allocateERS0_m(%"class.std::allocator.7"* dereferenceable(1) %107, i64 %108)
  store i32 -392165686, i32* %10
  br label %111

; <label>:110:                                    ; preds = %12
  store i32 1572979244, i32* %10
  br label %111

; <label>:111:                                    ; preds = %110, %104, %101, %85, %57, %55, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIlEE8allocateERS0_m(%"class.std::allocator.7"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.211
  %7 = load i32, i32* @y.212
  %8 = add i32 %6, 2103673042
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 2103673042
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1460510705, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1460510705, label %20
    i32 1430198674, label %28
    i32 271691277, label %61
    i32 -1426476514, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1430198674, i32 -1426476514
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.7"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %29, align 8
  %32 = bitcast %"class.std::allocator.7"* %31 to %"class.__gnu_cxx::new_allocator.8"*
  %33 = load i64, i64* %30, align 8
  %34 = call i64* @_ZN9__gnu_cxx13new_allocatorIlE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %32, i64 %33, i8* null)
  store i64* %34, i64** %3
  %35 = load i32, i32* @x.211
  %36 = load i32, i32* @y.212
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 271691277, i32 -1426476514
  store i32 %60, i32* %16
  br label %70

; <label>:61:                                     ; preds = %17
  %62 = load volatile i64*, i64** %3
  ret i64* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::allocator.7"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %64, align 8
  %67 = bitcast %"class.std::allocator.7"* %66 to %"class.__gnu_cxx::new_allocator.8"*
  %68 = load i64, i64* %65, align 8
  %69 = call i64* @_ZN9__gnu_cxx13new_allocatorIlE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %67, i64 %68, i8* null)
  store i32 1430198674, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIlE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.213
  %10 = load i32, i32* @y.214
  %11 = sub i32 %9, -200268932
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -200268932
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -871314090, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %143
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -871314090, label %23
    i32 1445667298, label %31
    i32 -732397122, label %68
    i32 -897272970, label %71
    i32 2049113529, label %72
    i32 -1093495770, label %88
    i32 1993576243, label %120
    i32 -863097502, label %122
    i32 -367396747, label %130
  ]

; <label>:22:                                     ; preds = %20
  br label %143

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1445667298, i32 -863097502
  store i32 %30, i32* %19
  br label %143

; <label>:31:                                     ; preds = %20
  %32 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %6
  %34 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %32, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  store i8* %2, i8** %34, align 8
  %36 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %32, align 8
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = call i64 @_ZNK9__gnu_cxx13new_allocatorIlE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %36) #3
  %40 = icmp ugt i64 %38, %39
  store i1 %40, i1* %5
  %41 = load i32, i32* @x.213
  %42 = load i32, i32* @y.214
  %43 = add i32 %41, -549240677
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -549240677
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -732397122, i32 -863097502
  store i32 %67, i32* %19
  br label %143

; <label>:68:                                     ; preds = %20
  %69 = load volatile i1, i1* %5
  %70 = select i1 %69, i32 -897272970, i32 2049113529
  store i32 %70, i32* %19
  br label %143

; <label>:71:                                     ; preds = %20
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:72:                                     ; preds = %20
  %73 = load i32, i32* @x.213
  %74 = load i32, i32* @y.214
  %75 = sub i32 %73, 854100098
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 854100098
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 -1093495770, i32 -367396747
  store i32 %87, i32* %19
  br label %143

; <label>:88:                                     ; preds = %20
  %89 = load volatile i64*, i64** %6
  %90 = load i64, i64* %89, align 8
  %91 = mul i64 %90, 8
  %92 = call i8* @_Znwm(i64 %91)
  %93 = bitcast i8* %92 to i64*
  store i64* %93, i64** %4
  %94 = load i32, i32* @x.213
  %95 = load i32, i32* @y.214
  %96 = sub i32 0, 1
  %97 = add i32 %94, %96
  %98 = sub i32 %94, 1
  %99 = mul i32 %94, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %95, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 true, true
  %106 = and i1 %103, true
  %107 = and i1 %101, %105
  %108 = and i1 %104, true
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 true, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 1993576243, i32 -367396747
  store i32 %119, i32* %19
  br label %143

; <label>:120:                                    ; preds = %20
  %121 = load volatile i64*, i64** %4
  ret i64* %121

; <label>:122:                                    ; preds = %20
  %123 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %124 = alloca i64, align 8
  %125 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %123, align 8
  store i64 %1, i64* %124, align 8
  store i8* %2, i8** %125, align 8
  %126 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %123, align 8
  %127 = load i64, i64* %124, align 8
  %128 = call i64 @_ZNK9__gnu_cxx13new_allocatorIlE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %126) #3
  %129 = icmp ugt i64 %127, %128
  store i32 1445667298, i32* %19
  br label %143

; <label>:130:                                    ; preds = %20
  %131 = load volatile i64*, i64** %6
  %132 = load i64, i64* %131, align 8
  %133 = shl i64 %132, 8
  %134 = shl i64 %132, 8
  %135 = add i64 %132, 6467702643235837675
  %136 = sub i64 %135, 8
  %137 = sub i64 %136, 6467702643235837675
  %138 = sub i64 %132, 8
  %139 = mul i64 %137, 8
  %140 = mul i64 %132, 8
  %141 = call i8* @_Znwm(i64 %140)
  %142 = bitcast i8* %141 to i64*
  store i32 -1093495770, i32* %19
  br label %143

; <label>:143:                                    ; preds = %130, %122, %88, %72, %68, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIlE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.215
  %5 = load i32, i32* @y.216
  %6 = sub i32 %4, -1096571248
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1096571248
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -840322367, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -840322367, label %18
    i32 -1126647087, label %26
    i32 -499771874, label %56
    i32 1226361884, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1126647087, i32 1226361884
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %27, align 8
  %29 = load i32, i32* @x.215
  %30 = load i32, i32* @y.216
  %31 = add i32 %29, 544035275
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 544035275
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -499771874, i32 1226361884
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 2305843009213693951

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %58, align 8
  store i32 -1126647087, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIlED2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPlmllET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = call i64* @_ZSt20uninitialized_fill_nIPlmlET_S1_T0_RKT1_(i64* %9, i64 %10, i64* dereferenceable(8) %11)
  ret i64* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.221
  %6 = load i32, i32* @y.222
  %7 = sub i32 %5, -855907550
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -855907550
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 12099853, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 12099853, label %19
    i32 -1684912492, label %27
    i32 -1076682711, label %59
    i32 756401428, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1684912492, i32 756401428
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %28, align 8
  %29 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %30 to %"class.std::allocator.7"*
  store %"class.std::allocator.7"* %31, %"class.std::allocator.7"** %2
  %32 = load i32, i32* @x.221
  %33 = load i32, i32* @y.222
  %34 = add i32 %32, 674107369
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 674107369
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1076682711, i32 756401428
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.7"*, %"class.std::allocator.7"** %2
  ret %"class.std::allocator.7"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %62, align 8
  %63 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %64 to %"class.std::allocator.7"*
  store i32 -1684912492, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPlmlET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.223
  %8 = load i32, i32* @y.224
  %9 = sub i32 %7, 566955757
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 566955757
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 459428481, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 459428481, label %21
    i32 -2010503429, label %41
    i32 1619000027, label %65
    i32 -1231795657, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -2010503429, i32 -1231795657
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64*, align 8
  %45 = alloca i8, align 1
  store i64* %0, i64** %42, align 8
  store i64 %1, i64* %43, align 8
  store i64* %2, i64** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i64*, i64** %42, align 8
  %47 = load i64, i64* %43, align 8
  %48 = load i64*, i64** %44, align 8
  %49 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPlmlEET_S3_T0_RKT1_(i64* %46, i64 %47, i64* dereferenceable(8) %48)
  store i64* %49, i64** %4
  %50 = load i32, i32* @x.223
  %51 = load i32, i32* @y.224
  %52 = add i32 %50, 1929790059
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1929790059
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1619000027, i32 -1231795657
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i64*, i64** %4
  ret i64* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i64*, align 8
  %69 = alloca i64, align 8
  %70 = alloca i64*, align 8
  %71 = alloca i8, align 1
  store i64* %0, i64** %68, align 8
  store i64 %1, i64* %69, align 8
  store i64* %2, i64** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i64*, i64** %68, align 8
  %73 = load i64, i64* %69, align 8
  %74 = load i64*, i64** %70, align 8
  %75 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPlmlEET_S3_T0_RKT1_(i64* %72, i64 %73, i64* dereferenceable(8) %74)
  store i32 -2010503429, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPlmlEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call i64* @_ZSt6fill_nIPlmlET_S1_T0_RKT1_(i64* %7, i64 %8, i64* dereferenceable(8) %9)
  ret i64* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPlmlET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZSt10__fill_n_aIPlmlEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPlmlEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #5 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 475629636, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %34
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 475629636, label %16
    i32 1049482270, label %20
    i32 -385410426, label %23
    i32 202002401, label %32
  ]

; <label>:15:                                     ; preds = %13
  br label %34

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 1049482270, i32 202002401
  store i32 %19, i32* %12
  br label %34

; <label>:20:                                     ; preds = %13
  %21 = load i64, i64* %7, align 8
  %22 = load i64*, i64** %4, align 8
  store i64 %21, i64* %22, align 8
  store i32 -385410426, i32* %12
  br label %34

; <label>:23:                                     ; preds = %13
  %24 = load i64, i64* %8, align 8
  %25 = sub i64 0, %24
  %26 = sub i64 0, -1
  %27 = add i64 %25, %26
  %28 = sub i64 0, %27
  %29 = add i64 %24, -1
  store i64 %28, i64* %8, align 8
  %30 = load i64*, i64** %4, align 8
  %31 = getelementptr inbounds i64, i64* %30, i32 1
  store i64* %31, i64** %4, align 8
  store i32 475629636, i32* %12
  br label %34

; <label>:32:                                     ; preds = %13
  %33 = load i64*, i64** %4, align 8
  ret i64* %33

; <label>:34:                                     ; preds = %23, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.231
  %6 = load i32, i32* @y.232
  %7 = sub i32 %5, 312264263
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 312264263
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -131931517, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -131931517, label %19
    i32 1224765855, label %39
    i32 -466272078, label %57
    i32 -1651041026, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1224765855, i32 -1651041026
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  store i64* %0, i64** %40, align 8
  %41 = load i64*, i64** %40, align 8
  %42 = call i64* @_ZNSt10_Iter_baseIPlLb0EE7_S_baseES0_(i64* %41)
  store i64* %42, i64** %2
  %43 = load i32, i32* @x.231
  %44 = load i32, i32* @y.232
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -466272078, i32 -1651041026
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile i64*, i64** %2
  ret i64* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i64*, align 8
  store i64* %0, i64** %60, align 8
  %61 = load i64*, i64** %60, align 8
  %62 = call i64* @_ZNSt10_Iter_baseIPlLb0EE7_S_baseES0_(i64* %61)
  store i32 1224765855, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPlLb0EE7_S_baseES0_(i64*) #5 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm(%"struct.std::_Vector_base.6"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.6"*
  %6 = alloca i64*
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.235
  %11 = load i32, i32* @y.236
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 1350235109, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %131
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1350235109, label %23
    i32 176865291, label %43
    i32 -224668491, label %68
    i32 -1778220719, label %71
    i32 -1430823178, label %79
    i32 576029748, label %107
    i32 839469301, label %122
    i32 539766398, label %123
    i32 264549421, label %130
  ]

; <label>:22:                                     ; preds = %20
  br label %131

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 176865291, i32 539766398
  store i32 %42, i32* %19
  br label %131

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.6"*, align 8
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %7
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %44, align 8
  %47 = load volatile i64**, i64*** %7
  store i64* %1, i64** %47, align 8
  %48 = load volatile i64*, i64** %6
  store i64 %2, i64* %48, align 8
  %49 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %44, align 8
  store %"struct.std::_Vector_base.6"* %49, %"struct.std::_Vector_base.6"** %5
  %50 = load volatile i64**, i64*** %7
  %51 = load i64*, i64** %50, align 8
  %52 = icmp ne i64* %51, null
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.235
  %54 = load i32, i32* @y.236
  %55 = add i32 %53, 1834562944
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1834562944
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -224668491, i32 539766398
  store i32 %67, i32* %19
  br label %131

; <label>:68:                                     ; preds = %20
  %69 = load volatile i1, i1* %4
  %70 = select i1 %69, i32 -1778220719, i32 -1430823178
  store i32 %70, i32* %19
  br label %131

; <label>:71:                                     ; preds = %20
  %72 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %73 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %72, i32 0, i32 0
  %74 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %73 to %"class.std::allocator.7"*
  %75 = load volatile i64**, i64*** %7
  %76 = load i64*, i64** %75, align 8
  %77 = load volatile i64*, i64** %6
  %78 = load i64, i64* %77, align 8
  call void @_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm(%"class.std::allocator.7"* dereferenceable(1) %74, i64* %76, i64 %78)
  store i32 -1430823178, i32* %19
  br label %131

; <label>:79:                                     ; preds = %20
  %80 = load i32, i32* @x.235
  %81 = load i32, i32* @y.236
  %82 = add i32 %80, -978730204
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, -978730204
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 576029748, i32 264549421
  store i32 %106, i32* %19
  br label %131

; <label>:107:                                    ; preds = %20
  %108 = load i32, i32* @x.235
  %109 = load i32, i32* @y.236
  %110 = sub i32 0, 1
  %111 = add i32 %108, %110
  %112 = sub i32 %108, 1
  %113 = mul i32 %108, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %109, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  %121 = select i1 %119, i32 839469301, i32 264549421
  store i32 %121, i32* %19
  br label %131

; <label>:122:                                    ; preds = %20
  ret void

; <label>:123:                                    ; preds = %20
  %124 = alloca %"struct.std::_Vector_base.6"*, align 8
  %125 = alloca i64*, align 8
  %126 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %124, align 8
  store i64* %1, i64** %125, align 8
  store i64 %2, i64* %126, align 8
  %127 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %124, align 8
  %128 = load i64*, i64** %125, align 8
  %129 = icmp ne i64* %128, null
  store i32 176865291, i32* %19
  br label %131

; <label>:130:                                    ; preds = %20
  store i32 576029748, i32* %19
  br label %131

; <label>:131:                                    ; preds = %130, %123, %107, %79, %71, %68, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIlEE10deallocateERS0_Plm(%"class.std::allocator.7"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm(%"class.__gnu_cxx::new_allocator.8"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm(%"class.__gnu_cxx::new_allocator.8"*, i64*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.239
  %7 = load i32, i32* @y.240
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 990029292, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 990029292, label %19
    i32 -1780018983, label %39
    i32 -613098821, label %61
    i32 -1972985822, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1780018983, i32 -1972985822
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %41 = alloca i64*, align 8
  %42 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %40, align 8
  store i64* %1, i64** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %40, align 8
  %44 = load i64*, i64** %41, align 8
  %45 = bitcast i64* %44 to i8*
  call void @_ZdlPv(i8* %45) #3
  %46 = load i32, i32* @x.239
  %47 = load i32, i32* @y.240
  %48 = sub i32 %46, 440776156
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 440776156
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -613098821, i32 -1972985822
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %64 = alloca i64*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %63, align 8
  store i64* %1, i64** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %63, align 8
  %67 = load i64*, i64** %64, align 8
  %68 = bitcast i64* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 -1780018983, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.20"*, align 8
  store %"class.__gnu_cxx::new_allocator.20"* %0, %"class.__gnu_cxx::new_allocator.20"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.20"*, %"class.__gnu_cxx::new_allocator.20"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEEC2ERKS0_(%"struct.std::_Bvector_base"*, %"class.std::allocator.19"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Bvector_base"*, align 8
  %4 = alloca %"class.std::allocator.19"*, align 8
  %5 = alloca %"class.std::allocator.11", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %3, align 8
  store %"class.std::allocator.19"* %1, %"class.std::allocator.19"** %4, align 8
  %8 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3, align 8
  %9 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %8, i32 0, i32 0
  %10 = load %"class.std::allocator.19"*, %"class.std::allocator.19"** %4, align 8
  call void @_ZNSaImEC2IbEERKSaIT_E(%"class.std::allocator.11"* %5, %"class.std::allocator.19"* dereferenceable(1) %10) #3
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2EOSaImE(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9, %"class.std::allocator.11"* dereferenceable(1) %5)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  call void @_ZNSaImED2Ev(%"class.std::allocator.11"* %5) #3
  ret void

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %6, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %7, align 4
  call void @_ZNSaImED2Ev(%"class.std::allocator.11"* %5) #3
  br label %16

; <label>:16:                                     ; preds = %12
  %17 = load i8*, i8** %6, align 8
  %18 = load i32, i32* %7, align 4
  %19 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE13_M_initializeEm(%"class.std::vector.10"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.10"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::vector.10"*, %"class.std::vector.10"** %3, align 8
  %9 = bitcast %"class.std::vector.10"* %8 to %"struct.std::_Bvector_base"*
  %10 = load i64, i64* %4, align 8
  %11 = call i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"* %9, i64 %10)
  store i64* %11, i64** %5, align 8
  %12 = load i64*, i64** %5, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %13)
  %15 = getelementptr inbounds i64, i64* %12, i64 %14
  %16 = bitcast %"class.std::vector.10"* %8 to %"struct.std::_Bvector_base"*
  %17 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %17, i32 0, i32 2
  store i64* %15, i64** %18, align 8
  %19 = load i64*, i64** %5, align 8
  %20 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %19) #3
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %6, i64* %20, i32 0)
  %21 = bitcast %"class.std::vector.10"* %8 to %"struct.std::_Bvector_base"*
  %22 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %22, i32 0, i32 0
  %24 = bitcast %"struct.std::_Bit_iterator"* %23 to i8*
  %25 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 12, i32 8, i1 false)
  %26 = bitcast %"class.std::vector.10"* %8 to %"struct.std::_Bvector_base"*
  %27 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %27, i32 0, i32 0
  %29 = load i64, i64* %4, align 8
  %30 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %28, i64 %29)
  %31 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %31, i32 0, i32 0
  %33 = extractvalue { i64*, i32 } %30, 0
  store i64* %33, i64** %32, align 8
  %34 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %31, i32 0, i32 1
  %35 = extractvalue { i64*, i32 } %30, 1
  store i32 %35, i32* %34, align 8
  %36 = bitcast %"class.std::vector.10"* %8 to %"struct.std::_Bvector_base"*
  %37 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %37, i32 0, i32 1
  %39 = bitcast %"struct.std::_Bit_iterator"* %38 to i8*
  %40 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 12, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPmiEvT_S1_RKT0_(i64*, i64*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.247
  %7 = load i32, i32* @y.248
  %8 = sub i32 %6, 1696996793
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1696996793
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1403352502, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1403352502, label %20
    i32 1434169990, label %40
    i32 806637980, label %64
    i32 1775704058, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1434169990, i32 1775704058
  store i32 %39, i32* %16
  br label %74

; <label>:40:                                     ; preds = %17
  %41 = alloca i64*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i32*, align 8
  store i64* %0, i64** %41, align 8
  store i64* %1, i64** %42, align 8
  store i32* %2, i32** %43, align 8
  %44 = load i64*, i64** %41, align 8
  %45 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %44)
  %46 = load i64*, i64** %42, align 8
  %47 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %46)
  %48 = load i32*, i32** %43, align 8
  call void @_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %45, i64* %47, i32* dereferenceable(4) %48)
  %49 = load i32, i32* @x.247
  %50 = load i32, i32* @y.248
  %51 = sub i32 %49, -844974135
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -844974135
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 806637980, i32 1775704058
  store i32 %63, i32* %16
  br label %74

; <label>:64:                                     ; preds = %17
  ret void

; <label>:65:                                     ; preds = %17
  %66 = alloca i64*, align 8
  %67 = alloca i64*, align 8
  %68 = alloca i32*, align 8
  store i64* %0, i64** %66, align 8
  store i64* %1, i64** %67, align 8
  store i32* %2, i32** %68, align 8
  %69 = load i64*, i64** %66, align 8
  %70 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %69)
  %71 = load i64*, i64** %67, align 8
  %72 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %71)
  %73 = load i32*, i32** %68, align 8
  call void @_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %70, i64* %72, i32* dereferenceable(4) %73)
  store i32 1434169990, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*
  %5 = alloca i64**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.249
  %9 = load i32, i32* @y.250
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1036826257, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %192
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1036826257, label %21
    i32 1252497045, label %41
    i32 -337548810, label %64
    i32 -565722425, label %67
    i32 231503119, label %75
    i32 -1173726611, label %91
    i32 -644374985, label %119
    i32 -567197041, label %120
    i32 -2074395950, label %148
    i32 494331804, label %178
    i32 -1783304769, label %180
    i32 -2017309980, label %187
    i32 129142776, label %189
  ]

; <label>:20:                                     ; preds = %18
  br label %192

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1252497045, i32 -1783304769
  store i32 %40, i32* %17
  br label %192

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  store i64** %42, i64*** %5
  %43 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %43, align 8
  %44 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %43, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %44, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %4
  %45 = load volatile %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %4
  %46 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %45, i32 0, i32 2
  %47 = load i64*, i64** %46, align 8
  %48 = icmp ne i64* %47, null
  store i1 %48, i1* %3
  %49 = load i32, i32* @x.249
  %50 = load i32, i32* @y.250
  %51 = sub i32 %49, 197404181
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 197404181
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -337548810, i32 -1783304769
  store i32 %63, i32* %17
  br label %192

; <label>:64:                                     ; preds = %18
  %65 = load volatile i1, i1* %3
  %66 = select i1 %65, i32 -565722425, i32 231503119
  store i32 %66, i32* %17
  br label %192

; <label>:67:                                     ; preds = %18
  %68 = load volatile %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %4
  %69 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %68, i32 0, i32 2
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %71) #3
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load volatile i64**, i64*** %5
  store i64* %73, i64** %74, align 8
  store i32 -567197041, i32* %17
  br label %192

; <label>:75:                                     ; preds = %18
  %76 = load i32, i32* @x.249
  %77 = load i32, i32* @y.250
  %78 = sub i32 %76, 1485557496
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 1485557496
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 -1173726611, i32 -2017309980
  store i32 %90, i32* %17
  br label %192

; <label>:91:                                     ; preds = %18
  %92 = load volatile i64**, i64*** %5
  store i64* null, i64** %92, align 8
  %93 = load i32, i32* @x.249
  %94 = load i32, i32* @y.250
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 -644374985, i32 -2017309980
  store i32 %118, i32* %17
  br label %192

; <label>:119:                                    ; preds = %18
  store i32 -567197041, i32* %17
  br label %192

; <label>:120:                                    ; preds = %18
  %121 = load i32, i32* @x.249
  %122 = load i32, i32* @y.250
  %123 = add i32 %121, 1468726048
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, 1468726048
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 true, true
  %134 = and i1 %131, true
  %135 = and i1 %129, %133
  %136 = and i1 %132, true
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 true, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  %147 = select i1 %145, i32 -2074395950, i32 129142776
  store i32 %147, i32* %17
  br label %192

; <label>:148:                                    ; preds = %18
  %149 = load volatile i64**, i64*** %5
  %150 = load i64*, i64** %149, align 8
  store i64* %150, i64** %2
  %151 = load i32, i32* @x.249
  %152 = load i32, i32* @y.250
  %153 = sub i32 %151, 1971477333
  %154 = sub i32 %153, 1
  %155 = add i32 %154, 1971477333
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 true, true
  %164 = and i1 %161, true
  %165 = and i1 %159, %163
  %166 = and i1 %162, true
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 true, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  %177 = select i1 %175, i32 494331804, i32 129142776
  store i32 %177, i32* %17
  br label %192

; <label>:178:                                    ; preds = %18
  %179 = load volatile i64*, i64** %2
  ret i64* %179

; <label>:180:                                    ; preds = %18
  %181 = alloca i64*, align 8
  %182 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %182, align 8
  %183 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %182, align 8
  %184 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %183, i32 0, i32 2
  %185 = load i64*, i64** %184, align 8
  %186 = icmp ne i64* %185, null
  store i32 1252497045, i32* %17
  br label %192

; <label>:187:                                    ; preds = %18
  %188 = load volatile i64**, i64*** %5
  store i64* null, i64** %188, align 8
  store i32 -1173726611, i32* %17
  br label %192

; <label>:189:                                    ; preds = %18
  %190 = load volatile i64**, i64*** %5
  %191 = load i64*, i64** %190, align 8
  store i32 -2074395950, i32* %17
  br label %192

; <label>:192:                                    ; preds = %189, %187, %180, %148, %120, %119, %91, %75, %67, %64, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %5 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"* %5)
          to label %6 unwind label %37

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.251
  %8 = load i32, i32* @y.252
  %9 = add i32 %7, 231720132
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 231720132
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = and i1 %15, %16
  %18 = xor i1 %15, %16
  %19 = or i1 %17, %18
  %20 = or i1 %15, %16
  br i1 %19, label %21, label %44

; <label>:21:                                     ; preds = %6, %44
  %22 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %22) #3
  %23 = load i32, i32* @x.251
  %24 = load i32, i32* @y.252
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %44

; <label>:36:                                     ; preds = %21
  ret void

; <label>:37:                                     ; preds = %1
  %38 = landingpad { i8*, i32 }
          cleanup
          filter [0 x i8*] zeroinitializer
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %3, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %4, align 4
  %41 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %41) #3
  br label %42

; <label>:42:                                     ; preds = %37
  %43 = load i8*, i8** %3, align 8
  call void @__cxa_call_unexpected(i8* %43) #12
  unreachable

; <label>:44:                                     ; preds = %21, %6
  %45 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %45) #3
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2IbEERKSaIT_E(%"class.std::allocator.11"*, %"class.std::allocator.19"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.11"*, align 8
  %4 = alloca %"class.std::allocator.19"*, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %3, align 8
  store %"class.std::allocator.19"* %1, %"class.std::allocator.19"** %4, align 8
  %5 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %3, align 8
  %6 = bitcast %"class.std::allocator.11"* %5 to %"class.__gnu_cxx::new_allocator.12"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.12"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2EOSaImE(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"class.std::allocator.11"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  %4 = alloca %"class.std::allocator.11"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  store %"class.std::allocator.11"* %1, %"class.std::allocator.11"** %4, align 8
  %7 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  %8 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.11"*
  %9 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %4, align 8
  %10 = call dereferenceable(1) %"class.std::allocator.11"* @_ZSt4moveIRSaImEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.11"* dereferenceable(1) %9) #3
  call void @_ZNSaImEC2ERKS_(%"class.std::allocator.11"* %8, %"class.std::allocator.11"* dereferenceable(1) %10) #3
  %11 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7, i32 0, i32 0
  invoke void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %11)
          to label %12 unwind label %70

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.255
  %14 = load i32, i32* @y.256
  %15 = sub i32 %13, -1915502327
  %16 = sub i32 %15, 1
  %17 = add i32 %16, -1915502327
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %80

; <label>:39:                                     ; preds = %12, %80
  %40 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7, i32 0, i32 1
  %41 = load i32, i32* @x.255
  %42 = load i32, i32* @y.256
  %43 = add i32 %41, -1296815245
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1296815245
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %80

; <label>:67:                                     ; preds = %39
  invoke void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %40)
          to label %68 unwind label %70

; <label>:68:                                     ; preds = %67
  %69 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7, i32 0, i32 2
  store i64* null, i64** %69, align 8
  ret void

; <label>:70:                                     ; preds = %67, %2
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %5, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %6, align 4
  %74 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.11"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.11"* %74) #3
  br label %75

; <label>:75:                                     ; preds = %70
  %76 = load i8*, i8** %5, align 8
  %77 = load i32, i32* %6, align 4
  %78 = insertvalue { i8*, i32 } undef, i8* %76, 0
  %79 = insertvalue { i8*, i32 } %78, i32 %77, 1
  resume { i8*, i32 } %79

; <label>:80:                                     ; preds = %39, %12
  %81 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7, i32 0, i32 1
  br label %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImED2Ev(%"class.std::allocator.11"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.11"*, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %2, align 8
  %3 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %2, align 8
  %4 = bitcast %"class.std::allocator.11"* %3 to %"class.__gnu_cxx::new_allocator.12"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.12"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.12"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.11"* @_ZSt4moveIRSaImEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.11"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.11"*, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %2, align 8
  %3 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %2, align 8
  ret %"class.std::allocator.11"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2ERKS_(%"class.std::allocator.11"*, %"class.std::allocator.11"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.11"*, align 8
  %4 = alloca %"class.std::allocator.11"*, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %3, align 8
  store %"class.std::allocator.11"* %1, %"class.std::allocator.11"** %4, align 8
  %5 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %3, align 8
  %6 = bitcast %"class.std::allocator.11"* %5 to %"class.__gnu_cxx::new_allocator.12"*
  %7 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %4, align 8
  %8 = bitcast %"class.std::allocator.11"* %7 to %"class.__gnu_cxx::new_allocator.12"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.12"* %6, %"class.__gnu_cxx::new_allocator.12"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.265
  %5 = load i32, i32* @y.266
  %6 = add i32 %4, 2091647436
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2091647436
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1808005307, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1808005307, label %18
    i32 1609984350, label %26
    i32 -2047218271, label %45
    i32 -1730935084, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1609984350, i32 -1730935084
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %27, align 8
  %28 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %27, align 8
  %29 = bitcast %"struct.std::_Bit_iterator"* %28 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %29, i64* null, i32 0)
  %30 = load i32, i32* @x.265
  %31 = load i32, i32* @y.266
  %32 = add i32 %30, 563794661
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 563794661
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -2047218271, i32 -1730935084
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %47, align 8
  %48 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %47, align 8
  %49 = bitcast %"struct.std::_Bit_iterator"* %48 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %49, i64* null, i32 0)
  store i32 1609984350, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %1, %"class.__gnu_cxx::new_allocator.12"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"*, i64*, i32) unnamed_addr #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.269
  %7 = load i32, i32* @y.270
  %8 = add i32 %6, -395802504
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -395802504
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1031999203, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1031999203, label %20
    i32 -401568373, label %40
    i32 1431827945, label %65
    i32 1248045440, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -401568373, i32 1248045440
  store i32 %39, i32* %16
  br label %76

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %41, align 8
  store i64* %1, i64** %42, align 8
  store i32 %2, i32* %43, align 4
  %44 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %41, align 8
  %45 = bitcast %"struct.std::_Bit_iterator_base"* %44 to %"struct.std::iterator"*
  %46 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %44, i32 0, i32 0
  %47 = load i64*, i64** %42, align 8
  store i64* %47, i64** %46, align 8
  %48 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %44, i32 0, i32 1
  %49 = load i32, i32* %43, align 4
  store i32 %49, i32* %48, align 8
  %50 = load i32, i32* @x.269
  %51 = load i32, i32* @y.270
  %52 = add i32 %50, -821433782
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -821433782
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1431827945, i32 1248045440
  store i32 %64, i32* %16
  br label %76

; <label>:65:                                     ; preds = %17
  ret void

; <label>:66:                                     ; preds = %17
  %67 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %68 = alloca i64*, align 8
  %69 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %67, align 8
  store i64* %1, i64** %68, align 8
  store i32 %2, i32* %69, align 4
  %70 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %67, align 8
  %71 = bitcast %"struct.std::_Bit_iterator_base"* %70 to %"struct.std::iterator"*
  %72 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %70, i32 0, i32 0
  %73 = load i64*, i64** %68, align 8
  store i64* %73, i64** %72, align 8
  %74 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %70, i32 0, i32 1
  %75 = load i32, i32* %69, align 4
  store i32 %75, i32* %74, align 8
  store i32 -401568373, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.12"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.271
  %5 = load i32, i32* @y.272
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 179644770, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %46
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 179644770, label %17
    i32 -78198744, label %25
    i32 -2129683663, label %42
    i32 -1535021368, label %43
  ]

; <label>:16:                                     ; preds = %14
  br label %46

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -78198744, i32 -1535021368
  store i32 %24, i32* %13
  br label %46

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %26, align 8
  %28 = load i32, i32* @x.271
  %29 = load i32, i32* @y.272
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 -2129683663, i32 -1535021368
  store i32 %41, i32* %13
  br label %46

; <label>:42:                                     ; preds = %14
  ret void

; <label>:43:                                     ; preds = %14
  %44 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %44, align 8
  %45 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %44, align 8
  store i32 -78198744, i32* %13
  br label %46

; <label>:46:                                     ; preds = %43, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bvector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6 to %"class.std::allocator.11"*
  %8 = load i64, i64* %4, align 8
  %9 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %8)
  %10 = call i64* @_ZNSt16allocator_traitsISaImEE8allocateERS0_m(%"class.std::allocator.11"* dereferenceable(1) %7, i64 %9)
  ret i64* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64) #5 comdat align 2 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = sub i64 0, %3
  %5 = sub i64 0, 64
  %6 = add i64 %4, %5
  %7 = sub i64 0, %6
  %8 = add i64 %3, 64
  %9 = sub i64 0, 1
  %10 = add i64 %7, %9
  %11 = sub i64 %7, 1
  %12 = udiv i64 %10, 64
  ret i64 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = bitcast i64* %3 to i8*
  %5 = bitcast i8* %4 to i64*
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"*, i64*, i32) unnamed_addr #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.279
  %7 = load i32, i32* @y.280
  %8 = add i32 %6, -80863174
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -80863174
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1866687747, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1866687747, label %20
    i32 1660955184, label %28
    i32 -1136675319, label %63
    i32 -316768948, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1660955184, i32 -316768948
  store i32 %27, i32* %16
  br label %72

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Bit_iterator"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i32 %2, i32* %31, align 4
  %32 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %29, align 8
  %33 = bitcast %"struct.std::_Bit_iterator"* %32 to %"struct.std::_Bit_iterator_base"*
  %34 = load i64*, i64** %30, align 8
  %35 = load i32, i32* %31, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %33, i64* %34, i32 %35)
  %36 = load i32, i32* @x.279
  %37 = load i32, i32* @y.280
  %38 = add i32 %36, -1893806118
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1893806118
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -1136675319, i32 -316768948
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"struct.std::_Bit_iterator"*, align 8
  %66 = alloca i64*, align 8
  %67 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %65, align 8
  store i64* %1, i64** %66, align 8
  store i32 %2, i32* %67, align 4
  %68 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %65, align 8
  %69 = bitcast %"struct.std::_Bit_iterator"* %68 to %"struct.std::_Bit_iterator_base"*
  %70 = load i64*, i64** %66, align 8
  %71 = load i32, i32* %67, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %69, i64* %70, i32 %71)
  store i32 1660955184, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca { i64*, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.281
  %7 = load i32, i32* @y.282
  %8 = sub i32 %6, -431873936
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -431873936
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 41306506, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 41306506, label %20
    i32 1372031769, label %28
    i32 -1959089534, label %57
    i32 -1512468443, label %59
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1372031769, i32 -1512468443
  store i32 %27, i32* %16
  br label %73

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Bit_iterator", align 8
  %30 = alloca %"struct.std::_Bit_iterator"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %30, align 8
  store i64 %1, i64* %31, align 8
  %33 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %30, align 8
  %34 = bitcast %"struct.std::_Bit_iterator"* %32 to i8*
  %35 = bitcast %"struct.std::_Bit_iterator"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false)
  %36 = load i64, i64* %31, align 8
  %37 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %32, i64 %36)
  %38 = bitcast %"struct.std::_Bit_iterator"* %29 to i8*
  %39 = bitcast %"struct.std::_Bit_iterator"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %41 = load { i64*, i32 }, { i64*, i32 }* %40, align 8
  store { i64*, i32 } %41, { i64*, i32 }* %3
  %42 = load i32, i32* @x.281
  %43 = load i32, i32* @y.282
  %44 = add i32 %42, 1876969419
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1876969419
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1959089534, i32 -1512468443
  store i32 %56, i32* %16
  br label %73

; <label>:57:                                     ; preds = %17
  %58 = load volatile { i64*, i32 }, { i64*, i32 }* %3
  ret { i64*, i32 } %58

; <label>:59:                                     ; preds = %17
  %60 = alloca %"struct.std::_Bit_iterator", align 8
  %61 = alloca %"struct.std::_Bit_iterator"*, align 8
  %62 = alloca i64, align 8
  %63 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %61, align 8
  store i64 %1, i64* %62, align 8
  %64 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %61, align 8
  %65 = bitcast %"struct.std::_Bit_iterator"* %63 to i8*
  %66 = bitcast %"struct.std::_Bit_iterator"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 16, i32 8, i1 false)
  %67 = load i64, i64* %62, align 8
  %68 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %63, i64 %67)
  %69 = bitcast %"struct.std::_Bit_iterator"* %60 to i8*
  %70 = bitcast %"struct.std::_Bit_iterator"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 16, i32 8, i1 false)
  %71 = bitcast %"struct.std::_Bit_iterator"* %60 to { i64*, i32 }*
  %72 = load { i64*, i32 }, { i64*, i32 }* %71, align 8
  store i32 1372031769, i32* %16
  br label %73

; <label>:73:                                     ; preds = %59, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaImEE8allocateERS0_m(%"class.std::allocator.11"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.283
  %7 = load i32, i32* @y.284
  %8 = sub i32 %6, 933654908
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 933654908
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1897018531, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1897018531, label %20
    i32 -1297377885, label %28
    i32 186588275, label %50
    i32 -1088511143, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1297377885, i32 -1088511143
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.11"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %29, align 8
  %32 = bitcast %"class.std::allocator.11"* %31 to %"class.__gnu_cxx::new_allocator.12"*
  %33 = load i64, i64* %30, align 8
  %34 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.12"* %32, i64 %33, i8* null)
  store i64* %34, i64** %3
  %35 = load i32, i32* @x.283
  %36 = load i32, i32* @y.284
  %37 = add i32 %35, -1731095326
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1731095326
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 186588275, i32 -1088511143
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  %51 = load volatile i64*, i64** %3
  ret i64* %51

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.11"*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %53, align 8
  store i64 %1, i64* %54, align 8
  %55 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %53, align 8
  %56 = bitcast %"class.std::allocator.11"* %55 to %"class.__gnu_cxx::new_allocator.12"*
  %57 = load i64, i64* %54, align 8
  %58 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.12"* %56, i64 %57, i8* null)
  store i32 -1297377885, i32* %16
  br label %59

; <label>:59:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.12"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.12"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -411060767, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -411060767, label %16
    i32 1531069089, label %21
    i32 -1011865296, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1531069089, i32 -1011865296
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i64*
  ret i64* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.12"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %3, align 8
  %6 = bitcast %"struct.std::_Bit_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %7 = load i64, i64* %4, align 8
  call void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"* %6, i64 %7)
  ret %"struct.std::_Bit_iterator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"*, i64) #5 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Bit_iterator_base"*
  %5 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %8 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %5, align 8
  store %"struct.std::_Bit_iterator_base"* %8, %"struct.std::_Bit_iterator_base"** %4
  %9 = load i64, i64* %6, align 8
  %10 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %11 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = sub i64 0, %13
  %15 = sub i64 %9, %14
  %16 = add nsw i64 %9, %13
  store i64 %15, i64* %7, align 8
  %17 = load i64, i64* %7, align 8
  %18 = sdiv i64 %17, 64
  %19 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %19, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 %18
  store i64* %22, i64** %20, align 8
  %23 = load i64, i64* %7, align 8
  %24 = srem i64 %23, 64
  store i64 %24, i64* %7, align 8
  %25 = load i64, i64* %7, align 8
  store i64 %25, i64* %3
  %26 = alloca i32
  store i32 2028985919, i32* %26
  br label %27

; <label>:27:                                     ; preds = %2, %49
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 2028985919, label %30
    i32 1790976615, label %34
    i32 -418751092, label %44
  ]

; <label>:29:                                     ; preds = %27
  br label %49

; <label>:30:                                     ; preds = %27
  %31 = load volatile i64, i64* %3
  %32 = icmp slt i64 %31, 0
  %33 = select i1 %32, i32 1790976615, i32 -418751092
  store i32 %33, i32* %26
  br label %49

; <label>:34:                                     ; preds = %27
  %35 = load i64, i64* %7, align 8
  %36 = add i64 %35, -2727134444574599245
  %37 = add i64 %36, 64
  %38 = sub i64 %37, -2727134444574599245
  %39 = add nsw i64 %35, 64
  store i64 %38, i64* %7, align 8
  %40 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %41 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds i64, i64* %42, i32 -1
  store i64* %43, i64** %41, align 8
  store i32 -418751092, i32* %26
  br label %49

; <label>:44:                                     ; preds = %27
  %45 = load i64, i64* %7, align 8
  %46 = trunc i64 %45 to i32
  %47 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %48 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %47, i32 0, i32 1
  store i32 %46, i32* %48, align 8
  ret void

; <label>:49:                                     ; preds = %34, %30, %29
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64*, i64*, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i1
  %5 = alloca i32*
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.293
  %11 = load i32, i32* @y.294
  %12 = add i32 %10, 1225835907
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 1225835907
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -697657488, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %219
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -697657488, label %24
    i32 -992052549, label %32
    i32 -531705112, label %69
    i32 1989578984, label %70
    i32 2119731842, label %85
    i32 1552265079, label %106
    i32 -1597334013, label %109
    i32 1262116579, label %124
    i32 1802910475, label %157
    i32 -1769970022, label %158
    i32 1203287248, label %173
    i32 -1275932074, label %193
    i32 2025272022, label %194
    i32 -1839485555, label %195
    i32 250843298, label %202
    i32 -1404118122, label %208
    i32 -1841693285, label %214
  ]

; <label>:23:                                     ; preds = %21
  br label %219

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -992052549, i32 -1839485555
  store i32 %31, i32* %20
  br label %219

; <label>:32:                                     ; preds = %21
  %33 = alloca i64*, align 8
  store i64** %33, i64*** %7
  %34 = alloca i64*, align 8
  store i64** %34, i64*** %6
  %35 = alloca i32*, align 8
  %36 = alloca i32, align 4
  store i32* %36, i32** %5
  %37 = load volatile i64**, i64*** %7
  store i64* %0, i64** %37, align 8
  %38 = load volatile i64**, i64*** %6
  store i64* %1, i64** %38, align 8
  store i32* %2, i32** %35, align 8
  %39 = load i32*, i32** %35, align 8
  %40 = load i32, i32* %39, align 4
  %41 = load volatile i32*, i32** %5
  store i32 %40, i32* %41, align 4
  %42 = load i32, i32* @x.293
  %43 = load i32, i32* @y.294
  %44 = sub i32 %42, -1933701574
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1933701574
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -531705112, i32 -1839485555
  store i32 %68, i32* %20
  br label %219

; <label>:69:                                     ; preds = %21
  store i32 1989578984, i32* %20
  br label %219

; <label>:70:                                     ; preds = %21
  %71 = load i32, i32* @x.293
  %72 = load i32, i32* @y.294
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 2119731842, i32 250843298
  store i32 %84, i32* %20
  br label %219

; <label>:85:                                     ; preds = %21
  %86 = load volatile i64**, i64*** %7
  %87 = load i64*, i64** %86, align 8
  %88 = load volatile i64**, i64*** %6
  %89 = load i64*, i64** %88, align 8
  %90 = icmp ne i64* %87, %89
  store i1 %90, i1* %4
  %91 = load i32, i32* @x.293
  %92 = load i32, i32* @y.294
  %93 = add i32 %91, -1100138393
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, -1100138393
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  %105 = select i1 %103, i32 1552265079, i32 250843298
  store i32 %105, i32* %20
  br label %219

; <label>:106:                                    ; preds = %21
  %107 = load volatile i1, i1* %4
  %108 = select i1 %107, i32 -1597334013, i32 2025272022
  store i32 %108, i32* %20
  br label %219

; <label>:109:                                    ; preds = %21
  %110 = load i32, i32* @x.293
  %111 = load i32, i32* @y.294
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 1262116579, i32 -1404118122
  store i32 %123, i32* %20
  br label %219

; <label>:124:                                    ; preds = %21
  %125 = load volatile i32*, i32** %5
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %126 to i64
  %128 = load volatile i64**, i64*** %7
  %129 = load i64*, i64** %128, align 8
  store i64 %127, i64* %129, align 8
  %130 = load i32, i32* @x.293
  %131 = load i32, i32* @y.294
  %132 = add i32 %130, -368548446
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, -368548446
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 true, true
  %143 = and i1 %140, true
  %144 = and i1 %138, %142
  %145 = and i1 %141, true
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 true, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  %156 = select i1 %154, i32 1802910475, i32 -1404118122
  store i32 %156, i32* %20
  br label %219

; <label>:157:                                    ; preds = %21
  store i32 -1769970022, i32* %20
  br label %219

; <label>:158:                                    ; preds = %21
  %159 = load i32, i32* @x.293
  %160 = load i32, i32* @y.294
  %161 = sub i32 0, 1
  %162 = add i32 %159, %161
  %163 = sub i32 %159, 1
  %164 = mul i32 %159, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %160, 10
  %168 = and i1 %166, %167
  %169 = xor i1 %166, %167
  %170 = or i1 %168, %169
  %171 = or i1 %166, %167
  %172 = select i1 %170, i32 1203287248, i32 -1841693285
  store i32 %172, i32* %20
  br label %219

; <label>:173:                                    ; preds = %21
  %174 = load volatile i64**, i64*** %7
  %175 = load i64*, i64** %174, align 8
  %176 = getelementptr inbounds i64, i64* %175, i32 1
  %177 = load volatile i64**, i64*** %7
  store i64* %176, i64** %177, align 8
  %178 = load i32, i32* @x.293
  %179 = load i32, i32* @y.294
  %180 = add i32 %178, -416769470
  %181 = sub i32 %180, 1
  %182 = sub i32 %181, -416769470
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = and i1 %186, %187
  %189 = xor i1 %186, %187
  %190 = or i1 %188, %189
  %191 = or i1 %186, %187
  %192 = select i1 %190, i32 -1275932074, i32 -1841693285
  store i32 %192, i32* %20
  br label %219

; <label>:193:                                    ; preds = %21
  store i32 1989578984, i32* %20
  br label %219

; <label>:194:                                    ; preds = %21
  ret void

; <label>:195:                                    ; preds = %21
  %196 = alloca i64*, align 8
  %197 = alloca i64*, align 8
  %198 = alloca i32*, align 8
  %199 = alloca i32, align 4
  store i64* %0, i64** %196, align 8
  store i64* %1, i64** %197, align 8
  store i32* %2, i32** %198, align 8
  %200 = load i32*, i32** %198, align 8
  %201 = load i32, i32* %200, align 4
  store i32 %201, i32* %199, align 4
  store i32 -992052549, i32* %20
  br label %219

; <label>:202:                                    ; preds = %21
  %203 = load volatile i64**, i64*** %7
  %204 = load i64*, i64** %203, align 8
  %205 = load volatile i64**, i64*** %6
  %206 = load i64*, i64** %205, align 8
  %207 = icmp ne i64* %204, %206
  store i32 2119731842, i32* %20
  br label %219

; <label>:208:                                    ; preds = %21
  %209 = load volatile i32*, i32** %5
  %210 = load i32, i32* %209, align 4
  %211 = sext i32 %210 to i64
  %212 = load volatile i64**, i64*** %7
  %213 = load i64*, i64** %212, align 8
  store i64 %211, i64* %213, align 8
  store i32 1262116579, i32* %20
  br label %219

; <label>:214:                                    ; preds = %21
  %215 = load volatile i64**, i64*** %7
  %216 = load i64*, i64** %215, align 8
  %217 = getelementptr inbounds i64, i64* %216, i32 1
  %218 = load volatile i64**, i64*** %7
  store i64* %217, i64** %218, align 8
  store i32 1203287248, i32* %20
  br label %219

; <label>:219:                                    ; preds = %214, %208, %202, %195, %193, %173, %158, %157, %124, %109, %106, %85, %70, %69, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.295
  %6 = load i32, i32* @y.296
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1333344796, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %75
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1333344796, label %18
    i32 2074047369, label %38
    i32 1631714120, label %69
    i32 345254386, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %75

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2074047369, i32 345254386
  store i32 %37, i32* %14
  br label %75

; <label>:38:                                     ; preds = %15
  %39 = alloca i64*, align 8
  store i64* %0, i64** %39, align 8
  %40 = load i64*, i64** %39, align 8
  %41 = call i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64* %40)
  store i64* %41, i64** %2
  %42 = load i32, i32* @x.295
  %43 = load i32, i32* @y.296
  %44 = sub i32 %42, -1565770516
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1565770516
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1631714120, i32 345254386
  store i32 %68, i32* %14
  br label %75

; <label>:69:                                     ; preds = %15
  %70 = load volatile i64*, i64** %2
  ret i64* %70

; <label>:71:                                     ; preds = %15
  %72 = alloca i64*, align 8
  store i64* %0, i64** %72, align 8
  %73 = load i64*, i64** %72, align 8
  %74 = call i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64* %73)
  store i32 2074047369, i32* %14
  br label %75

; <label>:75:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64*) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.297
  %6 = load i32, i32* @y.298
  %7 = add i32 %5, -1202244620
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1202244620
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 500152706, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 500152706, label %19
    i32 -1841604403, label %39
    i32 951503257, label %56
    i32 -279076550, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1841604403, i32 -279076550
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  store i64* %0, i64** %40, align 8
  %41 = load i64*, i64** %40, align 8
  store i64* %41, i64** %2
  %42 = load i32, i32* @x.297
  %43 = load i32, i32* @y.298
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 951503257, i32 -279076550
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile i64*, i64** %2
  ret i64* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca i64*, align 8
  store i64* %0, i64** %59, align 8
  %60 = load i64*, i64** %59, align 8
  store i32 -1841604403, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"struct.std::_Bvector_base"*
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.299
  %8 = load i32, i32* @y.300
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 266577660, i32* %16
  br label %17

; <label>:17:                                     ; preds = %1, %237
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 266577660, label %20
    i32 -466637344, label %28
    i32 -259887134, label %65
    i32 -227013014, label %68
    i32 -836520941, label %84
    i32 -1274690710, label %145
    i32 -856950818, label %146
    i32 -80176781, label %147
    i32 -2000245271, label %157
  ]

; <label>:19:                                     ; preds = %17
  br label %237

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -466637344, i32 -80176781
  store i32 %27, i32* %16
  br label %237

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Bvector_base"*, align 8
  %30 = alloca i64, align 8
  store i64* %30, i64** %4
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %29, align 8
  %31 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %29, align 8
  store %"struct.std::_Bvector_base"* %31, %"struct.std::_Bvector_base"** %3
  %32 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %33 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Bit_iterator"* %34 to %"struct.std::_Bit_iterator_base"*
  %36 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = icmp ne i64* %37, null
  store i1 %38, i1* %2
  %39 = load i32, i32* @x.299
  %40 = load i32, i32* @y.300
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -259887134, i32 -80176781
  store i32 %64, i32* %16
  br label %237

; <label>:65:                                     ; preds = %17
  %66 = load volatile i1, i1* %2
  %67 = select i1 %66, i32 -227013014, i32 -856950818
  store i32 %67, i32* %16
  br label %237

; <label>:68:                                     ; preds = %17
  %69 = load i32, i32* @x.299
  %70 = load i32, i32* @y.300
  %71 = add i32 %69, -846190486
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -846190486
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 -836520941, i32 -2000245271
  store i32 %83, i32* %16
  br label %237

; <label>:84:                                     ; preds = %17
  %85 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %86 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %85, i32 0, i32 0
  %87 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %86) #3
  %88 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %89 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %89, i32 0, i32 0
  %91 = bitcast %"struct.std::_Bit_iterator"* %90 to %"struct.std::_Bit_iterator_base"*
  %92 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %91, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = ptrtoint i64* %87 to i64
  %95 = ptrtoint i64* %93 to i64
  %96 = sub i64 %94, 3237297140309515941
  %97 = sub i64 %96, %95
  %98 = add i64 %97, 3237297140309515941
  %99 = sub i64 %94, %95
  %100 = sdiv exact i64 %98, 8
  %101 = load volatile i64*, i64** %4
  store i64 %100, i64* %101, align 8
  %102 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %103 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %102, i32 0, i32 0
  %104 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %103 to %"class.std::allocator.11"*
  %105 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %106 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %106, i32 0, i32 2
  %108 = load i64*, i64** %107, align 8
  %109 = load volatile i64*, i64** %4
  %110 = load i64, i64* %109, align 8
  %111 = add i64 0, 174748812896150539
  %112 = sub i64 %111, %110
  %113 = sub i64 %112, 174748812896150539
  %114 = sub i64 0, %110
  %115 = getelementptr inbounds i64, i64* %108, i64 %113
  %116 = load volatile i64*, i64** %4
  %117 = load i64, i64* %116, align 8
  call void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.11"* dereferenceable(1) %104, i64* %115, i64 %117)
  %118 = load i32, i32* @x.299
  %119 = load i32, i32* @y.300
  %120 = add i32 %118, 1608383177
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, 1608383177
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 -1274690710, i32 -2000245271
  store i32 %144, i32* %16
  br label %237

; <label>:145:                                    ; preds = %17
  store i32 -856950818, i32* %16
  br label %237

; <label>:146:                                    ; preds = %17
  ret void

; <label>:147:                                    ; preds = %17
  %148 = alloca %"struct.std::_Bvector_base"*, align 8
  %149 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %148, align 8
  %150 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %148, align 8
  %151 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %150, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %151, i32 0, i32 0
  %153 = bitcast %"struct.std::_Bit_iterator"* %152 to %"struct.std::_Bit_iterator_base"*
  %154 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %153, i32 0, i32 0
  %155 = load i64*, i64** %154, align 8
  %156 = icmp ne i64* %155, null
  store i32 -466637344, i32* %16
  br label %237

; <label>:157:                                    ; preds = %17
  %158 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %159 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %158, i32 0, i32 0
  %160 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %159) #3
  %161 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %162 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %161, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %162, i32 0, i32 0
  %164 = bitcast %"struct.std::_Bit_iterator"* %163 to %"struct.std::_Bit_iterator_base"*
  %165 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %164, i32 0, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = ptrtoint i64* %160 to i64
  %168 = ptrtoint i64* %166 to i64
  %169 = add i64 0, -7514257956193848075
  %170 = sub i64 %169, %167
  %171 = sub i64 %170, -7514257956193848075
  %172 = sub i64 0, %167
  %173 = sub i64 %171, -6983041793168349127
  %174 = add i64 %173, %168
  %175 = add i64 %174, -6983041793168349127
  %176 = add i64 %171, %168
  %177 = add i64 %167, 6518352756643196331
  %178 = sub i64 %177, %168
  %179 = sub i64 %178, 6518352756643196331
  %180 = sub i64 %167, %168
  %181 = mul i64 %179, %168
  %182 = sub i64 0, %167
  %183 = add i64 0, %182
  %184 = sub i64 0, %167
  %185 = sub i64 0, %168
  %186 = sub i64 %183, %185
  %187 = add i64 %183, %168
  %188 = sub i64 %167, -3018123566388711196
  %189 = sub i64 %188, %168
  %190 = add i64 %189, -3018123566388711196
  %191 = sub i64 %167, %168
  %192 = sub i64 %190, -6599152128292268193
  %193 = sub i64 %192, 8
  %194 = add i64 %193, -6599152128292268193
  %195 = sub i64 %190, 8
  %196 = mul i64 %194, 8
  %197 = shl i64 %190, 8
  %198 = shl i64 %190, 8
  %199 = sub i64 0, 8
  %200 = add i64 %190, %199
  %201 = sub i64 %190, 8
  %202 = mul i64 %200, 8
  %203 = sdiv exact i64 %190, 8
  %204 = load volatile i64*, i64** %4
  store i64 %203, i64* %204, align 8
  %205 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %206 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %205, i32 0, i32 0
  %207 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %206 to %"class.std::allocator.11"*
  %208 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %209 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %208, i32 0, i32 0
  %210 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %209, i32 0, i32 2
  %211 = load i64*, i64** %210, align 8
  %212 = load volatile i64*, i64** %4
  %213 = load i64, i64* %212, align 8
  %214 = sub i64 0, 0
  %215 = add i64 0, %214
  %216 = sub i64 0, 0
  %217 = sub i64 0, %213
  %218 = sub i64 %215, %217
  %219 = add i64 %215, %213
  %220 = add i64 0, -4075222337782434245
  %221 = sub i64 %220, %213
  %222 = sub i64 %221, -4075222337782434245
  %223 = sub i64 0, %213
  %224 = mul i64 %222, %213
  %225 = shl i64 0, %213
  %226 = sub i64 0, %213
  %227 = add i64 0, %226
  %228 = sub i64 0, %213
  %229 = mul i64 %227, %213
  %230 = sub i64 0, -8195670372773829455
  %231 = sub i64 %230, %213
  %232 = add i64 %231, -8195670372773829455
  %233 = sub i64 0, %213
  %234 = getelementptr inbounds i64, i64* %211, i64 %232
  %235 = load volatile i64*, i64** %4
  %236 = load i64, i64* %235, align 8
  call void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.11"* dereferenceable(1) %207, i64* %234, i64 %236)
  store i32 -836520941, i32* %16
  br label %237

; <label>:237:                                    ; preds = %157, %147, %145, %84, %68, %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.301
  %5 = load i32, i32* @y.302
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 262765782, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 262765782, label %17
    i32 357382194, label %25
    i32 -185832485, label %55
    i32 1841290442, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 357382194, i32 1841290442
  store i32 %24, i32* %13
  br label %60

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %26, align 8
  %27 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %27 to %"class.std::allocator.11"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.11"* %28) #3
  %29 = load i32, i32* @x.301
  %30 = load i32, i32* @y.302
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -185832485, i32 1841290442
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %57, align 8
  %58 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %57, align 8
  %59 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %58 to %"class.std::allocator.11"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.11"* %59) #3
  store i32 357382194, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %25, %17, %16
  br label %14
}

declare void @__cxa_call_unexpected(i8*)

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.11"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.11"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.11"* %0, %"class.std::allocator.11"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.11"*, %"class.std::allocator.11"** %4, align 8
  %8 = bitcast %"class.std::allocator.11"* %7 to %"class.__gnu_cxx::new_allocator.12"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.12"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.12"*, i64*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.12"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.12"* %0, %"class.__gnu_cxx::new_allocator.12"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.12"*, %"class.__gnu_cxx::new_allocator.12"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIbED2Ev(%"class.__gnu_cxx::new_allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.20"*, align 8
  store %"class.__gnu_cxx::new_allocator.20"* %0, %"class.__gnu_cxx::new_allocator.20"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.20"*, %"class.__gnu_cxx::new_allocator.20"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EEC2Ev(%"struct.std::_Vector_base.15"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %2, align 8
  %3 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.311
  %5 = load i32, i32* @y.312
  %6 = sub i32 %4, 1416119683
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1416119683
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1892121560, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %56
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1892121560, label %18
    i32 -1214373886, label %26
    i32 -869582120, label %48
    i32 -1426310830, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %56

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1214373886, i32 -1426310830
  store i32 %25, i32* %14
  br label %56

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %28 to %"class.std::allocator.16"*
  call void @_ZNSaISt6vectorIlSaIlEEEC2Ev(%"class.std::allocator.16"* %29) #3
  %30 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %28, i32 0, i32 0
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %28, i32 0, i32 1
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %31, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %28, i32 0, i32 2
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %32, align 8
  %33 = load i32, i32* @x.311
  %34 = load i32, i32* @y.312
  %35 = add i32 %33, -137549309
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -137549309
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -869582120, i32 -1426310830
  store i32 %47, i32* %14
  br label %56

; <label>:48:                                     ; preds = %15
  ret void

; <label>:49:                                     ; preds = %15
  %50 = alloca %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"** %50, align 8
  %51 = load %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"** %50, align 8
  %52 = bitcast %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %51 to %"class.std::allocator.16"*
  call void @_ZNSaISt6vectorIlSaIlEEEC2Ev(%"class.std::allocator.16"* %52) #3
  %53 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %51, i32 0, i32 0
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %53, align 8
  %54 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %51, i32 0, i32 1
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %54, align 8
  %55 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %51, i32 0, i32 2
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %55, align 8
  store i32 -1214373886, i32* %14
  br label %56

; <label>:56:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIlSaIlEEEC2Ev(%"class.std::allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.313
  %5 = load i32, i32* @y.314
  %6 = add i32 %4, -762949767
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -762949767
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -694679987, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -694679987, label %18
    i32 1084513863, label %26
    i32 -1603257272, label %57
    i32 -945220494, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1084513863, i32 -945220494
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %27, align 8
  %28 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %27, align 8
  %29 = bitcast %"class.std::allocator.16"* %28 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEEC2Ev(%"class.__gnu_cxx::new_allocator.17"* %29) #3
  %30 = load i32, i32* @x.313
  %31 = load i32, i32* @y.314
  %32 = sub i32 %30, -472387599
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -472387599
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1603257272, i32 -945220494
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %59, align 8
  %60 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %59, align 8
  %61 = bitcast %"class.std::allocator.16"* %60 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEEC2Ev(%"class.__gnu_cxx::new_allocator.17"* %61) #3
  store i32 1084513863, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEEC2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPllEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPlEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPlEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPlEEvT_S3_(i64*, i64*) #5 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5GraphILl0EE8add_edgeEllll(%class.Graph*, i64, i64, i64, i64) #0 comdat align 2 {
  %6 = alloca %class.Graph*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store %class.Graph* %0, %class.Graph** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store i64 %3, i64* %9, align 8
  store i64 %4, i64* %10, align 8
  %11 = load %class.Graph*, %class.Graph** %6, align 8
  %12 = getelementptr inbounds %class.Graph, %class.Graph* %11, i32 0, i32 2
  %13 = load i64, i64* %7, align 8
  %14 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"* %12, i64 %13) #3
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE12emplace_backIJRlS6_S6_S6_EEEvDpOT_(%"class.std::vector.0"* %14, i64* dereferenceable(8) %7, i64* dereferenceable(8) %8, i64* dereferenceable(8) %9, i64* dereferenceable(8) %10)
  %15 = getelementptr inbounds %class.Graph, %class.Graph* %11, i32 0, i32 3
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE12emplace_backIJRlS6_S6_S6_EEEvDpOT_(%"class.std::vector.0"* %15, i64* dereferenceable(8) %7, i64* dereferenceable(8) %8, i64* dereferenceable(8) %9, i64* dereferenceable(8) %10)
  %16 = getelementptr inbounds %class.Graph, %class.Graph* %11, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 0, 1
  %19 = sub i64 %17, %18
  %20 = add nsw i64 %17, 1
  store i64 %19, i64* %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %9, i64 %10
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE12emplace_backIJRlS6_S6_S6_EEEvDpOT_(%"class.std::vector.0"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"struct.Graph<0>::Edge"*
  %7 = alloca %"struct.Graph<0>::Edge"*
  %8 = alloca %"class.std::vector.0"*
  %9 = alloca %"class.std::vector.0"*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %9, align 8
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %11, align 8
  store i64* %3, i64** %12, align 8
  store i64* %4, i64** %13, align 8
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  store %"class.std::vector.0"* %14, %"class.std::vector.0"** %8
  %15 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %16 = bitcast %"class.std::vector.0"* %15 to %"struct.std::_Vector_base.1"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %17, i32 0, i32 1
  %19 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %18, align 8
  store %"struct.Graph<0>::Edge"* %19, %"struct.Graph<0>::Edge"** %7
  %20 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %21 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %22, i32 0, i32 2
  %24 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %23, align 8
  store %"struct.Graph<0>::Edge"* %24, %"struct.Graph<0>::Edge"** %6
  %25 = alloca i32
  store i32 -1763728488, i32* %25
  br label %26

; <label>:26:                                     ; preds = %5, %155
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 -1763728488, label %29
    i32 868153625, label %34
    i32 -1422459637, label %58
    i32 879515558, label %74
    i32 361300180, label %98
    i32 1943155561, label %99
    i32 1088843402, label %115
    i32 -572303208, label %143
    i32 -941834650, label %144
    i32 -2052276984, label %154
  ]

; <label>:28:                                     ; preds = %26
  br label %155

; <label>:29:                                     ; preds = %26
  %30 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7
  %31 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6
  %32 = icmp ne %"struct.Graph<0>::Edge"* %30, %31
  %33 = select i1 %32, i32 868153625, i32 -1422459637
  store i32 %33, i32* %25
  br label %155

; <label>:34:                                     ; preds = %26
  %35 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %36 = bitcast %"class.std::vector.0"* %35 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %37 to %"class.std::allocator.2"*
  %39 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %40 = bitcast %"class.std::vector.0"* %39 to %"struct.std::_Vector_base.1"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %41, i32 0, i32 1
  %43 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %42, align 8
  %44 = load i64*, i64** %10, align 8
  %45 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %44) #3
  %46 = load i64*, i64** %11, align 8
  %47 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %46) #3
  %48 = load i64*, i64** %12, align 8
  %49 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %48) #3
  %50 = load i64*, i64** %13, align 8
  %51 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %50) #3
  call void @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE9constructIS2_JRlS6_S6_S6_EEEvRS3_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %38, %"struct.Graph<0>::Edge"* %43, i64* dereferenceable(8) %45, i64* dereferenceable(8) %47, i64* dereferenceable(8) %49, i64* dereferenceable(8) %51)
  %52 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %53 = bitcast %"class.std::vector.0"* %52 to %"struct.std::_Vector_base.1"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %54, i32 0, i32 1
  %56 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %55, align 8
  %57 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %56, i32 1
  store %"struct.Graph<0>::Edge"* %57, %"struct.Graph<0>::Edge"** %55, align 8
  store i32 1943155561, i32* %25
  br label %155

; <label>:58:                                     ; preds = %26
  %59 = load i32, i32* @x.327
  %60 = load i32, i32* @y.328
  %61 = sub i32 %59, -546332812
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -546332812
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 879515558, i32 -941834650
  store i32 %73, i32* %25
  br label %155

; <label>:74:                                     ; preds = %26
  %75 = load i64*, i64** %10, align 8
  %76 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %75) #3
  %77 = load i64*, i64** %11, align 8
  %78 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %77) #3
  %79 = load i64*, i64** %12, align 8
  %80 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %79) #3
  %81 = load i64*, i64** %13, align 8
  %82 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %81) #3
  %83 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE19_M_emplace_back_auxIJRlS6_S6_S6_EEEvDpOT_(%"class.std::vector.0"* %83, i64* dereferenceable(8) %76, i64* dereferenceable(8) %78, i64* dereferenceable(8) %80, i64* dereferenceable(8) %82)
  %84 = load i32, i32* @x.327
  %85 = load i32, i32* @y.328
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  %97 = select i1 %95, i32 361300180, i32 -941834650
  store i32 %97, i32* %25
  br label %155

; <label>:98:                                     ; preds = %26
  store i32 1943155561, i32* %25
  br label %155

; <label>:99:                                     ; preds = %26
  %100 = load i32, i32* @x.327
  %101 = load i32, i32* @y.328
  %102 = sub i32 %100, -1780215430
  %103 = sub i32 %102, 1
  %104 = add i32 %103, -1780215430
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  %114 = select i1 %112, i32 1088843402, i32 -2052276984
  store i32 %114, i32* %25
  br label %155

; <label>:115:                                    ; preds = %26
  %116 = load i32, i32* @x.327
  %117 = load i32, i32* @y.328
  %118 = sub i32 %116, -1541369670
  %119 = sub i32 %118, 1
  %120 = add i32 %119, -1541369670
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 -572303208, i32 -2052276984
  store i32 %142, i32* %25
  br label %155

; <label>:143:                                    ; preds = %26
  ret void

; <label>:144:                                    ; preds = %26
  %145 = load i64*, i64** %10, align 8
  %146 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %145) #3
  %147 = load i64*, i64** %11, align 8
  %148 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %147) #3
  %149 = load i64*, i64** %12, align 8
  %150 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %149) #3
  %151 = load i64*, i64** %13, align 8
  %152 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %151) #3
  %153 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE19_M_emplace_back_auxIJRlS6_S6_S6_EEEvDpOT_(%"class.std::vector.0"* %153, i64* dereferenceable(8) %146, i64* dereferenceable(8) %148, i64* dereferenceable(8) %150, i64* dereferenceable(8) %152)
  store i32 879515558, i32* %25
  br label %155

; <label>:154:                                    ; preds = %26
  store i32 1088843402, i32* %25
  br label %155

; <label>:155:                                    ; preds = %154, %144, %115, %99, %98, %74, %58, %34, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE9constructIS2_JRlS6_S6_S6_EEEvRS3_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1), %"struct.Graph<0>::Edge"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.329
  %10 = load i32, i32* @y.330
  %11 = sub i32 %9, 251047072
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 251047072
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 50360186, i32* %19
  br label %20

; <label>:20:                                     ; preds = %6, %106
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 50360186, label %23
    i32 -785604861, label %43
    i32 -2133022732, label %87
    i32 -1859171279, label %88
  ]

; <label>:22:                                     ; preds = %20
  br label %106

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -785604861, i32 -1859171279
  store i32 %42, i32* %19
  br label %106

; <label>:43:                                     ; preds = %20
  %44 = alloca %"class.std::allocator.2"*, align 8
  %45 = alloca %"struct.Graph<0>::Edge"*, align 8
  %46 = alloca i64*, align 8
  %47 = alloca i64*, align 8
  %48 = alloca i64*, align 8
  %49 = alloca i64*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %44, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %45, align 8
  store i64* %2, i64** %46, align 8
  store i64* %3, i64** %47, align 8
  store i64* %4, i64** %48, align 8
  store i64* %5, i64** %49, align 8
  %50 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %44, align 8
  %51 = bitcast %"class.std::allocator.2"* %50 to %"class.__gnu_cxx::new_allocator.3"*
  %52 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %45, align 8
  %53 = load i64*, i64** %46, align 8
  %54 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %53) #3
  %55 = load i64*, i64** %47, align 8
  %56 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %55) #3
  %57 = load i64*, i64** %48, align 8
  %58 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %57) #3
  %59 = load i64*, i64** %49, align 8
  %60 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %59) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE9constructIS3_JRlS6_S6_S6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %51, %"struct.Graph<0>::Edge"* %52, i64* dereferenceable(8) %54, i64* dereferenceable(8) %56, i64* dereferenceable(8) %58, i64* dereferenceable(8) %60)
  %61 = load i32, i32* @x.329
  %62 = load i32, i32* @y.330
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -2133022732, i32 -1859171279
  store i32 %86, i32* %19
  br label %106

; <label>:87:                                     ; preds = %20
  ret void

; <label>:88:                                     ; preds = %20
  %89 = alloca %"class.std::allocator.2"*, align 8
  %90 = alloca %"struct.Graph<0>::Edge"*, align 8
  %91 = alloca i64*, align 8
  %92 = alloca i64*, align 8
  %93 = alloca i64*, align 8
  %94 = alloca i64*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %89, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %90, align 8
  store i64* %2, i64** %91, align 8
  store i64* %3, i64** %92, align 8
  store i64* %4, i64** %93, align 8
  store i64* %5, i64** %94, align 8
  %95 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %89, align 8
  %96 = bitcast %"class.std::allocator.2"* %95 to %"class.__gnu_cxx::new_allocator.3"*
  %97 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %90, align 8
  %98 = load i64*, i64** %91, align 8
  %99 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %98) #3
  %100 = load i64*, i64** %92, align 8
  %101 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %100) #3
  %102 = load i64*, i64** %93, align 8
  %103 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %102) #3
  %104 = load i64*, i64** %94, align 8
  %105 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %104) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE9constructIS3_JRlS6_S6_S6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %96, %"struct.Graph<0>::Edge"* %97, i64* dereferenceable(8) %99, i64* dereferenceable(8) %101, i64* dereferenceable(8) %103, i64* dereferenceable(8) %105)
  store i32 -785604861, i32* %19
  br label %106

; <label>:106:                                    ; preds = %88, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE19_M_emplace_back_auxIJRlS6_S6_S6_EEEvDpOT_(%"class.std::vector.0"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.Graph<0>::Edge"*, align 8
  %13 = alloca %"struct.Graph<0>::Edge"*, align 8
  %14 = alloca i8*
  %15 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %17 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.0"* %16, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %17, i64* %11, align 8
  %18 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %19 = load i64, i64* %11, align 8
  %20 = call %"struct.Graph<0>::Edge"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %18, i64 %19)
  store %"struct.Graph<0>::Edge"* %20, %"struct.Graph<0>::Edge"** %12, align 8
  %21 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %12, align 8
  store %"struct.Graph<0>::Edge"* %21, %"struct.Graph<0>::Edge"** %13, align 8
  %22 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %22, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %23 to %"class.std::allocator.2"*
  %25 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %12, align 8
  %26 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %16) #3
  %27 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %25, i64 %26
  %28 = load i64*, i64** %7, align 8
  %29 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %28) #3
  %30 = load i64*, i64** %8, align 8
  %31 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %30) #3
  %32 = load i64*, i64** %9, align 8
  %33 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %32) #3
  %34 = load i64*, i64** %10, align 8
  %35 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %34) #3
  invoke void @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE9constructIS2_JRlS6_S6_S6_EEEvRS3_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %24, %"struct.Graph<0>::Edge"* %27, i64* dereferenceable(8) %29, i64* dereferenceable(8) %31, i64* dereferenceable(8) %33, i64* dereferenceable(8) %35)
          to label %36 unwind label %52

; <label>:36:                                     ; preds = %5
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %13, align 8
  %37 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %39, align 8
  %41 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %43, align 8
  %45 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %12, align 8
  %46 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %47 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %46) #3
  %48 = invoke %"struct.Graph<0>::Edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5GraphILl0EE4EdgeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.Graph<0>::Edge"* %40, %"struct.Graph<0>::Edge"* %44, %"struct.Graph<0>::Edge"* %45, %"class.std::allocator.2"* dereferenceable(1) %47)
          to label %49 unwind label %52

; <label>:49:                                     ; preds = %36
  store %"struct.Graph<0>::Edge"* %48, %"struct.Graph<0>::Edge"** %13, align 8
  %50 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %13, align 8
  %51 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %50, i32 1
  store %"struct.Graph<0>::Edge"* %51, %"struct.Graph<0>::Edge"** %13, align 8
  br label %210

; <label>:52:                                     ; preds = %36, %5
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %14, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %15, align 4
  br label %56

; <label>:56:                                     ; preds = %52
  %57 = load i32, i32* @x.333
  %58 = load i32, i32* @y.334
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %359

; <label>:70:                                     ; preds = %56, %359
  %71 = load i8*, i8** %14, align 8
  %72 = call i8* @__cxa_begin_catch(i8* %71) #3
  %73 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %13, align 8
  %74 = icmp ne %"struct.Graph<0>::Edge"* %73, null
  %75 = load i32, i32* @x.333
  %76 = load i32, i32* @y.334
  %77 = add i32 %75, 1547396594
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, 1547396594
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %359

; <label>:101:                                    ; preds = %70
  br i1 %74, label %114, label %102

; <label>:102:                                    ; preds = %101
  %103 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %103, i32 0, i32 0
  %105 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %104 to %"class.std::allocator.2"*
  %106 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %12, align 8
  %107 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %16) #3
  %108 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %106, i64 %107
  invoke void @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.2"* dereferenceable(1) %105, %"struct.Graph<0>::Edge"* %108)
          to label %109 unwind label %110

; <label>:109:                                    ; preds = %102
  br label %162

; <label>:110:                                    ; preds = %208, %207, %160, %102
  %111 = landingpad { i8*, i32 }
          cleanup
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %14, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %15, align 4
  invoke void @__cxa_end_catch()
          to label %209 unwind label %302

; <label>:114:                                    ; preds = %101
  %115 = load i32, i32* @x.333
  %116 = load i32, i32* @y.334
  %117 = sub i32 %115, 1581668979
  %118 = sub i32 %117, 1
  %119 = add i32 %118, 1581668979
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  br i1 %127, label %129, label %364

; <label>:129:                                    ; preds = %114, %364
  %130 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %12, align 8
  %131 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %13, align 8
  %132 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %133 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %132) #3
  %134 = load i32, i32* @x.333
  %135 = load i32, i32* @y.334
  %136 = sub i32 %134, 1480714268
  %137 = sub i32 %136, 1
  %138 = add i32 %137, 1480714268
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 true, true
  %147 = and i1 %144, true
  %148 = and i1 %142, %146
  %149 = and i1 %145, true
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 true, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  br i1 %158, label %160, label %364

; <label>:160:                                    ; preds = %129
  invoke void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeES2_EvT_S4_RSaIT0_E(%"struct.Graph<0>::Edge"* %130, %"struct.Graph<0>::Edge"* %131, %"class.std::allocator.2"* dereferenceable(1) %133)
          to label %161 unwind label %110

; <label>:161:                                    ; preds = %160
  br label %162

; <label>:162:                                    ; preds = %161, %109
  %163 = load i32, i32* @x.333
  %164 = load i32, i32* @y.334
  %165 = add i32 %163, 587654584
  %166 = sub i32 %165, 1
  %167 = sub i32 %166, 587654584
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 false, true
  %176 = and i1 %173, false
  %177 = and i1 %171, %175
  %178 = and i1 %174, false
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 false, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  br i1 %187, label %189, label %369

; <label>:189:                                    ; preds = %162, %369
  %190 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %191 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %12, align 8
  %192 = load i64, i64* %11, align 8
  %193 = load i32, i32* @x.333
  %194 = load i32, i32* @y.334
  %195 = add i32 %193, 1280553713
  %196 = sub i32 %195, 1
  %197 = sub i32 %196, 1280553713
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %369

; <label>:207:                                    ; preds = %189
  invoke void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %190, %"struct.Graph<0>::Edge"* %191, i64 %192)
          to label %208 unwind label %110

; <label>:208:                                    ; preds = %207
  invoke void @__cxa_rethrow() #12
          to label %305 unwind label %110

; <label>:209:                                    ; preds = %110
  br label %255

; <label>:210:                                    ; preds = %49
  %211 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %212 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %211, i32 0, i32 0
  %213 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %212, i32 0, i32 0
  %214 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %213, align 8
  %215 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %216 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %215, i32 0, i32 0
  %217 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %216, i32 0, i32 1
  %218 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %217, align 8
  %219 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %220 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %219) #3
  call void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeES2_EvT_S4_RSaIT0_E(%"struct.Graph<0>::Edge"* %214, %"struct.Graph<0>::Edge"* %218, %"class.std::allocator.2"* dereferenceable(1) %220)
  %221 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %222 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %223 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %222, i32 0, i32 0
  %224 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %223, i32 0, i32 0
  %225 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %224, align 8
  %226 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %227 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %226, i32 0, i32 0
  %228 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %227, i32 0, i32 2
  %229 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %228, align 8
  %230 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %231 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %230, i32 0, i32 0
  %232 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %231, i32 0, i32 0
  %233 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %232, align 8
  %234 = ptrtoint %"struct.Graph<0>::Edge"* %229 to i64
  %235 = ptrtoint %"struct.Graph<0>::Edge"* %233 to i64
  %236 = add i64 %234, -4070286914337046486
  %237 = sub i64 %236, %235
  %238 = sub i64 %237, -4070286914337046486
  %239 = sub i64 %234, %235
  %240 = sdiv exact i64 %238, 32
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %221, %"struct.Graph<0>::Edge"* %225, i64 %240)
  %241 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %12, align 8
  %242 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %242, i32 0, i32 0
  %244 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %243, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %241, %"struct.Graph<0>::Edge"** %244, align 8
  %245 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %13, align 8
  %246 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %247 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %246, i32 0, i32 0
  %248 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %247, i32 0, i32 1
  store %"struct.Graph<0>::Edge"* %245, %"struct.Graph<0>::Edge"** %248, align 8
  %249 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %12, align 8
  %250 = load i64, i64* %11, align 8
  %251 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %249, i64 %250
  %252 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %253 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %252, i32 0, i32 0
  %254 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %253, i32 0, i32 2
  store %"struct.Graph<0>::Edge"* %251, %"struct.Graph<0>::Edge"** %254, align 8
  ret void

; <label>:255:                                    ; preds = %209
  %256 = load i32, i32* @x.333
  %257 = load i32, i32* @y.334
  %258 = add i32 %256, -1384806802
  %259 = sub i32 %258, 1
  %260 = sub i32 %259, -1384806802
  %261 = sub i32 %256, 1
  %262 = mul i32 %256, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %257, 10
  %266 = and i1 %264, %265
  %267 = xor i1 %264, %265
  %268 = or i1 %266, %267
  %269 = or i1 %264, %265
  br i1 %268, label %270, label %373

; <label>:270:                                    ; preds = %255, %373
  %271 = load i8*, i8** %14, align 8
  %272 = load i32, i32* %15, align 4
  %273 = insertvalue { i8*, i32 } undef, i8* %271, 0
  %274 = insertvalue { i8*, i32 } %273, i32 %272, 1
  %275 = load i32, i32* @x.333
  %276 = load i32, i32* @y.334
  %277 = sub i32 %275, 724678795
  %278 = sub i32 %277, 1
  %279 = add i32 %278, 724678795
  %280 = sub i32 %275, 1
  %281 = mul i32 %275, %279
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %276, 10
  %285 = xor i1 %283, true
  %286 = xor i1 %284, true
  %287 = xor i1 false, true
  %288 = and i1 %285, false
  %289 = and i1 %283, %287
  %290 = and i1 %286, false
  %291 = and i1 %284, %287
  %292 = or i1 %288, %289
  %293 = or i1 %290, %291
  %294 = xor i1 %292, %293
  %295 = or i1 %285, %286
  %296 = xor i1 %295, true
  %297 = or i1 false, %287
  %298 = and i1 %296, %297
  %299 = or i1 %294, %298
  %300 = or i1 %283, %284
  br i1 %299, label %301, label %373

; <label>:301:                                    ; preds = %270
  resume { i8*, i32 } %274

; <label>:302:                                    ; preds = %110
  %303 = landingpad { i8*, i32 }
          catch i8* null
  %304 = extractvalue { i8*, i32 } %303, 0
  call void @__clang_call_terminate(i8* %304) #7
  unreachable

; <label>:305:                                    ; preds = %208
  %306 = load i32, i32* @x.333
  %307 = load i32, i32* @y.334
  %308 = sub i32 0, 1
  %309 = add i32 %306, %308
  %310 = sub i32 %306, 1
  %311 = mul i32 %306, %309
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %307, 10
  %315 = xor i1 %313, true
  %316 = xor i1 %314, true
  %317 = xor i1 false, true
  %318 = and i1 %315, false
  %319 = and i1 %313, %317
  %320 = and i1 %316, false
  %321 = and i1 %314, %317
  %322 = or i1 %318, %319
  %323 = or i1 %320, %321
  %324 = xor i1 %322, %323
  %325 = or i1 %315, %316
  %326 = xor i1 %325, true
  %327 = or i1 false, %317
  %328 = and i1 %326, %327
  %329 = or i1 %324, %328
  %330 = or i1 %313, %314
  br i1 %329, label %331, label %378

; <label>:331:                                    ; preds = %305, %378
  %332 = load i32, i32* @x.333
  %333 = load i32, i32* @y.334
  %334 = add i32 %332, -355771528
  %335 = sub i32 %334, 1
  %336 = sub i32 %335, -355771528
  %337 = sub i32 %332, 1
  %338 = mul i32 %332, %336
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %333, 10
  %342 = xor i1 %340, true
  %343 = xor i1 %341, true
  %344 = xor i1 false, true
  %345 = and i1 %342, false
  %346 = and i1 %340, %344
  %347 = and i1 %343, false
  %348 = and i1 %341, %344
  %349 = or i1 %345, %346
  %350 = or i1 %347, %348
  %351 = xor i1 %349, %350
  %352 = or i1 %342, %343
  %353 = xor i1 %352, true
  %354 = or i1 false, %344
  %355 = and i1 %353, %354
  %356 = or i1 %351, %355
  %357 = or i1 %340, %341
  br i1 %356, label %358, label %378

; <label>:358:                                    ; preds = %331
  unreachable

; <label>:359:                                    ; preds = %70, %56
  %360 = load i8*, i8** %14, align 8
  %361 = call i8* @__cxa_begin_catch(i8* %360) #3
  %362 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %13, align 8
  %363 = icmp ne %"struct.Graph<0>::Edge"* %362, null
  br label %70

; <label>:364:                                    ; preds = %129, %114
  %365 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %12, align 8
  %366 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %13, align 8
  %367 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %368 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %367) #3
  br label %129

; <label>:369:                                    ; preds = %189, %162
  %370 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %371 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %12, align 8
  %372 = load i64, i64* %11, align 8
  br label %189

; <label>:373:                                    ; preds = %270, %255
  %374 = load i8*, i8** %14, align 8
  %375 = load i32, i32* %15, align 4
  %376 = insertvalue { i8*, i32 } undef, i8* %374, 0
  %377 = insertvalue { i8*, i32 } %376, i32 %375, 1
  br label %270

; <label>:378:                                    ; preds = %331, %305
  br label %331
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE9constructIS3_JRlS6_S6_S6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"*, %"struct.Graph<0>::Edge"*, i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.335
  %10 = load i32, i32* @y.336
  %11 = sub i32 %9, 1704413923
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 1704413923
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -219618879, i32* %19
  br label %20

; <label>:20:                                     ; preds = %6, %93
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -219618879, label %23
    i32 475653866, label %31
    i32 189602993, label %69
    i32 889428791, label %70
  ]

; <label>:22:                                     ; preds = %20
  br label %93

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 475653866, i32 889428791
  store i32 %30, i32* %19
  br label %93

; <label>:31:                                     ; preds = %20
  %32 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %33 = alloca %"struct.Graph<0>::Edge"*, align 8
  %34 = alloca i64*, align 8
  %35 = alloca i64*, align 8
  %36 = alloca i64*, align 8
  %37 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %32, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %33, align 8
  store i64* %2, i64** %34, align 8
  store i64* %3, i64** %35, align 8
  store i64* %4, i64** %36, align 8
  store i64* %5, i64** %37, align 8
  %38 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %32, align 8
  %39 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %33, align 8
  %40 = bitcast %"struct.Graph<0>::Edge"* %39 to i8*
  %41 = bitcast i8* %40 to %"struct.Graph<0>::Edge"*
  %42 = load i64*, i64** %34, align 8
  %43 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %42) #3
  %44 = load i64, i64* %43, align 8
  %45 = load i64*, i64** %35, align 8
  %46 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %45) #3
  %47 = load i64, i64* %46, align 8
  %48 = load i64*, i64** %36, align 8
  %49 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %48) #3
  %50 = load i64, i64* %49, align 8
  %51 = load i64*, i64** %37, align 8
  %52 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %51) #3
  %53 = load i64, i64* %52, align 8
  call void @_ZN5GraphILl0EE4EdgeC2Ellll(%"struct.Graph<0>::Edge"* %41, i64 %44, i64 %47, i64 %50, i64 %53)
  %54 = load i32, i32* @x.335
  %55 = load i32, i32* @y.336
  %56 = sub i32 %54, -1174421799
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -1174421799
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 189602993, i32 889428791
  store i32 %68, i32* %19
  br label %93

; <label>:69:                                     ; preds = %20
  ret void

; <label>:70:                                     ; preds = %20
  %71 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %72 = alloca %"struct.Graph<0>::Edge"*, align 8
  %73 = alloca i64*, align 8
  %74 = alloca i64*, align 8
  %75 = alloca i64*, align 8
  %76 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %71, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %72, align 8
  store i64* %2, i64** %73, align 8
  store i64* %3, i64** %74, align 8
  store i64* %4, i64** %75, align 8
  store i64* %5, i64** %76, align 8
  %77 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %71, align 8
  %78 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %72, align 8
  %79 = bitcast %"struct.Graph<0>::Edge"* %78 to i8*
  %80 = bitcast i8* %79 to %"struct.Graph<0>::Edge"*
  %81 = load i64*, i64** %73, align 8
  %82 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %81) #3
  %83 = load i64, i64* %82, align 8
  %84 = load i64*, i64** %74, align 8
  %85 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %84) #3
  %86 = load i64, i64* %85, align 8
  %87 = load i64*, i64** %75, align 8
  %88 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %87) #3
  %89 = load i64, i64* %88, align 8
  %90 = load i64*, i64** %76, align 8
  %91 = call dereferenceable(8) i64* @_ZSt7forwardIRlEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %90) #3
  %92 = load i64, i64* %91, align 8
  call void @_ZN5GraphILl0EE4EdgeC2Ellll(%"struct.Graph<0>::Edge"* %80, i64 %83, i64 %86, i64 %89, i64 %92)
  store i32 475653866, i32* %19
  br label %93

; <label>:93:                                     ; preds = %70, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5GraphILl0EE4EdgeC2Ellll(%"struct.Graph<0>::Edge"*, i64, i64, i64, i64) unnamed_addr #5 comdat align 2 {
  %6 = alloca %"struct.Graph<0>::Edge"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store i64 %3, i64* %9, align 8
  store i64 %4, i64* %10, align 8
  %11 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %12 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %11, i32 0, i32 0
  %13 = load i64, i64* %7, align 8
  store i64 %13, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %11, i32 0, i32 1
  %15 = load i64, i64* %8, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %11, i32 0, i32 2
  %17 = load i64, i64* %10, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %11, i32 0, i32 3
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %18, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.0"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.0"*
  %9 = alloca %"class.std::vector.0"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  store %"class.std::vector.0"* %14, %"class.std::vector.0"** %8
  %15 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %16 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE8max_sizeEv(%"class.std::vector.0"* %15) #3
  %17 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %18 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %17) #3
  %19 = sub i64 %16, -831347838690890900
  %20 = sub i64 %19, %18
  %21 = add i64 %20, -831347838690890900
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 15889489, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %207
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 15889489, label %29
    i32 1653836734, label %34
    i32 -1039097356, label %36
    i32 651712250, label %63
    i32 457040511, label %93
    i32 -340240814, label %96
    i32 -1033015409, label %102
    i32 -1217943221, label %129
    i32 -447751418, label %147
    i32 -681019429, label %149
    i32 -1307039935, label %151
    i32 1511748623, label %153
    i32 1897975446, label %204
  ]

; <label>:28:                                     ; preds = %26
  br label %207

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 1653836734, i32 -1039097356
  store i32 %33, i32* %24
  br label %207

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #12
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* @x.339
  %38 = load i32, i32* @y.340
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 651712250, i32 1511748623
  store i32 %62, i32* %24
  br label %207

; <label>:63:                                     ; preds = %26
  %64 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %65 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %64) #3
  %66 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %67 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %66) #3
  store i64 %67, i64* %13, align 8
  %68 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %65, 1232872009306098001
  %71 = add i64 %70, %69
  %72 = sub i64 %71, 1232872009306098001
  %73 = add i64 %65, %69
  store i64 %72, i64* %12, align 8
  %74 = load i64, i64* %12, align 8
  %75 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %76 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %75) #3
  %77 = icmp ult i64 %74, %76
  store i1 %77, i1* %5
  %78 = load i32, i32* @x.339
  %79 = load i32, i32* @y.340
  %80 = sub i32 %78, -1902290994
  %81 = sub i32 %80, 1
  %82 = add i32 %81, -1902290994
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  %92 = select i1 %90, i32 457040511, i32 1511748623
  store i32 %92, i32* %24
  br label %207

; <label>:93:                                     ; preds = %26
  %94 = load volatile i1, i1* %5
  %95 = select i1 %94, i32 -1033015409, i32 -340240814
  store i32 %95, i32* %24
  br label %207

; <label>:96:                                     ; preds = %26
  %97 = load i64, i64* %12, align 8
  %98 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %99 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE8max_sizeEv(%"class.std::vector.0"* %98) #3
  %100 = icmp ugt i64 %97, %99
  %101 = select i1 %100, i32 -1033015409, i32 -681019429
  store i32 %101, i32* %24
  br label %207

; <label>:102:                                    ; preds = %26
  %103 = load i32, i32* @x.339
  %104 = load i32, i32* @y.340
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 -1217943221, i32 1897975446
  store i32 %128, i32* %24
  br label %207

; <label>:129:                                    ; preds = %26
  %130 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %131 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE8max_sizeEv(%"class.std::vector.0"* %130) #3
  store i64 %131, i64* %4
  %132 = load i32, i32* @x.339
  %133 = load i32, i32* @y.340
  %134 = add i32 %132, -258653599
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, -258653599
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  %146 = select i1 %144, i32 -447751418, i32 1897975446
  store i32 %146, i32* %24
  br label %207

; <label>:147:                                    ; preds = %26
  store i32 -1307039935, i32* %24
  %148 = load volatile i64, i64* %4
  store i64 %148, i64* %25
  br label %207

; <label>:149:                                    ; preds = %26
  %150 = load i64, i64* %12, align 8
  store i32 -1307039935, i32* %24
  store i64 %150, i64* %25
  br label %207

; <label>:151:                                    ; preds = %26
  %152 = load i64, i64* %25
  ret i64 %152

; <label>:153:                                    ; preds = %26
  %154 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %155 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %154) #3
  %156 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %157 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %156) #3
  store i64 %157, i64* %13, align 8
  %158 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %159 = load i64, i64* %158, align 8
  %160 = sub i64 %155, 4798428363983841231
  %161 = sub i64 %160, %159
  %162 = add i64 %161, 4798428363983841231
  %163 = sub i64 %155, %159
  %164 = mul i64 %162, %159
  %165 = add i64 0, -9106475316117259621
  %166 = sub i64 %165, %155
  %167 = sub i64 %166, -9106475316117259621
  %168 = sub i64 0, %155
  %169 = sub i64 %167, 1481760424375270681
  %170 = add i64 %169, %159
  %171 = add i64 %170, 1481760424375270681
  %172 = add i64 %167, %159
  %173 = sub i64 %155, 6125844728552469851
  %174 = sub i64 %173, %159
  %175 = add i64 %174, 6125844728552469851
  %176 = sub i64 %155, %159
  %177 = mul i64 %175, %159
  %178 = sub i64 0, %159
  %179 = add i64 %155, %178
  %180 = sub i64 %155, %159
  %181 = mul i64 %179, %159
  %182 = shl i64 %155, %159
  %183 = sub i64 0, %159
  %184 = add i64 %155, %183
  %185 = sub i64 %155, %159
  %186 = mul i64 %184, %159
  %187 = sub i64 0, 1304553646026593484
  %188 = sub i64 %187, %155
  %189 = add i64 %188, 1304553646026593484
  %190 = sub i64 0, %155
  %191 = sub i64 0, %189
  %192 = sub i64 0, %159
  %193 = add i64 %191, %192
  %194 = sub i64 0, %193
  %195 = add i64 %189, %159
  %196 = add i64 %155, -4242254756800768960
  %197 = add i64 %196, %159
  %198 = sub i64 %197, -4242254756800768960
  %199 = add i64 %155, %159
  store i64 %198, i64* %12, align 8
  %200 = load i64, i64* %12, align 8
  %201 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %202 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %201) #3
  %203 = icmp ult i64 %200, %202
  store i32 651712250, i32* %24
  br label %207

; <label>:204:                                    ; preds = %26
  %205 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %206 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE8max_sizeEv(%"class.std::vector.0"* %205) #3
  store i32 -1217943221, i32* %24
  br label %207

; <label>:207:                                    ; preds = %204, %153, %149, %147, %129, %102, %96, %93, %63, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.1"*
  %5 = alloca %"struct.std::_Vector_base.1"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5, align 8
  store %"struct.std::_Vector_base.1"* %7, %"struct.std::_Vector_base.1"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 1336465592, i32* %9
  %10 = alloca %"struct.Graph<0>::Edge"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1336465592, label %14
    i32 1966314406, label %18
    i32 -822302759, label %24
    i32 -498351029, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1966314406, i32 -822302759
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %20 to %"class.std::allocator.2"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"struct.Graph<0>::Edge"* @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE8allocateERS3_m(%"class.std::allocator.2"* dereferenceable(1) %21, i64 %22)
  store i32 -498351029, i32* %9
  store %"struct.Graph<0>::Edge"* %23, %"struct.Graph<0>::Edge"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -498351029, i32* %9
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %10
  ret %"struct.Graph<0>::Edge"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %10, align 8
  %12 = ptrtoint %"struct.Graph<0>::Edge"* %7 to i64
  %13 = ptrtoint %"struct.Graph<0>::Edge"* %11 to i64
  %14 = sub i64 %12, -5936491062608601292
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -5936491062608601292
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 32
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5GraphILl0EE4EdgeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph<0>::Edge"*, align 8
  %6 = alloca %"struct.Graph<0>::Edge"*, align 8
  %7 = alloca %"struct.Graph<0>::Edge"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator.22", align 8
  %10 = alloca %"class.std::move_iterator.22", align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %5, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %6, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %12 = call %"struct.Graph<0>::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5GraphILl0EE4EdgeESt13move_iteratorIS3_EET0_T_(%"struct.Graph<0>::Edge"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %9, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %12, %"struct.Graph<0>::Edge"** %13, align 8
  %14 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %15 = call %"struct.Graph<0>::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5GraphILl0EE4EdgeESt13move_iteratorIS3_EET0_T_(%"struct.Graph<0>::Edge"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %10, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %15, %"struct.Graph<0>::Edge"** %16, align 8
  %17 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %18 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %9, i32 0, i32 0
  %20 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %10, i32 0, i32 0
  %22 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %21, align 8
  %23 = call %"struct.Graph<0>::Edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5GraphILl0EE4EdgeEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.Graph<0>::Edge"* %20, %"struct.Graph<0>::Edge"* %22, %"struct.Graph<0>::Edge"* %17, %"class.std::allocator.2"* dereferenceable(1) %18)
  ret %"struct.Graph<0>::Edge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.2"* dereferenceable(1), %"struct.Graph<0>::Edge"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.3"* %6, %"struct.Graph<0>::Edge"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE8max_sizeEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE8max_sizeERKS3_(%"class.std::allocator.2"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE8max_sizeERKS3_(%"class.std::allocator.2"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.351
  %6 = load i32, i32* @y.352
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 309405369, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 309405369, label %18
    i32 658577593, label %38
    i32 -246287010, label %69
    i32 -1239497408, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 658577593, i32 -1239497408
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %39, align 8
  %40 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %39, align 8
  %41 = bitcast %"class.std::allocator.2"* %40 to %"class.__gnu_cxx::new_allocator.3"*
  %42 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %41) #3
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.351
  %44 = load i32, i32* @y.352
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -246287010, i32 -1239497408
  store i32 %68, i32* %14
  br label %76

; <label>:69:                                     ; preds = %15
  %70 = load volatile i64, i64* %2
  ret i64 %70

; <label>:71:                                     ; preds = %15
  %72 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %72, align 8
  %73 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %72, align 8
  %74 = bitcast %"class.std::allocator.2"* %73 to %"class.__gnu_cxx::new_allocator.3"*
  %75 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %74) #3
  store i32 658577593, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.353
  %6 = load i32, i32* @y.354
  %7 = sub i32 %5, -1363999398
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1363999398
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1261402628, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1261402628, label %19
    i32 1734986730, label %39
    i32 2124754894, label %70
    i32 -1625728906, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1734986730, i32 -1625728906
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %40, align 8
  %41 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %42 to %"class.std::allocator.2"*
  store %"class.std::allocator.2"* %43, %"class.std::allocator.2"** %2
  %44 = load i32, i32* @x.353
  %45 = load i32, i32* @y.354
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 2124754894, i32 -1625728906
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %73, align 8
  %74 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %75 to %"class.std::allocator.2"*
  store i32 1734986730, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 576460752303423487
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE8allocateERS3_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"struct.Graph<0>::Edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.357
  %7 = load i32, i32* @y.358
  %8 = sub i32 %6, -332001721
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -332001721
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 753185248, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 753185248, label %20
    i32 -1860306194, label %40
    i32 1517450531, label %74
    i32 676492163, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1860306194, i32 676492163
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.2"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %41, align 8
  %44 = bitcast %"class.std::allocator.2"* %43 to %"class.__gnu_cxx::new_allocator.3"*
  %45 = load i64, i64* %42, align 8
  %46 = call %"struct.Graph<0>::Edge"* @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %44, i64 %45, i8* null)
  store %"struct.Graph<0>::Edge"* %46, %"struct.Graph<0>::Edge"** %3
  %47 = load i32, i32* @x.357
  %48 = load i32, i32* @y.358
  %49 = sub i32 %47, 1109247439
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1109247439
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1517450531, i32 676492163
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  %75 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %3
  ret %"struct.Graph<0>::Edge"* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.2"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %77, align 8
  store i64 %1, i64* %78, align 8
  %79 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %77, align 8
  %80 = bitcast %"class.std::allocator.2"* %79 to %"class.__gnu_cxx::new_allocator.3"*
  %81 = load i64, i64* %78, align 8
  %82 = call %"struct.Graph<0>::Edge"* @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %80, i64 %81, i8* null)
  store i32 -1860306194, i32* %16
  br label %83

; <label>:83:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"struct.Graph<0>::Edge"*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.359
  %10 = load i32, i32* @y.360
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -1327565895, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %186
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1327565895, label %22
    i32 1426279777, label %42
    i32 -177164758, label %79
    i32 1717194327, label %82
    i32 1509159652, label %97
    i32 -1745455753, label %112
    i32 -571621371, label %113
    i32 -2119337876, label %141
    i32 1637014021, label %161
    i32 733899667, label %163
    i32 -109332101, label %171
    i32 -624586143, label %172
  ]

; <label>:21:                                     ; preds = %19
  br label %186

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1426279777, i32 733899667
  store i32 %41, i32* %18
  br label %186

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %6
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %43, align 8
  %46 = load volatile i64*, i64** %6
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %43, align 8
  %48 = load volatile i64*, i64** %6
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %5
  %52 = load i32, i32* @x.359
  %53 = load i32, i32* @y.360
  %54 = sub i32 %52, 1097005950
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 1097005950
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -177164758, i32 733899667
  store i32 %78, i32* %18
  br label %186

; <label>:79:                                     ; preds = %19
  %80 = load volatile i1, i1* %5
  %81 = select i1 %80, i32 1717194327, i32 -571621371
  store i32 %81, i32* %18
  br label %186

; <label>:82:                                     ; preds = %19
  %83 = load i32, i32* @x.359
  %84 = load i32, i32* @y.360
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 1509159652, i32 -109332101
  store i32 %96, i32* %18
  br label %186

; <label>:97:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  %98 = load i32, i32* @x.359
  %99 = load i32, i32* @y.360
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 -1745455753, i32 -109332101
  store i32 %111, i32* %18
  br label %186

; <label>:112:                                    ; preds = %19
  unreachable

; <label>:113:                                    ; preds = %19
  %114 = load i32, i32* @x.359
  %115 = load i32, i32* @y.360
  %116 = sub i32 %114, 1723390761
  %117 = sub i32 %116, 1
  %118 = add i32 %117, 1723390761
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 false, true
  %127 = and i1 %124, false
  %128 = and i1 %122, %126
  %129 = and i1 %125, false
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 false, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  %140 = select i1 %138, i32 -2119337876, i32 -624586143
  store i32 %140, i32* %18
  br label %186

; <label>:141:                                    ; preds = %19
  %142 = load volatile i64*, i64** %6
  %143 = load i64, i64* %142, align 8
  %144 = mul i64 %143, 32
  %145 = call i8* @_Znwm(i64 %144)
  %146 = bitcast i8* %145 to %"struct.Graph<0>::Edge"*
  store %"struct.Graph<0>::Edge"* %146, %"struct.Graph<0>::Edge"** %4
  %147 = load i32, i32* @x.359
  %148 = load i32, i32* @y.360
  %149 = sub i32 0, 1
  %150 = add i32 %147, %149
  %151 = sub i32 %147, 1
  %152 = mul i32 %147, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %148, 10
  %156 = and i1 %154, %155
  %157 = xor i1 %154, %155
  %158 = or i1 %156, %157
  %159 = or i1 %154, %155
  %160 = select i1 %158, i32 1637014021, i32 -624586143
  store i32 %160, i32* %18
  br label %186

; <label>:161:                                    ; preds = %19
  %162 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4
  ret %"struct.Graph<0>::Edge"* %162

; <label>:163:                                    ; preds = %19
  %164 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %165 = alloca i64, align 8
  %166 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %164, align 8
  store i64 %1, i64* %165, align 8
  store i8* %2, i8** %166, align 8
  %167 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %164, align 8
  %168 = load i64, i64* %165, align 8
  %169 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %167) #3
  %170 = icmp ugt i64 %168, %169
  store i32 1426279777, i32* %18
  br label %186

; <label>:171:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 1509159652, i32* %18
  br label %186

; <label>:172:                                    ; preds = %19
  %173 = load volatile i64*, i64** %6
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 0, %174
  %176 = add i64 0, %175
  %177 = sub i64 0, %174
  %178 = add i64 %176, -7932511858156488046
  %179 = add i64 %178, 32
  %180 = sub i64 %179, -7932511858156488046
  %181 = add i64 %176, 32
  %182 = shl i64 %174, 32
  %183 = mul i64 %174, 32
  %184 = call i8* @_Znwm(i64 %183)
  %185 = bitcast i8* %184 to %"struct.Graph<0>::Edge"*
  store i32 -2119337876, i32* %18
  br label %186

; <label>:186:                                    ; preds = %172, %171, %163, %141, %113, %97, %82, %79, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5GraphILl0EE4EdgeEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.22", align 8
  %6 = alloca %"class.std::move_iterator.22", align 8
  %7 = alloca %"struct.Graph<0>::Edge"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator.22", align 8
  %10 = alloca %"class.std::move_iterator.22", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %5, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %6, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %12, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.22"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.22"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.22"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.22"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %9, i32 0, i32 0
  %19 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %10, i32 0, i32 0
  %21 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %20, align 8
  %22 = call %"struct.Graph<0>::Edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5GraphILl0EE4EdgeEES4_ET0_T_S7_S6_(%"struct.Graph<0>::Edge"* %19, %"struct.Graph<0>::Edge"* %21, %"struct.Graph<0>::Edge"* %17)
  ret %"struct.Graph<0>::Edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5GraphILl0EE4EdgeESt13move_iteratorIS3_EET0_T_(%"struct.Graph<0>::Edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.22", align 8
  %3 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %3, align 8
  %4 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %3, align 8
  call void @_ZNSt13move_iteratorIPN5GraphILl0EE4EdgeEEC2ES3_(%"class.std::move_iterator.22"* %2, %"struct.Graph<0>::Edge"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %2, i32 0, i32 0
  %6 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  ret %"struct.Graph<0>::Edge"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5GraphILl0EE4EdgeEES4_ET0_T_S7_S6_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.22", align 8
  %5 = alloca %"class.std::move_iterator.22", align 8
  %6 = alloca %"struct.Graph<0>::Edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.22", align 8
  %9 = alloca %"class.std::move_iterator.22", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %4, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %5, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %11, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.22"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.22"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.22"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.22"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %8, i32 0, i32 0
  %18 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %9, i32 0, i32 0
  %20 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %19, align 8
  %21 = call %"struct.Graph<0>::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5GraphILl0EE4EdgeEES6_EET0_T_S9_S8_(%"struct.Graph<0>::Edge"* %18, %"struct.Graph<0>::Edge"* %20, %"struct.Graph<0>::Edge"* %16)
  ret %"struct.Graph<0>::Edge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5GraphILl0EE4EdgeEES6_EET0_T_S9_S8_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.367
  %5 = load i32, i32* @y.368
  %6 = add i32 %4, -704727734
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -704727734
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %312

; <label>:18:                                     ; preds = %3, %312
  %19 = alloca %"class.std::move_iterator.22", align 8
  %20 = alloca %"class.std::move_iterator.22", align 8
  %21 = alloca %"struct.Graph<0>::Edge"*, align 8
  %22 = alloca %"struct.Graph<0>::Edge"*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  %25 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %19, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %25, align 8
  %26 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %20, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %26, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %21, align 8
  %27 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %21, align 8
  store %"struct.Graph<0>::Edge"* %27, %"struct.Graph<0>::Edge"** %22, align 8
  %28 = load i32, i32* @x.367
  %29 = load i32, i32* @y.368
  %30 = add i32 %28, 396399230
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 396399230
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %312

; <label>:54:                                     ; preds = %18
  br label %55

; <label>:55:                                     ; preds = %189, %54
  %56 = invoke zeroext i1 @_ZStneIPN5GraphILl0EE4EdgeEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.22"* dereferenceable(8) %19, %"class.std::move_iterator.22"* dereferenceable(8) %20)
          to label %57 unwind label %190

; <label>:57:                                     ; preds = %55
  br i1 %56, label %58, label %242

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.367
  %60 = load i32, i32* @y.368
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %322

; <label>:72:                                     ; preds = %58, %322
  %73 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %22, align 8
  %74 = call %"struct.Graph<0>::Edge"* @_ZSt11__addressofIN5GraphILl0EE4EdgeEEPT_RS3_(%"struct.Graph<0>::Edge"* dereferenceable(32) %73) #3
  %75 = load i32, i32* @x.367
  %76 = load i32, i32* @y.368
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %322

; <label>:100:                                    ; preds = %72
  %101 = invoke dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZNKSt13move_iteratorIPN5GraphILl0EE4EdgeEEdeEv(%"class.std::move_iterator.22"* %19)
          to label %102 unwind label %190

; <label>:102:                                    ; preds = %100
  invoke void @_ZSt10_ConstructIN5GraphILl0EE4EdgeEJS2_EEvPT_DpOT0_(%"struct.Graph<0>::Edge"* %74, %"struct.Graph<0>::Edge"* dereferenceable(32) %101)
          to label %103 unwind label %190

; <label>:103:                                    ; preds = %102
  %104 = load i32, i32* @x.367
  %105 = load i32, i32* @y.368
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %325

; <label>:117:                                    ; preds = %103, %325
  %118 = load i32, i32* @x.367
  %119 = load i32, i32* @y.368
  %120 = add i32 %118, -1959842450
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, -1959842450
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %325

; <label>:144:                                    ; preds = %117
  br label %145

; <label>:145:                                    ; preds = %144
  %146 = invoke dereferenceable(8) %"class.std::move_iterator.22"* @_ZNSt13move_iteratorIPN5GraphILl0EE4EdgeEEppEv(%"class.std::move_iterator.22"* %19)
          to label %147 unwind label %190

; <label>:147:                                    ; preds = %145
  %148 = load i32, i32* @x.367
  %149 = load i32, i32* @y.368
  %150 = sub i32 0, 1
  %151 = add i32 %148, %150
  %152 = sub i32 %148, 1
  %153 = mul i32 %148, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %149, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 true, true
  %160 = and i1 %157, true
  %161 = and i1 %155, %159
  %162 = and i1 %158, true
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 true, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  br i1 %171, label %173, label %326

; <label>:173:                                    ; preds = %147, %326
  %174 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %22, align 8
  %175 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %174, i32 1
  store %"struct.Graph<0>::Edge"* %175, %"struct.Graph<0>::Edge"** %22, align 8
  %176 = load i32, i32* @x.367
  %177 = load i32, i32* @y.368
  %178 = sub i32 0, 1
  %179 = add i32 %176, %178
  %180 = sub i32 %176, 1
  %181 = mul i32 %176, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %177, 10
  %185 = and i1 %183, %184
  %186 = xor i1 %183, %184
  %187 = or i1 %185, %186
  %188 = or i1 %183, %184
  br i1 %187, label %189, label %326

; <label>:189:                                    ; preds = %173
  br label %55

; <label>:190:                                    ; preds = %145, %102, %100, %55
  %191 = landingpad { i8*, i32 }
          catch i8* null
  %192 = extractvalue { i8*, i32 } %191, 0
  store i8* %192, i8** %23, align 8
  %193 = extractvalue { i8*, i32 } %191, 1
  store i32 %193, i32* %24, align 4
  br label %194

; <label>:194:                                    ; preds = %190
  %195 = load i32, i32* @x.367
  %196 = load i32, i32* @y.368
  %197 = add i32 %195, -1415865055
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, -1415865055
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 true, true
  %208 = and i1 %205, true
  %209 = and i1 %203, %207
  %210 = and i1 %206, true
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 true, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  br i1 %219, label %221, label %329

; <label>:221:                                    ; preds = %194, %329
  %222 = load i8*, i8** %23, align 8
  %223 = call i8* @__cxa_begin_catch(i8* %222) #3
  %224 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %21, align 8
  %225 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %22, align 8
  %226 = load i32, i32* @x.367
  %227 = load i32, i32* @y.368
  %228 = sub i32 %226, 567729015
  %229 = sub i32 %228, 1
  %230 = add i32 %229, 567729015
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = and i1 %234, %235
  %237 = xor i1 %234, %235
  %238 = or i1 %236, %237
  %239 = or i1 %234, %235
  br i1 %238, label %240, label %329

; <label>:240:                                    ; preds = %221
  invoke void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeEEvT_S4_(%"struct.Graph<0>::Edge"* %224, %"struct.Graph<0>::Edge"* %225)
          to label %241 unwind label %244

; <label>:241:                                    ; preds = %240
  invoke void @__cxa_rethrow() #12
          to label %311 unwind label %244

; <label>:242:                                    ; preds = %57
  %243 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %22, align 8
  ret %"struct.Graph<0>::Edge"* %243

; <label>:244:                                    ; preds = %241, %240
  %245 = load i32, i32* @x.367
  %246 = load i32, i32* @y.368
  %247 = sub i32 0, 1
  %248 = add i32 %245, %247
  %249 = sub i32 %245, 1
  %250 = mul i32 %245, %248
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %246, 10
  %254 = xor i1 %252, true
  %255 = xor i1 %253, true
  %256 = xor i1 false, true
  %257 = and i1 %254, false
  %258 = and i1 %252, %256
  %259 = and i1 %255, false
  %260 = and i1 %253, %256
  %261 = or i1 %257, %258
  %262 = or i1 %259, %260
  %263 = xor i1 %261, %262
  %264 = or i1 %254, %255
  %265 = xor i1 %264, true
  %266 = or i1 false, %256
  %267 = and i1 %265, %266
  %268 = or i1 %263, %267
  %269 = or i1 %252, %253
  br i1 %268, label %270, label %334

; <label>:270:                                    ; preds = %244, %334
  %271 = landingpad { i8*, i32 }
          cleanup
  %272 = extractvalue { i8*, i32 } %271, 0
  store i8* %272, i8** %23, align 8
  %273 = extractvalue { i8*, i32 } %271, 1
  store i32 %273, i32* %24, align 4
  %274 = load i32, i32* @x.367
  %275 = load i32, i32* @y.368
  %276 = add i32 %274, -993725470
  %277 = sub i32 %276, 1
  %278 = sub i32 %277, -993725470
  %279 = sub i32 %274, 1
  %280 = mul i32 %274, %278
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %275, 10
  %284 = xor i1 %282, true
  %285 = xor i1 %283, true
  %286 = xor i1 true, true
  %287 = and i1 %284, true
  %288 = and i1 %282, %286
  %289 = and i1 %285, true
  %290 = and i1 %283, %286
  %291 = or i1 %287, %288
  %292 = or i1 %289, %290
  %293 = xor i1 %291, %292
  %294 = or i1 %284, %285
  %295 = xor i1 %294, true
  %296 = or i1 true, %286
  %297 = and i1 %295, %296
  %298 = or i1 %293, %297
  %299 = or i1 %282, %283
  br i1 %298, label %300, label %334

; <label>:300:                                    ; preds = %270
  invoke void @__cxa_end_catch()
          to label %301 unwind label %308

; <label>:301:                                    ; preds = %300
  br label %303
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:303:                                    ; preds = %301
  %304 = load i8*, i8** %23, align 8
  %305 = load i32, i32* %24, align 4
  %306 = insertvalue { i8*, i32 } undef, i8* %304, 0
  %307 = insertvalue { i8*, i32 } %306, i32 %305, 1
  resume { i8*, i32 } %307

; <label>:308:                                    ; preds = %300
  %309 = landingpad { i8*, i32 }
          catch i8* null
  %310 = extractvalue { i8*, i32 } %309, 0
  call void @__clang_call_terminate(i8* %310) #7
  unreachable

; <label>:311:                                    ; preds = %241
  unreachable

; <label>:312:                                    ; preds = %18, %3
  %313 = alloca %"class.std::move_iterator.22", align 8
  %314 = alloca %"class.std::move_iterator.22", align 8
  %315 = alloca %"struct.Graph<0>::Edge"*, align 8
  %316 = alloca %"struct.Graph<0>::Edge"*, align 8
  %317 = alloca i8*
  %318 = alloca i32
  %319 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %313, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %319, align 8
  %320 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %314, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %320, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %315, align 8
  %321 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %315, align 8
  store %"struct.Graph<0>::Edge"* %321, %"struct.Graph<0>::Edge"** %316, align 8
  br label %18

; <label>:322:                                    ; preds = %72, %58
  %323 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %22, align 8
  %324 = call %"struct.Graph<0>::Edge"* @_ZSt11__addressofIN5GraphILl0EE4EdgeEEPT_RS3_(%"struct.Graph<0>::Edge"* dereferenceable(32) %323) #3
  br label %72

; <label>:325:                                    ; preds = %117, %103
  br label %117

; <label>:326:                                    ; preds = %173, %147
  %327 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %22, align 8
  %328 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %327, i32 1
  store %"struct.Graph<0>::Edge"* %328, %"struct.Graph<0>::Edge"** %22, align 8
  br label %173

; <label>:329:                                    ; preds = %221, %194
  %330 = load i8*, i8** %23, align 8
  %331 = call i8* @__cxa_begin_catch(i8* %330) #3
  %332 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %21, align 8
  %333 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %22, align 8
  br label %221

; <label>:334:                                    ; preds = %270, %244
  %335 = landingpad { i8*, i32 }
          cleanup
  %336 = extractvalue { i8*, i32 } %335, 0
  store i8* %336, i8** %23, align 8
  %337 = extractvalue { i8*, i32 } %335, 1
  store i32 %337, i32* %24, align 4
  br label %270
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN5GraphILl0EE4EdgeEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.22"* dereferenceable(8), %"class.std::move_iterator.22"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.22"*, align 8
  %4 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %3, align 8
  store %"class.std::move_iterator.22"* %1, %"class.std::move_iterator.22"** %4, align 8
  %5 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %3, align 8
  %6 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPN5GraphILl0EE4EdgeEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.22"* dereferenceable(8) %5, %"class.std::move_iterator.22"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 false, %8
  %10 = xor i1 false, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, false
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5GraphILl0EE4EdgeEJS2_EEvPT_DpOT0_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.Graph<0>::Edge"*, align 8
  %4 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %3, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %4, align 8
  %5 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %3, align 8
  %6 = bitcast %"struct.Graph<0>::Edge"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Graph<0>::Edge"*
  %8 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  %9 = call dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZSt7forwardIN5GraphILl0EE4EdgeEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.Graph<0>::Edge"* dereferenceable(32) %8) #3
  %10 = bitcast %"struct.Graph<0>::Edge"* %7 to i8*
  %11 = bitcast %"struct.Graph<0>::Edge"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt11__addressofIN5GraphILl0EE4EdgeEEPT_RS3_(%"struct.Graph<0>::Edge"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph<0>::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.373
  %6 = load i32, i32* @y.374
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1596676677, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1596676677, label %18
    i32 -728822534, label %38
    i32 1655774740, label %70
    i32 -1000593351, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -728822534, i32 -1000593351
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %39, align 8
  %40 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %39, align 8
  %41 = bitcast %"struct.Graph<0>::Edge"* %40 to i8*
  %42 = bitcast i8* %41 to %"struct.Graph<0>::Edge"*
  store %"struct.Graph<0>::Edge"* %42, %"struct.Graph<0>::Edge"** %2
  %43 = load i32, i32* @x.373
  %44 = load i32, i32* @y.374
  %45 = sub i32 %43, 1564563711
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1564563711
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1655774740, i32 -1000593351
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2
  ret %"struct.Graph<0>::Edge"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %73, align 8
  %74 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %73, align 8
  %75 = bitcast %"struct.Graph<0>::Edge"* %74 to i8*
  %76 = bitcast i8* %75 to %"struct.Graph<0>::Edge"*
  store i32 -728822534, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZNKSt13move_iteratorIPN5GraphILl0EE4EdgeEEdeEv(%"class.std::move_iterator.22"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %2, align 8
  %3 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %3, i32 0, i32 0
  %5 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  ret %"struct.Graph<0>::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.22"* @_ZNSt13move_iteratorIPN5GraphILl0EE4EdgeEEppEv(%"class.std::move_iterator.22"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %2, align 8
  %3 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %3, i32 0, i32 0
  %5 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %5, i32 1
  store %"struct.Graph<0>::Edge"* %6, %"struct.Graph<0>::Edge"** %4, align 8
  ret %"class.std::move_iterator.22"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN5GraphILl0EE4EdgeEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.22"* dereferenceable(8), %"class.std::move_iterator.22"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.379
  %7 = load i32, i32* @y.380
  %8 = add i32 %6, 2146088560
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 2146088560
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -169300879, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -169300879, label %20
    i32 1238144050, label %40
    i32 -1417779769, label %74
    i32 -1366420959, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1238144050, i32 -1366420959
  store i32 %39, i32* %16
  br label %84

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator.22"*, align 8
  %42 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %41, align 8
  store %"class.std::move_iterator.22"* %1, %"class.std::move_iterator.22"** %42, align 8
  %43 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %41, align 8
  %44 = call %"struct.Graph<0>::Edge"* @_ZNKSt13move_iteratorIPN5GraphILl0EE4EdgeEE4baseEv(%"class.std::move_iterator.22"* %43)
  %45 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %42, align 8
  %46 = call %"struct.Graph<0>::Edge"* @_ZNKSt13move_iteratorIPN5GraphILl0EE4EdgeEE4baseEv(%"class.std::move_iterator.22"* %45)
  %47 = icmp eq %"struct.Graph<0>::Edge"* %44, %46
  store i1 %47, i1* %3
  %48 = load i32, i32* @x.379
  %49 = load i32, i32* @y.380
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1417779769, i32 -1366420959
  store i32 %73, i32* %16
  br label %84

; <label>:74:                                     ; preds = %17
  %75 = load volatile i1, i1* %3
  ret i1 %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::move_iterator.22"*, align 8
  %78 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %77, align 8
  store %"class.std::move_iterator.22"* %1, %"class.std::move_iterator.22"** %78, align 8
  %79 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %77, align 8
  %80 = call %"struct.Graph<0>::Edge"* @_ZNKSt13move_iteratorIPN5GraphILl0EE4EdgeEE4baseEv(%"class.std::move_iterator.22"* %79)
  %81 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %78, align 8
  %82 = call %"struct.Graph<0>::Edge"* @_ZNKSt13move_iteratorIPN5GraphILl0EE4EdgeEE4baseEv(%"class.std::move_iterator.22"* %81)
  %83 = icmp eq %"struct.Graph<0>::Edge"* %80, %82
  store i32 1238144050, i32* %16
  br label %84

; <label>:84:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNKSt13move_iteratorIPN5GraphILl0EE4EdgeEE4baseEv(%"class.std::move_iterator.22"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph<0>::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.381
  %6 = load i32, i32* @y.382
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 976759249, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 976759249, label %18
    i32 -243610382, label %26
    i32 -1133025853, label %58
    i32 1100132672, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -243610382, i32 1100132672
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %27, align 8
  %28 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %27, align 8
  %29 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %28, i32 0, i32 0
  %30 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %29, align 8
  store %"struct.Graph<0>::Edge"* %30, %"struct.Graph<0>::Edge"** %2
  %31 = load i32, i32* @x.381
  %32 = load i32, i32* @y.382
  %33 = add i32 %31, 2133690189
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 2133690189
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1133025853, i32 1100132672
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2
  ret %"struct.Graph<0>::Edge"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %61, align 8
  %62 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %61, align 8
  %63 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %62, i32 0, i32 0
  %64 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %63, align 8
  store i32 -243610382, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZSt7forwardIN5GraphILl0EE4EdgeEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.Graph<0>::Edge"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %2, align 8
  %3 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2, align 8
  ret %"struct.Graph<0>::Edge"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5GraphILl0EE4EdgeEEC2ES3_(%"class.std::move_iterator.22"*, %"struct.Graph<0>::Edge"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.22"*, align 8
  %4 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %3, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %4, align 8
  %5 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %5, i32 0, i32 0
  %7 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  store %"struct.Graph<0>::Edge"* %7, %"struct.Graph<0>::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.3"*, %"struct.Graph<0>::Edge"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  %6 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.10"*, i64) #0 comdat align 2 {
  %3 = alloca { i64*, i64 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.389
  %7 = load i32, i32* @y.390
  %8 = sub i32 %6, 1504244403
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1504244403
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1461494295, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %147
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1461494295, label %20
    i32 364582394, label %40
    i32 1848194363, label %93
    i32 -1496564701, label %95
  ]

; <label>:19:                                     ; preds = %17
  br label %147

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 364582394, i32 -1496564701
  store i32 %39, i32* %16
  br label %147

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Bit_reference", align 8
  %42 = alloca %"class.std::vector.10"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %42, align 8
  store i64 %1, i64* %43, align 8
  %45 = load %"class.std::vector.10"*, %"class.std::vector.10"** %42, align 8
  %46 = bitcast %"class.std::vector.10"* %45 to %"struct.std::_Bvector_base"*
  %47 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Bit_iterator"* %48 to %"struct.std::_Bit_iterator_base"*
  %50 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %49, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = load i64, i64* %43, align 8
  %53 = udiv i64 %52, 64
  %54 = getelementptr inbounds i64, i64* %51, i64 %53
  %55 = load i64, i64* %43, align 8
  %56 = urem i64 %55, 64
  %57 = trunc i64 %56 to i32
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %44, i64* %54, i32 %57)
  %58 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %44)
  %59 = bitcast %"struct.std::_Bit_reference"* %41 to { i64*, i64 }*
  %60 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %59, i32 0, i32 0
  %61 = extractvalue { i64*, i64 } %58, 0
  store i64* %61, i64** %60, align 8
  %62 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %59, i32 0, i32 1
  %63 = extractvalue { i64*, i64 } %58, 1
  store i64 %63, i64* %62, align 8
  %64 = bitcast %"struct.std::_Bit_reference"* %41 to { i64*, i64 }*
  %65 = load { i64*, i64 }, { i64*, i64 }* %64, align 8
  store { i64*, i64 } %65, { i64*, i64 }* %3
  %66 = load i32, i32* @x.389
  %67 = load i32, i32* @y.390
  %68 = sub i32 %66, -838906554
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -838906554
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 1848194363, i32 -1496564701
  store i32 %92, i32* %16
  br label %147

; <label>:93:                                     ; preds = %17
  %94 = load volatile { i64*, i64 }, { i64*, i64 }* %3
  ret { i64*, i64 } %94

; <label>:95:                                     ; preds = %17
  %96 = alloca %"struct.std::_Bit_reference", align 8
  %97 = alloca %"class.std::vector.10"*, align 8
  %98 = alloca i64, align 8
  %99 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %97, align 8
  store i64 %1, i64* %98, align 8
  %100 = load %"class.std::vector.10"*, %"class.std::vector.10"** %97, align 8
  %101 = bitcast %"class.std::vector.10"* %100 to %"struct.std::_Bvector_base"*
  %102 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %102, i32 0, i32 0
  %104 = bitcast %"struct.std::_Bit_iterator"* %103 to %"struct.std::_Bit_iterator_base"*
  %105 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %104, i32 0, i32 0
  %106 = load i64*, i64** %105, align 8
  %107 = load i64, i64* %98, align 8
  %108 = shl i64 %107, 64
  %109 = sub i64 %107, -4581224188128763504
  %110 = sub i64 %109, 64
  %111 = add i64 %110, -4581224188128763504
  %112 = sub i64 %107, 64
  %113 = mul i64 %111, 64
  %114 = sub i64 0, 64
  %115 = add i64 %107, %114
  %116 = sub i64 %107, 64
  %117 = mul i64 %115, 64
  %118 = udiv i64 %107, 64
  %119 = getelementptr inbounds i64, i64* %106, i64 %118
  %120 = load i64, i64* %98, align 8
  %121 = sub i64 %120, -2821047949228722743
  %122 = sub i64 %121, 64
  %123 = add i64 %122, -2821047949228722743
  %124 = sub i64 %120, 64
  %125 = mul i64 %123, 64
  %126 = sub i64 %120, 1506786543532375008
  %127 = sub i64 %126, 64
  %128 = add i64 %127, 1506786543532375008
  %129 = sub i64 %120, 64
  %130 = mul i64 %128, 64
  %131 = sub i64 0, %120
  %132 = add i64 0, %131
  %133 = sub i64 0, %120
  %134 = sub i64 0, 64
  %135 = sub i64 %132, %134
  %136 = add i64 %132, 64
  %137 = urem i64 %120, 64
  %138 = trunc i64 %137 to i32
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %99, i64* %119, i32 %138)
  %139 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %99)
  %140 = bitcast %"struct.std::_Bit_reference"* %96 to { i64*, i64 }*
  %141 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %140, i32 0, i32 0
  %142 = extractvalue { i64*, i64 } %139, 0
  store i64* %142, i64** %141, align 8
  %143 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %140, i32 0, i32 1
  %144 = extractvalue { i64*, i64 } %139, 1
  store i64 %144, i64* %143, align 8
  %145 = bitcast %"struct.std::_Bit_reference"* %96 to { i64*, i64 }*
  %146 = load { i64*, i64 }, { i64*, i64 }* %145, align 8
  store i32 364582394, i32* %16
  br label %147

; <label>:147:                                    ; preds = %95, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.391
  %6 = load i32, i32* @y.392
  %7 = sub i32 %5, 818138576
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 818138576
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2084523791, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %170
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2084523791, label %19
    i32 -1902360401, label %27
    i32 1164854104, label %67
    i32 -1482396350, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %170

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1902360401, i32 -1482396350
  store i32 %26, i32* %15
  br label %170

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %28, align 8
  %29 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %29, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %29, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = xor i64 %34, -1
  %36 = xor i64 %32, %35
  %37 = and i64 %36, %32
  %38 = and i64 %32, %34
  %39 = icmp ne i64 %37, 0
  %40 = xor i1 %39, true
  %41 = and i1 true, %40
  %42 = xor i1 true, true
  %43 = and i1 %39, %42
  %44 = or i1 %41, %43
  %45 = xor i1 %39, true
  %46 = xor i1 %44, true
  %47 = and i1 true, %46
  %48 = xor i1 true, true
  %49 = and i1 %44, %48
  %50 = or i1 %47, %49
  %51 = xor i1 %44, true
  store i1 %50, i1* %2
  %52 = load i32, i32* @x.391
  %53 = load i32, i32* @y.392
  %54 = sub i32 %52, -443562652
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -443562652
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1164854104, i32 -1482396350
  store i32 %66, i32* %15
  br label %170

; <label>:67:                                     ; preds = %16
  %68 = load volatile i1, i1* %2
  ret i1 %68

; <label>:69:                                     ; preds = %16
  %70 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %70, align 8
  %71 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %71, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %71, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 0, %76
  %78 = add i64 %74, %77
  %79 = sub i64 %74, %76
  %80 = mul i64 %78, %76
  %81 = sub i64 0, %76
  %82 = add i64 %74, %81
  %83 = sub i64 %74, %76
  %84 = mul i64 %82, %76
  %85 = shl i64 %74, %76
  %86 = sub i64 0, %76
  %87 = add i64 %74, %86
  %88 = sub i64 %74, %76
  %89 = mul i64 %87, %76
  %90 = sub i64 0, %76
  %91 = add i64 %74, %90
  %92 = sub i64 %74, %76
  %93 = mul i64 %91, %76
  %94 = add i64 0, 8674526822744933192
  %95 = sub i64 %94, %74
  %96 = sub i64 %95, 8674526822744933192
  %97 = sub i64 0, %74
  %98 = sub i64 0, %96
  %99 = sub i64 0, %76
  %100 = add i64 %98, %99
  %101 = sub i64 0, %100
  %102 = add i64 %96, %76
  %103 = sub i64 0, %76
  %104 = add i64 %74, %103
  %105 = sub i64 %74, %76
  %106 = mul i64 %104, %76
  %107 = xor i64 %74, -1
  %108 = xor i64 %76, -1
  %109 = xor i64 -724265504510913332, -1
  %110 = or i64 %107, %108
  %111 = or i64 -724265504510913332, %109
  %112 = xor i64 %110, -1
  %113 = and i64 %112, %111
  %114 = and i64 %74, %76
  %115 = icmp ne i64 %113, 0
  %116 = shl i1 %115, true
  %117 = sub i1 false, %115
  %118 = add i1 false, %117
  %119 = sub i1 false, %115
  %120 = sub i1 %118, true
  %121 = add i1 %120, true
  %122 = add i1 %121, true
  %123 = add i1 %118, true
  %124 = shl i1 %115, true
  %125 = xor i1 %115, true
  %126 = and i1 false, %125
  %127 = xor i1 false, true
  %128 = and i1 %115, %127
  %129 = xor i1 true, true
  %130 = and i1 %129, false
  %131 = and i1 true, %127
  %132 = or i1 %126, %128
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = xor i1 %115, true
  %136 = add i1 %134, true
  %137 = sub i1 %136, true
  %138 = sub i1 %137, true
  %139 = sub i1 %134, true
  %140 = mul i1 %138, true
  %141 = sub i1 false, true
  %142 = add i1 %134, %141
  %143 = sub i1 %134, true
  %144 = mul i1 %142, true
  %145 = sub i1 false, true
  %146 = sub i1 %145, %134
  %147 = add i1 %146, true
  %148 = sub i1 false, %134
  %149 = add i1 %147, true
  %150 = add i1 %149, true
  %151 = sub i1 %150, true
  %152 = add i1 %147, true
  %153 = shl i1 %134, true
  %154 = sub i1 %134, true
  %155 = sub i1 %154, true
  %156 = add i1 %155, true
  %157 = sub i1 %134, true
  %158 = mul i1 %156, true
  %159 = xor i1 %134, true
  %160 = and i1 true, %159
  %161 = xor i1 true, true
  %162 = and i1 %134, %161
  %163 = xor i1 true, true
  %164 = and i1 %163, true
  %165 = and i1 true, %161
  %166 = or i1 %160, %162
  %167 = or i1 %164, %165
  %168 = xor i1 %166, %167
  %169 = xor i1 %134, true
  store i32 -1902360401, i32* %15
  br label %170

; <label>:170:                                    ; preds = %69, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN3SCC3dfsEl(%class.SCC*, i64) #0 comdat align 2 {
  %3 = alloca %class.SCC*
  %4 = alloca %class.SCC*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Bit_reference", align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"struct.Graph<0>::Edge", align 8
  %11 = alloca %"struct.std::_Bit_reference", align 8
  store %class.SCC* %0, %class.SCC** %4, align 8
  store i64 %1, i64* %5, align 8
  %12 = load %class.SCC*, %class.SCC** %4, align 8
  store %class.SCC* %12, %class.SCC** %3
  %13 = load volatile %class.SCC*, %class.SCC** %3
  %14 = getelementptr inbounds %class.SCC, %class.SCC* %13, i32 0, i32 5
  %15 = load i64, i64* %5, align 8
  %16 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.10"* %14, i64 %15)
  %17 = bitcast %"struct.std::_Bit_reference"* %6 to { i64*, i64 }*
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %17, i32 0, i32 0
  %19 = extractvalue { i64*, i64 } %16, 0
  store i64* %19, i64** %18, align 8
  %20 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %17, i32 0, i32 1
  %21 = extractvalue { i64*, i64 } %16, 1
  store i64 %21, i64* %20, align 8
  %22 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %6, i1 zeroext true) #3
  %23 = load volatile %class.SCC*, %class.SCC** %3
  %24 = getelementptr inbounds %class.SCC, %class.SCC* %23, i32 0, i32 0
  %25 = load i64, i64* %5, align 8
  %26 = call dereferenceable(24) %"class.std::vector.0"* @_ZN5GraphILl0EEixEl(%class.Graph* %24, i64 %25)
  store %"class.std::vector.0"* %26, %"class.std::vector.0"** %7, align 8
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %28 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv(%"class.std::vector.0"* %27) #3
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %28, %"struct.Graph<0>::Edge"** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %31 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv(%"class.std::vector.0"* %30) #3
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %31, %"struct.Graph<0>::Edge"** %32, align 8
  %33 = alloca i32
  store i32 213248125, i32* %33
  br label %34

; <label>:34:                                     ; preds = %2, %66
  %35 = load i32, i32* %33
  switch i32 %35, label %36 [
    i32 213248125, label %37
    i32 -1788854573, label %40
    i32 -1736185222, label %56
    i32 874966471, label %60
    i32 1562015358, label %61
    i32 1633575555, label %63
  ]

; <label>:36:                                     ; preds = %34
  br label %66

; <label>:37:                                     ; preds = %34
  %38 = call zeroext i1 @_ZN9__gnu_cxxneIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %8, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %9) #3
  %39 = select i1 %38, i32 -1788854573, i32 1633575555
  store i32 %39, i32* %33
  br label %66

; <label>:40:                                     ; preds = %34
  %41 = call dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %42 = bitcast %"struct.Graph<0>::Edge"* %10 to i8*
  %43 = bitcast %"struct.Graph<0>::Edge"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 32, i32 8, i1 false)
  %44 = load volatile %class.SCC*, %class.SCC** %3
  %45 = getelementptr inbounds %class.SCC, %class.SCC* %44, i32 0, i32 5
  %46 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %10, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.10"* %45, i64 %47)
  %49 = bitcast %"struct.std::_Bit_reference"* %11 to { i64*, i64 }*
  %50 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %49, i32 0, i32 0
  %51 = extractvalue { i64*, i64 } %48, 0
  store i64* %51, i64** %50, align 8
  %52 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %49, i32 0, i32 1
  %53 = extractvalue { i64*, i64 } %48, 1
  store i64 %53, i64* %52, align 8
  %54 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %11) #3
  %55 = select i1 %54, i32 874966471, i32 -1736185222
  store i32 %55, i32* %33
  br label %66

; <label>:56:                                     ; preds = %34
  %57 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %10, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = load volatile %class.SCC*, %class.SCC** %3
  call void @_ZN3SCC3dfsEl(%class.SCC* %59, i64 %58)
  store i32 874966471, i32* %33
  br label %66

; <label>:60:                                     ; preds = %34
  store i32 1562015358, i32* %33
  br label %66

; <label>:61:                                     ; preds = %34
  %62 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  store i32 213248125, i32* %33
  br label %66

; <label>:63:                                     ; preds = %34
  %64 = load volatile %class.SCC*, %class.SCC** %3
  %65 = getelementptr inbounds %class.SCC, %class.SCC* %64, i32 0, i32 3
  call void @_ZNSt6vectorIlSaIlEE9push_backERKl(%"class.std::vector.5"* %65, i64* dereferenceable(8) %5)
  ret void

; <label>:66:                                     ; preds = %61, %60, %56, %40, %37, %36
  br label %34
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillISt13_Bit_iteratoriEvT_S1_RKT0_(i64*, i32, i64*, i32, i32* dereferenceable(4)) #0 comdat {
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca i32*, align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %2, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %3, i32* %18, align 8
  store i32* %4, i32** %8, align 8
  %19 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  %20 = bitcast %"struct.std::_Bit_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 16, i32 8, i1 false)
  %21 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %23, i32 %25)
  %27 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 0
  %29 = extractvalue { i64*, i32 } %26, 0
  store i64* %29, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 1
  %31 = extractvalue { i64*, i32 } %26, 1
  store i32 %31, i32* %30, align 8
  %32 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %33 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 16, i32 8, i1 false)
  %34 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %35 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %36, i32 %38)
  %40 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = extractvalue { i64*, i32 } %39, 0
  store i64* %42, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = extractvalue { i64*, i32 } %39, 1
  store i32 %44, i32* %43, align 8
  %45 = load i32*, i32** %8, align 8
  %46 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %52 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %51, i32 0, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %51, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  call void @_ZSt8__fill_aISt13_Bit_iteratoriEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %48, i32 %50, i64* %53, i32 %55, i32* dereferenceable(4) %45)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.10"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator", align 8
  %3 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %3, align 8
  %4 = load %"class.std::vector.10"*, %"class.std::vector.10"** %3, align 8
  %5 = bitcast %"class.std::vector.10"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Bit_iterator"* %2 to i8*
  %9 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::_Bit_iterator"* %2 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.10"*) #5 comdat align 2 {
  %2 = alloca { i64*, i32 }
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.399
  %6 = load i32, i32* @y.400
  %7 = add i32 %5, 1343568547
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1343568547
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 694029364, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 694029364, label %19
    i32 -1858841531, label %39
    i32 -723150555, label %65
    i32 1682373661, label %67
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1858841531, i32 1682373661
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Bit_iterator", align 8
  %41 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %41, align 8
  %42 = load %"class.std::vector.10"*, %"class.std::vector.10"** %41, align 8
  %43 = bitcast %"class.std::vector.10"* %42 to %"struct.std::_Bvector_base"*
  %44 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %44, i32 0, i32 1
  %46 = bitcast %"struct.std::_Bit_iterator"* %40 to i8*
  %47 = bitcast %"struct.std::_Bit_iterator"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false)
  %48 = bitcast %"struct.std::_Bit_iterator"* %40 to { i64*, i32 }*
  %49 = load { i64*, i32 }, { i64*, i32 }* %48, align 8
  store { i64*, i32 } %49, { i64*, i32 }* %2
  %50 = load i32, i32* @x.399
  %51 = load i32, i32* @y.400
  %52 = add i32 %50, -1919471195
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -1919471195
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -723150555, i32 1682373661
  store i32 %64, i32* %15
  br label %78

; <label>:65:                                     ; preds = %16
  %66 = load volatile { i64*, i32 }, { i64*, i32 }* %2
  ret { i64*, i32 } %66

; <label>:67:                                     ; preds = %16
  %68 = alloca %"struct.std::_Bit_iterator", align 8
  %69 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %69, align 8
  %70 = load %"class.std::vector.10"*, %"class.std::vector.10"** %69, align 8
  %71 = bitcast %"class.std::vector.10"* %70 to %"struct.std::_Bvector_base"*
  %72 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %72, i32 0, i32 1
  %74 = bitcast %"struct.std::_Bit_iterator"* %68 to i8*
  %75 = bitcast %"struct.std::_Bit_iterator"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 16, i32 8, i1 false)
  %76 = bitcast %"struct.std::_Bit_iterator"* %68 to { i64*, i32 }*
  %77 = load { i64*, i32 }, { i64*, i32 }* %76, align 8
  store i32 -1858841531, i32* %15
  br label %78

; <label>:78:                                     ; preds = %67, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.401
  %6 = load i32, i32* @y.402
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2077736847, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %144
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2077736847, label %18
    i32 -1058452825, label %38
    i32 432988131, label %82
    i32 707187088, label %84
  ]

; <label>:17:                                     ; preds = %15
  br label %144

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1058452825, i32 707187088
  store i32 %37, i32* %14
  br label %144

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %39, align 8
  %40 = load %"class.std::vector.5"*, %"class.std::vector.5"** %39, align 8
  %41 = bitcast %"class.std::vector.5"* %40 to %"struct.std::_Vector_base.6"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = bitcast %"class.std::vector.5"* %40 to %"struct.std::_Vector_base.6"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = ptrtoint i64* %44 to i64
  %50 = ptrtoint i64* %48 to i64
  %51 = sub i64 0, %50
  %52 = add i64 %49, %51
  %53 = sub i64 %49, %50
  %54 = sdiv exact i64 %52, 8
  store i64 %54, i64* %2
  %55 = load i32, i32* @x.401
  %56 = load i32, i32* @y.402
  %57 = sub i32 %55, -1796620645
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -1796620645
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 432988131, i32 707187088
  store i32 %81, i32* %14
  br label %144

; <label>:82:                                     ; preds = %15
  %83 = load volatile i64, i64* %2
  ret i64 %83

; <label>:84:                                     ; preds = %15
  %85 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %85, align 8
  %86 = load %"class.std::vector.5"*, %"class.std::vector.5"** %85, align 8
  %87 = bitcast %"class.std::vector.5"* %86 to %"struct.std::_Vector_base.6"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %88, i32 0, i32 1
  %90 = load i64*, i64** %89, align 8
  %91 = bitcast %"class.std::vector.5"* %86 to %"struct.std::_Vector_base.6"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %92, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = ptrtoint i64* %90 to i64
  %96 = ptrtoint i64* %94 to i64
  %97 = sub i64 0, %95
  %98 = add i64 0, %97
  %99 = sub i64 0, %95
  %100 = sub i64 %98, -6748009798189898460
  %101 = add i64 %100, %96
  %102 = add i64 %101, -6748009798189898460
  %103 = add i64 %98, %96
  %104 = sub i64 0, 5752218745310894650
  %105 = sub i64 %104, %95
  %106 = add i64 %105, 5752218745310894650
  %107 = sub i64 0, %95
  %108 = sub i64 0, %96
  %109 = sub i64 %106, %108
  %110 = add i64 %106, %96
  %111 = shl i64 %95, %96
  %112 = sub i64 0, %95
  %113 = add i64 0, %112
  %114 = sub i64 0, %95
  %115 = add i64 %113, -6441009702970028372
  %116 = add i64 %115, %96
  %117 = sub i64 %116, -6441009702970028372
  %118 = add i64 %113, %96
  %119 = shl i64 %95, %96
  %120 = sub i64 %95, 216652001862283835
  %121 = sub i64 %120, %96
  %122 = add i64 %121, 216652001862283835
  %123 = sub i64 %95, %96
  %124 = sub i64 0, 560865464146899051
  %125 = sub i64 %124, %122
  %126 = add i64 %125, 560865464146899051
  %127 = sub i64 0, %122
  %128 = sub i64 0, 8
  %129 = sub i64 %126, %128
  %130 = add i64 %126, 8
  %131 = add i64 0, 1472906895180749514
  %132 = sub i64 %131, %122
  %133 = sub i64 %132, 1472906895180749514
  %134 = sub i64 0, %122
  %135 = sub i64 %133, -4311420757046375788
  %136 = add i64 %135, 8
  %137 = add i64 %136, -4311420757046375788
  %138 = add i64 %133, 8
  %139 = shl i64 %122, 8
  %140 = shl i64 %122, 8
  %141 = shl i64 %122, 8
  %142 = shl i64 %122, 8
  %143 = sdiv exact i64 %122, 8
  store i32 -1058452825, i32* %14
  br label %144

; <label>:144:                                    ; preds = %84, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"*, i64) #5 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.403
  %7 = load i32, i32* @y.404
  %8 = sub i32 %6, 2075270054
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2075270054
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 29834675, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 29834675, label %20
    i32 -326593587, label %40
    i32 -1551592470, label %65
    i32 926920930, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -326593587, i32 926920930
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.5"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::vector.5"*, %"class.std::vector.5"** %41, align 8
  %44 = bitcast %"class.std::vector.5"* %43 to %"struct.std::_Vector_base.6"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = load i64, i64* %42, align 8
  %49 = getelementptr inbounds i64, i64* %47, i64 %48
  store i64* %49, i64** %3
  %50 = load i32, i32* @x.403
  %51 = load i32, i32* @y.404
  %52 = sub i32 %50, 2080997872
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 2080997872
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1551592470, i32 926920930
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i64*, i64** %3
  ret i64* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::vector.5"*, align 8
  %69 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %68, align 8
  store i64 %1, i64* %69, align 8
  %70 = load %"class.std::vector.5"*, %"class.std::vector.5"** %68, align 8
  %71 = bitcast %"class.std::vector.5"* %70 to %"struct.std::_Vector_base.6"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = load i64, i64* %69, align 8
  %76 = getelementptr inbounds i64, i64* %74, i64 %75
  store i32 -326593587, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN3SCC4rdfsEll(%class.SCC*, i64, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %class.SCC*
  %6 = alloca %class.SCC*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.std::_Bit_reference", align 8
  %10 = alloca %"class.std::vector.0"*, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"struct.Graph<0>::Edge", align 8
  %14 = alloca %"struct.std::_Bit_reference", align 8
  store %class.SCC* %0, %class.SCC** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  %15 = load %class.SCC*, %class.SCC** %6, align 8
  store %class.SCC* %15, %class.SCC** %5
  %16 = load volatile %class.SCC*, %class.SCC** %5
  %17 = getelementptr inbounds %class.SCC, %class.SCC* %16, i32 0, i32 5
  %18 = load i64, i64* %7, align 8
  %19 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.10"* %17, i64 %18)
  %20 = bitcast %"struct.std::_Bit_reference"* %9 to { i64*, i64 }*
  %21 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %20, i32 0, i32 0
  %22 = extractvalue { i64*, i64 } %19, 0
  store i64* %22, i64** %21, align 8
  %23 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %20, i32 0, i32 1
  %24 = extractvalue { i64*, i64 } %19, 1
  store i64 %24, i64* %23, align 8
  %25 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %9, i1 zeroext true) #3
  %26 = load i64, i64* %8, align 8
  %27 = load volatile %class.SCC*, %class.SCC** %5
  %28 = getelementptr inbounds %class.SCC, %class.SCC* %27, i32 0, i32 4
  %29 = load i64, i64* %7, align 8
  %30 = call dereferenceable(8) i64* @_ZNSt6vectorIlSaIlEEixEm(%"class.std::vector.5"* %28, i64 %29) #3
  store i64 %26, i64* %30, align 8
  %31 = load volatile %class.SCC*, %class.SCC** %5
  %32 = getelementptr inbounds %class.SCC, %class.SCC* %31, i32 0, i32 1
  %33 = load i64, i64* %7, align 8
  %34 = call dereferenceable(24) %"class.std::vector.0"* @_ZN5GraphILl0EEixEl(%class.Graph* %32, i64 %33)
  store %"class.std::vector.0"* %34, %"class.std::vector.0"** %10, align 8
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %36 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv(%"class.std::vector.0"* %35) #3
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %36, %"struct.Graph<0>::Edge"** %37, align 8
  %38 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %39 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv(%"class.std::vector.0"* %38) #3
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %39, %"struct.Graph<0>::Edge"** %40, align 8
  %41 = alloca i32
  store i32 1156765141, i32* %41
  br label %42

; <label>:42:                                     ; preds = %3, %202
  %43 = load i32, i32* %41
  switch i32 %43, label %44 [
    i32 1156765141, label %45
    i32 1300491533, label %72
    i32 -33304223, label %89
    i32 24457572, label %92
    i32 750695691, label %108
    i32 1556740258, label %124
    i32 -177862997, label %144
    i32 -1329984544, label %145
    i32 -1314809255, label %146
    i32 -1940936529, label %174
    i32 -1785154094, label %191
    i32 -675883411, label %192
    i32 63455005, label %193
    i32 771339333, label %195
    i32 1472849867, label %200
  ]

; <label>:44:                                     ; preds = %42
  br label %202

; <label>:45:                                     ; preds = %42
  %46 = load i32, i32* @x.405
  %47 = load i32, i32* @y.406
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1300491533, i32 63455005
  store i32 %71, i32* %41
  br label %202

; <label>:72:                                     ; preds = %42
  %73 = call zeroext i1 @_ZN9__gnu_cxxneIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %12) #3
  store i1 %73, i1* %4
  %74 = load i32, i32* @x.405
  %75 = load i32, i32* @y.406
  %76 = add i32 %74, 1106521127
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 1106521127
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  %88 = select i1 %86, i32 -33304223, i32 63455005
  store i32 %88, i32* %41
  br label %202

; <label>:89:                                     ; preds = %42
  %90 = load volatile i1, i1* %4
  %91 = select i1 %90, i32 24457572, i32 -675883411
  store i32 %91, i32* %41
  br label %202

; <label>:92:                                     ; preds = %42
  %93 = call dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  %94 = bitcast %"struct.Graph<0>::Edge"* %13 to i8*
  %95 = bitcast %"struct.Graph<0>::Edge"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 32, i32 8, i1 false)
  %96 = load volatile %class.SCC*, %class.SCC** %5
  %97 = getelementptr inbounds %class.SCC, %class.SCC* %96, i32 0, i32 5
  %98 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %13, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.10"* %97, i64 %99)
  %101 = bitcast %"struct.std::_Bit_reference"* %14 to { i64*, i64 }*
  %102 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %101, i32 0, i32 0
  %103 = extractvalue { i64*, i64 } %100, 0
  store i64* %103, i64** %102, align 8
  %104 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %101, i32 0, i32 1
  %105 = extractvalue { i64*, i64 } %100, 1
  store i64 %105, i64* %104, align 8
  %106 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %14) #3
  %107 = select i1 %106, i32 -1329984544, i32 750695691
  store i32 %107, i32* %41
  br label %202

; <label>:108:                                    ; preds = %42
  %109 = load i32, i32* @x.405
  %110 = load i32, i32* @y.406
  %111 = sub i32 %109, -457999327
  %112 = sub i32 %111, 1
  %113 = add i32 %112, -457999327
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 1556740258, i32 771339333
  store i32 %123, i32* %41
  br label %202

; <label>:124:                                    ; preds = %42
  %125 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %13, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = load i64, i64* %8, align 8
  %128 = load volatile %class.SCC*, %class.SCC** %5
  call void @_ZN3SCC4rdfsEll(%class.SCC* %128, i64 %126, i64 %127)
  %129 = load i32, i32* @x.405
  %130 = load i32, i32* @y.406
  %131 = add i32 %129, -1863058267
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, -1863058267
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  %143 = select i1 %141, i32 -177862997, i32 771339333
  store i32 %143, i32* %41
  br label %202

; <label>:144:                                    ; preds = %42
  store i32 -1329984544, i32* %41
  br label %202

; <label>:145:                                    ; preds = %42
  store i32 -1314809255, i32* %41
  br label %202

; <label>:146:                                    ; preds = %42
  %147 = load i32, i32* @x.405
  %148 = load i32, i32* @y.406
  %149 = sub i32 %147, -981959487
  %150 = sub i32 %149, 1
  %151 = add i32 %150, -981959487
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 true, true
  %160 = and i1 %157, true
  %161 = and i1 %155, %159
  %162 = and i1 %158, true
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 true, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  %173 = select i1 %171, i32 -1940936529, i32 1472849867
  store i32 %173, i32* %41
  br label %202

; <label>:174:                                    ; preds = %42
  %175 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  %176 = load i32, i32* @x.405
  %177 = load i32, i32* @y.406
  %178 = add i32 %176, 202689698
  %179 = sub i32 %178, 1
  %180 = sub i32 %179, 202689698
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = and i1 %184, %185
  %187 = xor i1 %184, %185
  %188 = or i1 %186, %187
  %189 = or i1 %184, %185
  %190 = select i1 %188, i32 -1785154094, i32 1472849867
  store i32 %190, i32* %41
  br label %202

; <label>:191:                                    ; preds = %42
  store i32 1156765141, i32* %41
  br label %202

; <label>:192:                                    ; preds = %42
  ret void

; <label>:193:                                    ; preds = %42
  %194 = call zeroext i1 @_ZN9__gnu_cxxneIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %12) #3
  store i32 1300491533, i32* %41
  br label %202

; <label>:195:                                    ; preds = %42
  %196 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %13, i32 0, i32 1
  %197 = load i64, i64* %196, align 8
  %198 = load i64, i64* %8, align 8
  %199 = load volatile %class.SCC*, %class.SCC** %5
  call void @_ZN3SCC4rdfsEll(%class.SCC* %199, i64 %197, i64 %198)
  store i32 1556740258, i32* %41
  br label %202

; <label>:200:                                    ; preds = %42
  %201 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  store i32 -1940936529, i32* %41
  br label %202

; <label>:202:                                    ; preds = %200, %195, %193, %191, %174, %146, %145, %144, %124, %108, %92, %89, %72, %45, %44
  br label %42
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IlSaIlEESaIS1_EE6resizeEmRKS1_(%"class.std::vector.14"*, i64, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::vector.14"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.23"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.23"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.24"*
  %10 = alloca %"class.std::vector.5"**
  %11 = alloca i64*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.407
  %15 = load i32, i32* @y.408
  %16 = add i32 %14, -1239433783
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1239433783
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 -805046384, i32* %24
  br label %25

; <label>:25:                                     ; preds = %3, %238
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 -805046384, label %28
    i32 -1539012478, label %48
    i32 1937491206, label %90
    i32 -1052219344, label %93
    i32 678932421, label %117
    i32 49672629, label %132
    i32 1684433716, label %153
    i32 -1927114743, label %156
    i32 442467355, label %171
    i32 -125081119, label %208
    i32 1711705938, label %209
    i32 -1960077095, label %210
    i32 1290062190, label %211
    i32 -818791331, label %222
    i32 -1472899925, label %228
  ]

; <label>:27:                                     ; preds = %25
  br label %238

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 -1539012478, i32 1290062190
  store i32 %47, i32* %24
  br label %238

; <label>:48:                                     ; preds = %25
  %49 = alloca %"class.std::vector.14"*, align 8
  %50 = alloca i64, align 8
  store i64* %50, i64** %11
  %51 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"** %51, %"class.std::vector.5"*** %10
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %52, %"class.__gnu_cxx::__normal_iterator.24"** %9
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %53, %"class.__gnu_cxx::__normal_iterator.23"** %8
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %54, %"class.__gnu_cxx::__normal_iterator.23"** %7
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %49, align 8
  %55 = load volatile i64*, i64** %11
  store i64 %1, i64* %55, align 8
  %56 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %10
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %56, align 8
  %57 = load %"class.std::vector.14"*, %"class.std::vector.14"** %49, align 8
  store %"class.std::vector.14"* %57, %"class.std::vector.14"** %6
  %58 = load volatile i64*, i64** %11
  %59 = load i64, i64* %58, align 8
  %60 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %6
  %61 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %60) #3
  %62 = icmp ugt i64 %59, %61
  store i1 %62, i1* %5
  %63 = load i32, i32* @x.407
  %64 = load i32, i32* @y.408
  %65 = sub i32 %63, 1508975176
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 1508975176
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 false, true
  %76 = and i1 %73, false
  %77 = and i1 %71, %75
  %78 = and i1 %74, false
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 false, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  %89 = select i1 %87, i32 1937491206, i32 1290062190
  store i32 %89, i32* %24
  br label %238

; <label>:90:                                     ; preds = %25
  %91 = load volatile i1, i1* %5
  %92 = select i1 %91, i32 -1052219344, i32 678932421
  store i32 %92, i32* %24
  br label %238

; <label>:93:                                     ; preds = %25
  %94 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %6
  %95 = call %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE3endEv(%"class.std::vector.14"* %94) #3
  %96 = load volatile %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %8
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %96, i32 0, i32 0
  store %"class.std::vector.5"* %95, %"class.std::vector.5"** %97, align 8
  %98 = load volatile %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %9
  %99 = load volatile %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2IPS3_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"* %98, %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %99) #3
  %100 = load volatile i64*, i64** %11
  %101 = load i64, i64* %100, align 8
  %102 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %6
  %103 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %102) #3
  %104 = add i64 %101, 2041384052276893104
  %105 = sub i64 %104, %103
  %106 = sub i64 %105, 2041384052276893104
  %107 = sub i64 %101, %103
  %108 = load volatile %"class.std::vector.5"**, %"class.std::vector.5"*** %10
  %109 = load %"class.std::vector.5"*, %"class.std::vector.5"** %108, align 8
  %110 = load volatile %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %9
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %110, i32 0, i32 0
  %112 = load %"class.std::vector.5"*, %"class.std::vector.5"** %111, align 8
  %113 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %6
  %114 = call %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEmRS6_(%"class.std::vector.14"* %113, %"class.std::vector.5"* %112, i64 %106, %"class.std::vector.5"* dereferenceable(24) %109)
  %115 = load volatile %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %7
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %115, i32 0, i32 0
  store %"class.std::vector.5"* %114, %"class.std::vector.5"** %116, align 8
  store i32 -1960077095, i32* %24
  br label %238

; <label>:117:                                    ; preds = %25
  %118 = load i32, i32* @x.407
  %119 = load i32, i32* @y.408
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 49672629, i32 -818791331
  store i32 %131, i32* %24
  br label %238

; <label>:132:                                    ; preds = %25
  %133 = load volatile i64*, i64** %11
  %134 = load i64, i64* %133, align 8
  %135 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %6
  %136 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %135) #3
  %137 = icmp ult i64 %134, %136
  store i1 %137, i1* %4
  %138 = load i32, i32* @x.407
  %139 = load i32, i32* @y.408
  %140 = sub i32 %138, -282189318
  %141 = sub i32 %140, 1
  %142 = add i32 %141, -282189318
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  %152 = select i1 %150, i32 1684433716, i32 -818791331
  store i32 %152, i32* %24
  br label %238

; <label>:153:                                    ; preds = %25
  %154 = load volatile i1, i1* %4
  %155 = select i1 %154, i32 -1927114743, i32 1711705938
  store i32 %155, i32* %24
  br label %238

; <label>:156:                                    ; preds = %25
  %157 = load i32, i32* @x.407
  %158 = load i32, i32* @y.408
  %159 = sub i32 0, 1
  %160 = add i32 %157, %159
  %161 = sub i32 %157, 1
  %162 = mul i32 %157, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %158, 10
  %166 = and i1 %164, %165
  %167 = xor i1 %164, %165
  %168 = or i1 %166, %167
  %169 = or i1 %164, %165
  %170 = select i1 %168, i32 442467355, i32 -1472899925
  store i32 %170, i32* %24
  br label %238

; <label>:171:                                    ; preds = %25
  %172 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %6
  %173 = bitcast %"class.std::vector.14"* %172 to %"struct.std::_Vector_base.15"*
  %174 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %173, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %174, i32 0, i32 0
  %176 = load %"class.std::vector.5"*, %"class.std::vector.5"** %175, align 8
  %177 = load volatile i64*, i64** %11
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %176, i64 %178
  %180 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %6
  call void @_ZNSt6vectorIS_IlSaIlEESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.14"* %180, %"class.std::vector.5"* %179) #3
  %181 = load i32, i32* @x.407
  %182 = load i32, i32* @y.408
  %183 = add i32 %181, 144651661
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, 144651661
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 true, true
  %194 = and i1 %191, true
  %195 = and i1 %189, %193
  %196 = and i1 %192, true
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 true, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  %207 = select i1 %205, i32 -125081119, i32 -1472899925
  store i32 %207, i32* %24
  br label %238

; <label>:208:                                    ; preds = %25
  store i32 1711705938, i32* %24
  br label %238

; <label>:209:                                    ; preds = %25
  store i32 -1960077095, i32* %24
  br label %238

; <label>:210:                                    ; preds = %25
  ret void

; <label>:211:                                    ; preds = %25
  %212 = alloca %"class.std::vector.14"*, align 8
  %213 = alloca i64, align 8
  %214 = alloca %"class.std::vector.5"*, align 8
  %215 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %216 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %217 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %212, align 8
  store i64 %1, i64* %213, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %214, align 8
  %218 = load %"class.std::vector.14"*, %"class.std::vector.14"** %212, align 8
  %219 = load i64, i64* %213, align 8
  %220 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %218) #3
  %221 = icmp ugt i64 %219, %220
  store i32 -1539012478, i32* %24
  br label %238

; <label>:222:                                    ; preds = %25
  %223 = load volatile i64*, i64** %11
  %224 = load i64, i64* %223, align 8
  %225 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %6
  %226 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %225) #3
  %227 = icmp ult i64 %224, %226
  store i32 49672629, i32* %24
  br label %238

; <label>:228:                                    ; preds = %25
  %229 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %6
  %230 = bitcast %"class.std::vector.14"* %229 to %"struct.std::_Vector_base.15"*
  %231 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %230, i32 0, i32 0
  %232 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %231, i32 0, i32 0
  %233 = load %"class.std::vector.5"*, %"class.std::vector.5"** %232, align 8
  %234 = load volatile i64*, i64** %11
  %235 = load i64, i64* %234, align 8
  %236 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %233, i64 %235
  %237 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %6
  call void @_ZNSt6vectorIS_IlSaIlEESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.14"* %237, %"class.std::vector.5"* %236) #3
  store i32 442467355, i32* %24
  br label %238

; <label>:238:                                    ; preds = %228, %222, %211, %209, %208, %171, %156, %153, %132, %117, %93, %90, %48, %28, %27
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EEixEm(%"class.std::vector.14"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.14"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %6 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %9, i64 %10
  ret %"class.std::vector.5"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEE9push_backERKl(%"class.std::vector.5"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca %"class.std::vector.5"*
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca i64*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  store %"class.std::vector.5"* %8, %"class.std::vector.5"** %5
  %9 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %10 = bitcast %"class.std::vector.5"* %9 to %"struct.std::_Vector_base.6"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  store i64* %13, i64** %4
  %14 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %15 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i64*, i64** %17, align 8
  store i64* %18, i64** %3
  %19 = alloca i32
  store i32 -1212473180, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %49
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1212473180, label %23
    i32 -434992300, label %28
    i32 -282561652, label %45
    i32 1001755533, label %48
  ]

; <label>:22:                                     ; preds = %20
  br label %49

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64*, i64** %4
  %25 = load volatile i64*, i64** %3
  %26 = icmp ne i64* %24, %25
  %27 = select i1 %26, i32 -434992300, i32 -282561652
  store i32 %27, i32* %19
  br label %49

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %30 = bitcast %"class.std::vector.5"* %29 to %"struct.std::_Vector_base.6"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %31 to %"class.std::allocator.7"*
  %33 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %34 = bitcast %"class.std::vector.5"* %33 to %"struct.std::_Vector_base.6"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = load i64*, i64** %7, align 8
  call void @_ZNSt16allocator_traitsISaIlEE9constructIlJRKlEEEvRS0_PT_DpOT0_(%"class.std::allocator.7"* dereferenceable(1) %32, i64* %37, i64* dereferenceable(8) %38)
  %39 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %40 = bitcast %"class.std::vector.5"* %39 to %"struct.std::_Vector_base.6"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %41, i32 0, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds i64, i64* %43, i32 1
  store i64* %44, i64** %42, align 8
  store i32 1001755533, i32* %19
  br label %49

; <label>:45:                                     ; preds = %20
  %46 = load i64*, i64** %7, align 8
  %47 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  call void @_ZNSt6vectorIlSaIlEE19_M_emplace_back_auxIJRKlEEEvDpOT_(%"class.std::vector.5"* %47, i64* dereferenceable(8) %46)
  store i32 1001755533, i32* %19
  br label %49

; <label>:48:                                     ; preds = %20
  ret void

; <label>:49:                                     ; preds = %45, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(64) %class.Graph* @_ZN5GraphILl0EEaSERKS0_(%class.Graph*, %class.Graph* dereferenceable(64)) #0 comdat align 2 {
  %3 = alloca %class.Graph*, align 8
  %4 = alloca %class.Graph*, align 8
  store %class.Graph* %0, %class.Graph** %3, align 8
  store %class.Graph* %1, %class.Graph** %4, align 8
  %5 = load %class.Graph*, %class.Graph** %3, align 8
  %6 = getelementptr inbounds %class.Graph, %class.Graph* %5, i32 0, i32 0
  %7 = load %class.Graph*, %class.Graph** %4, align 8
  %8 = getelementptr inbounds %class.Graph, %class.Graph* %7, i32 0, i32 0
  %9 = bitcast i64* %6 to i8*
  %10 = bitcast i64* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  %11 = getelementptr inbounds %class.Graph, %class.Graph* %5, i32 0, i32 2
  %12 = load %class.Graph*, %class.Graph** %4, align 8
  %13 = getelementptr inbounds %class.Graph, %class.Graph* %12, i32 0, i32 2
  %14 = call dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEaSERKS6_(%"class.std::vector"* %11, %"class.std::vector"* dereferenceable(24) %13)
  %15 = getelementptr inbounds %class.Graph, %class.Graph* %5, i32 0, i32 3
  %16 = load %class.Graph*, %class.Graph** %4, align 8
  %17 = getelementptr inbounds %class.Graph, %class.Graph* %16, i32 0, i32 3
  %18 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEaSERKS4_(%"class.std::vector.0"* %15, %"class.std::vector.0"* dereferenceable(24) %17)
  ret %class.Graph* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZN5GraphILl0EEixEl(%class.Graph*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.415
  %7 = load i32, i32* @y.416
  %8 = sub i32 %6, 492476549
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 492476549
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2031511732, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2031511732, label %20
    i32 1294199426, label %28
    i32 2017848472, label %49
    i32 -1977551147, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1294199426, i32 -1977551147
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %class.Graph*, align 8
  %30 = alloca i64, align 8
  store %class.Graph* %0, %class.Graph** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %class.Graph*, %class.Graph** %29, align 8
  %32 = getelementptr inbounds %class.Graph, %class.Graph* %31, i32 0, i32 2
  %33 = load i64, i64* %30, align 8
  %34 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"* %32, i64 %33) #3
  store %"class.std::vector.0"* %34, %"class.std::vector.0"** %3
  %35 = load i32, i32* @x.415
  %36 = load i32, i32* @y.416
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 2017848472, i32 -1977551147
  store i32 %48, i32* %16
  br label %58

; <label>:49:                                     ; preds = %17
  %50 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %50

; <label>:51:                                     ; preds = %17
  %52 = alloca %class.Graph*, align 8
  %53 = alloca i64, align 8
  store %class.Graph* %0, %class.Graph** %52, align 8
  store i64 %1, i64* %53, align 8
  %54 = load %class.Graph*, %class.Graph** %52, align 8
  %55 = getelementptr inbounds %class.Graph, %class.Graph* %54, i32 0, i32 2
  %56 = load i64, i64* %53, align 8
  %57 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"* %55, i64 %56) #3
  store i32 1294199426, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph<0>::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.417
  %6 = load i32, i32* @y.418
  %7 = add i32 %5, -1777449428
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1777449428
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1355772571, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1355772571, label %19
    i32 -444142231, label %27
    i32 -957718287, label %53
    i32 -2022125282, label %55
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -444142231, i32 -2022125282
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %34, align 8
  store %"struct.Graph<0>::Edge"* %35, %"struct.Graph<0>::Edge"** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %28, %"struct.Graph<0>::Edge"** dereferenceable(8) %30) #3
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  %37 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %36, align 8
  store %"struct.Graph<0>::Edge"* %37, %"struct.Graph<0>::Edge"** %2
  %38 = load i32, i32* @x.417
  %39 = load i32, i32* @y.418
  %40 = sub i32 %38, 2093422691
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 2093422691
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -957718287, i32 -2022125282
  store i32 %52, i32* %15
  br label %66

; <label>:53:                                     ; preds = %16
  %54 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2
  ret %"struct.Graph<0>::Edge"* %54

; <label>:55:                                     ; preds = %16
  %56 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %57 = alloca %"class.std::vector.0"*, align 8
  %58 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %57, align 8
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %57, align 8
  %60 = bitcast %"class.std::vector.0"* %59 to %"struct.std::_Vector_base.1"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %61, i32 0, i32 0
  %63 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %62, align 8
  store %"struct.Graph<0>::Edge"* %63, %"struct.Graph<0>::Edge"** %58, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %56, %"struct.Graph<0>::Edge"** dereferenceable(8) %58) #3
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %56, i32 0, i32 0
  %65 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %64, align 8
  store i32 -444142231, i32* %15
  br label %66

; <label>:66:                                     ; preds = %55, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph<0>::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.419
  %6 = load i32, i32* @y.420
  %7 = sub i32 %5, 747159226
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 747159226
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -955221921, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -955221921, label %19
    i32 899482872, label %27
    i32 -926952584, label %65
    i32 2102531110, label %67
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 899482872, i32 2102531110
  store i32 %26, i32* %15
  br label %78

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %33, i32 0, i32 1
  %35 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %34, align 8
  store %"struct.Graph<0>::Edge"* %35, %"struct.Graph<0>::Edge"** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %28, %"struct.Graph<0>::Edge"** dereferenceable(8) %30) #3
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  %37 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %36, align 8
  store %"struct.Graph<0>::Edge"* %37, %"struct.Graph<0>::Edge"** %2
  %38 = load i32, i32* @x.419
  %39 = load i32, i32* @y.420
  %40 = sub i32 %38, 1576771165
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1576771165
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -926952584, i32 2102531110
  store i32 %64, i32* %15
  br label %78

; <label>:65:                                     ; preds = %16
  %66 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2
  ret %"struct.Graph<0>::Edge"* %66

; <label>:67:                                     ; preds = %16
  %68 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %69 = alloca %"class.std::vector.0"*, align 8
  %70 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %69, align 8
  %71 = load %"class.std::vector.0"*, %"class.std::vector.0"** %69, align 8
  %72 = bitcast %"class.std::vector.0"* %71 to %"struct.std::_Vector_base.1"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %73, i32 0, i32 1
  %75 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %74, align 8
  store %"struct.Graph<0>::Edge"* %75, %"struct.Graph<0>::Edge"** %70, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"* %68, %"struct.Graph<0>::Edge"** dereferenceable(8) %70) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %68, i32 0, i32 0
  %77 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %76, align 8
  store i32 899482872, i32* %15
  br label %78

; <label>:78:                                     ; preds = %67, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph<0>::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph<0>::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %9, align 8
  %11 = icmp ne %"struct.Graph<0>::Edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  ret %"struct.Graph<0>::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.425
  %6 = load i32, i32* @y.426
  %7 = add i32 %5, 793552100
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 793552100
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1937324083, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1937324083, label %19
    i32 -583574227, label %27
    i32 477260204, label %61
    i32 -1083540208, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -583574227, i32 -1083540208
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %29, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %31, align 8
  %33 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %32, i32 1
  store %"struct.Graph<0>::Edge"* %33, %"struct.Graph<0>::Edge"** %31, align 8
  %34 = load i32, i32* @x.425
  %35 = load i32, i32* @y.426
  %36 = sub i32 %34, 350155412
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 350155412
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 477260204, i32 -1083540208
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %64, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  %67 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %66, align 8
  %68 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %67, i32 1
  store %"struct.Graph<0>::Edge"* %68, %"struct.Graph<0>::Edge"** %66, align 8
  store i32 -583574227, i32* %15
  br label %69

; <label>:69:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_reference", align 8
  %3 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %3, align 8
  %4 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %3, align 8
  %5 = bitcast %"struct.std::_Bit_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %2, i64* %7, i64 %12)
  %13 = bitcast %"struct.std::_Bit_reference"* %2 to { i64*, i64 }*
  %14 = load { i64*, i64 }, { i64*, i64 }* %13, align 8
  ret { i64*, i64 } %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"*, i64*, i64) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_reference"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 1
  %11 = load i64, i64* %6, align 8
  store i64 %11, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"*, i1 zeroext) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Bit_reference"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.431
  %8 = load i32, i32* @y.432
  %9 = add i32 %7, 1443140708
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1443140708
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -52662331, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %122
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -52662331, label %21
    i32 -872001278, label %41
    i32 243732409, label %75
    i32 -2125899401, label %78
    i32 1426782894, label %90
    i32 -133382359, label %113
    i32 -1604256861, label %115
  ]

; <label>:20:                                     ; preds = %18
  br label %122

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -872001278, i32 -1604256861
  store i32 %40, i32* %17
  br label %122

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::_Bit_reference"*, align 8
  %43 = alloca i8, align 1
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %42, align 8
  %44 = zext i1 %1 to i8
  store i8 %44, i8* %43, align 1
  %45 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %42, align 8
  store %"struct.std::_Bit_reference"* %45, %"struct.std::_Bit_reference"** %4
  %46 = load i8, i8* %43, align 1
  %47 = trunc i8 %46 to i1
  store i1 %47, i1* %3
  %48 = load i32, i32* @x.431
  %49 = load i32, i32* @y.432
  %50 = add i32 %48, -1853088150
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1853088150
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 243732409, i32 -1604256861
  store i32 %74, i32* %17
  br label %122

; <label>:75:                                     ; preds = %18
  %76 = load volatile i1, i1* %3
  %77 = select i1 %76, i32 -2125899401, i32 1426782894
  store i32 %77, i32* %17
  br label %122

; <label>:78:                                     ; preds = %18
  %79 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %80 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %79, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %83 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %82, i32 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = load i64, i64* %84, align 8
  %86 = and i64 %85, %81
  %87 = xor i64 %85, %81
  %88 = or i64 %86, %87
  %89 = or i64 %85, %81
  store i64 %88, i64* %84, align 8
  store i32 -133382359, i32* %17
  br label %122

; <label>:90:                                     ; preds = %18
  %91 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %92 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %91, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = xor i64 %93, -1
  %95 = and i64 4531504719796024826, %94
  %96 = xor i64 4531504719796024826, -1
  %97 = and i64 %93, %96
  %98 = xor i64 -1, -1
  %99 = and i64 %98, 4531504719796024826
  %100 = and i64 -1, %96
  %101 = or i64 %95, %97
  %102 = or i64 %99, %100
  %103 = xor i64 %101, %102
  %104 = xor i64 %93, -1
  %105 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %106 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %105, i32 0, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = load i64, i64* %107, align 8
  %109 = xor i64 %103, -1
  %110 = xor i64 %108, %109
  %111 = and i64 %110, %108
  %112 = and i64 %108, %103
  store i64 %111, i64* %107, align 8
  store i32 -133382359, i32* %17
  br label %122

; <label>:113:                                    ; preds = %18
  %114 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  ret %"struct.std::_Bit_reference"* %114

; <label>:115:                                    ; preds = %18
  %116 = alloca %"struct.std::_Bit_reference"*, align 8
  %117 = alloca i8, align 1
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %116, align 8
  %118 = zext i1 %1 to i8
  store i8 %118, i8* %117, align 1
  %119 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %116, align 8
  %120 = load i8, i8* %117, align 1
  %121 = trunc i8 %120 to i1
  store i32 -872001278, i32* %17
  br label %122

; <label>:122:                                    ; preds = %115, %90, %78, %75, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aISt13_Bit_iteratoriEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64*, i32, i64*, i32, i32* dereferenceable(4)) #0 comdat {
  %6 = alloca i1
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %"struct.std::_Bit_reference", align 8
  %12 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %13 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %12, i32 0, i32 0
  store i64* %0, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %12, i32 0, i32 1
  store i32 %1, i32* %14, align 8
  %15 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %2, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %3, i32* %17, align 8
  store i32* %4, i32** %9, align 8
  %18 = load i32*, i32** %9, align 8
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %10, align 4
  %20 = alloca i32
  store i32 -383348696, i32* %20
  br label %21

; <label>:21:                                     ; preds = %5, %134
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -383348696, label %24
    i32 2071145059, label %52
    i32 -1304106269, label %83
    i32 305119437, label %86
    i32 191189874, label %96
    i32 -1947238580, label %98
    i32 -209460947, label %113
    i32 288520392, label %128
    i32 565381925, label %129
    i32 1280034003, label %133
  ]

; <label>:23:                                     ; preds = %21
  br label %134

; <label>:24:                                     ; preds = %21
  %25 = load i32, i32* @x.433
  %26 = load i32, i32* @y.434
  %27 = sub i32 %25, 1960978360
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 1960978360
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 2071145059, i32 565381925
  store i32 %51, i32* %20
  br label %134

; <label>:52:                                     ; preds = %21
  %53 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %54 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %55 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseneERKS_(%"struct.std::_Bit_iterator_base"* %53, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %54)
  store i1 %55, i1* %6
  %56 = load i32, i32* @x.433
  %57 = load i32, i32* @y.434
  %58 = add i32 %56, 122431347
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 122431347
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -1304106269, i32 565381925
  store i32 %82, i32* %20
  br label %134

; <label>:83:                                     ; preds = %21
  %84 = load volatile i1, i1* %6
  %85 = select i1 %84, i32 305119437, i32 -1947238580
  store i32 %85, i32* %20
  br label %134

; <label>:86:                                     ; preds = %21
  %87 = load i32, i32* %10, align 4
  %88 = icmp ne i32 %87, 0
  %89 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %7)
  %90 = bitcast %"struct.std::_Bit_reference"* %11 to { i64*, i64 }*
  %91 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %90, i32 0, i32 0
  %92 = extractvalue { i64*, i64 } %89, 0
  store i64* %92, i64** %91, align 8
  %93 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %90, i32 0, i32 1
  %94 = extractvalue { i64*, i64 } %89, 1
  store i64 %94, i64* %93, align 8
  %95 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %11, i1 zeroext %88) #3
  store i32 191189874, i32* %20
  br label %134

; <label>:96:                                     ; preds = %21
  %97 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %7)
  store i32 -383348696, i32* %20
  br label %134

; <label>:98:                                     ; preds = %21
  %99 = load i32, i32* @x.433
  %100 = load i32, i32* @y.434
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 -209460947, i32 1280034003
  store i32 %112, i32* %20
  br label %134

; <label>:113:                                    ; preds = %21
  %114 = load i32, i32* @x.433
  %115 = load i32, i32* @y.434
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 288520392, i32 1280034003
  store i32 %127, i32* %20
  br label %134

; <label>:128:                                    ; preds = %21
  ret void

; <label>:129:                                    ; preds = %21
  %130 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %131 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %132 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseneERKS_(%"struct.std::_Bit_iterator_base"* %130, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %131)
  store i32 2071145059, i32* %20
  br label %134

; <label>:133:                                    ; preds = %21
  store i32 -209460947, i32* %20
  br label %134

; <label>:134:                                    ; preds = %133, %129, %113, %98, %96, %86, %83, %52, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64*, i32) #0 comdat {
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  %4 = alloca %"struct.std::_Bit_iterator", align 8
  %5 = alloca %"struct.std::_Bit_iterator", align 8
  %6 = bitcast %"struct.std::_Bit_iterator"* %4 to { i64*, i32 }*
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 0
  store i64* %0, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  %10 = bitcast %"struct.std::_Bit_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  %11 = bitcast %"struct.std::_Bit_iterator"* %5 to { i64*, i32 }*
  %12 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = call { i64*, i32 } @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i64* %13, i32 %15)
  %17 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  %19 = extractvalue { i64*, i32 } %16, 0
  store i64* %19, i64** %18, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  %21 = extractvalue { i64*, i32 } %16, 1
  store i32 %21, i32* %20, align 8
  %22 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %23 = load { i64*, i32 }, { i64*, i32 }* %22, align 8
  ret { i64*, i32 } %23
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt18_Bit_iterator_baseneERKS_(%"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.437
  %7 = load i32, i32* @y.438
  %8 = add i32 %6, -609299905
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -609299905
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 867313872, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %99
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 867313872, label %20
    i32 -646051935, label %28
    i32 -1412261005, label %67
    i32 427454214, label %69
  ]

; <label>:19:                                     ; preds = %17
  br label %99

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -646051935, i32 427454214
  store i32 %27, i32* %16
  br label %99

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %30 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %29, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %30, align 8
  %31 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %29, align 8
  %32 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %30, align 8
  %33 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseeqERKS_(%"struct.std::_Bit_iterator_base"* %31, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %32)
  %34 = xor i1 %33, true
  %35 = and i1 true, %34
  %36 = xor i1 true, true
  %37 = and i1 %33, %36
  %38 = or i1 %35, %37
  %39 = xor i1 %33, true
  store i1 %38, i1* %3
  %40 = load i32, i32* @x.437
  %41 = load i32, i32* @y.438
  %42 = sub i32 %40, -1183081828
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1183081828
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1412261005, i32 427454214
  store i32 %66, i32* %16
  br label %99

; <label>:67:                                     ; preds = %17
  %68 = load volatile i1, i1* %3
  ret i1 %68

; <label>:69:                                     ; preds = %17
  %70 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %71 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %70, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %71, align 8
  %72 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %70, align 8
  %73 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %71, align 8
  %74 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseeqERKS_(%"struct.std::_Bit_iterator_base"* %72, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %73)
  %75 = add i1 %74, false
  %76 = sub i1 %75, true
  %77 = sub i1 %76, false
  %78 = sub i1 %74, true
  %79 = mul i1 %77, true
  %80 = sub i1 %74, true
  %81 = sub i1 %80, true
  %82 = add i1 %81, true
  %83 = sub i1 %74, true
  %84 = mul i1 %82, true
  %85 = sub i1 false, true
  %86 = sub i1 %85, %74
  %87 = add i1 %86, true
  %88 = sub i1 false, %74
  %89 = sub i1 %87, true
  %90 = add i1 %89, true
  %91 = add i1 %90, true
  %92 = add i1 %87, true
  %93 = xor i1 %74, true
  %94 = and i1 true, %93
  %95 = xor i1 true, true
  %96 = and i1 %74, %95
  %97 = or i1 %94, %96
  %98 = xor i1 %74, true
  store i32 -646051935, i32* %16
  br label %99

; <label>:99:                                     ; preds = %69, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %4)
  ret %"struct.std::_Bit_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt18_Bit_iterator_baseeqERKS_(%"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i64*
  %5 = alloca i64*
  %6 = alloca %"struct.std::_Bit_iterator_base"*
  %7 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %8 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %7, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %8, align 8
  %9 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %7, align 8
  store %"struct.std::_Bit_iterator_base"* %9, %"struct.std::_Bit_iterator_base"** %6
  %10 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %6
  %11 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  store i64* %12, i64** %5
  %13 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %8, align 8
  %14 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %13, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  store i64* %15, i64** %4
  %16 = alloca i32
  store i32 1894466579, i32* %16
  %17 = alloca i1
  br label %18

; <label>:18:                                     ; preds = %2, %82
  %19 = load i32, i32* %16
  switch i32 %19, label %20 [
    i32 1894466579, label %21
    i32 -357275951, label %26
    i32 760933619, label %34
    i32 -1469668069, label %51
    i32 -1702878818, label %79
    i32 -1696665830, label %81
  ]

; <label>:20:                                     ; preds = %18
  br label %82

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64*, i64** %5
  %23 = load volatile i64*, i64** %4
  %24 = icmp eq i64* %22, %23
  %25 = select i1 %24, i32 -357275951, i32 760933619
  store i32 %25, i32* %16
  store i1 false, i1* %17
  br label %82

; <label>:26:                                     ; preds = %18
  %27 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %6
  %28 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %8, align 8
  %31 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %29, %32
  store i32 760933619, i32* %16
  store i1 %33, i1* %17
  br label %82

; <label>:34:                                     ; preds = %18
  %35 = load i1, i1* %17
  store i1 %35, i1* %3
  %36 = load i32, i32* @x.441
  %37 = load i32, i32* @y.442
  %38 = sub i32 %36, 274635847
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 274635847
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -1469668069, i32 -1696665830
  store i32 %50, i32* %16
  br label %82

; <label>:51:                                     ; preds = %18
  %52 = load i32, i32* @x.441
  %53 = load i32, i32* @y.442
  %54 = add i32 %52, 233442947
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 233442947
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1702878818, i32 -1696665830
  store i32 %78, i32* %16
  br label %82

; <label>:79:                                     ; preds = %18
  %80 = load volatile i1, i1* %3
  ret i1 %80

; <label>:81:                                     ; preds = %18
  store i32 -1469668069, i32* %16
  br label %82

; <label>:82:                                     ; preds = %81, %51, %34, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"*) #5 comdat align 2 {
  %2 = alloca i32
  %3 = alloca %"struct.std::_Bit_iterator_base"*
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  store %"struct.std::_Bit_iterator_base"* %5, %"struct.std::_Bit_iterator_base"** %3
  %6 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %7 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %2
  %9 = load volatile i32, i32* %2
  %10 = add i32 %9, -828624476
  %11 = add i32 %10, 1
  %12 = sub i32 %11, -828624476
  %13 = add i32 %9, 1
  store i32 %12, i32* %7, align 8
  %14 = alloca i32
  store i32 1704498078, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1704498078, label %18
    i32 1853712992, label %22
    i32 -2000468697, label %29
    i32 -1569024184, label %44
    i32 1266305920, label %59
    i32 -1341395376, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i32, i32* %2
  %20 = icmp eq i32 %19, 63
  %21 = select i1 %20, i32 1853712992, i32 -2000468697
  store i32 %21, i32* %14
  br label %61

; <label>:22:                                     ; preds = %15
  %23 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %24 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %23, i32 0, i32 1
  store i32 0, i32* %24, align 8
  %25 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %26 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i32 1
  store i64* %28, i64** %26, align 8
  store i32 -2000468697, i32* %14
  br label %61

; <label>:29:                                     ; preds = %15
  %30 = load i32, i32* @x.443
  %31 = load i32, i32* @y.444
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1569024184, i32 -1341395376
  store i32 %43, i32* %14
  br label %61

; <label>:44:                                     ; preds = %15
  %45 = load i32, i32* @x.443
  %46 = load i32, i32* @y.444
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1266305920, i32 -1341395376
  store i32 %58, i32* %14
  br label %61

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  store i32 -1569024184, i32* %14
  br label %61

; <label>:61:                                     ; preds = %60, %44, %29, %22, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i64*, i32) #5 comdat align 2 {
  %3 = alloca { i64*, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.445
  %7 = load i32, i32* @y.446
  %8 = add i32 %6, 2056237671
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 2056237671
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1602728026, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1602728026, label %20
    i32 -1683748995, label %40
    i32 -1480487345, label %65
    i32 1655640260, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1683748995, i32 1655640260
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Bit_iterator", align 8
  %42 = alloca %"struct.std::_Bit_iterator", align 8
  %43 = bitcast %"struct.std::_Bit_iterator"* %42 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  store i64* %0, i64** %44, align 8
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  store i32 %1, i32* %45, align 8
  %46 = bitcast %"struct.std::_Bit_iterator"* %41 to i8*
  %47 = bitcast %"struct.std::_Bit_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false)
  %48 = bitcast %"struct.std::_Bit_iterator"* %41 to { i64*, i32 }*
  %49 = load { i64*, i32 }, { i64*, i32 }* %48, align 8
  store { i64*, i32 } %49, { i64*, i32 }* %3
  %50 = load i32, i32* @x.445
  %51 = load i32, i32* @y.446
  %52 = sub i32 %50, -1581722887
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1581722887
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1480487345, i32 1655640260
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile { i64*, i32 }, { i64*, i32 }* %3
  ret { i64*, i32 } %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"struct.std::_Bit_iterator", align 8
  %69 = alloca %"struct.std::_Bit_iterator", align 8
  %70 = bitcast %"struct.std::_Bit_iterator"* %69 to { i64*, i32 }*
  %71 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 0
  store i64* %0, i64** %71, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 1
  store i32 %1, i32* %72, align 8
  %73 = bitcast %"struct.std::_Bit_iterator"* %68 to i8*
  %74 = bitcast %"struct.std::_Bit_iterator"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 16, i32 8, i1 false)
  %75 = bitcast %"struct.std::_Bit_iterator"* %68 to { i64*, i32 }*
  %76 = load { i64*, i32 }, { i64*, i32 }* %75, align 8
  store i32 -1683748995, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %2, align 8
  %3 = load %"class.std::vector.14"*, %"class.std::vector.14"** %2, align 8
  %4 = bitcast %"class.std::vector.14"* %3 to %"struct.std::_Vector_base.15"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %8 = bitcast %"class.std::vector.14"* %3 to %"struct.std::_Vector_base.15"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %10, align 8
  %12 = ptrtoint %"class.std::vector.5"* %7 to i64
  %13 = ptrtoint %"class.std::vector.5"* %11 to i64
  %14 = sub i64 %12, 319116556134856745
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 319116556134856745
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEmRS6_(%"class.std::vector.14"*, %"class.std::vector.5"*, i64, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 {
  %5 = alloca %"class.std::vector.5"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.449
  %9 = load i32, i32* @y.450
  %10 = add i32 %8, -1373305185
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1373305185
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -101067277, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %122
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -101067277, label %22
    i32 -2076168871, label %42
    i32 -1729298517, label %88
    i32 -435538450, label %90
  ]

; <label>:21:                                     ; preds = %19
  br label %122

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -2076168871, i32 -435538450
  store i32 %41, i32* %18
  br label %122

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %45 = alloca %"class.std::vector.14"*, align 8
  %46 = alloca i64, align 8
  %47 = alloca %"class.std::vector.5"*, align 8
  %48 = alloca i64, align 8
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %44, i32 0, i32 0
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %53, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %45, align 8
  store i64 %2, i64* %46, align 8
  store %"class.std::vector.5"* %3, %"class.std::vector.5"** %47, align 8
  %54 = load %"class.std::vector.14"*, %"class.std::vector.14"** %45, align 8
  %55 = call %"class.std::vector.5"* @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE6cbeginEv(%"class.std::vector.14"* %54) #3
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %49, i32 0, i32 0
  store %"class.std::vector.5"* %55, %"class.std::vector.5"** %56, align 8
  %57 = call i64 @_ZN9__gnu_cxxmiIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %44, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %49) #3
  store i64 %57, i64* %48, align 8
  %58 = call %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE5beginEv(%"class.std::vector.14"* %54) #3
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %51, i32 0, i32 0
  store %"class.std::vector.5"* %58, %"class.std::vector.5"** %59, align 8
  %60 = load i64, i64* %48, align 8
  %61 = call %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEplEl(%"class.__gnu_cxx::__normal_iterator.23"* %51, i64 %60) #3
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %50, i32 0, i32 0
  store %"class.std::vector.5"* %61, %"class.std::vector.5"** %62, align 8
  %63 = load i64, i64* %46, align 8
  %64 = load %"class.std::vector.5"*, %"class.std::vector.5"** %47, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %50, i32 0, i32 0
  %66 = load %"class.std::vector.5"*, %"class.std::vector.5"** %65, align 8
  call void @_ZNSt6vectorIS_IlSaIlEESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.14"* %54, %"class.std::vector.5"* %66, i64 %63, %"class.std::vector.5"* dereferenceable(24) %64)
  %67 = call %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE5beginEv(%"class.std::vector.14"* %54) #3
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %52, i32 0, i32 0
  store %"class.std::vector.5"* %67, %"class.std::vector.5"** %68, align 8
  %69 = load i64, i64* %48, align 8
  %70 = call %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEplEl(%"class.__gnu_cxx::__normal_iterator.23"* %52, i64 %69) #3
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %43, i32 0, i32 0
  store %"class.std::vector.5"* %70, %"class.std::vector.5"** %71, align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %43, i32 0, i32 0
  %73 = load %"class.std::vector.5"*, %"class.std::vector.5"** %72, align 8
  store %"class.std::vector.5"* %73, %"class.std::vector.5"** %5
  %74 = load i32, i32* @x.449
  %75 = load i32, i32* @y.450
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 -1729298517, i32 -435538450
  store i32 %87, i32* %18
  br label %122

; <label>:88:                                     ; preds = %19
  %89 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  ret %"class.std::vector.5"* %89

; <label>:90:                                     ; preds = %19
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %92 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %93 = alloca %"class.std::vector.14"*, align 8
  %94 = alloca i64, align 8
  %95 = alloca %"class.std::vector.5"*, align 8
  %96 = alloca i64, align 8
  %97 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %98 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %99 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %100 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %101 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %92, i32 0, i32 0
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %101, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %93, align 8
  store i64 %2, i64* %94, align 8
  store %"class.std::vector.5"* %3, %"class.std::vector.5"** %95, align 8
  %102 = load %"class.std::vector.14"*, %"class.std::vector.14"** %93, align 8
  %103 = call %"class.std::vector.5"* @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE6cbeginEv(%"class.std::vector.14"* %102) #3
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %97, i32 0, i32 0
  store %"class.std::vector.5"* %103, %"class.std::vector.5"** %104, align 8
  %105 = call i64 @_ZN9__gnu_cxxmiIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %92, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %97) #3
  store i64 %105, i64* %96, align 8
  %106 = call %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE5beginEv(%"class.std::vector.14"* %102) #3
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %99, i32 0, i32 0
  store %"class.std::vector.5"* %106, %"class.std::vector.5"** %107, align 8
  %108 = load i64, i64* %96, align 8
  %109 = call %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEplEl(%"class.__gnu_cxx::__normal_iterator.23"* %99, i64 %108) #3
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %98, i32 0, i32 0
  store %"class.std::vector.5"* %109, %"class.std::vector.5"** %110, align 8
  %111 = load i64, i64* %94, align 8
  %112 = load %"class.std::vector.5"*, %"class.std::vector.5"** %95, align 8
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %98, i32 0, i32 0
  %114 = load %"class.std::vector.5"*, %"class.std::vector.5"** %113, align 8
  call void @_ZNSt6vectorIS_IlSaIlEESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.14"* %102, %"class.std::vector.5"* %114, i64 %111, %"class.std::vector.5"* dereferenceable(24) %112)
  %115 = call %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE5beginEv(%"class.std::vector.14"* %102) #3
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %100, i32 0, i32 0
  store %"class.std::vector.5"* %115, %"class.std::vector.5"** %116, align 8
  %117 = load i64, i64* %96, align 8
  %118 = call %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEplEl(%"class.__gnu_cxx::__normal_iterator.23"* %100, i64 %117) #3
  %119 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %91, i32 0, i32 0
  store %"class.std::vector.5"* %118, %"class.std::vector.5"** %119, align 8
  %120 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %91, i32 0, i32 0
  %121 = load %"class.std::vector.5"*, %"class.std::vector.5"** %120, align 8
  store i32 -2076168871, i32* %18
  br label %122

; <label>:122:                                    ; preds = %90, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE3endEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %3 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  %4 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %5 = bitcast %"class.std::vector.14"* %4 to %"struct.std::_Vector_base.15"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.23"* %2, %"class.std::vector.5"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  ret %"class.std::vector.5"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2IPS3_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %1, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  %7 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  %8 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %7) #3
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  store %"class.std::vector.5"* %9, %"class.std::vector.5"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IlSaIlEESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.14"*, %"class.std::vector.5"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.14"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %6 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %7 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %9, align 8
  %11 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %12 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %11) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E(%"class.std::vector.5"* %6, %"class.std::vector.5"* %10, %"class.std::allocator.16"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %15 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::vector.5"* %14, %"class.std::vector.5"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.457
  %7 = load i32, i32* @y.458
  %8 = sub i32 %6, -1655488514
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1655488514
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1251214274, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %166
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1251214274, label %20
    i32 -1177368689, label %28
    i32 1218073490, label %69
    i32 -1018178006, label %71
  ]

; <label>:19:                                     ; preds = %17
  br label %166

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1177368689, i32 -1018178006
  store i32 %27, i32* %16
  br label %166

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %1, %"class.__gnu_cxx::__normal_iterator.24"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %29, align 8
  %32 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %31) #3
  %33 = load %"class.std::vector.5"*, %"class.std::vector.5"** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %30, align 8
  %35 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %34) #3
  %36 = load %"class.std::vector.5"*, %"class.std::vector.5"** %35, align 8
  %37 = ptrtoint %"class.std::vector.5"* %33 to i64
  %38 = ptrtoint %"class.std::vector.5"* %36 to i64
  %39 = sub i64 0, %38
  %40 = add i64 %37, %39
  %41 = sub i64 %37, %38
  %42 = sdiv exact i64 %40, 24
  store i64 %42, i64* %3
  %43 = load i32, i32* @x.457
  %44 = load i32, i32* @y.458
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1218073490, i32 -1018178006
  store i32 %68, i32* %16
  br label %166

; <label>:69:                                     ; preds = %17
  %70 = load volatile i64, i64* %3
  ret i64 %70

; <label>:71:                                     ; preds = %17
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %72, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %1, %"class.__gnu_cxx::__normal_iterator.24"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %72, align 8
  %75 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %74) #3
  %76 = load %"class.std::vector.5"*, %"class.std::vector.5"** %75, align 8
  %77 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %73, align 8
  %78 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %77) #3
  %79 = load %"class.std::vector.5"*, %"class.std::vector.5"** %78, align 8
  %80 = ptrtoint %"class.std::vector.5"* %76 to i64
  %81 = ptrtoint %"class.std::vector.5"* %79 to i64
  %82 = sub i64 0, %81
  %83 = add i64 %80, %82
  %84 = sub i64 %80, %81
  %85 = mul i64 %83, %81
  %86 = add i64 0, -2546758935292367010
  %87 = sub i64 %86, %80
  %88 = sub i64 %87, -2546758935292367010
  %89 = sub i64 0, %80
  %90 = sub i64 0, %81
  %91 = sub i64 %88, %90
  %92 = add i64 %88, %81
  %93 = sub i64 0, %81
  %94 = add i64 %80, %93
  %95 = sub i64 %80, %81
  %96 = mul i64 %94, %81
  %97 = add i64 0, -7279780798629996435
  %98 = sub i64 %97, %80
  %99 = sub i64 %98, -7279780798629996435
  %100 = sub i64 0, %80
  %101 = sub i64 %99, -8204879184139911436
  %102 = add i64 %101, %81
  %103 = add i64 %102, -8204879184139911436
  %104 = add i64 %99, %81
  %105 = sub i64 0, %81
  %106 = add i64 %80, %105
  %107 = sub i64 %80, %81
  %108 = mul i64 %106, %81
  %109 = sub i64 0, %80
  %110 = add i64 0, %109
  %111 = sub i64 0, %80
  %112 = sub i64 %110, -2990221094909255287
  %113 = add i64 %112, %81
  %114 = add i64 %113, -2990221094909255287
  %115 = add i64 %110, %81
  %116 = sub i64 0, -6448514120365847579
  %117 = sub i64 %116, %80
  %118 = add i64 %117, -6448514120365847579
  %119 = sub i64 0, %80
  %120 = sub i64 0, %118
  %121 = sub i64 0, %81
  %122 = add i64 %120, %121
  %123 = sub i64 0, %122
  %124 = add i64 %118, %81
  %125 = sub i64 0, %81
  %126 = add i64 %80, %125
  %127 = sub i64 %80, %81
  %128 = sub i64 0, -6598169275332191516
  %129 = sub i64 %128, %126
  %130 = add i64 %129, -6598169275332191516
  %131 = sub i64 0, %126
  %132 = sub i64 0, %130
  %133 = sub i64 0, 24
  %134 = add i64 %132, %133
  %135 = sub i64 0, %134
  %136 = add i64 %130, 24
  %137 = sub i64 0, %126
  %138 = add i64 0, %137
  %139 = sub i64 0, %126
  %140 = sub i64 0, %138
  %141 = sub i64 0, 24
  %142 = add i64 %140, %141
  %143 = sub i64 0, %142
  %144 = add i64 %138, 24
  %145 = sub i64 0, -7056362798831413053
  %146 = sub i64 %145, %126
  %147 = add i64 %146, -7056362798831413053
  %148 = sub i64 0, %126
  %149 = sub i64 %147, -1833571904314730008
  %150 = add i64 %149, 24
  %151 = add i64 %150, -1833571904314730008
  %152 = add i64 %147, 24
  %153 = shl i64 %126, 24
  %154 = sub i64 0, %126
  %155 = add i64 0, %154
  %156 = sub i64 0, %126
  %157 = sub i64 %155, 5919791313569344240
  %158 = add i64 %157, 24
  %159 = add i64 %158, 5919791313569344240
  %160 = add i64 %155, 24
  %161 = sub i64 0, 24
  %162 = add i64 %126, %161
  %163 = sub i64 %126, 24
  %164 = mul i64 %162, 24
  %165 = sdiv exact i64 %126, 24
  store i32 -1177368689, i32* %16
  br label %166

; <label>:166:                                    ; preds = %71, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE6cbeginEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.459
  %6 = load i32, i32* @y.460
  %7 = add i32 %5, -1173028342
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1173028342
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1536883010, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %89
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1536883010, label %19
    i32 1192490317, label %39
    i32 -1801725842, label %76
    i32 259054302, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %89

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1192490317, i32 259054302
  store i32 %38, i32* %15
  br label %89

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %41 = alloca %"class.std::vector.14"*, align 8
  %42 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %41, align 8
  %43 = load %"class.std::vector.14"*, %"class.std::vector.14"** %41, align 8
  %44 = bitcast %"class.std::vector.14"* %43 to %"struct.std::_Vector_base.15"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"class.std::vector.5"*, %"class.std::vector.5"** %46, align 8
  store %"class.std::vector.5"* %47, %"class.std::vector.5"** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator.24"* %40, %"class.std::vector.5"** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %40, i32 0, i32 0
  %49 = load %"class.std::vector.5"*, %"class.std::vector.5"** %48, align 8
  store %"class.std::vector.5"* %49, %"class.std::vector.5"** %2
  %50 = load i32, i32* @x.459
  %51 = load i32, i32* @y.460
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1801725842, i32 259054302
  store i32 %75, i32* %15
  br label %89

; <label>:76:                                     ; preds = %16
  %77 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %80 = alloca %"class.std::vector.14"*, align 8
  %81 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %80, align 8
  %82 = load %"class.std::vector.14"*, %"class.std::vector.14"** %80, align 8
  %83 = bitcast %"class.std::vector.14"* %82 to %"struct.std::_Vector_base.15"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load %"class.std::vector.5"*, %"class.std::vector.5"** %85, align 8
  store %"class.std::vector.5"* %86, %"class.std::vector.5"** %81, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator.24"* %79, %"class.std::vector.5"** dereferenceable(8) %81) #3
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %79, i32 0, i32 0
  %88 = load %"class.std::vector.5"*, %"class.std::vector.5"** %87, align 8
  store i32 1192490317, i32* %15
  br label %89

; <label>:89:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IlSaIlEESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_(%"class.std::vector.14"*, %"class.std::vector.5"*, i64, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.461
  %6 = load i32, i32* @y.462
  %7 = sub i32 %5, -1565258741
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1565258741
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %661

; <label>:19:                                     ; preds = %4, %661
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %21 = alloca %"class.std::vector.14"*, align 8
  %22 = alloca i64, align 8
  %23 = alloca %"class.std::vector.5"*, align 8
  %24 = alloca %"class.std::vector.5", align 8
  %25 = alloca i64, align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %27 = alloca %"class.std::vector.5"*, align 8
  %28 = alloca i8*
  %29 = alloca i32
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %33 = alloca %"class.std::vector.5"*, align 8
  %34 = alloca %"class.std::vector.5"*, align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %20, i32 0, i32 0
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %35, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %21, align 8
  store i64 %2, i64* %22, align 8
  store %"class.std::vector.5"* %3, %"class.std::vector.5"** %23, align 8
  %36 = load %"class.std::vector.14"*, %"class.std::vector.14"** %21, align 8
  %37 = load i64, i64* %22, align 8
  %38 = icmp ne i64 %37, 0
  %39 = load i32, i32* @x.461
  %40 = load i32, i32* @y.462
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %661

; <label>:64:                                     ; preds = %19
  br i1 %38, label %65, label %623

; <label>:65:                                     ; preds = %64
  %66 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %67, i32 0, i32 2
  %69 = load %"class.std::vector.5"*, %"class.std::vector.5"** %68, align 8
  %70 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %71, i32 0, i32 1
  %73 = load %"class.std::vector.5"*, %"class.std::vector.5"** %72, align 8
  %74 = ptrtoint %"class.std::vector.5"* %69 to i64
  %75 = ptrtoint %"class.std::vector.5"* %73 to i64
  %76 = add i64 %74, 6761836442087411452
  %77 = sub i64 %76, %75
  %78 = sub i64 %77, 6761836442087411452
  %79 = sub i64 %74, %75
  %80 = sdiv exact i64 %78, 24
  %81 = load i64, i64* %22, align 8
  %82 = icmp uge i64 %80, %81
  br i1 %82, label %83, label %365

; <label>:83:                                     ; preds = %65
  %84 = load %"class.std::vector.5"*, %"class.std::vector.5"** %23, align 8
  call void @_ZNSt6vectorIlSaIlEEC2ERKS1_(%"class.std::vector.5"* %24, %"class.std::vector.5"* dereferenceable(24) %84)
  %85 = call %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE3endEv(%"class.std::vector.14"* %36) #3
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %26, i32 0, i32 0
  store %"class.std::vector.5"* %85, %"class.std::vector.5"** %86, align 8
  %87 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %26, %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %20) #3
  store i64 %87, i64* %25, align 8
  %88 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %89, i32 0, i32 1
  %91 = load %"class.std::vector.5"*, %"class.std::vector.5"** %90, align 8
  store %"class.std::vector.5"* %91, %"class.std::vector.5"** %27, align 8
  %92 = load i64, i64* %25, align 8
  %93 = load i64, i64* %22, align 8
  %94 = icmp ugt i64 %92, %93
  br i1 %94, label %95, label %271

; <label>:95:                                     ; preds = %83
  %96 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %97 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %96, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %97, i32 0, i32 1
  %99 = load %"class.std::vector.5"*, %"class.std::vector.5"** %98, align 8
  %100 = load i64, i64* %22, align 8
  %101 = sub i64 0, %100
  %102 = add i64 0, %101
  %103 = sub i64 0, %100
  %104 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %99, i64 %102
  %105 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %106, i32 0, i32 1
  %108 = load %"class.std::vector.5"*, %"class.std::vector.5"** %107, align 8
  %109 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %110, i32 0, i32 1
  %112 = load %"class.std::vector.5"*, %"class.std::vector.5"** %111, align 8
  %113 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %114 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %113) #3
  %115 = invoke %"class.std::vector.5"* @_ZSt22__uninitialized_move_aIPSt6vectorIlSaIlEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.5"* %104, %"class.std::vector.5"* %108, %"class.std::vector.5"* %112, %"class.std::allocator.16"* dereferenceable(1) %114)
          to label %116 unwind label %225

; <label>:116:                                    ; preds = %95
  %117 = load i32, i32* @x.461
  %118 = load i32, i32* @y.462
  %119 = add i32 %117, 1605805988
  %120 = sub i32 %119, 1
  %121 = sub i32 %120, 1605805988
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 true, true
  %130 = and i1 %127, true
  %131 = and i1 %125, %129
  %132 = and i1 %128, true
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 true, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %681

; <label>:143:                                    ; preds = %116, %681
  %144 = load i64, i64* %22, align 8
  %145 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %146, i32 0, i32 1
  %148 = load %"class.std::vector.5"*, %"class.std::vector.5"** %147, align 8
  %149 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %148, i64 %144
  store %"class.std::vector.5"* %149, %"class.std::vector.5"** %147, align 8
  %150 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %20) #3
  %151 = load %"class.std::vector.5"*, %"class.std::vector.5"** %150, align 8
  %152 = load %"class.std::vector.5"*, %"class.std::vector.5"** %27, align 8
  %153 = load i64, i64* %22, align 8
  %154 = sub i64 0, 9179005038800230117
  %155 = sub i64 %154, %153
  %156 = add i64 %155, 9179005038800230117
  %157 = sub i64 0, %153
  %158 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %152, i64 %156
  %159 = load %"class.std::vector.5"*, %"class.std::vector.5"** %27, align 8
  %160 = load i32, i32* @x.461
  %161 = load i32, i32* @y.462
  %162 = sub i32 0, 1
  %163 = add i32 %160, %162
  %164 = sub i32 %160, 1
  %165 = mul i32 %160, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %161, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 false, true
  %172 = and i1 %169, false
  %173 = and i1 %167, %171
  %174 = and i1 %170, false
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 false, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  br i1 %183, label %185, label %681

; <label>:185:                                    ; preds = %143
  %186 = invoke %"class.std::vector.5"* @_ZSt13move_backwardIPSt6vectorIlSaIlEES3_ET0_T_S5_S4_(%"class.std::vector.5"* %151, %"class.std::vector.5"* %158, %"class.std::vector.5"* %159)
          to label %187 unwind label %225

; <label>:187:                                    ; preds = %185
  %188 = load i32, i32* @x.461
  %189 = load i32, i32* @y.462
  %190 = add i32 %188, 655562859
  %191 = sub i32 %190, 1
  %192 = sub i32 %191, 655562859
  %193 = sub i32 %188, 1
  %194 = mul i32 %188, %192
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %189, 10
  %198 = and i1 %196, %197
  %199 = xor i1 %196, %197
  %200 = or i1 %198, %199
  %201 = or i1 %196, %197
  br i1 %200, label %202, label %708

; <label>:202:                                    ; preds = %187, %708
  %203 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %20) #3
  %204 = load %"class.std::vector.5"*, %"class.std::vector.5"** %203, align 8
  %205 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %20) #3
  %206 = load %"class.std::vector.5"*, %"class.std::vector.5"** %205, align 8
  %207 = load i64, i64* %22, align 8
  %208 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %206, i64 %207
  %209 = load i32, i32* @x.461
  %210 = load i32, i32* @y.462
  %211 = sub i32 %209, 1226383308
  %212 = sub i32 %211, 1
  %213 = add i32 %212, 1226383308
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = and i1 %217, %218
  %220 = xor i1 %217, %218
  %221 = or i1 %219, %220
  %222 = or i1 %217, %218
  br i1 %221, label %223, label %708

; <label>:223:                                    ; preds = %202
  invoke void @_ZSt4fillIPSt6vectorIlSaIlEES2_EvT_S4_RKT0_(%"class.std::vector.5"* %204, %"class.std::vector.5"* %208, %"class.std::vector.5"* dereferenceable(24) %24)
          to label %224 unwind label %225

; <label>:224:                                    ; preds = %223
  br label %364

; <label>:225:                                    ; preds = %299, %285, %271, %223, %185, %95
  %226 = load i32, i32* @x.461
  %227 = load i32, i32* @y.462
  %228 = add i32 %226, -888374892
  %229 = sub i32 %228, 1
  %230 = sub i32 %229, -888374892
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = xor i1 %234, true
  %237 = xor i1 %235, true
  %238 = xor i1 false, true
  %239 = and i1 %236, false
  %240 = and i1 %234, %238
  %241 = and i1 %237, false
  %242 = and i1 %235, %238
  %243 = or i1 %239, %240
  %244 = or i1 %241, %242
  %245 = xor i1 %243, %244
  %246 = or i1 %236, %237
  %247 = xor i1 %246, true
  %248 = or i1 false, %238
  %249 = and i1 %247, %248
  %250 = or i1 %245, %249
  %251 = or i1 %234, %235
  br i1 %250, label %252, label %715

; <label>:252:                                    ; preds = %225, %715
  %253 = landingpad { i8*, i32 }
          cleanup
  %254 = extractvalue { i8*, i32 } %253, 0
  store i8* %254, i8** %28, align 8
  %255 = extractvalue { i8*, i32 } %253, 1
  store i32 %255, i32* %29, align 4
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %24) #3
  %256 = load i32, i32* @x.461
  %257 = load i32, i32* @y.462
  %258 = add i32 %256, -1910425188
  %259 = sub i32 %258, 1
  %260 = sub i32 %259, -1910425188
  %261 = sub i32 %256, 1
  %262 = mul i32 %256, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %257, 10
  %266 = and i1 %264, %265
  %267 = xor i1 %264, %265
  %268 = or i1 %266, %267
  %269 = or i1 %264, %265
  br i1 %268, label %270, label %715

; <label>:270:                                    ; preds = %252
  br label %624

; <label>:271:                                    ; preds = %83
  %272 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %273 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %272, i32 0, i32 0
  %274 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %273, i32 0, i32 1
  %275 = load %"class.std::vector.5"*, %"class.std::vector.5"** %274, align 8
  %276 = load i64, i64* %22, align 8
  %277 = load i64, i64* %25, align 8
  %278 = sub i64 %276, -7361131013068099863
  %279 = sub i64 %278, %277
  %280 = add i64 %279, -7361131013068099863
  %281 = sub i64 %276, %277
  %282 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %283 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %282) #3
  %284 = invoke %"class.std::vector.5"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIlSaIlEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.5"* %275, i64 %280, %"class.std::vector.5"* dereferenceable(24) %24, %"class.std::allocator.16"* dereferenceable(1) %283)
          to label %285 unwind label %225

; <label>:285:                                    ; preds = %271
  %286 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %287 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %286, i32 0, i32 0
  %288 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %287, i32 0, i32 1
  store %"class.std::vector.5"* %284, %"class.std::vector.5"** %288, align 8
  %289 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %20) #3
  %290 = load %"class.std::vector.5"*, %"class.std::vector.5"** %289, align 8
  %291 = load %"class.std::vector.5"*, %"class.std::vector.5"** %27, align 8
  %292 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %293 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %292, i32 0, i32 0
  %294 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %293, i32 0, i32 1
  %295 = load %"class.std::vector.5"*, %"class.std::vector.5"** %294, align 8
  %296 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %297 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %296) #3
  %298 = invoke %"class.std::vector.5"* @_ZSt22__uninitialized_move_aIPSt6vectorIlSaIlEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.5"* %290, %"class.std::vector.5"* %291, %"class.std::vector.5"* %295, %"class.std::allocator.16"* dereferenceable(1) %297)
          to label %299 unwind label %225

; <label>:299:                                    ; preds = %285
  %300 = load i64, i64* %25, align 8
  %301 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %302 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %301, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %302, i32 0, i32 1
  %304 = load %"class.std::vector.5"*, %"class.std::vector.5"** %303, align 8
  %305 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %304, i64 %300
  store %"class.std::vector.5"* %305, %"class.std::vector.5"** %303, align 8
  %306 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %20) #3
  %307 = load %"class.std::vector.5"*, %"class.std::vector.5"** %306, align 8
  %308 = load %"class.std::vector.5"*, %"class.std::vector.5"** %27, align 8
  invoke void @_ZSt4fillIPSt6vectorIlSaIlEES2_EvT_S4_RKT0_(%"class.std::vector.5"* %307, %"class.std::vector.5"* %308, %"class.std::vector.5"* dereferenceable(24) %24)
          to label %309 unwind label %225

; <label>:309:                                    ; preds = %299
  %310 = load i32, i32* @x.461
  %311 = load i32, i32* @y.462
  %312 = add i32 %310, -907115468
  %313 = sub i32 %312, 1
  %314 = sub i32 %313, -907115468
  %315 = sub i32 %310, 1
  %316 = mul i32 %310, %314
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %311, 10
  %320 = xor i1 %318, true
  %321 = xor i1 %319, true
  %322 = xor i1 true, true
  %323 = and i1 %320, true
  %324 = and i1 %318, %322
  %325 = and i1 %321, true
  %326 = and i1 %319, %322
  %327 = or i1 %323, %324
  %328 = or i1 %325, %326
  %329 = xor i1 %327, %328
  %330 = or i1 %320, %321
  %331 = xor i1 %330, true
  %332 = or i1 true, %322
  %333 = and i1 %331, %332
  %334 = or i1 %329, %333
  %335 = or i1 %318, %319
  br i1 %334, label %336, label %719

; <label>:336:                                    ; preds = %309, %719
  %337 = load i32, i32* @x.461
  %338 = load i32, i32* @y.462
  %339 = add i32 %337, -1766594467
  %340 = sub i32 %339, 1
  %341 = sub i32 %340, -1766594467
  %342 = sub i32 %337, 1
  %343 = mul i32 %337, %341
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %338, 10
  %347 = xor i1 %345, true
  %348 = xor i1 %346, true
  %349 = xor i1 false, true
  %350 = and i1 %347, false
  %351 = and i1 %345, %349
  %352 = and i1 %348, false
  %353 = and i1 %346, %349
  %354 = or i1 %350, %351
  %355 = or i1 %352, %353
  %356 = xor i1 %354, %355
  %357 = or i1 %347, %348
  %358 = xor i1 %357, true
  %359 = or i1 false, %349
  %360 = and i1 %358, %359
  %361 = or i1 %356, %360
  %362 = or i1 %345, %346
  br i1 %361, label %363, label %719

; <label>:363:                                    ; preds = %336
  br label %364

; <label>:364:                                    ; preds = %363, %224
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %24) #3
  br label %622

; <label>:365:                                    ; preds = %65
  %366 = load i32, i32* @x.461
  %367 = load i32, i32* @y.462
  %368 = add i32 %366, -1127841952
  %369 = sub i32 %368, 1
  %370 = sub i32 %369, -1127841952
  %371 = sub i32 %366, 1
  %372 = mul i32 %366, %370
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %367, 10
  %376 = xor i1 %374, true
  %377 = xor i1 %375, true
  %378 = xor i1 false, true
  %379 = and i1 %376, false
  %380 = and i1 %374, %378
  %381 = and i1 %377, false
  %382 = and i1 %375, %378
  %383 = or i1 %379, %380
  %384 = or i1 %381, %382
  %385 = xor i1 %383, %384
  %386 = or i1 %376, %377
  %387 = xor i1 %386, true
  %388 = or i1 false, %378
  %389 = and i1 %387, %388
  %390 = or i1 %385, %389
  %391 = or i1 %374, %375
  br i1 %390, label %392, label %720

; <label>:392:                                    ; preds = %365, %720
  %393 = load i64, i64* %22, align 8
  %394 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.14"* %36, i64 %393, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0))
  store i64 %394, i64* %30, align 8
  %395 = call %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE5beginEv(%"class.std::vector.14"* %36) #3
  %396 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %32, i32 0, i32 0
  store %"class.std::vector.5"* %395, %"class.std::vector.5"** %396, align 8
  %397 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %20, %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %32) #3
  store i64 %397, i64* %31, align 8
  %398 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %399 = load i64, i64* %30, align 8
  %400 = call %"class.std::vector.5"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.15"* %398, i64 %399)
  store %"class.std::vector.5"* %400, %"class.std::vector.5"** %33, align 8
  %401 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  store %"class.std::vector.5"* %401, %"class.std::vector.5"** %34, align 8
  %402 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %403 = load i64, i64* %31, align 8
  %404 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %402, i64 %403
  %405 = load i64, i64* %22, align 8
  %406 = load %"class.std::vector.5"*, %"class.std::vector.5"** %23, align 8
  %407 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %408 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %407) #3
  %409 = load i32, i32* @x.461
  %410 = load i32, i32* @y.462
  %411 = sub i32 %409, -1133536392
  %412 = sub i32 %411, 1
  %413 = add i32 %412, -1133536392
  %414 = sub i32 %409, 1
  %415 = mul i32 %409, %413
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %410, 10
  %419 = and i1 %417, %418
  %420 = xor i1 %417, %418
  %421 = or i1 %419, %420
  %422 = or i1 %417, %418
  br i1 %421, label %423, label %720

; <label>:423:                                    ; preds = %392
  %424 = invoke %"class.std::vector.5"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIlSaIlEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.5"* %404, i64 %405, %"class.std::vector.5"* dereferenceable(24) %406, %"class.std::allocator.16"* dereferenceable(1) %408)
          to label %425 unwind label %451

; <label>:425:                                    ; preds = %423
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %34, align 8
  %426 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %427 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %426, i32 0, i32 0
  %428 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %427, i32 0, i32 0
  %429 = load %"class.std::vector.5"*, %"class.std::vector.5"** %428, align 8
  %430 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %20) #3
  %431 = load %"class.std::vector.5"*, %"class.std::vector.5"** %430, align 8
  %432 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %433 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %434 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %433) #3
  %435 = invoke %"class.std::vector.5"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIlSaIlEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.5"* %429, %"class.std::vector.5"* %431, %"class.std::vector.5"* %432, %"class.std::allocator.16"* dereferenceable(1) %434)
          to label %436 unwind label %451

; <label>:436:                                    ; preds = %425
  store %"class.std::vector.5"* %435, %"class.std::vector.5"** %34, align 8
  %437 = load i64, i64* %22, align 8
  %438 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  %439 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %438, i64 %437
  store %"class.std::vector.5"* %439, %"class.std::vector.5"** %34, align 8
  %440 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %20) #3
  %441 = load %"class.std::vector.5"*, %"class.std::vector.5"** %440, align 8
  %442 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %443 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %442, i32 0, i32 0
  %444 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %443, i32 0, i32 1
  %445 = load %"class.std::vector.5"*, %"class.std::vector.5"** %444, align 8
  %446 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  %447 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %448 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %447) #3
  %449 = invoke %"class.std::vector.5"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIlSaIlEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.5"* %441, %"class.std::vector.5"* %445, %"class.std::vector.5"* %446, %"class.std::allocator.16"* dereferenceable(1) %448)
          to label %450 unwind label %451

; <label>:450:                                    ; preds = %436
  store %"class.std::vector.5"* %449, %"class.std::vector.5"** %34, align 8
  br label %578

; <label>:451:                                    ; preds = %436, %425, %423
  %452 = load i32, i32* @x.461
  %453 = load i32, i32* @y.462
  %454 = sub i32 %452, -1194015686
  %455 = sub i32 %454, 1
  %456 = add i32 %455, -1194015686
  %457 = sub i32 %452, 1
  %458 = mul i32 %452, %456
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %453, 10
  %462 = and i1 %460, %461
  %463 = xor i1 %460, %461
  %464 = or i1 %462, %463
  %465 = or i1 %460, %461
  br i1 %464, label %466, label %737

; <label>:466:                                    ; preds = %451, %737
  %467 = landingpad { i8*, i32 }
          catch i8* null
  %468 = extractvalue { i8*, i32 } %467, 0
  store i8* %468, i8** %28, align 8
  %469 = extractvalue { i8*, i32 } %467, 1
  store i32 %469, i32* %29, align 4
  %470 = load i32, i32* @x.461
  %471 = load i32, i32* @y.462
  %472 = sub i32 %470, -1419971231
  %473 = sub i32 %472, 1
  %474 = add i32 %473, -1419971231
  %475 = sub i32 %470, 1
  %476 = mul i32 %470, %474
  %477 = urem i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %471, 10
  %480 = and i1 %478, %479
  %481 = xor i1 %478, %479
  %482 = or i1 %480, %481
  %483 = or i1 %478, %479
  br i1 %482, label %484, label %737

; <label>:484:                                    ; preds = %466
  br label %485

; <label>:485:                                    ; preds = %484
  %486 = load i8*, i8** %28, align 8
  %487 = call i8* @__cxa_begin_catch(i8* %486) #3
  %488 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  %489 = icmp ne %"class.std::vector.5"* %488, null
  br i1 %489, label %536, label %490

; <label>:490:                                    ; preds = %485
  %491 = load i32, i32* @x.461
  %492 = load i32, i32* @y.462
  %493 = sub i32 %491, 654026637
  %494 = sub i32 %493, 1
  %495 = add i32 %494, 654026637
  %496 = sub i32 %491, 1
  %497 = mul i32 %491, %495
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %492, 10
  %501 = and i1 %499, %500
  %502 = xor i1 %499, %500
  %503 = or i1 %501, %502
  %504 = or i1 %499, %500
  br i1 %503, label %505, label %741

; <label>:505:                                    ; preds = %490, %741
  %506 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %507 = load i64, i64* %31, align 8
  %508 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %506, i64 %507
  %509 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %510 = load i64, i64* %31, align 8
  %511 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %509, i64 %510
  %512 = load i64, i64* %22, align 8
  %513 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %511, i64 %512
  %514 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %515 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %514) #3
  %516 = load i32, i32* @x.461
  %517 = load i32, i32* @y.462
  %518 = sub i32 %516, -1932176769
  %519 = sub i32 %518, 1
  %520 = add i32 %519, -1932176769
  %521 = sub i32 %516, 1
  %522 = mul i32 %516, %520
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %517, 10
  %526 = and i1 %524, %525
  %527 = xor i1 %524, %525
  %528 = or i1 %526, %527
  %529 = or i1 %524, %525
  br i1 %528, label %530, label %741

; <label>:530:                                    ; preds = %505
  invoke void @_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E(%"class.std::vector.5"* %508, %"class.std::vector.5"* %513, %"class.std::allocator.16"* dereferenceable(1) %515)
          to label %531 unwind label %532

; <label>:531:                                    ; preds = %530
  br label %572

; <label>:532:                                    ; preds = %576, %572, %570, %530
  %533 = landingpad { i8*, i32 }
          cleanup
  %534 = extractvalue { i8*, i32 } %533, 0
  store i8* %534, i8** %28, align 8
  %535 = extractvalue { i8*, i32 } %533, 1
  store i32 %535, i32* %29, align 4
  invoke void @__cxa_end_catch()
          to label %577 unwind label %629

; <label>:536:                                    ; preds = %485
  %537 = load i32, i32* @x.461
  %538 = load i32, i32* @y.462
  %539 = add i32 %537, 1659440795
  %540 = sub i32 %539, 1
  %541 = sub i32 %540, 1659440795
  %542 = sub i32 %537, 1
  %543 = mul i32 %537, %541
  %544 = urem i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = icmp slt i32 %538, 10
  %547 = and i1 %545, %546
  %548 = xor i1 %545, %546
  %549 = or i1 %547, %548
  %550 = or i1 %545, %546
  br i1 %549, label %551, label %752

; <label>:551:                                    ; preds = %536, %752
  %552 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %553 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  %554 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %555 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %554) #3
  %556 = load i32, i32* @x.461
  %557 = load i32, i32* @y.462
  %558 = add i32 %556, -2107376689
  %559 = sub i32 %558, 1
  %560 = sub i32 %559, -2107376689
  %561 = sub i32 %556, 1
  %562 = mul i32 %556, %560
  %563 = urem i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = icmp slt i32 %557, 10
  %566 = and i1 %564, %565
  %567 = xor i1 %564, %565
  %568 = or i1 %566, %567
  %569 = or i1 %564, %565
  br i1 %568, label %570, label %752

; <label>:570:                                    ; preds = %551
  invoke void @_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E(%"class.std::vector.5"* %552, %"class.std::vector.5"* %553, %"class.std::allocator.16"* dereferenceable(1) %555)
          to label %571 unwind label %532

; <label>:571:                                    ; preds = %570
  br label %572

; <label>:572:                                    ; preds = %571, %531
  %573 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %574 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %575 = load i64, i64* %30, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.15"* %573, %"class.std::vector.5"* %574, i64 %575)
          to label %576 unwind label %532

; <label>:576:                                    ; preds = %572
  invoke void @__cxa_rethrow() #12
          to label %660 unwind label %532

; <label>:577:                                    ; preds = %532
  br label %624

; <label>:578:                                    ; preds = %450
  %579 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %580 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %579, i32 0, i32 0
  %581 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %580, i32 0, i32 0
  %582 = load %"class.std::vector.5"*, %"class.std::vector.5"** %581, align 8
  %583 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %584 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %583, i32 0, i32 0
  %585 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %584, i32 0, i32 1
  %586 = load %"class.std::vector.5"*, %"class.std::vector.5"** %585, align 8
  %587 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %588 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %587) #3
  call void @_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E(%"class.std::vector.5"* %582, %"class.std::vector.5"* %586, %"class.std::allocator.16"* dereferenceable(1) %588)
  %589 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %590 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %591 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %590, i32 0, i32 0
  %592 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %591, i32 0, i32 0
  %593 = load %"class.std::vector.5"*, %"class.std::vector.5"** %592, align 8
  %594 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %595 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %594, i32 0, i32 0
  %596 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %595, i32 0, i32 2
  %597 = load %"class.std::vector.5"*, %"class.std::vector.5"** %596, align 8
  %598 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %599 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %598, i32 0, i32 0
  %600 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %599, i32 0, i32 0
  %601 = load %"class.std::vector.5"*, %"class.std::vector.5"** %600, align 8
  %602 = ptrtoint %"class.std::vector.5"* %597 to i64
  %603 = ptrtoint %"class.std::vector.5"* %601 to i64
  %604 = sub i64 0, %603
  %605 = add i64 %602, %604
  %606 = sub i64 %602, %603
  %607 = sdiv exact i64 %605, 24
  call void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.15"* %589, %"class.std::vector.5"* %593, i64 %607)
  %608 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %609 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %610 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %609, i32 0, i32 0
  %611 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %610, i32 0, i32 0
  store %"class.std::vector.5"* %608, %"class.std::vector.5"** %611, align 8
  %612 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  %613 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %614 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %613, i32 0, i32 0
  %615 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %614, i32 0, i32 1
  store %"class.std::vector.5"* %612, %"class.std::vector.5"** %615, align 8
  %616 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %617 = load i64, i64* %30, align 8
  %618 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %616, i64 %617
  %619 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %620 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %619, i32 0, i32 0
  %621 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %620, i32 0, i32 2
  store %"class.std::vector.5"* %618, %"class.std::vector.5"** %621, align 8
  br label %622

; <label>:622:                                    ; preds = %578, %364
  br label %623

; <label>:623:                                    ; preds = %622, %64
  ret void

; <label>:624:                                    ; preds = %577, %270
  %625 = load i8*, i8** %28, align 8
  %626 = load i32, i32* %29, align 4
  %627 = insertvalue { i8*, i32 } undef, i8* %625, 0
  %628 = insertvalue { i8*, i32 } %627, i32 %626, 1
  resume { i8*, i32 } %628

; <label>:629:                                    ; preds = %532
  %630 = load i32, i32* @x.461
  %631 = load i32, i32* @y.462
  %632 = sub i32 0, 1
  %633 = add i32 %630, %632
  %634 = sub i32 %630, 1
  %635 = mul i32 %630, %633
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %631, 10
  %639 = and i1 %637, %638
  %640 = xor i1 %637, %638
  %641 = or i1 %639, %640
  %642 = or i1 %637, %638
  br i1 %641, label %643, label %757

; <label>:643:                                    ; preds = %629, %757
  %644 = landingpad { i8*, i32 }
          catch i8* null
  %645 = extractvalue { i8*, i32 } %644, 0
  call void @__clang_call_terminate(i8* %645) #7
  %646 = load i32, i32* @x.461
  %647 = load i32, i32* @y.462
  %648 = sub i32 0, 1
  %649 = add i32 %646, %648
  %650 = sub i32 %646, 1
  %651 = mul i32 %646, %649
  %652 = urem i32 %651, 2
  %653 = icmp eq i32 %652, 0
  %654 = icmp slt i32 %647, 10
  %655 = and i1 %653, %654
  %656 = xor i1 %653, %654
  %657 = or i1 %655, %656
  %658 = or i1 %653, %654
  br i1 %657, label %659, label %757

; <label>:659:                                    ; preds = %643
  unreachable

; <label>:660:                                    ; preds = %576
  unreachable

; <label>:661:                                    ; preds = %19, %4
  %662 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %663 = alloca %"class.std::vector.14"*, align 8
  %664 = alloca i64, align 8
  %665 = alloca %"class.std::vector.5"*, align 8
  %666 = alloca %"class.std::vector.5", align 8
  %667 = alloca i64, align 8
  %668 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %669 = alloca %"class.std::vector.5"*, align 8
  %670 = alloca i8*
  %671 = alloca i32
  %672 = alloca i64, align 8
  %673 = alloca i64, align 8
  %674 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %675 = alloca %"class.std::vector.5"*, align 8
  %676 = alloca %"class.std::vector.5"*, align 8
  %677 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %662, i32 0, i32 0
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %677, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %663, align 8
  store i64 %2, i64* %664, align 8
  store %"class.std::vector.5"* %3, %"class.std::vector.5"** %665, align 8
  %678 = load %"class.std::vector.14"*, %"class.std::vector.14"** %663, align 8
  %679 = load i64, i64* %664, align 8
  %680 = icmp ne i64 %679, 0
  br label %19

; <label>:681:                                    ; preds = %143, %116
  %682 = load i64, i64* %22, align 8
  %683 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %684 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %683, i32 0, i32 0
  %685 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %684, i32 0, i32 1
  %686 = load %"class.std::vector.5"*, %"class.std::vector.5"** %685, align 8
  %687 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %686, i64 %682
  store %"class.std::vector.5"* %687, %"class.std::vector.5"** %685, align 8
  %688 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %20) #3
  %689 = load %"class.std::vector.5"*, %"class.std::vector.5"** %688, align 8
  %690 = load %"class.std::vector.5"*, %"class.std::vector.5"** %27, align 8
  %691 = load i64, i64* %22, align 8
  %692 = sub i64 0, 5302137771098110139
  %693 = sub i64 %692, 0
  %694 = add i64 %693, 5302137771098110139
  %695 = sub i64 0, 0
  %696 = sub i64 0, %691
  %697 = sub i64 %694, %696
  %698 = add i64 %694, %691
  %699 = sub i64 0, %691
  %700 = add i64 0, %699
  %701 = sub i64 0, %691
  %702 = mul i64 %700, %691
  %703 = sub i64 0, %691
  %704 = add i64 0, %703
  %705 = sub i64 0, %691
  %706 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %690, i64 %704
  %707 = load %"class.std::vector.5"*, %"class.std::vector.5"** %27, align 8
  br label %143

; <label>:708:                                    ; preds = %202, %187
  %709 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %20) #3
  %710 = load %"class.std::vector.5"*, %"class.std::vector.5"** %709, align 8
  %711 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %20) #3
  %712 = load %"class.std::vector.5"*, %"class.std::vector.5"** %711, align 8
  %713 = load i64, i64* %22, align 8
  %714 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %712, i64 %713
  br label %202

; <label>:715:                                    ; preds = %252, %225
  %716 = landingpad { i8*, i32 }
          cleanup
  %717 = extractvalue { i8*, i32 } %716, 0
  store i8* %717, i8** %28, align 8
  %718 = extractvalue { i8*, i32 } %716, 1
  store i32 %718, i32* %29, align 4
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %24) #3
  br label %252

; <label>:719:                                    ; preds = %336, %309
  br label %336

; <label>:720:                                    ; preds = %392, %365
  %721 = load i64, i64* %22, align 8
  %722 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.14"* %36, i64 %721, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0))
  store i64 %722, i64* %30, align 8
  %723 = call %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE5beginEv(%"class.std::vector.14"* %36) #3
  %724 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %32, i32 0, i32 0
  store %"class.std::vector.5"* %723, %"class.std::vector.5"** %724, align 8
  %725 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %20, %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %32) #3
  store i64 %725, i64* %31, align 8
  %726 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %727 = load i64, i64* %30, align 8
  %728 = call %"class.std::vector.5"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.15"* %726, i64 %727)
  store %"class.std::vector.5"* %728, %"class.std::vector.5"** %33, align 8
  %729 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  store %"class.std::vector.5"* %729, %"class.std::vector.5"** %34, align 8
  %730 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %731 = load i64, i64* %31, align 8
  %732 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %730, i64 %731
  %733 = load i64, i64* %22, align 8
  %734 = load %"class.std::vector.5"*, %"class.std::vector.5"** %23, align 8
  %735 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %736 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %735) #3
  br label %392

; <label>:737:                                    ; preds = %466, %451
  %738 = landingpad { i8*, i32 }
          catch i8* null
  %739 = extractvalue { i8*, i32 } %738, 0
  store i8* %739, i8** %28, align 8
  %740 = extractvalue { i8*, i32 } %738, 1
  store i32 %740, i32* %29, align 4
  br label %466

; <label>:741:                                    ; preds = %505, %490
  %742 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %743 = load i64, i64* %31, align 8
  %744 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %742, i64 %743
  %745 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %746 = load i64, i64* %31, align 8
  %747 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %745, i64 %746
  %748 = load i64, i64* %22, align 8
  %749 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %747, i64 %748
  %750 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %751 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %750) #3
  br label %505

; <label>:752:                                    ; preds = %551, %536
  %753 = load %"class.std::vector.5"*, %"class.std::vector.5"** %33, align 8
  %754 = load %"class.std::vector.5"*, %"class.std::vector.5"** %34, align 8
  %755 = bitcast %"class.std::vector.14"* %36 to %"struct.std::_Vector_base.15"*
  %756 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %755) #3
  br label %551

; <label>:757:                                    ; preds = %643, %629
  %758 = landingpad { i8*, i32 }
          catch i8* null
  %759 = extractvalue { i8*, i32 } %758, 0
  call void @__clang_call_terminate(i8* %759) #7
  br label %643
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt6vectorIS_IlSaIlEESaIS1_EE5beginEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %3 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  %4 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %5 = bitcast %"class.std::vector.14"* %4 to %"struct.std::_Vector_base.15"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.23"* %2, %"class.std::vector.5"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  ret %"class.std::vector.5"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEplEl(%"class.__gnu_cxx::__normal_iterator.23"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %0, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %9, i64 %10
  store %"class.std::vector.5"* %11, %"class.std::vector.5"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.23"* %3, %"class.std::vector.5"** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %3, i32 0, i32 0
  %13 = load %"class.std::vector.5"*, %"class.std::vector.5"** %12, align 8
  ret %"class.std::vector.5"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %3, i32 0, i32 0
  ret %"class.std::vector.5"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator.24"*, %"class.std::vector.5"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %4 = alloca %"class.std::vector.5"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  store %"class.std::vector.5"** %1, %"class.std::vector.5"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.5"**, %"class.std::vector.5"*** %4, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  store %"class.std::vector.5"* %8, %"class.std::vector.5"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEEC2ERKS1_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca %"class.std::allocator.7", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %11 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %12 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %12) #3
  %14 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %15 = bitcast %"class.std::vector.5"* %14 to %"struct.std::_Vector_base.6"*
  %16 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIlEE17_S_select_on_copyERKS1_(%"class.std::allocator.7"* sret %5, %"class.std::allocator.7"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIlSaIlEEC2EmRKS0_(%"struct.std::_Vector_base.6"* %11, i64 %13, %"class.std::allocator.7"* dereferenceable(1) %5)
          to label %17 unwind label %135

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.471
  %19 = load i32, i32* @y.472
  %20 = add i32 %18, 1187852612
  %21 = sub i32 %20, 1
  %22 = sub i32 %21, 1187852612
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %149

; <label>:32:                                     ; preds = %17, %149
  call void @_ZNSaIlED2Ev(%"class.std::allocator.7"* %5) #3
  %33 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %34 = call i64* @_ZNKSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"* %33) #3
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %8, i32 0, i32 0
  store i64* %34, i64** %35, align 8
  %36 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %37 = call i64* @_ZNKSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"* %36) #3
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  store i64* %37, i64** %38, align 8
  %39 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %44 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %43) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %8, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = load i32, i32* @x.471
  %50 = load i32, i32* @y.472
  %51 = add i32 %49, -2044354396
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -2044354396
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %149

; <label>:75:                                     ; preds = %32
  %76 = invoke i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPllET0_T_SA_S9_RSaIT1_E(i64* %46, i64* %48, i64* %42, %"class.std::allocator.7"* dereferenceable(1) %44)
          to label %77 unwind label %139

; <label>:77:                                     ; preds = %75
  %78 = load i32, i32* @x.471
  %79 = load i32, i32* @y.472
  %80 = sub i32 %78, 482739331
  %81 = sub i32 %80, 1
  %82 = add i32 %81, 482739331
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %166

; <label>:104:                                    ; preds = %77, %166
  %105 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %106, i32 0, i32 1
  store i64* %76, i64** %107, align 8
  %108 = load i32, i32* @x.471
  %109 = load i32, i32* @y.472
  %110 = add i32 %108, -823104140
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, -823104140
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 false, true
  %121 = and i1 %118, false
  %122 = and i1 %116, %120
  %123 = and i1 %119, false
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 false, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  br i1 %132, label %134, label %166

; <label>:134:                                    ; preds = %104
  ret void

; <label>:135:                                    ; preds = %2
  %136 = landingpad { i8*, i32 }
          cleanup
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %6, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %7, align 4
  call void @_ZNSaIlED2Ev(%"class.std::allocator.7"* %5) #3
  br label %144

; <label>:139:                                    ; preds = %75
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %6, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %7, align 4
  %143 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIlSaIlEED2Ev(%"struct.std::_Vector_base.6"* %143) #3
  br label %144

; <label>:144:                                    ; preds = %139, %135
  %145 = load i8*, i8** %6, align 8
  %146 = load i32, i32* %7, align 4
  %147 = insertvalue { i8*, i32 } undef, i8* %145, 0
  %148 = insertvalue { i8*, i32 } %147, i32 %146, 1
  resume { i8*, i32 } %148

; <label>:149:                                    ; preds = %32, %17
  call void @_ZNSaIlED2Ev(%"class.std::allocator.7"* %5) #3
  %150 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %151 = call i64* @_ZNKSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"* %150) #3
  %152 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %8, i32 0, i32 0
  store i64* %151, i64** %152, align 8
  %153 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %154 = call i64* @_ZNKSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"* %153) #3
  %155 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  store i64* %154, i64** %155, align 8
  %156 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %157 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %156, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %157, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %161 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %160) #3
  %162 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %8, i32 0, i32 0
  %163 = load i64*, i64** %162, align 8
  %164 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  %165 = load i64*, i64** %164, align 8
  br label %32

; <label>:166:                                    ; preds = %104, %77
  %167 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %168 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %167, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %168, i32 0, i32 1
  store i64* %76, i64** %169, align 8
  br label %104
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %0, %"class.__gnu_cxx::__normal_iterator.23"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %1, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %8) #3
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %9, align 8
  %11 = ptrtoint %"class.std::vector.5"* %7 to i64
  %12 = ptrtoint %"class.std::vector.5"* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 24
  ret i64 %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt22__uninitialized_move_aIPSt6vectorIlSaIlEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca %"class.std::allocator.16"*, align 8
  %9 = alloca %"class.std::move_iterator.26", align 8
  %10 = alloca %"class.std::move_iterator.26", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %5, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %6, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %7, align 8
  store %"class.std::allocator.16"* %3, %"class.std::allocator.16"** %8, align 8
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %12 = call %"class.std::vector.5"* @_ZSt18make_move_iteratorIPSt6vectorIlSaIlEEESt13move_iteratorIT_ES5_(%"class.std::vector.5"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  store %"class.std::vector.5"* %12, %"class.std::vector.5"** %13, align 8
  %14 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %15 = call %"class.std::vector.5"* @_ZSt18make_move_iteratorIPSt6vectorIlSaIlEEESt13move_iteratorIT_ES5_(%"class.std::vector.5"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %10, i32 0, i32 0
  store %"class.std::vector.5"* %15, %"class.std::vector.5"** %16, align 8
  %17 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %18 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.5"*, %"class.std::vector.5"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.5"*, %"class.std::vector.5"** %21, align 8
  %23 = call %"class.std::vector.5"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIlSaIlEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.5"* %20, %"class.std::vector.5"* %22, %"class.std::vector.5"* %17, %"class.std::allocator.16"* dereferenceable(1) %18)
  ret %"class.std::vector.5"* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %2, align 8
  %3 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %4 to %"class.std::allocator.16"*
  ret %"class.std::allocator.16"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt13move_backwardIPSt6vectorIlSaIlEES3_ET0_T_S5_S4_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*) #0 comdat {
  %4 = alloca %"class.std::vector.5"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.479
  %8 = load i32, i32* @y.480
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -602018757, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -602018757, label %20
    i32 1859280173, label %28
    i32 -1952512699, label %65
    i32 1367141592, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1859280173, i32 1367141592
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.5"*, align 8
  %30 = alloca %"class.std::vector.5"*, align 8
  %31 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %29, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %30, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %31, align 8
  %32 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %33 = call %"class.std::vector.5"* @_ZSt12__miter_baseIPSt6vectorIlSaIlEEENSt11_Miter_baseIT_E13iterator_typeES5_(%"class.std::vector.5"* %32)
  %34 = load %"class.std::vector.5"*, %"class.std::vector.5"** %30, align 8
  %35 = call %"class.std::vector.5"* @_ZSt12__miter_baseIPSt6vectorIlSaIlEEENSt11_Miter_baseIT_E13iterator_typeES5_(%"class.std::vector.5"* %34)
  %36 = load %"class.std::vector.5"*, %"class.std::vector.5"** %31, align 8
  %37 = call %"class.std::vector.5"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIlSaIlEES3_ET1_T0_S5_S4_(%"class.std::vector.5"* %33, %"class.std::vector.5"* %35, %"class.std::vector.5"* %36)
  store %"class.std::vector.5"* %37, %"class.std::vector.5"** %4
  %38 = load i32, i32* @x.479
  %39 = load i32, i32* @y.480
  %40 = sub i32 %38, -1817813014
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1817813014
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1952512699, i32 1367141592
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %4
  ret %"class.std::vector.5"* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::vector.5"*, align 8
  %69 = alloca %"class.std::vector.5"*, align 8
  %70 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %68, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %69, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %70, align 8
  %71 = load %"class.std::vector.5"*, %"class.std::vector.5"** %68, align 8
  %72 = call %"class.std::vector.5"* @_ZSt12__miter_baseIPSt6vectorIlSaIlEEENSt11_Miter_baseIT_E13iterator_typeES5_(%"class.std::vector.5"* %71)
  %73 = load %"class.std::vector.5"*, %"class.std::vector.5"** %69, align 8
  %74 = call %"class.std::vector.5"* @_ZSt12__miter_baseIPSt6vectorIlSaIlEEENSt11_Miter_baseIT_E13iterator_typeES5_(%"class.std::vector.5"* %73)
  %75 = load %"class.std::vector.5"*, %"class.std::vector.5"** %70, align 8
  %76 = call %"class.std::vector.5"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIlSaIlEES3_ET1_T0_S5_S4_(%"class.std::vector.5"* %72, %"class.std::vector.5"* %74, %"class.std::vector.5"* %75)
  store i32 1859280173, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.5"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %0, %"class.__gnu_cxx::__normal_iterator.23"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %3, i32 0, i32 0
  ret %"class.std::vector.5"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPSt6vectorIlSaIlEES2_EvT_S4_RKT0_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %6, align 8
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = call %"class.std::vector.5"* @_ZSt12__niter_baseIPSt6vectorIlSaIlEEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.std::vector.5"* %7)
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %10 = call %"class.std::vector.5"* @_ZSt12__niter_baseIPSt6vectorIlSaIlEEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.std::vector.5"* %9)
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  call void @_ZSt8__fill_aIPSt6vectorIlSaIlEES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_(%"class.std::vector.5"* %8, %"class.std::vector.5"* %10, %"class.std::vector.5"* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIlSaIlEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.5"*, i64, %"class.std::vector.5"* dereferenceable(24), %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.5"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.485
  %9 = load i32, i32* @y.486
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 457663015, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %87
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 457663015, label %21
    i32 -1468693774, label %41
    i32 1273635447, label %76
    i32 1327773175, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %87

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1468693774, i32 1327773175
  store i32 %40, i32* %17
  br label %87

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.5"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::vector.5"*, align 8
  %45 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %44, align 8
  store %"class.std::allocator.16"* %3, %"class.std::allocator.16"** %45, align 8
  %46 = load %"class.std::vector.5"*, %"class.std::vector.5"** %42, align 8
  %47 = load i64, i64* %43, align 8
  %48 = load %"class.std::vector.5"*, %"class.std::vector.5"** %44, align 8
  %49 = call %"class.std::vector.5"* @_ZSt20uninitialized_fill_nIPSt6vectorIlSaIlEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.5"* %46, i64 %47, %"class.std::vector.5"* dereferenceable(24) %48)
  store %"class.std::vector.5"* %49, %"class.std::vector.5"** %5
  %50 = load i32, i32* @x.485
  %51 = load i32, i32* @y.486
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1273635447, i32 1327773175
  store i32 %75, i32* %17
  br label %87

; <label>:76:                                     ; preds = %18
  %77 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  ret %"class.std::vector.5"* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %"class.std::vector.5"*, align 8
  %80 = alloca i64, align 8
  %81 = alloca %"class.std::vector.5"*, align 8
  %82 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %79, align 8
  store i64 %1, i64* %80, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %81, align 8
  store %"class.std::allocator.16"* %3, %"class.std::allocator.16"** %82, align 8
  %83 = load %"class.std::vector.5"*, %"class.std::vector.5"** %79, align 8
  %84 = load i64, i64* %80, align 8
  %85 = load %"class.std::vector.5"*, %"class.std::vector.5"** %81, align 8
  %86 = call %"class.std::vector.5"* @_ZSt20uninitialized_fill_nIPSt6vectorIlSaIlEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.5"* %83, i64 %84, %"class.std::vector.5"* dereferenceable(24) %85)
  store i32 -1468693774, i32* %17
  br label %87

; <label>:87:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.14"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca %"class.std::vector.14"*
  %10 = alloca %"class.std::vector.14"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %10, align 8
  store i64 %1, i64* %11, align 8
  store i8* %2, i8** %12, align 8
  %15 = load %"class.std::vector.14"*, %"class.std::vector.14"** %10, align 8
  store %"class.std::vector.14"* %15, %"class.std::vector.14"** %9
  %16 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %9
  %17 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %16) #3
  %18 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %9
  %19 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %18) #3
  %20 = add i64 %17, 7677823822590708441
  %21 = sub i64 %20, %19
  %22 = sub i64 %21, 7677823822590708441
  %23 = sub i64 %17, %19
  store i64 %22, i64* %8
  %24 = load i64, i64* %11, align 8
  store i64 %24, i64* %7
  %25 = alloca i32
  store i32 -1281498994, i32* %25
  %26 = alloca i64
  br label %27

; <label>:27:                                     ; preds = %3, %253
  %28 = load i32, i32* %25
  switch i32 %28, label %29 [
    i32 -1281498994, label %30
    i32 949122481, label %35
    i32 2088684231, label %63
    i32 76343211, label %92
    i32 439598428, label %93
    i32 -730872849, label %108
    i32 1098759503, label %136
    i32 1880880601, label %139
    i32 968002383, label %145
    i32 -1918300818, label %148
    i32 -895293094, label %164
    i32 -1550900664, label %192
    i32 1833659539, label %194
    i32 2050430265, label %211
    i32 42462330, label %227
    i32 130632129, label %229
    i32 2033520799, label %231
    i32 -186442431, label %250
    i32 438071024, label %252
  ]

; <label>:29:                                     ; preds = %27
  br label %253

; <label>:30:                                     ; preds = %27
  %31 = load volatile i64, i64* %8
  %32 = load volatile i64, i64* %7
  %33 = icmp ult i64 %31, %32
  %34 = select i1 %33, i32 949122481, i32 439598428
  store i32 %34, i32* %25
  br label %253

; <label>:35:                                     ; preds = %27
  %36 = load i32, i32* @x.487
  %37 = load i32, i32* @y.488
  %38 = sub i32 %36, 1972585364
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1972585364
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 2088684231, i32 130632129
  store i32 %62, i32* %25
  br label %253

; <label>:63:                                     ; preds = %27
  %64 = load i8*, i8** %12, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %64) #12
  %65 = load i32, i32* @x.487
  %66 = load i32, i32* @y.488
  %67 = sub i32 %65, 1175985762
  %68 = sub i32 %67, 1
  %69 = add i32 %68, 1175985762
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 76343211, i32 130632129
  store i32 %91, i32* %25
  br label %253

; <label>:92:                                     ; preds = %27
  unreachable

; <label>:93:                                     ; preds = %27
  %94 = load i32, i32* @x.487
  %95 = load i32, i32* @y.488
  %96 = sub i32 0, 1
  %97 = add i32 %94, %96
  %98 = sub i32 %94, 1
  %99 = mul i32 %94, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %95, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  %107 = select i1 %105, i32 -730872849, i32 2033520799
  store i32 %107, i32* %25
  br label %253

; <label>:108:                                    ; preds = %27
  %109 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %9
  %110 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %109) #3
  %111 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %9
  %112 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %111) #3
  store i64 %112, i64* %14, align 8
  %113 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %114 = load i64, i64* %113, align 8
  %115 = sub i64 0, %114
  %116 = sub i64 %110, %115
  %117 = add i64 %110, %114
  store i64 %116, i64* %13, align 8
  %118 = load i64, i64* %13, align 8
  %119 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %9
  %120 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %119) #3
  %121 = icmp ult i64 %118, %120
  store i1 %121, i1* %6
  %122 = load i32, i32* @x.487
  %123 = load i32, i32* @y.488
  %124 = sub i32 0, 1
  %125 = add i32 %122, %124
  %126 = sub i32 %122, 1
  %127 = mul i32 %122, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %123, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  %135 = select i1 %133, i32 1098759503, i32 2033520799
  store i32 %135, i32* %25
  br label %253

; <label>:136:                                    ; preds = %27
  %137 = load volatile i1, i1* %6
  %138 = select i1 %137, i32 968002383, i32 1880880601
  store i32 %138, i32* %25
  br label %253

; <label>:139:                                    ; preds = %27
  %140 = load i64, i64* %13, align 8
  %141 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %9
  %142 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %141) #3
  %143 = icmp ugt i64 %140, %142
  %144 = select i1 %143, i32 968002383, i32 -1918300818
  store i32 %144, i32* %25
  br label %253

; <label>:145:                                    ; preds = %27
  %146 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %9
  %147 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %146) #3
  store i32 1833659539, i32* %25
  store i64 %147, i64* %26
  br label %253

; <label>:148:                                    ; preds = %27
  %149 = load i32, i32* @x.487
  %150 = load i32, i32* @y.488
  %151 = add i32 %149, 1657745036
  %152 = sub i32 %151, 1
  %153 = sub i32 %152, 1657745036
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = and i1 %157, %158
  %160 = xor i1 %157, %158
  %161 = or i1 %159, %160
  %162 = or i1 %157, %158
  %163 = select i1 %161, i32 -895293094, i32 -186442431
  store i32 %163, i32* %25
  br label %253

; <label>:164:                                    ; preds = %27
  %165 = load i64, i64* %13, align 8
  store i64 %165, i64* %5
  %166 = load i32, i32* @x.487
  %167 = load i32, i32* @y.488
  %168 = sub i32 0, 1
  %169 = add i32 %166, %168
  %170 = sub i32 %166, 1
  %171 = mul i32 %166, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %167, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 true, true
  %178 = and i1 %175, true
  %179 = and i1 %173, %177
  %180 = and i1 %176, true
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 true, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  %191 = select i1 %189, i32 -1550900664, i32 -186442431
  store i32 %191, i32* %25
  br label %253

; <label>:192:                                    ; preds = %27
  store i32 1833659539, i32* %25
  %193 = load volatile i64, i64* %5
  store i64 %193, i64* %26
  br label %253

; <label>:194:                                    ; preds = %27
  %195 = load i64, i64* %26
  store i64 %195, i64* %4
  %196 = load i32, i32* @x.487
  %197 = load i32, i32* @y.488
  %198 = add i32 %196, 1680075217
  %199 = sub i32 %198, 1
  %200 = sub i32 %199, 1680075217
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = and i1 %204, %205
  %207 = xor i1 %204, %205
  %208 = or i1 %206, %207
  %209 = or i1 %204, %205
  %210 = select i1 %208, i32 2050430265, i32 438071024
  store i32 %210, i32* %25
  br label %253

; <label>:211:                                    ; preds = %27
  %212 = load i32, i32* @x.487
  %213 = load i32, i32* @y.488
  %214 = sub i32 %212, -2006591655
  %215 = sub i32 %214, 1
  %216 = add i32 %215, -2006591655
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = and i1 %220, %221
  %223 = xor i1 %220, %221
  %224 = or i1 %222, %223
  %225 = or i1 %220, %221
  %226 = select i1 %224, i32 42462330, i32 438071024
  store i32 %226, i32* %25
  br label %253

; <label>:227:                                    ; preds = %27
  %228 = load volatile i64, i64* %4
  ret i64 %228

; <label>:229:                                    ; preds = %27
  %230 = load i8*, i8** %12, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %230) #12
  store i32 2088684231, i32* %25
  br label %253

; <label>:231:                                    ; preds = %27
  %232 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %9
  %233 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %232) #3
  %234 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %9
  %235 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %234) #3
  store i64 %235, i64* %14, align 8
  %236 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %237 = load i64, i64* %236, align 8
  %238 = sub i64 %233, -3742169781078005099
  %239 = sub i64 %238, %237
  %240 = add i64 %239, -3742169781078005099
  %241 = sub i64 %233, %237
  %242 = mul i64 %240, %237
  %243 = sub i64 0, %237
  %244 = sub i64 %233, %243
  %245 = add i64 %233, %237
  store i64 %244, i64* %13, align 8
  %246 = load i64, i64* %13, align 8
  %247 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %9
  %248 = call i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE4sizeEv(%"class.std::vector.14"* %247) #3
  %249 = icmp ult i64 %246, %248
  store i32 -730872849, i32* %25
  br label %253

; <label>:250:                                    ; preds = %27
  %251 = load i64, i64* %13, align 8
  store i32 -895293094, i32* %25
  br label %253

; <label>:252:                                    ; preds = %27
  store i32 2050430265, i32* %25
  br label %253

; <label>:253:                                    ; preds = %252, %250, %231, %229, %211, %194, %192, %164, %148, %145, %139, %136, %108, %93, %63, %35, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.15"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*
  %4 = alloca %"class.std::vector.5"*
  %5 = alloca i64
  %6 = alloca %"struct.std::_Vector_base.15"*
  %7 = alloca %"struct.std::_Vector_base.15"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %7, align 8
  store %"struct.std::_Vector_base.15"* %9, %"struct.std::_Vector_base.15"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = alloca i32
  store i32 1825344127, i32* %11
  %12 = alloca %"class.std::vector.5"*
  br label %13

; <label>:13:                                     ; preds = %2, %181
  %14 = load i32, i32* %11
  switch i32 %14, label %15 [
    i32 1825344127, label %16
    i32 520483616, label %20
    i32 -701400736, label %48
    i32 -16556523, label %68
    i32 -116533948, label %70
    i32 1914048217, label %97
    i32 -564446550, label %125
    i32 1411569371, label %126
    i32 851776382, label %155
    i32 1014209843, label %171
    i32 -1854531885, label %173
    i32 -1383849095, label %179
    i32 -903223918, label %180
  ]

; <label>:15:                                     ; preds = %13
  br label %181

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = icmp ne i64 %17, 0
  %19 = select i1 %18, i32 520483616, i32 -116533948
  store i32 %19, i32* %11
  br label %181

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.489
  %22 = load i32, i32* @y.490
  %23 = sub i32 %21, -1727032499
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -1727032499
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 -701400736, i32 -1854531885
  store i32 %47, i32* %11
  br label %181

; <label>:48:                                     ; preds = %13
  %49 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %6
  %50 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %50 to %"class.std::allocator.16"*
  %52 = load i64, i64* %8, align 8
  %53 = call %"class.std::vector.5"* @_ZNSt16allocator_traitsISaISt6vectorIlSaIlEEEE8allocateERS3_m(%"class.std::allocator.16"* dereferenceable(1) %51, i64 %52)
  store %"class.std::vector.5"* %53, %"class.std::vector.5"** %4
  %54 = load i32, i32* @x.489
  %55 = load i32, i32* @y.490
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -16556523, i32 -1854531885
  store i32 %67, i32* %11
  br label %181

; <label>:68:                                     ; preds = %13
  store i32 1411569371, i32* %11
  %69 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %4
  store %"class.std::vector.5"* %69, %"class.std::vector.5"** %12
  br label %181

; <label>:70:                                     ; preds = %13
  %71 = load i32, i32* @x.489
  %72 = load i32, i32* @y.490
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 1914048217, i32 -1383849095
  store i32 %96, i32* %11
  br label %181

; <label>:97:                                     ; preds = %13
  %98 = load i32, i32* @x.489
  %99 = load i32, i32* @y.490
  %100 = sub i32 %98, 981730405
  %101 = sub i32 %100, 1
  %102 = add i32 %101, 981730405
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 true, true
  %111 = and i1 %108, true
  %112 = and i1 %106, %110
  %113 = and i1 %109, true
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 true, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 -564446550, i32 -1383849095
  store i32 %124, i32* %11
  br label %181

; <label>:125:                                    ; preds = %13
  store i32 1411569371, i32* %11
  store %"class.std::vector.5"* null, %"class.std::vector.5"** %12
  br label %181

; <label>:126:                                    ; preds = %13
  %127 = load %"class.std::vector.5"*, %"class.std::vector.5"** %12
  store %"class.std::vector.5"* %127, %"class.std::vector.5"** %3
  %128 = load i32, i32* @x.489
  %129 = load i32, i32* @y.490
  %130 = sub i32 %128, -1953087020
  %131 = sub i32 %130, 1
  %132 = add i32 %131, -1953087020
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = xor i1 %136, true
  %139 = xor i1 %137, true
  %140 = xor i1 true, true
  %141 = and i1 %138, true
  %142 = and i1 %136, %140
  %143 = and i1 %139, true
  %144 = and i1 %137, %140
  %145 = or i1 %141, %142
  %146 = or i1 %143, %144
  %147 = xor i1 %145, %146
  %148 = or i1 %138, %139
  %149 = xor i1 %148, true
  %150 = or i1 true, %140
  %151 = and i1 %149, %150
  %152 = or i1 %147, %151
  %153 = or i1 %136, %137
  %154 = select i1 %152, i32 851776382, i32 -903223918
  store i32 %154, i32* %11
  br label %181

; <label>:155:                                    ; preds = %13
  %156 = load i32, i32* @x.489
  %157 = load i32, i32* @y.490
  %158 = add i32 %156, -1763635363
  %159 = sub i32 %158, 1
  %160 = sub i32 %159, -1763635363
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = and i1 %164, %165
  %167 = xor i1 %164, %165
  %168 = or i1 %166, %167
  %169 = or i1 %164, %165
  %170 = select i1 %168, i32 1014209843, i32 -903223918
  store i32 %170, i32* %11
  br label %181

; <label>:171:                                    ; preds = %13
  %172 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %3
  ret %"class.std::vector.5"* %172

; <label>:173:                                    ; preds = %13
  %174 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %6
  %175 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %174, i32 0, i32 0
  %176 = bitcast %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %175 to %"class.std::allocator.16"*
  %177 = load i64, i64* %8, align 8
  %178 = call %"class.std::vector.5"* @_ZNSt16allocator_traitsISaISt6vectorIlSaIlEEEE8allocateERS3_m(%"class.std::allocator.16"* dereferenceable(1) %176, i64 %177)
  store i32 -701400736, i32* %11
  br label %181

; <label>:179:                                    ; preds = %13
  store i32 1914048217, i32* %11
  br label %181

; <label>:180:                                    ; preds = %13
  store i32 851776382, i32* %11
  br label %181

; <label>:181:                                    ; preds = %180, %179, %173, %155, %126, %125, %97, %70, %68, %48, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIlSaIlEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca %"class.std::allocator.16"*, align 8
  %9 = alloca %"class.std::move_iterator.26", align 8
  %10 = alloca %"class.std::move_iterator.26", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %5, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %6, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %7, align 8
  store %"class.std::allocator.16"* %3, %"class.std::allocator.16"** %8, align 8
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %12 = call %"class.std::vector.5"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIlSaIlEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.5"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  store %"class.std::vector.5"* %12, %"class.std::vector.5"** %13, align 8
  %14 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %15 = call %"class.std::vector.5"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIlSaIlEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.5"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %10, i32 0, i32 0
  store %"class.std::vector.5"* %15, %"class.std::vector.5"** %16, align 8
  %17 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %18 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.5"*, %"class.std::vector.5"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.5"*, %"class.std::vector.5"** %21, align 8
  %23 = call %"class.std::vector.5"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIlSaIlEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.5"* %20, %"class.std::vector.5"* %22, %"class.std::vector.5"* %17, %"class.std::allocator.16"* dereferenceable(1) %18)
  ret %"class.std::vector.5"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  store %"class.std::allocator.16"* %2, %"class.std::allocator.16"** %6, align 8
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIlSaIlEEEvT_S4_(%"class.std::vector.5"* %7, %"class.std::vector.5"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.15"*, %"class.std::vector.5"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.5"*
  %5 = alloca %"struct.std::_Vector_base.15"*
  %6 = alloca %"struct.std::_Vector_base.15"*, align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %6, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %6, align 8
  store %"struct.std::_Vector_base.15"* %9, %"struct.std::_Vector_base.15"** %5
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  store %"class.std::vector.5"* %10, %"class.std::vector.5"** %4
  %11 = alloca i32
  store i32 -93880249, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %87
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -93880249, label %15
    i32 -1123727939, label %19
    i32 -504217798, label %47
    i32 2124089635, label %79
    i32 15390112, label %80
    i32 427212921, label %81
  ]

; <label>:14:                                     ; preds = %12
  br label %87

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %4
  %17 = icmp ne %"class.std::vector.5"* %16, null
  %18 = select i1 %17, i32 -1123727939, i32 15390112
  store i32 %18, i32* %11
  br label %87

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.495
  %21 = load i32, i32* @y.496
  %22 = sub i32 %20, -1984653195
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -1984653195
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -504217798, i32 427212921
  store i32 %46, i32* %11
  br label %87

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %49 to %"class.std::allocator.16"*
  %51 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIlSaIlEEEE10deallocateERS3_PS2_m(%"class.std::allocator.16"* dereferenceable(1) %50, %"class.std::vector.5"* %51, i64 %52)
  %53 = load i32, i32* @x.495
  %54 = load i32, i32* @y.496
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 2124089635, i32 427212921
  store i32 %78, i32* %11
  br label %87

; <label>:79:                                     ; preds = %12
  store i32 15390112, i32* %11
  br label %87

; <label>:80:                                     ; preds = %12
  ret void

; <label>:81:                                     ; preds = %12
  %82 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %5
  %83 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %82, i32 0, i32 0
  %84 = bitcast %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %83 to %"class.std::allocator.16"*
  %85 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %86 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIlSaIlEEEE10deallocateERS3_PS2_m(%"class.std::allocator.16"* dereferenceable(1) %84, %"class.std::vector.5"* %85, i64 %86)
  store i32 -504217798, i32* %11
  br label %87

; <label>:87:                                     ; preds = %81, %79, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIlEE17_S_select_on_copyERKS1_(%"class.std::allocator.7"* noalias sret, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %3, align 8
  %4 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIlEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.7"* sret %0, %"class.std::allocator.7"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPllET0_T_SA_S9_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.501
  %9 = load i32, i32* @y.502
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -641175513, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %107
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -641175513, label %21
    i32 -1102153295, label %41
    i32 -2094728237, label %86
    i32 297624115, label %88
  ]

; <label>:20:                                     ; preds = %18
  br label %107

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1102153295, i32 297624115
  store i32 %40, i32* %17
  br label %107

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %44 = alloca i64*, align 8
  %45 = alloca %"class.std::allocator.7"*, align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %42, i32 0, i32 0
  store i64* %0, i64** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %43, i32 0, i32 0
  store i64* %1, i64** %49, align 8
  store i64* %2, i64** %44, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %45, align 8
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %46 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %47 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load i64*, i64** %44, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %46, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %47, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlET0_T_SA_S9_(i64* %56, i64* %58, i64* %54)
  store i64* %59, i64** %5
  %60 = load i32, i32* @x.501
  %61 = load i32, i32* @y.502
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -2094728237, i32 297624115
  store i32 %85, i32* %17
  br label %107

; <label>:86:                                     ; preds = %18
  %87 = load volatile i64*, i64** %5
  ret i64* %87

; <label>:88:                                     ; preds = %18
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %91 = alloca i64*, align 8
  %92 = alloca %"class.std::allocator.7"*, align 8
  %93 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %94 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %95 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %89, i32 0, i32 0
  store i64* %0, i64** %95, align 8
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %90, i32 0, i32 0
  store i64* %1, i64** %96, align 8
  store i64* %2, i64** %91, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %92, align 8
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %93 to i8*
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %94 to i8*
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = load i64*, i64** %91, align 8
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %93, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %94, i32 0, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlET0_T_SA_S9_(i64* %103, i64* %105, i64* %101)
  store i32 -1102153295, i32* %17
  br label %107

; <label>:107:                                    ; preds = %88, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.25"* %2, i64** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"*) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.505
  %6 = load i32, i32* @y.506
  %7 = sub i32 %5, 448761058
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 448761058
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 507511803, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 507511803, label %19
    i32 -603970346, label %27
    i32 1327037778, label %53
    i32 1134068712, label %55
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -603970346, i32 1134068712
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %29 = alloca %"class.std::vector.5"*, align 8
  %30 = alloca i64*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %29, align 8
  %31 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %32 = bitcast %"class.std::vector.5"* %31 to %"struct.std::_Vector_base.6"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %33, i32 0, i32 1
  %35 = load i64*, i64** %34, align 8
  store i64* %35, i64** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.25"* %28, i64** dereferenceable(8) %30) #3
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %28, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  store i64* %37, i64** %2
  %38 = load i32, i32* @x.505
  %39 = load i32, i32* @y.506
  %40 = add i32 %38, 1210452586
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1210452586
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1327037778, i32 1134068712
  store i32 %52, i32* %15
  br label %66

; <label>:53:                                     ; preds = %16
  %54 = load volatile i64*, i64** %2
  ret i64* %54

; <label>:55:                                     ; preds = %16
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %57 = alloca %"class.std::vector.5"*, align 8
  %58 = alloca i64*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %57, align 8
  %59 = load %"class.std::vector.5"*, %"class.std::vector.5"** %57, align 8
  %60 = bitcast %"class.std::vector.5"* %59 to %"struct.std::_Vector_base.6"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %61, i32 0, i32 1
  %63 = load i64*, i64** %62, align 8
  store i64* %63, i64** %58, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.25"* %56, i64** dereferenceable(8) %58) #3
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %56, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  store i32 -603970346, i32* %15
  br label %66

; <label>:66:                                     ; preds = %55, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIlEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.7"* noalias sret, %"class.std::allocator.7"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %3, align 8
  %4 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  call void @_ZNSaIlEC2ERKS_(%"class.std::allocator.7"* %0, %"class.std::allocator.7"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIlEC2ERKS_(%"class.std::allocator.7"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.509
  %6 = load i32, i32* @y.510
  %7 = sub i32 %5, 1341992363
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1341992363
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 836160099, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 836160099, label %19
    i32 -1078280886, label %27
    i32 773260103, label %61
    i32 450983098, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1078280886, i32 450983098
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.7"*, align 8
  %29 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %28, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %29, align 8
  %30 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %28, align 8
  %31 = bitcast %"class.std::allocator.7"* %30 to %"class.__gnu_cxx::new_allocator.8"*
  %32 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %29, align 8
  %33 = bitcast %"class.std::allocator.7"* %32 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIlEC2ERKS1_(%"class.__gnu_cxx::new_allocator.8"* %31, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.509
  %35 = load i32, i32* @y.510
  %36 = sub i32 %34, 882945463
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 882945463
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 773260103, i32 450983098
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator.7"*, align 8
  %64 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %63, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %64, align 8
  %65 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %63, align 8
  %66 = bitcast %"class.std::allocator.7"* %65 to %"class.__gnu_cxx::new_allocator.8"*
  %67 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %64, align 8
  %68 = bitcast %"class.std::allocator.7"* %67 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIlEC2ERKS1_(%"class.__gnu_cxx::new_allocator.8"* %66, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1) %68) #3
  store i32 -1078280886, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.511
  %8 = load i32, i32* @y.512
  %9 = sub i32 %7, -240023824
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -240023824
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 160277508, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 160277508, label %21
    i32 1420498381, label %41
    i32 711000785, label %75
    i32 -1330248395, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1420498381, i32 -1330248395
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %44 = alloca i64*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %42, i32 0, i32 0
  store i64* %0, i64** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %43, i32 0, i32 0
  store i64* %1, i64** %49, align 8
  store i64* %2, i64** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %46 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %47 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load i64*, i64** %44, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %46, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %47, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlEET0_T_SC_SB_(i64* %56, i64* %58, i64* %54)
  store i64* %59, i64** %4
  %60 = load i32, i32* @x.511
  %61 = load i32, i32* @y.512
  %62 = sub i32 %60, 860203894
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 860203894
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 711000785, i32 -1330248395
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile i64*, i64** %4
  ret i64* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %80 = alloca i64*, align 8
  %81 = alloca i8, align 1
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %78, i32 0, i32 0
  store i64* %0, i64** %84, align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %79, i32 0, i32 0
  store i64* %1, i64** %85, align 8
  store i64* %2, i64** %80, align 8
  store i8 1, i8* %81, align 1
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %82 to i8*
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %83 to i8*
  %89 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load i64*, i64** %80, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %82, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %83, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlEET0_T_SC_SB_(i64* %92, i64* %94, i64* %90)
  store i32 1420498381, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlEET0_T_SC_SB_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlET0_T_SA_S9_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %4, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %5, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %8, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %7, i32 0, i32 0
  store i64* %17, i64** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  store i64* %23, i64** %24, align 8
  %25 = load i64*, i64** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %7, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlET1_T0_SA_S9_(i64* %27, i64* %29, i64* %25)
  ret i64* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPlET1_T0_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %21)
  %23 = call i64* @_ZSt13__copy_move_aILb0EPKlPlET1_T0_S4_S3_(i64* %15, i64* %20, i64* %22)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %3, i32 0, i32 0
  store i64* %0, i64** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %4, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEELb0EE7_S_baseES7_(i64* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %2, i32 0, i32 0
  store i64* %10, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPKlPlET1_T0_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEELb1EE7_S_baseES7_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64*, i64** %5, align 8
  %11 = ptrtoint i64* %9 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = add i64 %11, 2771005250843916058
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, 2771005250843916058
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 -867109442, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -867109442, label %23
    i32 -102980369, label %27
    i32 1626558558, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -102980369, i32 1626558558
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i64*, i64** %7, align 8
  %29 = bitcast i64* %28 to i8*
  %30 = load i64*, i64** %5, align 8
  %31 = bitcast i64* %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 1626558558, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i64*, i64** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i64, i64* %35, i64 %36
  ret i64* %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEELb1EE7_S_baseES7_(i64*) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.527
  %6 = load i32, i32* @y.528
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 872120701, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 872120701, label %18
    i32 -793170520, label %26
    i32 39745260, label %58
    i32 376846431, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -793170520, i32 376846431
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %27, i32 0, i32 0
  store i64* %0, i64** %28, align 8
  %29 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.25"* %27) #3
  %30 = load i64*, i64** %29, align 8
  store i64* %30, i64** %2
  %31 = load i32, i32* @x.527
  %32 = load i32, i32* @y.528
  %33 = add i32 %31, 1052381230
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1052381230
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 39745260, i32 376846431
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64*, i64** %2
  ret i64* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %61, i32 0, i32 0
  store i64* %0, i64** %62, align 8
  %63 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.25"* %61) #3
  %64 = load i64*, i64** %63, align 8
  store i32 -793170520, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.25"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEELb0EE7_S_baseES7_(i64*) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.531
  %6 = load i32, i32* @y.532
  %7 = add i32 %5, -1553930302
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1553930302
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1141119795, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %60
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1141119795, label %19
    i32 -1135229465, label %27
    i32 -1159060592, label %50
    i32 -1702550270, label %52
  ]

; <label>:18:                                     ; preds = %16
  br label %60

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1135229465, i32 -1702550270
  store i32 %26, i32* %15
  br label %60

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %29, i32 0, i32 0
  store i64* %0, i64** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %28 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %28, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  store i64* %34, i64** %2
  %35 = load i32, i32* @x.531
  %36 = load i32, i32* @y.532
  %37 = add i32 %35, 224715072
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 224715072
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1159060592, i32 -1702550270
  store i32 %49, i32* %15
  br label %60

; <label>:50:                                     ; preds = %16
  %51 = load volatile i64*, i64** %2
  ret i64* %51

; <label>:52:                                     ; preds = %16
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %54, i32 0, i32 0
  store i64* %0, i64** %55, align 8
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %53 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %53, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  store i32 -1135229465, i32* %15
  br label %60

; <label>:60:                                     ; preds = %52, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.25"*, i64** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.533
  %6 = load i32, i32* @y.534
  %7 = sub i32 %5, 2025641223
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2025641223
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -654525753, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -654525753, label %19
    i32 2126554093, label %39
    i32 -353360269, label %73
    i32 -1712501285, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2126554093, i32 -1712501285
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  %41 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %40, align 8
  store i64** %1, i64*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %42, i32 0, i32 0
  %44 = load i64**, i64*** %41, align 8
  %45 = load i64*, i64** %44, align 8
  store i64* %45, i64** %43, align 8
  %46 = load i32, i32* @x.533
  %47 = load i32, i32* @y.534
  %48 = sub i32 %46, 596714415
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 596714415
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -353360269, i32 -1712501285
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  %76 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %75, align 8
  store i64** %1, i64*** %76, align 8
  %77 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %75, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %77, i32 0, i32 0
  %79 = load i64**, i64*** %76, align 8
  %80 = load i64*, i64** %79, align 8
  store i64* %80, i64** %78, align 8
  store i32 2126554093, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIlSaIlEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.26", align 8
  %6 = alloca %"class.std::move_iterator.26", align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca %"class.std::allocator.16"*, align 8
  %9 = alloca %"class.std::move_iterator.26", align 8
  %10 = alloca %"class.std::move_iterator.26", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %5, i32 0, i32 0
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %6, i32 0, i32 0
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %12, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %7, align 8
  store %"class.std::allocator.16"* %3, %"class.std::allocator.16"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.26"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.26"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.26"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.26"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.5"*, %"class.std::vector.5"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.5"*, %"class.std::vector.5"** %20, align 8
  %22 = call %"class.std::vector.5"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIlSaIlEEES4_ET0_T_S7_S6_(%"class.std::vector.5"* %19, %"class.std::vector.5"* %21, %"class.std::vector.5"* %17)
  ret %"class.std::vector.5"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt18make_move_iteratorIPSt6vectorIlSaIlEEESt13move_iteratorIT_ES5_(%"class.std::vector.5"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.26", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIlSaIlEEEC2ES3_(%"class.std::move_iterator.26"* %2, %"class.std::vector.5"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  ret %"class.std::vector.5"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIlSaIlEEES4_ET0_T_S7_S6_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.26", align 8
  %5 = alloca %"class.std::move_iterator.26", align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.26", align 8
  %9 = alloca %"class.std::move_iterator.26", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %4, i32 0, i32 0
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %5, i32 0, i32 0
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %11, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.26"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.26"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.26"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.26"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.5"*, %"class.std::vector.5"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.5"*, %"class.std::vector.5"** %19, align 8
  %21 = call %"class.std::vector.5"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_(%"class.std::vector.5"* %18, %"class.std::vector.5"* %20, %"class.std::vector.5"* %16)
  ret %"class.std::vector.5"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.26", align 8
  %5 = alloca %"class.std::move_iterator.26", align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %4, i32 0, i32 0
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %5, i32 0, i32 0
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %11, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %6, align 8
  %12 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  store %"class.std::vector.5"* %12, %"class.std::vector.5"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %202, %3
  %14 = load i32, i32* @x.541
  %15 = load i32, i32* @y.542
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %397

; <label>:39:                                     ; preds = %13, %397
  %40 = load i32, i32* @x.541
  %41 = load i32, i32* @y.542
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %397

; <label>:53:                                     ; preds = %39
  %54 = invoke zeroext i1 @_ZStneIPSt6vectorIlSaIlEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.26"* dereferenceable(8) %4, %"class.std::move_iterator.26"* dereferenceable(8) %5)
          to label %55 unwind label %203

; <label>:55:                                     ; preds = %53
  %56 = load i32, i32* @x.541
  %57 = load i32, i32* @y.542
  %58 = sub i32 %56, 372291299
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 372291299
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %398

; <label>:70:                                     ; preds = %55, %398
  %71 = load i32, i32* @x.541
  %72 = load i32, i32* @y.542
  %73 = add i32 %71, -177069350
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -177069350
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %398

; <label>:85:                                     ; preds = %70
  br i1 %54, label %86, label %308

; <label>:86:                                     ; preds = %85
  %87 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %88 = call %"class.std::vector.5"* @_ZSt11__addressofISt6vectorIlSaIlEEEPT_RS3_(%"class.std::vector.5"* dereferenceable(24) %87) #3
  %89 = invoke dereferenceable(24) %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIlSaIlEEEdeEv(%"class.std::move_iterator.26"* %4)
          to label %90 unwind label %203

; <label>:90:                                     ; preds = %86
  invoke void @_ZSt10_ConstructISt6vectorIlSaIlEEJS2_EEvPT_DpOT0_(%"class.std::vector.5"* %88, %"class.std::vector.5"* dereferenceable(24) %89)
          to label %91 unwind label %203

; <label>:91:                                     ; preds = %90
  %92 = load i32, i32* @x.541
  %93 = load i32, i32* @y.542
  %94 = add i32 %92, 1075466503
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 1075466503
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %399

; <label>:118:                                    ; preds = %91, %399
  %119 = load i32, i32* @x.541
  %120 = load i32, i32* @y.542
  %121 = add i32 %119, 337358256
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, 337358256
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 true, true
  %132 = and i1 %129, true
  %133 = and i1 %127, %131
  %134 = and i1 %130, true
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 true, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  br i1 %143, label %145, label %399

; <label>:145:                                    ; preds = %118
  br label %146

; <label>:146:                                    ; preds = %145
  %147 = invoke dereferenceable(8) %"class.std::move_iterator.26"* @_ZNSt13move_iteratorIPSt6vectorIlSaIlEEEppEv(%"class.std::move_iterator.26"* %4)
          to label %148 unwind label %203

; <label>:148:                                    ; preds = %146
  %149 = load i32, i32* @x.541
  %150 = load i32, i32* @y.542
  %151 = sub i32 0, 1
  %152 = add i32 %149, %151
  %153 = sub i32 %149, 1
  %154 = mul i32 %149, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %150, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 false, true
  %161 = and i1 %158, false
  %162 = and i1 %156, %160
  %163 = and i1 %159, false
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 false, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %400

; <label>:174:                                    ; preds = %148, %400
  %175 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %176 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %175, i32 1
  store %"class.std::vector.5"* %176, %"class.std::vector.5"** %7, align 8
  %177 = load i32, i32* @x.541
  %178 = load i32, i32* @y.542
  %179 = sub i32 0, 1
  %180 = add i32 %177, %179
  %181 = sub i32 %177, 1
  %182 = mul i32 %177, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %178, 10
  %186 = xor i1 %184, true
  %187 = xor i1 %185, true
  %188 = xor i1 false, true
  %189 = and i1 %186, false
  %190 = and i1 %184, %188
  %191 = and i1 %187, false
  %192 = and i1 %185, %188
  %193 = or i1 %189, %190
  %194 = or i1 %191, %192
  %195 = xor i1 %193, %194
  %196 = or i1 %186, %187
  %197 = xor i1 %196, true
  %198 = or i1 false, %188
  %199 = and i1 %197, %198
  %200 = or i1 %195, %199
  %201 = or i1 %184, %185
  br i1 %200, label %202, label %400

; <label>:202:                                    ; preds = %174
  br label %13

; <label>:203:                                    ; preds = %146, %90, %86, %53
  %204 = landingpad { i8*, i32 }
          catch i8* null
  %205 = extractvalue { i8*, i32 } %204, 0
  store i8* %205, i8** %8, align 8
  %206 = extractvalue { i8*, i32 } %204, 1
  store i32 %206, i32* %9, align 4
  br label %207

; <label>:207:                                    ; preds = %203
  %208 = load i32, i32* @x.541
  %209 = load i32, i32* @y.542
  %210 = add i32 %208, 1099936609
  %211 = sub i32 %210, 1
  %212 = sub i32 %211, 1099936609
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = and i1 %216, %217
  %219 = xor i1 %216, %217
  %220 = or i1 %218, %219
  %221 = or i1 %216, %217
  br i1 %220, label %222, label %403

; <label>:222:                                    ; preds = %207, %403
  %223 = load i8*, i8** %8, align 8
  %224 = call i8* @__cxa_begin_catch(i8* %223) #3
  %225 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %226 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %227 = load i32, i32* @x.541
  %228 = load i32, i32* @y.542
  %229 = add i32 %227, 648859941
  %230 = sub i32 %229, 1
  %231 = sub i32 %230, 648859941
  %232 = sub i32 %227, 1
  %233 = mul i32 %227, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %228, 10
  %237 = xor i1 %235, true
  %238 = xor i1 %236, true
  %239 = xor i1 false, true
  %240 = and i1 %237, false
  %241 = and i1 %235, %239
  %242 = and i1 %238, false
  %243 = and i1 %236, %239
  %244 = or i1 %240, %241
  %245 = or i1 %242, %243
  %246 = xor i1 %244, %245
  %247 = or i1 %237, %238
  %248 = xor i1 %247, true
  %249 = or i1 false, %239
  %250 = and i1 %248, %249
  %251 = or i1 %246, %250
  %252 = or i1 %235, %236
  br i1 %251, label %253, label %403

; <label>:253:                                    ; preds = %222
  invoke void @_ZSt8_DestroyIPSt6vectorIlSaIlEEEvT_S4_(%"class.std::vector.5"* %225, %"class.std::vector.5"* %226)
          to label %254 unwind label %310

; <label>:254:                                    ; preds = %253
  %255 = load i32, i32* @x.541
  %256 = load i32, i32* @y.542
  %257 = sub i32 0, 1
  %258 = add i32 %255, %257
  %259 = sub i32 %255, 1
  %260 = mul i32 %255, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %256, 10
  %264 = xor i1 %262, true
  %265 = xor i1 %263, true
  %266 = xor i1 false, true
  %267 = and i1 %264, false
  %268 = and i1 %262, %266
  %269 = and i1 %265, false
  %270 = and i1 %263, %266
  %271 = or i1 %267, %268
  %272 = or i1 %269, %270
  %273 = xor i1 %271, %272
  %274 = or i1 %264, %265
  %275 = xor i1 %274, true
  %276 = or i1 false, %266
  %277 = and i1 %275, %276
  %278 = or i1 %273, %277
  %279 = or i1 %262, %263
  br i1 %278, label %280, label %408

; <label>:280:                                    ; preds = %254, %408
  %281 = load i32, i32* @x.541
  %282 = load i32, i32* @y.542
  %283 = sub i32 %281, -940595913
  %284 = sub i32 %283, 1
  %285 = add i32 %284, -940595913
  %286 = sub i32 %281, 1
  %287 = mul i32 %281, %285
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %282, 10
  %291 = xor i1 %289, true
  %292 = xor i1 %290, true
  %293 = xor i1 false, true
  %294 = and i1 %291, false
  %295 = and i1 %289, %293
  %296 = and i1 %292, false
  %297 = and i1 %290, %293
  %298 = or i1 %294, %295
  %299 = or i1 %296, %297
  %300 = xor i1 %298, %299
  %301 = or i1 %291, %292
  %302 = xor i1 %301, true
  %303 = or i1 false, %293
  %304 = and i1 %302, %303
  %305 = or i1 %300, %304
  %306 = or i1 %289, %290
  br i1 %305, label %307, label %408

; <label>:307:                                    ; preds = %280
  invoke void @__cxa_rethrow() #12
          to label %354 unwind label %310

; <label>:308:                                    ; preds = %85
  %309 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  ret %"class.std::vector.5"* %309

; <label>:310:                                    ; preds = %307, %253
  %311 = landingpad { i8*, i32 }
          cleanup
  %312 = extractvalue { i8*, i32 } %311, 0
  store i8* %312, i8** %8, align 8
  %313 = extractvalue { i8*, i32 } %311, 1
  store i32 %313, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %314 unwind label %351

; <label>:314:                                    ; preds = %310
  br label %346
                                                  ; No predecessors!
  %316 = load i32, i32* @x.541
  %317 = load i32, i32* @y.542
  %318 = add i32 %316, -2026468728
  %319 = sub i32 %318, 1
  %320 = sub i32 %319, -2026468728
  %321 = sub i32 %316, 1
  %322 = mul i32 %316, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %317, 10
  %326 = and i1 %324, %325
  %327 = xor i1 %324, %325
  %328 = or i1 %326, %327
  %329 = or i1 %324, %325
  br i1 %328, label %330, label %409

; <label>:330:                                    ; preds = %315, %409
  call void @llvm.trap()
  %331 = load i32, i32* @x.541
  %332 = load i32, i32* @y.542
  %333 = sub i32 %331, -679675921
  %334 = sub i32 %333, 1
  %335 = add i32 %334, -679675921
  %336 = sub i32 %331, 1
  %337 = mul i32 %331, %335
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %332, 10
  %341 = and i1 %339, %340
  %342 = xor i1 %339, %340
  %343 = or i1 %341, %342
  %344 = or i1 %339, %340
  br i1 %343, label %345, label %409

; <label>:345:                                    ; preds = %330
  unreachable

; <label>:346:                                    ; preds = %314
  %347 = load i8*, i8** %8, align 8
  %348 = load i32, i32* %9, align 4
  %349 = insertvalue { i8*, i32 } undef, i8* %347, 0
  %350 = insertvalue { i8*, i32 } %349, i32 %348, 1
  resume { i8*, i32 } %350

; <label>:351:                                    ; preds = %310
  %352 = landingpad { i8*, i32 }
          catch i8* null
  %353 = extractvalue { i8*, i32 } %352, 0
  call void @__clang_call_terminate(i8* %353) #7
  unreachable

; <label>:354:                                    ; preds = %307
  %355 = load i32, i32* @x.541
  %356 = load i32, i32* @y.542
  %357 = sub i32 %355, 1917630290
  %358 = sub i32 %357, 1
  %359 = add i32 %358, 1917630290
  %360 = sub i32 %355, 1
  %361 = mul i32 %355, %359
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %356, 10
  %365 = xor i1 %363, true
  %366 = xor i1 %364, true
  %367 = xor i1 true, true
  %368 = and i1 %365, true
  %369 = and i1 %363, %367
  %370 = and i1 %366, true
  %371 = and i1 %364, %367
  %372 = or i1 %368, %369
  %373 = or i1 %370, %371
  %374 = xor i1 %372, %373
  %375 = or i1 %365, %366
  %376 = xor i1 %375, true
  %377 = or i1 true, %367
  %378 = and i1 %376, %377
  %379 = or i1 %374, %378
  %380 = or i1 %363, %364
  br i1 %379, label %381, label %410

; <label>:381:                                    ; preds = %354, %410
  %382 = load i32, i32* @x.541
  %383 = load i32, i32* @y.542
  %384 = sub i32 %382, 288265498
  %385 = sub i32 %384, 1
  %386 = add i32 %385, 288265498
  %387 = sub i32 %382, 1
  %388 = mul i32 %382, %386
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %383, 10
  %392 = and i1 %390, %391
  %393 = xor i1 %390, %391
  %394 = or i1 %392, %393
  %395 = or i1 %390, %391
  br i1 %394, label %396, label %410

; <label>:396:                                    ; preds = %381
  unreachable

; <label>:397:                                    ; preds = %39, %13
  br label %39

; <label>:398:                                    ; preds = %70, %55
  br label %70

; <label>:399:                                    ; preds = %118, %91
  br label %118

; <label>:400:                                    ; preds = %174, %148
  %401 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %402 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %401, i32 1
  store %"class.std::vector.5"* %402, %"class.std::vector.5"** %7, align 8
  br label %174

; <label>:403:                                    ; preds = %222, %207
  %404 = load i8*, i8** %8, align 8
  %405 = call i8* @__cxa_begin_catch(i8* %404) #3
  %406 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %407 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  br label %222

; <label>:408:                                    ; preds = %280, %254
  br label %280

; <label>:409:                                    ; preds = %330, %315
  call void @llvm.trap()
  br label %330

; <label>:410:                                    ; preds = %381, %354
  br label %381
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIlSaIlEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.26"* dereferenceable(8), %"class.std::move_iterator.26"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.543
  %7 = load i32, i32* @y.544
  %8 = sub i32 %6, 1168791627
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1168791627
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1607256874, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %96
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1607256874, label %20
    i32 -1188038793, label %40
    i32 -849609098, label %67
    i32 374061313, label %69
  ]

; <label>:19:                                     ; preds = %17
  br label %96

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1188038793, i32 374061313
  store i32 %39, i32* %16
  br label %96

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator.26"*, align 8
  %42 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %41, align 8
  store %"class.std::move_iterator.26"* %1, %"class.std::move_iterator.26"** %42, align 8
  %43 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %41, align 8
  %44 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %42, align 8
  %45 = call zeroext i1 @_ZSteqIPSt6vectorIlSaIlEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.26"* dereferenceable(8) %43, %"class.std::move_iterator.26"* dereferenceable(8) %44)
  %46 = xor i1 %45, true
  %47 = and i1 true, %46
  %48 = xor i1 true, true
  %49 = and i1 %45, %48
  %50 = or i1 %47, %49
  %51 = xor i1 %45, true
  store i1 %50, i1* %3
  %52 = load i32, i32* @x.543
  %53 = load i32, i32* @y.544
  %54 = add i32 %52, 68383539
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 68383539
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -849609098, i32 374061313
  store i32 %66, i32* %16
  br label %96

; <label>:67:                                     ; preds = %17
  %68 = load volatile i1, i1* %3
  ret i1 %68

; <label>:69:                                     ; preds = %17
  %70 = alloca %"class.std::move_iterator.26"*, align 8
  %71 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %70, align 8
  store %"class.std::move_iterator.26"* %1, %"class.std::move_iterator.26"** %71, align 8
  %72 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %70, align 8
  %73 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %71, align 8
  %74 = call zeroext i1 @_ZSteqIPSt6vectorIlSaIlEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.26"* dereferenceable(8) %72, %"class.std::move_iterator.26"* dereferenceable(8) %73)
  %75 = sub i1 false, true
  %76 = sub i1 %75, %74
  %77 = add i1 %76, true
  %78 = sub i1 false, %74
  %79 = add i1 %77, false
  %80 = add i1 %79, true
  %81 = sub i1 %80, false
  %82 = add i1 %77, true
  %83 = sub i1 false, %74
  %84 = add i1 false, %83
  %85 = sub i1 false, %74
  %86 = sub i1 %84, false
  %87 = add i1 %86, true
  %88 = add i1 %87, false
  %89 = add i1 %84, true
  %90 = xor i1 %74, true
  %91 = and i1 true, %90
  %92 = xor i1 true, true
  %93 = and i1 %74, %92
  %94 = or i1 %91, %93
  %95 = xor i1 %74, true
  store i32 -1188038793, i32* %16
  br label %96

; <label>:96:                                     ; preds = %69, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIlSaIlEEJS2_EEvPT_DpOT0_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.545
  %6 = load i32, i32* @y.546
  %7 = sub i32 %5, -196765299
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -196765299
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -919277186, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %58
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -919277186, label %19
    i32 560326119, label %27
    i32 87429346, label %49
    i32 -1950753584, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %58

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 560326119, i32 -1950753584
  store i32 %26, i32* %15
  br label %58

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.5"*, align 8
  %29 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %29, align 8
  %30 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  %31 = bitcast %"class.std::vector.5"* %30 to i8*
  %32 = bitcast i8* %31 to %"class.std::vector.5"*
  %33 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %34 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardISt6vectorIlSaIlEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.5"* dereferenceable(24) %33) #3
  call void @_ZNSt6vectorIlSaIlEEC2EOS1_(%"class.std::vector.5"* %32, %"class.std::vector.5"* dereferenceable(24) %34) #3
  %35 = load i32, i32* @x.545
  %36 = load i32, i32* @y.546
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 87429346, i32 -1950753584
  store i32 %48, i32* %15
  br label %58

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::vector.5"*, align 8
  %52 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %51, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %52, align 8
  %53 = load %"class.std::vector.5"*, %"class.std::vector.5"** %51, align 8
  %54 = bitcast %"class.std::vector.5"* %53 to i8*
  %55 = bitcast i8* %54 to %"class.std::vector.5"*
  %56 = load %"class.std::vector.5"*, %"class.std::vector.5"** %52, align 8
  %57 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardISt6vectorIlSaIlEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.5"* dereferenceable(24) %56) #3
  call void @_ZNSt6vectorIlSaIlEEC2EOS1_(%"class.std::vector.5"* %55, %"class.std::vector.5"* dereferenceable(24) %57) #3
  store i32 560326119, i32* %15
  br label %58

; <label>:58:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt11__addressofISt6vectorIlSaIlEEEPT_RS3_(%"class.std::vector.5"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.5"*
  ret %"class.std::vector.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIlSaIlEEEdeEv(%"class.std::move_iterator.26"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.549
  %6 = load i32, i32* @y.550
  %7 = add i32 %5, 1470462752
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1470462752
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2086215159, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2086215159, label %19
    i32 -164078152, label %27
    i32 -1648977744, label %59
    i32 297754356, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -164078152, i32 297754356
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %28, align 8
  %29 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %29, i32 0, i32 0
  %31 = load %"class.std::vector.5"*, %"class.std::vector.5"** %30, align 8
  store %"class.std::vector.5"* %31, %"class.std::vector.5"** %2
  %32 = load i32, i32* @x.549
  %33 = load i32, i32* @y.550
  %34 = sub i32 %32, 1113908577
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1113908577
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1648977744, i32 297754356
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %62, align 8
  %63 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %63, i32 0, i32 0
  %65 = load %"class.std::vector.5"*, %"class.std::vector.5"** %64, align 8
  store i32 -164078152, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.26"* @_ZNSt13move_iteratorIPSt6vectorIlSaIlEEEppEv(%"class.std::move_iterator.26"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %2, align 8
  %3 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %5, i32 1
  store %"class.std::vector.5"* %6, %"class.std::vector.5"** %4, align 8
  ret %"class.std::move_iterator.26"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIlSaIlEEEvT_S4_(%"class.std::vector.5"*, %"class.std::vector.5"*) #0 comdat {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIlSaIlEEEEvT_S6_(%"class.std::vector.5"* %5, %"class.std::vector.5"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIlSaIlEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.26"* dereferenceable(8), %"class.std::move_iterator.26"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.26"*, align 8
  %4 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %3, align 8
  store %"class.std::move_iterator.26"* %1, %"class.std::move_iterator.26"** %4, align 8
  %5 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %3, align 8
  %6 = call %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIlSaIlEEE4baseEv(%"class.std::move_iterator.26"* %5)
  %7 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %4, align 8
  %8 = call %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIlSaIlEEE4baseEv(%"class.std::move_iterator.26"* %7)
  %9 = icmp eq %"class.std::vector.5"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNKSt13move_iteratorIPSt6vectorIlSaIlEEE4baseEv(%"class.std::move_iterator.26"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %2, align 8
  %3 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  ret %"class.std::vector.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardISt6vectorIlSaIlEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.5"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.559
  %6 = load i32, i32* @y.560
  %7 = add i32 %5, 1591340169
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1591340169
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1822073, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1822073, label %19
    i32 -378993939, label %27
    i32 32394277, label %57
    i32 1786022873, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -378993939, i32 1786022873
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  %29 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  store %"class.std::vector.5"* %29, %"class.std::vector.5"** %2
  %30 = load i32, i32* @x.559
  %31 = load i32, i32* @y.560
  %32 = sub i32 %30, 2143436939
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 2143436939
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 32394277, i32 1786022873
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %60, align 8
  %61 = load %"class.std::vector.5"*, %"class.std::vector.5"** %60, align 8
  store i32 -378993939, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEEC2EOS1_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIlSaIlEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.5"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.5"* %8 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIlSaIlEEC2EOS1_(%"struct.std::_Vector_base.6"* %6, %"struct.std::_Vector_base.6"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIlSaIlEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.5"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  ret %"class.std::vector.5"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEEC2EOS1_(%"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.565
  %6 = load i32, i32* @y.566
  %7 = sub i32 %5, -1556438235
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1556438235
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -31866625, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -31866625, label %19
    i32 -1988480259, label %39
    i32 -1908337322, label %76
    i32 -1311744522, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1988480259, i32 -1311744522
  store i32 %38, i32* %15
  br label %88

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.6"*, align 8
  %41 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %40, align 8
  store %"struct.std::_Vector_base.6"* %1, %"struct.std::_Vector_base.6"** %41, align 8
  %42 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %41, align 8
  %45 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %44) #3
  %46 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIlEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1) %45) #3
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %43, %"class.std::allocator.7"* dereferenceable(1) %46) #3
  %47 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %48 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %41, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %48, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %47, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* dereferenceable(24) %49) #3
  %50 = load i32, i32* @x.565
  %51 = load i32, i32* @y.566
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1908337322, i32 -1311744522
  store i32 %75, i32* %15
  br label %88

; <label>:76:                                     ; preds = %16
  ret void

; <label>:77:                                     ; preds = %16
  %78 = alloca %"struct.std::_Vector_base.6"*, align 8
  %79 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %78, align 8
  store %"struct.std::_Vector_base.6"* %1, %"struct.std::_Vector_base.6"** %79, align 8
  %80 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %78, align 8
  %81 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %80, i32 0, i32 0
  %82 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %79, align 8
  %83 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %82) #3
  %84 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIlEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1) %83) #3
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %81, %"class.std::allocator.7"* dereferenceable(1) %84) #3
  %85 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %80, i32 0, i32 0
  %86 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %79, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %86, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %85, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* dereferenceable(24) %87) #3
  store i32 -1988480259, i32* %15
  br label %88

; <label>:88:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIlEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  ret %"class.std::allocator.7"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %5 to %"class.std::allocator.7"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIlEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1) %7) #3
  call void @_ZNSaIlEC2ERKS_(%"class.std::allocator.7"* %6, %"class.std::allocator.7"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %5, i32 0, i32 0
  store i64* null, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %5, i32 0, i32 1
  store i64* null, i64** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %1, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPlEvRT_S2_(i64** dereferenceable(8) %6, i64** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPlEvRT_S2_(i64** dereferenceable(8) %9, i64** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"*, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPlEvRT_S2_(i64** dereferenceable(8) %12, i64** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPlEvRT_S2_(i64** dereferenceable(8), i64** dereferenceable(8)) #5 comdat {
  %3 = alloca i64**, align 8
  %4 = alloca i64**, align 8
  %5 = alloca i64*, align 8
  store i64** %0, i64*** %3, align 8
  store i64** %1, i64*** %4, align 8
  %6 = load i64**, i64*** %3, align 8
  %7 = call dereferenceable(8) i64** @_ZSt4moveIRPlEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %6) #3
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %5, align 8
  %9 = load i64**, i64*** %4, align 8
  %10 = call dereferenceable(8) i64** @_ZSt4moveIRPlEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %9) #3
  %11 = load i64*, i64** %10, align 8
  %12 = load i64**, i64*** %3, align 8
  store i64* %11, i64** %12, align 8
  %13 = call dereferenceable(8) i64** @_ZSt4moveIRPlEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %5) #3
  %14 = load i64*, i64** %13, align 8
  %15 = load i64**, i64*** %4, align 8
  store i64* %14, i64** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZSt4moveIRPlEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8)) #5 comdat {
  %2 = alloca i64**, align 8
  store i64** %0, i64*** %2, align 8
  %3 = load i64**, i64*** %2, align 8
  ret i64** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIlSaIlEEEEvT_S6_(%"class.std::vector.5"*, %"class.std::vector.5"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = alloca i32
  store i32 -645013983, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %100
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -645013983, label %9
    i32 -2118212451, label %14
    i32 1802915155, label %29
    i32 295284190, label %47
    i32 28555359, label %48
    i32 1280435102, label %51
    i32 -748775242, label %67
    i32 1452087225, label %95
    i32 1061614240, label %96
    i32 -1200361629, label %99
  ]

; <label>:8:                                      ; preds = %6
  br label %100

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %12 = icmp ne %"class.std::vector.5"* %10, %11
  %13 = select i1 %12, i32 -2118212451, i32 1280435102
  store i32 %13, i32* %5
  br label %100

; <label>:14:                                     ; preds = %6
  %15 = load i32, i32* @x.577
  %16 = load i32, i32* @y.578
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1802915155, i32 1061614240
  store i32 %28, i32* %5
  br label %100

; <label>:29:                                     ; preds = %6
  %30 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %31 = call %"class.std::vector.5"* @_ZSt11__addressofISt6vectorIlSaIlEEEPT_RS3_(%"class.std::vector.5"* dereferenceable(24) %30) #3
  call void @_ZSt8_DestroyISt6vectorIlSaIlEEEvPT_(%"class.std::vector.5"* %31)
  %32 = load i32, i32* @x.577
  %33 = load i32, i32* @y.578
  %34 = add i32 %32, 90423832
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 90423832
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 295284190, i32 1061614240
  store i32 %46, i32* %5
  br label %100

; <label>:47:                                     ; preds = %6
  store i32 28555359, i32* %5
  br label %100

; <label>:48:                                     ; preds = %6
  %49 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %50 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %49, i32 1
  store %"class.std::vector.5"* %50, %"class.std::vector.5"** %3, align 8
  store i32 -645013983, i32* %5
  br label %100

; <label>:51:                                     ; preds = %6
  %52 = load i32, i32* @x.577
  %53 = load i32, i32* @y.578
  %54 = sub i32 %52, -194677129
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -194677129
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -748775242, i32 -1200361629
  store i32 %66, i32* %5
  br label %100

; <label>:67:                                     ; preds = %6
  %68 = load i32, i32* @x.577
  %69 = load i32, i32* @y.578
  %70 = sub i32 %68, 1373310488
  %71 = sub i32 %70, 1
  %72 = add i32 %71, 1373310488
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 1452087225, i32 -1200361629
  store i32 %94, i32* %5
  br label %100

; <label>:95:                                     ; preds = %6
  ret void

; <label>:96:                                     ; preds = %6
  %97 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %98 = call %"class.std::vector.5"* @_ZSt11__addressofISt6vectorIlSaIlEEEPT_RS3_(%"class.std::vector.5"* dereferenceable(24) %97) #3
  call void @_ZSt8_DestroyISt6vectorIlSaIlEEEvPT_(%"class.std::vector.5"* %98)
  store i32 1802915155, i32* %5
  br label %100

; <label>:99:                                     ; preds = %6
  store i32 -748775242, i32* %5
  br label %100

; <label>:100:                                    ; preds = %99, %96, %67, %51, %48, %47, %29, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIlSaIlEEEvPT_(%"class.std::vector.5"*) #5 comdat {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIlSaIlEEEC2ES3_(%"class.std::move_iterator.26"*, %"class.std::vector.5"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.26"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  store %"class.std::vector.5"* %7, %"class.std::vector.5"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIlSaIlEES3_ET1_T0_S5_S4_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*) #0 comdat {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %6, align 8
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = call %"class.std::vector.5"* @_ZSt12__niter_baseIPSt6vectorIlSaIlEEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.std::vector.5"* %7)
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %10 = call %"class.std::vector.5"* @_ZSt12__niter_baseIPSt6vectorIlSaIlEEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.std::vector.5"* %9)
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %12 = call %"class.std::vector.5"* @_ZSt12__niter_baseIPSt6vectorIlSaIlEEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.std::vector.5"* %11)
  %13 = call %"class.std::vector.5"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIlSaIlEES3_ET1_T0_S5_S4_(%"class.std::vector.5"* %8, %"class.std::vector.5"* %10, %"class.std::vector.5"* %12)
  ret %"class.std::vector.5"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt12__miter_baseIPSt6vectorIlSaIlEEENSt11_Miter_baseIT_E13iterator_typeES5_(%"class.std::vector.5"*) #5 comdat {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = call %"class.std::vector.5"* @_ZNSt10_Iter_baseIPSt6vectorIlSaIlEELb0EE7_S_baseES3_(%"class.std::vector.5"* %3)
  ret %"class.std::vector.5"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIlSaIlEES3_ET1_T0_S5_S4_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*) #0 comdat {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %11 = call %"class.std::vector.5"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIlSaIlEES6_EET0_T_S8_S7_(%"class.std::vector.5"* %8, %"class.std::vector.5"* %9, %"class.std::vector.5"* %10)
  ret %"class.std::vector.5"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt12__niter_baseIPSt6vectorIlSaIlEEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.std::vector.5"*) #0 comdat {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = call %"class.std::vector.5"* @_ZNSt10_Iter_baseIPSt6vectorIlSaIlEELb0EE7_S_baseES3_(%"class.std::vector.5"* %3)
  ret %"class.std::vector.5"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIlSaIlEES6_EET0_T_S8_S7_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"*) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %5, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %6, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %7, align 8
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %11 = ptrtoint %"class.std::vector.5"* %9 to i64
  %12 = ptrtoint %"class.std::vector.5"* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 24
  store i64 %16, i64* %8, align 8
  %17 = alloca i32
  store i32 -1576715539, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1576715539, label %21
    i32 905470074, label %48
    i32 -1199619835, label %66
    i32 -922196417, label %69
    i32 407605334, label %76
    i32 -930519058, label %83
    i32 -610442644, label %85
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load i32, i32* @x.591
  %23 = load i32, i32* @y.592
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 905470074, i32 -610442644
  store i32 %47, i32* %17
  br label %88

; <label>:48:                                     ; preds = %18
  %49 = load i64, i64* %8, align 8
  %50 = icmp sgt i64 %49, 0
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.591
  %52 = load i32, i32* @y.592
  %53 = sub i32 %51, -1855894804
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1855894804
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1199619835, i32 -610442644
  store i32 %65, i32* %17
  br label %88

; <label>:66:                                     ; preds = %18
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -922196417, i32 -930519058
  store i32 %68, i32* %17
  br label %88

; <label>:69:                                     ; preds = %18
  %70 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %71 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %70, i32 -1
  store %"class.std::vector.5"* %71, %"class.std::vector.5"** %6, align 8
  %72 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIlSaIlEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.5"* dereferenceable(24) %71) #3
  %73 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %74 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %73, i32 -1
  store %"class.std::vector.5"* %74, %"class.std::vector.5"** %7, align 8
  %75 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIlSaIlEEaSEOS1_(%"class.std::vector.5"* %74, %"class.std::vector.5"* dereferenceable(24) %72) #3
  store i32 407605334, i32* %17
  br label %88

; <label>:76:                                     ; preds = %18
  %77 = load i64, i64* %8, align 8
  %78 = sub i64 0, %77
  %79 = sub i64 0, -1
  %80 = add i64 %78, %79
  %81 = sub i64 0, %80
  %82 = add nsw i64 %77, -1
  store i64 %81, i64* %8, align 8
  store i32 -1576715539, i32* %17
  br label %88

; <label>:83:                                     ; preds = %18
  %84 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  ret %"class.std::vector.5"* %84

; <label>:85:                                     ; preds = %18
  %86 = load i64, i64* %8, align 8
  %87 = icmp sgt i64 %86, 0
  store i32 905470074, i32* %17
  br label %88

; <label>:88:                                     ; preds = %85, %76, %69, %66, %48, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIlSaIlEEaSEOS1_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  store i8 1, i8* %5, align 1
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt4moveIRSt6vectorIlSaIlEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.5"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIlSaIlEE14_M_move_assignEOS1_St17integral_constantIbLb1EE(%"class.std::vector.5"* %7, %"class.std::vector.5"* dereferenceable(24) %9) #3
  ret %"class.std::vector.5"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEE14_M_move_assignEOS1_St17integral_constantIbLb1EE(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::vector.5", align 8
  %7 = alloca %"class.std::allocator.7", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %11 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  call void @_ZNKSt12_Vector_baseIlSaIlEE13get_allocatorEv(%"class.std::allocator.7"* sret %7, %"struct.std::_Vector_base.6"* %11) #3
  call void @_ZNSt6vectorIlSaIlEEC2ERKS0_(%"class.std::vector.5"* %6, %"class.std::allocator.7"* dereferenceable(1) %7) #3
  call void @_ZNSaIlED2Ev(%"class.std::allocator.7"* %7) #3
  %12 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %12, i32 0, i32 0
  %14 = bitcast %"class.std::vector.5"* %6 to %"struct.std::_Vector_base.6"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %14, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %13, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* dereferenceable(24) %15) #3
  %16 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %16, i32 0, i32 0
  %18 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %19 = bitcast %"class.std::vector.5"* %18 to %"struct.std::_Vector_base.6"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %17, %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* dereferenceable(24) %20) #3
  %21 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %22 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %21) #3
  %23 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %24 = bitcast %"class.std::vector.5"* %23 to %"struct.std::_Vector_base.6"*
  %25 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %24) #3
  invoke void @_ZSt15__alloc_on_moveISaIlEEvRT_S2_(%"class.std::allocator.7"* dereferenceable(1) %22, %"class.std::allocator.7"* dereferenceable(1) %25)
          to label %26 unwind label %27

; <label>:26:                                     ; preds = %2
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %6) #3
  ret void

; <label>:27:                                     ; preds = %2
  %28 = landingpad { i8*, i32 }
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %8, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %9, align 4
  call void @_ZNSt6vectorIlSaIlEED2Ev(%"class.std::vector.5"* %6) #3
  br label %31

; <label>:31:                                     ; preds = %27
  %32 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %32) #7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt12_Vector_baseIlSaIlEE13get_allocatorEv(%"class.std::allocator.7"* noalias sret, %"struct.std::_Vector_base.6"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.597
  %6 = load i32, i32* @y.598
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 388652735, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 388652735, label %18
    i32 664111226, label %38
    i32 -2048935107, label %57
    i32 -961728293, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 664111226, i32 -961728293
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %1, %"struct.std::_Vector_base.6"** %39, align 8
  %40 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %39, align 8
  %41 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %40) #3
  call void @_ZNSaIlEC2ERKS_(%"class.std::allocator.7"* %0, %"class.std::allocator.7"* dereferenceable(1) %41) #3
  %42 = load i32, i32* @x.597
  %43 = load i32, i32* @y.598
  %44 = add i32 %42, -1522877433
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1522877433
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -2048935107, i32 -961728293
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %1, %"struct.std::_Vector_base.6"** %59, align 8
  %60 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %59, align 8
  %61 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %60) #3
  call void @_ZNSaIlEC2ERKS_(%"class.std::allocator.7"* %0, %"class.std::allocator.7"* dereferenceable(1) %61) #3
  store i32 664111226, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEEC2ERKS0_(%"class.std::vector.5"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.599
  %6 = load i32, i32* @y.600
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -207769434, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -207769434, label %18
    i32 -1180544688, label %26
    i32 -1680432136, label %58
    i32 334279596, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1180544688, i32 334279596
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.5"*, align 8
  %28 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %27, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %28, align 8
  %29 = load %"class.std::vector.5"*, %"class.std::vector.5"** %27, align 8
  %30 = bitcast %"class.std::vector.5"* %29 to %"struct.std::_Vector_base.6"*
  %31 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %28, align 8
  call void @_ZNSt12_Vector_baseIlSaIlEEC2ERKS0_(%"struct.std::_Vector_base.6"* %30, %"class.std::allocator.7"* dereferenceable(1) %31) #3
  %32 = load i32, i32* @x.599
  %33 = load i32, i32* @y.600
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1680432136, i32 334279596
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::vector.5"*, align 8
  %61 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %60, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %61, align 8
  %62 = load %"class.std::vector.5"*, %"class.std::vector.5"** %60, align 8
  %63 = bitcast %"class.std::vector.5"* %62 to %"struct.std::_Vector_base.6"*
  %64 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %61, align 8
  call void @_ZNSt12_Vector_baseIlSaIlEEC2ERKS0_(%"struct.std::_Vector_base.6"* %63, %"class.std::allocator.7"* dereferenceable(1) %64) #3
  store i32 -1180544688, i32* %14
  br label %65

; <label>:65:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt15__alloc_on_moveISaIlEEvRT_S2_(%"class.std::allocator.7"* dereferenceable(1), %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %6 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  call void @_ZSt18__do_alloc_on_moveISaIlEEvRT_S2_St17integral_constantIbLb1EE(%"class.std::allocator.7"* dereferenceable(1) %6, %"class.std::allocator.7"* dereferenceable(1) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIlSaIlEEC2ERKS0_(%"struct.std::_Vector_base.6"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.6"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  call void @_ZNSt12_Vector_baseIlSaIlEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %6, %"class.std::allocator.7"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt18__do_alloc_on_moveISaIlEEvRT_S2_St17integral_constantIbLb1EE(%"class.std::allocator.7"* dereferenceable(1), %"class.std::allocator.7"* dereferenceable(1)) #5 comdat {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %5, align 8
  %6 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %5, align 8
  %7 = call dereferenceable(1) %"class.std::allocator.7"* @_ZSt4moveIRSaIlEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.7"* dereferenceable(1) %6) #3
  %8 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt10_Iter_baseIPSt6vectorIlSaIlEELb0EE7_S_baseES3_(%"class.std::vector.5"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.607
  %6 = load i32, i32* @y.608
  %7 = add i32 %5, 974445352
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 974445352
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -82837093, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -82837093, label %19
    i32 -1470442571, label %27
    i32 1873694020, label %57
    i32 -153541398, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1470442571, i32 -153541398
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  %29 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  store %"class.std::vector.5"* %29, %"class.std::vector.5"** %2
  %30 = load i32, i32* @x.607
  %31 = load i32, i32* @y.608
  %32 = sub i32 %30, 1202725430
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1202725430
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1873694020, i32 -153541398
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %60, align 8
  %61 = load %"class.std::vector.5"*, %"class.std::vector.5"** %60, align 8
  store i32 -1470442571, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt6vectorIlSaIlEES2_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_S9_RKS6_(%"class.std::vector.5"*, %"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %6, align 8
  %7 = alloca i32
  store i32 1675685832, i32* %7
  br label %8

; <label>:8:                                      ; preds = %3, %24
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 1675685832, label %11
    i32 1441165303, label %16
    i32 1663020923, label %20
    i32 81036671, label %23
  ]

; <label>:10:                                     ; preds = %8
  br label %24

; <label>:11:                                     ; preds = %8
  %12 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %13 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %14 = icmp ne %"class.std::vector.5"* %12, %13
  %15 = select i1 %14, i32 1441165303, i32 81036671
  store i32 %15, i32* %7
  br label %24

; <label>:16:                                     ; preds = %8
  %17 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %18 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %19 = call dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIlSaIlEEaSERKS1_(%"class.std::vector.5"* %18, %"class.std::vector.5"* dereferenceable(24) %17)
  store i32 1663020923, i32* %7
  br label %24

; <label>:20:                                     ; preds = %8
  %21 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %22 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %21, i32 1
  store %"class.std::vector.5"* %22, %"class.std::vector.5"** %4, align 8
  store i32 1675685832, i32* %7
  br label %24

; <label>:23:                                     ; preds = %8
  ret void

; <label>:24:                                     ; preds = %20, %16, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZNSt6vectorIlSaIlEEaSERKS1_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.std::vector.5"*
  %6 = alloca %"class.std::vector.5"*
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca %"class.std::vector.5"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64*, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %7, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %8, align 8
  %18 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  store %"class.std::vector.5"* %18, %"class.std::vector.5"** %6
  %19 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  store %"class.std::vector.5"* %19, %"class.std::vector.5"** %5
  %20 = alloca i32
  store i32 -679914233, i32* %20
  br label %21

; <label>:21:                                     ; preds = %2, %520
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -679914233, label %24
    i32 -2058683076, label %29
    i32 -261680186, label %45
    i32 1182632009, label %78
    i32 -2085670557, label %81
    i32 1141192406, label %148
    i32 -1356402531, label %176
    i32 378336818, label %207
    i32 76746418, label %210
    i32 165449480, label %238
    i32 1204930373, label %293
    i32 2124474691, label %294
    i32 584133136, label %310
    i32 -1299129996, label %366
    i32 1355107064, label %367
    i32 768572022, label %368
    i32 1061314661, label %384
    i32 1885027478, label %423
    i32 1318875386, label %424
    i32 280597758, label %426
    i32 -168556823, label %433
    i32 -391143712, label %438
    i32 -1063016925, label %466
    i32 -1262255653, label %508
  ]

; <label>:23:                                     ; preds = %21
  br label %520

; <label>:24:                                     ; preds = %21
  %25 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %26 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %27 = icmp ne %"class.std::vector.5"* %26, %25
  %28 = select i1 %27, i32 -2058683076, i32 1318875386
  store i32 %28, i32* %20
  br label %520

; <label>:29:                                     ; preds = %21
  %30 = load i32, i32* @x.611
  %31 = load i32, i32* @y.612
  %32 = sub i32 %30, -1023199540
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1023199540
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -261680186, i32 280597758
  store i32 %44, i32* %20
  br label %520

; <label>:45:                                     ; preds = %21
  %46 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %47 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %46) #3
  store i64 %47, i64* %9, align 8
  %48 = load i64, i64* %9, align 8
  %49 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %50 = call i64 @_ZNKSt6vectorIlSaIlEE8capacityEv(%"class.std::vector.5"* %49) #3
  %51 = icmp ugt i64 %48, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.611
  %53 = load i32, i32* @y.612
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1182632009, i32 280597758
  store i32 %77, i32* %20
  br label %520

; <label>:78:                                     ; preds = %21
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 -2085670557, i32 1141192406
  store i32 %80, i32* %20
  br label %520

; <label>:81:                                     ; preds = %21
  %82 = load i64, i64* %9, align 8
  %83 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %84 = call i64* @_ZNKSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"* %83) #3
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %11, i32 0, i32 0
  store i64* %84, i64** %85, align 8
  %86 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %87 = call i64* @_ZNKSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"* %86) #3
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %12, i32 0, i32 0
  store i64* %87, i64** %88, align 8
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %11, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %12, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %94 = call i64* @_ZNSt6vectorIlSaIlEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKlS1_EEEEPlmT_S9_(%"class.std::vector.5"* %93, i64 %82, i64* %90, i64* %92)
  store i64* %94, i64** %10, align 8
  %95 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %96 = bitcast %"class.std::vector.5"* %95 to %"struct.std::_Vector_base.6"*
  %97 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %96, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %97, i32 0, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %101 = bitcast %"class.std::vector.5"* %100 to %"struct.std::_Vector_base.6"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %102, i32 0, i32 1
  %104 = load i64*, i64** %103, align 8
  %105 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %106 = bitcast %"class.std::vector.5"* %105 to %"struct.std::_Vector_base.6"*
  %107 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %106) #3
  call void @_ZSt8_DestroyIPllEvT_S1_RSaIT0_E(i64* %99, i64* %104, %"class.std::allocator.7"* dereferenceable(1) %107)
  %108 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %109 = bitcast %"class.std::vector.5"* %108 to %"struct.std::_Vector_base.6"*
  %110 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %111 = bitcast %"class.std::vector.5"* %110 to %"struct.std::_Vector_base.6"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %112, i32 0, i32 0
  %114 = load i64*, i64** %113, align 8
  %115 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %116 = bitcast %"class.std::vector.5"* %115 to %"struct.std::_Vector_base.6"*
  %117 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %117, i32 0, i32 2
  %119 = load i64*, i64** %118, align 8
  %120 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %121 = bitcast %"class.std::vector.5"* %120 to %"struct.std::_Vector_base.6"*
  %122 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %121, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %122, i32 0, i32 0
  %124 = load i64*, i64** %123, align 8
  %125 = ptrtoint i64* %119 to i64
  %126 = ptrtoint i64* %124 to i64
  %127 = sub i64 %125, -2108389243334630021
  %128 = sub i64 %127, %126
  %129 = add i64 %128, -2108389243334630021
  %130 = sub i64 %125, %126
  %131 = sdiv exact i64 %129, 8
  call void @_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm(%"struct.std::_Vector_base.6"* %109, i64* %114, i64 %131)
  %132 = load i64*, i64** %10, align 8
  %133 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %134 = bitcast %"class.std::vector.5"* %133 to %"struct.std::_Vector_base.6"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %134, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %135, i32 0, i32 0
  store i64* %132, i64** %136, align 8
  %137 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %138 = bitcast %"class.std::vector.5"* %137 to %"struct.std::_Vector_base.6"*
  %139 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %138, i32 0, i32 0
  %140 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %139, i32 0, i32 0
  %141 = load i64*, i64** %140, align 8
  %142 = load i64, i64* %9, align 8
  %143 = getelementptr inbounds i64, i64* %141, i64 %142
  %144 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %145 = bitcast %"class.std::vector.5"* %144 to %"struct.std::_Vector_base.6"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %146, i32 0, i32 2
  store i64* %143, i64** %147, align 8
  store i32 768572022, i32* %20
  br label %520

; <label>:148:                                    ; preds = %21
  %149 = load i32, i32* @x.611
  %150 = load i32, i32* @y.612
  %151 = sub i32 %149, -1115856662
  %152 = sub i32 %151, 1
  %153 = add i32 %152, -1115856662
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = xor i1 %157, true
  %160 = xor i1 %158, true
  %161 = xor i1 false, true
  %162 = and i1 %159, false
  %163 = and i1 %157, %161
  %164 = and i1 %160, false
  %165 = and i1 %158, %161
  %166 = or i1 %162, %163
  %167 = or i1 %164, %165
  %168 = xor i1 %166, %167
  %169 = or i1 %159, %160
  %170 = xor i1 %169, true
  %171 = or i1 false, %161
  %172 = and i1 %170, %171
  %173 = or i1 %168, %172
  %174 = or i1 %157, %158
  %175 = select i1 %173, i32 -1356402531, i32 -168556823
  store i32 %175, i32* %20
  br label %520

; <label>:176:                                    ; preds = %21
  %177 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %178 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %177) #3
  %179 = load i64, i64* %9, align 8
  %180 = icmp uge i64 %178, %179
  store i1 %180, i1* %3
  %181 = load i32, i32* @x.611
  %182 = load i32, i32* @y.612
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  %206 = select i1 %204, i32 378336818, i32 -168556823
  store i32 %206, i32* %20
  br label %520

; <label>:207:                                    ; preds = %21
  %208 = load volatile i1, i1* %3
  %209 = select i1 %208, i32 76746418, i32 2124474691
  store i32 %209, i32* %20
  br label %520

; <label>:210:                                    ; preds = %21
  %211 = load i32, i32* @x.611
  %212 = load i32, i32* @y.612
  %213 = sub i32 %211, 1218475309
  %214 = sub i32 %213, 1
  %215 = add i32 %214, 1218475309
  %216 = sub i32 %211, 1
  %217 = mul i32 %211, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %212, 10
  %221 = xor i1 %219, true
  %222 = xor i1 %220, true
  %223 = xor i1 false, true
  %224 = and i1 %221, false
  %225 = and i1 %219, %223
  %226 = and i1 %222, false
  %227 = and i1 %220, %223
  %228 = or i1 %224, %225
  %229 = or i1 %226, %227
  %230 = xor i1 %228, %229
  %231 = or i1 %221, %222
  %232 = xor i1 %231, true
  %233 = or i1 false, %223
  %234 = and i1 %232, %233
  %235 = or i1 %230, %234
  %236 = or i1 %219, %220
  %237 = select i1 %235, i32 165449480, i32 -391143712
  store i32 %237, i32* %20
  br label %520

; <label>:238:                                    ; preds = %21
  %239 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %240 = call i64* @_ZNKSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"* %239) #3
  %241 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %14, i32 0, i32 0
  store i64* %240, i64** %241, align 8
  %242 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %243 = call i64* @_ZNKSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"* %242) #3
  %244 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %15, i32 0, i32 0
  store i64* %243, i64** %244, align 8
  %245 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %246 = call i64* @_ZNSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"* %245) #3
  %247 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %16, i32 0, i32 0
  store i64* %246, i64** %247, align 8
  %248 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %14, i32 0, i32 0
  %249 = load i64*, i64** %248, align 8
  %250 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %15, i32 0, i32 0
  %251 = load i64*, i64** %250, align 8
  %252 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %16, i32 0, i32 0
  %253 = load i64*, i64** %252, align 8
  %254 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEENS1_IPlS6_EEET0_T_SB_SA_(i64* %249, i64* %251, i64* %253)
  %255 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %13, i32 0, i32 0
  store i64* %254, i64** %255, align 8
  %256 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %257 = call i64* @_ZNSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"* %256) #3
  %258 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %17, i32 0, i32 0
  store i64* %257, i64** %258, align 8
  %259 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %260 = bitcast %"class.std::vector.5"* %259 to %"struct.std::_Vector_base.6"*
  %261 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %260) #3
  %262 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %13, i32 0, i32 0
  %263 = load i64*, i64** %262, align 8
  %264 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %17, i32 0, i32 0
  %265 = load i64*, i64** %264, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEElEvT_S7_RSaIT0_E(i64* %263, i64* %265, %"class.std::allocator.7"* dereferenceable(1) %261)
  %266 = load i32, i32* @x.611
  %267 = load i32, i32* @y.612
  %268 = sub i32 %266, -1973743646
  %269 = sub i32 %268, 1
  %270 = add i32 %269, -1973743646
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = xor i1 %274, true
  %277 = xor i1 %275, true
  %278 = xor i1 true, true
  %279 = and i1 %276, true
  %280 = and i1 %274, %278
  %281 = and i1 %277, true
  %282 = and i1 %275, %278
  %283 = or i1 %279, %280
  %284 = or i1 %281, %282
  %285 = xor i1 %283, %284
  %286 = or i1 %276, %277
  %287 = xor i1 %286, true
  %288 = or i1 true, %278
  %289 = and i1 %287, %288
  %290 = or i1 %285, %289
  %291 = or i1 %274, %275
  %292 = select i1 %290, i32 1204930373, i32 -391143712
  store i32 %292, i32* %20
  br label %520

; <label>:293:                                    ; preds = %21
  store i32 1355107064, i32* %20
  br label %520

; <label>:294:                                    ; preds = %21
  %295 = load i32, i32* @x.611
  %296 = load i32, i32* @y.612
  %297 = sub i32 %295, 1952217594
  %298 = sub i32 %297, 1
  %299 = add i32 %298, 1952217594
  %300 = sub i32 %295, 1
  %301 = mul i32 %295, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %296, 10
  %305 = and i1 %303, %304
  %306 = xor i1 %303, %304
  %307 = or i1 %305, %306
  %308 = or i1 %303, %304
  %309 = select i1 %307, i32 584133136, i32 -1063016925
  store i32 %309, i32* %20
  br label %520

; <label>:310:                                    ; preds = %21
  %311 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %312 = bitcast %"class.std::vector.5"* %311 to %"struct.std::_Vector_base.6"*
  %313 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %312, i32 0, i32 0
  %314 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %313, i32 0, i32 0
  %315 = load i64*, i64** %314, align 8
  %316 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %317 = bitcast %"class.std::vector.5"* %316 to %"struct.std::_Vector_base.6"*
  %318 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %317, i32 0, i32 0
  %319 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %318, i32 0, i32 0
  %320 = load i64*, i64** %319, align 8
  %321 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %322 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %321) #3
  %323 = getelementptr inbounds i64, i64* %320, i64 %322
  %324 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %325 = bitcast %"class.std::vector.5"* %324 to %"struct.std::_Vector_base.6"*
  %326 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %325, i32 0, i32 0
  %327 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %326, i32 0, i32 0
  %328 = load i64*, i64** %327, align 8
  %329 = call i64* @_ZSt4copyIPlS0_ET0_T_S2_S1_(i64* %315, i64* %323, i64* %328)
  %330 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %331 = bitcast %"class.std::vector.5"* %330 to %"struct.std::_Vector_base.6"*
  %332 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %331, i32 0, i32 0
  %333 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %332, i32 0, i32 0
  %334 = load i64*, i64** %333, align 8
  %335 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %336 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %335) #3
  %337 = getelementptr inbounds i64, i64* %334, i64 %336
  %338 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %339 = bitcast %"class.std::vector.5"* %338 to %"struct.std::_Vector_base.6"*
  %340 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %339, i32 0, i32 0
  %341 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %340, i32 0, i32 1
  %342 = load i64*, i64** %341, align 8
  %343 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %344 = bitcast %"class.std::vector.5"* %343 to %"struct.std::_Vector_base.6"*
  %345 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %344, i32 0, i32 0
  %346 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %345, i32 0, i32 1
  %347 = load i64*, i64** %346, align 8
  %348 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %349 = bitcast %"class.std::vector.5"* %348 to %"struct.std::_Vector_base.6"*
  %350 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %349) #3
  %351 = call i64* @_ZSt22__uninitialized_copy_aIPlS0_lET0_T_S2_S1_RSaIT1_E(i64* %337, i64* %342, i64* %347, %"class.std::allocator.7"* dereferenceable(1) %350)
  %352 = load i32, i32* @x.611
  %353 = load i32, i32* @y.612
  %354 = sub i32 0, 1
  %355 = add i32 %352, %354
  %356 = sub i32 %352, 1
  %357 = mul i32 %352, %355
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %353, 10
  %361 = and i1 %359, %360
  %362 = xor i1 %359, %360
  %363 = or i1 %361, %362
  %364 = or i1 %359, %360
  %365 = select i1 %363, i32 -1299129996, i32 -1063016925
  store i32 %365, i32* %20
  br label %520

; <label>:366:                                    ; preds = %21
  store i32 1355107064, i32* %20
  br label %520

; <label>:367:                                    ; preds = %21
  store i32 768572022, i32* %20
  br label %520

; <label>:368:                                    ; preds = %21
  %369 = load i32, i32* @x.611
  %370 = load i32, i32* @y.612
  %371 = sub i32 %369, 512081998
  %372 = sub i32 %371, 1
  %373 = add i32 %372, 512081998
  %374 = sub i32 %369, 1
  %375 = mul i32 %369, %373
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %370, 10
  %379 = and i1 %377, %378
  %380 = xor i1 %377, %378
  %381 = or i1 %379, %380
  %382 = or i1 %377, %378
  %383 = select i1 %381, i32 1061314661, i32 -1262255653
  store i32 %383, i32* %20
  br label %520

; <label>:384:                                    ; preds = %21
  %385 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %386 = bitcast %"class.std::vector.5"* %385 to %"struct.std::_Vector_base.6"*
  %387 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %386, i32 0, i32 0
  %388 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %387, i32 0, i32 0
  %389 = load i64*, i64** %388, align 8
  %390 = load i64, i64* %9, align 8
  %391 = getelementptr inbounds i64, i64* %389, i64 %390
  %392 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %393 = bitcast %"class.std::vector.5"* %392 to %"struct.std::_Vector_base.6"*
  %394 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %393, i32 0, i32 0
  %395 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %394, i32 0, i32 1
  store i64* %391, i64** %395, align 8
  %396 = load i32, i32* @x.611
  %397 = load i32, i32* @y.612
  %398 = sub i32 %396, -474802322
  %399 = sub i32 %398, 1
  %400 = add i32 %399, -474802322
  %401 = sub i32 %396, 1
  %402 = mul i32 %396, %400
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %397, 10
  %406 = xor i1 %404, true
  %407 = xor i1 %405, true
  %408 = xor i1 true, true
  %409 = and i1 %406, true
  %410 = and i1 %404, %408
  %411 = and i1 %407, true
  %412 = and i1 %405, %408
  %413 = or i1 %409, %410
  %414 = or i1 %411, %412
  %415 = xor i1 %413, %414
  %416 = or i1 %406, %407
  %417 = xor i1 %416, true
  %418 = or i1 true, %408
  %419 = and i1 %417, %418
  %420 = or i1 %415, %419
  %421 = or i1 %404, %405
  %422 = select i1 %420, i32 1885027478, i32 -1262255653
  store i32 %422, i32* %20
  br label %520

; <label>:423:                                    ; preds = %21
  store i32 1318875386, i32* %20
  br label %520

; <label>:424:                                    ; preds = %21
  %425 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  ret %"class.std::vector.5"* %425

; <label>:426:                                    ; preds = %21
  %427 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %428 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %427) #3
  store i64 %428, i64* %9, align 8
  %429 = load i64, i64* %9, align 8
  %430 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %431 = call i64 @_ZNKSt6vectorIlSaIlEE8capacityEv(%"class.std::vector.5"* %430) #3
  %432 = icmp ugt i64 %429, %431
  store i32 -261680186, i32* %20
  br label %520

; <label>:433:                                    ; preds = %21
  %434 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %435 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %434) #3
  %436 = load i64, i64* %9, align 8
  %437 = icmp uge i64 %435, %436
  store i32 -1356402531, i32* %20
  br label %520

; <label>:438:                                    ; preds = %21
  %439 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %440 = call i64* @_ZNKSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"* %439) #3
  %441 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %14, i32 0, i32 0
  store i64* %440, i64** %441, align 8
  %442 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %443 = call i64* @_ZNKSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"* %442) #3
  %444 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %15, i32 0, i32 0
  store i64* %443, i64** %444, align 8
  %445 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %446 = call i64* @_ZNSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"* %445) #3
  %447 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %16, i32 0, i32 0
  store i64* %446, i64** %447, align 8
  %448 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %14, i32 0, i32 0
  %449 = load i64*, i64** %448, align 8
  %450 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %15, i32 0, i32 0
  %451 = load i64*, i64** %450, align 8
  %452 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %16, i32 0, i32 0
  %453 = load i64*, i64** %452, align 8
  %454 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEENS1_IPlS6_EEET0_T_SB_SA_(i64* %449, i64* %451, i64* %453)
  %455 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %13, i32 0, i32 0
  store i64* %454, i64** %455, align 8
  %456 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %457 = call i64* @_ZNSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"* %456) #3
  %458 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %17, i32 0, i32 0
  store i64* %457, i64** %458, align 8
  %459 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %460 = bitcast %"class.std::vector.5"* %459 to %"struct.std::_Vector_base.6"*
  %461 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %460) #3
  %462 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %13, i32 0, i32 0
  %463 = load i64*, i64** %462, align 8
  %464 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %17, i32 0, i32 0
  %465 = load i64*, i64** %464, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEElEvT_S7_RSaIT0_E(i64* %463, i64* %465, %"class.std::allocator.7"* dereferenceable(1) %461)
  store i32 165449480, i32* %20
  br label %520

; <label>:466:                                    ; preds = %21
  %467 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %468 = bitcast %"class.std::vector.5"* %467 to %"struct.std::_Vector_base.6"*
  %469 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %468, i32 0, i32 0
  %470 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %469, i32 0, i32 0
  %471 = load i64*, i64** %470, align 8
  %472 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %473 = bitcast %"class.std::vector.5"* %472 to %"struct.std::_Vector_base.6"*
  %474 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %473, i32 0, i32 0
  %475 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %474, i32 0, i32 0
  %476 = load i64*, i64** %475, align 8
  %477 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %478 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %477) #3
  %479 = getelementptr inbounds i64, i64* %476, i64 %478
  %480 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %481 = bitcast %"class.std::vector.5"* %480 to %"struct.std::_Vector_base.6"*
  %482 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %481, i32 0, i32 0
  %483 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %482, i32 0, i32 0
  %484 = load i64*, i64** %483, align 8
  %485 = call i64* @_ZSt4copyIPlS0_ET0_T_S2_S1_(i64* %471, i64* %479, i64* %484)
  %486 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %487 = bitcast %"class.std::vector.5"* %486 to %"struct.std::_Vector_base.6"*
  %488 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %487, i32 0, i32 0
  %489 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %488, i32 0, i32 0
  %490 = load i64*, i64** %489, align 8
  %491 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %492 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %491) #3
  %493 = getelementptr inbounds i64, i64* %490, i64 %492
  %494 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %495 = bitcast %"class.std::vector.5"* %494 to %"struct.std::_Vector_base.6"*
  %496 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %495, i32 0, i32 0
  %497 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %496, i32 0, i32 1
  %498 = load i64*, i64** %497, align 8
  %499 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %500 = bitcast %"class.std::vector.5"* %499 to %"struct.std::_Vector_base.6"*
  %501 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %500, i32 0, i32 0
  %502 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %501, i32 0, i32 1
  %503 = load i64*, i64** %502, align 8
  %504 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %505 = bitcast %"class.std::vector.5"* %504 to %"struct.std::_Vector_base.6"*
  %506 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %505) #3
  %507 = call i64* @_ZSt22__uninitialized_copy_aIPlS0_lET0_T_S2_S1_RSaIT1_E(i64* %493, i64* %498, i64* %503, %"class.std::allocator.7"* dereferenceable(1) %506)
  store i32 584133136, i32* %20
  br label %520

; <label>:508:                                    ; preds = %21
  %509 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %510 = bitcast %"class.std::vector.5"* %509 to %"struct.std::_Vector_base.6"*
  %511 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %510, i32 0, i32 0
  %512 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %511, i32 0, i32 0
  %513 = load i64*, i64** %512, align 8
  %514 = load i64, i64* %9, align 8
  %515 = getelementptr inbounds i64, i64* %513, i64 %514
  %516 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %517 = bitcast %"class.std::vector.5"* %516 to %"struct.std::_Vector_base.6"*
  %518 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %517, i32 0, i32 0
  %519 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %518, i32 0, i32 1
  store i64* %515, i64** %519, align 8
  store i32 1061314661, i32* %20
  br label %520

; <label>:520:                                    ; preds = %508, %466, %438, %433, %426, %423, %384, %368, %367, %366, %310, %294, %293, %238, %210, %207, %176, %148, %81, %78, %45, %29, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIlSaIlEE8capacityEv(%"class.std::vector.5"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.613
  %6 = load i32, i32* @y.614
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 342928729, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %165
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 342928729, label %18
    i32 1036714294, label %38
    i32 170771554, label %83
    i32 356634505, label %85
  ]

; <label>:17:                                     ; preds = %15
  br label %165

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1036714294, i32 356634505
  store i32 %37, i32* %14
  br label %165

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %39, align 8
  %40 = load %"class.std::vector.5"*, %"class.std::vector.5"** %39, align 8
  %41 = bitcast %"class.std::vector.5"* %40 to %"struct.std::_Vector_base.6"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %42, i32 0, i32 2
  %44 = load i64*, i64** %43, align 8
  %45 = bitcast %"class.std::vector.5"* %40 to %"struct.std::_Vector_base.6"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = ptrtoint i64* %44 to i64
  %50 = ptrtoint i64* %48 to i64
  %51 = sub i64 %49, -2665529782624295465
  %52 = sub i64 %51, %50
  %53 = add i64 %52, -2665529782624295465
  %54 = sub i64 %49, %50
  %55 = sdiv exact i64 %53, 8
  store i64 %55, i64* %2
  %56 = load i32, i32* @x.613
  %57 = load i32, i32* @y.614
  %58 = sub i32 %56, -707511543
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -707511543
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 170771554, i32 356634505
  store i32 %82, i32* %14
  br label %165

; <label>:83:                                     ; preds = %15
  %84 = load volatile i64, i64* %2
  ret i64 %84

; <label>:85:                                     ; preds = %15
  %86 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %86, align 8
  %87 = load %"class.std::vector.5"*, %"class.std::vector.5"** %86, align 8
  %88 = bitcast %"class.std::vector.5"* %87 to %"struct.std::_Vector_base.6"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %89, i32 0, i32 2
  %91 = load i64*, i64** %90, align 8
  %92 = bitcast %"class.std::vector.5"* %87 to %"struct.std::_Vector_base.6"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %93, i32 0, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = ptrtoint i64* %91 to i64
  %97 = ptrtoint i64* %95 to i64
  %98 = add i64 0, -7528309213394008241
  %99 = sub i64 %98, %96
  %100 = sub i64 %99, -7528309213394008241
  %101 = sub i64 0, %96
  %102 = add i64 %100, -8175587111966741603
  %103 = add i64 %102, %97
  %104 = sub i64 %103, -8175587111966741603
  %105 = add i64 %100, %97
  %106 = shl i64 %96, %97
  %107 = sub i64 0, %96
  %108 = add i64 0, %107
  %109 = sub i64 0, %96
  %110 = sub i64 0, %108
  %111 = sub i64 0, %97
  %112 = add i64 %110, %111
  %113 = sub i64 0, %112
  %114 = add i64 %108, %97
  %115 = shl i64 %96, %97
  %116 = shl i64 %96, %97
  %117 = shl i64 %96, %97
  %118 = sub i64 %96, -1940453047870015388
  %119 = sub i64 %118, %97
  %120 = add i64 %119, -1940453047870015388
  %121 = sub i64 %96, %97
  %122 = sub i64 0, -2250709718120001631
  %123 = sub i64 %122, %120
  %124 = add i64 %123, -2250709718120001631
  %125 = sub i64 0, %120
  %126 = sub i64 0, %124
  %127 = sub i64 0, 8
  %128 = add i64 %126, %127
  %129 = sub i64 0, %128
  %130 = add i64 %124, 8
  %131 = shl i64 %120, 8
  %132 = add i64 0, -7136617236549699487
  %133 = sub i64 %132, %120
  %134 = sub i64 %133, -7136617236549699487
  %135 = sub i64 0, %120
  %136 = sub i64 0, %134
  %137 = sub i64 0, 8
  %138 = add i64 %136, %137
  %139 = sub i64 0, %138
  %140 = add i64 %134, 8
  %141 = sub i64 0, %120
  %142 = add i64 0, %141
  %143 = sub i64 0, %120
  %144 = sub i64 0, %142
  %145 = sub i64 0, 8
  %146 = add i64 %144, %145
  %147 = sub i64 0, %146
  %148 = add i64 %142, 8
  %149 = add i64 %120, -5059071959580012970
  %150 = sub i64 %149, 8
  %151 = sub i64 %150, -5059071959580012970
  %152 = sub i64 %120, 8
  %153 = mul i64 %151, 8
  %154 = sub i64 0, %120
  %155 = add i64 0, %154
  %156 = sub i64 0, %120
  %157 = sub i64 0, 8
  %158 = sub i64 %155, %157
  %159 = add i64 %155, 8
  %160 = sub i64 0, 8
  %161 = add i64 %120, %160
  %162 = sub i64 %120, 8
  %163 = mul i64 %161, 8
  %164 = sdiv exact i64 %120, 8
  store i32 1036714294, i32* %14
  br label %165

; <label>:165:                                    ; preds = %85, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt6vectorIlSaIlEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKlS1_EEEEPlmT_S9_(%"class.std::vector.5"*, i64, i64*, i64*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %5, i32 0, i32 0
  store i64* %2, i64** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %6, i32 0, i32 0
  store i64* %3, i64** %15, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %7, align 8
  store i64 %1, i64* %8, align 8
  %16 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %17 = bitcast %"class.std::vector.5"* %16 to %"struct.std::_Vector_base.6"*
  %18 = load i64, i64* %8, align 8
  %19 = call i64* @_ZNSt12_Vector_baseIlSaIlEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %17, i64 %18)
  store i64* %19, i64** %9, align 8
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load i64*, i64** %9, align 8
  %25 = bitcast %"class.std::vector.5"* %16 to %"struct.std::_Vector_base.6"*
  %26 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %25) #3
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %11, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = invoke i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEPllET0_T_SA_S9_RSaIT1_E(i64* %28, i64* %30, i64* %24, %"class.std::allocator.7"* dereferenceable(1) %26)
          to label %32 unwind label %34

; <label>:32:                                     ; preds = %4
  %33 = load i64*, i64** %9, align 8
  ret i64* %33

; <label>:34:                                     ; preds = %4
  %35 = landingpad { i8*, i32 }
          catch i8* null
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %12, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %13, align 4
  br label %38

; <label>:38:                                     ; preds = %34
  %39 = load i8*, i8** %12, align 8
  %40 = call i8* @__cxa_begin_catch(i8* %39) #3
  %41 = bitcast %"class.std::vector.5"* %16 to %"struct.std::_Vector_base.6"*
  %42 = load i64*, i64** %9, align 8
  %43 = load i64, i64* %8, align 8
  invoke void @_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm(%"struct.std::_Vector_base.6"* %41, i64* %42, i64 %43)
          to label %44 unwind label %45

; <label>:44:                                     ; preds = %38
  invoke void @__cxa_rethrow() #12
          to label %130 unwind label %45

; <label>:45:                                     ; preds = %44, %38
  %46 = load i32, i32* @x.615
  %47 = load i32, i32* @y.616
  %48 = add i32 %46, -317835518
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -317835518
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %131

; <label>:60:                                     ; preds = %45, %131
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %12, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %13, align 4
  %64 = load i32, i32* @x.615
  %65 = load i32, i32* @y.616
  %66 = sub i32 %64, 1508203608
  %67 = sub i32 %66, 1
  %68 = add i32 %67, 1508203608
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %131

; <label>:90:                                     ; preds = %60
  invoke void @__cxa_end_catch()
          to label %91 unwind label %127

; <label>:91:                                     ; preds = %90
  %92 = load i32, i32* @x.615
  %93 = load i32, i32* @y.616
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %135

; <label>:105:                                    ; preds = %91, %135
  %106 = load i32, i32* @x.615
  %107 = load i32, i32* @y.616
  %108 = sub i32 %106, 272498404
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 272498404
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  br i1 %118, label %120, label %135

; <label>:120:                                    ; preds = %105
  br label %122
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:122:                                    ; preds = %120
  %123 = load i8*, i8** %12, align 8
  %124 = load i32, i32* %13, align 4
  %125 = insertvalue { i8*, i32 } undef, i8* %123, 0
  %126 = insertvalue { i8*, i32 } %125, i32 %124, 1
  resume { i8*, i32 } %126

; <label>:127:                                    ; preds = %90
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  call void @__clang_call_terminate(i8* %129) #7
  unreachable

; <label>:130:                                    ; preds = %44
  unreachable

; <label>:131:                                    ; preds = %60, %45
  %132 = landingpad { i8*, i32 }
          cleanup
  %133 = extractvalue { i8*, i32 } %132, 0
  store i8* %133, i8** %12, align 8
  %134 = extractvalue { i8*, i32 } %132, 1
  store i32 %134, i32* %13, align 4
  br label %60

; <label>:135:                                    ; preds = %105, %91
  br label %105
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEElEvT_S7_RSaIT0_E(i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %7, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEEvT_S7_(i64* %16, i64* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEENS1_IPlS6_EEET0_T_SB_SA_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.619
  %8 = load i32, i32* @y.620
  %9 = add i32 %7, 556737101
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 556737101
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 2045175831, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %132
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 2045175831, label %21
    i32 1661199789, label %29
    i32 -709336736, label %93
    i32 831360147, label %95
  ]

; <label>:20:                                     ; preds = %18
  br label %132

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1661199789, i32 831360147
  store i32 %28, i32* %17
  br label %132

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %31, i32 0, i32 0
  store i64* %0, i64** %39, align 8
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %32, i32 0, i32 0
  store i64* %1, i64** %40, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %33, i32 0, i32 0
  store i64* %2, i64** %41, align 8
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %35 to i8*
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %35, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %45)
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %34, i32 0, i32 0
  store i64* %46, i64** %47, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %37 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %37, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %51)
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %36, i32 0, i32 0
  store i64* %52, i64** %53, align 8
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %38 to i8*
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %34, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %36, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %38, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEENS1_IPlS6_EEET1_T0_SB_SA_(i64* %57, i64* %59, i64* %61)
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %30, i32 0, i32 0
  store i64* %62, i64** %63, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %30, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  store i64* %65, i64** %4
  %66 = load i32, i32* @x.619
  %67 = load i32, i32* @y.620
  %68 = add i32 %66, -787136066
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, -787136066
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 -709336736, i32 831360147
  store i32 %92, i32* %17
  br label %132

; <label>:93:                                     ; preds = %18
  %94 = load volatile i64*, i64** %4
  ret i64* %94

; <label>:95:                                     ; preds = %18
  %96 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %97 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %98 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %99 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %100 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %101 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %102 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %103 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %104 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %97, i32 0, i32 0
  store i64* %0, i64** %105, align 8
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %98, i32 0, i32 0
  store i64* %1, i64** %106, align 8
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %99, i32 0, i32 0
  store i64* %2, i64** %107, align 8
  %108 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %101 to i8*
  %109 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 8, i32 8, i1 false)
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %101, i32 0, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %111)
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %100, i32 0, i32 0
  store i64* %112, i64** %113, align 8
  %114 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %103 to i8*
  %115 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 8, i32 8, i1 false)
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %103, i32 0, i32 0
  %117 = load i64*, i64** %116, align 8
  %118 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %117)
  %119 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %102, i32 0, i32 0
  store i64* %118, i64** %119, align 8
  %120 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %104 to i8*
  %121 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %120, i8* %121, i64 8, i32 8, i1 false)
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %100, i32 0, i32 0
  %123 = load i64*, i64** %122, align 8
  %124 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %102, i32 0, i32 0
  %125 = load i64*, i64** %124, align 8
  %126 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %104, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEENS1_IPlS6_EEET1_T0_SB_SA_(i64* %123, i64* %125, i64* %127)
  %129 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %96, i32 0, i32 0
  store i64* %128, i64** %129, align 8
  %130 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %96, i32 0, i32 0
  %131 = load i64*, i64** %130, align 8
  store i32 1661199789, i32* %17
  br label %132

; <label>:132:                                    ; preds = %95, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIlSaIlEE5beginEv(%"class.std::vector.5"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %5 = bitcast %"class.std::vector.5"* %4 to %"struct.std::_Vector_base.6"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.27"* %2, i64** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %2, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIlSaIlEE3endEv(%"class.std::vector.5"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %3 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  %4 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %5 = bitcast %"class.std::vector.5"* %4 to %"struct.std::_Vector_base.6"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.27"* %2, i64** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %2, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIPlS0_ET0_T_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__miter_baseIPlENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__miter_baseIPlENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt14__copy_move_a2ILb0EPlS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aIPlS0_lET0_T_S2_S1_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.627
  %9 = load i32, i32* @y.628
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 541488218, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 541488218, label %21
    i32 -609972191, label %29
    i32 665968143, label %65
    i32 -1824238513, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -609972191, i32 -1824238513
  store i32 %28, i32* %17
  br label %76

; <label>:29:                                     ; preds = %18
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca %"class.std::allocator.7"*, align 8
  store i64* %0, i64** %30, align 8
  store i64* %1, i64** %31, align 8
  store i64* %2, i64** %32, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %33, align 8
  %34 = load i64*, i64** %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = load i64*, i64** %32, align 8
  %37 = call i64* @_ZSt18uninitialized_copyIPlS0_ET0_T_S2_S1_(i64* %34, i64* %35, i64* %36)
  store i64* %37, i64** %5
  %38 = load i32, i32* @x.627
  %39 = load i32, i32* @y.628
  %40 = sub i32 %38, -1522644954
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1522644954
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 665968143, i32 -1824238513
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i64*, i64** %5
  ret i64* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i64*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i64*, align 8
  %71 = alloca %"class.std::allocator.7"*, align 8
  store i64* %0, i64** %68, align 8
  store i64* %1, i64** %69, align 8
  store i64* %2, i64** %70, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %71, align 8
  %72 = load i64*, i64** %68, align 8
  %73 = load i64*, i64** %69, align 8
  %74 = load i64*, i64** %70, align 8
  %75 = call i64* @_ZSt18uninitialized_copyIPlS0_ET0_T_S2_S1_(i64* %72, i64* %73, i64* %74)
  store i32 -609972191, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEEvT_S7_(i64*, i64*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %3, i32 0, i32 0
  store i64* %0, i64** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  store i64* %1, i64** %8, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %5 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %6 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %6, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEEEvT_S9_(i64* %14, i64* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEEEvT_S9_(i64*, i64*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %3, i32 0, i32 0
  store i64* %0, i64** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  store i64* %1, i64** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEENS1_IPlS6_EEET1_T0_SB_SA_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %8 = alloca i64*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %5, i32 0, i32 0
  store i64* %0, i64** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %6, i32 0, i32 0
  store i64* %1, i64** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %7, i32 0, i32 0
  store i64* %2, i64** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKlSt6vectorIlSaIlEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %11, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64* %28)
  %30 = call i64* @_ZSt13__copy_move_aILb0EPKlPlET1_T0_S4_S3_(i64* %19, i64* %24, i64* %29)
  store i64* %30, i64** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.27"* %4, i64** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  ret i64* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEELb1EE7_S_baseES6_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.27"*, i64** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27"*, align 8
  %4 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.27"* %0, %"class.__gnu_cxx::__normal_iterator.27"** %3, align 8
  store i64** %1, i64*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.27"*, %"class.__gnu_cxx::__normal_iterator.27"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  %7 = load i64**, i64*** %4, align 8
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEEELb1EE7_S_baseES6_(i64*) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.639
  %6 = load i32, i32* @y.640
  %7 = sub i32 %5, 929137288
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 929137288
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1172025512, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1172025512, label %19
    i32 -850229735, label %27
    i32 -1059678510, label %59
    i32 975816361, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -850229735, i32 975816361
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %28, i32 0, i32 0
  store i64* %0, i64** %29, align 8
  %30 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.27"* %28) #3
  %31 = load i64*, i64** %30, align 8
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.639
  %33 = load i32, i32* @y.640
  %34 = add i32 %32, 1566833911
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1566833911
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1059678510, i32 975816361
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %62, i32 0, i32 0
  store i64* %0, i64** %63, align 8
  %64 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.27"* %62) #3
  %65 = load i64*, i64** %64, align 8
  store i32 -850229735, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPlSt6vectorIlSaIlEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.27"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.27"* %0, %"class.__gnu_cxx::__normal_iterator.27"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.27"*, %"class.__gnu_cxx::__normal_iterator.27"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EPlS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb0EPlS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIPlENSt11_Miter_baseIT_E13iterator_typeES2_(i64*) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPlLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPlS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #5 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyIPlS0_ET0_T_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPlS2_EET0_T_S4_S3_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPlS2_EET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call i64* @_ZSt4copyIPlS0_ET0_T_S2_S1_(i64* %7, i64* %8, i64* %9)
  ret i64* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt20uninitialized_fill_nIPSt6vectorIlSaIlEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.5"*, i64, %"class.std::vector.5"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %11 = call %"class.std::vector.5"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIlSaIlEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.5"* %8, i64 %9, %"class.std::vector.5"* dereferenceable(24) %10)
  ret %"class.std::vector.5"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIlSaIlEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.5"*, i64, %"class.std::vector.5"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.5"*, align 8
  %7 = alloca %"class.std::vector.5"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.5"* %2, %"class.std::vector.5"** %6, align 8
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  store %"class.std::vector.5"* %10, %"class.std::vector.5"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %102, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %150

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @x.655
  %16 = load i32, i32* @y.656
  %17 = add i32 %15, 1730063439
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, 1730063439
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %209

; <label>:29:                                     ; preds = %14, %209
  %30 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %31 = call %"class.std::vector.5"* @_ZSt11__addressofISt6vectorIlSaIlEEEPT_RS3_(%"class.std::vector.5"* dereferenceable(24) %30) #3
  %32 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  %33 = load i32, i32* @x.655
  %34 = load i32, i32* @y.656
  %35 = add i32 %33, -392048112
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -392048112
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %209

; <label>:59:                                     ; preds = %29
  invoke void @_ZSt10_ConstructISt6vectorIlSaIlEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.5"* %31, %"class.std::vector.5"* dereferenceable(24) %32)
          to label %60 unwind label %111

; <label>:60:                                     ; preds = %59
  %61 = load i32, i32* @x.655
  %62 = load i32, i32* @y.656
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %213

; <label>:86:                                     ; preds = %60, %213
  %87 = load i32, i32* @x.655
  %88 = load i32, i32* @y.656
  %89 = add i32 %87, -2132434372
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -2132434372
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  br i1 %99, label %101, label %213

; <label>:101:                                    ; preds = %86
  br label %102

; <label>:102:                                    ; preds = %101
  %103 = load i64, i64* %5, align 8
  %104 = sub i64 0, %103
  %105 = sub i64 0, -1
  %106 = add i64 %104, %105
  %107 = sub i64 0, %106
  %108 = add i64 %103, -1
  store i64 %107, i64* %5, align 8
  %109 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %110 = getelementptr inbounds %"class.std::vector.5", %"class.std::vector.5"* %109, i32 1
  store %"class.std::vector.5"* %110, %"class.std::vector.5"** %7, align 8
  br label %11

; <label>:111:                                    ; preds = %59
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %8, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %9, align 4
  br label %115

; <label>:115:                                    ; preds = %111
  %116 = load i32, i32* @x.655
  %117 = load i32, i32* @y.656
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  br i1 %127, label %129, label %214

; <label>:129:                                    ; preds = %115, %214
  %130 = load i8*, i8** %8, align 8
  %131 = call i8* @__cxa_begin_catch(i8* %130) #3
  %132 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %133 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %134 = load i32, i32* @x.655
  %135 = load i32, i32* @y.656
  %136 = add i32 %134, -1274426378
  %137 = sub i32 %136, 1
  %138 = sub i32 %137, -1274426378
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  br i1 %146, label %148, label %214

; <label>:148:                                    ; preds = %129
  invoke void @_ZSt8_DestroyIPSt6vectorIlSaIlEEEvT_S4_(%"class.std::vector.5"* %132, %"class.std::vector.5"* %133)
          to label %149 unwind label %194

; <label>:149:                                    ; preds = %148
  invoke void @__cxa_rethrow() #12
          to label %208 unwind label %194

; <label>:150:                                    ; preds = %11
  %151 = load i32, i32* @x.655
  %152 = load i32, i32* @y.656
  %153 = sub i32 %151, -37980178
  %154 = sub i32 %153, 1
  %155 = add i32 %154, -37980178
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 false, true
  %164 = and i1 %161, false
  %165 = and i1 %159, %163
  %166 = and i1 %162, false
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 false, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %219

; <label>:177:                                    ; preds = %150, %219
  %178 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %179 = load i32, i32* @x.655
  %180 = load i32, i32* @y.656
  %181 = add i32 %179, 701235315
  %182 = sub i32 %181, 1
  %183 = sub i32 %182, 701235315
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = and i1 %187, %188
  %190 = xor i1 %187, %188
  %191 = or i1 %189, %190
  %192 = or i1 %187, %188
  br i1 %191, label %193, label %219

; <label>:193:                                    ; preds = %177
  ret %"class.std::vector.5"* %178

; <label>:194:                                    ; preds = %149, %148
  %195 = landingpad { i8*, i32 }
          cleanup
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %8, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %198 unwind label %205

; <label>:198:                                    ; preds = %194
  br label %200
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:200:                                    ; preds = %198
  %201 = load i8*, i8** %8, align 8
  %202 = load i32, i32* %9, align 4
  %203 = insertvalue { i8*, i32 } undef, i8* %201, 0
  %204 = insertvalue { i8*, i32 } %203, i32 %202, 1
  resume { i8*, i32 } %204

; <label>:205:                                    ; preds = %194
  %206 = landingpad { i8*, i32 }
          catch i8* null
  %207 = extractvalue { i8*, i32 } %206, 0
  call void @__clang_call_terminate(i8* %207) #7
  unreachable

; <label>:208:                                    ; preds = %149
  unreachable

; <label>:209:                                    ; preds = %29, %14
  %210 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  %211 = call %"class.std::vector.5"* @_ZSt11__addressofISt6vectorIlSaIlEEEPT_RS3_(%"class.std::vector.5"* dereferenceable(24) %210) #3
  %212 = load %"class.std::vector.5"*, %"class.std::vector.5"** %6, align 8
  br label %29

; <label>:213:                                    ; preds = %86, %60
  br label %86

; <label>:214:                                    ; preds = %129, %115
  %215 = load i8*, i8** %8, align 8
  %216 = call i8* @__cxa_begin_catch(i8* %215) #3
  %217 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %218 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  br label %129

; <label>:219:                                    ; preds = %177, %150
  %220 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  br label %177
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIlSaIlEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.5"*, %"class.std::vector.5"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.5"*
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardIRKSt6vectorIlSaIlEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.5"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIlSaIlEEC2ERKS1_(%"class.std::vector.5"* %7, %"class.std::vector.5"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.5"* @_ZSt7forwardIRKSt6vectorIlSaIlEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.5"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.659
  %6 = load i32, i32* @y.660
  %7 = sub i32 %5, 18047698
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 18047698
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2048430432, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2048430432, label %19
    i32 -690460496, label %27
    i32 -799711704, label %45
    i32 -2002013731, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -690460496, i32 -2002013731
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  %29 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  store %"class.std::vector.5"* %29, %"class.std::vector.5"** %2
  %30 = load i32, i32* @x.659
  %31 = load i32, i32* @y.660
  %32 = sub i32 %30, -1848409357
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1848409357
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -799711704, i32 -2002013731
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %48, align 8
  %49 = load %"class.std::vector.5"*, %"class.std::vector.5"** %48, align 8
  store i32 -690460496, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IlSaIlEESaIS1_EE8max_sizeEv(%"class.std::vector.14"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %2, align 8
  %3 = load %"class.std::vector.14"*, %"class.std::vector.14"** %2, align 8
  %4 = bitcast %"class.std::vector.14"* %3 to %"struct.std::_Vector_base.15"*
  %5 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNKSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIlSaIlEEEE8max_sizeERKS3_(%"class.std::allocator.16"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIlSaIlEEEE8max_sizeERKS3_(%"class.std::allocator.16"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %2, align 8
  %3 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %2, align 8
  %4 = bitcast %"class.std::allocator.16"* %3 to %"class.__gnu_cxx::new_allocator.17"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.16"* @_ZNKSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.16"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.665
  %6 = load i32, i32* @y.666
  %7 = add i32 %5, 87175913
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 87175913
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2035571371, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2035571371, label %19
    i32 1945867827, label %39
    i32 843276120, label %58
    i32 237682737, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1945867827, i32 237682737
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %40, align 8
  %41 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %42 to %"class.std::allocator.16"*
  store %"class.std::allocator.16"* %43, %"class.std::allocator.16"** %2
  %44 = load i32, i32* @x.665
  %45 = load i32, i32* @y.666
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 843276120, i32 237682737
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.16"*, %"class.std::allocator.16"** %2
  ret %"class.std::allocator.16"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %61, align 8
  %62 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %63 to %"class.std::allocator.16"*
  store i32 1945867827, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.667
  %5 = load i32, i32* @y.668
  %6 = sub i32 %4, 2052942743
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 2052942743
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1777863575, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1777863575, label %18
    i32 1484619453, label %38
    i32 -1739626383, label %68
    i32 152933461, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1484619453, i32 152933461
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %39, align 8
  %41 = load i32, i32* @x.667
  %42 = load i32, i32* @y.668
  %43 = sub i32 %41, -268061316
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -268061316
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1739626383, i32 152933461
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %70, align 8
  store i32 1484619453, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZNSt16allocator_traitsISaISt6vectorIlSaIlEEEE8allocateERS3_m(%"class.std::allocator.16"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.16"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %3, align 8
  %6 = bitcast %"class.std::allocator.16"* %5 to %"class.__gnu_cxx::new_allocator.17"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.5"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"* %6, i64 %7, i8* null)
  ret %"class.std::vector.5"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.671
  %9 = load i32, i32* @y.672
  %10 = sub i32 %8, 641970234
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 641970234
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1533453288, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %84
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1533453288, label %22
    i32 1502512860, label %30
    i32 -658126436, label %66
    i32 -655167221, label %69
    i32 -323322436, label %70
    i32 -655806955, label %76
  ]

; <label>:21:                                     ; preds = %19
  br label %84

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1502512860, i32 -655806955
  store i32 %29, i32* %18
  br label %84

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  %33 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %31, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %33, align 8
  %35 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %31, align 8
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %35) #3
  %39 = icmp ugt i64 %37, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.671
  %41 = load i32, i32* @y.672
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -658126436, i32 -655806955
  store i32 %65, i32* %18
  br label %84

; <label>:66:                                     ; preds = %19
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -655167221, i32 -323322436
  store i32 %68, i32* %18
  br label %84

; <label>:69:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:70:                                     ; preds = %19
  %71 = load volatile i64*, i64** %5
  %72 = load i64, i64* %71, align 8
  %73 = mul i64 %72, 24
  %74 = call i8* @_Znwm(i64 %73)
  %75 = bitcast i8* %74 to %"class.std::vector.5"*
  ret %"class.std::vector.5"* %75

; <label>:76:                                     ; preds = %19
  %77 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i8* %2, i8** %79, align 8
  %80 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %80) #3
  %83 = icmp ugt i64 %81, %82
  store i32 1502512860, i32* %18
  br label %84

; <label>:84:                                     ; preds = %76, %66, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.5"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIlSaIlEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.5"*) #0 comdat {
  %2 = alloca %"class.std::vector.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.673
  %6 = load i32, i32* @y.674
  %7 = add i32 %5, 687296544
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 687296544
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 211357406, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 211357406, label %19
    i32 155567811, label %39
    i32 139854469, label %71
    i32 2064466625, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 155567811, i32 2064466625
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.26", align 8
  %41 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %41, align 8
  %42 = load %"class.std::vector.5"*, %"class.std::vector.5"** %41, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIlSaIlEEEC2ES3_(%"class.std::move_iterator.26"* %40, %"class.std::vector.5"* %42)
  %43 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %40, i32 0, i32 0
  %44 = load %"class.std::vector.5"*, %"class.std::vector.5"** %43, align 8
  store %"class.std::vector.5"* %44, %"class.std::vector.5"** %2
  %45 = load i32, i32* @x.673
  %46 = load i32, i32* @y.674
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 139854469, i32 2064466625
  store i32 %70, i32* %15
  br label %79

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %2
  ret %"class.std::vector.5"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::move_iterator.26", align 8
  %75 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %75, align 8
  %76 = load %"class.std::vector.5"*, %"class.std::vector.5"** %75, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIlSaIlEEEC2ES3_(%"class.std::move_iterator.26"* %74, %"class.std::vector.5"* %76)
  %77 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %74, i32 0, i32 0
  %78 = load %"class.std::vector.5"*, %"class.std::vector.5"** %77, align 8
  store i32 155567811, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIlSaIlEEEE10deallocateERS3_PS2_m(%"class.std::allocator.16"* dereferenceable(1), %"class.std::vector.5"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.16"*, align 8
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %4, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %4, align 8
  %8 = bitcast %"class.std::allocator.16"* %7 to %"class.__gnu_cxx::new_allocator.17"*
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.17"* %8, %"class.std::vector.5"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.17"*, %"class.std::vector.5"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.677
  %7 = load i32, i32* @y.678
  %8 = sub i32 %6, 49982241
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 49982241
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1916981337, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %81
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1916981337, label %20
    i32 -1084349507, label %40
    i32 -917947095, label %73
    i32 -1550635441, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %81

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1084349507, i32 -1550635441
  store i32 %39, i32* %16
  br label %81

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %42 = alloca %"class.std::vector.5"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %41, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %41, align 8
  %45 = load %"class.std::vector.5"*, %"class.std::vector.5"** %42, align 8
  %46 = bitcast %"class.std::vector.5"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.677
  %48 = load i32, i32* @y.678
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -917947095, i32 -1550635441
  store i32 %72, i32* %16
  br label %81

; <label>:73:                                     ; preds = %17
  ret void

; <label>:74:                                     ; preds = %17
  %75 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %76 = alloca %"class.std::vector.5"*, align 8
  %77 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %75, align 8
  store %"class.std::vector.5"* %1, %"class.std::vector.5"** %76, align 8
  store i64 %2, i64* %77, align 8
  %78 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %75, align 8
  %79 = load %"class.std::vector.5"*, %"class.std::vector.5"** %76, align 8
  %80 = bitcast %"class.std::vector.5"* %79 to i8*
  call void @_ZdlPv(i8* %80) #3
  store i32 -1084349507, i32* %16
  br label %81

; <label>:81:                                     ; preds = %74, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIlSaIlEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.23"*, %"class.std::vector.5"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  %4 = alloca %"class.std::vector.5"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %0, %"class.__gnu_cxx::__normal_iterator.23"** %3, align 8
  store %"class.std::vector.5"** %1, %"class.std::vector.5"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.5"**, %"class.std::vector.5"*** %4, align 8
  %8 = load %"class.std::vector.5"*, %"class.std::vector.5"** %7, align 8
  store %"class.std::vector.5"* %8, %"class.std::vector.5"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIlEE9constructIlJRKlEEEvRS0_PT_DpOT0_(%"class.std::allocator.7"* dereferenceable(1), i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call dereferenceable(8) i64* @_ZSt7forwardIRKlEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIlE9constructIlJRKlEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.8"* %8, i64* %9, i64* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIlSaIlEE19_M_emplace_back_auxIJRKlEEEvDpOT_(%"class.std::vector.5"*, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64* %1, i64** %4, align 8
  %10 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc(%"class.std::vector.5"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %13 = load i64, i64* %5, align 8
  %14 = call i64* @_ZNSt12_Vector_baseIlSaIlEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %12, i64 %13)
  store i64* %14, i64** %6, align 8
  %15 = load i64*, i64** %6, align 8
  store i64* %15, i64** %7, align 8
  %16 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %17 to %"class.std::allocator.7"*
  %19 = load i64*, i64** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %10) #3
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = load i64*, i64** %4, align 8
  %23 = call dereferenceable(8) i64* @_ZSt7forwardIRKlEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIlEE9constructIlJRKlEEEvRS0_PT_DpOT0_(%"class.std::allocator.7"* dereferenceable(1) %18, i64* %21, i64* dereferenceable(8) %23)
          to label %24 unwind label %80

; <label>:24:                                     ; preds = %2
  store i64* null, i64** %7, align 8
  %25 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = load i64*, i64** %6, align 8
  %34 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %35 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %34) #3
  %36 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPlS0_SaIlEET0_T_S3_S2_RT1_(i64* %28, i64* %32, i64* %33, %"class.std::allocator.7"* dereferenceable(1) %35)
          to label %37 unwind label %80

; <label>:37:                                     ; preds = %24
  %38 = load i32, i32* @x.683
  %39 = load i32, i32* @y.684
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %263

; <label>:51:                                     ; preds = %37, %263
  store i64* %36, i64** %7, align 8
  %52 = load i64*, i64** %7, align 8
  %53 = getelementptr inbounds i64, i64* %52, i32 1
  store i64* %53, i64** %7, align 8
  %54 = load i32, i32* @x.683
  %55 = load i32, i32* @y.684
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %263

; <label>:79:                                     ; preds = %51
  br label %155

; <label>:80:                                     ; preds = %24, %2
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %8, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %9, align 4
  br label %84

; <label>:84:                                     ; preds = %80
  %85 = load i8*, i8** %8, align 8
  %86 = call i8* @__cxa_begin_catch(i8* %85) #3
  %87 = load i64*, i64** %7, align 8
  %88 = icmp ne i64* %87, null
  br i1 %88, label %143, label %89

; <label>:89:                                     ; preds = %84
  %90 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %90, i32 0, i32 0
  %92 = bitcast %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %91 to %"class.std::allocator.7"*
  %93 = load i64*, i64** %6, align 8
  %94 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %10) #3
  %95 = getelementptr inbounds i64, i64* %93, i64 %94
  invoke void @_ZNSt16allocator_traitsISaIlEE7destroyIlEEvRS0_PT_(%"class.std::allocator.7"* dereferenceable(1) %92, i64* %95)
          to label %96 unwind label %139

; <label>:96:                                     ; preds = %89
  %97 = load i32, i32* @x.683
  %98 = load i32, i32* @y.684
  %99 = sub i32 %97, -912792229
  %100 = sub i32 %99, 1
  %101 = add i32 %100, -912792229
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  br i1 %121, label %123, label %266

; <label>:123:                                    ; preds = %96, %266
  %124 = load i32, i32* @x.683
  %125 = load i32, i32* @y.684
  %126 = sub i32 %124, -1423779041
  %127 = sub i32 %126, 1
  %128 = add i32 %127, -1423779041
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  br i1 %136, label %138, label %266

; <label>:138:                                    ; preds = %123
  br label %149

; <label>:139:                                    ; preds = %153, %149, %143, %89
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %8, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %154 unwind label %205

; <label>:143:                                    ; preds = %84
  %144 = load i64*, i64** %6, align 8
  %145 = load i64*, i64** %7, align 8
  %146 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %147 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %146) #3
  invoke void @_ZSt8_DestroyIPllEvT_S1_RSaIT0_E(i64* %144, i64* %145, %"class.std::allocator.7"* dereferenceable(1) %147)
          to label %148 unwind label %139

; <label>:148:                                    ; preds = %143
  br label %149

; <label>:149:                                    ; preds = %148, %138
  %150 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %151 = load i64*, i64** %6, align 8
  %152 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm(%"struct.std::_Vector_base.6"* %150, i64* %151, i64 %152)
          to label %153 unwind label %139

; <label>:153:                                    ; preds = %149
  invoke void @__cxa_rethrow() #12
          to label %208 unwind label %139

; <label>:154:                                    ; preds = %139
  br label %200

; <label>:155:                                    ; preds = %79
  %156 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %157 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %156, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %157, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %161 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %161, i32 0, i32 1
  %163 = load i64*, i64** %162, align 8
  %164 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %165 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %164) #3
  call void @_ZSt8_DestroyIPllEvT_S1_RSaIT0_E(i64* %159, i64* %163, %"class.std::allocator.7"* dereferenceable(1) %165)
  %166 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %167 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %168 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %167, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %168, i32 0, i32 0
  %170 = load i64*, i64** %169, align 8
  %171 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %172 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %171, i32 0, i32 0
  %173 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %172, i32 0, i32 2
  %174 = load i64*, i64** %173, align 8
  %175 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %176 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %175, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %176, i32 0, i32 0
  %178 = load i64*, i64** %177, align 8
  %179 = ptrtoint i64* %174 to i64
  %180 = ptrtoint i64* %178 to i64
  %181 = sub i64 %179, -6627001099148955232
  %182 = sub i64 %181, %180
  %183 = add i64 %182, -6627001099148955232
  %184 = sub i64 %179, %180
  %185 = sdiv exact i64 %183, 8
  call void @_ZNSt12_Vector_baseIlSaIlEE13_M_deallocateEPlm(%"struct.std::_Vector_base.6"* %166, i64* %170, i64 %185)
  %186 = load i64*, i64** %6, align 8
  %187 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %188, i32 0, i32 0
  store i64* %186, i64** %189, align 8
  %190 = load i64*, i64** %7, align 8
  %191 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %192 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %191, i32 0, i32 0
  %193 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %192, i32 0, i32 1
  store i64* %190, i64** %193, align 8
  %194 = load i64*, i64** %6, align 8
  %195 = load i64, i64* %5, align 8
  %196 = getelementptr inbounds i64, i64* %194, i64 %195
  %197 = bitcast %"class.std::vector.5"* %10 to %"struct.std::_Vector_base.6"*
  %198 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %197, i32 0, i32 0
  %199 = getelementptr inbounds %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl", %"struct.std::_Vector_base<long, std::allocator<long> >::_Vector_impl"* %198, i32 0, i32 2
  store i64* %196, i64** %199, align 8
  ret void

; <label>:200:                                    ; preds = %154
  %201 = load i8*, i8** %8, align 8
  %202 = load i32, i32* %9, align 4
  %203 = insertvalue { i8*, i32 } undef, i8* %201, 0
  %204 = insertvalue { i8*, i32 } %203, i32 %202, 1
  resume { i8*, i32 } %204

; <label>:205:                                    ; preds = %139
  %206 = landingpad { i8*, i32 }
          catch i8* null
  %207 = extractvalue { i8*, i32 } %206, 0
  call void @__clang_call_terminate(i8* %207) #7
  unreachable

; <label>:208:                                    ; preds = %153
  %209 = load i32, i32* @x.683
  %210 = load i32, i32* @y.684
  %211 = sub i32 %209, 1953703189
  %212 = sub i32 %211, 1
  %213 = add i32 %212, 1953703189
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = xor i1 %217, true
  %220 = xor i1 %218, true
  %221 = xor i1 true, true
  %222 = and i1 %219, true
  %223 = and i1 %217, %221
  %224 = and i1 %220, true
  %225 = and i1 %218, %221
  %226 = or i1 %222, %223
  %227 = or i1 %224, %225
  %228 = xor i1 %226, %227
  %229 = or i1 %219, %220
  %230 = xor i1 %229, true
  %231 = or i1 true, %221
  %232 = and i1 %230, %231
  %233 = or i1 %228, %232
  %234 = or i1 %217, %218
  br i1 %233, label %235, label %267

; <label>:235:                                    ; preds = %208, %267
  %236 = load i32, i32* @x.683
  %237 = load i32, i32* @y.684
  %238 = sub i32 %236, -1842410553
  %239 = sub i32 %238, 1
  %240 = add i32 %239, -1842410553
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 false, true
  %249 = and i1 %246, false
  %250 = and i1 %244, %248
  %251 = and i1 %247, false
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 false, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  br i1 %260, label %262, label %267

; <label>:262:                                    ; preds = %235
  unreachable

; <label>:263:                                    ; preds = %51, %37
  store i64* %36, i64** %7, align 8
  %264 = load i64*, i64** %7, align 8
  %265 = getelementptr inbounds i64, i64* %264, i32 1
  store i64* %265, i64** %7, align 8
  br label %51

; <label>:266:                                    ; preds = %123, %96
  br label %123

; <label>:267:                                    ; preds = %235, %208
  br label %235
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIlE9constructIlJRKlEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.8"*, i64*, i64* dereferenceable(8)) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.685
  %7 = load i32, i32* @y.686
  %8 = add i32 %6, -1125058155
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1125058155
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -2119985019, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2119985019, label %20
    i32 722947167, label %40
    i32 -91592214, label %77
    i32 1448514488, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 722947167, i32 1448514488
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %41, align 8
  store i64* %1, i64** %42, align 8
  store i64* %2, i64** %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %41, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = bitcast i64* %45 to i8*
  %47 = bitcast i8* %46 to i64*
  %48 = load i64*, i64** %43, align 8
  %49 = call dereferenceable(8) i64* @_ZSt7forwardIRKlEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %48) #3
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %47, align 8
  %51 = load i32, i32* @x.685
  %52 = load i32, i32* @y.686
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -91592214, i32 1448514488
  store i32 %76, i32* %16
  br label %89

; <label>:77:                                     ; preds = %17
  ret void

; <label>:78:                                     ; preds = %17
  %79 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %80 = alloca i64*, align 8
  %81 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %79, align 8
  store i64* %1, i64** %80, align 8
  store i64* %2, i64** %81, align 8
  %82 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %79, align 8
  %83 = load i64*, i64** %80, align 8
  %84 = bitcast i64* %83 to i8*
  %85 = bitcast i8* %84 to i64*
  %86 = load i64*, i64** %81, align 8
  %87 = call dereferenceable(8) i64* @_ZSt7forwardIRKlEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %86) #3
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %85, align 8
  store i32 722947167, i32* %16
  br label %89

; <label>:89:                                     ; preds = %78, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRKlEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIlSaIlEE12_M_check_lenEmPKc(%"class.std::vector.5"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.5"*
  %9 = alloca %"class.std::vector.5"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.5"*, %"class.std::vector.5"** %9, align 8
  store %"class.std::vector.5"* %14, %"class.std::vector.5"** %8
  %15 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %8
  %16 = call i64 @_ZNKSt6vectorIlSaIlEE8max_sizeEv(%"class.std::vector.5"* %15) #3
  %17 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %8
  %18 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %17) #3
  %19 = add i64 %16, -7009372452644021304
  %20 = sub i64 %19, %18
  %21 = sub i64 %20, -7009372452644021304
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 -1213573037, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %168
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -1213573037, label %29
    i32 -1694161659, label %34
    i32 1484368049, label %36
    i32 1459361040, label %51
    i32 -1358052371, label %81
    i32 -2023693087, label %84
    i32 -1286119238, label %90
    i32 1403639205, label %93
    i32 1981324941, label %109
    i32 -1617656679, label %138
    i32 -1212517388, label %140
    i32 1452441126, label %142
    i32 976689585, label %166
  ]

; <label>:28:                                     ; preds = %26
  br label %168

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -1694161659, i32 1484368049
  store i32 %33, i32* %24
  br label %168

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #12
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* @x.689
  %38 = load i32, i32* @y.690
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 1459361040, i32 1452441126
  store i32 %50, i32* %24
  br label %168

; <label>:51:                                     ; preds = %26
  %52 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %8
  %53 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %52) #3
  %54 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %8
  %55 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %54) #3
  store i64 %55, i64* %13, align 8
  %56 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %53, 5715440767678844868
  %59 = add i64 %58, %57
  %60 = sub i64 %59, 5715440767678844868
  %61 = add i64 %53, %57
  store i64 %60, i64* %12, align 8
  %62 = load i64, i64* %12, align 8
  %63 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %8
  %64 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %63) #3
  %65 = icmp ult i64 %62, %64
  store i1 %65, i1* %5
  %66 = load i32, i32* @x.689
  %67 = load i32, i32* @y.690
  %68 = sub i32 %66, 1412425611
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 1412425611
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 -1358052371, i32 1452441126
  store i32 %80, i32* %24
  br label %168

; <label>:81:                                     ; preds = %26
  %82 = load volatile i1, i1* %5
  %83 = select i1 %82, i32 -1286119238, i32 -2023693087
  store i32 %83, i32* %24
  br label %168

; <label>:84:                                     ; preds = %26
  %85 = load i64, i64* %12, align 8
  %86 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %8
  %87 = call i64 @_ZNKSt6vectorIlSaIlEE8max_sizeEv(%"class.std::vector.5"* %86) #3
  %88 = icmp ugt i64 %85, %87
  %89 = select i1 %88, i32 -1286119238, i32 1403639205
  store i32 %89, i32* %24
  br label %168

; <label>:90:                                     ; preds = %26
  %91 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %8
  %92 = call i64 @_ZNKSt6vectorIlSaIlEE8max_sizeEv(%"class.std::vector.5"* %91) #3
  store i32 -1212517388, i32* %24
  store i64 %92, i64* %25
  br label %168

; <label>:93:                                     ; preds = %26
  %94 = load i32, i32* @x.689
  %95 = load i32, i32* @y.690
  %96 = sub i32 %94, 979488298
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 979488298
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 1981324941, i32 976689585
  store i32 %108, i32* %24
  br label %168

; <label>:109:                                    ; preds = %26
  %110 = load i64, i64* %12, align 8
  store i64 %110, i64* %4
  %111 = load i32, i32* @x.689
  %112 = load i32, i32* @y.690
  %113 = sub i32 %111, -331335182
  %114 = sub i32 %113, 1
  %115 = add i32 %114, -331335182
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  %137 = select i1 %135, i32 -1617656679, i32 976689585
  store i32 %137, i32* %24
  br label %168

; <label>:138:                                    ; preds = %26
  store i32 -1212517388, i32* %24
  %139 = load volatile i64, i64* %4
  store i64 %139, i64* %25
  br label %168

; <label>:140:                                    ; preds = %26
  %141 = load i64, i64* %25
  ret i64 %141

; <label>:142:                                    ; preds = %26
  %143 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %8
  %144 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %143) #3
  %145 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %8
  %146 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %145) #3
  store i64 %146, i64* %13, align 8
  %147 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %148 = load i64, i64* %147, align 8
  %149 = shl i64 %144, %148
  %150 = sub i64 0, %144
  %151 = add i64 0, %150
  %152 = sub i64 0, %144
  %153 = sub i64 %151, -4504636346187638942
  %154 = add i64 %153, %148
  %155 = add i64 %154, -4504636346187638942
  %156 = add i64 %151, %148
  %157 = sub i64 0, %144
  %158 = sub i64 0, %148
  %159 = add i64 %157, %158
  %160 = sub i64 0, %159
  %161 = add i64 %144, %148
  store i64 %160, i64* %12, align 8
  %162 = load i64, i64* %12, align 8
  %163 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %8
  %164 = call i64 @_ZNKSt6vectorIlSaIlEE4sizeEv(%"class.std::vector.5"* %163) #3
  %165 = icmp ult i64 %162, %164
  store i32 1459361040, i32* %24
  br label %168

; <label>:166:                                    ; preds = %26
  %167 = load i64, i64* %12, align 8
  store i32 1981324941, i32* %24
  br label %168

; <label>:168:                                    ; preds = %166, %142, %138, %109, %93, %90, %84, %81, %51, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt34__uninitialized_move_if_noexcept_aIPlS0_SaIlEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.691
  %9 = load i32, i32* @y.692
  %10 = add i32 %8, -1860541528
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1860541528
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 2062528949, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %87
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 2062528949, label %22
    i32 1827581012, label %30
    i32 -468308125, label %65
    i32 -2025607813, label %67
  ]

; <label>:21:                                     ; preds = %19
  br label %87

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1827581012, i32 -2025607813
  store i32 %29, i32* %18
  br label %87

; <label>:30:                                     ; preds = %19
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i64*, align 8
  %34 = alloca %"class.std::allocator.7"*, align 8
  %35 = alloca %"class.std::move_iterator.28", align 8
  %36 = alloca %"class.std::move_iterator.28", align 8
  store i64* %0, i64** %31, align 8
  store i64* %1, i64** %32, align 8
  store i64* %2, i64** %33, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %34, align 8
  %37 = load i64*, i64** %31, align 8
  %38 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPlSt13move_iteratorIS0_EET0_T_(i64* %37)
  %39 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %35, i32 0, i32 0
  store i64* %38, i64** %39, align 8
  %40 = load i64*, i64** %32, align 8
  %41 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPlSt13move_iteratorIS0_EET0_T_(i64* %40)
  %42 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %36, i32 0, i32 0
  store i64* %41, i64** %42, align 8
  %43 = load i64*, i64** %33, align 8
  %44 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %34, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %35, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %36, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPlES1_lET0_T_S4_S3_RSaIT1_E(i64* %46, i64* %48, i64* %43, %"class.std::allocator.7"* dereferenceable(1) %44)
  store i64* %49, i64** %5
  %50 = load i32, i32* @x.691
  %51 = load i32, i32* @y.692
  %52 = add i32 %50, -54104578
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -54104578
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -468308125, i32 -2025607813
  store i32 %64, i32* %18
  br label %87

; <label>:65:                                     ; preds = %19
  %66 = load volatile i64*, i64** %5
  ret i64* %66

; <label>:67:                                     ; preds = %19
  %68 = alloca i64*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i64*, align 8
  %71 = alloca %"class.std::allocator.7"*, align 8
  %72 = alloca %"class.std::move_iterator.28", align 8
  %73 = alloca %"class.std::move_iterator.28", align 8
  store i64* %0, i64** %68, align 8
  store i64* %1, i64** %69, align 8
  store i64* %2, i64** %70, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %71, align 8
  %74 = load i64*, i64** %68, align 8
  %75 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPlSt13move_iteratorIS0_EET0_T_(i64* %74)
  %76 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %72, i32 0, i32 0
  store i64* %75, i64** %76, align 8
  %77 = load i64*, i64** %69, align 8
  %78 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPlSt13move_iteratorIS0_EET0_T_(i64* %77)
  %79 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %73, i32 0, i32 0
  store i64* %78, i64** %79, align 8
  %80 = load i64*, i64** %70, align 8
  %81 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %71, align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %72, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %73, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPlES1_lET0_T_S4_S3_RSaIT1_E(i64* %83, i64* %85, i64* %80, %"class.std::allocator.7"* dereferenceable(1) %81)
  store i32 1827581012, i32* %18
  br label %87

; <label>:87:                                     ; preds = %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIlEE7destroyIlEEvRS0_PT_(%"class.std::allocator.7"* dereferenceable(1), i64*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.693
  %6 = load i32, i32* @y.694
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1969253785, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1969253785, label %18
    i32 -1582896022, label %26
    i32 -1077920045, label %59
    i32 -1072507697, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1582896022, i32 -1072507697
  store i32 %25, i32* %14
  br label %66

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.7"*, align 8
  %28 = alloca i64*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %27, align 8
  store i64* %1, i64** %28, align 8
  %29 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %27, align 8
  %30 = bitcast %"class.std::allocator.7"* %29 to %"class.__gnu_cxx::new_allocator.8"*
  %31 = load i64*, i64** %28, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIlE7destroyIlEEvPT_(%"class.__gnu_cxx::new_allocator.8"* %30, i64* %31)
  %32 = load i32, i32* @x.693
  %33 = load i32, i32* @y.694
  %34 = add i32 %32, -1270384414
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1270384414
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1077920045, i32 -1072507697
  store i32 %58, i32* %14
  br label %66

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::allocator.7"*, align 8
  %62 = alloca i64*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %61, align 8
  store i64* %1, i64** %62, align 8
  %63 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %61, align 8
  %64 = bitcast %"class.std::allocator.7"* %63 to %"class.__gnu_cxx::new_allocator.8"*
  %65 = load i64*, i64** %62, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIlE7destroyIlEEvPT_(%"class.__gnu_cxx::new_allocator.8"* %64, i64* %65)
  store i32 -1582896022, i32* %14
  br label %66

; <label>:66:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIlSaIlEE8max_sizeEv(%"class.std::vector.5"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.695
  %6 = load i32, i32* @y.696
  %7 = sub i32 %5, 320287838
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 320287838
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1522845509, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1522845509, label %19
    i32 211566479, label %39
    i32 -469994900, label %72
    i32 635783573, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 211566479, i32 635783573
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %40, align 8
  %41 = load %"class.std::vector.5"*, %"class.std::vector.5"** %40, align 8
  %42 = bitcast %"class.std::vector.5"* %41 to %"struct.std::_Vector_base.6"*
  %43 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %42) #3
  %44 = call i64 @_ZNSt16allocator_traitsISaIlEE8max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1) %43) #3
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.695
  %46 = load i32, i32* @y.696
  %47 = sub i32 %45, -1482386083
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1482386083
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -469994900, i32 635783573
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile i64, i64* %2
  ret i64 %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %75, align 8
  %76 = load %"class.std::vector.5"*, %"class.std::vector.5"** %75, align 8
  %77 = bitcast %"class.std::vector.5"* %76 to %"struct.std::_Vector_base.6"*
  %78 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIlSaIlEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %77) #3
  %79 = call i64 @_ZNSt16allocator_traitsISaIlEE8max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1) %78) #3
  store i32 211566479, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIlEE8max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.697
  %6 = load i32, i32* @y.698
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 270820153, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 270820153, label %18
    i32 2086645908, label %26
    i32 -29513888, label %57
    i32 484617028, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2086645908, i32 484617028
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %27, align 8
  %28 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %27, align 8
  %29 = bitcast %"class.std::allocator.7"* %28 to %"class.__gnu_cxx::new_allocator.8"*
  %30 = call i64 @_ZNK9__gnu_cxx13new_allocatorIlE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %29) #3
  store i64 %30, i64* %2
  %31 = load i32, i32* @x.697
  %32 = load i32, i32* @y.698
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -29513888, i32 484617028
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile i64, i64* %2
  ret i64 %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %60, align 8
  %61 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %60, align 8
  %62 = bitcast %"class.std::allocator.7"* %61 to %"class.__gnu_cxx::new_allocator.8"*
  %63 = call i64 @_ZNK9__gnu_cxx13new_allocatorIlE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %62) #3
  store i32 2086645908, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPlES1_lET0_T_S4_S3_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.28", align 8
  %6 = alloca %"class.std::move_iterator.28", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca %"class.std::move_iterator.28", align 8
  %10 = alloca %"class.std::move_iterator.28", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.28"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.28"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.28"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.28"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPlES1_ET0_T_S4_S3_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt32__make_move_if_noexcept_iteratorIPlSt13move_iteratorIS0_EET0_T_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.28", align 8
  %3 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  %4 = load i64*, i64** %3, align 8
  call void @_ZNSt13move_iteratorIPlEC2ES0_(%"class.std::move_iterator.28"* %2, i64* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %2, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  ret i64* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyISt13move_iteratorIPlES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.28", align 8
  %5 = alloca %"class.std::move_iterator.28", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.28", align 8
  %9 = alloca %"class.std::move_iterator.28", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.28"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.28"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.28"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.28"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPlES3_EET0_T_S6_S5_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPlES3_EET0_T_S6_S5_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.28", align 8
  %5 = alloca %"class.std::move_iterator.28", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator.28", align 8
  %8 = alloca %"class.std::move_iterator.28", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator.28"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.28"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.28"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.28"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyISt13move_iteratorIPlES1_ET0_T_S4_S3_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyISt13move_iteratorIPlES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.28", align 8
  %5 = alloca %"class.std::move_iterator.28", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator.28", align 8
  %8 = alloca %"class.std::move_iterator.28", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator.28"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.28"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPlEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %14)
  %16 = bitcast %"class.std::move_iterator.28"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.28"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPlEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt14__copy_move_a2ILb1EPlS0_ET1_T0_S2_S1_(i64* %15, i64* %20, i64* %21)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb1EPlS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.709
  %8 = load i32, i32* @y.710
  %9 = sub i32 %7, -1939612578
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1939612578
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 264935750, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %79
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 264935750, label %21
    i32 2001475866, label %41
    i32 1266555100, label %66
    i32 1993440399, label %68
  ]

; <label>:20:                                     ; preds = %18
  br label %79

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 2001475866, i32 1993440399
  store i32 %40, i32* %17
  br label %79

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  %43 = alloca i64*, align 8
  %44 = alloca i64*, align 8
  store i64* %0, i64** %42, align 8
  store i64* %1, i64** %43, align 8
  store i64* %2, i64** %44, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %45)
  %47 = load i64*, i64** %43, align 8
  %48 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %47)
  %49 = load i64*, i64** %44, align 8
  %50 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %49)
  %51 = call i64* @_ZSt13__copy_move_aILb1EPlS0_ET1_T0_S2_S1_(i64* %46, i64* %48, i64* %50)
  store i64* %51, i64** %4
  %52 = load i32, i32* @x.709
  %53 = load i32, i32* @y.710
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1266555100, i32 1993440399
  store i32 %65, i32* %17
  br label %79

; <label>:66:                                     ; preds = %18
  %67 = load volatile i64*, i64** %4
  ret i64* %67

; <label>:68:                                     ; preds = %18
  %69 = alloca i64*, align 8
  %70 = alloca i64*, align 8
  %71 = alloca i64*, align 8
  store i64* %0, i64** %69, align 8
  store i64* %1, i64** %70, align 8
  store i64* %2, i64** %71, align 8
  %72 = load i64*, i64** %69, align 8
  %73 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %72)
  %74 = load i64*, i64** %70, align 8
  %75 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %74)
  %76 = load i64*, i64** %71, align 8
  %77 = call i64* @_ZSt12__niter_baseIPlENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %76)
  %78 = call i64* @_ZSt13__copy_move_aILb1EPlS0_ET1_T0_S2_S1_(i64* %73, i64* %75, i64* %77)
  store i32 2001475866, i32* %17
  br label %79

; <label>:79:                                     ; preds = %68, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseISt13move_iteratorIPlEENSt11_Miter_baseIT_E13iterator_typeES4_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.711
  %6 = load i32, i32* @y.712
  %7 = sub i32 %5, 1385821476
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1385821476
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1680546255, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1680546255, label %19
    i32 -1025708883, label %27
    i32 1391538536, label %50
    i32 2067575371, label %52
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1025708883, i32 2067575371
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.28", align 8
  %29 = alloca %"class.std::move_iterator.28", align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %28, i32 0, i32 0
  store i64* %0, i64** %30, align 8
  %31 = bitcast %"class.std::move_iterator.28"* %29 to i8*
  %32 = bitcast %"class.std::move_iterator.28"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %29, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPlELb1EE7_S_baseES2_(i64* %34)
  store i64* %35, i64** %2
  %36 = load i32, i32* @x.711
  %37 = load i32, i32* @y.712
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1391538536, i32 2067575371
  store i32 %49, i32* %15
  br label %61

; <label>:50:                                     ; preds = %16
  %51 = load volatile i64*, i64** %2
  ret i64* %51

; <label>:52:                                     ; preds = %16
  %53 = alloca %"class.std::move_iterator.28", align 8
  %54 = alloca %"class.std::move_iterator.28", align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %53, i32 0, i32 0
  store i64* %0, i64** %55, align 8
  %56 = bitcast %"class.std::move_iterator.28"* %54 to i8*
  %57 = bitcast %"class.std::move_iterator.28"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %54, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPlELb1EE7_S_baseES2_(i64* %59)
  store i32 -1025708883, i32* %15
  br label %61

; <label>:61:                                     ; preds = %52, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb1EPlS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIlEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64*, i64** %5, align 8
  %11 = ptrtoint i64* %9 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = sub i64 %11, -2627276258717663628
  %14 = sub i64 %13, %12
  %15 = add i64 %14, -2627276258717663628
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 -1250887689, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %98
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1250887689, label %23
    i32 -2069685151, label %27
    i32 286708685, label %43
    i32 914585949, label %77
    i32 -2079186185, label %78
    i32 -739646505, label %82
  ]

; <label>:22:                                     ; preds = %20
  br label %98

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -2069685151, i32 -2079186185
  store i32 %26, i32* %19
  br label %98

; <label>:27:                                     ; preds = %20
  %28 = load i32, i32* @x.715
  %29 = load i32, i32* @y.716
  %30 = add i32 %28, 348055080
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 348055080
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 286708685, i32 -739646505
  store i32 %42, i32* %19
  br label %98

; <label>:43:                                     ; preds = %20
  %44 = load i64*, i64** %7, align 8
  %45 = bitcast i64* %44 to i8*
  %46 = load i64*, i64** %5, align 8
  %47 = bitcast i64* %46 to i8*
  %48 = load i64, i64* %8, align 8
  %49 = mul i64 8, %48
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %45, i8* %47, i64 %49, i32 8, i1 false)
  %50 = load i32, i32* @x.715
  %51 = load i32, i32* @y.716
  %52 = sub i32 %50, 1372284329
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1372284329
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 914585949, i32 -739646505
  store i32 %76, i32* %19
  br label %98

; <label>:77:                                     ; preds = %20
  store i32 -2079186185, i32* %19
  br label %98

; <label>:78:                                     ; preds = %20
  %79 = load i64*, i64** %7, align 8
  %80 = load i64, i64* %8, align 8
  %81 = getelementptr inbounds i64, i64* %79, i64 %80
  ret i64* %81

; <label>:82:                                     ; preds = %20
  %83 = load i64*, i64** %7, align 8
  %84 = bitcast i64* %83 to i8*
  %85 = load i64*, i64** %5, align 8
  %86 = bitcast i64* %85 to i8*
  %87 = load i64, i64* %8, align 8
  %88 = sub i64 0, 8
  %89 = add i64 0, %88
  %90 = sub i64 0, 8
  %91 = sub i64 0, %89
  %92 = sub i64 0, %87
  %93 = add i64 %91, %92
  %94 = sub i64 0, %93
  %95 = add i64 %89, %87
  %96 = shl i64 8, %87
  %97 = mul i64 8, %87
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %84, i8* %86, i64 %97, i32 8, i1 false)
  store i32 286708685, i32* %19
  br label %98

; <label>:98:                                     ; preds = %82, %77, %43, %27, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseISt13move_iteratorIPlELb1EE7_S_baseES2_(i64*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.28", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call i64* @_ZNKSt13move_iteratorIPlE4baseEv(%"class.std::move_iterator.28"* %2)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13move_iteratorIPlE4baseEv(%"class.std::move_iterator.28"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.28"*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %2, align 8
  %3 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPlEC2ES0_(%"class.std::move_iterator.28"*, i64*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.721
  %6 = load i32, i32* @y.722
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1509363801, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1509363801, label %18
    i32 -1491322229, label %38
    i32 -810139287, label %71
    i32 -1864509718, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1491322229, i32 -1864509718
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator.28"*, align 8
  %40 = alloca i64*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %39, align 8
  store i64* %1, i64** %40, align 8
  %41 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %39, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %41, i32 0, i32 0
  %43 = load i64*, i64** %40, align 8
  store i64* %43, i64** %42, align 8
  %44 = load i32, i32* @x.721
  %45 = load i32, i32* @y.722
  %46 = sub i32 %44, -775675014
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -775675014
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -810139287, i32 -1864509718
  store i32 %70, i32* %14
  br label %78

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::move_iterator.28"*, align 8
  %74 = alloca i64*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %73, align 8
  store i64* %1, i64** %74, align 8
  %75 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %73, align 8
  %76 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %75, i32 0, i32 0
  %77 = load i64*, i64** %74, align 8
  store i64* %77, i64** %76, align 8
  store i32 -1491322229, i32* %14
  br label %78

; <label>:78:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIlE7destroyIlEEvPT_(%"class.__gnu_cxx::new_allocator.8"*, i64*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.723
  %6 = load i32, i32* @y.724
  %7 = sub i32 %5, 1704169242
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1704169242
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -938593115, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -938593115, label %19
    i32 -1239684434, label %39
    i32 -1026891887, label %57
    i32 2138289540, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1239684434, i32 2138289540
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %41 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %40, align 8
  store i64* %1, i64** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %40, align 8
  %43 = load i32, i32* @x.723
  %44 = load i32, i32* @y.724
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1026891887, i32 2138289540
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %60 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %59, align 8
  store i64* %1, i64** %60, align 8
  %61 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %59, align 8
  store i32 -1239684434, i32* %15
  br label %62

; <label>:62:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EEaSERKS6_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.30"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.30"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.29"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.29"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.30"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.29"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.29"*
  %13 = alloca %"class.std::vector.0"**
  %14 = alloca i64*
  %15 = alloca %"class.std::vector"**
  %16 = alloca i1
  %17 = alloca i1
  %18 = load i32, i32* @x.725
  %19 = load i32, i32* @y.726
  %20 = add i32 %18, -1766107339
  %21 = sub i32 %20, 1
  %22 = sub i32 %21, -1766107339
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  store i1 %26, i1* %17
  %27 = icmp slt i32 %19, 10
  store i1 %27, i1* %16
  %28 = alloca i32
  store i32 -1036166959, i32* %28
  br label %29

; <label>:29:                                     ; preds = %2, %407
  %30 = load i32, i32* %28
  switch i32 %30, label %31 [
    i32 -1036166959, label %32
    i32 1261523602, label %52
    i32 604080355, label %97
    i32 1037354414, label %100
    i32 1324490754, label %111
    i32 -756903329, label %188
    i32 -1881000518, label %204
    i32 -1561370675, label %225
    i32 55679614, label %228
    i32 -1789228369, label %268
    i32 652191317, label %314
    i32 1798457815, label %315
    i32 -933355439, label %331
    i32 1577776735, label %370
    i32 703953111, label %371
    i32 -663189415, label %373
    i32 -523749907, label %388
    i32 -449047022, label %394
  ]

; <label>:31:                                     ; preds = %29
  br label %407

; <label>:32:                                     ; preds = %29
  %33 = load volatile i1, i1* %17
  %34 = load volatile i1, i1* %16
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 1261523602, i32 -663189415
  store i32 %51, i32* %28
  br label %407

; <label>:52:                                     ; preds = %29
  %53 = alloca %"class.std::vector"*, align 8
  %54 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"** %54, %"class.std::vector"*** %15
  %55 = alloca i64, align 8
  store i64* %55, i64** %14
  %56 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %56, %"class.std::vector.0"*** %13
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %57, %"class.__gnu_cxx::__normal_iterator.29"** %12
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %58, %"class.__gnu_cxx::__normal_iterator.29"** %11
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %59, %"class.__gnu_cxx::__normal_iterator.30"** %10
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %60, %"class.__gnu_cxx::__normal_iterator.29"** %9
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %61, %"class.__gnu_cxx::__normal_iterator.29"** %8
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %62, %"class.__gnu_cxx::__normal_iterator.30"** %7
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %63, %"class.__gnu_cxx::__normal_iterator.30"** %6
  store %"class.std::vector"* %0, %"class.std::vector"** %53, align 8
  %64 = load volatile %"class.std::vector"**, %"class.std::vector"*** %15
  store %"class.std::vector"* %1, %"class.std::vector"** %64, align 8
  %65 = load %"class.std::vector"*, %"class.std::vector"** %53, align 8
  store %"class.std::vector"* %65, %"class.std::vector"** %5
  %66 = load volatile %"class.std::vector"**, %"class.std::vector"*** %15
  %67 = load %"class.std::vector"*, %"class.std::vector"** %66, align 8
  %68 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %69 = icmp ne %"class.std::vector"* %67, %68
  store i1 %69, i1* %4
  %70 = load i32, i32* @x.725
  %71 = load i32, i32* @y.726
  %72 = sub i32 %70, 1808394027
  %73 = sub i32 %72, 1
  %74 = add i32 %73, 1808394027
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 604080355, i32 -663189415
  store i32 %96, i32* %28
  br label %407

; <label>:97:                                     ; preds = %29
  %98 = load volatile i1, i1* %4
  %99 = select i1 %98, i32 1037354414, i32 703953111
  store i32 %99, i32* %28
  br label %407

; <label>:100:                                    ; preds = %29
  %101 = load volatile %"class.std::vector"**, %"class.std::vector"*** %15
  %102 = load %"class.std::vector"*, %"class.std::vector"** %101, align 8
  %103 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %102) #3
  %104 = load volatile i64*, i64** %14
  store i64 %103, i64* %104, align 8
  %105 = load volatile i64*, i64** %14
  %106 = load i64, i64* %105, align 8
  %107 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %108 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE8capacityEv(%"class.std::vector"* %107) #3
  %109 = icmp ugt i64 %106, %108
  %110 = select i1 %109, i32 1324490754, i32 -756903329
  store i32 %110, i32* %28
  br label %407

; <label>:111:                                    ; preds = %29
  %112 = load volatile i64*, i64** %14
  %113 = load i64, i64* %112, align 8
  %114 = load volatile %"class.std::vector"**, %"class.std::vector"*** %15
  %115 = load %"class.std::vector"*, %"class.std::vector"** %114, align 8
  %116 = call %"class.std::vector.0"* @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE5beginEv(%"class.std::vector"* %115) #3
  %117 = load volatile %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %12
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %117, i32 0, i32 0
  store %"class.std::vector.0"* %116, %"class.std::vector.0"** %118, align 8
  %119 = load volatile %"class.std::vector"**, %"class.std::vector"*** %15
  %120 = load %"class.std::vector"*, %"class.std::vector"** %119, align 8
  %121 = call %"class.std::vector.0"* @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE3endEv(%"class.std::vector"* %120) #3
  %122 = load volatile %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %11
  %123 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %122, i32 0, i32 0
  store %"class.std::vector.0"* %121, %"class.std::vector.0"** %123, align 8
  %124 = load volatile %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %12
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %124, i32 0, i32 0
  %126 = load %"class.std::vector.0"*, %"class.std::vector.0"** %125, align 8
  %127 = load volatile %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %11
  %128 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %127, i32 0, i32 0
  %129 = load %"class.std::vector.0"*, %"class.std::vector.0"** %128, align 8
  %130 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %131 = call %"class.std::vector.0"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS4_S6_EEEEPS4_mT_SE_(%"class.std::vector"* %130, i64 %113, %"class.std::vector.0"* %126, %"class.std::vector.0"* %129)
  %132 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %13
  store %"class.std::vector.0"* %131, %"class.std::vector.0"** %132, align 8
  %133 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %134 = bitcast %"class.std::vector"* %133 to %"struct.std::_Vector_base"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %134, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %135, i32 0, i32 0
  %137 = load %"class.std::vector.0"*, %"class.std::vector.0"** %136, align 8
  %138 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %139 = bitcast %"class.std::vector"* %138 to %"struct.std::_Vector_base"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %139, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %140, i32 0, i32 1
  %142 = load %"class.std::vector.0"*, %"class.std::vector.0"** %141, align 8
  %143 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %144 = bitcast %"class.std::vector"* %143 to %"struct.std::_Vector_base"*
  %145 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %144) #3
  call void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.0"* %137, %"class.std::vector.0"* %142, %"class.std::allocator"* dereferenceable(1) %145)
  %146 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %147 = bitcast %"class.std::vector"* %146 to %"struct.std::_Vector_base"*
  %148 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %149 = bitcast %"class.std::vector"* %148 to %"struct.std::_Vector_base"*
  %150 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %149, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %150, i32 0, i32 0
  %152 = load %"class.std::vector.0"*, %"class.std::vector.0"** %151, align 8
  %153 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %154 = bitcast %"class.std::vector"* %153 to %"struct.std::_Vector_base"*
  %155 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %155, i32 0, i32 2
  %157 = load %"class.std::vector.0"*, %"class.std::vector.0"** %156, align 8
  %158 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %159 = bitcast %"class.std::vector"* %158 to %"struct.std::_Vector_base"*
  %160 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %159, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %160, i32 0, i32 0
  %162 = load %"class.std::vector.0"*, %"class.std::vector.0"** %161, align 8
  %163 = ptrtoint %"class.std::vector.0"* %157 to i64
  %164 = ptrtoint %"class.std::vector.0"* %162 to i64
  %165 = add i64 %163, -3990913821783957127
  %166 = sub i64 %165, %164
  %167 = sub i64 %166, -3990913821783957127
  %168 = sub i64 %163, %164
  %169 = sdiv exact i64 %167, 24
  call void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %147, %"class.std::vector.0"* %152, i64 %169)
  %170 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %13
  %171 = load %"class.std::vector.0"*, %"class.std::vector.0"** %170, align 8
  %172 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %173 = bitcast %"class.std::vector"* %172 to %"struct.std::_Vector_base"*
  %174 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %173, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %174, i32 0, i32 0
  store %"class.std::vector.0"* %171, %"class.std::vector.0"** %175, align 8
  %176 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %177 = bitcast %"class.std::vector"* %176 to %"struct.std::_Vector_base"*
  %178 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %177, i32 0, i32 0
  %179 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %178, i32 0, i32 0
  %180 = load %"class.std::vector.0"*, %"class.std::vector.0"** %179, align 8
  %181 = load volatile i64*, i64** %14
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %180, i64 %182
  %184 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %185 = bitcast %"class.std::vector"* %184 to %"struct.std::_Vector_base"*
  %186 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %185, i32 0, i32 0
  %187 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %186, i32 0, i32 2
  store %"class.std::vector.0"* %183, %"class.std::vector.0"** %187, align 8
  store i32 1798457815, i32* %28
  br label %407

; <label>:188:                                    ; preds = %29
  %189 = load i32, i32* @x.725
  %190 = load i32, i32* @y.726
  %191 = add i32 %189, -1367874091
  %192 = sub i32 %191, 1
  %193 = sub i32 %192, -1367874091
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = and i1 %197, %198
  %200 = xor i1 %197, %198
  %201 = or i1 %199, %200
  %202 = or i1 %197, %198
  %203 = select i1 %201, i32 -1881000518, i32 -523749907
  store i32 %203, i32* %28
  br label %407

; <label>:204:                                    ; preds = %29
  %205 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %206 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %205) #3
  %207 = load volatile i64*, i64** %14
  %208 = load i64, i64* %207, align 8
  %209 = icmp uge i64 %206, %208
  store i1 %209, i1* %3
  %210 = load i32, i32* @x.725
  %211 = load i32, i32* @y.726
  %212 = add i32 %210, -290294312
  %213 = sub i32 %212, 1
  %214 = sub i32 %213, -290294312
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  %224 = select i1 %222, i32 -1561370675, i32 -523749907
  store i32 %224, i32* %28
  br label %407

; <label>:225:                                    ; preds = %29
  %226 = load volatile i1, i1* %3
  %227 = select i1 %226, i32 55679614, i32 -1789228369
  store i32 %227, i32* %28
  br label %407

; <label>:228:                                    ; preds = %29
  %229 = load volatile %"class.std::vector"**, %"class.std::vector"*** %15
  %230 = load %"class.std::vector"*, %"class.std::vector"** %229, align 8
  %231 = call %"class.std::vector.0"* @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE5beginEv(%"class.std::vector"* %230) #3
  %232 = load volatile %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %9
  %233 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %232, i32 0, i32 0
  store %"class.std::vector.0"* %231, %"class.std::vector.0"** %233, align 8
  %234 = load volatile %"class.std::vector"**, %"class.std::vector"*** %15
  %235 = load %"class.std::vector"*, %"class.std::vector"** %234, align 8
  %236 = call %"class.std::vector.0"* @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE3endEv(%"class.std::vector"* %235) #3
  %237 = load volatile %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %8
  %238 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %237, i32 0, i32 0
  store %"class.std::vector.0"* %236, %"class.std::vector.0"** %238, align 8
  %239 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %240 = call %"class.std::vector.0"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE5beginEv(%"class.std::vector"* %239) #3
  %241 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %7
  %242 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %241, i32 0, i32 0
  store %"class.std::vector.0"* %240, %"class.std::vector.0"** %242, align 8
  %243 = load volatile %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %9
  %244 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %243, i32 0, i32 0
  %245 = load %"class.std::vector.0"*, %"class.std::vector.0"** %244, align 8
  %246 = load volatile %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %8
  %247 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %246, i32 0, i32 0
  %248 = load %"class.std::vector.0"*, %"class.std::vector.0"** %247, align 8
  %249 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %7
  %250 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %249, i32 0, i32 0
  %251 = load %"class.std::vector.0"*, %"class.std::vector.0"** %250, align 8
  %252 = call %"class.std::vector.0"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEENS1_IPS7_SB_EEET0_T_SG_SF_(%"class.std::vector.0"* %245, %"class.std::vector.0"* %248, %"class.std::vector.0"* %251)
  %253 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %10
  %254 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %253, i32 0, i32 0
  store %"class.std::vector.0"* %252, %"class.std::vector.0"** %254, align 8
  %255 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %256 = call %"class.std::vector.0"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE3endEv(%"class.std::vector"* %255) #3
  %257 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %6
  %258 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %257, i32 0, i32 0
  store %"class.std::vector.0"* %256, %"class.std::vector.0"** %258, align 8
  %259 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %260 = bitcast %"class.std::vector"* %259 to %"struct.std::_Vector_base"*
  %261 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %260) #3
  %262 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %10
  %263 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %262, i32 0, i32 0
  %264 = load %"class.std::vector.0"*, %"class.std::vector.0"** %263, align 8
  %265 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %6
  %266 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %265, i32 0, i32 0
  %267 = load %"class.std::vector.0"*, %"class.std::vector.0"** %266, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEES7_EvT_SC_RSaIT0_E(%"class.std::vector.0"* %264, %"class.std::vector.0"* %267, %"class.std::allocator"* dereferenceable(1) %261)
  store i32 652191317, i32* %28
  br label %407

; <label>:268:                                    ; preds = %29
  %269 = load volatile %"class.std::vector"**, %"class.std::vector"*** %15
  %270 = load %"class.std::vector"*, %"class.std::vector"** %269, align 8
  %271 = bitcast %"class.std::vector"* %270 to %"struct.std::_Vector_base"*
  %272 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %271, i32 0, i32 0
  %273 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %272, i32 0, i32 0
  %274 = load %"class.std::vector.0"*, %"class.std::vector.0"** %273, align 8
  %275 = load volatile %"class.std::vector"**, %"class.std::vector"*** %15
  %276 = load %"class.std::vector"*, %"class.std::vector"** %275, align 8
  %277 = bitcast %"class.std::vector"* %276 to %"struct.std::_Vector_base"*
  %278 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %277, i32 0, i32 0
  %279 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %278, i32 0, i32 0
  %280 = load %"class.std::vector.0"*, %"class.std::vector.0"** %279, align 8
  %281 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %282 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %281) #3
  %283 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %280, i64 %282
  %284 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %285 = bitcast %"class.std::vector"* %284 to %"struct.std::_Vector_base"*
  %286 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %285, i32 0, i32 0
  %287 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %286, i32 0, i32 0
  %288 = load %"class.std::vector.0"*, %"class.std::vector.0"** %287, align 8
  %289 = call %"class.std::vector.0"* @_ZSt4copyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET0_T_S8_S7_(%"class.std::vector.0"* %274, %"class.std::vector.0"* %283, %"class.std::vector.0"* %288)
  %290 = load volatile %"class.std::vector"**, %"class.std::vector"*** %15
  %291 = load %"class.std::vector"*, %"class.std::vector"** %290, align 8
  %292 = bitcast %"class.std::vector"* %291 to %"struct.std::_Vector_base"*
  %293 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %292, i32 0, i32 0
  %294 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %293, i32 0, i32 0
  %295 = load %"class.std::vector.0"*, %"class.std::vector.0"** %294, align 8
  %296 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %297 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %296) #3
  %298 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %295, i64 %297
  %299 = load volatile %"class.std::vector"**, %"class.std::vector"*** %15
  %300 = load %"class.std::vector"*, %"class.std::vector"** %299, align 8
  %301 = bitcast %"class.std::vector"* %300 to %"struct.std::_Vector_base"*
  %302 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %301, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %302, i32 0, i32 1
  %304 = load %"class.std::vector.0"*, %"class.std::vector.0"** %303, align 8
  %305 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %306 = bitcast %"class.std::vector"* %305 to %"struct.std::_Vector_base"*
  %307 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %306, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %307, i32 0, i32 1
  %309 = load %"class.std::vector.0"*, %"class.std::vector.0"** %308, align 8
  %310 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %311 = bitcast %"class.std::vector"* %310 to %"struct.std::_Vector_base"*
  %312 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %311) #3
  %313 = call %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_S5_ET0_T_S8_S7_RSaIT1_E(%"class.std::vector.0"* %298, %"class.std::vector.0"* %304, %"class.std::vector.0"* %309, %"class.std::allocator"* dereferenceable(1) %312)
  store i32 652191317, i32* %28
  br label %407

; <label>:314:                                    ; preds = %29
  store i32 1798457815, i32* %28
  br label %407

; <label>:315:                                    ; preds = %29
  %316 = load i32, i32* @x.725
  %317 = load i32, i32* @y.726
  %318 = add i32 %316, 166672850
  %319 = sub i32 %318, 1
  %320 = sub i32 %319, 166672850
  %321 = sub i32 %316, 1
  %322 = mul i32 %316, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %317, 10
  %326 = and i1 %324, %325
  %327 = xor i1 %324, %325
  %328 = or i1 %326, %327
  %329 = or i1 %324, %325
  %330 = select i1 %328, i32 -933355439, i32 -449047022
  store i32 %330, i32* %28
  br label %407

; <label>:331:                                    ; preds = %29
  %332 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %333 = bitcast %"class.std::vector"* %332 to %"struct.std::_Vector_base"*
  %334 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %333, i32 0, i32 0
  %335 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %334, i32 0, i32 0
  %336 = load %"class.std::vector.0"*, %"class.std::vector.0"** %335, align 8
  %337 = load volatile i64*, i64** %14
  %338 = load i64, i64* %337, align 8
  %339 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %336, i64 %338
  %340 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %341 = bitcast %"class.std::vector"* %340 to %"struct.std::_Vector_base"*
  %342 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %341, i32 0, i32 0
  %343 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %342, i32 0, i32 1
  store %"class.std::vector.0"* %339, %"class.std::vector.0"** %343, align 8
  %344 = load i32, i32* @x.725
  %345 = load i32, i32* @y.726
  %346 = sub i32 0, 1
  %347 = add i32 %344, %346
  %348 = sub i32 %344, 1
  %349 = mul i32 %344, %347
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %345, 10
  %353 = xor i1 %351, true
  %354 = xor i1 %352, true
  %355 = xor i1 false, true
  %356 = and i1 %353, false
  %357 = and i1 %351, %355
  %358 = and i1 %354, false
  %359 = and i1 %352, %355
  %360 = or i1 %356, %357
  %361 = or i1 %358, %359
  %362 = xor i1 %360, %361
  %363 = or i1 %353, %354
  %364 = xor i1 %363, true
  %365 = or i1 false, %355
  %366 = and i1 %364, %365
  %367 = or i1 %362, %366
  %368 = or i1 %351, %352
  %369 = select i1 %367, i32 1577776735, i32 -449047022
  store i32 %369, i32* %28
  br label %407

; <label>:370:                                    ; preds = %29
  store i32 703953111, i32* %28
  br label %407

; <label>:371:                                    ; preds = %29
  %372 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  ret %"class.std::vector"* %372

; <label>:373:                                    ; preds = %29
  %374 = alloca %"class.std::vector"*, align 8
  %375 = alloca %"class.std::vector"*, align 8
  %376 = alloca i64, align 8
  %377 = alloca %"class.std::vector.0"*, align 8
  %378 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %379 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %380 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %381 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %382 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %383 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %384 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %374, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %375, align 8
  %385 = load %"class.std::vector"*, %"class.std::vector"** %374, align 8
  %386 = load %"class.std::vector"*, %"class.std::vector"** %375, align 8
  %387 = icmp ne %"class.std::vector"* %386, %385
  store i32 1261523602, i32* %28
  br label %407

; <label>:388:                                    ; preds = %29
  %389 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %390 = call i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %389) #3
  %391 = load volatile i64*, i64** %14
  %392 = load i64, i64* %391, align 8
  %393 = icmp uge i64 %390, %392
  store i32 -1881000518, i32* %28
  br label %407

; <label>:394:                                    ; preds = %29
  %395 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %396 = bitcast %"class.std::vector"* %395 to %"struct.std::_Vector_base"*
  %397 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %396, i32 0, i32 0
  %398 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %397, i32 0, i32 0
  %399 = load %"class.std::vector.0"*, %"class.std::vector.0"** %398, align 8
  %400 = load volatile i64*, i64** %14
  %401 = load i64, i64* %400, align 8
  %402 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %399, i64 %401
  %403 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %404 = bitcast %"class.std::vector"* %403 to %"struct.std::_Vector_base"*
  %405 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %404, i32 0, i32 0
  %406 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %405, i32 0, i32 1
  store %"class.std::vector.0"* %402, %"class.std::vector.0"** %406, align 8
  store i32 -933355439, i32* %28
  br label %407

; <label>:407:                                    ; preds = %394, %388, %373, %370, %331, %315, %314, %268, %228, %225, %204, %188, %111, %100, %97, %52, %32, %31
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEaSERKS4_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.31"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.31"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.31"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %12 = alloca %"struct.Graph<0>::Edge"**
  %13 = alloca i64*
  %14 = alloca %"class.std::vector.0"**
  %15 = alloca i1
  %16 = alloca i1
  %17 = load i32, i32* @x.727
  %18 = load i32, i32* @y.728
  %19 = sub i32 %17, -1262660275
  %20 = sub i32 %19, 1
  %21 = add i32 %20, -1262660275
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  store i1 %25, i1* %16
  %26 = icmp slt i32 %18, 10
  store i1 %26, i1* %15
  %27 = alloca i32
  store i32 1411102137, i32* %27
  br label %28

; <label>:28:                                     ; preds = %2, %503
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 1411102137, label %31
    i32 -294579059, label %39
    i32 1221225826, label %84
    i32 -549933541, label %87
    i32 914601193, label %98
    i32 63512585, label %126
    i32 -747012059, label %217
    i32 -1330696786, label %218
    i32 -608932264, label %225
    i32 -1030878800, label %265
    i32 312463012, label %311
    i32 -682836985, label %312
    i32 -993155903, label %325
    i32 1619173465, label %341
    i32 1337820699, label %369
    i32 2126761591, label %371
    i32 1563430956, label %386
    i32 80658027, label %502
  ]

; <label>:30:                                     ; preds = %28
  br label %503

; <label>:31:                                     ; preds = %28
  %32 = load volatile i1, i1* %16
  %33 = load volatile i1, i1* %15
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -294579059, i32 2126761591
  store i32 %38, i32* %27
  br label %503

; <label>:39:                                     ; preds = %28
  %40 = alloca %"class.std::vector.0"*, align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %41, %"class.std::vector.0"*** %14
  %42 = alloca i64, align 8
  store i64* %42, i64** %13
  %43 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"** %43, %"struct.Graph<0>::Edge"*** %12
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %44, %"class.__gnu_cxx::__normal_iterator"** %11
  %45 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %45, %"class.__gnu_cxx::__normal_iterator"** %10
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %46, %"class.__gnu_cxx::__normal_iterator.31"** %9
  %47 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %47, %"class.__gnu_cxx::__normal_iterator"** %8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %48, %"class.__gnu_cxx::__normal_iterator"** %7
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %49, %"class.__gnu_cxx::__normal_iterator.31"** %6
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %50, %"class.__gnu_cxx::__normal_iterator.31"** %5
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  %51 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %51, align 8
  %52 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  store %"class.std::vector.0"* %52, %"class.std::vector.0"** %4
  %53 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %54 = load %"class.std::vector.0"*, %"class.std::vector.0"** %53, align 8
  %55 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %56 = icmp ne %"class.std::vector.0"* %54, %55
  store i1 %56, i1* %3
  %57 = load i32, i32* @x.727
  %58 = load i32, i32* @y.728
  %59 = add i32 %57, -1442342101
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, -1442342101
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 1221225826, i32 2126761591
  store i32 %83, i32* %27
  br label %503

; <label>:84:                                     ; preds = %28
  %85 = load volatile i1, i1* %3
  %86 = select i1 %85, i32 -549933541, i32 -993155903
  store i32 %86, i32* %27
  br label %503

; <label>:87:                                     ; preds = %28
  %88 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %89 = load %"class.std::vector.0"*, %"class.std::vector.0"** %88, align 8
  %90 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %89) #3
  %91 = load volatile i64*, i64** %13
  store i64 %90, i64* %91, align 8
  %92 = load volatile i64*, i64** %13
  %93 = load i64, i64* %92, align 8
  %94 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %95 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE8capacityEv(%"class.std::vector.0"* %94) #3
  %96 = icmp ugt i64 %93, %95
  %97 = select i1 %96, i32 914601193, i32 -1330696786
  store i32 %97, i32* %27
  br label %503

; <label>:98:                                     ; preds = %28
  %99 = load i32, i32* @x.727
  %100 = load i32, i32* @y.728
  %101 = sub i32 %99, 672943046
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 672943046
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  %125 = select i1 %123, i32 63512585, i32 1563430956
  store i32 %125, i32* %27
  br label %503

; <label>:126:                                    ; preds = %28
  %127 = load volatile i64*, i64** %13
  %128 = load i64, i64* %127, align 8
  %129 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %130 = load %"class.std::vector.0"*, %"class.std::vector.0"** %129, align 8
  %131 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv(%"class.std::vector.0"* %130) #3
  %132 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %132, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %131, %"struct.Graph<0>::Edge"** %133, align 8
  %134 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %135 = load %"class.std::vector.0"*, %"class.std::vector.0"** %134, align 8
  %136 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv(%"class.std::vector.0"* %135) #3
  %137 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %138 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %137, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %136, %"struct.Graph<0>::Edge"** %138, align 8
  %139 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %140 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %139, i32 0, i32 0
  %141 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %140, align 8
  %142 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %143 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %142, i32 0, i32 0
  %144 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %143, align 8
  %145 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %146 = call %"struct.Graph<0>::Edge"* @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEPS2_mT_SC_(%"class.std::vector.0"* %145, i64 %128, %"struct.Graph<0>::Edge"* %141, %"struct.Graph<0>::Edge"* %144)
  %147 = load volatile %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %12
  store %"struct.Graph<0>::Edge"* %146, %"struct.Graph<0>::Edge"** %147, align 8
  %148 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %149 = bitcast %"class.std::vector.0"* %148 to %"struct.std::_Vector_base.1"*
  %150 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %149, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %150, i32 0, i32 0
  %152 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %151, align 8
  %153 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %154 = bitcast %"class.std::vector.0"* %153 to %"struct.std::_Vector_base.1"*
  %155 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %155, i32 0, i32 1
  %157 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %156, align 8
  %158 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %159 = bitcast %"class.std::vector.0"* %158 to %"struct.std::_Vector_base.1"*
  %160 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %159) #3
  call void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeES2_EvT_S4_RSaIT0_E(%"struct.Graph<0>::Edge"* %152, %"struct.Graph<0>::Edge"* %157, %"class.std::allocator.2"* dereferenceable(1) %160)
  %161 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %162 = bitcast %"class.std::vector.0"* %161 to %"struct.std::_Vector_base.1"*
  %163 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %164 = bitcast %"class.std::vector.0"* %163 to %"struct.std::_Vector_base.1"*
  %165 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %164, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %165, i32 0, i32 0
  %167 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %166, align 8
  %168 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %169 = bitcast %"class.std::vector.0"* %168 to %"struct.std::_Vector_base.1"*
  %170 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %169, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %170, i32 0, i32 2
  %172 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %171, align 8
  %173 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %174 = bitcast %"class.std::vector.0"* %173 to %"struct.std::_Vector_base.1"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %174, i32 0, i32 0
  %176 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %175, i32 0, i32 0
  %177 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %176, align 8
  %178 = ptrtoint %"struct.Graph<0>::Edge"* %172 to i64
  %179 = ptrtoint %"struct.Graph<0>::Edge"* %177 to i64
  %180 = sub i64 0, %179
  %181 = add i64 %178, %180
  %182 = sub i64 %178, %179
  %183 = sdiv exact i64 %181, 32
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %162, %"struct.Graph<0>::Edge"* %167, i64 %183)
  %184 = load volatile %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %12
  %185 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %184, align 8
  %186 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %187 = bitcast %"class.std::vector.0"* %186 to %"struct.std::_Vector_base.1"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %188, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %185, %"struct.Graph<0>::Edge"** %189, align 8
  %190 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %191 = bitcast %"class.std::vector.0"* %190 to %"struct.std::_Vector_base.1"*
  %192 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %191, i32 0, i32 0
  %193 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %192, i32 0, i32 0
  %194 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %193, align 8
  %195 = load volatile i64*, i64** %13
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %194, i64 %196
  %198 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %199 = bitcast %"class.std::vector.0"* %198 to %"struct.std::_Vector_base.1"*
  %200 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %199, i32 0, i32 0
  %201 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %200, i32 0, i32 2
  store %"struct.Graph<0>::Edge"* %197, %"struct.Graph<0>::Edge"** %201, align 8
  %202 = load i32, i32* @x.727
  %203 = load i32, i32* @y.728
  %204 = add i32 %202, -365476062
  %205 = sub i32 %204, 1
  %206 = sub i32 %205, -365476062
  %207 = sub i32 %202, 1
  %208 = mul i32 %202, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %203, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  %216 = select i1 %214, i32 -747012059, i32 1563430956
  store i32 %216, i32* %27
  br label %503

; <label>:217:                                    ; preds = %28
  store i32 -682836985, i32* %27
  br label %503

; <label>:218:                                    ; preds = %28
  %219 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %220 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %219) #3
  %221 = load volatile i64*, i64** %13
  %222 = load i64, i64* %221, align 8
  %223 = icmp uge i64 %220, %222
  %224 = select i1 %223, i32 -608932264, i32 -1030878800
  store i32 %224, i32* %27
  br label %503

; <label>:225:                                    ; preds = %28
  %226 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %227 = load %"class.std::vector.0"*, %"class.std::vector.0"** %226, align 8
  %228 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv(%"class.std::vector.0"* %227) #3
  %229 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %230 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %229, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %228, %"struct.Graph<0>::Edge"** %230, align 8
  %231 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %232 = load %"class.std::vector.0"*, %"class.std::vector.0"** %231, align 8
  %233 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv(%"class.std::vector.0"* %232) #3
  %234 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %235 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %234, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %233, %"struct.Graph<0>::Edge"** %235, align 8
  %236 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %237 = call %"struct.Graph<0>::Edge"* @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv(%"class.std::vector.0"* %236) #3
  %238 = load volatile %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %6
  %239 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %238, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %237, %"struct.Graph<0>::Edge"** %239, align 8
  %240 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %241 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %240, i32 0, i32 0
  %242 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %241, align 8
  %243 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %244 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %243, i32 0, i32 0
  %245 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %244, align 8
  %246 = load volatile %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %6
  %247 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %246, i32 0, i32 0
  %248 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %247, align 8
  %249 = call %"struct.Graph<0>::Edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET0_T_SE_SD_(%"struct.Graph<0>::Edge"* %242, %"struct.Graph<0>::Edge"* %245, %"struct.Graph<0>::Edge"* %248)
  %250 = load volatile %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %9
  %251 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %250, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %249, %"struct.Graph<0>::Edge"** %251, align 8
  %252 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %253 = call %"struct.Graph<0>::Edge"* @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv(%"class.std::vector.0"* %252) #3
  %254 = load volatile %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %5
  %255 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %254, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %253, %"struct.Graph<0>::Edge"** %255, align 8
  %256 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %257 = bitcast %"class.std::vector.0"* %256 to %"struct.std::_Vector_base.1"*
  %258 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %257) #3
  %259 = load volatile %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %9
  %260 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %259, i32 0, i32 0
  %261 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %260, align 8
  %262 = load volatile %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %5
  %263 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %262, i32 0, i32 0
  %264 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %263, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEES4_EvT_SA_RSaIT0_E(%"struct.Graph<0>::Edge"* %261, %"struct.Graph<0>::Edge"* %264, %"class.std::allocator.2"* dereferenceable(1) %258)
  store i32 312463012, i32* %27
  br label %503

; <label>:265:                                    ; preds = %28
  %266 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %267 = load %"class.std::vector.0"*, %"class.std::vector.0"** %266, align 8
  %268 = bitcast %"class.std::vector.0"* %267 to %"struct.std::_Vector_base.1"*
  %269 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %268, i32 0, i32 0
  %270 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %269, i32 0, i32 0
  %271 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %270, align 8
  %272 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %273 = load %"class.std::vector.0"*, %"class.std::vector.0"** %272, align 8
  %274 = bitcast %"class.std::vector.0"* %273 to %"struct.std::_Vector_base.1"*
  %275 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %274, i32 0, i32 0
  %276 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %275, i32 0, i32 0
  %277 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %276, align 8
  %278 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %279 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %278) #3
  %280 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %277, i64 %279
  %281 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %282 = bitcast %"class.std::vector.0"* %281 to %"struct.std::_Vector_base.1"*
  %283 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %282, i32 0, i32 0
  %284 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %283, i32 0, i32 0
  %285 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %284, align 8
  %286 = call %"struct.Graph<0>::Edge"* @_ZSt4copyIPN5GraphILl0EE4EdgeES3_ET0_T_S5_S4_(%"struct.Graph<0>::Edge"* %271, %"struct.Graph<0>::Edge"* %280, %"struct.Graph<0>::Edge"* %285)
  %287 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %288 = load %"class.std::vector.0"*, %"class.std::vector.0"** %287, align 8
  %289 = bitcast %"class.std::vector.0"* %288 to %"struct.std::_Vector_base.1"*
  %290 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %289, i32 0, i32 0
  %291 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %290, i32 0, i32 0
  %292 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %291, align 8
  %293 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %294 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %293) #3
  %295 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %292, i64 %294
  %296 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %297 = load %"class.std::vector.0"*, %"class.std::vector.0"** %296, align 8
  %298 = bitcast %"class.std::vector.0"* %297 to %"struct.std::_Vector_base.1"*
  %299 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %298, i32 0, i32 0
  %300 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %299, i32 0, i32 1
  %301 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %300, align 8
  %302 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %303 = bitcast %"class.std::vector.0"* %302 to %"struct.std::_Vector_base.1"*
  %304 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %303, i32 0, i32 0
  %305 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %304, i32 0, i32 1
  %306 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %305, align 8
  %307 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %308 = bitcast %"class.std::vector.0"* %307 to %"struct.std::_Vector_base.1"*
  %309 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %308) #3
  %310 = call %"struct.Graph<0>::Edge"* @_ZSt22__uninitialized_copy_aIPN5GraphILl0EE4EdgeES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.Graph<0>::Edge"* %295, %"struct.Graph<0>::Edge"* %301, %"struct.Graph<0>::Edge"* %306, %"class.std::allocator.2"* dereferenceable(1) %309)
  store i32 312463012, i32* %27
  br label %503

; <label>:311:                                    ; preds = %28
  store i32 -682836985, i32* %27
  br label %503

; <label>:312:                                    ; preds = %28
  %313 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %314 = bitcast %"class.std::vector.0"* %313 to %"struct.std::_Vector_base.1"*
  %315 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %314, i32 0, i32 0
  %316 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %315, i32 0, i32 0
  %317 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %316, align 8
  %318 = load volatile i64*, i64** %13
  %319 = load i64, i64* %318, align 8
  %320 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %317, i64 %319
  %321 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %322 = bitcast %"class.std::vector.0"* %321 to %"struct.std::_Vector_base.1"*
  %323 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %322, i32 0, i32 0
  %324 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %323, i32 0, i32 1
  store %"struct.Graph<0>::Edge"* %320, %"struct.Graph<0>::Edge"** %324, align 8
  store i32 -993155903, i32* %27
  br label %503

; <label>:325:                                    ; preds = %28
  %326 = load i32, i32* @x.727
  %327 = load i32, i32* @y.728
  %328 = sub i32 %326, 1713565557
  %329 = sub i32 %328, 1
  %330 = add i32 %329, 1713565557
  %331 = sub i32 %326, 1
  %332 = mul i32 %326, %330
  %333 = urem i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %327, 10
  %336 = and i1 %334, %335
  %337 = xor i1 %334, %335
  %338 = or i1 %336, %337
  %339 = or i1 %334, %335
  %340 = select i1 %338, i32 1619173465, i32 80658027
  store i32 %340, i32* %27
  br label %503

; <label>:341:                                    ; preds = %28
  %342 = load i32, i32* @x.727
  %343 = load i32, i32* @y.728
  %344 = add i32 %342, -556198049
  %345 = sub i32 %344, 1
  %346 = sub i32 %345, -556198049
  %347 = sub i32 %342, 1
  %348 = mul i32 %342, %346
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %343, 10
  %352 = xor i1 %350, true
  %353 = xor i1 %351, true
  %354 = xor i1 false, true
  %355 = and i1 %352, false
  %356 = and i1 %350, %354
  %357 = and i1 %353, false
  %358 = and i1 %351, %354
  %359 = or i1 %355, %356
  %360 = or i1 %357, %358
  %361 = xor i1 %359, %360
  %362 = or i1 %352, %353
  %363 = xor i1 %362, true
  %364 = or i1 false, %354
  %365 = and i1 %363, %364
  %366 = or i1 %361, %365
  %367 = or i1 %350, %351
  %368 = select i1 %366, i32 1337820699, i32 80658027
  store i32 %368, i32* %27
  br label %503

; <label>:369:                                    ; preds = %28
  %370 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %370

; <label>:371:                                    ; preds = %28
  %372 = alloca %"class.std::vector.0"*, align 8
  %373 = alloca %"class.std::vector.0"*, align 8
  %374 = alloca i64, align 8
  %375 = alloca %"struct.Graph<0>::Edge"*, align 8
  %376 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %377 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %378 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %379 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %380 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %381 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %382 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %372, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %373, align 8
  %383 = load %"class.std::vector.0"*, %"class.std::vector.0"** %372, align 8
  %384 = load %"class.std::vector.0"*, %"class.std::vector.0"** %373, align 8
  %385 = icmp ne %"class.std::vector.0"* %384, %383
  store i32 -294579059, i32* %27
  br label %503

; <label>:386:                                    ; preds = %28
  %387 = load volatile i64*, i64** %13
  %388 = load i64, i64* %387, align 8
  %389 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %390 = load %"class.std::vector.0"*, %"class.std::vector.0"** %389, align 8
  %391 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv(%"class.std::vector.0"* %390) #3
  %392 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %393 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %392, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %391, %"struct.Graph<0>::Edge"** %393, align 8
  %394 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %14
  %395 = load %"class.std::vector.0"*, %"class.std::vector.0"** %394, align 8
  %396 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv(%"class.std::vector.0"* %395) #3
  %397 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %398 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %397, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %396, %"struct.Graph<0>::Edge"** %398, align 8
  %399 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %400 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %399, i32 0, i32 0
  %401 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %400, align 8
  %402 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %10
  %403 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %402, i32 0, i32 0
  %404 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %403, align 8
  %405 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %406 = call %"struct.Graph<0>::Edge"* @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEPS2_mT_SC_(%"class.std::vector.0"* %405, i64 %388, %"struct.Graph<0>::Edge"* %401, %"struct.Graph<0>::Edge"* %404)
  %407 = load volatile %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %12
  store %"struct.Graph<0>::Edge"* %406, %"struct.Graph<0>::Edge"** %407, align 8
  %408 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %409 = bitcast %"class.std::vector.0"* %408 to %"struct.std::_Vector_base.1"*
  %410 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %409, i32 0, i32 0
  %411 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %410, i32 0, i32 0
  %412 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %411, align 8
  %413 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %414 = bitcast %"class.std::vector.0"* %413 to %"struct.std::_Vector_base.1"*
  %415 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %414, i32 0, i32 0
  %416 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %415, i32 0, i32 1
  %417 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %416, align 8
  %418 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %419 = bitcast %"class.std::vector.0"* %418 to %"struct.std::_Vector_base.1"*
  %420 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %419) #3
  call void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeES2_EvT_S4_RSaIT0_E(%"struct.Graph<0>::Edge"* %412, %"struct.Graph<0>::Edge"* %417, %"class.std::allocator.2"* dereferenceable(1) %420)
  %421 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %422 = bitcast %"class.std::vector.0"* %421 to %"struct.std::_Vector_base.1"*
  %423 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %424 = bitcast %"class.std::vector.0"* %423 to %"struct.std::_Vector_base.1"*
  %425 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %424, i32 0, i32 0
  %426 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %425, i32 0, i32 0
  %427 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %426, align 8
  %428 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %429 = bitcast %"class.std::vector.0"* %428 to %"struct.std::_Vector_base.1"*
  %430 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %429, i32 0, i32 0
  %431 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %430, i32 0, i32 2
  %432 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %431, align 8
  %433 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %434 = bitcast %"class.std::vector.0"* %433 to %"struct.std::_Vector_base.1"*
  %435 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %434, i32 0, i32 0
  %436 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %435, i32 0, i32 0
  %437 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %436, align 8
  %438 = ptrtoint %"struct.Graph<0>::Edge"* %432 to i64
  %439 = ptrtoint %"struct.Graph<0>::Edge"* %437 to i64
  %440 = shl i64 %438, %439
  %441 = sub i64 0, -5571022937596407199
  %442 = sub i64 %441, %438
  %443 = add i64 %442, -5571022937596407199
  %444 = sub i64 0, %438
  %445 = sub i64 0, %443
  %446 = sub i64 0, %439
  %447 = add i64 %445, %446
  %448 = sub i64 0, %447
  %449 = add i64 %443, %439
  %450 = shl i64 %438, %439
  %451 = sub i64 %438, -7861714492561026175
  %452 = sub i64 %451, %439
  %453 = add i64 %452, -7861714492561026175
  %454 = sub i64 %438, %439
  %455 = mul i64 %453, %439
  %456 = sub i64 %438, 18227735341291427
  %457 = sub i64 %456, %439
  %458 = add i64 %457, 18227735341291427
  %459 = sub i64 %438, %439
  %460 = add i64 0, -252335419903436459
  %461 = sub i64 %460, %458
  %462 = sub i64 %461, -252335419903436459
  %463 = sub i64 0, %458
  %464 = sub i64 %462, 4042134146935581051
  %465 = add i64 %464, 32
  %466 = add i64 %465, 4042134146935581051
  %467 = add i64 %462, 32
  %468 = sub i64 0, 2564536617362505968
  %469 = sub i64 %468, %458
  %470 = add i64 %469, 2564536617362505968
  %471 = sub i64 0, %458
  %472 = sub i64 %470, 1837757931651371718
  %473 = add i64 %472, 32
  %474 = add i64 %473, 1837757931651371718
  %475 = add i64 %470, 32
  %476 = shl i64 %458, 32
  %477 = shl i64 %458, 32
  %478 = sub i64 0, 32
  %479 = add i64 %458, %478
  %480 = sub i64 %458, 32
  %481 = mul i64 %479, 32
  %482 = shl i64 %458, 32
  %483 = sdiv exact i64 %458, 32
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %422, %"struct.Graph<0>::Edge"* %427, i64 %483)
  %484 = load volatile %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %12
  %485 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %484, align 8
  %486 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %487 = bitcast %"class.std::vector.0"* %486 to %"struct.std::_Vector_base.1"*
  %488 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %487, i32 0, i32 0
  %489 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %488, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %485, %"struct.Graph<0>::Edge"** %489, align 8
  %490 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %491 = bitcast %"class.std::vector.0"* %490 to %"struct.std::_Vector_base.1"*
  %492 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %491, i32 0, i32 0
  %493 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %492, i32 0, i32 0
  %494 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %493, align 8
  %495 = load volatile i64*, i64** %13
  %496 = load i64, i64* %495, align 8
  %497 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %494, i64 %496
  %498 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %499 = bitcast %"class.std::vector.0"* %498 to %"struct.std::_Vector_base.1"*
  %500 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %499, i32 0, i32 0
  %501 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %500, i32 0, i32 2
  store %"struct.Graph<0>::Edge"* %497, %"struct.Graph<0>::Edge"** %501, align 8
  store i32 63512585, i32* %27
  br label %503

; <label>:502:                                    ; preds = %28
  store i32 1619173465, i32* %27
  br label %503

; <label>:503:                                    ; preds = %502, %386, %371, %341, %325, %312, %311, %265, %225, %218, %217, %126, %98, %87, %84, %39, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE8capacityEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = ptrtoint %"class.std::vector.0"* %7 to i64
  %13 = ptrtoint %"class.std::vector.0"* %11 to i64
  %14 = add i64 %12, -2981896047501865016
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -2981896047501865016
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS4_S6_EEEEPS4_mT_SE_(%"class.std::vector"*, i64, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::vector.0"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %5, i32 0, i32 0
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %6, i32 0, i32 0
  store %"class.std::vector.0"* %3, %"class.std::vector.0"** %15, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %7, align 8
  store i64 %1, i64* %8, align 8
  %16 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %17 = bitcast %"class.std::vector"* %16 to %"struct.std::_Vector_base"*
  %18 = load i64, i64* %8, align 8
  %19 = call %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base"* %17, i64 %18)
  store %"class.std::vector.0"* %19, %"class.std::vector.0"** %9, align 8
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  %25 = bitcast %"class.std::vector"* %16 to %"struct.std::_Vector_base"*
  %26 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %25) #3
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %10, i32 0, i32 0
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %11, i32 0, i32 0
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %31 = invoke %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEPS7_S7_ET0_T_SF_SE_RSaIT1_E(%"class.std::vector.0"* %28, %"class.std::vector.0"* %30, %"class.std::vector.0"* %24, %"class.std::allocator"* dereferenceable(1) %26)
          to label %32 unwind label %34

; <label>:32:                                     ; preds = %4
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  ret %"class.std::vector.0"* %33

; <label>:34:                                     ; preds = %4
  %35 = landingpad { i8*, i32 }
          catch i8* null
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %12, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %13, align 4
  br label %38

; <label>:38:                                     ; preds = %34
  %39 = load i32, i32* @x.731
  %40 = load i32, i32* @y.732
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %182

; <label>:64:                                     ; preds = %38, %182
  %65 = load i8*, i8** %12, align 8
  %66 = call i8* @__cxa_begin_catch(i8* %65) #3
  %67 = bitcast %"class.std::vector"* %16 to %"struct.std::_Vector_base"*
  %68 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  %69 = load i64, i64* %8, align 8
  %70 = load i32, i32* @x.731
  %71 = load i32, i32* @y.732
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  br i1 %93, label %95, label %182

; <label>:95:                                     ; preds = %64
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5GraphILl0EE4EdgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %67, %"class.std::vector.0"* %68, i64 %69)
          to label %96 unwind label %138

; <label>:96:                                     ; preds = %95
  %97 = load i32, i32* @x.731
  %98 = load i32, i32* @y.732
  %99 = add i32 %97, 709179789
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, 709179789
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %188

; <label>:111:                                    ; preds = %96, %188
  %112 = load i32, i32* @x.731
  %113 = load i32, i32* @y.732
  %114 = sub i32 0, 1
  %115 = add i32 %112, %114
  %116 = sub i32 %112, 1
  %117 = mul i32 %112, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %113, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 false, true
  %124 = and i1 %121, false
  %125 = and i1 %119, %123
  %126 = and i1 %122, false
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 false, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  br i1 %135, label %137, label %188

; <label>:137:                                    ; preds = %111
  invoke void @__cxa_rethrow() #12
          to label %181 unwind label %138

; <label>:138:                                    ; preds = %137, %95
  %139 = landingpad { i8*, i32 }
          cleanup
  %140 = extractvalue { i8*, i32 } %139, 0
  store i8* %140, i8** %12, align 8
  %141 = extractvalue { i8*, i32 } %139, 1
  store i32 %141, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %142 unwind label %178

; <label>:142:                                    ; preds = %138
  %143 = load i32, i32* @x.731
  %144 = load i32, i32* @y.732
  %145 = sub i32 %143, 448705872
  %146 = sub i32 %145, 1
  %147 = add i32 %146, 448705872
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  br i1 %155, label %157, label %189

; <label>:157:                                    ; preds = %142, %189
  %158 = load i32, i32* @x.731
  %159 = load i32, i32* @y.732
  %160 = sub i32 0, 1
  %161 = add i32 %158, %160
  %162 = sub i32 %158, 1
  %163 = mul i32 %158, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %159, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %189

; <label>:171:                                    ; preds = %157
  br label %173
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:173:                                    ; preds = %171
  %174 = load i8*, i8** %12, align 8
  %175 = load i32, i32* %13, align 4
  %176 = insertvalue { i8*, i32 } undef, i8* %174, 0
  %177 = insertvalue { i8*, i32 } %176, i32 %175, 1
  resume { i8*, i32 } %177

; <label>:178:                                    ; preds = %138
  %179 = landingpad { i8*, i32 }
          catch i8* null
  %180 = extractvalue { i8*, i32 } %179, 0
  call void @__clang_call_terminate(i8* %180) #7
  unreachable

; <label>:181:                                    ; preds = %137
  unreachable

; <label>:182:                                    ; preds = %64, %38
  %183 = load i8*, i8** %12, align 8
  %184 = call i8* @__cxa_begin_catch(i8* %183) #3
  %185 = bitcast %"class.std::vector"* %16 to %"struct.std::_Vector_base"*
  %186 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  %187 = load i64, i64* %8, align 8
  br label %64

; <label>:188:                                    ; preds = %111, %96
  br label %111

; <label>:189:                                    ; preds = %157, %142
  br label %157
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE5beginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  store %"class.std::vector.0"* %9, %"class.std::vector.0"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS8_(%"class.__gnu_cxx::__normal_iterator.29"* %2, %"class.std::vector.0"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %2, i32 0, i32 0
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNKSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE3endEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  store %"class.std::vector.0"* %9, %"class.std::vector.0"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS8_(%"class.__gnu_cxx::__normal_iterator.29"* %2, %"class.std::vector.0"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %2, i32 0, i32 0
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEES7_EvT_SC_RSaIT0_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %4, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %5, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %10, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %7, i32 0, i32 0
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEEvT_SC_(%"class.std::vector.0"* %16, %"class.std::vector.0"* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEENS1_IPS7_SB_EEET0_T_SG_SF_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %5, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %6, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %7, i32 0, i32 0
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  %20 = call %"class.std::vector.0"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEENSt11_Miter_baseIT_E13iterator_typeESE_(%"class.std::vector.0"* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %8, i32 0, i32 0
  store %"class.std::vector.0"* %20, %"class.std::vector.0"** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %11, i32 0, i32 0
  %25 = load %"class.std::vector.0"*, %"class.std::vector.0"** %24, align 8
  %26 = call %"class.std::vector.0"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEENSt11_Miter_baseIT_E13iterator_typeESE_(%"class.std::vector.0"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %10, i32 0, i32 0
  store %"class.std::vector.0"* %26, %"class.std::vector.0"** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %8, i32 0, i32 0
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %10, i32 0, i32 0
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %12, i32 0, i32 0
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %36 = call %"class.std::vector.0"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEENS1_IPS7_SB_EEET1_T0_SG_SF_(%"class.std::vector.0"* %31, %"class.std::vector.0"* %33, %"class.std::vector.0"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %4, i32 0, i32 0
  store %"class.std::vector.0"* %36, %"class.std::vector.0"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %4, i32 0, i32 0
  %39 = load %"class.std::vector.0"*, %"class.std::vector.0"** %38, align 8
  ret %"class.std::vector.0"* %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE5beginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.30"* %2, %"class.std::vector.0"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  ret %"class.std::vector.0"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt6vectorIS_IN5GraphILl0EE4EdgeESaIS2_EESaIS4_EE3endEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >, std::allocator<std::vector<Graph<0>::Edge, std::allocator<Graph<0>::Edge> > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.30"* %2, %"class.std::vector.0"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  ret %"class.std::vector.0"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt4copyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET0_T_S8_S7_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = call %"class.std::vector.0"* @_ZSt12__miter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEENSt11_Miter_baseIT_E13iterator_typeES8_(%"class.std::vector.0"* %7)
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = call %"class.std::vector.0"* @_ZSt12__miter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEENSt11_Miter_baseIT_E13iterator_typeES8_(%"class.std::vector.0"* %9)
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %12 = call %"class.std::vector.0"* @_ZSt14__copy_move_a2ILb0EPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET1_T0_S8_S7_(%"class.std::vector.0"* %8, %"class.std::vector.0"* %10, %"class.std::vector.0"* %11)
  ret %"class.std::vector.0"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_S5_ET0_T_S8_S7_RSaIT1_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.0"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.747
  %9 = load i32, i32* @y.748
  %10 = sub i32 %8, 698634847
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 698634847
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1749602985, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %77
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1749602985, label %22
    i32 -452867983, label %30
    i32 -56966654, label %66
    i32 -1393864727, label %68
  ]

; <label>:21:                                     ; preds = %19
  br label %77

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -452867983, i32 -1393864727
  store i32 %29, i32* %18
  br label %77

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.0"*, align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca %"class.std::vector.0"*, align 8
  %34 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %31, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %32, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %33, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %34, align 8
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %38 = call %"class.std::vector.0"* @_ZSt18uninitialized_copyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET0_T_S8_S7_(%"class.std::vector.0"* %35, %"class.std::vector.0"* %36, %"class.std::vector.0"* %37)
  store %"class.std::vector.0"* %38, %"class.std::vector.0"** %5
  %39 = load i32, i32* @x.747
  %40 = load i32, i32* @y.748
  %41 = add i32 %39, -137043438
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -137043438
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -56966654, i32 -1393864727
  store i32 %65, i32* %18
  br label %77

; <label>:66:                                     ; preds = %19
  %67 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  ret %"class.std::vector.0"* %67

; <label>:68:                                     ; preds = %19
  %69 = alloca %"class.std::vector.0"*, align 8
  %70 = alloca %"class.std::vector.0"*, align 8
  %71 = alloca %"class.std::vector.0"*, align 8
  %72 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %69, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %70, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %71, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %72, align 8
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %69, align 8
  %74 = load %"class.std::vector.0"*, %"class.std::vector.0"** %70, align 8
  %75 = load %"class.std::vector.0"*, %"class.std::vector.0"** %71, align 8
  %76 = call %"class.std::vector.0"* @_ZSt18uninitialized_copyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET0_T_S8_S7_(%"class.std::vector.0"* %73, %"class.std::vector.0"* %74, %"class.std::vector.0"* %75)
  store i32 -452867983, i32* %18
  br label %77

; <label>:77:                                     ; preds = %68, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEPS7_S7_ET0_T_SF_SE_RSaIT1_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %5, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %6, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %12, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %22 = call %"class.std::vector.0"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEPS7_ET0_T_SF_SE_(%"class.std::vector.0"* %19, %"class.std::vector.0"* %21, %"class.std::vector.0"* %17)
  ret %"class.std::vector.0"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEPS7_ET0_T_SF_SE_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.751
  %8 = load i32, i32* @y.752
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -321732953, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %107
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -321732953, label %20
    i32 -407451066, label %40
    i32 -1593998033, label %86
    i32 1855875043, label %88
  ]

; <label>:19:                                     ; preds = %17
  br label %107

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -407451066, i32 1855875043
  store i32 %39, i32* %16
  br label %107

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %43 = alloca %"class.std::vector.0"*, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %41, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %47, align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %42, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %48, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %43, align 8
  store i8 1, i8* %44, align 1
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %45 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %46 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load %"class.std::vector.0"*, %"class.std::vector.0"** %43, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %45, i32 0, i32 0
  %55 = load %"class.std::vector.0"*, %"class.std::vector.0"** %54, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %46, i32 0, i32 0
  %57 = load %"class.std::vector.0"*, %"class.std::vector.0"** %56, align 8
  %58 = call %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS7_EES4_IS9_SaIS9_EEEEPS9_EET0_T_SH_SG_(%"class.std::vector.0"* %55, %"class.std::vector.0"* %57, %"class.std::vector.0"* %53)
  store %"class.std::vector.0"* %58, %"class.std::vector.0"** %4
  %59 = load i32, i32* @x.751
  %60 = load i32, i32* @y.752
  %61 = add i32 %59, 2104332655
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 2104332655
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -1593998033, i32 1855875043
  store i32 %85, i32* %16
  br label %107

; <label>:86:                                     ; preds = %17
  %87 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %87

; <label>:88:                                     ; preds = %17
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %91 = alloca %"class.std::vector.0"*, align 8
  %92 = alloca i8, align 1
  %93 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %94 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %95 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %89, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %95, align 8
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %90, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %96, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %91, align 8
  store i8 1, i8* %92, align 1
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %93 to i8*
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %94 to i8*
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = load %"class.std::vector.0"*, %"class.std::vector.0"** %91, align 8
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %93, i32 0, i32 0
  %103 = load %"class.std::vector.0"*, %"class.std::vector.0"** %102, align 8
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %94, i32 0, i32 0
  %105 = load %"class.std::vector.0"*, %"class.std::vector.0"** %104, align 8
  %106 = call %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS7_EES4_IS9_SaIS9_EEEEPS9_EET0_T_SH_SG_(%"class.std::vector.0"* %103, %"class.std::vector.0"* %105, %"class.std::vector.0"* %101)
  store i32 -407451066, i32* %16
  br label %107

; <label>:107:                                    ; preds = %88, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS7_EES4_IS9_SaIS9_EEEEPS9_EET0_T_SH_SG_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %4, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %5, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %11, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  store %"class.std::vector.0"* %12, %"class.std::vector.0"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %61, %3
  %14 = load i32, i32* @x.753
  %15 = load i32, i32* @y.754
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %257

; <label>:39:                                     ; preds = %13, %257
  %40 = call zeroext i1 @_ZN9__gnu_cxxneIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_(%"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %5) #3
  %41 = load i32, i32* @x.753
  %42 = load i32, i32* @y.754
  %43 = add i32 %41, -129076647
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -129076647
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %257

; <label>:55:                                     ; preds = %39
  br i1 %40, label %56, label %75

; <label>:56:                                     ; preds = %55
  %57 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %58 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEPT_RS6_(%"class.std::vector.0"* dereferenceable(24) %57) #3
  %59 = call dereferenceable(24) %"class.std::vector.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.29"* %4) #3
  invoke void @_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJRKS5_EEvPT_DpOT0_(%"class.std::vector.0"* %58, %"class.std::vector.0"* dereferenceable(24) %59)
          to label %60 unwind label %65

; <label>:60:                                     ; preds = %56
  br label %61

; <label>:61:                                     ; preds = %60
  %62 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.29"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEppEv(%"class.__gnu_cxx::__normal_iterator.29"* %4) #3
  %63 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %64 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %63, i32 1
  store %"class.std::vector.0"* %64, %"class.std::vector.0"** %7, align 8
  br label %13

; <label>:65:                                     ; preds = %56
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %8, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %9, align 4
  br label %69

; <label>:69:                                     ; preds = %65
  %70 = load i8*, i8** %8, align 8
  %71 = call i8* @__cxa_begin_catch(i8* %70) #3
  %72 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEvT_S7_(%"class.std::vector.0"* %72, %"class.std::vector.0"* %73)
          to label %74 unwind label %105

; <label>:74:                                     ; preds = %69
  invoke void @__cxa_rethrow() #12
          to label %256 unwind label %105

; <label>:75:                                     ; preds = %55
  %76 = load i32, i32* @x.753
  %77 = load i32, i32* @y.754
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %259

; <label>:89:                                     ; preds = %75, %259
  %90 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %91 = load i32, i32* @x.753
  %92 = load i32, i32* @y.754
  %93 = sub i32 0, 1
  %94 = add i32 %91, %93
  %95 = sub i32 %91, 1
  %96 = mul i32 %91, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %92, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %259

; <label>:104:                                    ; preds = %89
  ret %"class.std::vector.0"* %90

; <label>:105:                                    ; preds = %74, %69
  %106 = load i32, i32* @x.753
  %107 = load i32, i32* @y.754
  %108 = sub i32 %106, 898743700
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 898743700
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %261

; <label>:132:                                    ; preds = %105, %261
  %133 = landingpad { i8*, i32 }
          cleanup
  %134 = extractvalue { i8*, i32 } %133, 0
  store i8* %134, i8** %8, align 8
  %135 = extractvalue { i8*, i32 } %133, 1
  store i32 %135, i32* %9, align 4
  %136 = load i32, i32* @x.753
  %137 = load i32, i32* @y.754
  %138 = add i32 %136, 418585478
  %139 = sub i32 %138, 1
  %140 = sub i32 %139, 418585478
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  br i1 %148, label %150, label %261

; <label>:150:                                    ; preds = %132
  invoke void @__cxa_end_catch()
          to label %151 unwind label %253

; <label>:151:                                    ; preds = %150
  %152 = load i32, i32* @x.753
  %153 = load i32, i32* @y.754
  %154 = sub i32 0, 1
  %155 = add i32 %152, %154
  %156 = sub i32 %152, 1
  %157 = mul i32 %152, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %153, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 false, true
  %164 = and i1 %161, false
  %165 = and i1 %159, %163
  %166 = and i1 %162, false
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 false, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %265

; <label>:177:                                    ; preds = %151, %265
  %178 = load i32, i32* @x.753
  %179 = load i32, i32* @y.754
  %180 = sub i32 %178, 560443171
  %181 = sub i32 %180, 1
  %182 = add i32 %181, 560443171
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = xor i1 %186, true
  %189 = xor i1 %187, true
  %190 = xor i1 true, true
  %191 = and i1 %188, true
  %192 = and i1 %186, %190
  %193 = and i1 %189, true
  %194 = and i1 %187, %190
  %195 = or i1 %191, %192
  %196 = or i1 %193, %194
  %197 = xor i1 %195, %196
  %198 = or i1 %188, %189
  %199 = xor i1 %198, true
  %200 = or i1 true, %190
  %201 = and i1 %199, %200
  %202 = or i1 %197, %201
  %203 = or i1 %186, %187
  br i1 %202, label %204, label %265

; <label>:204:                                    ; preds = %177
  br label %248
                                                  ; No predecessors!
  %206 = load i32, i32* @x.753
  %207 = load i32, i32* @y.754
  %208 = add i32 %206, -988197246
  %209 = sub i32 %208, 1
  %210 = sub i32 %209, -988197246
  %211 = sub i32 %206, 1
  %212 = mul i32 %206, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %207, 10
  %216 = xor i1 %214, true
  %217 = xor i1 %215, true
  %218 = xor i1 true, true
  %219 = and i1 %216, true
  %220 = and i1 %214, %218
  %221 = and i1 %217, true
  %222 = and i1 %215, %218
  %223 = or i1 %219, %220
  %224 = or i1 %221, %222
  %225 = xor i1 %223, %224
  %226 = or i1 %216, %217
  %227 = xor i1 %226, true
  %228 = or i1 true, %218
  %229 = and i1 %227, %228
  %230 = or i1 %225, %229
  %231 = or i1 %214, %215
  br i1 %230, label %232, label %266

; <label>:232:                                    ; preds = %205, %266
  call void @llvm.trap()
  %233 = load i32, i32* @x.753
  %234 = load i32, i32* @y.754
  %235 = sub i32 %233, -39594726
  %236 = sub i32 %235, 1
  %237 = add i32 %236, -39594726
  %238 = sub i32 %233, 1
  %239 = mul i32 %233, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %234, 10
  %243 = and i1 %241, %242
  %244 = xor i1 %241, %242
  %245 = or i1 %243, %244
  %246 = or i1 %241, %242
  br i1 %245, label %247, label %266

; <label>:247:                                    ; preds = %232
  unreachable

; <label>:248:                                    ; preds = %204
  %249 = load i8*, i8** %8, align 8
  %250 = load i32, i32* %9, align 4
  %251 = insertvalue { i8*, i32 } undef, i8* %249, 0
  %252 = insertvalue { i8*, i32 } %251, i32 %250, 1
  resume { i8*, i32 } %252

; <label>:253:                                    ; preds = %150
  %254 = landingpad { i8*, i32 }
          catch i8* null
  %255 = extractvalue { i8*, i32 } %254, 0
  call void @__clang_call_terminate(i8* %255) #7
  unreachable

; <label>:256:                                    ; preds = %74
  unreachable

; <label>:257:                                    ; preds = %39, %13
  %258 = call zeroext i1 @_ZN9__gnu_cxxneIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_(%"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8) %5) #3
  br label %39

; <label>:259:                                    ; preds = %89, %75
  %260 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  br label %89

; <label>:261:                                    ; preds = %132, %105
  %262 = landingpad { i8*, i32 }
          cleanup
  %263 = extractvalue { i8*, i32 } %262, 0
  store i8* %263, i8** %8, align 8
  %264 = extractvalue { i8*, i32 } %262, 1
  store i32 %264, i32* %9, align 4
  br label %132

; <label>:265:                                    ; preds = %177, %151
  br label %177

; <label>:266:                                    ; preds = %232, %205
  call void @llvm.trap()
  br label %232
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_(%"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.29"* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.755
  %7 = load i32, i32* @y.756
  %8 = add i32 %6, -357949424
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -357949424
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 866631758, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 866631758, label %20
    i32 1825929351, label %40
    i32 -1405198180, label %77
    i32 -914697798, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1825929351, i32 -914697798
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %1, %"class.__gnu_cxx::__normal_iterator.29"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %41, align 8
  %44 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"* %43) #3
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %42, align 8
  %47 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"* %46) #3
  %48 = load %"class.std::vector.0"*, %"class.std::vector.0"** %47, align 8
  %49 = icmp ne %"class.std::vector.0"* %45, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.755
  %51 = load i32, i32* @y.756
  %52 = add i32 %50, -319619536
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -319619536
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1405198180, i32 -914697798
  store i32 %76, i32* %16
  br label %89

; <label>:77:                                     ; preds = %17
  %78 = load volatile i1, i1* %3
  ret i1 %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %80, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %1, %"class.__gnu_cxx::__normal_iterator.29"** %81, align 8
  %82 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %80, align 8
  %83 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"* %82) #3
  %84 = load %"class.std::vector.0"*, %"class.std::vector.0"** %83, align 8
  %85 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %81, align 8
  %86 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"* %85) #3
  %87 = load %"class.std::vector.0"*, %"class.std::vector.0"** %86, align 8
  %88 = icmp ne %"class.std::vector.0"* %84, %87
  store i32 1825929351, i32* %16
  br label %89

; <label>:89:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJRKS5_EEvPT_DpOT0_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.0"*
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEOT_RNSt16remove_referenceIS8_E4typeE(%"class.std::vector.0"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2ERKS4_(%"class.std::vector.0"* %7, %"class.std::vector.0"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.29"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.29"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEppEv(%"class.__gnu_cxx::__normal_iterator.29"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i32 1
  store %"class.std::vector.0"* %6, %"class.std::vector.0"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.29"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.0"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.763
  %6 = load i32, i32* @y.764
  %7 = add i32 %5, 1219436520
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1219436520
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -49782286, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -49782286, label %19
    i32 -959347806, label %39
    i32 88279436, label %70
    i32 1183670909, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -959347806, i32 1183670909
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %41, i32 0, i32 0
  store %"class.std::vector.0"** %42, %"class.std::vector.0"*** %2
  %43 = load i32, i32* @x.763
  %44 = load i32, i32* @y.764
  %45 = sub i32 %43, -1357450789
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1357450789
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 88279436, i32 1183670909
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %2
  ret %"class.std::vector.0"** %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %74, i32 0, i32 0
  store i32 -959347806, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEOT_RNSt16remove_referenceIS8_E4typeE(%"class.std::vector.0"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2ERKS4_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.767
  %4 = load i32, i32* @y.768
  %5 = sub i32 %3, 2117842814
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 2117842814
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %177

; <label>:29:                                     ; preds = %2, %177
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca %"class.std::vector.0"*, align 8
  %32 = alloca %"class.std::allocator.2", align 1
  %33 = alloca i8*
  %34 = alloca i32
  %35 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %31, align 8
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %38 = bitcast %"class.std::vector.0"* %37 to %"struct.std::_Vector_base.1"*
  %39 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %40 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %39) #3
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %42 = bitcast %"class.std::vector.0"* %41 to %"struct.std::_Vector_base.1"*
  %43 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %42) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5GraphILl0EE4EdgeEEE17_S_select_on_copyERKS4_(%"class.std::allocator.2"* sret %32, %"class.std::allocator.2"* dereferenceable(1) %43)
  %44 = load i32, i32* @x.767
  %45 = load i32, i32* @y.768
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %177

; <label>:57:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.1"* %38, i64 %40, %"class.std::allocator.2"* dereferenceable(1) %32)
          to label %58 unwind label %80

; <label>:58:                                     ; preds = %57
  call void @_ZNSaIN5GraphILl0EE4EdgeEED2Ev(%"class.std::allocator.2"* %32) #3
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %60 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv(%"class.std::vector.0"* %59) #3
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %35, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %60, %"struct.Graph<0>::Edge"** %61, align 8
  %62 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %63 = call %"struct.Graph<0>::Edge"* @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv(%"class.std::vector.0"* %62) #3
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %63, %"struct.Graph<0>::Edge"** %64, align 8
  %65 = bitcast %"class.std::vector.0"* %37 to %"struct.std::_Vector_base.1"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %66, i32 0, i32 0
  %68 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %67, align 8
  %69 = bitcast %"class.std::vector.0"* %37 to %"struct.std::_Vector_base.1"*
  %70 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %69) #3
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %35, i32 0, i32 0
  %72 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %71, align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  %74 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %73, align 8
  %75 = invoke %"struct.Graph<0>::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEPS4_S4_ET0_T_SD_SC_RSaIT1_E(%"struct.Graph<0>::Edge"* %72, %"struct.Graph<0>::Edge"* %74, %"struct.Graph<0>::Edge"* %68, %"class.std::allocator.2"* dereferenceable(1) %70)
          to label %76 unwind label %84

; <label>:76:                                     ; preds = %58
  %77 = bitcast %"class.std::vector.0"* %37 to %"struct.std::_Vector_base.1"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %78, i32 0, i32 1
  store %"struct.Graph<0>::Edge"* %75, %"struct.Graph<0>::Edge"** %79, align 8
  ret void

; <label>:80:                                     ; preds = %57
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %33, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %34, align 4
  call void @_ZNSaIN5GraphILl0EE4EdgeEED2Ev(%"class.std::allocator.2"* %32) #3
  br label %130

; <label>:84:                                     ; preds = %58
  %85 = load i32, i32* @x.767
  %86 = load i32, i32* @y.768
  %87 = sub i32 %85, 2107421445
  %88 = sub i32 %87, 1
  %89 = add i32 %88, 2107421445
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %192

; <label>:111:                                    ; preds = %84, %192
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %33, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %34, align 4
  %115 = bitcast %"class.std::vector.0"* %37 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %115) #3
  %116 = load i32, i32* @x.767
  %117 = load i32, i32* @y.768
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  br i1 %127, label %129, label %192

; <label>:129:                                    ; preds = %111
  br label %130

; <label>:130:                                    ; preds = %129, %80
  %131 = load i32, i32* @x.767
  %132 = load i32, i32* @y.768
  %133 = add i32 %131, -241686829
  %134 = sub i32 %133, 1
  %135 = sub i32 %134, -241686829
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 false, true
  %144 = and i1 %141, false
  %145 = and i1 %139, %143
  %146 = and i1 %142, false
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 false, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  br i1 %155, label %157, label %197

; <label>:157:                                    ; preds = %130, %197
  %158 = load i8*, i8** %33, align 8
  %159 = load i32, i32* %34, align 4
  %160 = insertvalue { i8*, i32 } undef, i8* %158, 0
  %161 = insertvalue { i8*, i32 } %160, i32 %159, 1
  %162 = load i32, i32* @x.767
  %163 = load i32, i32* @y.768
  %164 = sub i32 %162, -1444288355
  %165 = sub i32 %164, 1
  %166 = add i32 %165, -1444288355
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = and i1 %170, %171
  %173 = xor i1 %170, %171
  %174 = or i1 %172, %173
  %175 = or i1 %170, %171
  br i1 %174, label %176, label %197

; <label>:176:                                    ; preds = %157
  resume { i8*, i32 } %161

; <label>:177:                                    ; preds = %29, %2
  %178 = alloca %"class.std::vector.0"*, align 8
  %179 = alloca %"class.std::vector.0"*, align 8
  %180 = alloca %"class.std::allocator.2", align 1
  %181 = alloca i8*
  %182 = alloca i32
  %183 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %184 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %178, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %179, align 8
  %185 = load %"class.std::vector.0"*, %"class.std::vector.0"** %178, align 8
  %186 = bitcast %"class.std::vector.0"* %185 to %"struct.std::_Vector_base.1"*
  %187 = load %"class.std::vector.0"*, %"class.std::vector.0"** %179, align 8
  %188 = call i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE4sizeEv(%"class.std::vector.0"* %187) #3
  %189 = load %"class.std::vector.0"*, %"class.std::vector.0"** %179, align 8
  %190 = bitcast %"class.std::vector.0"* %189 to %"struct.std::_Vector_base.1"*
  %191 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %190) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5GraphILl0EE4EdgeEEE17_S_select_on_copyERKS4_(%"class.std::allocator.2"* sret %180, %"class.std::allocator.2"* dereferenceable(1) %191)
  br label %29

; <label>:192:                                    ; preds = %111, %84
  %193 = landingpad { i8*, i32 }
          cleanup
  %194 = extractvalue { i8*, i32 } %193, 0
  store i8* %194, i8** %33, align 8
  %195 = extractvalue { i8*, i32 } %193, 1
  store i32 %195, i32* %34, align 4
  %196 = bitcast %"class.std::vector.0"* %37 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EED2Ev(%"struct.std::_Vector_base.1"* %196) #3
  br label %111

; <label>:197:                                    ; preds = %157, %130
  %198 = load i8*, i8** %33, align 8
  %199 = load i32, i32* %34, align 4
  %200 = insertvalue { i8*, i32 } undef, i8* %198, 0
  %201 = insertvalue { i8*, i32 } %200, i32 %199, 1
  br label %157
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN5GraphILl0EE4EdgeEEE17_S_select_on_copyERKS4_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.769
  %6 = load i32, i32* @y.770
  %7 = sub i32 %5, 1855021019
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1855021019
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1541790159, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1541790159, label %19
    i32 -16738781, label %27
    i32 -405076095, label %57
    i32 -2129271629, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -16738781, i32 -2129271629
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %28, align 8
  %29 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %28, align 8
  call void @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE37select_on_container_copy_constructionERKS3_(%"class.std::allocator.2"* sret %0, %"class.std::allocator.2"* dereferenceable(1) %29)
  %30 = load i32, i32* @x.769
  %31 = load i32, i32* @y.770
  %32 = add i32 %30, 669838812
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 669838812
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -405076095, i32 -2129271629
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %59, align 8
  %60 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %59, align 8
  call void @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE37select_on_container_copy_constructionERKS3_(%"class.std::allocator.2"* sret %0, %"class.std::allocator.2"* dereferenceable(1) %60)
  store i32 -16738781, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %43

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.771
  %15 = load i32, i32* @y.772
  %16 = add i32 %14, 617044355
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 617044355
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %94

; <label>:28:                                     ; preds = %13, %94
  %29 = load i32, i32* @x.771
  %30 = load i32, i32* @y.772
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %94

; <label>:42:                                     ; preds = %28
  ret void

; <label>:43:                                     ; preds = %3
  %44 = load i32, i32* @x.771
  %45 = load i32, i32* @y.772
  %46 = sub i32 %44, 1907934507
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1907934507
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %95

; <label>:70:                                     ; preds = %43, %95
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %7, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %10) #3
  %74 = load i32, i32* @x.771
  %75 = load i32, i32* @y.772
  %76 = add i32 %74, 201766773
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 201766773
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %95

; <label>:88:                                     ; preds = %70
  br label %89

; <label>:89:                                     ; preds = %88
  %90 = load i8*, i8** %7, align 8
  %91 = load i32, i32* %8, align 4
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  resume { i8*, i32 } %93

; <label>:94:                                     ; preds = %28, %13
  br label %28

; <label>:95:                                     ; preds = %70, %43
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %7, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %10) #3
  br label %70
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5GraphILl0EE4EdgeEED2Ev(%"class.std::allocator.2"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEPS4_S4_ET0_T_SD_SC_RSaIT1_E(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph<0>::Edge"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.775
  %9 = load i32, i32* @y.776
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 337923729, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %83
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 337923729, label %21
    i32 1234802776, label %29
    i32 780327262, label %62
    i32 1676936050, label %64
  ]

; <label>:20:                                     ; preds = %18
  br label %83

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1234802776, i32 1676936050
  store i32 %28, i32* %17
  br label %83

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %32 = alloca %"struct.Graph<0>::Edge"*, align 8
  %33 = alloca %"class.std::allocator.2"*, align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %37, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %32, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %33, align 8
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator"* %34 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator"* %35 to i8*
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %32, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  %44 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %43, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %35, i32 0, i32 0
  %46 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %45, align 8
  %47 = call %"struct.Graph<0>::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(%"struct.Graph<0>::Edge"* %44, %"struct.Graph<0>::Edge"* %46, %"struct.Graph<0>::Edge"* %42)
  store %"struct.Graph<0>::Edge"* %47, %"struct.Graph<0>::Edge"** %5
  %48 = load i32, i32* @x.775
  %49 = load i32, i32* @y.776
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 780327262, i32 1676936050
  store i32 %61, i32* %17
  br label %83

; <label>:62:                                     ; preds = %18
  %63 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5
  ret %"struct.Graph<0>::Edge"* %63

; <label>:64:                                     ; preds = %18
  %65 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %67 = alloca %"struct.Graph<0>::Edge"*, align 8
  %68 = alloca %"class.std::allocator.2"*, align 8
  %69 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %70 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %71, align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %72, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %67, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %68, align 8
  %73 = bitcast %"class.__gnu_cxx::__normal_iterator"* %69 to i8*
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator"* %70 to i8*
  %76 = bitcast %"class.__gnu_cxx::__normal_iterator"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 8, i1 false)
  %77 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %67, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %69, i32 0, i32 0
  %79 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %78, align 8
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %70, i32 0, i32 0
  %81 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %80, align 8
  %82 = call %"struct.Graph<0>::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(%"struct.Graph<0>::Edge"* %79, %"struct.Graph<0>::Edge"* %81, %"struct.Graph<0>::Edge"* %77)
  store i32 1234802776, i32* %17
  br label %83

; <label>:83:                                     ; preds = %64, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5GraphILl0EE4EdgeEEE37select_on_container_copy_constructionERKS3_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %3, align 8
  %4 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  call void @_ZNSaIN5GraphILl0EE4EdgeEEC2ERKS2_(%"class.std::allocator.2"* %0, %"class.std::allocator.2"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5GraphILl0EE4EdgeEEC2ERKS2_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5GraphILl0EE4EdgeEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSaIN5GraphILl0EE4EdgeEEC2ERKS2_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Graph<0>::Edge"* null, %"struct.Graph<0>::Edge"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.783
  %6 = load i32, i32* @y.784
  %7 = add i32 %5, 1571003611
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1571003611
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -889486637, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -889486637, label %19
    i32 -1395508503, label %39
    i32 -1914201982, label %73
    i32 659405429, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1395508503, i32 659405429
  store i32 %38, i32* %15
  br label %94

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.1"*, align 8
  %41 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %40, align 8
  %43 = load i64, i64* %41, align 8
  %44 = call %"struct.Graph<0>::Edge"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %42, i64 %43)
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %45, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %44, %"struct.Graph<0>::Edge"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %50, i32 0, i32 1
  store %"struct.Graph<0>::Edge"* %49, %"struct.Graph<0>::Edge"** %51, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %53, align 8
  %55 = load i64, i64* %41, align 8
  %56 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %54, i64 %55
  %57 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %57, i32 0, i32 2
  store %"struct.Graph<0>::Edge"* %56, %"struct.Graph<0>::Edge"** %58, align 8
  %59 = load i32, i32* @x.783
  %60 = load i32, i32* @y.784
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -1914201982, i32 659405429
  store i32 %72, i32* %15
  br label %94

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Vector_base.1"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call %"struct.Graph<0>::Edge"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %80, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %79, %"struct.Graph<0>::Edge"** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %85, i32 0, i32 1
  store %"struct.Graph<0>::Edge"* %84, %"struct.Graph<0>::Edge"** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %92, i32 0, i32 2
  store %"struct.Graph<0>::Edge"* %91, %"struct.Graph<0>::Edge"** %93, align 8
  store i32 -1395508503, i32* %15
  br label %94

; <label>:94:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.Graph<0>::Edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %11, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %19, align 8
  %21 = call %"struct.Graph<0>::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS6_SaIS6_EEEEPS6_EET0_T_SF_SE_(%"struct.Graph<0>::Edge"* %18, %"struct.Graph<0>::Edge"* %20, %"struct.Graph<0>::Edge"* %16)
  ret %"struct.Graph<0>::Edge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS6_SaIS6_EEEEPS6_EET0_T_SF_SE_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.Graph<0>::Edge"*, align 8
  %7 = alloca %"struct.Graph<0>::Edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %11, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %6, align 8
  %12 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  store %"struct.Graph<0>::Edge"* %12, %"struct.Graph<0>::Edge"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %93, %3
  %14 = call zeroext i1 @_ZN9__gnu_cxxneIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  br i1 %14, label %15, label %197

; <label>:15:                                     ; preds = %13
  %16 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %17 = call %"struct.Graph<0>::Edge"* @_ZSt11__addressofIN5GraphILl0EE4EdgeEEPT_RS3_(%"struct.Graph<0>::Edge"* dereferenceable(32) %16) #3
  %18 = call dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  invoke void @_ZSt10_ConstructIN5GraphILl0EE4EdgeEJRKS2_EEvPT_DpOT0_(%"struct.Graph<0>::Edge"* %17, %"struct.Graph<0>::Edge"* dereferenceable(32) %18)
          to label %19 unwind label %94

; <label>:19:                                     ; preds = %15
  %20 = load i32, i32* @x.787
  %21 = load i32, i32* @y.788
  %22 = add i32 %20, 351440796
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 351440796
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %356

; <label>:34:                                     ; preds = %19, %356
  %35 = load i32, i32* @x.787
  %36 = load i32, i32* @y.788
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %356

; <label>:48:                                     ; preds = %34
  br label %49

; <label>:49:                                     ; preds = %48
  %50 = load i32, i32* @x.787
  %51 = load i32, i32* @y.788
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %357

; <label>:75:                                     ; preds = %49, %357
  %76 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %77 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %78 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %77, i32 1
  store %"struct.Graph<0>::Edge"* %78, %"struct.Graph<0>::Edge"** %7, align 8
  %79 = load i32, i32* @x.787
  %80 = load i32, i32* @y.788
  %81 = add i32 %79, -750576375
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, -750576375
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %357

; <label>:93:                                     ; preds = %75
  br label %13

; <label>:94:                                     ; preds = %15
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %8, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %9, align 4
  br label %98

; <label>:98:                                     ; preds = %94
  %99 = load i32, i32* @x.787
  %100 = load i32, i32* @y.788
  %101 = add i32 %99, 14062730
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, 14062730
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %361

; <label>:125:                                    ; preds = %98, %361
  %126 = load i8*, i8** %8, align 8
  %127 = call i8* @__cxa_begin_catch(i8* %126) #3
  %128 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %129 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %130 = load i32, i32* @x.787
  %131 = load i32, i32* @y.788
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 false, true
  %142 = and i1 %139, false
  %143 = and i1 %137, %141
  %144 = and i1 %140, false
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 false, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %361

; <label>:155:                                    ; preds = %125
  invoke void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeEEvT_S4_(%"struct.Graph<0>::Edge"* %128, %"struct.Graph<0>::Edge"* %129)
          to label %156 unwind label %199

; <label>:156:                                    ; preds = %155
  %157 = load i32, i32* @x.787
  %158 = load i32, i32* @y.788
  %159 = sub i32 0, 1
  %160 = add i32 %157, %159
  %161 = sub i32 %157, 1
  %162 = mul i32 %157, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %158, 10
  %166 = xor i1 %164, true
  %167 = xor i1 %165, true
  %168 = xor i1 false, true
  %169 = and i1 %166, false
  %170 = and i1 %164, %168
  %171 = and i1 %167, false
  %172 = and i1 %165, %168
  %173 = or i1 %169, %170
  %174 = or i1 %171, %172
  %175 = xor i1 %173, %174
  %176 = or i1 %166, %167
  %177 = xor i1 %176, true
  %178 = or i1 false, %168
  %179 = and i1 %177, %178
  %180 = or i1 %175, %179
  %181 = or i1 %164, %165
  br i1 %180, label %182, label %366

; <label>:182:                                    ; preds = %156, %366
  %183 = load i32, i32* @x.787
  %184 = load i32, i32* @y.788
  %185 = sub i32 0, 1
  %186 = add i32 %183, %185
  %187 = sub i32 %183, 1
  %188 = mul i32 %183, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %184, 10
  %192 = and i1 %190, %191
  %193 = xor i1 %190, %191
  %194 = or i1 %192, %193
  %195 = or i1 %190, %191
  br i1 %194, label %196, label %366

; <label>:196:                                    ; preds = %182
  invoke void @__cxa_rethrow() #12
          to label %313 unwind label %199

; <label>:197:                                    ; preds = %13
  %198 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  ret %"struct.Graph<0>::Edge"* %198

; <label>:199:                                    ; preds = %196, %155
  %200 = landingpad { i8*, i32 }
          cleanup
  %201 = extractvalue { i8*, i32 } %200, 0
  store i8* %201, i8** %8, align 8
  %202 = extractvalue { i8*, i32 } %200, 1
  store i32 %202, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %203 unwind label %310

; <label>:203:                                    ; preds = %199
  %204 = load i32, i32* @x.787
  %205 = load i32, i32* @y.788
  %206 = sub i32 0, 1
  %207 = add i32 %204, %206
  %208 = sub i32 %204, 1
  %209 = mul i32 %204, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %205, 10
  %213 = and i1 %211, %212
  %214 = xor i1 %211, %212
  %215 = or i1 %213, %214
  %216 = or i1 %211, %212
  br i1 %215, label %217, label %367

; <label>:217:                                    ; preds = %203, %367
  %218 = load i32, i32* @x.787
  %219 = load i32, i32* @y.788
  %220 = sub i32 %218, -762405694
  %221 = sub i32 %220, 1
  %222 = add i32 %221, -762405694
  %223 = sub i32 %218, 1
  %224 = mul i32 %218, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %219, 10
  %228 = and i1 %226, %227
  %229 = xor i1 %226, %227
  %230 = or i1 %228, %229
  %231 = or i1 %226, %227
  br i1 %230, label %232, label %367

; <label>:232:                                    ; preds = %217
  br label %276
                                                  ; No predecessors!
  %234 = load i32, i32* @x.787
  %235 = load i32, i32* @y.788
  %236 = add i32 %234, 1293214709
  %237 = sub i32 %236, 1
  %238 = sub i32 %237, 1293214709
  %239 = sub i32 %234, 1
  %240 = mul i32 %234, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %235, 10
  %244 = xor i1 %242, true
  %245 = xor i1 %243, true
  %246 = xor i1 false, true
  %247 = and i1 %244, false
  %248 = and i1 %242, %246
  %249 = and i1 %245, false
  %250 = and i1 %243, %246
  %251 = or i1 %247, %248
  %252 = or i1 %249, %250
  %253 = xor i1 %251, %252
  %254 = or i1 %244, %245
  %255 = xor i1 %254, true
  %256 = or i1 false, %246
  %257 = and i1 %255, %256
  %258 = or i1 %253, %257
  %259 = or i1 %242, %243
  br i1 %258, label %260, label %368

; <label>:260:                                    ; preds = %233, %368
  call void @llvm.trap()
  %261 = load i32, i32* @x.787
  %262 = load i32, i32* @y.788
  %263 = add i32 %261, -547773984
  %264 = sub i32 %263, 1
  %265 = sub i32 %264, -547773984
  %266 = sub i32 %261, 1
  %267 = mul i32 %261, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %262, 10
  %271 = and i1 %269, %270
  %272 = xor i1 %269, %270
  %273 = or i1 %271, %272
  %274 = or i1 %269, %270
  br i1 %273, label %275, label %368

; <label>:275:                                    ; preds = %260
  unreachable

; <label>:276:                                    ; preds = %232
  %277 = load i32, i32* @x.787
  %278 = load i32, i32* @y.788
  %279 = sub i32 0, 1
  %280 = add i32 %277, %279
  %281 = sub i32 %277, 1
  %282 = mul i32 %277, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %278, 10
  %286 = and i1 %284, %285
  %287 = xor i1 %284, %285
  %288 = or i1 %286, %287
  %289 = or i1 %284, %285
  br i1 %288, label %290, label %369

; <label>:290:                                    ; preds = %276, %369
  %291 = load i8*, i8** %8, align 8
  %292 = load i32, i32* %9, align 4
  %293 = insertvalue { i8*, i32 } undef, i8* %291, 0
  %294 = insertvalue { i8*, i32 } %293, i32 %292, 1
  %295 = load i32, i32* @x.787
  %296 = load i32, i32* @y.788
  %297 = sub i32 %295, -1221510880
  %298 = sub i32 %297, 1
  %299 = add i32 %298, -1221510880
  %300 = sub i32 %295, 1
  %301 = mul i32 %295, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %296, 10
  %305 = and i1 %303, %304
  %306 = xor i1 %303, %304
  %307 = or i1 %305, %306
  %308 = or i1 %303, %304
  br i1 %307, label %309, label %369

; <label>:309:                                    ; preds = %290
  resume { i8*, i32 } %294

; <label>:310:                                    ; preds = %199
  %311 = landingpad { i8*, i32 }
          catch i8* null
  %312 = extractvalue { i8*, i32 } %311, 0
  call void @__clang_call_terminate(i8* %312) #7
  unreachable

; <label>:313:                                    ; preds = %196
  %314 = load i32, i32* @x.787
  %315 = load i32, i32* @y.788
  %316 = add i32 %314, -1835469429
  %317 = sub i32 %316, 1
  %318 = sub i32 %317, -1835469429
  %319 = sub i32 %314, 1
  %320 = mul i32 %314, %318
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %315, 10
  %324 = and i1 %322, %323
  %325 = xor i1 %322, %323
  %326 = or i1 %324, %325
  %327 = or i1 %322, %323
  br i1 %326, label %328, label %374

; <label>:328:                                    ; preds = %313, %374
  %329 = load i32, i32* @x.787
  %330 = load i32, i32* @y.788
  %331 = sub i32 %329, 360518182
  %332 = sub i32 %331, 1
  %333 = add i32 %332, 360518182
  %334 = sub i32 %329, 1
  %335 = mul i32 %329, %333
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %330, 10
  %339 = xor i1 %337, true
  %340 = xor i1 %338, true
  %341 = xor i1 true, true
  %342 = and i1 %339, true
  %343 = and i1 %337, %341
  %344 = and i1 %340, true
  %345 = and i1 %338, %341
  %346 = or i1 %342, %343
  %347 = or i1 %344, %345
  %348 = xor i1 %346, %347
  %349 = or i1 %339, %340
  %350 = xor i1 %349, true
  %351 = or i1 true, %341
  %352 = and i1 %350, %351
  %353 = or i1 %348, %352
  %354 = or i1 %337, %338
  br i1 %353, label %355, label %374

; <label>:355:                                    ; preds = %328
  unreachable

; <label>:356:                                    ; preds = %34, %19
  br label %34

; <label>:357:                                    ; preds = %75, %49
  %358 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %359 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %360 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %359, i32 1
  store %"struct.Graph<0>::Edge"* %360, %"struct.Graph<0>::Edge"** %7, align 8
  br label %75

; <label>:361:                                    ; preds = %125, %98
  %362 = load i8*, i8** %8, align 8
  %363 = call i8* @__cxa_begin_catch(i8* %362) #3
  %364 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %365 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  br label %125

; <label>:366:                                    ; preds = %182, %156
  br label %182

; <label>:367:                                    ; preds = %217, %203
  br label %217

; <label>:368:                                    ; preds = %260, %233
  call void @llvm.trap()
  br label %260

; <label>:369:                                    ; preds = %290, %276
  %370 = load i8*, i8** %8, align 8
  %371 = load i32, i32* %9, align 4
  %372 = insertvalue { i8*, i32 } undef, i8* %370, 0
  %373 = insertvalue { i8*, i32 } %372, i32 %371, 1
  br label %290

; <label>:374:                                    ; preds = %328, %313
  br label %328
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5GraphILl0EE4EdgeEJRKS2_EEvPT_DpOT0_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.Graph<0>::Edge"*, align 8
  %4 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %3, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %4, align 8
  %5 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %3, align 8
  %6 = bitcast %"struct.Graph<0>::Edge"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Graph<0>::Edge"*
  %8 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  %9 = call dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZSt7forwardIRKN5GraphILl0EE4EdgeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.Graph<0>::Edge"* dereferenceable(32) %8) #3
  %10 = bitcast %"struct.Graph<0>::Edge"* %7 to i8*
  %11 = bitcast %"struct.Graph<0>::Edge"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZSt7forwardIRKN5GraphILl0EE4EdgeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.Graph<0>::Edge"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %2, align 8
  %3 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2, align 8
  ret %"struct.Graph<0>::Edge"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS8_(%"class.__gnu_cxx::__normal_iterator.29"*, %"class.std::vector.0"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.29"*, align 8
  %4 = alloca %"class.std::vector.0"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.29"* %0, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  store %"class.std::vector.0"** %1, %"class.std::vector.0"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.29"*, %"class.__gnu_cxx::__normal_iterator.29"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %8, %"class.std::vector.0"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEEvT_SC_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.795
  %6 = load i32, i32* @y.796
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -776349898, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %84
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -776349898, label %18
    i32 -1638872685, label %38
    i32 673997595, label %68
    i32 940135835, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %84

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1638872685, i32 940135835
  store i32 %37, i32* %14
  br label %84

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %39, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %43, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %40, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %44, align 8
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %41 to i8*
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 8, i1 false)
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %42 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %41, i32 0, i32 0
  %50 = load %"class.std::vector.0"*, %"class.std::vector.0"** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %42, i32 0, i32 0
  %52 = load %"class.std::vector.0"*, %"class.std::vector.0"** %51, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS7_EES4_IS9_SaIS9_EEEEEEvT_SE_(%"class.std::vector.0"* %50, %"class.std::vector.0"* %52)
  %53 = load i32, i32* @x.795
  %54 = load i32, i32* @y.796
  %55 = add i32 %53, -1844893212
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -1844893212
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 673997595, i32 940135835
  store i32 %67, i32* %14
  br label %84

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %70, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %74, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %71, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %75, align 8
  %76 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %72 to i8*
  %77 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 8, i1 false)
  %78 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %73 to i8*
  %79 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 8, i1 false)
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %72, i32 0, i32 0
  %81 = load %"class.std::vector.0"*, %"class.std::vector.0"** %80, align 8
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %73, i32 0, i32 0
  %83 = load %"class.std::vector.0"*, %"class.std::vector.0"** %82, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS7_EES4_IS9_SaIS9_EEEEEEvT_SE_(%"class.std::vector.0"* %81, %"class.std::vector.0"* %83)
  store i32 -1638872685, i32* %14
  br label %84

; <label>:84:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS7_EES4_IS9_SaIS9_EEEEEEvT_SE_(%"class.std::vector.0"*, %"class.std::vector.0"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.30"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.30"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.797
  %9 = load i32, i32* @y.798
  %10 = add i32 %8, -550817475
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -550817475
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -996877580, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %130
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -996877580, label %22
    i32 -419405738, label %30
    i32 1972603602, label %63
    i32 584168714, label %64
    i32 1112154798, label %91
    i32 -77499968, label %110
    i32 -395247410, label %113
    i32 73855193, label %117
    i32 1466678458, label %120
    i32 -584738432, label %121
    i32 -1849464225, label %126
  ]

; <label>:21:                                     ; preds = %19
  br label %130

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -419405738, i32 -584738432
  store i32 %29, i32* %18
  br label %130

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %31, %"class.__gnu_cxx::__normal_iterator.30"** %5
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %32, %"class.__gnu_cxx::__normal_iterator.30"** %4
  %33 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %5
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %33, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %34, align 8
  %35 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %4
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %35, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %36, align 8
  %37 = load i32, i32* @x.797
  %38 = load i32, i32* @y.798
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1972603602, i32 -584738432
  store i32 %62, i32* %18
  br label %130

; <label>:63:                                     ; preds = %19
  store i32 584168714, i32* %18
  br label %130

; <label>:64:                                     ; preds = %19
  %65 = load i32, i32* @x.797
  %66 = load i32, i32* @y.798
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 1112154798, i32 -1849464225
  store i32 %90, i32* %18
  br label %130

; <label>:91:                                     ; preds = %19
  %92 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %5
  %93 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %4
  %94 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %92, %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %93) #3
  store i1 %94, i1* %3
  %95 = load i32, i32* @x.797
  %96 = load i32, i32* @y.798
  %97 = sub i32 %95, 2032746550
  %98 = sub i32 %97, 1
  %99 = add i32 %98, 2032746550
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 -77499968, i32 -1849464225
  store i32 %109, i32* %18
  br label %130

; <label>:110:                                    ; preds = %19
  %111 = load volatile i1, i1* %3
  %112 = select i1 %111, i32 -395247410, i32 1466678458
  store i32 %112, i32* %18
  br label %130

; <label>:113:                                    ; preds = %19
  %114 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %5
  %115 = call dereferenceable(24) %"class.std::vector.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.30"* %114) #3
  %116 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEPT_RS6_(%"class.std::vector.0"* dereferenceable(24) %115) #3
  call void @_ZSt8_DestroyISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEvPT_(%"class.std::vector.0"* %116)
  store i32 73855193, i32* %18
  br label %130

; <label>:117:                                    ; preds = %19
  %118 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %5
  %119 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.30"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEppEv(%"class.__gnu_cxx::__normal_iterator.30"* %118) #3
  store i32 584168714, i32* %18
  br label %130

; <label>:120:                                    ; preds = %19
  ret void

; <label>:121:                                    ; preds = %19
  %122 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %123 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %124 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %122, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %124, align 8
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %123, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %125, align 8
  store i32 -419405738, i32* %18
  br label %130

; <label>:126:                                    ; preds = %19
  %127 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %5
  %128 = load volatile %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %4
  %129 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %127, %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8) %128) #3
  store i32 1112154798, i32* %18
  br label %130

; <label>:130:                                    ; preds = %126, %121, %117, %113, %110, %91, %64, %63, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESF_(%"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.30"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %1, %"class.__gnu_cxx::__normal_iterator.30"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %5) #3
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %8) #3
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  %11 = icmp ne %"class.std::vector.0"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.30"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.30"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEppEv(%"class.__gnu_cxx::__normal_iterator.30"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i32 1
  store %"class.std::vector.0"* %6, %"class.std::vector.0"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.30"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.0"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.805
  %6 = load i32, i32* @y.806
  %7 = add i32 %5, -389555353
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -389555353
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -926717852, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -926717852, label %19
    i32 1542233314, label %27
    i32 1268541484, label %46
    i32 573932632, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1542233314, i32 573932632
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %29, i32 0, i32 0
  store %"class.std::vector.0"** %30, %"class.std::vector.0"*** %2
  %31 = load i32, i32* @x.805
  %32 = load i32, i32* @y.806
  %33 = sub i32 %31, 572445258
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 572445258
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1268541484, i32 573932632
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %2
  ret %"class.std::vector.0"** %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %49, align 8
  %50 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %50, i32 0, i32 0
  store i32 1542233314, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEENS1_IPS7_SB_EEET1_T0_SG_SF_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %8 = alloca %"class.std::vector.0"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %5, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %6, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %7, i32 0, i32 0
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %9, i32 0, i32 0
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  %19 = call %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEENSt11_Niter_baseIT_E13iterator_typeESE_(%"class.std::vector.0"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %10, i32 0, i32 0
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %24 = call %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEENSt11_Niter_baseIT_E13iterator_typeESE_(%"class.std::vector.0"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %11, i32 0, i32 0
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %27, align 8
  %29 = call %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(%"class.std::vector.0"* %28)
  %30 = call %"class.std::vector.0"* @_ZSt13__copy_move_aILb0EPKSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEPS5_ET1_T0_SA_S9_(%"class.std::vector.0"* %19, %"class.std::vector.0"* %24, %"class.std::vector.0"* %29)
  store %"class.std::vector.0"* %30, %"class.std::vector.0"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.30"* %4, %"class.std::vector.0"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %4, i32 0, i32 0
  %32 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  ret %"class.std::vector.0"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEENSt11_Miter_baseIT_E13iterator_typeESE_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %3, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %4, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEELb0EE7_S_baseESC_(%"class.std::vector.0"* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %2, i32 0, i32 0
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %2, i32 0, i32 0
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  ret %"class.std::vector.0"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt13__copy_move_aILb0EPKSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEPS5_ET1_T0_SA_S9_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %11 = call %"class.std::vector.0"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt6vectorIN5GraphILl0EE4EdgeESaIS6_EEPS8_EET0_T_SD_SC_(%"class.std::vector.0"* %8, %"class.std::vector.0"* %9, %"class.std::vector.0"* %10)
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEENSt11_Niter_baseIT_E13iterator_typeESE_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %2, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %3, i32 0, i32 0
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %9 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEELb1EE7_S_baseESC_(%"class.std::vector.0"* %8)
  ret %"class.std::vector.0"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEEENSt11_Niter_baseIT_E13iterator_typeESD_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %9 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEELb1EE7_S_baseESB_(%"class.std::vector.0"* %8)
  ret %"class.std::vector.0"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.30"*, %"class.std::vector.0"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %4 = alloca %"class.std::vector.0"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  store %"class.std::vector.0"** %1, %"class.std::vector.0"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %8, %"class.std::vector.0"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt6vectorIN5GraphILl0EE4EdgeESaIS6_EEPS8_EET0_T_SD_SC_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca %"class.std::vector.0"**
  %7 = alloca %"class.std::vector.0"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.819
  %11 = load i32, i32* @y.820
  %12 = add i32 %10, 1324677921
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 1324677921
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1448424219, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %283
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1448424219, label %24
    i32 -852707364, label %32
    i32 -2087917721, label %65
    i32 -1362556403, label %66
    i32 -1740259260, label %82
    i32 -551525202, label %112
    i32 1816718309, label %115
    i32 1142279038, label %129
    i32 1919158832, label %156
    i32 -951789155, label %192
    i32 715194100, label %193
    i32 1807312221, label %196
    i32 2115004519, label %259
    i32 755978074, label %263
  ]

; <label>:23:                                     ; preds = %21
  br label %283

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -852707364, i32 1807312221
  store i32 %31, i32* %20
  br label %283

; <label>:32:                                     ; preds = %21
  %33 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %33, %"class.std::vector.0"*** %7
  %34 = alloca %"class.std::vector.0"*, align 8
  %35 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %35, %"class.std::vector.0"*** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %37, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %34, align 8
  %38 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %6
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %38, align 8
  %39 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %40 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %42 = ptrtoint %"class.std::vector.0"* %39 to i64
  %43 = ptrtoint %"class.std::vector.0"* %41 to i64
  %44 = sub i64 %42, 5747797184979092460
  %45 = sub i64 %44, %43
  %46 = add i64 %45, 5747797184979092460
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 24
  %49 = load volatile i64*, i64** %5
  store i64 %48, i64* %49, align 8
  %50 = load i32, i32* @x.819
  %51 = load i32, i32* @y.820
  %52 = add i32 %50, 1538547569
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1538547569
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -2087917721, i32 1807312221
  store i32 %64, i32* %20
  br label %283

; <label>:65:                                     ; preds = %21
  store i32 -1362556403, i32* %20
  br label %283

; <label>:66:                                     ; preds = %21
  %67 = load i32, i32* @x.819
  %68 = load i32, i32* @y.820
  %69 = add i32 %67, -1865797065
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -1865797065
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 -1740259260, i32 2115004519
  store i32 %81, i32* %20
  br label %283

; <label>:82:                                     ; preds = %21
  %83 = load volatile i64*, i64** %5
  %84 = load i64, i64* %83, align 8
  %85 = icmp sgt i64 %84, 0
  store i1 %85, i1* %4
  %86 = load i32, i32* @x.819
  %87 = load i32, i32* @y.820
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 -551525202, i32 2115004519
  store i32 %111, i32* %20
  br label %283

; <label>:112:                                    ; preds = %21
  %113 = load volatile i1, i1* %4
  %114 = select i1 %113, i32 1816718309, i32 715194100
  store i32 %114, i32* %20
  br label %283

; <label>:115:                                    ; preds = %21
  %116 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  %117 = load %"class.std::vector.0"*, %"class.std::vector.0"** %116, align 8
  %118 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %6
  %119 = load %"class.std::vector.0"*, %"class.std::vector.0"** %118, align 8
  %120 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEaSERKS4_(%"class.std::vector.0"* %119, %"class.std::vector.0"* dereferenceable(24) %117)
  %121 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  %122 = load %"class.std::vector.0"*, %"class.std::vector.0"** %121, align 8
  %123 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %122, i32 1
  %124 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  store %"class.std::vector.0"* %123, %"class.std::vector.0"** %124, align 8
  %125 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %6
  %126 = load %"class.std::vector.0"*, %"class.std::vector.0"** %125, align 8
  %127 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %126, i32 1
  %128 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %6
  store %"class.std::vector.0"* %127, %"class.std::vector.0"** %128, align 8
  store i32 1142279038, i32* %20
  br label %283

; <label>:129:                                    ; preds = %21
  %130 = load i32, i32* @x.819
  %131 = load i32, i32* @y.820
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 true, true
  %142 = and i1 %139, true
  %143 = and i1 %137, %141
  %144 = and i1 %140, true
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 true, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  %155 = select i1 %153, i32 1919158832, i32 755978074
  store i32 %155, i32* %20
  br label %283

; <label>:156:                                    ; preds = %21
  %157 = load volatile i64*, i64** %5
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 0, %158
  %160 = sub i64 0, -1
  %161 = add i64 %159, %160
  %162 = sub i64 0, %161
  %163 = add nsw i64 %158, -1
  %164 = load volatile i64*, i64** %5
  store i64 %162, i64* %164, align 8
  %165 = load i32, i32* @x.819
  %166 = load i32, i32* @y.820
  %167 = add i32 %165, -109777122
  %168 = sub i32 %167, 1
  %169 = sub i32 %168, -109777122
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 true, true
  %178 = and i1 %175, true
  %179 = and i1 %173, %177
  %180 = and i1 %176, true
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 true, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  %191 = select i1 %189, i32 -951789155, i32 755978074
  store i32 %191, i32* %20
  br label %283

; <label>:192:                                    ; preds = %21
  store i32 -1362556403, i32* %20
  br label %283

; <label>:193:                                    ; preds = %21
  %194 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %6
  %195 = load %"class.std::vector.0"*, %"class.std::vector.0"** %194, align 8
  ret %"class.std::vector.0"* %195

; <label>:196:                                    ; preds = %21
  %197 = alloca %"class.std::vector.0"*, align 8
  %198 = alloca %"class.std::vector.0"*, align 8
  %199 = alloca %"class.std::vector.0"*, align 8
  %200 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %197, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %198, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %199, align 8
  %201 = load %"class.std::vector.0"*, %"class.std::vector.0"** %198, align 8
  %202 = load %"class.std::vector.0"*, %"class.std::vector.0"** %197, align 8
  %203 = ptrtoint %"class.std::vector.0"* %201 to i64
  %204 = ptrtoint %"class.std::vector.0"* %202 to i64
  %205 = shl i64 %203, %204
  %206 = add i64 %203, 4012572600397301530
  %207 = sub i64 %206, %204
  %208 = sub i64 %207, 4012572600397301530
  %209 = sub i64 %203, %204
  %210 = mul i64 %208, %204
  %211 = sub i64 0, %204
  %212 = add i64 %203, %211
  %213 = sub i64 %203, %204
  %214 = mul i64 %212, %204
  %215 = add i64 %203, -5811766530581211398
  %216 = sub i64 %215, %204
  %217 = sub i64 %216, -5811766530581211398
  %218 = sub i64 %203, %204
  %219 = sub i64 %217, 7593344294149793115
  %220 = sub i64 %219, 24
  %221 = add i64 %220, 7593344294149793115
  %222 = sub i64 %217, 24
  %223 = mul i64 %221, 24
  %224 = add i64 0, 2744522803123193945
  %225 = sub i64 %224, %217
  %226 = sub i64 %225, 2744522803123193945
  %227 = sub i64 0, %217
  %228 = add i64 %226, -4062766435822989411
  %229 = add i64 %228, 24
  %230 = sub i64 %229, -4062766435822989411
  %231 = add i64 %226, 24
  %232 = sub i64 0, -1237089457297248836
  %233 = sub i64 %232, %217
  %234 = add i64 %233, -1237089457297248836
  %235 = sub i64 0, %217
  %236 = sub i64 0, %234
  %237 = sub i64 0, 24
  %238 = add i64 %236, %237
  %239 = sub i64 0, %238
  %240 = add i64 %234, 24
  %241 = sub i64 0, 24
  %242 = add i64 %217, %241
  %243 = sub i64 %217, 24
  %244 = mul i64 %242, 24
  %245 = add i64 %217, -5985191801953219223
  %246 = sub i64 %245, 24
  %247 = sub i64 %246, -5985191801953219223
  %248 = sub i64 %217, 24
  %249 = mul i64 %247, 24
  %250 = add i64 0, 28475266975087496
  %251 = sub i64 %250, %217
  %252 = sub i64 %251, 28475266975087496
  %253 = sub i64 0, %217
  %254 = add i64 %252, 3225487019993337424
  %255 = add i64 %254, 24
  %256 = sub i64 %255, 3225487019993337424
  %257 = add i64 %252, 24
  %258 = sdiv exact i64 %217, 24
  store i64 %258, i64* %200, align 8
  store i32 -852707364, i32* %20
  br label %283

; <label>:259:                                    ; preds = %21
  %260 = load volatile i64*, i64** %5
  %261 = load i64, i64* %260, align 8
  %262 = icmp sgt i64 %261, 0
  store i32 -1740259260, i32* %20
  br label %283

; <label>:263:                                    ; preds = %21
  %264 = load volatile i64*, i64** %5
  %265 = load i64, i64* %264, align 8
  %266 = shl i64 %265, -1
  %267 = sub i64 0, -1
  %268 = add i64 %265, %267
  %269 = sub i64 %265, -1
  %270 = mul i64 %268, -1
  %271 = add i64 %265, 8275293266990561896
  %272 = sub i64 %271, -1
  %273 = sub i64 %272, 8275293266990561896
  %274 = sub i64 %265, -1
  %275 = mul i64 %273, -1
  %276 = shl i64 %265, -1
  %277 = shl i64 %265, -1
  %278 = add i64 %265, 3577228049794980948
  %279 = add i64 %278, -1
  %280 = sub i64 %279, 3577228049794980948
  %281 = add nsw i64 %265, -1
  %282 = load volatile i64*, i64** %5
  store i64 %280, i64* %282, align 8
  store i32 1919158832, i32* %20
  br label %283

; <label>:283:                                    ; preds = %263, %259, %196, %192, %156, %129, %115, %112, %82, %66, %65, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEELb1EE7_S_baseESC_(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %2, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.29"* %2) #3
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEELb1EE7_S_baseESB_(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5GraphILl0EE4EdgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %2) #3
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES2_IS7_SaIS7_EEEELb0EE7_S_baseESC_(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.29", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %3, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.29"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.29", %"class.__gnu_cxx::__normal_iterator.29"* %2, i32 0, i32 0
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  ret %"class.std::vector.0"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt14__copy_move_a2ILb0EPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET1_T0_S8_S7_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = call %"class.std::vector.0"* @_ZSt12__niter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::vector.0"* %7)
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = call %"class.std::vector.0"* @_ZSt12__niter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::vector.0"* %9)
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %12 = call %"class.std::vector.0"* @_ZSt12__niter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::vector.0"* %11)
  %13 = call %"class.std::vector.0"* @_ZSt13__copy_move_aILb0EPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET1_T0_S8_S7_(%"class.std::vector.0"* %8, %"class.std::vector.0"* %10, %"class.std::vector.0"* %12)
  ret %"class.std::vector.0"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt12__miter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEENSt11_Miter_baseIT_E13iterator_typeES8_(%"class.std::vector.0"*) #5 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EELb0EE7_S_baseES6_(%"class.std::vector.0"* %3)
  ret %"class.std::vector.0"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt13__copy_move_aILb0EPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET1_T0_S8_S7_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.831
  %8 = load i32, i32* @y.832
  %9 = add i32 %7, 823567325
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 823567325
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1212193983, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %64
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1212193983, label %21
    i32 1733204730, label %29
    i32 -1573133273, label %53
    i32 -795202134, label %55
  ]

; <label>:20:                                     ; preds = %18
  br label %64

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1733204730, i32 -795202134
  store i32 %28, i32* %17
  br label %64

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca %"class.std::vector.0"*, align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %31, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %32, align 8
  store i8 0, i8* %33, align 1
  %34 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %37 = call %"class.std::vector.0"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN5GraphILl0EE4EdgeESaIS6_EES9_EET0_T_SB_SA_(%"class.std::vector.0"* %34, %"class.std::vector.0"* %35, %"class.std::vector.0"* %36)
  store %"class.std::vector.0"* %37, %"class.std::vector.0"** %4
  %38 = load i32, i32* @x.831
  %39 = load i32, i32* @y.832
  %40 = sub i32 %38, -806894752
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -806894752
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1573133273, i32 -795202134
  store i32 %52, i32* %17
  br label %64

; <label>:53:                                     ; preds = %18
  %54 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %54

; <label>:55:                                     ; preds = %18
  %56 = alloca %"class.std::vector.0"*, align 8
  %57 = alloca %"class.std::vector.0"*, align 8
  %58 = alloca %"class.std::vector.0"*, align 8
  %59 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %56, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %57, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %58, align 8
  store i8 0, i8* %59, align 1
  %60 = load %"class.std::vector.0"*, %"class.std::vector.0"** %56, align 8
  %61 = load %"class.std::vector.0"*, %"class.std::vector.0"** %57, align 8
  %62 = load %"class.std::vector.0"*, %"class.std::vector.0"** %58, align 8
  %63 = call %"class.std::vector.0"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN5GraphILl0EE4EdgeESaIS6_EES9_EET0_T_SB_SA_(%"class.std::vector.0"* %60, %"class.std::vector.0"* %61, %"class.std::vector.0"* %62)
  store i32 1733204730, i32* %17
  br label %64

; <label>:64:                                     ; preds = %55, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt12__niter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.833
  %6 = load i32, i32* @y.834
  %7 = sub i32 %5, -628127048
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -628127048
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1535968391, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1535968391, label %19
    i32 972695233, label %27
    i32 -1914136627, label %58
    i32 -1146735638, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 972695233, i32 -1146735638
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %30 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EELb0EE7_S_baseES6_(%"class.std::vector.0"* %29)
  store %"class.std::vector.0"* %30, %"class.std::vector.0"** %2
  %31 = load i32, i32* @x.833
  %32 = load i32, i32* @y.834
  %33 = add i32 %31, 1648734646
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1648734646
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1914136627, i32 -1146735638
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %61, align 8
  %62 = load %"class.std::vector.0"*, %"class.std::vector.0"** %61, align 8
  %63 = call %"class.std::vector.0"* @_ZNSt10_Iter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EELb0EE7_S_baseES6_(%"class.std::vector.0"* %62)
  store i32 972695233, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN5GraphILl0EE4EdgeESaIS6_EES9_EET0_T_SB_SA_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %10 = ptrtoint %"class.std::vector.0"* %8 to i64
  %11 = ptrtoint %"class.std::vector.0"* %9 to i64
  %12 = sub i64 %10, 8187299385539170641
  %13 = sub i64 %12, %11
  %14 = add i64 %13, 8187299385539170641
  %15 = sub i64 %10, %11
  %16 = sdiv exact i64 %14, 24
  store i64 %16, i64* %7, align 8
  %17 = alloca i32
  store i32 -1814933198, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %41
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1814933198, label %21
    i32 -1129716088, label %25
    i32 1829549633, label %33
    i32 -445273796, label %39
  ]

; <label>:20:                                     ; preds = %18
  br label %41

; <label>:21:                                     ; preds = %18
  %22 = load i64, i64* %7, align 8
  %23 = icmp sgt i64 %22, 0
  %24 = select i1 %23, i32 -1129716088, i32 -445273796
  store i32 %24, i32* %17
  br label %41

; <label>:25:                                     ; preds = %18
  %26 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %28 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEaSERKS4_(%"class.std::vector.0"* %27, %"class.std::vector.0"* dereferenceable(24) %26)
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %30 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %29, i32 1
  store %"class.std::vector.0"* %30, %"class.std::vector.0"** %4, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %32 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %31, i32 1
  store %"class.std::vector.0"* %32, %"class.std::vector.0"** %6, align 8
  store i32 1829549633, i32* %17
  br label %41

; <label>:33:                                     ; preds = %18
  %34 = load i64, i64* %7, align 8
  %35 = sub i64 %34, -5260314302733373939
  %36 = add i64 %35, -1
  %37 = add i64 %36, -5260314302733373939
  %38 = add nsw i64 %34, -1
  store i64 %37, i64* %7, align 8
  store i32 -1814933198, i32* %17
  br label %41

; <label>:39:                                     ; preds = %18
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  ret %"class.std::vector.0"* %40

; <label>:41:                                     ; preds = %33, %25, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt10_Iter_baseIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EELb0EE7_S_baseES6_(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt18uninitialized_copyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EES6_ET0_T_S8_S7_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.839
  %8 = load i32, i32* @y.840
  %9 = sub i32 %7, 1915460378
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1915460378
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1734790662, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %75
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1734790662, label %21
    i32 1998835590, label %29
    i32 -1626273672, label %64
    i32 1230873389, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1998835590, i32 1230873389
  store i32 %28, i32* %17
  br label %75

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca %"class.std::vector.0"*, align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %31, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %37 = call %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES8_EET0_T_SA_S9_(%"class.std::vector.0"* %34, %"class.std::vector.0"* %35, %"class.std::vector.0"* %36)
  store %"class.std::vector.0"* %37, %"class.std::vector.0"** %4
  %38 = load i32, i32* @x.839
  %39 = load i32, i32* @y.840
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1626273672, i32 1230873389
  store i32 %63, i32* %17
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"class.std::vector.0"*, align 8
  %68 = alloca %"class.std::vector.0"*, align 8
  %69 = alloca %"class.std::vector.0"*, align 8
  %70 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %67, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %68, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load %"class.std::vector.0"*, %"class.std::vector.0"** %67, align 8
  %72 = load %"class.std::vector.0"*, %"class.std::vector.0"** %68, align 8
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %69, align 8
  %74 = call %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES8_EET0_T_SA_S9_(%"class.std::vector.0"* %71, %"class.std::vector.0"* %72, %"class.std::vector.0"* %73)
  store i32 1998835590, i32* %17
  br label %75

; <label>:75:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIN5GraphILl0EE4EdgeESaIS5_EES8_EET0_T_SA_S9_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %120, %3
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %14 = icmp ne %"class.std::vector.0"* %12, %13
  br i1 %14, label %15, label %131

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* @x.841
  %17 = load i32, i32* @y.842
  %18 = sub i32 %16, -944590681
  %19 = sub i32 %18, 1
  %20 = add i32 %19, -944590681
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %247

; <label>:42:                                     ; preds = %15, %247
  %43 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %44 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEPT_RS6_(%"class.std::vector.0"* dereferenceable(24) %43) #3
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %46 = load i32, i32* @x.841
  %47 = load i32, i32* @y.842
  %48 = sub i32 %46, 1252942668
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1252942668
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %247

; <label>:60:                                     ; preds = %42
  invoke void @_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJRS5_EEvPT_DpOT0_(%"class.std::vector.0"* %44, %"class.std::vector.0"* dereferenceable(24) %45)
          to label %61 unwind label %121

; <label>:61:                                     ; preds = %60
  br label %62

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* @x.841
  %64 = load i32, i32* @y.842
  %65 = sub i32 %63, -1126226303
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -1126226303
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %251

; <label>:89:                                     ; preds = %62, %251
  %90 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %91 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %90, i32 1
  store %"class.std::vector.0"* %91, %"class.std::vector.0"** %4, align 8
  %92 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %93 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %92, i32 1
  store %"class.std::vector.0"* %93, %"class.std::vector.0"** %7, align 8
  %94 = load i32, i32* @x.841
  %95 = load i32, i32* @y.842
  %96 = sub i32 %94, 1373287664
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 1373287664
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %251

; <label>:120:                                    ; preds = %89
  br label %11

; <label>:121:                                    ; preds = %60
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %8, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %9, align 4
  br label %125

; <label>:125:                                    ; preds = %121
  %126 = load i8*, i8** %8, align 8
  %127 = call i8* @__cxa_begin_catch(i8* %126) #3
  %128 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %129 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEvT_S7_(%"class.std::vector.0"* %128, %"class.std::vector.0"* %129)
          to label %130 unwind label %133

; <label>:130:                                    ; preds = %125
  invoke void @__cxa_rethrow() #12
          to label %204 unwind label %133

; <label>:131:                                    ; preds = %11
  %132 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  ret %"class.std::vector.0"* %132

; <label>:133:                                    ; preds = %130, %125
  %134 = load i32, i32* @x.841
  %135 = load i32, i32* @y.842
  %136 = sub i32 0, 1
  %137 = add i32 %134, %136
  %138 = sub i32 %134, 1
  %139 = mul i32 %134, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %135, 10
  %143 = and i1 %141, %142
  %144 = xor i1 %141, %142
  %145 = or i1 %143, %144
  %146 = or i1 %141, %142
  br i1 %145, label %147, label %256

; <label>:147:                                    ; preds = %133, %256
  %148 = landingpad { i8*, i32 }
          cleanup
  %149 = extractvalue { i8*, i32 } %148, 0
  store i8* %149, i8** %8, align 8
  %150 = extractvalue { i8*, i32 } %148, 1
  store i32 %150, i32* %9, align 4
  %151 = load i32, i32* @x.841
  %152 = load i32, i32* @y.842
  %153 = add i32 %151, 1309083028
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, 1309083028
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  br i1 %163, label %165, label %256

; <label>:165:                                    ; preds = %147
  invoke void @__cxa_end_catch()
          to label %166 unwind label %201

; <label>:166:                                    ; preds = %165
  br label %196
                                                  ; No predecessors!
  %168 = load i32, i32* @x.841
  %169 = load i32, i32* @y.842
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  br i1 %179, label %181, label %260

; <label>:181:                                    ; preds = %167, %260
  call void @llvm.trap()
  %182 = load i32, i32* @x.841
  %183 = load i32, i32* @y.842
  %184 = sub i32 0, 1
  %185 = add i32 %182, %184
  %186 = sub i32 %182, 1
  %187 = mul i32 %182, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %183, 10
  %191 = and i1 %189, %190
  %192 = xor i1 %189, %190
  %193 = or i1 %191, %192
  %194 = or i1 %189, %190
  br i1 %193, label %195, label %260

; <label>:195:                                    ; preds = %181
  unreachable

; <label>:196:                                    ; preds = %166
  %197 = load i8*, i8** %8, align 8
  %198 = load i32, i32* %9, align 4
  %199 = insertvalue { i8*, i32 } undef, i8* %197, 0
  %200 = insertvalue { i8*, i32 } %199, i32 %198, 1
  resume { i8*, i32 } %200

; <label>:201:                                    ; preds = %165
  %202 = landingpad { i8*, i32 }
          catch i8* null
  %203 = extractvalue { i8*, i32 } %202, 0
  call void @__clang_call_terminate(i8* %203) #7
  unreachable

; <label>:204:                                    ; preds = %130
  %205 = load i32, i32* @x.841
  %206 = load i32, i32* @y.842
  %207 = add i32 %205, 456012363
  %208 = sub i32 %207, 1
  %209 = sub i32 %208, 456012363
  %210 = sub i32 %205, 1
  %211 = mul i32 %205, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %206, 10
  %215 = and i1 %213, %214
  %216 = xor i1 %213, %214
  %217 = or i1 %215, %216
  %218 = or i1 %213, %214
  br i1 %217, label %219, label %261

; <label>:219:                                    ; preds = %204, %261
  %220 = load i32, i32* @x.841
  %221 = load i32, i32* @y.842
  %222 = sub i32 %220, 676531109
  %223 = sub i32 %222, 1
  %224 = add i32 %223, 676531109
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = xor i1 %228, true
  %231 = xor i1 %229, true
  %232 = xor i1 false, true
  %233 = and i1 %230, false
  %234 = and i1 %228, %232
  %235 = and i1 %231, false
  %236 = and i1 %229, %232
  %237 = or i1 %233, %234
  %238 = or i1 %235, %236
  %239 = xor i1 %237, %238
  %240 = or i1 %230, %231
  %241 = xor i1 %240, true
  %242 = or i1 false, %232
  %243 = and i1 %241, %242
  %244 = or i1 %239, %243
  %245 = or i1 %228, %229
  br i1 %244, label %246, label %261

; <label>:246:                                    ; preds = %219
  unreachable

; <label>:247:                                    ; preds = %42, %15
  %248 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %249 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEPT_RS6_(%"class.std::vector.0"* dereferenceable(24) %248) #3
  %250 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  br label %42

; <label>:251:                                    ; preds = %89, %62
  %252 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %253 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %252, i32 1
  store %"class.std::vector.0"* %253, %"class.std::vector.0"** %4, align 8
  %254 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %255 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %254, i32 1
  store %"class.std::vector.0"* %255, %"class.std::vector.0"** %7, align 8
  br label %89

; <label>:256:                                    ; preds = %147, %133
  %257 = landingpad { i8*, i32 }
          cleanup
  %258 = extractvalue { i8*, i32 } %257, 0
  store i8* %258, i8** %8, align 8
  %259 = extractvalue { i8*, i32 } %257, 1
  store i32 %259, i32* %9, align 4
  br label %147

; <label>:260:                                    ; preds = %181, %167
  call void @llvm.trap()
  br label %181

; <label>:261:                                    ; preds = %219, %204
  br label %219
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5GraphILl0EE4EdgeESaIS3_EEJRS5_EEvPT_DpOT0_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.0"*
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.0"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EEC2ERKS4_(%"class.std::vector.0"* %7, %"class.std::vector.0"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRSt6vectorIN5GraphILl0EE4EdgeESaIS3_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.0"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.845
  %6 = load i32, i32* @y.846
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1540388231, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1540388231, label %18
    i32 -733525205, label %38
    i32 813162130, label %55
    i32 1533385875, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -733525205, i32 1533385875
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %39, align 8
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %39, align 8
  store %"class.std::vector.0"* %40, %"class.std::vector.0"** %2
  %41 = load i32, i32* @x.845
  %42 = load i32, i32* @y.846
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 813162130, i32 1533385875
  store i32 %54, i32* %14
  br label %60

; <label>:55:                                     ; preds = %15
  %56 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %56

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %58, align 8
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %58, align 8
  store i32 -733525205, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE8capacityEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %10, align 8
  %12 = ptrtoint %"struct.Graph<0>::Edge"* %7 to i64
  %13 = ptrtoint %"struct.Graph<0>::Edge"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 32
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEPS2_mT_SC_(%"class.std::vector.0"*, i64, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.849
  %6 = load i32, i32* @y.850
  %7 = sub i32 %5, 1158415193
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1158415193
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 true, true
  %18 = and i1 %15, true
  %19 = and i1 %13, %17
  %20 = and i1 %16, true
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 true, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %186

; <label>:31:                                     ; preds = %4, %186
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.std::vector.0"*, align 8
  %35 = alloca i64, align 8
  %36 = alloca %"struct.Graph<0>::Edge"*, align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %38 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %39 = alloca i8*
  %40 = alloca i32
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %41, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %3, %"struct.Graph<0>::Edge"** %42, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %34, align 8
  store i64 %1, i64* %35, align 8
  %43 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %44 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %45 = load i64, i64* %35, align 8
  %46 = call %"struct.Graph<0>::Edge"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %44, i64 %45)
  store %"struct.Graph<0>::Edge"* %46, %"struct.Graph<0>::Edge"** %36, align 8
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %37 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator"* %38 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %36, align 8
  %52 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %53 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %52) #3
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  %55 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %54, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %38, i32 0, i32 0
  %57 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %56, align 8
  %58 = load i32, i32* @x.849
  %59 = load i32, i32* @y.850
  %60 = add i32 %58, -503821969
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -503821969
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %186

; <label>:72:                                     ; preds = %31
  %73 = invoke %"struct.Graph<0>::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEPS4_S4_ET0_T_SD_SC_RSaIT1_E(%"struct.Graph<0>::Edge"* %55, %"struct.Graph<0>::Edge"* %57, %"struct.Graph<0>::Edge"* %51, %"class.std::allocator.2"* dereferenceable(1) %53)
          to label %74 unwind label %76

; <label>:74:                                     ; preds = %72
  %75 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %36, align 8
  ret %"struct.Graph<0>::Edge"* %75

; <label>:76:                                     ; preds = %72
  %77 = load i32, i32* @x.849
  %78 = load i32, i32* @y.850
  %79 = sub i32 %77, 1953399790
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 1953399790
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %213

; <label>:103:                                    ; preds = %76, %213
  %104 = landingpad { i8*, i32 }
          catch i8* null
  %105 = extractvalue { i8*, i32 } %104, 0
  store i8* %105, i8** %39, align 8
  %106 = extractvalue { i8*, i32 } %104, 1
  store i32 %106, i32* %40, align 4
  %107 = load i32, i32* @x.849
  %108 = load i32, i32* @y.850
  %109 = add i32 %107, -79226763
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, -79226763
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %213

; <label>:121:                                    ; preds = %103
  br label %122

; <label>:122:                                    ; preds = %121
  %123 = load i8*, i8** %39, align 8
  %124 = call i8* @__cxa_begin_catch(i8* %123) #3
  %125 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %126 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %36, align 8
  %127 = load i64, i64* %35, align 8
  invoke void @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.1"* %125, %"struct.Graph<0>::Edge"* %126, i64 %127)
          to label %128 unwind label %129

; <label>:128:                                    ; preds = %122
  invoke void @__cxa_rethrow() #12
          to label %185 unwind label %129

; <label>:129:                                    ; preds = %128, %122
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %39, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %40, align 4
  invoke void @__cxa_end_catch()
          to label %133 unwind label %182

; <label>:133:                                    ; preds = %129
  br label %177
                                                  ; No predecessors!
  %135 = load i32, i32* @x.849
  %136 = load i32, i32* @y.850
  %137 = add i32 %135, -1755919871
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, -1755919871
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 false, true
  %148 = and i1 %145, false
  %149 = and i1 %143, %147
  %150 = and i1 %146, false
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 false, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  br i1 %159, label %161, label %217

; <label>:161:                                    ; preds = %134, %217
  call void @llvm.trap()
  %162 = load i32, i32* @x.849
  %163 = load i32, i32* @y.850
  %164 = sub i32 %162, -1540534917
  %165 = sub i32 %164, 1
  %166 = add i32 %165, -1540534917
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = and i1 %170, %171
  %173 = xor i1 %170, %171
  %174 = or i1 %172, %173
  %175 = or i1 %170, %171
  br i1 %174, label %176, label %217

; <label>:176:                                    ; preds = %161
  unreachable

; <label>:177:                                    ; preds = %133
  %178 = load i8*, i8** %39, align 8
  %179 = load i32, i32* %40, align 4
  %180 = insertvalue { i8*, i32 } undef, i8* %178, 0
  %181 = insertvalue { i8*, i32 } %180, i32 %179, 1
  resume { i8*, i32 } %181

; <label>:182:                                    ; preds = %129
  %183 = landingpad { i8*, i32 }
          catch i8* null
  %184 = extractvalue { i8*, i32 } %183, 0
  call void @__clang_call_terminate(i8* %184) #7
  unreachable

; <label>:185:                                    ; preds = %128
  unreachable

; <label>:186:                                    ; preds = %31, %4
  %187 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %188 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %189 = alloca %"class.std::vector.0"*, align 8
  %190 = alloca i64, align 8
  %191 = alloca %"struct.Graph<0>::Edge"*, align 8
  %192 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %193 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %194 = alloca i8*
  %195 = alloca i32
  %196 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %187, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %196, align 8
  %197 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %188, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %3, %"struct.Graph<0>::Edge"** %197, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %189, align 8
  store i64 %1, i64* %190, align 8
  %198 = load %"class.std::vector.0"*, %"class.std::vector.0"** %189, align 8
  %199 = bitcast %"class.std::vector.0"* %198 to %"struct.std::_Vector_base.1"*
  %200 = load i64, i64* %190, align 8
  %201 = call %"struct.Graph<0>::Edge"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %199, i64 %200)
  store %"struct.Graph<0>::Edge"* %201, %"struct.Graph<0>::Edge"** %191, align 8
  %202 = bitcast %"class.__gnu_cxx::__normal_iterator"* %192 to i8*
  %203 = bitcast %"class.__gnu_cxx::__normal_iterator"* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %202, i8* %203, i64 8, i32 8, i1 false)
  %204 = bitcast %"class.__gnu_cxx::__normal_iterator"* %193 to i8*
  %205 = bitcast %"class.__gnu_cxx::__normal_iterator"* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %204, i8* %205, i64 8, i32 8, i1 false)
  %206 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %191, align 8
  %207 = bitcast %"class.std::vector.0"* %198 to %"struct.std::_Vector_base.1"*
  %208 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIN5GraphILl0EE4EdgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %207) #3
  %209 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %192, i32 0, i32 0
  %210 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %209, align 8
  %211 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %193, i32 0, i32 0
  %212 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %211, align 8
  br label %31

; <label>:213:                                    ; preds = %103, %76
  %214 = landingpad { i8*, i32 }
          catch i8* null
  %215 = extractvalue { i8*, i32 } %214, 0
  store i8* %215, i8** %39, align 8
  %216 = extractvalue { i8*, i32 } %214, 1
  store i32 %216, i32* %40, align 4
  br label %103

; <label>:217:                                    ; preds = %161, %134
  call void @llvm.trap()
  br label %161
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEES4_EvT_SA_RSaIT0_E(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %4, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %10, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %7, i32 0, i32 0
  %16 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %8, i32 0, i32 0
  %18 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEEvT_SA_(%"struct.Graph<0>::Edge"* %16, %"struct.Graph<0>::Edge"* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET0_T_SE_SD_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %7, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %18, align 8
  %20 = call %"struct.Graph<0>::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"struct.Graph<0>::Edge"* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %20, %"struct.Graph<0>::Edge"** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %25 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %24, align 8
  %26 = call %"struct.Graph<0>::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"struct.Graph<0>::Edge"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %26, %"struct.Graph<0>::Edge"** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %31 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %33 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %12, i32 0, i32 0
  %35 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %34, align 8
  %36 = call %"struct.Graph<0>::Edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET1_T0_SE_SD_(%"struct.Graph<0>::Edge"* %31, %"struct.Graph<0>::Edge"* %33, %"struct.Graph<0>::Edge"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %4, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %36, %"struct.Graph<0>::Edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %4, i32 0, i32 0
  %39 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %38, align 8
  ret %"struct.Graph<0>::Edge"* %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE5beginEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.31"* %2, %"struct.Graph<0>::Edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %2, i32 0, i32 0
  %9 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %8, align 8
  ret %"struct.Graph<0>::Edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt6vectorIN5GraphILl0EE4EdgeESaIS2_EE3endEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph<0>::Edge, std::allocator<Graph<0>::Edge> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.31"* %2, %"struct.Graph<0>::Edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %2, i32 0, i32 0
  %9 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %8, align 8
  ret %"struct.Graph<0>::Edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt4copyIPN5GraphILl0EE4EdgeES3_ET0_T_S5_S4_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat {
  %4 = alloca %"struct.Graph<0>::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.859
  %8 = load i32, i32* @y.860
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1324556923, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1324556923, label %20
    i32 -321246733, label %40
    i32 -1838672332, label %77
    i32 -1153362847, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -321246733, i32 -1153362847
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.Graph<0>::Edge"*, align 8
  %42 = alloca %"struct.Graph<0>::Edge"*, align 8
  %43 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %41, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %42, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %43, align 8
  %44 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %41, align 8
  %45 = call %"struct.Graph<0>::Edge"* @_ZSt12__miter_baseIPN5GraphILl0EE4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"* %44)
  %46 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %42, align 8
  %47 = call %"struct.Graph<0>::Edge"* @_ZSt12__miter_baseIPN5GraphILl0EE4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"* %46)
  %48 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %43, align 8
  %49 = call %"struct.Graph<0>::Edge"* @_ZSt14__copy_move_a2ILb0EPN5GraphILl0EE4EdgeES3_ET1_T0_S5_S4_(%"struct.Graph<0>::Edge"* %45, %"struct.Graph<0>::Edge"* %47, %"struct.Graph<0>::Edge"* %48)
  store %"struct.Graph<0>::Edge"* %49, %"struct.Graph<0>::Edge"** %4
  %50 = load i32, i32* @x.859
  %51 = load i32, i32* @y.860
  %52 = sub i32 %50, -303168773
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -303168773
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1838672332, i32 -1153362847
  store i32 %76, i32* %16
  br label %89

; <label>:77:                                     ; preds = %17
  %78 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4
  ret %"struct.Graph<0>::Edge"* %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %"struct.Graph<0>::Edge"*, align 8
  %81 = alloca %"struct.Graph<0>::Edge"*, align 8
  %82 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %80, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %81, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %82, align 8
  %83 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %80, align 8
  %84 = call %"struct.Graph<0>::Edge"* @_ZSt12__miter_baseIPN5GraphILl0EE4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"* %83)
  %85 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %81, align 8
  %86 = call %"struct.Graph<0>::Edge"* @_ZSt12__miter_baseIPN5GraphILl0EE4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"* %85)
  %87 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %82, align 8
  %88 = call %"struct.Graph<0>::Edge"* @_ZSt14__copy_move_a2ILb0EPN5GraphILl0EE4EdgeES3_ET1_T0_S5_S4_(%"struct.Graph<0>::Edge"* %84, %"struct.Graph<0>::Edge"* %86, %"struct.Graph<0>::Edge"* %87)
  store i32 -321246733, i32* %16
  br label %89

; <label>:89:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt22__uninitialized_copy_aIPN5GraphILl0EE4EdgeES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph<0>::Edge"*, align 8
  %6 = alloca %"struct.Graph<0>::Edge"*, align 8
  %7 = alloca %"struct.Graph<0>::Edge"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %5, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %6, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %9 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %10 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %11 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %12 = call %"struct.Graph<0>::Edge"* @_ZSt18uninitialized_copyIPN5GraphILl0EE4EdgeES3_ET0_T_S5_S4_(%"struct.Graph<0>::Edge"* %9, %"struct.Graph<0>::Edge"* %10, %"struct.Graph<0>::Edge"* %11)
  ret %"struct.Graph<0>::Edge"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEEvT_SA_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %3, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %4, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %8, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %5 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %6 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  %14 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %13, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %6, i32 0, i32 0
  %16 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %15, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS6_SaIS6_EEEEEEvT_SC_(%"struct.Graph<0>::Edge"* %14, %"struct.Graph<0>::Edge"* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS6_SaIS6_EEEEEEvT_SC_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.865
  %6 = load i32, i32* @y.866
  %7 = add i32 %5, 1937792311
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1937792311
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1605315301, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1605315301, label %19
    i32 1799319487, label %39
    i32 976385379, label %70
    i32 1419391801, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1799319487, i32 1419391801
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %40, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %42, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %41, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %43, align 8
  %44 = load i32, i32* @x.865
  %45 = load i32, i32* @y.866
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 976385379, i32 1419391801
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %72, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %74, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %73, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %75, align 8
  store i32 1799319487, i32* %15
  br label %76

; <label>:76:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET1_T0_SE_SD_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %8 = alloca %"struct.Graph<0>::Edge"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %7, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %18 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %17, align 8
  %19 = call %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"struct.Graph<0>::Edge"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %23 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %22, align 8
  %24 = call %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"struct.Graph<0>::Edge"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %11, i32 0, i32 0
  %28 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %27, align 8
  %29 = call %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph<0>::Edge"* %28)
  %30 = call %"struct.Graph<0>::Edge"* @_ZSt13__copy_move_aILb0EPKN5GraphILl0EE4EdgeEPS2_ET1_T0_S7_S6_(%"struct.Graph<0>::Edge"* %19, %"struct.Graph<0>::Edge"* %24, %"struct.Graph<0>::Edge"* %29)
  store %"struct.Graph<0>::Edge"* %30, %"struct.Graph<0>::Edge"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.31"* %4, %"struct.Graph<0>::Edge"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %4, i32 0, i32 0
  %32 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %31, align 8
  ret %"struct.Graph<0>::Edge"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"struct.Graph<0>::Edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %9 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %8, align 8
  %10 = call %"struct.Graph<0>::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEELb0EE7_S_baseESA_(%"struct.Graph<0>::Edge"* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %10, %"struct.Graph<0>::Edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %13 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %12, align 8
  ret %"struct.Graph<0>::Edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt13__copy_move_aILb0EPKN5GraphILl0EE4EdgeEPS2_ET1_T0_S7_S6_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat {
  %4 = alloca %"struct.Graph<0>::Edge"*, align 8
  %5 = alloca %"struct.Graph<0>::Edge"*, align 8
  %6 = alloca %"struct.Graph<0>::Edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %4, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %5, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  %9 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %10 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %11 = call %"struct.Graph<0>::Edge"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN5GraphILl0EE4EdgeEPS5_EET0_T_SA_S9_(%"struct.Graph<0>::Edge"* %8, %"struct.Graph<0>::Edge"* %9, %"struct.Graph<0>::Edge"* %10)
  ret %"struct.Graph<0>::Edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"struct.Graph<0>::Edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %8 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %9 = call %"struct.Graph<0>::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseESA_(%"struct.Graph<0>::Edge"* %8)
  ret %"struct.Graph<0>::Edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph<0>::Edge"*) #0 comdat {
  %2 = alloca %"struct.Graph<0>::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.875
  %6 = load i32, i32* @y.876
  %7 = sub i32 %5, -1977665348
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1977665348
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 26103845, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 26103845, label %19
    i32 262158566, label %27
    i32 -1688267604, label %50
    i32 1132909196, label %52
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 262158566, i32 1132909196
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %28, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %29 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %29, i32 0, i32 0
  %34 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %33, align 8
  %35 = call %"struct.Graph<0>::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseES9_(%"struct.Graph<0>::Edge"* %34)
  store %"struct.Graph<0>::Edge"* %35, %"struct.Graph<0>::Edge"** %2
  %36 = load i32, i32* @x.875
  %37 = load i32, i32* @y.876
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1688267604, i32 1132909196
  store i32 %49, i32* %15
  br label %61

; <label>:50:                                     ; preds = %16
  %51 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2
  ret %"struct.Graph<0>::Edge"* %51

; <label>:52:                                     ; preds = %16
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %53, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %55, align 8
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %54 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.31"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %54, i32 0, i32 0
  %59 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %58, align 8
  %60 = call %"struct.Graph<0>::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseES9_(%"struct.Graph<0>::Edge"* %59)
  store i32 262158566, i32* %15
  br label %61

; <label>:61:                                     ; preds = %52, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.31"*, %"struct.Graph<0>::Edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  %4 = alloca %"struct.Graph<0>::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  store %"struct.Graph<0>::Edge"** %1, %"struct.Graph<0>::Edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %5, i32 0, i32 0
  %7 = load %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %4, align 8
  %8 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  store %"struct.Graph<0>::Edge"* %8, %"struct.Graph<0>::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN5GraphILl0EE4EdgeEPS5_EET0_T_SA_S9_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #5 comdat align 2 {
  %4 = alloca %"struct.Graph<0>::Edge"*
  %5 = alloca %"struct.Graph<0>::Edge"*, align 8
  %6 = alloca %"struct.Graph<0>::Edge"*, align 8
  %7 = alloca %"struct.Graph<0>::Edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %5, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %6, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %7, align 8
  %9 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %10 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %11 = ptrtoint %"struct.Graph<0>::Edge"* %9 to i64
  %12 = ptrtoint %"struct.Graph<0>::Edge"* %10 to i64
  %13 = sub i64 %11, -6993157553211421038
  %14 = sub i64 %13, %12
  %15 = add i64 %14, -6993157553211421038
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 32
  store i64 %17, i64* %8, align 8
  %18 = alloca i32
  store i32 -1197944984, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %119
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1197944984, label %22
    i32 -1771312969, label %26
    i32 -1135970461, label %42
    i32 880155034, label %66
    i32 1484771419, label %67
    i32 -697715789, label %73
    i32 795580692, label %89
    i32 98479152, label %106
    i32 10126558, label %108
    i32 -402381234, label %117
  ]

; <label>:21:                                     ; preds = %19
  br label %119

; <label>:22:                                     ; preds = %19
  %23 = load i64, i64* %8, align 8
  %24 = icmp sgt i64 %23, 0
  %25 = select i1 %24, i32 -1771312969, i32 -697715789
  store i32 %25, i32* %18
  br label %119

; <label>:26:                                     ; preds = %19
  %27 = load i32, i32* @x.879
  %28 = load i32, i32* @y.880
  %29 = sub i32 %27, -2126298673
  %30 = sub i32 %29, 1
  %31 = add i32 %30, -2126298673
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 -1135970461, i32 10126558
  store i32 %41, i32* %18
  br label %119

; <label>:42:                                     ; preds = %19
  %43 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %44 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %45 = bitcast %"struct.Graph<0>::Edge"* %44 to i8*
  %46 = bitcast %"struct.Graph<0>::Edge"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 32, i32 8, i1 false)
  %47 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %48 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %47, i32 1
  store %"struct.Graph<0>::Edge"* %48, %"struct.Graph<0>::Edge"** %5, align 8
  %49 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %50 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %49, i32 1
  store %"struct.Graph<0>::Edge"* %50, %"struct.Graph<0>::Edge"** %7, align 8
  %51 = load i32, i32* @x.879
  %52 = load i32, i32* @y.880
  %53 = add i32 %51, 858796717
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 858796717
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 880155034, i32 10126558
  store i32 %65, i32* %18
  br label %119

; <label>:66:                                     ; preds = %19
  store i32 1484771419, i32* %18
  br label %119

; <label>:67:                                     ; preds = %19
  %68 = load i64, i64* %8, align 8
  %69 = sub i64 %68, -9090301380834285822
  %70 = add i64 %69, -1
  %71 = add i64 %70, -9090301380834285822
  %72 = add nsw i64 %68, -1
  store i64 %71, i64* %8, align 8
  store i32 -1197944984, i32* %18
  br label %119

; <label>:73:                                     ; preds = %19
  %74 = load i32, i32* @x.879
  %75 = load i32, i32* @y.880
  %76 = add i32 %74, -2018257506
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, -2018257506
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  %88 = select i1 %86, i32 795580692, i32 -402381234
  store i32 %88, i32* %18
  br label %119

; <label>:89:                                     ; preds = %19
  %90 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  store %"struct.Graph<0>::Edge"* %90, %"struct.Graph<0>::Edge"** %4
  %91 = load i32, i32* @x.879
  %92 = load i32, i32* @y.880
  %93 = sub i32 %91, 1449584009
  %94 = sub i32 %93, 1
  %95 = add i32 %94, 1449584009
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  %105 = select i1 %103, i32 98479152, i32 -402381234
  store i32 %105, i32* %18
  br label %119

; <label>:106:                                    ; preds = %19
  %107 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4
  ret %"struct.Graph<0>::Edge"* %107

; <label>:108:                                    ; preds = %19
  %109 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %110 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %111 = bitcast %"struct.Graph<0>::Edge"* %110 to i8*
  %112 = bitcast %"struct.Graph<0>::Edge"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %112, i64 32, i32 8, i1 false)
  %113 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %114 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %113, i32 1
  store %"struct.Graph<0>::Edge"* %114, %"struct.Graph<0>::Edge"** %5, align 8
  %115 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %116 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %115, i32 1
  store %"struct.Graph<0>::Edge"* %116, %"struct.Graph<0>::Edge"** %7, align 8
  store i32 -1135970461, i32* %18
  br label %119

; <label>:117:                                    ; preds = %19
  %118 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  store i32 795580692, i32* %18
  br label %119

; <label>:119:                                    ; preds = %117, %108, %89, %73, %67, %66, %42, %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseESA_(%"struct.Graph<0>::Edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph<0>::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.881
  %6 = load i32, i32* @y.882
  %7 = add i32 %5, 1763719833
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1763719833
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 421670737, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 421670737, label %19
    i32 1457689759, label %27
    i32 -998113225, label %59
    i32 -190663134, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1457689759, i32 -190663134
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %29, align 8
  %30 = call dereferenceable(8) %"struct.Graph<0>::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %28) #3
  %31 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %30, align 8
  store %"struct.Graph<0>::Edge"* %31, %"struct.Graph<0>::Edge"** %2
  %32 = load i32, i32* @x.881
  %33 = load i32, i32* @y.882
  %34 = add i32 %32, 1295484224
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1295484224
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -998113225, i32 -190663134
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2
  ret %"struct.Graph<0>::Edge"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %62, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %63, align 8
  %64 = call dereferenceable(8) %"struct.Graph<0>::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %62) #3
  %65 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %64, align 8
  store i32 1457689759, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph<0>::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph<0>::Edge"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.883
  %6 = load i32, i32* @y.884
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1669440615, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1669440615, label %18
    i32 215016654, label %26
    i32 1740181718, label %57
    i32 1497425949, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 215016654, i32 1497425949
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %"struct.Graph<0>::Edge"** %29, %"struct.Graph<0>::Edge"*** %2
  %30 = load i32, i32* @x.883
  %31 = load i32, i32* @y.884
  %32 = sub i32 %30, -114068056
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -114068056
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1740181718, i32 1497425949
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %2
  ret %"struct.Graph<0>::Edge"** %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %60, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %61, i32 0, i32 0
  store i32 215016654, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseES9_(%"struct.Graph<0>::Edge"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.31", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %2, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %3, align 8
  %4 = call dereferenceable(8) %"struct.Graph<0>::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"* %2) #3
  %5 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  ret %"struct.Graph<0>::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph<0>::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.31"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph<0>::Edge"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.887
  %6 = load i32, i32* @y.888
  %7 = sub i32 %5, -836662831
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -836662831
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1440878433, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1440878433, label %19
    i32 -2088262384, label %27
    i32 -2078472247, label %46
    i32 1537038937, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2088262384, i32 1537038937
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %29, i32 0, i32 0
  store %"struct.Graph<0>::Edge"** %30, %"struct.Graph<0>::Edge"*** %2
  %31 = load i32, i32* @x.887
  %32 = load i32, i32* @y.888
  %33 = add i32 %31, 749040956
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 749040956
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -2078472247, i32 1537038937
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %2
  ret %"struct.Graph<0>::Edge"** %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.31"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.31"* %0, %"class.__gnu_cxx::__normal_iterator.31"** %49, align 8
  %50 = load %"class.__gnu_cxx::__normal_iterator.31"*, %"class.__gnu_cxx::__normal_iterator.31"** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.31", %"class.__gnu_cxx::__normal_iterator.31"* %50, i32 0, i32 0
  store i32 -2088262384, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS4_SaIS4_EEEELb0EE7_S_baseESA_(%"struct.Graph<0>::Edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph<0>::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.889
  %6 = load i32, i32* @y.890
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2093220764, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2093220764, label %18
    i32 -1762469112, label %26
    i32 -71317050, label %61
    i32 715453285, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1762469112, i32 715453285
  store i32 %25, i32* %14
  br label %71

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %29, align 8
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator"* %27 to i8*
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 8, i1 false)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  %33 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %32, align 8
  store %"struct.Graph<0>::Edge"* %33, %"struct.Graph<0>::Edge"** %2
  %34 = load i32, i32* @x.889
  %35 = load i32, i32* @y.890
  %36 = sub i32 %34, 300134621
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 300134621
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -71317050, i32 715453285
  store i32 %60, i32* %14
  br label %71

; <label>:61:                                     ; preds = %15
  %62 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2
  ret %"struct.Graph<0>::Edge"* %62

; <label>:63:                                     ; preds = %15
  %64 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %65 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %66, align 8
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator"* %64 to i8*
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 8, i1 false)
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %64, i32 0, i32 0
  %70 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %69, align 8
  store i32 -1762469112, i32* %14
  br label %71

; <label>:71:                                     ; preds = %63, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt14__copy_move_a2ILb0EPN5GraphILl0EE4EdgeES3_ET1_T0_S5_S4_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat {
  %4 = alloca %"struct.Graph<0>::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.891
  %8 = load i32, i32* @y.892
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1903026116, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %91
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1903026116, label %20
    i32 399558741, label %40
    i32 -1562118972, label %78
    i32 973618276, label %80
  ]

; <label>:19:                                     ; preds = %17
  br label %91

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 399558741, i32 973618276
  store i32 %39, i32* %16
  br label %91

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.Graph<0>::Edge"*, align 8
  %42 = alloca %"struct.Graph<0>::Edge"*, align 8
  %43 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %41, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %42, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %43, align 8
  %44 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %41, align 8
  %45 = call %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIPN5GraphILl0EE4EdgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"* %44)
  %46 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %42, align 8
  %47 = call %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIPN5GraphILl0EE4EdgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"* %46)
  %48 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %43, align 8
  %49 = call %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIPN5GraphILl0EE4EdgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"* %48)
  %50 = call %"struct.Graph<0>::Edge"* @_ZSt13__copy_move_aILb0EPN5GraphILl0EE4EdgeES3_ET1_T0_S5_S4_(%"struct.Graph<0>::Edge"* %45, %"struct.Graph<0>::Edge"* %47, %"struct.Graph<0>::Edge"* %49)
  store %"struct.Graph<0>::Edge"* %50, %"struct.Graph<0>::Edge"** %4
  %51 = load i32, i32* @x.891
  %52 = load i32, i32* @y.892
  %53 = sub i32 %51, 1445257061
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 1445257061
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -1562118972, i32 973618276
  store i32 %77, i32* %16
  br label %91

; <label>:78:                                     ; preds = %17
  %79 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4
  ret %"struct.Graph<0>::Edge"* %79

; <label>:80:                                     ; preds = %17
  %81 = alloca %"struct.Graph<0>::Edge"*, align 8
  %82 = alloca %"struct.Graph<0>::Edge"*, align 8
  %83 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %81, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %82, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %83, align 8
  %84 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %81, align 8
  %85 = call %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIPN5GraphILl0EE4EdgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"* %84)
  %86 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %82, align 8
  %87 = call %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIPN5GraphILl0EE4EdgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"* %86)
  %88 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %83, align 8
  %89 = call %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIPN5GraphILl0EE4EdgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"* %88)
  %90 = call %"struct.Graph<0>::Edge"* @_ZSt13__copy_move_aILb0EPN5GraphILl0EE4EdgeES3_ET1_T0_S5_S4_(%"struct.Graph<0>::Edge"* %85, %"struct.Graph<0>::Edge"* %87, %"struct.Graph<0>::Edge"* %89)
  store i32 399558741, i32* %16
  br label %91

; <label>:91:                                     ; preds = %80, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt12__miter_baseIPN5GraphILl0EE4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"*) #5 comdat {
  %2 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %2, align 8
  %3 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2, align 8
  %4 = call %"struct.Graph<0>::Edge"* @_ZNSt10_Iter_baseIPN5GraphILl0EE4EdgeELb0EE7_S_baseES3_(%"struct.Graph<0>::Edge"* %3)
  ret %"struct.Graph<0>::Edge"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt13__copy_move_aILb0EPN5GraphILl0EE4EdgeES3_ET1_T0_S5_S4_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat {
  %4 = alloca %"struct.Graph<0>::Edge"*, align 8
  %5 = alloca %"struct.Graph<0>::Edge"*, align 8
  %6 = alloca %"struct.Graph<0>::Edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %4, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %5, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  %9 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %10 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %11 = call %"struct.Graph<0>::Edge"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN5GraphILl0EE4EdgeES6_EET0_T_S8_S7_(%"struct.Graph<0>::Edge"* %8, %"struct.Graph<0>::Edge"* %9, %"struct.Graph<0>::Edge"* %10)
  ret %"struct.Graph<0>::Edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt12__niter_baseIPN5GraphILl0EE4EdgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Graph<0>::Edge"*) #0 comdat {
  %2 = alloca %"struct.Graph<0>::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.897
  %6 = load i32, i32* @y.898
  %7 = add i32 %5, -658703695
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -658703695
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -509430106, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -509430106, label %19
    i32 -2111729933, label %39
    i32 -1957201303, label %57
    i32 -584395180, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2111729933, i32 -584395180
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %40, align 8
  %41 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %40, align 8
  %42 = call %"struct.Graph<0>::Edge"* @_ZNSt10_Iter_baseIPN5GraphILl0EE4EdgeELb0EE7_S_baseES3_(%"struct.Graph<0>::Edge"* %41)
  store %"struct.Graph<0>::Edge"* %42, %"struct.Graph<0>::Edge"** %2
  %43 = load i32, i32* @x.897
  %44 = load i32, i32* @y.898
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1957201303, i32 -584395180
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2
  ret %"struct.Graph<0>::Edge"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %60, align 8
  %61 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %60, align 8
  %62 = call %"struct.Graph<0>::Edge"* @_ZNSt10_Iter_baseIPN5GraphILl0EE4EdgeELb0EE7_S_baseES3_(%"struct.Graph<0>::Edge"* %61)
  store i32 -2111729933, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN5GraphILl0EE4EdgeES6_EET0_T_S8_S7_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #5 comdat align 2 {
  %4 = alloca %"struct.Graph<0>::Edge"*, align 8
  %5 = alloca %"struct.Graph<0>::Edge"*, align 8
  %6 = alloca %"struct.Graph<0>::Edge"*, align 8
  %7 = alloca i64, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %4, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %5, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %6, align 8
  %8 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %9 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  %10 = ptrtoint %"struct.Graph<0>::Edge"* %8 to i64
  %11 = ptrtoint %"struct.Graph<0>::Edge"* %9 to i64
  %12 = sub i64 %10, -5670091675278120108
  %13 = sub i64 %12, %11
  %14 = add i64 %13, -5670091675278120108
  %15 = sub i64 %10, %11
  %16 = sdiv exact i64 %14, 32
  store i64 %16, i64* %7, align 8
  %17 = alloca i32
  store i32 -511259688, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %43
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -511259688, label %21
    i32 -470384294, label %25
    i32 397866418, label %34
    i32 -749044924, label %41
  ]

; <label>:20:                                     ; preds = %18
  br label %43

; <label>:21:                                     ; preds = %18
  %22 = load i64, i64* %7, align 8
  %23 = icmp sgt i64 %22, 0
  %24 = select i1 %23, i32 -470384294, i32 -749044924
  store i32 %24, i32* %17
  br label %43

; <label>:25:                                     ; preds = %18
  %26 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  %27 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %28 = bitcast %"struct.Graph<0>::Edge"* %27 to i8*
  %29 = bitcast %"struct.Graph<0>::Edge"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 32, i32 8, i1 false)
  %30 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  %31 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %30, i32 1
  store %"struct.Graph<0>::Edge"* %31, %"struct.Graph<0>::Edge"** %4, align 8
  %32 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %33 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %32, i32 1
  store %"struct.Graph<0>::Edge"* %33, %"struct.Graph<0>::Edge"** %6, align 8
  store i32 397866418, i32* %17
  br label %43

; <label>:34:                                     ; preds = %18
  %35 = load i64, i64* %7, align 8
  %36 = sub i64 0, %35
  %37 = sub i64 0, -1
  %38 = add i64 %36, %37
  %39 = sub i64 0, %38
  %40 = add nsw i64 %35, -1
  store i64 %39, i64* %7, align 8
  store i32 -511259688, i32* %17
  br label %43

; <label>:41:                                     ; preds = %18
  %42 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  ret %"struct.Graph<0>::Edge"* %42

; <label>:43:                                     ; preds = %34, %25, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt10_Iter_baseIPN5GraphILl0EE4EdgeELb0EE7_S_baseES3_(%"struct.Graph<0>::Edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %2, align 8
  %3 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2, align 8
  ret %"struct.Graph<0>::Edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZSt18uninitialized_copyIPN5GraphILl0EE4EdgeES3_ET0_T_S5_S4_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat {
  %4 = alloca %"struct.Graph<0>::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.903
  %8 = load i32, i32* @y.904
  %9 = sub i32 %7, -973435751
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -973435751
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 666149700, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %64
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 666149700, label %21
    i32 -1479570951, label %29
    i32 -681696793, label %53
    i32 2132430107, label %55
  ]

; <label>:20:                                     ; preds = %18
  br label %64

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1479570951, i32 2132430107
  store i32 %28, i32* %17
  br label %64

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.Graph<0>::Edge"*, align 8
  %31 = alloca %"struct.Graph<0>::Edge"*, align 8
  %32 = alloca %"struct.Graph<0>::Edge"*, align 8
  %33 = alloca i8, align 1
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %30, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %31, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %30, align 8
  %35 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %31, align 8
  %36 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %32, align 8
  %37 = call %"struct.Graph<0>::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN5GraphILl0EE4EdgeES5_EET0_T_S7_S6_(%"struct.Graph<0>::Edge"* %34, %"struct.Graph<0>::Edge"* %35, %"struct.Graph<0>::Edge"* %36)
  store %"struct.Graph<0>::Edge"* %37, %"struct.Graph<0>::Edge"** %4
  %38 = load i32, i32* @x.903
  %39 = load i32, i32* @y.904
  %40 = sub i32 %38, -508980858
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -508980858
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -681696793, i32 2132430107
  store i32 %52, i32* %17
  br label %64

; <label>:53:                                     ; preds = %18
  %54 = load volatile %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4
  ret %"struct.Graph<0>::Edge"* %54

; <label>:55:                                     ; preds = %18
  %56 = alloca %"struct.Graph<0>::Edge"*, align 8
  %57 = alloca %"struct.Graph<0>::Edge"*, align 8
  %58 = alloca %"struct.Graph<0>::Edge"*, align 8
  %59 = alloca i8, align 1
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %56, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %57, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %58, align 8
  store i8 1, i8* %59, align 1
  %60 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %56, align 8
  %61 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %57, align 8
  %62 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %58, align 8
  %63 = call %"struct.Graph<0>::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN5GraphILl0EE4EdgeES5_EET0_T_S7_S6_(%"struct.Graph<0>::Edge"* %60, %"struct.Graph<0>::Edge"* %61, %"struct.Graph<0>::Edge"* %62)
  store i32 -1479570951, i32* %17
  br label %64

; <label>:64:                                     ; preds = %55, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph<0>::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN5GraphILl0EE4EdgeES5_EET0_T_S7_S6_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.Graph<0>::Edge"*, align 8
  %5 = alloca %"struct.Graph<0>::Edge"*, align 8
  %6 = alloca %"struct.Graph<0>::Edge"*, align 8
  %7 = alloca %"struct.Graph<0>::Edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %4, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %5, align 8
  store %"struct.Graph<0>::Edge"* %2, %"struct.Graph<0>::Edge"** %6, align 8
  %10 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  store %"struct.Graph<0>::Edge"* %10, %"struct.Graph<0>::Edge"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %20, %3
  %12 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  %13 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %5, align 8
  %14 = icmp ne %"struct.Graph<0>::Edge"* %12, %13
  br i1 %14, label %15, label %35

; <label>:15:                                     ; preds = %11
  %16 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %17 = call %"struct.Graph<0>::Edge"* @_ZSt11__addressofIN5GraphILl0EE4EdgeEEPT_RS3_(%"struct.Graph<0>::Edge"* dereferenceable(32) %16) #3
  %18 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  invoke void @_ZSt10_ConstructIN5GraphILl0EE4EdgeEJRS2_EEvPT_DpOT0_(%"struct.Graph<0>::Edge"* %17, %"struct.Graph<0>::Edge"* dereferenceable(32) %18)
          to label %19 unwind label %25

; <label>:19:                                     ; preds = %15
  br label %20

; <label>:20:                                     ; preds = %19
  %21 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %4, align 8
  %22 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %21, i32 1
  store %"struct.Graph<0>::Edge"* %22, %"struct.Graph<0>::Edge"** %4, align 8
  %23 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  %24 = getelementptr inbounds %"struct.Graph<0>::Edge", %"struct.Graph<0>::Edge"* %23, i32 1
  store %"struct.Graph<0>::Edge"* %24, %"struct.Graph<0>::Edge"** %7, align 8
  br label %11

; <label>:25:                                     ; preds = %15
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %8, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %9, align 4
  br label %29

; <label>:29:                                     ; preds = %25
  %30 = load i8*, i8** %8, align 8
  %31 = call i8* @__cxa_begin_catch(i8* %30) #3
  %32 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %6, align 8
  %33 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  invoke void @_ZSt8_DestroyIPN5GraphILl0EE4EdgeEEvT_S4_(%"struct.Graph<0>::Edge"* %32, %"struct.Graph<0>::Edge"* %33)
          to label %34 unwind label %37

; <label>:34:                                     ; preds = %29
  invoke void @__cxa_rethrow() #12
          to label %80 unwind label %37

; <label>:35:                                     ; preds = %11
  %36 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  ret %"struct.Graph<0>::Edge"* %36

; <label>:37:                                     ; preds = %34, %29
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %8, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %41 unwind label %77

; <label>:41:                                     ; preds = %37
  br label %43
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:43:                                     ; preds = %41
  %44 = load i32, i32* @x.905
  %45 = load i32, i32* @y.906
  %46 = sub i32 %44, 1022896618
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1022896618
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %81

; <label>:58:                                     ; preds = %43, %81
  %59 = load i8*, i8** %8, align 8
  %60 = load i32, i32* %9, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  %63 = load i32, i32* @x.905
  %64 = load i32, i32* @y.906
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %81

; <label>:76:                                     ; preds = %58
  resume { i8*, i32 } %62

; <label>:77:                                     ; preds = %37
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  call void @__clang_call_terminate(i8* %79) #7
  unreachable

; <label>:80:                                     ; preds = %34
  unreachable

; <label>:81:                                     ; preds = %58, %43
  %82 = load i8*, i8** %8, align 8
  %83 = load i32, i32* %9, align 4
  %84 = insertvalue { i8*, i32 } undef, i8* %82, 0
  %85 = insertvalue { i8*, i32 } %84, i32 %83, 1
  br label %58
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5GraphILl0EE4EdgeEJRS2_EEvPT_DpOT0_(%"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"* dereferenceable(32)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.907
  %6 = load i32, i32* @y.908
  %7 = add i32 %5, -1988612176
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1988612176
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 970869419, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %87
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 970869419, label %19
    i32 1748398705, label %39
    i32 1160739047, label %76
    i32 1305869752, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %87

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1748398705, i32 1305869752
  store i32 %38, i32* %15
  br label %87

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Graph<0>::Edge"*, align 8
  %41 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %40, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %41, align 8
  %42 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %40, align 8
  %43 = bitcast %"struct.Graph<0>::Edge"* %42 to i8*
  %44 = bitcast i8* %43 to %"struct.Graph<0>::Edge"*
  %45 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %41, align 8
  %46 = call dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZSt7forwardIRN5GraphILl0EE4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.Graph<0>::Edge"* dereferenceable(32) %45) #3
  %47 = bitcast %"struct.Graph<0>::Edge"* %44 to i8*
  %48 = bitcast %"struct.Graph<0>::Edge"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 32, i32 8, i1 false)
  %49 = load i32, i32* @x.907
  %50 = load i32, i32* @y.908
  %51 = add i32 %49, 1742477899
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1742477899
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1160739047, i32 1305869752
  store i32 %75, i32* %15
  br label %87

; <label>:76:                                     ; preds = %16
  ret void

; <label>:77:                                     ; preds = %16
  %78 = alloca %"struct.Graph<0>::Edge"*, align 8
  %79 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %78, align 8
  store %"struct.Graph<0>::Edge"* %1, %"struct.Graph<0>::Edge"** %79, align 8
  %80 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %78, align 8
  %81 = bitcast %"struct.Graph<0>::Edge"* %80 to i8*
  %82 = bitcast i8* %81 to %"struct.Graph<0>::Edge"*
  %83 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %79, align 8
  %84 = call dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZSt7forwardIRN5GraphILl0EE4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.Graph<0>::Edge"* dereferenceable(32) %83) #3
  %85 = bitcast %"struct.Graph<0>::Edge"* %82 to i8*
  %86 = bitcast %"struct.Graph<0>::Edge"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 32, i32 8, i1 false)
  store i32 1748398705, i32* %15
  br label %87

; <label>:87:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph<0>::Edge"* @_ZSt7forwardIRN5GraphILl0EE4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.Graph<0>::Edge"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph<0>::Edge"*, align 8
  store %"struct.Graph<0>::Edge"* %0, %"struct.Graph<0>::Edge"** %2, align 8
  %3 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %2, align 8
  ret %"struct.Graph<0>::Edge"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5GraphILl0EE4EdgeESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.Graph<0>::Edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"struct.Graph<0>::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"struct.Graph<0>::Edge"** %1, %"struct.Graph<0>::Edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.Graph<0>::Edge"**, %"struct.Graph<0>::Edge"*** %4, align 8
  %8 = load %"struct.Graph<0>::Edge"*, %"struct.Graph<0>::Edge"** %7, align 8
  store %"struct.Graph<0>::Edge"* %8, %"struct.Graph<0>::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IlSaIlEESaIS1_EED2Ev(%"class.std::vector.14"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.14"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %2, align 8
  %5 = load %"class.std::vector.14"*, %"class.std::vector.14"** %2, align 8
  %6 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %8, align 8
  %10 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.5"*, %"class.std::vector.5"** %12, align 8
  %14 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  %15 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIlSaIlEES2_EvT_S4_RSaIT0_E(%"class.std::vector.5"* %9, %"class.std::vector.5"* %13, %"class.std::allocator.16"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EED2Ev(%"struct.std::_Vector_base.15"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.14"* %5 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EED2Ev(%"struct.std::_Vector_base.15"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.915
  %5 = load i32, i32* @y.916
  %6 = add i32 %4, 556151211
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 556151211
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2006103910, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2006103910, label %18
    i32 542632055, label %26
    i32 -226453558, label %57
    i32 -1010484761, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 542632055, i32 -1010484761
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %27, align 8
  %28 = load %"class.std::vector.10"*, %"class.std::vector.10"** %27, align 8
  %29 = bitcast %"class.std::vector.10"* %28 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %29) #3
  %30 = load i32, i32* @x.915
  %31 = load i32, i32* @y.916
  %32 = add i32 %30, 218701223
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 218701223
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -226453558, i32 -1010484761
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %59, align 8
  %60 = load %"class.std::vector.10"*, %"class.std::vector.10"** %59, align 8
  %61 = bitcast %"class.std::vector.10"* %60 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %61) #3
  store i32 542632055, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EED2Ev(%"struct.std::_Vector_base.15"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.917
  %3 = load i32, i32* @y.918
  %4 = add i32 %2, -574365239
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -574365239
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %73

; <label>:16:                                     ; preds = %1, %73
  %17 = alloca %"struct.std::_Vector_base.15"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %17, align 8
  %20 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::vector.5"*, %"class.std::vector.5"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"class.std::vector.5"*, %"class.std::vector.5"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  %30 = ptrtoint %"class.std::vector.5"* %26 to i64
  %31 = ptrtoint %"class.std::vector.5"* %29 to i64
  %32 = sub i64 %30, -5971948519158311129
  %33 = sub i64 %32, %31
  %34 = add i64 %33, -5971948519158311129
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 24
  %37 = load i32, i32* @x.917
  %38 = load i32, i32* @y.918
  %39 = sub i32 %37, -1831720883
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1831720883
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %73

; <label>:63:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.15"* %20, %"class.std::vector.5"* %23, i64 %36)
          to label %64 unwind label %66

; <label>:64:                                     ; preds = %63
  %65 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %65) #3
  ret void

; <label>:66:                                     ; preds = %63
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %18, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %19, align 4
  %70 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %70) #3
  br label %71

; <label>:71:                                     ; preds = %66
  %72 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %72) #7
  unreachable

; <label>:73:                                     ; preds = %16, %1
  %74 = alloca %"struct.std::_Vector_base.15"*, align 8
  %75 = alloca i8*
  %76 = alloca i32
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %74, align 8
  %77 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %74, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %78, i32 0, i32 0
  %80 = load %"class.std::vector.5"*, %"class.std::vector.5"** %79, align 8
  %81 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %77, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %81, i32 0, i32 2
  %83 = load %"class.std::vector.5"*, %"class.std::vector.5"** %82, align 8
  %84 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %77, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load %"class.std::vector.5"*, %"class.std::vector.5"** %85, align 8
  %87 = ptrtoint %"class.std::vector.5"* %83 to i64
  %88 = ptrtoint %"class.std::vector.5"* %86 to i64
  %89 = shl i64 %87, %88
  %90 = sub i64 %87, 3881121506106123284
  %91 = sub i64 %90, %88
  %92 = add i64 %91, 3881121506106123284
  %93 = sub i64 %87, %88
  %94 = shl i64 %92, 24
  %95 = sdiv exact i64 %92, 24
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIlSaIlEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.919
  %5 = load i32, i32* @y.920
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1836168447, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1836168447, label %17
    i32 615264921, label %25
    i32 -22317600, label %44
    i32 -983904268, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 615264921, i32 -983904268
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"** %26, align 8
  %27 = load %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %27 to %"class.std::allocator.16"*
  call void @_ZNSaISt6vectorIlSaIlEEED2Ev(%"class.std::allocator.16"* %28) #3
  %29 = load i32, i32* @x.919
  %30 = load i32, i32* @y.920
  %31 = sub i32 %29, 924904350
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 924904350
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -22317600, i32 -983904268
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"** %46, align 8
  %47 = load %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"** %46, align 8
  %48 = bitcast %"struct.std::_Vector_base<std::vector<long, std::allocator<long> >, std::allocator<std::vector<long, std::allocator<long> > > >::_Vector_impl"* %47 to %"class.std::allocator.16"*
  call void @_ZNSaISt6vectorIlSaIlEEED2Ev(%"class.std::allocator.16"* %48) #3
  store i32 615264921, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIlSaIlEEED2Ev(%"class.std::allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %2, align 8
  %3 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %2, align 8
  %4 = bitcast %"class.std::allocator.16"* %3 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEED2Ev(%"class.__gnu_cxx::new_allocator.17"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIlSaIlEEED2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.923
  %5 = load i32, i32* @y.924
  %6 = sub i32 %4, -1150726244
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1150726244
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1820990687, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1820990687, label %18
    i32 -1349887836, label %38
    i32 -744030173, label %68
    i32 938244270, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1349887836, i32 938244270
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %39, align 8
  %41 = load i32, i32* @x.923
  %42 = load i32, i32* @y.924
  %43 = sub i32 %41, 580631816
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 580631816
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -744030173, i32 938244270
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %70, align 8
  store i32 -1349887836, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s164270794.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
