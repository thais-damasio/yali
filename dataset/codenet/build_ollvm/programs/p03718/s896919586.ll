; ModuleID = 'Project_CodeNet_C++1400/p03718/s896919586.cpp'
source_filename = "Project_CodeNet_C++1400/p03718/s896919586.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl" }
%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl" = type { i8*, i8*, i8* }
%"class.std::allocator.2" = type { i8 }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.std::vector.0"* }
%"class.__gnu_cxx::__normal_iterator.5" = type { i8* }
%class.Maxflow = type { %"class.std::vector.6", %"class.std::vector.12", %"class.std::vector.12", %"class.std::vector.12" }
%"class.std::vector.6" = type { %"struct.std::_Vector_base.7" }
%"struct.std::_Vector_base.7" = type { %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl" = type { %"class.std::vector.11"*, %"class.std::vector.11"*, %"class.std::vector.11"* }
%"class.std::vector.11" = type { %"struct.std::_Vector_base.17" }
%"struct.std::_Vector_base.17" = type { %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl" }
%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl" = type { %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"* }
%"struct.Maxflow<long long>::edge" = type { i32, i64, i32 }
%"class.std::vector.12" = type { %"struct.std::_Vector_base.13" }
%"struct.std::_Vector_base.13" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::allocator.14" = type { i8 }
%"class.std::allocator.8" = type { i8 }
%"class.std::allocator.18" = type { i8 }
%"class.__gnu_cxx::new_allocator.19" = type { i8 }
%"class.__gnu_cxx::new_allocator.9" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.21" = type { i8* }
%"class.std::move_iterator" = type { %"class.std::vector.11"* }
%"class.__gnu_cxx::new_allocator.15" = type { i8 }
%"class.std::move_iterator.22" = type { %"struct.Maxflow<long long>::edge"* }
%"class.std::move_iterator.23" = type { i32* }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"class.__gnu_cxx::__normal_iterator.24" = type { %"struct.Maxflow<long long>::edge"* }
%"struct.std::integral_constant" = type { i8 }
%"class.std::allocator.25" = type { i8 }
%"class.__gnu_cxx::new_allocator.26" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }

$_ZNSt6vectorIcSaIcEEC2EmRKS0_ = comdat any

$_ZNSaISt6vectorIcSaIcEEEC2Ev = comdat any

$_ZNSt6vectorIS_IcSaIcEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaISt6vectorIcSaIcEEED2Ev = comdat any

$_ZNSt6vectorIcSaIcEED2Ev = comdat any

$_ZNSt6vectorIS_IcSaIcEESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIS_IcSaIcEESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEdeEv = comdat any

$_ZNSt6vectorIcSaIcEE5beginEv = comdat any

$_ZNSt6vectorIcSaIcEE3endEv = comdat any

$_ZN9__gnu_cxxneIPcSt6vectorIcSaIcEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEppEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEppEv = comdat any

$_ZN7MaxflowIxEC2Ei = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIcSaIcEEixEm = comdat any

$_ZN7MaxflowIxE8add_edgeEiix = comdat any

$_ZNSt6vectorIiSaIiEE9push_backERKi = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZN7MaxflowIxE5DinicEii = comdat any

$_ZN7MaxflowIxED2Ev = comdat any

$_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN7MaxflowIxE4edgeESaIS5_EEEEvT_S9_ = comdat any

$_ZSt8_DestroyISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEPT_RS6_ = comdat any

$_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPN7MaxflowIxE4edgeES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPN7MaxflowIxE4edgeEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN7MaxflowIxE4edgeEEEvT_S6_ = comdat any

$_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE10deallocateEPS3_m = comdat any

$_ZNSaIN7MaxflowIxE4edgeEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE10deallocateEPS6_m = comdat any

$_ZNSaISt6vectorIN7MaxflowIxE4edgeESaIS2_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEED2Ev = comdat any

$_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIcSaIcEE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseIcSaIcEED2Ev = comdat any

$_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIcEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPcmET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_ = comdat any

$_ZSt6fill_nIPcmcET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aImcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_ = comdat any

$_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_ = comdat any

$_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm = comdat any

$_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm = comdat any

$_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm = comdat any

$_ZSt8_DestroyIPccEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPcEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IcSaIcEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIcSaIcEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIcSaIcEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIcSaIcEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIcSaIcEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIcSaIcEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIcSaIcEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIcSaIcEEEvT_S4_ = comdat any

$_ZSt7forwardIRKSt6vectorIcSaIcEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt6vectorIcSaIcEEC2ERKS1_ = comdat any

$_ZNKSt6vectorIcSaIcEE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIcEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPccET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIcSaIcEE5beginEv = comdat any

$_ZNKSt6vectorIcSaIcEE3endEv = comdat any

$_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEC2ERKS2_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIcSaIcEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIcSaIcEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIcSaIcEES2_EvT_S4_RSaIT0_E = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEC2ERKS1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEE4baseEv = comdat any

$_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEC2Ev = comdat any

$_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE6resizeEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIN7MaxflowIxE4edgeESaIS2_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEEC2Ev = comdat any

$_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv = comdat any

$_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_ = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEmET_S7_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN7MaxflowIxE4edgeESaIS5_EEmEET_S9_T0_ = comdat any

$_ZSt10_ConstructISt6vectorIN7MaxflowIxE4edgeESaIS3_EEJEEvPT_DpOT0_ = comdat any

$_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN7MaxflowIxE4edgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEEC2Ev = comdat any

$_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEE8max_sizeERKS6_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS4_EEES7_ET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS6_EEES9_EET0_T_SC_SB_ = comdat any

$_ZStneIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZSt10_ConstructISt6vectorIN7MaxflowIxE4edgeESaIS3_EEJS5_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEppEv = comdat any

$_ZSteqIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EEC2EOS4_ = comdat any

$_ZSt4moveIRSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EEC2EOS4_ = comdat any

$_ZSt4moveIRSaIN7MaxflowIxE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implC2EOS3_ = comdat any

$_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_ = comdat any

$_ZNSaIN7MaxflowIxE4edgeEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEEC2ERKS4_ = comdat any

$_ZSt4swapIPN7MaxflowIxE4edgeEEvRT_S5_ = comdat any

$_ZSt4moveIRPN7MaxflowIxE4edgeEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEC2ES6_ = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm = comdat any

$_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE9push_backEOS2_ = comdat any

$_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv = comdat any

$_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE12emplace_backIJS2_EEEvDpOT_ = comdat any

$_ZSt4moveIRN7MaxflowIxE4edgeEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_ = comdat any

$_ZSt7forwardIN7MaxflowIxE4edgeEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE19_M_emplace_back_auxIJS2_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE9constructIS3_JS3_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN7MaxflowIxE4edgeES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE8max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN7MaxflowIxE4edgeEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN7MaxflowIxE4edgeESt13move_iteratorIS3_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN7MaxflowIxE4edgeEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN7MaxflowIxE4edgeEES6_EET0_T_S9_S8_ = comdat any

$_ZSt4copyISt13move_iteratorIPN7MaxflowIxE4edgeEES4_ET0_T_S7_S6_ = comdat any

$_ZSt14__copy_move_a2ILb1EPN7MaxflowIxE4edgeES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPN7MaxflowIxE4edgeEEENSt11_Miter_baseIT_E13iterator_typeES7_ = comdat any

$_ZSt13__copy_move_aILb1EPN7MaxflowIxE4edgeES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__niter_baseIPN7MaxflowIxE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN7MaxflowIxE4edgeEEEPT_PKS6_S9_S7_ = comdat any

$_ZNSt10_Iter_baseIPN7MaxflowIxE4edgeELb0EE7_S_baseES3_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPN7MaxflowIxE4edgeEELb1EE7_S_baseES5_ = comdat any

$_ZNKSt13move_iteratorIPN7MaxflowIxE4edgeEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN7MaxflowIxE4edgeEEC2ES3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE7destroyIS3_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZN7MaxflowIxE3bfsEi = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEEaSEOS1_ = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZN7MaxflowIxE5dfs_dEiix = comdat any

$_ZNSt5dequeIiSaIiEEC2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_ = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi = comdat any

$_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv = comdat any

$_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE5beginEv = comdat any

$_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEppEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt5dequeIiSaIiEEC2EOS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_ = comdat any

$_ZSt4swapIPPiEvRT_S3_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt5dequeIiSaIiEE9push_backERKi = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNKSt5dequeIiSaIiEE5emptyEv = comdat any

$_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_ = comdat any

$_ZNSt5dequeIiSaIiEE5frontEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt5dequeIiSaIiEE9pop_frontEv = comdat any

$_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv = comdat any

$_ZNSt6vectorIiSaIiEEC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZSt15__alloc_on_moveISaIiEEvRT_S2_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_ = comdat any

$_ZSt4swapIPiEvRT_S2_ = comdat any

$_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt18__do_alloc_on_moveISaIiEEvRT_S2_St17integral_constantIbLb1EE = comdat any

$_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EEixEm = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@H = global i32 0, align 4
@W = global i32 0, align 4
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s896919586.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.2 = common global i32 0
@y.3 = common global i32 0
@x.4 = common global i32 0
@y.5 = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0
@x.622 = common global i32 0
@y.623 = common global i32 0
@x.624 = common global i32 0
@y.625 = common global i32 0
@x.626 = common global i32 0
@y.627 = common global i32 0
@x.628 = common global i32 0
@y.629 = common global i32 0
@x.630 = common global i32 0
@y.631 = common global i32 0
@x.632 = common global i32 0
@y.633 = common global i32 0
@x.634 = common global i32 0
@y.635 = common global i32 0
@x.636 = common global i32 0
@y.637 = common global i32 0
@x.638 = common global i32 0
@y.639 = common global i32 0
@x.640 = common global i32 0
@y.641 = common global i32 0
@x.642 = common global i32 0
@y.643 = common global i32 0
@x.644 = common global i32 0
@y.645 = common global i32 0
@x.646 = common global i32 0
@y.647 = common global i32 0
@x.648 = common global i32 0
@y.649 = common global i32 0
@x.650 = common global i32 0
@y.651 = common global i32 0
@x.652 = common global i32 0
@y.653 = common global i32 0
@x.654 = common global i32 0
@y.655 = common global i32 0
@x.656 = common global i32 0
@y.657 = common global i32 0
@x.658 = common global i32 0
@y.659 = common global i32 0
@x.660 = common global i32 0
@y.661 = common global i32 0
@x.662 = common global i32 0
@y.663 = common global i32 0
@x.664 = common global i32 0
@y.665 = common global i32 0
@x.666 = common global i32 0
@y.667 = common global i32 0
@x.668 = common global i32 0
@y.669 = common global i32 0
@x.670 = common global i32 0
@y.671 = common global i32 0
@x.672 = common global i32 0
@y.673 = common global i32 0
@x.674 = common global i32 0
@y.675 = common global i32 0
@x.676 = common global i32 0
@y.677 = common global i32 0
@x.678 = common global i32 0
@y.679 = common global i32 0
@x.680 = common global i32 0
@y.681 = common global i32 0
@x.682 = common global i32 0
@y.683 = common global i32 0
@x.684 = common global i32 0
@y.685 = common global i32 0
@x.686 = common global i32 0
@y.687 = common global i32 0
@x.688 = common global i32 0
@y.689 = common global i32 0
@x.690 = common global i32 0
@y.691 = common global i32 0
@x.692 = common global i32 0
@y.693 = common global i32 0
@x.694 = common global i32 0
@y.695 = common global i32 0
@x.696 = common global i32 0
@y.697 = common global i32 0
@x.698 = common global i32 0
@y.699 = common global i32 0
@x.700 = common global i32 0
@y.701 = common global i32 0
@x.702 = common global i32 0
@y.703 = common global i32 0
@x.704 = common global i32 0
@y.705 = common global i32 0
@x.706 = common global i32 0
@y.707 = common global i32 0
@x.708 = common global i32 0
@y.709 = common global i32 0
@x.710 = common global i32 0
@y.711 = common global i32 0
@x.712 = common global i32 0
@y.713 = common global i32 0
@x.714 = common global i32 0
@y.715 = common global i32 0
@x.716 = common global i32 0
@y.717 = common global i32 0
@x.718 = common global i32 0
@y.719 = common global i32 0
@x.720 = common global i32 0
@y.721 = common global i32 0
@x.722 = common global i32 0
@y.723 = common global i32 0
@x.724 = common global i32 0
@y.725 = common global i32 0
@x.726 = common global i32 0
@y.727 = common global i32 0
@x.728 = common global i32 0
@y.729 = common global i32 0
@x.730 = common global i32 0
@y.731 = common global i32 0
@x.732 = common global i32 0
@y.733 = common global i32 0
@x.734 = common global i32 0
@y.735 = common global i32 0
@x.736 = common global i32 0
@y.737 = common global i32 0
@x.738 = common global i32 0
@y.739 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::vector", align 8
  %4 = alloca %"class.std::vector.0", align 8
  %5 = alloca %"class.std::allocator.2", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.std::allocator", align 1
  %9 = alloca %"class.std::vector"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.std::vector.0"*, align 8
  %13 = alloca %"class.std::vector.0"*, align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.5", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.5", align 8
  %16 = alloca i8*, align 8
  %17 = alloca %class.Maxflow, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::vector.12", align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %"class.std::vector.12", align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  %31 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) @H)
  %32 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %31, i32* dereferenceable(4) @W)
  %33 = load i32, i32* @H, align 4
  %34 = load i32, i32* @W, align 4
  %35 = mul nsw i32 %33, %34
  store i32 %35, i32* %2, align 4
  %36 = load i32, i32* @H, align 4
  %37 = sext i32 %36 to i64
  %38 = load i32, i32* @W, align 4
  %39 = sext i32 %38 to i64
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.2"* %5) #3
  invoke void @_ZNSt6vectorIcSaIcEEC2EmRKS0_(%"class.std::vector.0"* %4, i64 %39, %"class.std::allocator.2"* dereferenceable(1) %5)
          to label %40 unwind label %274

; <label>:40:                                     ; preds = %0
  %41 = load i32, i32* @x.2
  %42 = load i32, i32* @y.3
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %1668

; <label>:66:                                     ; preds = %40, %1668
  call void @_ZNSaISt6vectorIcSaIcEEEC2Ev(%"class.std::allocator"* %8) #3
  %67 = load i32, i32* @x.2
  %68 = load i32, i32* @y.3
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %1668

; <label>:80:                                     ; preds = %66
  invoke void @_ZNSt6vectorIS_IcSaIcEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector"* %3, i64 %37, %"class.std::vector.0"* dereferenceable(24) %4, %"class.std::allocator"* dereferenceable(1) %8)
          to label %81 unwind label %278

; <label>:81:                                     ; preds = %80
  %82 = load i32, i32* @x.2
  %83 = load i32, i32* @y.3
  %84 = add i32 %82, 1463001601
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, 1463001601
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %1669

; <label>:108:                                    ; preds = %81, %1669
  call void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator"* %8) #3
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.0"* %4) #3
  call void @_ZNSaIcED1Ev(%"class.std::allocator.2"* %5) #3
  store %"class.std::vector"* %3, %"class.std::vector"** %9, align 8
  %109 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  %110 = call %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EE5beginEv(%"class.std::vector"* %109) #3
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %"class.std::vector.0"* %110, %"class.std::vector.0"** %111, align 8
  %112 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  %113 = call %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EE3endEv(%"class.std::vector"* %112) #3
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"class.std::vector.0"* %113, %"class.std::vector.0"** %114, align 8
  %115 = load i32, i32* @x.2
  %116 = load i32, i32* @y.3
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 false, true
  %127 = and i1 %124, false
  %128 = and i1 %122, %126
  %129 = and i1 %125, false
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 false, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %1669

; <label>:140:                                    ; preds = %108
  br label %141

; <label>:141:                                    ; preds = %288, %140
  %142 = load i32, i32* @x.2
  %143 = load i32, i32* @y.3
  %144 = sub i32 %142, -1910128996
  %145 = sub i32 %144, 1
  %146 = add i32 %145, -1910128996
  %147 = sub i32 %142, 1
  %148 = mul i32 %142, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %143, 10
  %152 = and i1 %150, %151
  %153 = xor i1 %150, %151
  %154 = or i1 %152, %153
  %155 = or i1 %150, %151
  br i1 %154, label %156, label %1676

; <label>:156:                                    ; preds = %141, %1676
  %157 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %10, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11) #3
  %158 = load i32, i32* @x.2
  %159 = load i32, i32* @y.3
  %160 = add i32 %158, -485063962
  %161 = sub i32 %160, 1
  %162 = sub i32 %161, -485063962
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 false, true
  %171 = and i1 %168, false
  %172 = and i1 %166, %170
  %173 = and i1 %169, false
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 false, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  br i1 %182, label %184, label %1676

; <label>:184:                                    ; preds = %156
  br i1 %157, label %185, label %290

; <label>:185:                                    ; preds = %184
  %186 = load i32, i32* @x.2
  %187 = load i32, i32* @y.3
  %188 = add i32 %186, -1262042821
  %189 = sub i32 %188, 1
  %190 = sub i32 %189, -1262042821
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = and i1 %194, %195
  %197 = xor i1 %194, %195
  %198 = or i1 %196, %197
  %199 = or i1 %194, %195
  br i1 %198, label %200, label %1678

; <label>:200:                                    ; preds = %185, %1678
  %201 = call dereferenceable(24) %"class.std::vector.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %10) #3
  store %"class.std::vector.0"* %201, %"class.std::vector.0"** %12, align 8
  %202 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  store %"class.std::vector.0"* %202, %"class.std::vector.0"** %13, align 8
  %203 = load %"class.std::vector.0"*, %"class.std::vector.0"** %13, align 8
  %204 = call i8* @_ZNSt6vectorIcSaIcEE5beginEv(%"class.std::vector.0"* %203) #3
  %205 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %14, i32 0, i32 0
  store i8* %204, i8** %205, align 8
  %206 = load %"class.std::vector.0"*, %"class.std::vector.0"** %13, align 8
  %207 = call i8* @_ZNSt6vectorIcSaIcEE3endEv(%"class.std::vector.0"* %206) #3
  %208 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %15, i32 0, i32 0
  store i8* %207, i8** %208, align 8
  %209 = load i32, i32* @x.2
  %210 = load i32, i32* @y.3
  %211 = sub i32 %209, -1291775674
  %212 = sub i32 %211, 1
  %213 = add i32 %212, -1291775674
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = and i1 %217, %218
  %220 = xor i1 %217, %218
  %221 = or i1 %219, %220
  %222 = or i1 %217, %218
  br i1 %221, label %223, label %1678

; <label>:223:                                    ; preds = %200
  br label %224

; <label>:224:                                    ; preds = %273, %223
  %225 = call zeroext i1 @_ZN9__gnu_cxxneIPcSt6vectorIcSaIcEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.5"* dereferenceable(8) %14, %"class.__gnu_cxx::__normal_iterator.5"* dereferenceable(8) %15) #3
  br i1 %225, label %226, label %287

; <label>:226:                                    ; preds = %224
  %227 = call dereferenceable(1) i8* @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEdeEv(%"class.__gnu_cxx::__normal_iterator.5"* %14) #3
  store i8* %227, i8** %16, align 8
  %228 = load i8*, i8** %16, align 8
  %229 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, i8* dereferenceable(1) %228)
          to label %230 unwind label %283

; <label>:230:                                    ; preds = %226
  br label %231

; <label>:231:                                    ; preds = %230
  %232 = load i32, i32* @x.2
  %233 = load i32, i32* @y.3
  %234 = sub i32 0, 1
  %235 = add i32 %232, %234
  %236 = sub i32 %232, 1
  %237 = mul i32 %232, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %233, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 true, true
  %244 = and i1 %241, true
  %245 = and i1 %239, %243
  %246 = and i1 %242, true
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 true, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  br i1 %255, label %257, label %1687

; <label>:257:                                    ; preds = %231, %1687
  %258 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.5"* @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEppEv(%"class.__gnu_cxx::__normal_iterator.5"* %14) #3
  %259 = load i32, i32* @x.2
  %260 = load i32, i32* @y.3
  %261 = add i32 %259, 957127891
  %262 = sub i32 %261, 1
  %263 = sub i32 %262, 957127891
  %264 = sub i32 %259, 1
  %265 = mul i32 %259, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %260, 10
  %269 = and i1 %267, %268
  %270 = xor i1 %267, %268
  %271 = or i1 %269, %270
  %272 = or i1 %267, %268
  br i1 %271, label %273, label %1687

; <label>:273:                                    ; preds = %257
  br label %224

; <label>:274:                                    ; preds = %0
  %275 = landingpad { i8*, i32 }
          cleanup
  %276 = extractvalue { i8*, i32 } %275, 0
  store i8* %276, i8** %6, align 8
  %277 = extractvalue { i8*, i32 } %275, 1
  store i32 %277, i32* %7, align 4
  br label %282

; <label>:278:                                    ; preds = %80
  %279 = landingpad { i8*, i32 }
          cleanup
  %280 = extractvalue { i8*, i32 } %279, 0
  store i8* %280, i8** %6, align 8
  %281 = extractvalue { i8*, i32 } %279, 1
  store i32 %281, i32* %7, align 4
  call void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator"* %8) #3
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.0"* %4) #3
  br label %282

; <label>:282:                                    ; preds = %278, %274
  call void @_ZNSaIcED1Ev(%"class.std::allocator.2"* %5) #3
  br label %1623

; <label>:283:                                    ; preds = %290, %226
  %284 = landingpad { i8*, i32 }
          cleanup
  %285 = extractvalue { i8*, i32 } %284, 0
  store i8* %285, i8** %6, align 8
  %286 = extractvalue { i8*, i32 } %284, 1
  store i32 %286, i32* %7, align 4
  br label %1569

; <label>:287:                                    ; preds = %224
  br label %288

; <label>:288:                                    ; preds = %287
  %289 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %10) #3
  br label %141

; <label>:290:                                    ; preds = %184
  %291 = load i32, i32* %2, align 4
  %292 = mul nsw i32 %291, 2
  invoke void @_ZN7MaxflowIxEC2Ei(%class.Maxflow* %17, i32 %292)
          to label %293 unwind label %283

; <label>:293:                                    ; preds = %290
  store i32 0, i32* %20, align 4
  br label %294

; <label>:294:                                    ; preds = %979, %293
  %295 = load i32, i32* %20, align 4
  %296 = load i32, i32* @H, align 4
  %297 = icmp slt i32 %295, %296
  br i1 %297, label %298, label %984

; <label>:298:                                    ; preds = %294
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.12"* %21) #3
  store i32 0, i32* %22, align 4
  br label %299

; <label>:299:                                    ; preds = %818, %298
  %300 = load i32, i32* %22, align 4
  %301 = load i32, i32* @W, align 4
  %302 = icmp slt i32 %300, %301
  br i1 %302, label %303, label %824

; <label>:303:                                    ; preds = %299
  %304 = load i32, i32* %20, align 4
  %305 = sext i32 %304 to i64
  %306 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %3, i64 %305) #3
  %307 = load i32, i32* %22, align 4
  %308 = sext i32 %307 to i64
  %309 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %306, i64 %308) #3
  %310 = load i8, i8* %309, align 1
  %311 = sext i8 %310 to i32
  %312 = icmp eq i32 %311, 83
  br i1 %312, label %363, label %313

; <label>:313:                                    ; preds = %303
  %314 = load i32, i32* @x.2
  %315 = load i32, i32* @y.3
  %316 = sub i32 0, 1
  %317 = add i32 %314, %316
  %318 = sub i32 %314, 1
  %319 = mul i32 %314, %317
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %315, 10
  %323 = and i1 %321, %322
  %324 = xor i1 %321, %322
  %325 = or i1 %323, %324
  %326 = or i1 %321, %322
  br i1 %325, label %327, label %1689

; <label>:327:                                    ; preds = %313, %1689
  %328 = load i32, i32* %20, align 4
  %329 = sext i32 %328 to i64
  %330 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %3, i64 %329) #3
  %331 = load i32, i32* %22, align 4
  %332 = sext i32 %331 to i64
  %333 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %330, i64 %332) #3
  %334 = load i8, i8* %333, align 1
  %335 = sext i8 %334 to i32
  %336 = icmp eq i32 %335, 84
  %337 = load i32, i32* @x.2
  %338 = load i32, i32* @y.3
  %339 = sub i32 0, 1
  %340 = add i32 %337, %339
  %341 = sub i32 %337, 1
  %342 = mul i32 %337, %340
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %338, 10
  %346 = xor i1 %344, true
  %347 = xor i1 %345, true
  %348 = xor i1 false, true
  %349 = and i1 %346, false
  %350 = and i1 %344, %348
  %351 = and i1 %347, false
  %352 = and i1 %345, %348
  %353 = or i1 %349, %350
  %354 = or i1 %351, %352
  %355 = xor i1 %353, %354
  %356 = or i1 %346, %347
  %357 = xor i1 %356, true
  %358 = or i1 false, %348
  %359 = and i1 %357, %358
  %360 = or i1 %355, %359
  %361 = or i1 %344, %345
  br i1 %360, label %362, label %1689

; <label>:362:                                    ; preds = %327
  br i1 %336, label %363, label %530

; <label>:363:                                    ; preds = %362, %303
  %364 = load i32, i32* @x.2
  %365 = load i32, i32* @y.3
  %366 = add i32 %364, -2006189219
  %367 = sub i32 %366, 1
  %368 = sub i32 %367, -2006189219
  %369 = sub i32 %364, 1
  %370 = mul i32 %364, %368
  %371 = urem i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %365, 10
  %374 = xor i1 %372, true
  %375 = xor i1 %373, true
  %376 = xor i1 true, true
  %377 = and i1 %374, true
  %378 = and i1 %372, %376
  %379 = and i1 %375, true
  %380 = and i1 %373, %376
  %381 = or i1 %377, %378
  %382 = or i1 %379, %380
  %383 = xor i1 %381, %382
  %384 = or i1 %374, %375
  %385 = xor i1 %384, true
  %386 = or i1 true, %376
  %387 = and i1 %385, %386
  %388 = or i1 %383, %387
  %389 = or i1 %372, %373
  br i1 %388, label %390, label %1699

; <label>:390:                                    ; preds = %363, %1699
  %391 = load i32, i32* %20, align 4
  %392 = load i32, i32* @W, align 4
  %393 = mul nsw i32 %391, %392
  %394 = load i32, i32* %22, align 4
  %395 = sub i32 0, %394
  %396 = sub i32 %393, %395
  %397 = add nsw i32 %393, %394
  %398 = load i32, i32* %20, align 4
  %399 = load i32, i32* @W, align 4
  %400 = mul nsw i32 %398, %399
  %401 = load i32, i32* %22, align 4
  %402 = add i32 %400, -1495008722
  %403 = add i32 %402, %401
  %404 = sub i32 %403, -1495008722
  %405 = add nsw i32 %400, %401
  %406 = load i32, i32* %2, align 4
  %407 = sub i32 %404, 1799857131
  %408 = add i32 %407, %406
  %409 = add i32 %408, 1799857131
  %410 = add nsw i32 %404, %406
  %411 = load i32, i32* @x.2
  %412 = load i32, i32* @y.3
  %413 = add i32 %411, -1735919369
  %414 = sub i32 %413, 1
  %415 = sub i32 %414, -1735919369
  %416 = sub i32 %411, 1
  %417 = mul i32 %411, %415
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %412, 10
  %421 = xor i1 %419, true
  %422 = xor i1 %420, true
  %423 = xor i1 true, true
  %424 = and i1 %421, true
  %425 = and i1 %419, %423
  %426 = and i1 %422, true
  %427 = and i1 %420, %423
  %428 = or i1 %424, %425
  %429 = or i1 %426, %427
  %430 = xor i1 %428, %429
  %431 = or i1 %421, %422
  %432 = xor i1 %431, true
  %433 = or i1 true, %423
  %434 = and i1 %432, %433
  %435 = or i1 %430, %434
  %436 = or i1 %419, %420
  br i1 %435, label %437, label %1699

; <label>:437:                                    ; preds = %390
  invoke void @_ZN7MaxflowIxE8add_edgeEiix(%class.Maxflow* %17, i32 %396, i32 %409, i64 100000000)
          to label %438 unwind label %476

; <label>:438:                                    ; preds = %437
  %439 = load i32, i32* %20, align 4
  %440 = load i32, i32* @W, align 4
  %441 = mul nsw i32 %439, %440
  %442 = load i32, i32* %22, align 4
  %443 = sub i32 %441, 1513989305
  %444 = add i32 %443, %442
  %445 = add i32 %444, 1513989305
  %446 = add nsw i32 %441, %442
  %447 = load i32, i32* %2, align 4
  %448 = sub i32 0, %447
  %449 = sub i32 %445, %448
  %450 = add nsw i32 %445, %447
  %451 = load i32, i32* %20, align 4
  %452 = load i32, i32* @W, align 4
  %453 = mul nsw i32 %451, %452
  %454 = load i32, i32* %22, align 4
  %455 = sub i32 0, %454
  %456 = sub i32 %453, %455
  %457 = add nsw i32 %453, %454
  invoke void @_ZN7MaxflowIxE8add_edgeEiix(%class.Maxflow* %17, i32 %449, i32 %456, i64 100000000)
          to label %458 unwind label %476

; <label>:458:                                    ; preds = %438
  %459 = load i32, i32* %20, align 4
  %460 = sext i32 %459 to i64
  %461 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %3, i64 %460) #3
  %462 = load i32, i32* %22, align 4
  %463 = sext i32 %462 to i64
  %464 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %461, i64 %463) #3
  %465 = load i8, i8* %464, align 1
  %466 = sext i8 %465 to i32
  %467 = icmp eq i32 %466, 83
  br i1 %467, label %468, label %480

; <label>:468:                                    ; preds = %458
  %469 = load i32, i32* %20, align 4
  %470 = load i32, i32* @W, align 4
  %471 = mul nsw i32 %469, %470
  %472 = load i32, i32* %22, align 4
  %473 = sub i32 0, %472
  %474 = sub i32 %471, %473
  %475 = add nsw i32 %471, %472
  store i32 %474, i32* %18, align 4
  br label %529

; <label>:476:                                    ; preds = %899, %876, %774, %658, %657, %438, %437
  %477 = landingpad { i8*, i32 }
          cleanup
  %478 = extractvalue { i8*, i32 } %477, 0
  store i8* %478, i8** %6, align 8
  %479 = extractvalue { i8*, i32 } %477, 1
  store i32 %479, i32* %7, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %21) #3
  br label %1514

; <label>:480:                                    ; preds = %458
  %481 = load i32, i32* @x.2
  %482 = load i32, i32* @y.3
  %483 = sub i32 %481, -978171193
  %484 = sub i32 %483, 1
  %485 = add i32 %484, -978171193
  %486 = sub i32 %481, 1
  %487 = mul i32 %481, %485
  %488 = urem i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %482, 10
  %491 = xor i1 %489, true
  %492 = xor i1 %490, true
  %493 = xor i1 true, true
  %494 = and i1 %491, true
  %495 = and i1 %489, %493
  %496 = and i1 %492, true
  %497 = and i1 %490, %493
  %498 = or i1 %494, %495
  %499 = or i1 %496, %497
  %500 = xor i1 %498, %499
  %501 = or i1 %491, %492
  %502 = xor i1 %501, true
  %503 = or i1 true, %493
  %504 = and i1 %502, %503
  %505 = or i1 %500, %504
  %506 = or i1 %489, %490
  br i1 %505, label %507, label %1819

; <label>:507:                                    ; preds = %480, %1819
  %508 = load i32, i32* %20, align 4
  %509 = load i32, i32* @W, align 4
  %510 = mul nsw i32 %508, %509
  %511 = load i32, i32* %22, align 4
  %512 = sub i32 0, %511
  %513 = sub i32 %510, %512
  %514 = add nsw i32 %510, %511
  store i32 %513, i32* %19, align 4
  %515 = load i32, i32* @x.2
  %516 = load i32, i32* @y.3
  %517 = sub i32 0, 1
  %518 = add i32 %515, %517
  %519 = sub i32 %515, 1
  %520 = mul i32 %515, %518
  %521 = urem i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %516, 10
  %524 = and i1 %522, %523
  %525 = xor i1 %522, %523
  %526 = or i1 %524, %525
  %527 = or i1 %522, %523
  br i1 %526, label %528, label %1819

; <label>:528:                                    ; preds = %507
  br label %529

; <label>:529:                                    ; preds = %528, %468
  br label %530

; <label>:530:                                    ; preds = %529, %362
  %531 = load i32, i32* @x.2
  %532 = load i32, i32* @y.3
  %533 = add i32 %531, -2085139986
  %534 = sub i32 %533, 1
  %535 = sub i32 %534, -2085139986
  %536 = sub i32 %531, 1
  %537 = mul i32 %531, %535
  %538 = urem i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = icmp slt i32 %532, 10
  %541 = and i1 %539, %540
  %542 = xor i1 %539, %540
  %543 = or i1 %541, %542
  %544 = or i1 %539, %540
  br i1 %543, label %545, label %1900

; <label>:545:                                    ; preds = %530, %1900
  %546 = load i32, i32* %20, align 4
  %547 = sext i32 %546 to i64
  %548 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %3, i64 %547) #3
  %549 = load i32, i32* %22, align 4
  %550 = sext i32 %549 to i64
  %551 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %548, i64 %550) #3
  %552 = load i8, i8* %551, align 1
  %553 = sext i8 %552 to i32
  %554 = icmp eq i32 %553, 111
  %555 = load i32, i32* @x.2
  %556 = load i32, i32* @y.3
  %557 = sub i32 %555, 1853927710
  %558 = sub i32 %557, 1
  %559 = add i32 %558, 1853927710
  %560 = sub i32 %555, 1
  %561 = mul i32 %555, %559
  %562 = urem i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = icmp slt i32 %556, 10
  %565 = xor i1 %563, true
  %566 = xor i1 %564, true
  %567 = xor i1 false, true
  %568 = and i1 %565, false
  %569 = and i1 %563, %567
  %570 = and i1 %566, false
  %571 = and i1 %564, %567
  %572 = or i1 %568, %569
  %573 = or i1 %570, %571
  %574 = xor i1 %572, %573
  %575 = or i1 %565, %566
  %576 = xor i1 %575, true
  %577 = or i1 false, %567
  %578 = and i1 %576, %577
  %579 = or i1 %574, %578
  %580 = or i1 %563, %564
  br i1 %579, label %581, label %1900

; <label>:581:                                    ; preds = %545
  br i1 %554, label %582, label %681

; <label>:582:                                    ; preds = %581
  %583 = load i32, i32* @x.2
  %584 = load i32, i32* @y.3
  %585 = sub i32 0, 1
  %586 = add i32 %583, %585
  %587 = sub i32 %583, 1
  %588 = mul i32 %583, %586
  %589 = urem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = icmp slt i32 %584, 10
  %592 = xor i1 %590, true
  %593 = xor i1 %591, true
  %594 = xor i1 false, true
  %595 = and i1 %592, false
  %596 = and i1 %590, %594
  %597 = and i1 %593, false
  %598 = and i1 %591, %594
  %599 = or i1 %595, %596
  %600 = or i1 %597, %598
  %601 = xor i1 %599, %600
  %602 = or i1 %592, %593
  %603 = xor i1 %602, true
  %604 = or i1 false, %594
  %605 = and i1 %603, %604
  %606 = or i1 %601, %605
  %607 = or i1 %590, %591
  br i1 %606, label %608, label %1910

; <label>:608:                                    ; preds = %582, %1910
  %609 = load i32, i32* %20, align 4
  %610 = load i32, i32* @W, align 4
  %611 = mul nsw i32 %609, %610
  %612 = load i32, i32* %22, align 4
  %613 = sub i32 0, %611
  %614 = sub i32 0, %612
  %615 = add i32 %613, %614
  %616 = sub i32 0, %615
  %617 = add nsw i32 %611, %612
  %618 = load i32, i32* %20, align 4
  %619 = load i32, i32* @W, align 4
  %620 = mul nsw i32 %618, %619
  %621 = load i32, i32* %22, align 4
  %622 = sub i32 %620, -1151900119
  %623 = add i32 %622, %621
  %624 = add i32 %623, -1151900119
  %625 = add nsw i32 %620, %621
  %626 = load i32, i32* %2, align 4
  %627 = sub i32 %624, -1011728127
  %628 = add i32 %627, %626
  %629 = add i32 %628, -1011728127
  %630 = add nsw i32 %624, %626
  %631 = load i32, i32* @x.2
  %632 = load i32, i32* @y.3
  %633 = sub i32 %631, -1453970263
  %634 = sub i32 %633, 1
  %635 = add i32 %634, -1453970263
  %636 = sub i32 %631, 1
  %637 = mul i32 %631, %635
  %638 = urem i32 %637, 2
  %639 = icmp eq i32 %638, 0
  %640 = icmp slt i32 %632, 10
  %641 = xor i1 %639, true
  %642 = xor i1 %640, true
  %643 = xor i1 false, true
  %644 = and i1 %641, false
  %645 = and i1 %639, %643
  %646 = and i1 %642, false
  %647 = and i1 %640, %643
  %648 = or i1 %644, %645
  %649 = or i1 %646, %647
  %650 = xor i1 %648, %649
  %651 = or i1 %641, %642
  %652 = xor i1 %651, true
  %653 = or i1 false, %643
  %654 = and i1 %652, %653
  %655 = or i1 %650, %654
  %656 = or i1 %639, %640
  br i1 %655, label %657, label %1910

; <label>:657:                                    ; preds = %608
  invoke void @_ZN7MaxflowIxE8add_edgeEiix(%class.Maxflow* %17, i32 %616, i32 %629, i64 1)
          to label %658 unwind label %476

; <label>:658:                                    ; preds = %657
  %659 = load i32, i32* %20, align 4
  %660 = load i32, i32* @W, align 4
  %661 = mul nsw i32 %659, %660
  %662 = load i32, i32* %22, align 4
  %663 = sub i32 0, %662
  %664 = sub i32 %661, %663
  %665 = add nsw i32 %661, %662
  %666 = load i32, i32* %2, align 4
  %667 = sub i32 0, %664
  %668 = sub i32 0, %666
  %669 = add i32 %667, %668
  %670 = sub i32 0, %669
  %671 = add nsw i32 %664, %666
  %672 = load i32, i32* %20, align 4
  %673 = load i32, i32* @W, align 4
  %674 = mul nsw i32 %672, %673
  %675 = load i32, i32* %22, align 4
  %676 = add i32 %674, -421716901
  %677 = add i32 %676, %675
  %678 = sub i32 %677, -421716901
  %679 = add nsw i32 %674, %675
  invoke void @_ZN7MaxflowIxE8add_edgeEiix(%class.Maxflow* %17, i32 %670, i32 %678, i64 1)
          to label %680 unwind label %476

; <label>:680:                                    ; preds = %658
  br label %681

; <label>:681:                                    ; preds = %680, %581
  %682 = load i32, i32* @x.2
  %683 = load i32, i32* @y.3
  %684 = sub i32 %682, -287458816
  %685 = sub i32 %684, 1
  %686 = add i32 %685, -287458816
  %687 = sub i32 %682, 1
  %688 = mul i32 %682, %686
  %689 = urem i32 %688, 2
  %690 = icmp eq i32 %689, 0
  %691 = icmp slt i32 %683, 10
  %692 = xor i1 %690, true
  %693 = xor i1 %691, true
  %694 = xor i1 true, true
  %695 = and i1 %692, true
  %696 = and i1 %690, %694
  %697 = and i1 %693, true
  %698 = and i1 %691, %694
  %699 = or i1 %695, %696
  %700 = or i1 %697, %698
  %701 = xor i1 %699, %700
  %702 = or i1 %692, %693
  %703 = xor i1 %702, true
  %704 = or i1 true, %694
  %705 = and i1 %703, %704
  %706 = or i1 %701, %705
  %707 = or i1 %690, %691
  br i1 %706, label %708, label %2047

; <label>:708:                                    ; preds = %681, %2047
  %709 = load i32, i32* %20, align 4
  %710 = sext i32 %709 to i64
  %711 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %3, i64 %710) #3
  %712 = load i32, i32* %22, align 4
  %713 = sext i32 %712 to i64
  %714 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %711, i64 %713) #3
  %715 = load i8, i8* %714, align 1
  %716 = sext i8 %715 to i32
  %717 = icmp ne i32 %716, 46
  %718 = load i32, i32* @x.2
  %719 = load i32, i32* @y.3
  %720 = sub i32 %718, 673626189
  %721 = sub i32 %720, 1
  %722 = add i32 %721, 673626189
  %723 = sub i32 %718, 1
  %724 = mul i32 %718, %722
  %725 = urem i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = icmp slt i32 %719, 10
  %728 = and i1 %726, %727
  %729 = xor i1 %726, %727
  %730 = or i1 %728, %729
  %731 = or i1 %726, %727
  br i1 %730, label %732, label %2047

; <label>:732:                                    ; preds = %708
  br i1 %717, label %733, label %776

; <label>:733:                                    ; preds = %732
  %734 = load i32, i32* @x.2
  %735 = load i32, i32* @y.3
  %736 = add i32 %734, 53303418
  %737 = sub i32 %736, 1
  %738 = sub i32 %737, 53303418
  %739 = sub i32 %734, 1
  %740 = mul i32 %734, %738
  %741 = urem i32 %740, 2
  %742 = icmp eq i32 %741, 0
  %743 = icmp slt i32 %735, 10
  %744 = xor i1 %742, true
  %745 = xor i1 %743, true
  %746 = xor i1 true, true
  %747 = and i1 %744, true
  %748 = and i1 %742, %746
  %749 = and i1 %745, true
  %750 = and i1 %743, %746
  %751 = or i1 %747, %748
  %752 = or i1 %749, %750
  %753 = xor i1 %751, %752
  %754 = or i1 %744, %745
  %755 = xor i1 %754, true
  %756 = or i1 true, %746
  %757 = and i1 %755, %756
  %758 = or i1 %753, %757
  %759 = or i1 %742, %743
  br i1 %758, label %760, label %2057

; <label>:760:                                    ; preds = %733, %2057
  %761 = load i32, i32* @x.2
  %762 = load i32, i32* @y.3
  %763 = sub i32 0, 1
  %764 = add i32 %761, %763
  %765 = sub i32 %761, 1
  %766 = mul i32 %761, %764
  %767 = urem i32 %766, 2
  %768 = icmp eq i32 %767, 0
  %769 = icmp slt i32 %762, 10
  %770 = and i1 %768, %769
  %771 = xor i1 %768, %769
  %772 = or i1 %770, %771
  %773 = or i1 %768, %769
  br i1 %772, label %774, label %2057

; <label>:774:                                    ; preds = %760
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.12"* %21, i32* dereferenceable(4) %22)
          to label %775 unwind label %476

; <label>:775:                                    ; preds = %774
  br label %776

; <label>:776:                                    ; preds = %775, %732
  %777 = load i32, i32* @x.2
  %778 = load i32, i32* @y.3
  %779 = add i32 %777, -8862111
  %780 = sub i32 %779, 1
  %781 = sub i32 %780, -8862111
  %782 = sub i32 %777, 1
  %783 = mul i32 %777, %781
  %784 = urem i32 %783, 2
  %785 = icmp eq i32 %784, 0
  %786 = icmp slt i32 %778, 10
  %787 = and i1 %785, %786
  %788 = xor i1 %785, %786
  %789 = or i1 %787, %788
  %790 = or i1 %785, %786
  br i1 %789, label %791, label %2058

; <label>:791:                                    ; preds = %776, %2058
  %792 = load i32, i32* @x.2
  %793 = load i32, i32* @y.3
  %794 = sub i32 0, 1
  %795 = add i32 %792, %794
  %796 = sub i32 %792, 1
  %797 = mul i32 %792, %795
  %798 = urem i32 %797, 2
  %799 = icmp eq i32 %798, 0
  %800 = icmp slt i32 %793, 10
  %801 = xor i1 %799, true
  %802 = xor i1 %800, true
  %803 = xor i1 false, true
  %804 = and i1 %801, false
  %805 = and i1 %799, %803
  %806 = and i1 %802, false
  %807 = and i1 %800, %803
  %808 = or i1 %804, %805
  %809 = or i1 %806, %807
  %810 = xor i1 %808, %809
  %811 = or i1 %801, %802
  %812 = xor i1 %811, true
  %813 = or i1 false, %803
  %814 = and i1 %812, %813
  %815 = or i1 %810, %814
  %816 = or i1 %799, %800
  br i1 %815, label %817, label %2058

; <label>:817:                                    ; preds = %791
  br label %818

; <label>:818:                                    ; preds = %817
  %819 = load i32, i32* %22, align 4
  %820 = add i32 %819, -1269048838
  %821 = add i32 %820, 1
  %822 = sub i32 %821, -1269048838
  %823 = add nsw i32 %819, 1
  store i32 %822, i32* %22, align 4
  br label %299

; <label>:824:                                    ; preds = %299
  store i32 0, i32* %23, align 4
  br label %825

; <label>:825:                                    ; preds = %977, %824
  %826 = load i32, i32* %23, align 4
  %827 = sext i32 %826 to i64
  %828 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.12"* %21) #3
  %829 = icmp ult i64 %827, %828
  br i1 %829, label %830, label %978

; <label>:830:                                    ; preds = %825
  store i32 0, i32* %24, align 4
  br label %831

; <label>:831:                                    ; preds = %923, %830
  %832 = load i32, i32* @x.2
  %833 = load i32, i32* @y.3
  %834 = sub i32 0, 1
  %835 = add i32 %832, %834
  %836 = sub i32 %832, 1
  %837 = mul i32 %832, %835
  %838 = urem i32 %837, 2
  %839 = icmp eq i32 %838, 0
  %840 = icmp slt i32 %833, 10
  %841 = and i1 %839, %840
  %842 = xor i1 %839, %840
  %843 = or i1 %841, %842
  %844 = or i1 %839, %840
  br i1 %843, label %845, label %2059

; <label>:845:                                    ; preds = %831, %2059
  %846 = load i32, i32* %24, align 4
  %847 = load i32, i32* %23, align 4
  %848 = icmp slt i32 %846, %847
  %849 = load i32, i32* @x.2
  %850 = load i32, i32* @y.3
  %851 = sub i32 %849, -1380772031
  %852 = sub i32 %851, 1
  %853 = add i32 %852, -1380772031
  %854 = sub i32 %849, 1
  %855 = mul i32 %849, %853
  %856 = urem i32 %855, 2
  %857 = icmp eq i32 %856, 0
  %858 = icmp slt i32 %850, 10
  %859 = xor i1 %857, true
  %860 = xor i1 %858, true
  %861 = xor i1 true, true
  %862 = and i1 %859, true
  %863 = and i1 %857, %861
  %864 = and i1 %860, true
  %865 = and i1 %858, %861
  %866 = or i1 %862, %863
  %867 = or i1 %864, %865
  %868 = xor i1 %866, %867
  %869 = or i1 %859, %860
  %870 = xor i1 %869, true
  %871 = or i1 true, %861
  %872 = and i1 %870, %871
  %873 = or i1 %868, %872
  %874 = or i1 %857, %858
  br i1 %873, label %875, label %2059

; <label>:875:                                    ; preds = %845
  br i1 %848, label %876, label %928

; <label>:876:                                    ; preds = %875
  %877 = load i32, i32* %20, align 4
  %878 = load i32, i32* @W, align 4
  %879 = mul nsw i32 %877, %878
  %880 = load i32, i32* %23, align 4
  %881 = sext i32 %880 to i64
  %882 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %21, i64 %881) #3
  %883 = load i32, i32* %882, align 4
  %884 = add i32 %879, 1529806509
  %885 = add i32 %884, %883
  %886 = sub i32 %885, 1529806509
  %887 = add nsw i32 %879, %883
  %888 = load i32, i32* %20, align 4
  %889 = load i32, i32* @W, align 4
  %890 = mul nsw i32 %888, %889
  %891 = load i32, i32* %24, align 4
  %892 = sext i32 %891 to i64
  %893 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %21, i64 %892) #3
  %894 = load i32, i32* %893, align 4
  %895 = add i32 %890, -1491652208
  %896 = add i32 %895, %894
  %897 = sub i32 %896, -1491652208
  %898 = add nsw i32 %890, %894
  invoke void @_ZN7MaxflowIxE8add_edgeEiix(%class.Maxflow* %17, i32 %886, i32 %897, i64 100000000)
          to label %899 unwind label %476

; <label>:899:                                    ; preds = %876
  %900 = load i32, i32* %20, align 4
  %901 = load i32, i32* @W, align 4
  %902 = mul nsw i32 %900, %901
  %903 = load i32, i32* %24, align 4
  %904 = sext i32 %903 to i64
  %905 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %21, i64 %904) #3
  %906 = load i32, i32* %905, align 4
  %907 = sub i32 0, %902
  %908 = sub i32 0, %906
  %909 = add i32 %907, %908
  %910 = sub i32 0, %909
  %911 = add nsw i32 %902, %906
  %912 = load i32, i32* %20, align 4
  %913 = load i32, i32* @W, align 4
  %914 = mul nsw i32 %912, %913
  %915 = load i32, i32* %23, align 4
  %916 = sext i32 %915 to i64
  %917 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %21, i64 %916) #3
  %918 = load i32, i32* %917, align 4
  %919 = sub i32 0, %918
  %920 = sub i32 %914, %919
  %921 = add nsw i32 %914, %918
  invoke void @_ZN7MaxflowIxE8add_edgeEiix(%class.Maxflow* %17, i32 %910, i32 %920, i64 100000000)
          to label %922 unwind label %476

; <label>:922:                                    ; preds = %899
  br label %923

; <label>:923:                                    ; preds = %922
  %924 = load i32, i32* %24, align 4
  %925 = sub i32 0, 1
  %926 = sub i32 %924, %925
  %927 = add nsw i32 %924, 1
  store i32 %926, i32* %24, align 4
  br label %831

; <label>:928:                                    ; preds = %875
  br label %929

; <label>:929:                                    ; preds = %928
  %930 = load i32, i32* @x.2
  %931 = load i32, i32* @y.3
  %932 = add i32 %930, -1147282683
  %933 = sub i32 %932, 1
  %934 = sub i32 %933, -1147282683
  %935 = sub i32 %930, 1
  %936 = mul i32 %930, %934
  %937 = urem i32 %936, 2
  %938 = icmp eq i32 %937, 0
  %939 = icmp slt i32 %931, 10
  %940 = and i1 %938, %939
  %941 = xor i1 %938, %939
  %942 = or i1 %940, %941
  %943 = or i1 %938, %939
  br i1 %942, label %944, label %2063

; <label>:944:                                    ; preds = %929, %2063
  %945 = load i32, i32* %23, align 4
  %946 = sub i32 0, %945
  %947 = sub i32 0, 1
  %948 = add i32 %946, %947
  %949 = sub i32 0, %948
  %950 = add nsw i32 %945, 1
  store i32 %949, i32* %23, align 4
  %951 = load i32, i32* @x.2
  %952 = load i32, i32* @y.3
  %953 = add i32 %951, 521773526
  %954 = sub i32 %953, 1
  %955 = sub i32 %954, 521773526
  %956 = sub i32 %951, 1
  %957 = mul i32 %951, %955
  %958 = urem i32 %957, 2
  %959 = icmp eq i32 %958, 0
  %960 = icmp slt i32 %952, 10
  %961 = xor i1 %959, true
  %962 = xor i1 %960, true
  %963 = xor i1 true, true
  %964 = and i1 %961, true
  %965 = and i1 %959, %963
  %966 = and i1 %962, true
  %967 = and i1 %960, %963
  %968 = or i1 %964, %965
  %969 = or i1 %966, %967
  %970 = xor i1 %968, %969
  %971 = or i1 %961, %962
  %972 = xor i1 %971, true
  %973 = or i1 true, %963
  %974 = and i1 %972, %973
  %975 = or i1 %970, %974
  %976 = or i1 %959, %960
  br i1 %975, label %977, label %2063

; <label>:977:                                    ; preds = %944
  br label %825

; <label>:978:                                    ; preds = %825
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %21) #3
  br label %979

; <label>:979:                                    ; preds = %978
  %980 = load i32, i32* %20, align 4
  %981 = sub i32 0, 1
  %982 = sub i32 %980, %981
  %983 = add nsw i32 %980, 1
  store i32 %982, i32* %20, align 4
  br label %294

; <label>:984:                                    ; preds = %294
  store i32 0, i32* %25, align 4
  br label %985

; <label>:985:                                    ; preds = %1406, %984
  %986 = load i32, i32* @x.2
  %987 = load i32, i32* @y.3
  %988 = sub i32 0, 1
  %989 = add i32 %986, %988
  %990 = sub i32 %986, 1
  %991 = mul i32 %986, %989
  %992 = urem i32 %991, 2
  %993 = icmp eq i32 %992, 0
  %994 = icmp slt i32 %987, 10
  %995 = and i1 %993, %994
  %996 = xor i1 %993, %994
  %997 = or i1 %995, %996
  %998 = or i1 %993, %994
  br i1 %997, label %999, label %2073

; <label>:999:                                    ; preds = %985, %2073
  %1000 = load i32, i32* %25, align 4
  %1001 = load i32, i32* @W, align 4
  %1002 = icmp slt i32 %1000, %1001
  %1003 = load i32, i32* @x.2
  %1004 = load i32, i32* @y.3
  %1005 = sub i32 0, 1
  %1006 = add i32 %1003, %1005
  %1007 = sub i32 %1003, 1
  %1008 = mul i32 %1003, %1006
  %1009 = urem i32 %1008, 2
  %1010 = icmp eq i32 %1009, 0
  %1011 = icmp slt i32 %1004, 10
  %1012 = xor i1 %1010, true
  %1013 = xor i1 %1011, true
  %1014 = xor i1 true, true
  %1015 = and i1 %1012, true
  %1016 = and i1 %1010, %1014
  %1017 = and i1 %1013, true
  %1018 = and i1 %1011, %1014
  %1019 = or i1 %1015, %1016
  %1020 = or i1 %1017, %1018
  %1021 = xor i1 %1019, %1020
  %1022 = or i1 %1012, %1013
  %1023 = xor i1 %1022, true
  %1024 = or i1 true, %1014
  %1025 = and i1 %1023, %1024
  %1026 = or i1 %1021, %1025
  %1027 = or i1 %1010, %1011
  br i1 %1026, label %1028, label %2073

; <label>:1028:                                   ; preds = %999
  br i1 %1002, label %1029, label %1407

; <label>:1029:                                   ; preds = %1028
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.12"* %26) #3
  store i32 0, i32* %27, align 4
  br label %1030

; <label>:1030:                                   ; preds = %1093, %1029
  %1031 = load i32, i32* @x.2
  %1032 = load i32, i32* @y.3
  %1033 = sub i32 %1031, -1853444531
  %1034 = sub i32 %1033, 1
  %1035 = add i32 %1034, -1853444531
  %1036 = sub i32 %1031, 1
  %1037 = mul i32 %1031, %1035
  %1038 = urem i32 %1037, 2
  %1039 = icmp eq i32 %1038, 0
  %1040 = icmp slt i32 %1032, 10
  %1041 = and i1 %1039, %1040
  %1042 = xor i1 %1039, %1040
  %1043 = or i1 %1041, %1042
  %1044 = or i1 %1039, %1040
  br i1 %1043, label %1045, label %2077

; <label>:1045:                                   ; preds = %1030, %2077
  %1046 = load i32, i32* %27, align 4
  %1047 = load i32, i32* @H, align 4
  %1048 = icmp slt i32 %1046, %1047
  %1049 = load i32, i32* @x.2
  %1050 = load i32, i32* @y.3
  %1051 = add i32 %1049, -1024904891
  %1052 = sub i32 %1051, 1
  %1053 = sub i32 %1052, -1024904891
  %1054 = sub i32 %1049, 1
  %1055 = mul i32 %1049, %1053
  %1056 = urem i32 %1055, 2
  %1057 = icmp eq i32 %1056, 0
  %1058 = icmp slt i32 %1050, 10
  %1059 = xor i1 %1057, true
  %1060 = xor i1 %1058, true
  %1061 = xor i1 true, true
  %1062 = and i1 %1059, true
  %1063 = and i1 %1057, %1061
  %1064 = and i1 %1060, true
  %1065 = and i1 %1058, %1061
  %1066 = or i1 %1062, %1063
  %1067 = or i1 %1064, %1065
  %1068 = xor i1 %1066, %1067
  %1069 = or i1 %1059, %1060
  %1070 = xor i1 %1069, true
  %1071 = or i1 true, %1061
  %1072 = and i1 %1070, %1071
  %1073 = or i1 %1068, %1072
  %1074 = or i1 %1057, %1058
  br i1 %1073, label %1075, label %2077

; <label>:1075:                                   ; preds = %1045
  br i1 %1048, label %1076, label %1099

; <label>:1076:                                   ; preds = %1075
  %1077 = load i32, i32* %27, align 4
  %1078 = sext i32 %1077 to i64
  %1079 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %3, i64 %1078) #3
  %1080 = load i32, i32* %25, align 4
  %1081 = sext i32 %1080 to i64
  %1082 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %1079, i64 %1081) #3
  %1083 = load i8, i8* %1082, align 1
  %1084 = sext i8 %1083 to i32
  %1085 = icmp ne i32 %1084, 46
  br i1 %1085, label %1086, label %1092

; <label>:1086:                                   ; preds = %1076
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.12"* %26, i32* dereferenceable(4) %27)
          to label %1087 unwind label %1088

; <label>:1087:                                   ; preds = %1086
  br label %1092

; <label>:1088:                                   ; preds = %1302, %1230, %1086
  %1089 = landingpad { i8*, i32 }
          cleanup
  %1090 = extractvalue { i8*, i32 } %1089, 0
  store i8* %1090, i8** %6, align 8
  %1091 = extractvalue { i8*, i32 } %1089, 1
  store i32 %1091, i32* %7, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %26) #3
  br label %1514

; <label>:1092:                                   ; preds = %1087, %1076
  br label %1093

; <label>:1093:                                   ; preds = %1092
  %1094 = load i32, i32* %27, align 4
  %1095 = sub i32 %1094, -1643526927
  %1096 = add i32 %1095, 1
  %1097 = add i32 %1096, -1643526927
  %1098 = add nsw i32 %1094, 1
  store i32 %1097, i32* %27, align 4
  br label %1030

; <label>:1099:                                   ; preds = %1075
  store i32 0, i32* %28, align 4
  br label %1100

; <label>:1100:                                   ; preds = %1352, %1099
  %1101 = load i32, i32* @x.2
  %1102 = load i32, i32* @y.3
  %1103 = sub i32 %1101, 985428853
  %1104 = sub i32 %1103, 1
  %1105 = add i32 %1104, 985428853
  %1106 = sub i32 %1101, 1
  %1107 = mul i32 %1101, %1105
  %1108 = urem i32 %1107, 2
  %1109 = icmp eq i32 %1108, 0
  %1110 = icmp slt i32 %1102, 10
  %1111 = and i1 %1109, %1110
  %1112 = xor i1 %1109, %1110
  %1113 = or i1 %1111, %1112
  %1114 = or i1 %1109, %1110
  br i1 %1113, label %1115, label %2081

; <label>:1115:                                   ; preds = %1100, %2081
  %1116 = load i32, i32* %28, align 4
  %1117 = sext i32 %1116 to i64
  %1118 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.12"* %26) #3
  %1119 = icmp ult i64 %1117, %1118
  %1120 = load i32, i32* @x.2
  %1121 = load i32, i32* @y.3
  %1122 = add i32 %1120, 344833619
  %1123 = sub i32 %1122, 1
  %1124 = sub i32 %1123, 344833619
  %1125 = sub i32 %1120, 1
  %1126 = mul i32 %1120, %1124
  %1127 = urem i32 %1126, 2
  %1128 = icmp eq i32 %1127, 0
  %1129 = icmp slt i32 %1121, 10
  %1130 = and i1 %1128, %1129
  %1131 = xor i1 %1128, %1129
  %1132 = or i1 %1130, %1131
  %1133 = or i1 %1128, %1129
  br i1 %1132, label %1134, label %2081

; <label>:1134:                                   ; preds = %1115
  br i1 %1119, label %1135, label %1359

; <label>:1135:                                   ; preds = %1134
  store i32 0, i32* %29, align 4
  br label %1136

; <label>:1136:                                   ; preds = %1304, %1135
  %1137 = load i32, i32* @x.2
  %1138 = load i32, i32* @y.3
  %1139 = sub i32 %1137, 2130852947
  %1140 = sub i32 %1139, 1
  %1141 = add i32 %1140, 2130852947
  %1142 = sub i32 %1137, 1
  %1143 = mul i32 %1137, %1141
  %1144 = urem i32 %1143, 2
  %1145 = icmp eq i32 %1144, 0
  %1146 = icmp slt i32 %1138, 10
  %1147 = and i1 %1145, %1146
  %1148 = xor i1 %1145, %1146
  %1149 = or i1 %1147, %1148
  %1150 = or i1 %1145, %1146
  br i1 %1149, label %1151, label %2086

; <label>:1151:                                   ; preds = %1136, %2086
  %1152 = load i32, i32* %29, align 4
  %1153 = load i32, i32* %28, align 4
  %1154 = icmp slt i32 %1152, %1153
  %1155 = load i32, i32* @x.2
  %1156 = load i32, i32* @y.3
  %1157 = add i32 %1155, -19122133
  %1158 = sub i32 %1157, 1
  %1159 = sub i32 %1158, -19122133
  %1160 = sub i32 %1155, 1
  %1161 = mul i32 %1155, %1159
  %1162 = urem i32 %1161, 2
  %1163 = icmp eq i32 %1162, 0
  %1164 = icmp slt i32 %1156, 10
  %1165 = and i1 %1163, %1164
  %1166 = xor i1 %1163, %1164
  %1167 = or i1 %1165, %1166
  %1168 = or i1 %1163, %1164
  br i1 %1167, label %1169, label %2086

; <label>:1169:                                   ; preds = %1151
  br i1 %1154, label %1170, label %1310

; <label>:1170:                                   ; preds = %1169
  %1171 = load i32, i32* @x.2
  %1172 = load i32, i32* @y.3
  %1173 = sub i32 0, 1
  %1174 = add i32 %1171, %1173
  %1175 = sub i32 %1171, 1
  %1176 = mul i32 %1171, %1174
  %1177 = urem i32 %1176, 2
  %1178 = icmp eq i32 %1177, 0
  %1179 = icmp slt i32 %1172, 10
  %1180 = and i1 %1178, %1179
  %1181 = xor i1 %1178, %1179
  %1182 = or i1 %1180, %1181
  %1183 = or i1 %1178, %1179
  br i1 %1182, label %1184, label %2090

; <label>:1184:                                   ; preds = %1170, %2090
  %1185 = load i32, i32* %28, align 4
  %1186 = sext i32 %1185 to i64
  %1187 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %26, i64 %1186) #3
  %1188 = load i32, i32* %1187, align 4
  %1189 = load i32, i32* @W, align 4
  %1190 = mul nsw i32 %1188, %1189
  %1191 = load i32, i32* %25, align 4
  %1192 = sub i32 0, %1191
  %1193 = sub i32 %1190, %1192
  %1194 = add nsw i32 %1190, %1191
  %1195 = load i32, i32* %2, align 4
  %1196 = sub i32 %1193, -968043138
  %1197 = add i32 %1196, %1195
  %1198 = add i32 %1197, -968043138
  %1199 = add nsw i32 %1193, %1195
  %1200 = load i32, i32* %29, align 4
  %1201 = sext i32 %1200 to i64
  %1202 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %26, i64 %1201) #3
  %1203 = load i32, i32* %1202, align 4
  %1204 = load i32, i32* @W, align 4
  %1205 = mul nsw i32 %1203, %1204
  %1206 = load i32, i32* %25, align 4
  %1207 = sub i32 0, %1206
  %1208 = sub i32 %1205, %1207
  %1209 = add nsw i32 %1205, %1206
  %1210 = load i32, i32* %2, align 4
  %1211 = sub i32 0, %1208
  %1212 = sub i32 0, %1210
  %1213 = add i32 %1211, %1212
  %1214 = sub i32 0, %1213
  %1215 = add nsw i32 %1208, %1210
  %1216 = load i32, i32* @x.2
  %1217 = load i32, i32* @y.3
  %1218 = add i32 %1216, -523996728
  %1219 = sub i32 %1218, 1
  %1220 = sub i32 %1219, -523996728
  %1221 = sub i32 %1216, 1
  %1222 = mul i32 %1216, %1220
  %1223 = urem i32 %1222, 2
  %1224 = icmp eq i32 %1223, 0
  %1225 = icmp slt i32 %1217, 10
  %1226 = and i1 %1224, %1225
  %1227 = xor i1 %1224, %1225
  %1228 = or i1 %1226, %1227
  %1229 = or i1 %1224, %1225
  br i1 %1228, label %1230, label %2090

; <label>:1230:                                   ; preds = %1184
  invoke void @_ZN7MaxflowIxE8add_edgeEiix(%class.Maxflow* %17, i32 %1198, i32 %1214, i64 100000000)
          to label %1231 unwind label %1088

; <label>:1231:                                   ; preds = %1230
  %1232 = load i32, i32* @x.2
  %1233 = load i32, i32* @y.3
  %1234 = add i32 %1232, -197366810
  %1235 = sub i32 %1234, 1
  %1236 = sub i32 %1235, -197366810
  %1237 = sub i32 %1232, 1
  %1238 = mul i32 %1232, %1236
  %1239 = urem i32 %1238, 2
  %1240 = icmp eq i32 %1239, 0
  %1241 = icmp slt i32 %1233, 10
  %1242 = xor i1 %1240, true
  %1243 = xor i1 %1241, true
  %1244 = xor i1 false, true
  %1245 = and i1 %1242, false
  %1246 = and i1 %1240, %1244
  %1247 = and i1 %1243, false
  %1248 = and i1 %1241, %1244
  %1249 = or i1 %1245, %1246
  %1250 = or i1 %1247, %1248
  %1251 = xor i1 %1249, %1250
  %1252 = or i1 %1242, %1243
  %1253 = xor i1 %1252, true
  %1254 = or i1 false, %1244
  %1255 = and i1 %1253, %1254
  %1256 = or i1 %1251, %1255
  %1257 = or i1 %1240, %1241
  br i1 %1256, label %1258, label %2234

; <label>:1258:                                   ; preds = %1231, %2234
  %1259 = load i32, i32* %29, align 4
  %1260 = sext i32 %1259 to i64
  %1261 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %26, i64 %1260) #3
  %1262 = load i32, i32* %1261, align 4
  %1263 = load i32, i32* @W, align 4
  %1264 = mul nsw i32 %1262, %1263
  %1265 = load i32, i32* %25, align 4
  %1266 = sub i32 %1264, 79960535
  %1267 = add i32 %1266, %1265
  %1268 = add i32 %1267, 79960535
  %1269 = add nsw i32 %1264, %1265
  %1270 = load i32, i32* %2, align 4
  %1271 = sub i32 0, %1270
  %1272 = sub i32 %1268, %1271
  %1273 = add nsw i32 %1268, %1270
  %1274 = load i32, i32* %28, align 4
  %1275 = sext i32 %1274 to i64
  %1276 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %26, i64 %1275) #3
  %1277 = load i32, i32* %1276, align 4
  %1278 = load i32, i32* @W, align 4
  %1279 = mul nsw i32 %1277, %1278
  %1280 = load i32, i32* %25, align 4
  %1281 = sub i32 0, %1280
  %1282 = sub i32 %1279, %1281
  %1283 = add nsw i32 %1279, %1280
  %1284 = load i32, i32* %2, align 4
  %1285 = sub i32 0, %1284
  %1286 = sub i32 %1282, %1285
  %1287 = add nsw i32 %1282, %1284
  %1288 = load i32, i32* @x.2
  %1289 = load i32, i32* @y.3
  %1290 = sub i32 %1288, 1484161583
  %1291 = sub i32 %1290, 1
  %1292 = add i32 %1291, 1484161583
  %1293 = sub i32 %1288, 1
  %1294 = mul i32 %1288, %1292
  %1295 = urem i32 %1294, 2
  %1296 = icmp eq i32 %1295, 0
  %1297 = icmp slt i32 %1289, 10
  %1298 = and i1 %1296, %1297
  %1299 = xor i1 %1296, %1297
  %1300 = or i1 %1298, %1299
  %1301 = or i1 %1296, %1297
  br i1 %1300, label %1302, label %2234

; <label>:1302:                                   ; preds = %1258
  invoke void @_ZN7MaxflowIxE8add_edgeEiix(%class.Maxflow* %17, i32 %1272, i32 %1286, i64 100000000)
          to label %1303 unwind label %1088

; <label>:1303:                                   ; preds = %1302
  br label %1304

; <label>:1304:                                   ; preds = %1303
  %1305 = load i32, i32* %29, align 4
  %1306 = add i32 %1305, 1702584221
  %1307 = add i32 %1306, 1
  %1308 = sub i32 %1307, 1702584221
  %1309 = add nsw i32 %1305, 1
  store i32 %1308, i32* %29, align 4
  br label %1136

; <label>:1310:                                   ; preds = %1169
  %1311 = load i32, i32* @x.2
  %1312 = load i32, i32* @y.3
  %1313 = sub i32 0, 1
  %1314 = add i32 %1311, %1313
  %1315 = sub i32 %1311, 1
  %1316 = mul i32 %1311, %1314
  %1317 = urem i32 %1316, 2
  %1318 = icmp eq i32 %1317, 0
  %1319 = icmp slt i32 %1312, 10
  %1320 = and i1 %1318, %1319
  %1321 = xor i1 %1318, %1319
  %1322 = or i1 %1320, %1321
  %1323 = or i1 %1318, %1319
  br i1 %1322, label %1324, label %2371

; <label>:1324:                                   ; preds = %1310, %2371
  %1325 = load i32, i32* @x.2
  %1326 = load i32, i32* @y.3
  %1327 = sub i32 %1325, -1999760393
  %1328 = sub i32 %1327, 1
  %1329 = add i32 %1328, -1999760393
  %1330 = sub i32 %1325, 1
  %1331 = mul i32 %1325, %1329
  %1332 = urem i32 %1331, 2
  %1333 = icmp eq i32 %1332, 0
  %1334 = icmp slt i32 %1326, 10
  %1335 = xor i1 %1333, true
  %1336 = xor i1 %1334, true
  %1337 = xor i1 true, true
  %1338 = and i1 %1335, true
  %1339 = and i1 %1333, %1337
  %1340 = and i1 %1336, true
  %1341 = and i1 %1334, %1337
  %1342 = or i1 %1338, %1339
  %1343 = or i1 %1340, %1341
  %1344 = xor i1 %1342, %1343
  %1345 = or i1 %1335, %1336
  %1346 = xor i1 %1345, true
  %1347 = or i1 true, %1337
  %1348 = and i1 %1346, %1347
  %1349 = or i1 %1344, %1348
  %1350 = or i1 %1333, %1334
  br i1 %1349, label %1351, label %2371

; <label>:1351:                                   ; preds = %1324
  br label %1352

; <label>:1352:                                   ; preds = %1351
  %1353 = load i32, i32* %28, align 4
  %1354 = sub i32 0, %1353
  %1355 = sub i32 0, 1
  %1356 = add i32 %1354, %1355
  %1357 = sub i32 0, %1356
  %1358 = add nsw i32 %1353, 1
  store i32 %1357, i32* %28, align 4
  br label %1100

; <label>:1359:                                   ; preds = %1134
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %26) #3
  br label %1360

; <label>:1360:                                   ; preds = %1359
  %1361 = load i32, i32* @x.2
  %1362 = load i32, i32* @y.3
  %1363 = sub i32 0, 1
  %1364 = add i32 %1361, %1363
  %1365 = sub i32 %1361, 1
  %1366 = mul i32 %1361, %1364
  %1367 = urem i32 %1366, 2
  %1368 = icmp eq i32 %1367, 0
  %1369 = icmp slt i32 %1362, 10
  %1370 = xor i1 %1368, true
  %1371 = xor i1 %1369, true
  %1372 = xor i1 true, true
  %1373 = and i1 %1370, true
  %1374 = and i1 %1368, %1372
  %1375 = and i1 %1371, true
  %1376 = and i1 %1369, %1372
  %1377 = or i1 %1373, %1374
  %1378 = or i1 %1375, %1376
  %1379 = xor i1 %1377, %1378
  %1380 = or i1 %1370, %1371
  %1381 = xor i1 %1380, true
  %1382 = or i1 true, %1372
  %1383 = and i1 %1381, %1382
  %1384 = or i1 %1379, %1383
  %1385 = or i1 %1368, %1369
  br i1 %1384, label %1386, label %2372

; <label>:1386:                                   ; preds = %1360, %2372
  %1387 = load i32, i32* %25, align 4
  %1388 = sub i32 0, %1387
  %1389 = sub i32 0, 1
  %1390 = add i32 %1388, %1389
  %1391 = sub i32 0, %1390
  %1392 = add nsw i32 %1387, 1
  store i32 %1391, i32* %25, align 4
  %1393 = load i32, i32* @x.2
  %1394 = load i32, i32* @y.3
  %1395 = sub i32 0, 1
  %1396 = add i32 %1393, %1395
  %1397 = sub i32 %1393, 1
  %1398 = mul i32 %1393, %1396
  %1399 = urem i32 %1398, 2
  %1400 = icmp eq i32 %1399, 0
  %1401 = icmp slt i32 %1394, 10
  %1402 = and i1 %1400, %1401
  %1403 = xor i1 %1400, %1401
  %1404 = or i1 %1402, %1403
  %1405 = or i1 %1400, %1401
  br i1 %1404, label %1406, label %2372

; <label>:1406:                                   ; preds = %1386
  br label %985

; <label>:1407:                                   ; preds = %1028
  %1408 = load i32, i32* %18, align 4
  %1409 = load i32, i32* %19, align 4
  %1410 = invoke i64 @_ZN7MaxflowIxE5DinicEii(%class.Maxflow* %17, i32 %1408, i32 %1409)
          to label %1411 unwind label %1462

; <label>:1411:                                   ; preds = %1407
  store i64 %1410, i64* %30, align 8
  %1412 = load i64, i64* %30, align 8
  %1413 = icmp slt i64 %1412, 100000000
  br i1 %1413, label %1414, label %1466

; <label>:1414:                                   ; preds = %1411
  %1415 = load i64, i64* %30, align 8
  %1416 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %1415)
          to label %1417 unwind label %1462

; <label>:1417:                                   ; preds = %1414
  %1418 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1416, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %1419 unwind label %1462

; <label>:1419:                                   ; preds = %1417
  %1420 = load i32, i32* @x.2
  %1421 = load i32, i32* @y.3
  %1422 = sub i32 %1420, -2001191565
  %1423 = sub i32 %1422, 1
  %1424 = add i32 %1423, -2001191565
  %1425 = sub i32 %1420, 1
  %1426 = mul i32 %1420, %1424
  %1427 = urem i32 %1426, 2
  %1428 = icmp eq i32 %1427, 0
  %1429 = icmp slt i32 %1421, 10
  %1430 = xor i1 %1428, true
  %1431 = xor i1 %1429, true
  %1432 = xor i1 false, true
  %1433 = and i1 %1430, false
  %1434 = and i1 %1428, %1432
  %1435 = and i1 %1431, false
  %1436 = and i1 %1429, %1432
  %1437 = or i1 %1433, %1434
  %1438 = or i1 %1435, %1436
  %1439 = xor i1 %1437, %1438
  %1440 = or i1 %1430, %1431
  %1441 = xor i1 %1440, true
  %1442 = or i1 false, %1432
  %1443 = and i1 %1441, %1442
  %1444 = or i1 %1439, %1443
  %1445 = or i1 %1428, %1429
  br i1 %1444, label %1446, label %2388

; <label>:1446:                                   ; preds = %1419, %2388
  %1447 = load i32, i32* @x.2
  %1448 = load i32, i32* @y.3
  %1449 = add i32 %1447, 1584012027
  %1450 = sub i32 %1449, 1
  %1451 = sub i32 %1450, 1584012027
  %1452 = sub i32 %1447, 1
  %1453 = mul i32 %1447, %1451
  %1454 = urem i32 %1453, 2
  %1455 = icmp eq i32 %1454, 0
  %1456 = icmp slt i32 %1448, 10
  %1457 = and i1 %1455, %1456
  %1458 = xor i1 %1455, %1456
  %1459 = or i1 %1457, %1458
  %1460 = or i1 %1455, %1456
  br i1 %1459, label %1461, label %2388

; <label>:1461:                                   ; preds = %1446
  br label %1471

; <label>:1462:                                   ; preds = %1468, %1466, %1417, %1414, %1407
  %1463 = landingpad { i8*, i32 }
          cleanup
  %1464 = extractvalue { i8*, i32 } %1463, 0
  store i8* %1464, i8** %6, align 8
  %1465 = extractvalue { i8*, i32 } %1463, 1
  store i32 %1465, i32* %7, align 4
  br label %1514

; <label>:1466:                                   ; preds = %1411
  %1467 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 -1)
          to label %1468 unwind label %1462

; <label>:1468:                                   ; preds = %1466
  %1469 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1467, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %1470 unwind label %1462

; <label>:1470:                                   ; preds = %1468
  br label %1471

; <label>:1471:                                   ; preds = %1470, %1461
  %1472 = load i32, i32* @x.2
  %1473 = load i32, i32* @y.3
  %1474 = sub i32 %1472, -1427241008
  %1475 = sub i32 %1474, 1
  %1476 = add i32 %1475, -1427241008
  %1477 = sub i32 %1472, 1
  %1478 = mul i32 %1472, %1476
  %1479 = urem i32 %1478, 2
  %1480 = icmp eq i32 %1479, 0
  %1481 = icmp slt i32 %1473, 10
  %1482 = xor i1 %1480, true
  %1483 = xor i1 %1481, true
  %1484 = xor i1 true, true
  %1485 = and i1 %1482, true
  %1486 = and i1 %1480, %1484
  %1487 = and i1 %1483, true
  %1488 = and i1 %1481, %1484
  %1489 = or i1 %1485, %1486
  %1490 = or i1 %1487, %1488
  %1491 = xor i1 %1489, %1490
  %1492 = or i1 %1482, %1483
  %1493 = xor i1 %1492, true
  %1494 = or i1 true, %1484
  %1495 = and i1 %1493, %1494
  %1496 = or i1 %1491, %1495
  %1497 = or i1 %1480, %1481
  br i1 %1496, label %1498, label %2389

; <label>:1498:                                   ; preds = %1471, %2389
  call void @_ZN7MaxflowIxED2Ev(%class.Maxflow* %17) #3
  call void @_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev(%"class.std::vector"* %3) #3
  %1499 = load i32, i32* %1, align 4
  %1500 = load i32, i32* @x.2
  %1501 = load i32, i32* @y.3
  %1502 = sub i32 0, 1
  %1503 = add i32 %1500, %1502
  %1504 = sub i32 %1500, 1
  %1505 = mul i32 %1500, %1503
  %1506 = urem i32 %1505, 2
  %1507 = icmp eq i32 %1506, 0
  %1508 = icmp slt i32 %1501, 10
  %1509 = and i1 %1507, %1508
  %1510 = xor i1 %1507, %1508
  %1511 = or i1 %1509, %1510
  %1512 = or i1 %1507, %1508
  br i1 %1511, label %1513, label %2389

; <label>:1513:                                   ; preds = %1498
  ret i32 %1499

; <label>:1514:                                   ; preds = %1462, %1088, %476
  %1515 = load i32, i32* @x.2
  %1516 = load i32, i32* @y.3
  %1517 = sub i32 %1515, -1008184214
  %1518 = sub i32 %1517, 1
  %1519 = add i32 %1518, -1008184214
  %1520 = sub i32 %1515, 1
  %1521 = mul i32 %1515, %1519
  %1522 = urem i32 %1521, 2
  %1523 = icmp eq i32 %1522, 0
  %1524 = icmp slt i32 %1516, 10
  %1525 = xor i1 %1523, true
  %1526 = xor i1 %1524, true
  %1527 = xor i1 true, true
  %1528 = and i1 %1525, true
  %1529 = and i1 %1523, %1527
  %1530 = and i1 %1526, true
  %1531 = and i1 %1524, %1527
  %1532 = or i1 %1528, %1529
  %1533 = or i1 %1530, %1531
  %1534 = xor i1 %1532, %1533
  %1535 = or i1 %1525, %1526
  %1536 = xor i1 %1535, true
  %1537 = or i1 true, %1527
  %1538 = and i1 %1536, %1537
  %1539 = or i1 %1534, %1538
  %1540 = or i1 %1523, %1524
  br i1 %1539, label %1541, label %2391

; <label>:1541:                                   ; preds = %1514, %2391
  call void @_ZN7MaxflowIxED2Ev(%class.Maxflow* %17) #3
  %1542 = load i32, i32* @x.2
  %1543 = load i32, i32* @y.3
  %1544 = add i32 %1542, 392260643
  %1545 = sub i32 %1544, 1
  %1546 = sub i32 %1545, 392260643
  %1547 = sub i32 %1542, 1
  %1548 = mul i32 %1542, %1546
  %1549 = urem i32 %1548, 2
  %1550 = icmp eq i32 %1549, 0
  %1551 = icmp slt i32 %1543, 10
  %1552 = xor i1 %1550, true
  %1553 = xor i1 %1551, true
  %1554 = xor i1 false, true
  %1555 = and i1 %1552, false
  %1556 = and i1 %1550, %1554
  %1557 = and i1 %1553, false
  %1558 = and i1 %1551, %1554
  %1559 = or i1 %1555, %1556
  %1560 = or i1 %1557, %1558
  %1561 = xor i1 %1559, %1560
  %1562 = or i1 %1552, %1553
  %1563 = xor i1 %1562, true
  %1564 = or i1 false, %1554
  %1565 = and i1 %1563, %1564
  %1566 = or i1 %1561, %1565
  %1567 = or i1 %1550, %1551
  br i1 %1566, label %1568, label %2391

; <label>:1568:                                   ; preds = %1541
  br label %1569

; <label>:1569:                                   ; preds = %1568, %283
  %1570 = load i32, i32* @x.2
  %1571 = load i32, i32* @y.3
  %1572 = sub i32 %1570, -405317140
  %1573 = sub i32 %1572, 1
  %1574 = add i32 %1573, -405317140
  %1575 = sub i32 %1570, 1
  %1576 = mul i32 %1570, %1574
  %1577 = urem i32 %1576, 2
  %1578 = icmp eq i32 %1577, 0
  %1579 = icmp slt i32 %1571, 10
  %1580 = xor i1 %1578, true
  %1581 = xor i1 %1579, true
  %1582 = xor i1 true, true
  %1583 = and i1 %1580, true
  %1584 = and i1 %1578, %1582
  %1585 = and i1 %1581, true
  %1586 = and i1 %1579, %1582
  %1587 = or i1 %1583, %1584
  %1588 = or i1 %1585, %1586
  %1589 = xor i1 %1587, %1588
  %1590 = or i1 %1580, %1581
  %1591 = xor i1 %1590, true
  %1592 = or i1 true, %1582
  %1593 = and i1 %1591, %1592
  %1594 = or i1 %1589, %1593
  %1595 = or i1 %1578, %1579
  br i1 %1594, label %1596, label %2392

; <label>:1596:                                   ; preds = %1569, %2392
  call void @_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev(%"class.std::vector"* %3) #3
  %1597 = load i32, i32* @x.2
  %1598 = load i32, i32* @y.3
  %1599 = sub i32 0, 1
  %1600 = add i32 %1597, %1599
  %1601 = sub i32 %1597, 1
  %1602 = mul i32 %1597, %1600
  %1603 = urem i32 %1602, 2
  %1604 = icmp eq i32 %1603, 0
  %1605 = icmp slt i32 %1598, 10
  %1606 = xor i1 %1604, true
  %1607 = xor i1 %1605, true
  %1608 = xor i1 false, true
  %1609 = and i1 %1606, false
  %1610 = and i1 %1604, %1608
  %1611 = and i1 %1607, false
  %1612 = and i1 %1605, %1608
  %1613 = or i1 %1609, %1610
  %1614 = or i1 %1611, %1612
  %1615 = xor i1 %1613, %1614
  %1616 = or i1 %1606, %1607
  %1617 = xor i1 %1616, true
  %1618 = or i1 false, %1608
  %1619 = and i1 %1617, %1618
  %1620 = or i1 %1615, %1619
  %1621 = or i1 %1604, %1605
  br i1 %1620, label %1622, label %2392

; <label>:1622:                                   ; preds = %1596
  br label %1623

; <label>:1623:                                   ; preds = %1622, %282
  %1624 = load i32, i32* @x.2
  %1625 = load i32, i32* @y.3
  %1626 = sub i32 0, 1
  %1627 = add i32 %1624, %1626
  %1628 = sub i32 %1624, 1
  %1629 = mul i32 %1624, %1627
  %1630 = urem i32 %1629, 2
  %1631 = icmp eq i32 %1630, 0
  %1632 = icmp slt i32 %1625, 10
  %1633 = xor i1 %1631, true
  %1634 = xor i1 %1632, true
  %1635 = xor i1 false, true
  %1636 = and i1 %1633, false
  %1637 = and i1 %1631, %1635
  %1638 = and i1 %1634, false
  %1639 = and i1 %1632, %1635
  %1640 = or i1 %1636, %1637
  %1641 = or i1 %1638, %1639
  %1642 = xor i1 %1640, %1641
  %1643 = or i1 %1633, %1634
  %1644 = xor i1 %1643, true
  %1645 = or i1 false, %1635
  %1646 = and i1 %1644, %1645
  %1647 = or i1 %1642, %1646
  %1648 = or i1 %1631, %1632
  br i1 %1647, label %1649, label %2393

; <label>:1649:                                   ; preds = %1623, %2393
  %1650 = load i8*, i8** %6, align 8
  %1651 = load i32, i32* %7, align 4
  %1652 = insertvalue { i8*, i32 } undef, i8* %1650, 0
  %1653 = insertvalue { i8*, i32 } %1652, i32 %1651, 1
  %1654 = load i32, i32* @x.2
  %1655 = load i32, i32* @y.3
  %1656 = sub i32 0, 1
  %1657 = add i32 %1654, %1656
  %1658 = sub i32 %1654, 1
  %1659 = mul i32 %1654, %1657
  %1660 = urem i32 %1659, 2
  %1661 = icmp eq i32 %1660, 0
  %1662 = icmp slt i32 %1655, 10
  %1663 = and i1 %1661, %1662
  %1664 = xor i1 %1661, %1662
  %1665 = or i1 %1663, %1664
  %1666 = or i1 %1661, %1662
  br i1 %1665, label %1667, label %2393

; <label>:1667:                                   ; preds = %1649
  resume { i8*, i32 } %1653

; <label>:1668:                                   ; preds = %66, %40
  call void @_ZNSaISt6vectorIcSaIcEEEC2Ev(%"class.std::allocator"* %8) #3
  br label %66

; <label>:1669:                                   ; preds = %108, %81
  call void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator"* %8) #3
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.0"* %4) #3
  call void @_ZNSaIcED1Ev(%"class.std::allocator.2"* %5) #3
  store %"class.std::vector"* %3, %"class.std::vector"** %9, align 8
  %1670 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  %1671 = call %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EE5beginEv(%"class.std::vector"* %1670) #3
  %1672 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %"class.std::vector.0"* %1671, %"class.std::vector.0"** %1672, align 8
  %1673 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  %1674 = call %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EE3endEv(%"class.std::vector"* %1673) #3
  %1675 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"class.std::vector.0"* %1674, %"class.std::vector.0"** %1675, align 8
  br label %108

; <label>:1676:                                   ; preds = %156, %141
  %1677 = call zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %10, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11) #3
  br label %156

; <label>:1678:                                   ; preds = %200, %185
  %1679 = call dereferenceable(24) %"class.std::vector.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %10) #3
  store %"class.std::vector.0"* %1679, %"class.std::vector.0"** %12, align 8
  %1680 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  store %"class.std::vector.0"* %1680, %"class.std::vector.0"** %13, align 8
  %1681 = load %"class.std::vector.0"*, %"class.std::vector.0"** %13, align 8
  %1682 = call i8* @_ZNSt6vectorIcSaIcEE5beginEv(%"class.std::vector.0"* %1681) #3
  %1683 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %14, i32 0, i32 0
  store i8* %1682, i8** %1683, align 8
  %1684 = load %"class.std::vector.0"*, %"class.std::vector.0"** %13, align 8
  %1685 = call i8* @_ZNSt6vectorIcSaIcEE3endEv(%"class.std::vector.0"* %1684) #3
  %1686 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %15, i32 0, i32 0
  store i8* %1685, i8** %1686, align 8
  br label %200

; <label>:1687:                                   ; preds = %257, %231
  %1688 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.5"* @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEppEv(%"class.__gnu_cxx::__normal_iterator.5"* %14) #3
  br label %257

; <label>:1689:                                   ; preds = %327, %313
  %1690 = load i32, i32* %20, align 4
  %1691 = sext i32 %1690 to i64
  %1692 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %3, i64 %1691) #3
  %1693 = load i32, i32* %22, align 4
  %1694 = sext i32 %1693 to i64
  %1695 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %1692, i64 %1694) #3
  %1696 = load i8, i8* %1695, align 1
  %1697 = sext i8 %1696 to i32
  %1698 = icmp eq i32 %1697, 84
  br label %327

; <label>:1699:                                   ; preds = %390, %363
  %1700 = load i32, i32* %20, align 4
  %1701 = load i32, i32* @W, align 4
  %1702 = add i32 %1700, -413704421
  %1703 = sub i32 %1702, %1701
  %1704 = sub i32 %1703, -413704421
  %1705 = sub i32 %1700, %1701
  %1706 = mul i32 %1704, %1701
  %1707 = mul nsw i32 %1700, %1701
  %1708 = load i32, i32* %22, align 4
  %1709 = add i32 %1707, -740827617
  %1710 = sub i32 %1709, %1708
  %1711 = sub i32 %1710, -740827617
  %1712 = sub i32 %1707, %1708
  %1713 = mul i32 %1711, %1708
  %1714 = shl i32 %1707, %1708
  %1715 = add i32 0, -2068837966
  %1716 = sub i32 %1715, %1707
  %1717 = sub i32 %1716, -2068837966
  %1718 = sub i32 0, %1707
  %1719 = sub i32 0, %1717
  %1720 = sub i32 0, %1708
  %1721 = add i32 %1719, %1720
  %1722 = sub i32 0, %1721
  %1723 = add i32 %1717, %1708
  %1724 = shl i32 %1707, %1708
  %1725 = sub i32 0, %1707
  %1726 = add i32 0, %1725
  %1727 = sub i32 0, %1707
  %1728 = sub i32 0, %1726
  %1729 = sub i32 0, %1708
  %1730 = add i32 %1728, %1729
  %1731 = sub i32 0, %1730
  %1732 = add i32 %1726, %1708
  %1733 = sub i32 0, -1634602938
  %1734 = sub i32 %1733, %1707
  %1735 = add i32 %1734, -1634602938
  %1736 = sub i32 0, %1707
  %1737 = sub i32 %1735, 736510114
  %1738 = add i32 %1737, %1708
  %1739 = add i32 %1738, 736510114
  %1740 = add i32 %1735, %1708
  %1741 = sub i32 0, -801748320
  %1742 = sub i32 %1741, %1707
  %1743 = add i32 %1742, -801748320
  %1744 = sub i32 0, %1707
  %1745 = sub i32 0, %1708
  %1746 = sub i32 %1743, %1745
  %1747 = add i32 %1743, %1708
  %1748 = sub i32 0, %1707
  %1749 = sub i32 0, %1708
  %1750 = add i32 %1748, %1749
  %1751 = sub i32 0, %1750
  %1752 = add nsw i32 %1707, %1708
  %1753 = load i32, i32* %20, align 4
  %1754 = load i32, i32* @W, align 4
  %1755 = sub i32 0, %1753
  %1756 = add i32 0, %1755
  %1757 = sub i32 0, %1753
  %1758 = sub i32 0, %1754
  %1759 = sub i32 %1756, %1758
  %1760 = add i32 %1756, %1754
  %1761 = sub i32 0, %1754
  %1762 = add i32 %1753, %1761
  %1763 = sub i32 %1753, %1754
  %1764 = mul i32 %1762, %1754
  %1765 = shl i32 %1753, %1754
  %1766 = sub i32 0, %1754
  %1767 = add i32 %1753, %1766
  %1768 = sub i32 %1753, %1754
  %1769 = mul i32 %1767, %1754
  %1770 = add i32 0, 464753643
  %1771 = sub i32 %1770, %1753
  %1772 = sub i32 %1771, 464753643
  %1773 = sub i32 0, %1753
  %1774 = add i32 %1772, -1123156918
  %1775 = add i32 %1774, %1754
  %1776 = sub i32 %1775, -1123156918
  %1777 = add i32 %1772, %1754
  %1778 = sub i32 0, %1753
  %1779 = add i32 0, %1778
  %1780 = sub i32 0, %1753
  %1781 = sub i32 0, %1754
  %1782 = sub i32 %1779, %1781
  %1783 = add i32 %1779, %1754
  %1784 = mul nsw i32 %1753, %1754
  %1785 = load i32, i32* %22, align 4
  %1786 = shl i32 %1784, %1785
  %1787 = shl i32 %1784, %1785
  %1788 = sub i32 0, %1785
  %1789 = sub i32 %1784, %1788
  %1790 = add nsw i32 %1784, %1785
  %1791 = load i32, i32* %2, align 4
  %1792 = sub i32 0, %1791
  %1793 = add i32 %1789, %1792
  %1794 = sub i32 %1789, %1791
  %1795 = mul i32 %1793, %1791
  %1796 = shl i32 %1789, %1791
  %1797 = sub i32 %1789, 2007723570
  %1798 = sub i32 %1797, %1791
  %1799 = add i32 %1798, 2007723570
  %1800 = sub i32 %1789, %1791
  %1801 = mul i32 %1799, %1791
  %1802 = add i32 %1789, 1187528844
  %1803 = sub i32 %1802, %1791
  %1804 = sub i32 %1803, 1187528844
  %1805 = sub i32 %1789, %1791
  %1806 = mul i32 %1804, %1791
  %1807 = shl i32 %1789, %1791
  %1808 = add i32 0, 1599929720
  %1809 = sub i32 %1808, %1789
  %1810 = sub i32 %1809, 1599929720
  %1811 = sub i32 0, %1789
  %1812 = sub i32 %1810, 1296461427
  %1813 = add i32 %1812, %1791
  %1814 = add i32 %1813, 1296461427
  %1815 = add i32 %1810, %1791
  %1816 = sub i32 0, %1791
  %1817 = sub i32 %1789, %1816
  %1818 = add nsw i32 %1789, %1791
  br label %390

; <label>:1819:                                   ; preds = %507, %480
  %1820 = load i32, i32* %20, align 4
  %1821 = load i32, i32* @W, align 4
  %1822 = sub i32 0, 1931644405
  %1823 = sub i32 %1822, %1820
  %1824 = add i32 %1823, 1931644405
  %1825 = sub i32 0, %1820
  %1826 = sub i32 %1824, -1041161471
  %1827 = add i32 %1826, %1821
  %1828 = add i32 %1827, -1041161471
  %1829 = add i32 %1824, %1821
  %1830 = sub i32 0, %1820
  %1831 = add i32 0, %1830
  %1832 = sub i32 0, %1820
  %1833 = add i32 %1831, 1793135899
  %1834 = add i32 %1833, %1821
  %1835 = sub i32 %1834, 1793135899
  %1836 = add i32 %1831, %1821
  %1837 = sub i32 0, %1821
  %1838 = add i32 %1820, %1837
  %1839 = sub i32 %1820, %1821
  %1840 = mul i32 %1838, %1821
  %1841 = sub i32 0, %1820
  %1842 = add i32 0, %1841
  %1843 = sub i32 0, %1820
  %1844 = sub i32 0, %1842
  %1845 = sub i32 0, %1821
  %1846 = add i32 %1844, %1845
  %1847 = sub i32 0, %1846
  %1848 = add i32 %1842, %1821
  %1849 = sub i32 0, 341852770
  %1850 = sub i32 %1849, %1820
  %1851 = add i32 %1850, 341852770
  %1852 = sub i32 0, %1820
  %1853 = sub i32 %1851, 1552698831
  %1854 = add i32 %1853, %1821
  %1855 = add i32 %1854, 1552698831
  %1856 = add i32 %1851, %1821
  %1857 = mul nsw i32 %1820, %1821
  %1858 = load i32, i32* %22, align 4
  %1859 = sub i32 0, 78050382
  %1860 = sub i32 %1859, %1857
  %1861 = add i32 %1860, 78050382
  %1862 = sub i32 0, %1857
  %1863 = sub i32 0, %1858
  %1864 = sub i32 %1861, %1863
  %1865 = add i32 %1861, %1858
  %1866 = shl i32 %1857, %1858
  %1867 = sub i32 0, %1858
  %1868 = add i32 %1857, %1867
  %1869 = sub i32 %1857, %1858
  %1870 = mul i32 %1868, %1858
  %1871 = add i32 %1857, 1631540670
  %1872 = sub i32 %1871, %1858
  %1873 = sub i32 %1872, 1631540670
  %1874 = sub i32 %1857, %1858
  %1875 = mul i32 %1873, %1858
  %1876 = add i32 %1857, 477604279
  %1877 = sub i32 %1876, %1858
  %1878 = sub i32 %1877, 477604279
  %1879 = sub i32 %1857, %1858
  %1880 = mul i32 %1878, %1858
  %1881 = sub i32 0, 2017705944
  %1882 = sub i32 %1881, %1857
  %1883 = add i32 %1882, 2017705944
  %1884 = sub i32 0, %1857
  %1885 = sub i32 0, %1858
  %1886 = sub i32 %1883, %1885
  %1887 = add i32 %1883, %1858
  %1888 = sub i32 0, %1857
  %1889 = add i32 0, %1888
  %1890 = sub i32 0, %1857
  %1891 = sub i32 %1889, -631937727
  %1892 = add i32 %1891, %1858
  %1893 = add i32 %1892, -631937727
  %1894 = add i32 %1889, %1858
  %1895 = shl i32 %1857, %1858
  %1896 = add i32 %1857, 1326645185
  %1897 = add i32 %1896, %1858
  %1898 = sub i32 %1897, 1326645185
  %1899 = add nsw i32 %1857, %1858
  store i32 %1898, i32* %19, align 4
  br label %507

; <label>:1900:                                   ; preds = %545, %530
  %1901 = load i32, i32* %20, align 4
  %1902 = sext i32 %1901 to i64
  %1903 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %3, i64 %1902) #3
  %1904 = load i32, i32* %22, align 4
  %1905 = sext i32 %1904 to i64
  %1906 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %1903, i64 %1905) #3
  %1907 = load i8, i8* %1906, align 1
  %1908 = sext i8 %1907 to i32
  %1909 = icmp eq i32 %1908, 111
  br label %545

; <label>:1910:                                   ; preds = %608, %582
  %1911 = load i32, i32* %20, align 4
  %1912 = load i32, i32* @W, align 4
  %1913 = mul nsw i32 %1911, %1912
  %1914 = load i32, i32* %22, align 4
  %1915 = shl i32 %1913, %1914
  %1916 = sub i32 0, %1913
  %1917 = add i32 0, %1916
  %1918 = sub i32 0, %1913
  %1919 = sub i32 0, %1917
  %1920 = sub i32 0, %1914
  %1921 = add i32 %1919, %1920
  %1922 = sub i32 0, %1921
  %1923 = add i32 %1917, %1914
  %1924 = sub i32 0, %1914
  %1925 = add i32 %1913, %1924
  %1926 = sub i32 %1913, %1914
  %1927 = mul i32 %1925, %1914
  %1928 = add i32 0, 1037948877
  %1929 = sub i32 %1928, %1913
  %1930 = sub i32 %1929, 1037948877
  %1931 = sub i32 0, %1913
  %1932 = sub i32 0, %1930
  %1933 = sub i32 0, %1914
  %1934 = add i32 %1932, %1933
  %1935 = sub i32 0, %1934
  %1936 = add i32 %1930, %1914
  %1937 = add i32 0, 324312722
  %1938 = sub i32 %1937, %1913
  %1939 = sub i32 %1938, 324312722
  %1940 = sub i32 0, %1913
  %1941 = sub i32 0, %1939
  %1942 = sub i32 0, %1914
  %1943 = add i32 %1941, %1942
  %1944 = sub i32 0, %1943
  %1945 = add i32 %1939, %1914
  %1946 = sub i32 0, %1913
  %1947 = add i32 0, %1946
  %1948 = sub i32 0, %1913
  %1949 = sub i32 0, %1947
  %1950 = sub i32 0, %1914
  %1951 = add i32 %1949, %1950
  %1952 = sub i32 0, %1951
  %1953 = add i32 %1947, %1914
  %1954 = sub i32 0, -526445533
  %1955 = sub i32 %1954, %1913
  %1956 = add i32 %1955, -526445533
  %1957 = sub i32 0, %1913
  %1958 = sub i32 0, %1914
  %1959 = sub i32 %1956, %1958
  %1960 = add i32 %1956, %1914
  %1961 = sub i32 0, %1914
  %1962 = add i32 %1913, %1961
  %1963 = sub i32 %1913, %1914
  %1964 = mul i32 %1962, %1914
  %1965 = sub i32 0, %1914
  %1966 = sub i32 %1913, %1965
  %1967 = add nsw i32 %1913, %1914
  %1968 = load i32, i32* %20, align 4
  %1969 = load i32, i32* @W, align 4
  %1970 = sub i32 0, %1969
  %1971 = add i32 %1968, %1970
  %1972 = sub i32 %1968, %1969
  %1973 = mul i32 %1971, %1969
  %1974 = sub i32 %1968, -1389990844
  %1975 = sub i32 %1974, %1969
  %1976 = add i32 %1975, -1389990844
  %1977 = sub i32 %1968, %1969
  %1978 = mul i32 %1976, %1969
  %1979 = sub i32 %1968, 100751882
  %1980 = sub i32 %1979, %1969
  %1981 = add i32 %1980, 100751882
  %1982 = sub i32 %1968, %1969
  %1983 = mul i32 %1981, %1969
  %1984 = add i32 %1968, 1229891170
  %1985 = sub i32 %1984, %1969
  %1986 = sub i32 %1985, 1229891170
  %1987 = sub i32 %1968, %1969
  %1988 = mul i32 %1986, %1969
  %1989 = sub i32 0, %1969
  %1990 = add i32 %1968, %1989
  %1991 = sub i32 %1968, %1969
  %1992 = mul i32 %1990, %1969
  %1993 = mul nsw i32 %1968, %1969
  %1994 = load i32, i32* %22, align 4
  %1995 = sub i32 0, 982816431
  %1996 = sub i32 %1995, %1993
  %1997 = add i32 %1996, 982816431
  %1998 = sub i32 0, %1993
  %1999 = sub i32 0, %1997
  %2000 = sub i32 0, %1994
  %2001 = add i32 %1999, %2000
  %2002 = sub i32 0, %2001
  %2003 = add i32 %1997, %1994
  %2004 = add i32 0, 684270332
  %2005 = sub i32 %2004, %1993
  %2006 = sub i32 %2005, 684270332
  %2007 = sub i32 0, %1993
  %2008 = add i32 %2006, -991913357
  %2009 = add i32 %2008, %1994
  %2010 = sub i32 %2009, -991913357
  %2011 = add i32 %2006, %1994
  %2012 = sub i32 0, %1993
  %2013 = sub i32 0, %1994
  %2014 = add i32 %2012, %2013
  %2015 = sub i32 0, %2014
  %2016 = add nsw i32 %1993, %1994
  %2017 = load i32, i32* %2, align 4
  %2018 = shl i32 %2015, %2017
  %2019 = sub i32 %2015, -591200486
  %2020 = sub i32 %2019, %2017
  %2021 = add i32 %2020, -591200486
  %2022 = sub i32 %2015, %2017
  %2023 = mul i32 %2021, %2017
  %2024 = shl i32 %2015, %2017
  %2025 = sub i32 0, 1932563463
  %2026 = sub i32 %2025, %2015
  %2027 = add i32 %2026, 1932563463
  %2028 = sub i32 0, %2015
  %2029 = sub i32 0, %2017
  %2030 = sub i32 %2027, %2029
  %2031 = add i32 %2027, %2017
  %2032 = sub i32 %2015, 1620573310
  %2033 = sub i32 %2032, %2017
  %2034 = add i32 %2033, 1620573310
  %2035 = sub i32 %2015, %2017
  %2036 = mul i32 %2034, %2017
  %2037 = add i32 %2015, 1667744679
  %2038 = sub i32 %2037, %2017
  %2039 = sub i32 %2038, 1667744679
  %2040 = sub i32 %2015, %2017
  %2041 = mul i32 %2039, %2017
  %2042 = sub i32 0, %2015
  %2043 = sub i32 0, %2017
  %2044 = add i32 %2042, %2043
  %2045 = sub i32 0, %2044
  %2046 = add nsw i32 %2015, %2017
  br label %608

; <label>:2047:                                   ; preds = %708, %681
  %2048 = load i32, i32* %20, align 4
  %2049 = sext i32 %2048 to i64
  %2050 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %3, i64 %2049) #3
  %2051 = load i32, i32* %22, align 4
  %2052 = sext i32 %2051 to i64
  %2053 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %2050, i64 %2052) #3
  %2054 = load i8, i8* %2053, align 1
  %2055 = sext i8 %2054 to i32
  %2056 = icmp ne i32 %2055, 46
  br label %708

; <label>:2057:                                   ; preds = %760, %733
  br label %760

; <label>:2058:                                   ; preds = %791, %776
  br label %791

; <label>:2059:                                   ; preds = %845, %831
  %2060 = load i32, i32* %24, align 4
  %2061 = load i32, i32* %23, align 4
  %2062 = icmp slt i32 %2060, %2061
  br label %845

; <label>:2063:                                   ; preds = %944, %929
  %2064 = load i32, i32* %23, align 4
  %2065 = sub i32 0, 1
  %2066 = add i32 %2064, %2065
  %2067 = sub i32 %2064, 1
  %2068 = mul i32 %2066, 1
  %2069 = sub i32 %2064, 1501092288
  %2070 = add i32 %2069, 1
  %2071 = add i32 %2070, 1501092288
  %2072 = add nsw i32 %2064, 1
  store i32 %2071, i32* %23, align 4
  br label %944

; <label>:2073:                                   ; preds = %999, %985
  %2074 = load i32, i32* %25, align 4
  %2075 = load i32, i32* @W, align 4
  %2076 = icmp slt i32 %2074, %2075
  br label %999

; <label>:2077:                                   ; preds = %1045, %1030
  %2078 = load i32, i32* %27, align 4
  %2079 = load i32, i32* @H, align 4
  %2080 = icmp slt i32 %2078, %2079
  br label %1045

; <label>:2081:                                   ; preds = %1115, %1100
  %2082 = load i32, i32* %28, align 4
  %2083 = sext i32 %2082 to i64
  %2084 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.12"* %26) #3
  %2085 = icmp ult i64 %2083, %2084
  br label %1115

; <label>:2086:                                   ; preds = %1151, %1136
  %2087 = load i32, i32* %29, align 4
  %2088 = load i32, i32* %28, align 4
  %2089 = icmp slt i32 %2087, %2088
  br label %1151

; <label>:2090:                                   ; preds = %1184, %1170
  %2091 = load i32, i32* %28, align 4
  %2092 = sext i32 %2091 to i64
  %2093 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %26, i64 %2092) #3
  %2094 = load i32, i32* %2093, align 4
  %2095 = load i32, i32* @W, align 4
  %2096 = shl i32 %2094, %2095
  %2097 = add i32 %2094, -1170110762
  %2098 = sub i32 %2097, %2095
  %2099 = sub i32 %2098, -1170110762
  %2100 = sub i32 %2094, %2095
  %2101 = mul i32 %2099, %2095
  %2102 = shl i32 %2094, %2095
  %2103 = shl i32 %2094, %2095
  %2104 = sub i32 0, %2095
  %2105 = add i32 %2094, %2104
  %2106 = sub i32 %2094, %2095
  %2107 = mul i32 %2105, %2095
  %2108 = shl i32 %2094, %2095
  %2109 = mul nsw i32 %2094, %2095
  %2110 = load i32, i32* %25, align 4
  %2111 = sub i32 %2109, 692769474
  %2112 = sub i32 %2111, %2110
  %2113 = add i32 %2112, 692769474
  %2114 = sub i32 %2109, %2110
  %2115 = mul i32 %2113, %2110
  %2116 = add i32 0, 1430497115
  %2117 = sub i32 %2116, %2109
  %2118 = sub i32 %2117, 1430497115
  %2119 = sub i32 0, %2109
  %2120 = sub i32 0, %2118
  %2121 = sub i32 0, %2110
  %2122 = add i32 %2120, %2121
  %2123 = sub i32 0, %2122
  %2124 = add i32 %2118, %2110
  %2125 = sub i32 0, %2110
  %2126 = add i32 %2109, %2125
  %2127 = sub i32 %2109, %2110
  %2128 = mul i32 %2126, %2110
  %2129 = sub i32 0, %2109
  %2130 = add i32 0, %2129
  %2131 = sub i32 0, %2109
  %2132 = sub i32 0, %2110
  %2133 = sub i32 %2130, %2132
  %2134 = add i32 %2130, %2110
  %2135 = shl i32 %2109, %2110
  %2136 = sub i32 0, %2109
  %2137 = sub i32 0, %2110
  %2138 = add i32 %2136, %2137
  %2139 = sub i32 0, %2138
  %2140 = add nsw i32 %2109, %2110
  %2141 = load i32, i32* %2, align 4
  %2142 = add i32 %2139, -1416104559
  %2143 = sub i32 %2142, %2141
  %2144 = sub i32 %2143, -1416104559
  %2145 = sub i32 %2139, %2141
  %2146 = mul i32 %2144, %2141
  %2147 = sub i32 0, -1091322569
  %2148 = sub i32 %2147, %2139
  %2149 = add i32 %2148, -1091322569
  %2150 = sub i32 0, %2139
  %2151 = sub i32 0, %2149
  %2152 = sub i32 0, %2141
  %2153 = add i32 %2151, %2152
  %2154 = sub i32 0, %2153
  %2155 = add i32 %2149, %2141
  %2156 = add i32 %2139, -61753762
  %2157 = add i32 %2156, %2141
  %2158 = sub i32 %2157, -61753762
  %2159 = add nsw i32 %2139, %2141
  %2160 = load i32, i32* %29, align 4
  %2161 = sext i32 %2160 to i64
  %2162 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %26, i64 %2161) #3
  %2163 = load i32, i32* %2162, align 4
  %2164 = load i32, i32* @W, align 4
  %2165 = sub i32 0, %2163
  %2166 = add i32 0, %2165
  %2167 = sub i32 0, %2163
  %2168 = sub i32 0, %2164
  %2169 = sub i32 %2166, %2168
  %2170 = add i32 %2166, %2164
  %2171 = sub i32 0, %2163
  %2172 = add i32 0, %2171
  %2173 = sub i32 0, %2163
  %2174 = sub i32 0, %2164
  %2175 = sub i32 %2172, %2174
  %2176 = add i32 %2172, %2164
  %2177 = sub i32 0, -1265004769
  %2178 = sub i32 %2177, %2163
  %2179 = add i32 %2178, -1265004769
  %2180 = sub i32 0, %2163
  %2181 = sub i32 0, %2164
  %2182 = sub i32 %2179, %2181
  %2183 = add i32 %2179, %2164
  %2184 = sub i32 0, %2164
  %2185 = add i32 %2163, %2184
  %2186 = sub i32 %2163, %2164
  %2187 = mul i32 %2185, %2164
  %2188 = sub i32 0, %2164
  %2189 = add i32 %2163, %2188
  %2190 = sub i32 %2163, %2164
  %2191 = mul i32 %2189, %2164
  %2192 = mul nsw i32 %2163, %2164
  %2193 = load i32, i32* %25, align 4
  %2194 = shl i32 %2192, %2193
  %2195 = sub i32 0, %2192
  %2196 = add i32 0, %2195
  %2197 = sub i32 0, %2192
  %2198 = sub i32 %2196, 1569614973
  %2199 = add i32 %2198, %2193
  %2200 = add i32 %2199, 1569614973
  %2201 = add i32 %2196, %2193
  %2202 = shl i32 %2192, %2193
  %2203 = shl i32 %2192, %2193
  %2204 = shl i32 %2192, %2193
  %2205 = shl i32 %2192, %2193
  %2206 = sub i32 0, %2193
  %2207 = sub i32 %2192, %2206
  %2208 = add nsw i32 %2192, %2193
  %2209 = load i32, i32* %2, align 4
  %2210 = shl i32 %2207, %2209
  %2211 = add i32 0, 1307535828
  %2212 = sub i32 %2211, %2207
  %2213 = sub i32 %2212, 1307535828
  %2214 = sub i32 0, %2207
  %2215 = sub i32 0, %2213
  %2216 = sub i32 0, %2209
  %2217 = add i32 %2215, %2216
  %2218 = sub i32 0, %2217
  %2219 = add i32 %2213, %2209
  %2220 = sub i32 0, 377322012
  %2221 = sub i32 %2220, %2207
  %2222 = add i32 %2221, 377322012
  %2223 = sub i32 0, %2207
  %2224 = sub i32 0, %2222
  %2225 = sub i32 0, %2209
  %2226 = add i32 %2224, %2225
  %2227 = sub i32 0, %2226
  %2228 = add i32 %2222, %2209
  %2229 = sub i32 0, %2207
  %2230 = sub i32 0, %2209
  %2231 = add i32 %2229, %2230
  %2232 = sub i32 0, %2231
  %2233 = add nsw i32 %2207, %2209
  br label %1184

; <label>:2234:                                   ; preds = %1258, %1231
  %2235 = load i32, i32* %29, align 4
  %2236 = sext i32 %2235 to i64
  %2237 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %26, i64 %2236) #3
  %2238 = load i32, i32* %2237, align 4
  %2239 = load i32, i32* @W, align 4
  %2240 = sub i32 0, %2239
  %2241 = add i32 %2238, %2240
  %2242 = sub i32 %2238, %2239
  %2243 = mul i32 %2241, %2239
  %2244 = mul nsw i32 %2238, %2239
  %2245 = load i32, i32* %25, align 4
  %2246 = add i32 0, -977456790
  %2247 = sub i32 %2246, %2244
  %2248 = sub i32 %2247, -977456790
  %2249 = sub i32 0, %2244
  %2250 = sub i32 0, %2245
  %2251 = sub i32 %2248, %2250
  %2252 = add i32 %2248, %2245
  %2253 = add i32 0, 1094845954
  %2254 = sub i32 %2253, %2244
  %2255 = sub i32 %2254, 1094845954
  %2256 = sub i32 0, %2244
  %2257 = add i32 %2255, 1475060238
  %2258 = add i32 %2257, %2245
  %2259 = sub i32 %2258, 1475060238
  %2260 = add i32 %2255, %2245
  %2261 = sub i32 0, %2244
  %2262 = sub i32 0, %2245
  %2263 = add i32 %2261, %2262
  %2264 = sub i32 0, %2263
  %2265 = add nsw i32 %2244, %2245
  %2266 = load i32, i32* %2, align 4
  %2267 = sub i32 0, %2266
  %2268 = add i32 %2264, %2267
  %2269 = sub i32 %2264, %2266
  %2270 = mul i32 %2268, %2266
  %2271 = sub i32 0, %2264
  %2272 = add i32 0, %2271
  %2273 = sub i32 0, %2264
  %2274 = sub i32 0, %2266
  %2275 = sub i32 %2272, %2274
  %2276 = add i32 %2272, %2266
  %2277 = add i32 0, 580086981
  %2278 = sub i32 %2277, %2264
  %2279 = sub i32 %2278, 580086981
  %2280 = sub i32 0, %2264
  %2281 = sub i32 %2279, 1373048277
  %2282 = add i32 %2281, %2266
  %2283 = add i32 %2282, 1373048277
  %2284 = add i32 %2279, %2266
  %2285 = shl i32 %2264, %2266
  %2286 = shl i32 %2264, %2266
  %2287 = sub i32 0, %2266
  %2288 = add i32 %2264, %2287
  %2289 = sub i32 %2264, %2266
  %2290 = mul i32 %2288, %2266
  %2291 = sub i32 %2264, 1571152244
  %2292 = add i32 %2291, %2266
  %2293 = add i32 %2292, 1571152244
  %2294 = add nsw i32 %2264, %2266
  %2295 = load i32, i32* %28, align 4
  %2296 = sext i32 %2295 to i64
  %2297 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %26, i64 %2296) #3
  %2298 = load i32, i32* %2297, align 4
  %2299 = load i32, i32* @W, align 4
  %2300 = sub i32 %2298, 1730846310
  %2301 = sub i32 %2300, %2299
  %2302 = add i32 %2301, 1730846310
  %2303 = sub i32 %2298, %2299
  %2304 = mul i32 %2302, %2299
  %2305 = add i32 %2298, -1537717197
  %2306 = sub i32 %2305, %2299
  %2307 = sub i32 %2306, -1537717197
  %2308 = sub i32 %2298, %2299
  %2309 = mul i32 %2307, %2299
  %2310 = sub i32 %2298, 593406132
  %2311 = sub i32 %2310, %2299
  %2312 = add i32 %2311, 593406132
  %2313 = sub i32 %2298, %2299
  %2314 = mul i32 %2312, %2299
  %2315 = shl i32 %2298, %2299
  %2316 = shl i32 %2298, %2299
  %2317 = mul nsw i32 %2298, %2299
  %2318 = load i32, i32* %25, align 4
  %2319 = sub i32 %2317, -990612088
  %2320 = sub i32 %2319, %2318
  %2321 = add i32 %2320, -990612088
  %2322 = sub i32 %2317, %2318
  %2323 = mul i32 %2321, %2318
  %2324 = shl i32 %2317, %2318
  %2325 = sub i32 0, %2318
  %2326 = add i32 %2317, %2325
  %2327 = sub i32 %2317, %2318
  %2328 = mul i32 %2326, %2318
  %2329 = sub i32 %2317, -646519654
  %2330 = sub i32 %2329, %2318
  %2331 = add i32 %2330, -646519654
  %2332 = sub i32 %2317, %2318
  %2333 = mul i32 %2331, %2318
  %2334 = sub i32 0, %2318
  %2335 = add i32 %2317, %2334
  %2336 = sub i32 %2317, %2318
  %2337 = mul i32 %2335, %2318
  %2338 = add i32 %2317, 1175361273
  %2339 = sub i32 %2338, %2318
  %2340 = sub i32 %2339, 1175361273
  %2341 = sub i32 %2317, %2318
  %2342 = mul i32 %2340, %2318
  %2343 = sub i32 0, %2318
  %2344 = sub i32 %2317, %2343
  %2345 = add nsw i32 %2317, %2318
  %2346 = load i32, i32* %2, align 4
  %2347 = sub i32 0, %2344
  %2348 = add i32 0, %2347
  %2349 = sub i32 0, %2344
  %2350 = sub i32 %2348, 25454211
  %2351 = add i32 %2350, %2346
  %2352 = add i32 %2351, 25454211
  %2353 = add i32 %2348, %2346
  %2354 = add i32 0, 2096876807
  %2355 = sub i32 %2354, %2344
  %2356 = sub i32 %2355, 2096876807
  %2357 = sub i32 0, %2344
  %2358 = sub i32 %2356, 1390697624
  %2359 = add i32 %2358, %2346
  %2360 = add i32 %2359, 1390697624
  %2361 = add i32 %2356, %2346
  %2362 = add i32 %2344, -1768338491
  %2363 = sub i32 %2362, %2346
  %2364 = sub i32 %2363, -1768338491
  %2365 = sub i32 %2344, %2346
  %2366 = mul i32 %2364, %2346
  %2367 = sub i32 %2344, 883183689
  %2368 = add i32 %2367, %2346
  %2369 = add i32 %2368, 883183689
  %2370 = add nsw i32 %2344, %2346
  br label %1258

; <label>:2371:                                   ; preds = %1324, %1310
  br label %1324

; <label>:2372:                                   ; preds = %1386, %1360
  %2373 = load i32, i32* %25, align 4
  %2374 = shl i32 %2373, 1
  %2375 = add i32 0, -1180304157
  %2376 = sub i32 %2375, %2373
  %2377 = sub i32 %2376, -1180304157
  %2378 = sub i32 0, %2373
  %2379 = sub i32 0, %2377
  %2380 = sub i32 0, 1
  %2381 = add i32 %2379, %2380
  %2382 = sub i32 0, %2381
  %2383 = add i32 %2377, 1
  %2384 = add i32 %2373, 1645151922
  %2385 = add i32 %2384, 1
  %2386 = sub i32 %2385, 1645151922
  %2387 = add nsw i32 %2373, 1
  store i32 %2386, i32* %25, align 4
  br label %1386

; <label>:2388:                                   ; preds = %1446, %1419
  br label %1446

; <label>:2389:                                   ; preds = %1498, %1471
  call void @_ZN7MaxflowIxED2Ev(%class.Maxflow* %17) #3
  call void @_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev(%"class.std::vector"* %3) #3
  %2390 = load i32, i32* %1, align 4
  br label %1498

; <label>:2391:                                   ; preds = %1541, %1514
  call void @_ZN7MaxflowIxED2Ev(%class.Maxflow* %17) #3
  br label %1541

; <label>:2392:                                   ; preds = %1596, %1569
  call void @_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev(%"class.std::vector"* %3) #3
  br label %1596

; <label>:2393:                                   ; preds = %1649, %1623
  %2394 = load i8*, i8** %6, align 8
  %2395 = load i32, i32* %7, align 4
  %2396 = insertvalue { i8*, i32 } undef, i8* %2394, 0
  %2397 = insertvalue { i8*, i32 } %2396, i32 %2395, 1
  br label %1649
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: nounwind
declare void @_ZNSaIcEC1Ev(%"class.std::allocator.2"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEEC2EmRKS0_(%"class.std::vector.0"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %10 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_(%"struct.std::_Vector_base.1"* %10, i64 %11, %"class.std::allocator.2"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorIcSaIcEE21_M_default_initializeEm(%"class.std::vector.0"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.1"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i32, i32* @x.4
  %22 = load i32, i32* @y.5
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %78

; <label>:46:                                     ; preds = %20, %78
  %47 = load i8*, i8** %7, align 8
  %48 = load i32, i32* %8, align 4
  %49 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  %51 = load i32, i32* @x.4
  %52 = load i32, i32* @y.5
  %53 = add i32 %51, -922328994
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -922328994
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %78

; <label>:77:                                     ; preds = %46
  resume { i8*, i32 } %50

; <label>:78:                                     ; preds = %46, %20
  %79 = load i8*, i8** %7, align 8
  %80 = load i32, i32* %8, align 4
  %81 = insertvalue { i8*, i32 } undef, i8* %79, 0
  %82 = insertvalue { i8*, i32 } %81, i32 %80, 1
  br label %46
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIcSaIcEEEC2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IcSaIcEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  invoke void @_ZNSt6vectorIS_IcSaIcEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector"* %11, i64 %15, %"class.std::vector.0"* dereferenceable(24) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.0"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPccEvT_S1_RSaIT0_E(i8* %9, i8* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.1"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.1"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: nounwind
declare void @_ZNSaIcED1Ev(%"class.std::allocator.2"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EE5beginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.14
  %6 = load i32, i32* @y.15
  %7 = sub i32 %5, 74806338
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 74806338
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1903068496, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1903068496, label %19
    i32 -569193500, label %39
    i32 -1950210165, label %62
    i32 2063139167, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -569193500, i32 2063139167
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  %42 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %43 = bitcast %"class.std::vector"* %42 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %44, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %40, %"class.std::vector.0"** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %47 = load %"class.std::vector.0"*, %"class.std::vector.0"** %46, align 8
  store %"class.std::vector.0"* %47, %"class.std::vector.0"** %2
  %48 = load i32, i32* @x.14
  %49 = load i32, i32* @y.15
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1950210165, i32 2063139167
  store i32 %61, i32* %15
  br label %73

; <label>:62:                                     ; preds = %16
  %63 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %66 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %66, align 8
  %67 = load %"class.std::vector"*, %"class.std::vector"** %66, align 8
  %68 = bitcast %"class.std::vector"* %67 to %"struct.std::_Vector_base"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %69, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %65, %"class.std::vector.0"** dereferenceable(8) %70) #3
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  %72 = load %"class.std::vector.0"*, %"class.std::vector.0"** %71, align 8
  store i32 -569193500, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EE3endEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::vector.0"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  ret %"class.std::vector.0"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  %11 = icmp ne %"class.std::vector.0"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt6vectorIcSaIcEE5beginEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.5", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.5"* %2, i8** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt6vectorIcSaIcEE3endEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.5", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.5"* %2, i8** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPcSt6vectorIcSaIcEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.5"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.5"* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.26
  %7 = load i32, i32* @y.27
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -385983027, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -385983027, label %19
    i32 11794342, label %27
    i32 -2050715465, label %51
    i32 1193353058, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 11794342, i32 1193353058
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.5"*, align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.5"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %0, %"class.__gnu_cxx::__normal_iterator.5"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %1, %"class.__gnu_cxx::__normal_iterator.5"** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %28, align 8
  %31 = call dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.5"* %30) #3
  %32 = load i8*, i8** %31, align 8
  %33 = load %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %29, align 8
  %34 = call dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.5"* %33) #3
  %35 = load i8*, i8** %34, align 8
  %36 = icmp ne i8* %32, %35
  store i1 %36, i1* %3
  %37 = load i32, i32* @x.26
  %38 = load i32, i32* @y.27
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -2050715465, i32 1193353058
  store i32 %50, i32* %15
  br label %63

; <label>:51:                                     ; preds = %16
  %52 = load volatile i1, i1* %3
  ret i1 %52

; <label>:53:                                     ; preds = %16
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.5"*, align 8
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.5"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %0, %"class.__gnu_cxx::__normal_iterator.5"** %54, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %1, %"class.__gnu_cxx::__normal_iterator.5"** %55, align 8
  %56 = load %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %54, align 8
  %57 = call dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.5"* %56) #3
  %58 = load i8*, i8** %57, align 8
  %59 = load %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %55, align 8
  %60 = call dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.5"* %59) #3
  %61 = load i8*, i8** %60, align 8
  %62 = icmp ne i8* %58, %61
  store i32 11794342, i32* %15
  br label %63

; <label>:63:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEdeEv(%"class.__gnu_cxx::__normal_iterator.5"*) #5 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.28
  %6 = load i32, i32* @y.29
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2116343566, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2116343566, label %18
    i32 1860038979, label %38
    i32 -164258302, label %58
    i32 -72655359, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1860038979, i32 -72655359
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.5"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %0, %"class.__gnu_cxx::__normal_iterator.5"** %39, align 8
  %40 = load %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %40, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  store i8* %42, i8** %2
  %43 = load i32, i32* @x.28
  %44 = load i32, i32* @y.29
  %45 = sub i32 %43, -1838391853
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1838391853
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -164258302, i32 -72655359
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i8*, i8** %2
  ret i8* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.5"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %0, %"class.__gnu_cxx::__normal_iterator.5"** %61, align 8
  %62 = load %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %61, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %62, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  store i32 1860038979, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.5"* @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEppEv(%"class.__gnu_cxx::__normal_iterator.5"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.30
  %6 = load i32, i32* @y.31
  %7 = sub i32 %5, 70627648
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 70627648
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -344661947, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -344661947, label %19
    i32 990893192, label %27
    i32 -1077356196, label %61
    i32 -644610806, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 990893192, i32 -644610806
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.5"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %0, %"class.__gnu_cxx::__normal_iterator.5"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %29, %"class.__gnu_cxx::__normal_iterator.5"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %33, i8** %31, align 8
  %34 = load i32, i32* @x.30
  %35 = load i32, i32* @y.31
  %36 = add i32 %34, 2085821724
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 2085821724
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1077356196, i32 -644610806
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %2
  ret %"class.__gnu_cxx::__normal_iterator.5"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.5"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %0, %"class.__gnu_cxx::__normal_iterator.5"** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %64, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %65, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %66, align 8
  store i32 990893192, i32* %15
  br label %69

; <label>:69:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i32 1
  store %"class.std::vector.0"* %6, %"class.std::vector.0"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7MaxflowIxEC2Ei(%class.Maxflow*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Maxflow*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*
  %6 = alloca i32
  store %class.Maxflow* %0, %class.Maxflow** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %class.Maxflow*, %class.Maxflow** %3, align 8
  %8 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %7, i32 0, i32 0
  call void @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEC2Ev(%"class.std::vector.6"* %8) #3
  %9 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %7, i32 0, i32 1
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.12"* %9) #3
  %10 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %7, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.12"* %10) #3
  %11 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %7, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.12"* %11) #3
  %12 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %7, i32 0, i32 0
  %13 = load i32, i32* %4, align 4
  %14 = sext i32 %13 to i64
  invoke void @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE6resizeEm(%"class.std::vector.6"* %12, i64 %14)
          to label %15 unwind label %16

; <label>:15:                                     ; preds = %2
  ret void

; <label>:16:                                     ; preds = %2
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %5, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %6, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %11) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %10) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %9) #3
  call void @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector.6"* %8) #3
  br label %20

; <label>:20:                                     ; preds = %16
  %21 = load i8*, i8** %5, align 8
  %22 = load i32, i32* %6, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.12"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.36
  %3 = load i32, i32* @y.37
  %4 = sub i32 %2, -1101727831
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1101727831
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %50

; <label>:16:                                     ; preds = %1, %50
  %17 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %17, align 8
  %18 = load %"class.std::vector.12"*, %"class.std::vector.12"** %17, align 8
  %19 = bitcast %"class.std::vector.12"* %18 to %"struct.std::_Vector_base.13"*
  %20 = load i32, i32* @x.36
  %21 = load i32, i32* @y.37
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %50

; <label>:45:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.13"* %19)
          to label %46 unwind label %47

; <label>:46:                                     ; preds = %45
  ret void

; <label>:47:                                     ; preds = %45
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #11
  unreachable

; <label>:50:                                     ; preds = %16, %1
  %51 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %51, align 8
  %52 = load %"class.std::vector.12"*, %"class.std::vector.12"** %51, align 8
  %53 = bitcast %"class.std::vector.12"* %52 to %"struct.std::_Vector_base.13"*
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %9, i64 %10
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 %10
  ret i8* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7MaxflowIxE8add_edgeEiix(%class.Maxflow*, i32, i32, i64) #0 comdat align 2 {
  %5 = alloca %class.Maxflow*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca %"struct.Maxflow<long long>::edge", align 8
  %10 = alloca %"struct.Maxflow<long long>::edge", align 8
  store %class.Maxflow* %0, %class.Maxflow** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i64 %3, i64* %8, align 8
  %11 = load %class.Maxflow*, %class.Maxflow** %5, align 8
  %12 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %11, i32 0, i32 0
  %13 = load i32, i32* %6, align 4
  %14 = sext i32 %13 to i64
  %15 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.6"* %12, i64 %14) #3
  %16 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %9, i32 0, i32 0
  %17 = load i32, i32* %7, align 4
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %9, i32 0, i32 1
  %19 = load i64, i64* %8, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %9, i32 0, i32 2
  %21 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %11, i32 0, i32 0
  %22 = load i32, i32* %7, align 4
  %23 = sext i32 %22 to i64
  %24 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.6"* %21, i64 %23) #3
  %25 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %24) #3
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %20, align 8
  call void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE9push_backEOS2_(%"class.std::vector.11"* %15, %"struct.Maxflow<long long>::edge"* dereferenceable(24) %9)
  %27 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %11, i32 0, i32 0
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.6"* %27, i64 %29) #3
  %31 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %10, i32 0, i32 0
  %32 = load i32, i32* %6, align 4
  store i32 %32, i32* %31, align 8
  %33 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %10, i32 0, i32 1
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %10, i32 0, i32 2
  %35 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %11, i32 0, i32 0
  %36 = load i32, i32* %6, align 4
  %37 = sext i32 %36 to i64
  %38 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.6"* %35, i64 %37) #3
  %39 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %38) #3
  %40 = trunc i64 %39 to i32
  %41 = sub i32 0, 1
  %42 = add i32 %40, %41
  %43 = sub nsw i32 %40, 1
  store i32 %42, i32* %34, align 8
  call void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE9push_backEOS2_(%"class.std::vector.11"* %30, %"struct.Maxflow<long long>::edge"* dereferenceable(24) %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.12"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::vector.12"*
  %6 = alloca %"class.std::vector.12"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::vector.12"*, %"class.std::vector.12"** %6, align 8
  store %"class.std::vector.12"* %8, %"class.std::vector.12"** %5
  %9 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %5
  %10 = bitcast %"class.std::vector.12"* %9 to %"struct.std::_Vector_base.13"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %4
  %14 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %5
  %15 = bitcast %"class.std::vector.12"* %14 to %"struct.std::_Vector_base.13"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %3
  %19 = alloca i32
  store i32 -1997407183, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %49
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1997407183, label %23
    i32 -2023846169, label %28
    i32 -835870413, label %45
    i32 449848683, label %48
  ]

; <label>:22:                                     ; preds = %20
  br label %49

; <label>:23:                                     ; preds = %20
  %24 = load volatile i32*, i32** %4
  %25 = load volatile i32*, i32** %3
  %26 = icmp ne i32* %24, %25
  %27 = select i1 %26, i32 -2023846169, i32 -835870413
  store i32 %27, i32* %19
  br label %49

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %5
  %30 = bitcast %"class.std::vector.12"* %29 to %"struct.std::_Vector_base.13"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %31 to %"class.std::allocator.14"*
  %33 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %5
  %34 = bitcast %"class.std::vector.12"* %33 to %"struct.std::_Vector_base.13"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load i32*, i32** %36, align 8
  %38 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.14"* dereferenceable(1) %32, i32* %37, i32* dereferenceable(4) %38)
  %39 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %5
  %40 = bitcast %"class.std::vector.12"* %39 to %"struct.std::_Vector_base.13"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41, i32 0, i32 1
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds i32, i32* %43, i32 1
  store i32* %44, i32** %42, align 8
  store i32 449848683, i32* %19
  br label %49

; <label>:45:                                     ; preds = %20
  %46 = load i32*, i32** %7, align 8
  %47 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %5
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.12"* %47, i32* dereferenceable(4) %46)
  store i32 449848683, i32* %19
  br label %49

; <label>:48:                                     ; preds = %20
  ret void

; <label>:49:                                     ; preds = %45, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.12"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %2, align 8
  %3 = load %"class.std::vector.12"*, %"class.std::vector.12"** %2, align 8
  %4 = bitcast %"class.std::vector.12"* %3 to %"struct.std::_Vector_base.13"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::vector.12"* %3 to %"struct.std::_Vector_base.13"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = add i64 %12, -8722790696829092816
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -8722790696829092816
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 4
  ret i64 %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.12"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %6 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.12"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %2, align 8
  %5 = load %"class.std::vector.12"*, %"class.std::vector.12"** %2, align 8
  %6 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  %15 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %14) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %9, i32* %13, %"class.std::allocator.14"* dereferenceable(1) %15)
          to label %16 unwind label %60

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.50
  %18 = load i32, i32* @y.51
  %19 = sub i32 %17, 887929579
  %20 = sub i32 %19, 1
  %21 = add i32 %20, 887929579
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %97

; <label>:43:                                     ; preds = %16, %97
  %44 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.13"* %44) #3
  %45 = load i32, i32* @x.50
  %46 = load i32, i32* @y.51
  %47 = add i32 %45, 1375278186
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1375278186
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %97

; <label>:59:                                     ; preds = %43
  ret void

; <label>:60:                                     ; preds = %1
  %61 = load i32, i32* @x.50
  %62 = load i32, i32* @y.51
  %63 = sub i32 %61, 879416140
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 879416140
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %99

; <label>:75:                                     ; preds = %60, %99
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %3, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %4, align 4
  %79 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.13"* %79) #3
  %80 = load i32, i32* @x.50
  %81 = load i32, i32* @y.51
  %82 = add i32 %80, -371040922
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, -371040922
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %99

; <label>:94:                                     ; preds = %75
  br label %95

; <label>:95:                                     ; preds = %94
  %96 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %96) #11
  unreachable

; <label>:97:                                     ; preds = %43, %16
  %98 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.13"* %98) #3
  br label %43

; <label>:99:                                     ; preds = %75, %60
  %100 = landingpad { i8*, i32 }
          catch i8* null
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %3, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %4, align 4
  %103 = bitcast %"class.std::vector.12"* %5 to %"struct.std::_Vector_base.13"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.13"* %103) #3
  br label %75
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN7MaxflowIxE5DinicEii(%class.Maxflow*, i32, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Maxflow*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::vector.12", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::allocator.14", align 1
  %12 = alloca i8*
  %13 = alloca i32
  %14 = alloca i64, align 8
  store %class.Maxflow* %0, %class.Maxflow** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %15 = load %class.Maxflow*, %class.Maxflow** %4, align 8
  store i64 9223372036854775807, i64* %7, align 8
  store i64 0, i64* %8, align 8
  br label %16

; <label>:16:                                     ; preds = %3, %142
  %17 = load i32, i32* %5, align 4
  call void @_ZN7MaxflowIxE3bfsEi(%class.Maxflow* %15, i32 %17)
  %18 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %15, i32 0, i32 1
  %19 = load i32, i32* %6, align 4
  %20 = sext i32 %19 to i64
  %21 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %18, i64 %20) #3
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %26

; <label>:24:                                     ; preds = %16
  %25 = load i64, i64* %8, align 8
  ret i64 %25

; <label>:26:                                     ; preds = %16
  %27 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %15, i32 0, i32 0
  %28 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"* %27) #3
  store i32 0, i32* %10, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.14"* %11) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.12"* %9, i64 %28, i32* dereferenceable(4) %10, %"class.std::allocator.14"* dereferenceable(1) %11)
          to label %29 unwind label %97

; <label>:29:                                     ; preds = %26
  %30 = load i32, i32* @x.52
  %31 = load i32, i32* @y.53
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  br i1 %53, label %55, label %190

; <label>:55:                                     ; preds = %29, %190
  %56 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %15, i32 0, i32 2
  %57 = call dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIiSaIiEEaSEOS1_(%"class.std::vector.12"* %56, %"class.std::vector.12"* dereferenceable(24) %9) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %9) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.14"* %11) #3
  %58 = load i32, i32* @x.52
  %59 = load i32, i32* @y.53
  %60 = sub i32 %58, -1413238789
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -1413238789
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %190

; <label>:84:                                     ; preds = %55
  br label %85

; <label>:85:                                     ; preds = %90, %84
  %86 = load i32, i32* %5, align 4
  %87 = load i32, i32* %6, align 4
  %88 = call i64 @_ZN7MaxflowIxE5dfs_dEiix(%class.Maxflow* %15, i32 %86, i32 %87, i64 9223372036854775807)
  store i64 %88, i64* %14, align 8
  %89 = icmp sgt i64 %88, 0
  br i1 %89, label %90, label %101

; <label>:90:                                     ; preds = %85
  %91 = load i64, i64* %14, align 8
  %92 = load i64, i64* %8, align 8
  %93 = add i64 %92, 5693602889275406139
  %94 = add i64 %93, %91
  %95 = sub i64 %94, 5693602889275406139
  %96 = add nsw i64 %92, %91
  store i64 %95, i64* %8, align 8
  br label %85

; <label>:97:                                     ; preds = %26
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %12, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %13, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.14"* %11) #3
  br label %143

; <label>:101:                                    ; preds = %85
  %102 = load i32, i32* @x.52
  %103 = load i32, i32* @y.53
  %104 = sub i32 0, 1
  %105 = add i32 %102, %104
  %106 = sub i32 %102, 1
  %107 = mul i32 %102, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %103, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  br i1 %113, label %115, label %193

; <label>:115:                                    ; preds = %101, %193
  %116 = load i32, i32* @x.52
  %117 = load i32, i32* @y.53
  %118 = add i32 %116, -332598821
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, -332598821
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  br i1 %140, label %142, label %193

; <label>:142:                                    ; preds = %115
  br label %16

; <label>:143:                                    ; preds = %97
  %144 = load i32, i32* @x.52
  %145 = load i32, i32* @y.53
  %146 = add i32 %144, 954464451
  %147 = sub i32 %146, 1
  %148 = sub i32 %147, 954464451
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = xor i1 %152, true
  %155 = xor i1 %153, true
  %156 = xor i1 false, true
  %157 = and i1 %154, false
  %158 = and i1 %152, %156
  %159 = and i1 %155, false
  %160 = and i1 %153, %156
  %161 = or i1 %157, %158
  %162 = or i1 %159, %160
  %163 = xor i1 %161, %162
  %164 = or i1 %154, %155
  %165 = xor i1 %164, true
  %166 = or i1 false, %156
  %167 = and i1 %165, %166
  %168 = or i1 %163, %167
  %169 = or i1 %152, %153
  br i1 %168, label %170, label %194

; <label>:170:                                    ; preds = %143, %194
  %171 = load i8*, i8** %12, align 8
  %172 = load i32, i32* %13, align 4
  %173 = insertvalue { i8*, i32 } undef, i8* %171, 0
  %174 = insertvalue { i8*, i32 } %173, i32 %172, 1
  %175 = load i32, i32* @x.52
  %176 = load i32, i32* @y.53
  %177 = add i32 %175, 1154122524
  %178 = sub i32 %177, 1
  %179 = sub i32 %178, 1154122524
  %180 = sub i32 %175, 1
  %181 = mul i32 %175, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %176, 10
  %185 = and i1 %183, %184
  %186 = xor i1 %183, %184
  %187 = or i1 %185, %186
  %188 = or i1 %183, %184
  br i1 %187, label %189, label %194

; <label>:189:                                    ; preds = %170
  resume { i8*, i32 } %174

; <label>:190:                                    ; preds = %55, %29
  %191 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %15, i32 0, i32 2
  %192 = call dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIiSaIiEEaSEOS1_(%"class.std::vector.12"* %191, %"class.std::vector.12"* dereferenceable(24) %9) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %9) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.14"* %11) #3
  br label %55

; <label>:193:                                    ; preds = %115, %101
  br label %115

; <label>:194:                                    ; preds = %170, %143
  %195 = load i8*, i8** %12, align 8
  %196 = load i32, i32* %13, align 4
  %197 = insertvalue { i8*, i32 } undef, i8* %195, 0
  %198 = insertvalue { i8*, i32 } %197, i32 %196, 1
  br label %170
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN7MaxflowIxED2Ev(%class.Maxflow*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.Maxflow*, align 8
  store %class.Maxflow* %0, %class.Maxflow** %2, align 8
  %3 = load %class.Maxflow*, %class.Maxflow** %2, align 8
  %4 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %3, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %4) #3
  %5 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %3, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %5) #3
  %6 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %3, i32 0, i32 1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %6) #3
  %7 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %3, i32 0, i32 0
  call void @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector.6"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIcSaIcEES2_EvT_S4_RSaIT0_E(%"class.std::vector.0"* %9, %"class.std::vector.0"* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.56
  %20 = load i32, i32* @y.57
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %119

; <label>:44:                                     ; preds = %18, %119
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %3, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %4, align 4
  %48 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %48) #3
  %49 = load i32, i32* @x.56
  %50 = load i32, i32* @y.57
  %51 = add i32 %49, -1312710082
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -1312710082
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %119

; <label>:63:                                     ; preds = %44
  br label %64

; <label>:64:                                     ; preds = %63
  %65 = load i32, i32* @x.56
  %66 = load i32, i32* @y.57
  %67 = add i32 %65, 1645618490
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 1645618490
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 true, true
  %78 = and i1 %75, true
  %79 = and i1 %73, %77
  %80 = and i1 %76, true
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 true, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  br i1 %89, label %91, label %124

; <label>:91:                                     ; preds = %64, %124
  %92 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %92) #11
  %93 = load i32, i32* @x.56
  %94 = load i32, i32* @y.57
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %124

; <label>:118:                                    ; preds = %91
  unreachable

; <label>:119:                                    ; preds = %44, %18
  %120 = landingpad { i8*, i32 }
          catch i8* null
  %121 = extractvalue { i8*, i32 } %120, 0
  store i8* %121, i8** %3, align 8
  %122 = extractvalue { i8*, i32 } %120, 1
  store i32 %122, i32* %4, align 4
  %123 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %123) #3
  br label %44

; <label>:124:                                    ; preds = %91, %64
  %125 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %125) #11
  br label %91
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector.6"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  %6 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.11"*, %"class.std::vector.11"** %8, align 8
  %10 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.11"*, %"class.std::vector.11"** %12, align 8
  %14 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %15 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.11"* %9, %"class.std::vector.11"* %13, %"class.std::allocator.8"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base.7"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base.7"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.11"*, %"class.std::vector.11"*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.60
  %7 = load i32, i32* @y.61
  %8 = sub i32 %6, 1272745782
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1272745782
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 966570314, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %79
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 966570314, label %20
    i32 -687673344, label %40
    i32 -1560726558, label %72
    i32 -1046412885, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %79

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -687673344, i32 -1046412885
  store i32 %39, i32* %16
  br label %79

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.11"*, align 8
  %42 = alloca %"class.std::vector.11"*, align 8
  %43 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %41, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %42, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %43, align 8
  %44 = load %"class.std::vector.11"*, %"class.std::vector.11"** %41, align 8
  %45 = load %"class.std::vector.11"*, %"class.std::vector.11"** %42, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.11"* %44, %"class.std::vector.11"* %45)
  %46 = load i32, i32* @x.60
  %47 = load i32, i32* @y.61
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1560726558, i32 -1046412885
  store i32 %71, i32* %16
  br label %79

; <label>:72:                                     ; preds = %17
  ret void

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.std::vector.11"*, align 8
  %75 = alloca %"class.std::vector.11"*, align 8
  %76 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %74, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %75, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %76, align 8
  %77 = load %"class.std::vector.11"*, %"class.std::vector.11"** %74, align 8
  %78 = load %"class.std::vector.11"*, %"class.std::vector.11"** %75, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.11"* %77, %"class.std::vector.11"* %78)
  store i32 -687673344, i32* %16
  br label %79

; <label>:79:                                     ; preds = %73, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.62
  %6 = load i32, i32* @y.63
  %7 = add i32 %5, 2000339580
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2000339580
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1305302384, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1305302384, label %19
    i32 -88751834, label %39
    i32 -180181407, label %71
    i32 -16164799, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -88751834, i32 -16164799
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %40, align 8
  %41 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %42 to %"class.std::allocator.8"*
  store %"class.std::allocator.8"* %43, %"class.std::allocator.8"** %2
  %44 = load i32, i32* @x.62
  %45 = load i32, i32* @y.63
  %46 = add i32 %44, -1641911666
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1641911666
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -180181407, i32 -16164799
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator.8"*, %"class.std::allocator.8"** %2
  ret %"class.std::allocator.8"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %74, align 8
  %75 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %76 to %"class.std::allocator.8"*
  store i32 -88751834, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base.7"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.64
  %3 = load i32, i32* @y.65
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %114

; <label>:15:                                     ; preds = %1, %114
  %16 = alloca %"struct.std::_Vector_base.7"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %16, align 8
  %19 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %16, align 8
  %20 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %20, i32 0, i32 0
  %22 = load %"class.std::vector.11"*, %"class.std::vector.11"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %19, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %23, i32 0, i32 2
  %25 = load %"class.std::vector.11"*, %"class.std::vector.11"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %19, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %"class.std::vector.11"*, %"class.std::vector.11"** %27, align 8
  %29 = ptrtoint %"class.std::vector.11"* %25 to i64
  %30 = ptrtoint %"class.std::vector.11"* %28 to i64
  %31 = sub i64 %29, -1278067929112854913
  %32 = sub i64 %31, %30
  %33 = add i64 %32, -1278067929112854913
  %34 = sub i64 %29, %30
  %35 = sdiv exact i64 %33, 24
  %36 = load i32, i32* @x.64
  %37 = load i32, i32* @y.65
  %38 = sub i32 %36, 522516252
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 522516252
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %114

; <label>:62:                                     ; preds = %15
  invoke void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.7"* %19, %"class.std::vector.11"* %22, i64 %35)
          to label %63 unwind label %65

; <label>:63:                                     ; preds = %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %64) #3
  ret void

; <label>:65:                                     ; preds = %62
  %66 = load i32, i32* @x.64
  %67 = load i32, i32* @y.65
  %68 = sub i32 %66, 1915561736
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 1915561736
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %191

; <label>:80:                                     ; preds = %65, %191
  %81 = landingpad { i8*, i32 }
          catch i8* null
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %17, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %18, align 4
  %84 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %84) #3
  %85 = load i32, i32* @x.64
  %86 = load i32, i32* @y.65
  %87 = sub i32 %85, -35703372
  %88 = sub i32 %87, 1
  %89 = add i32 %88, -35703372
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %191

; <label>:111:                                    ; preds = %80
  br label %112

; <label>:112:                                    ; preds = %111
  %113 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %113) #11
  unreachable

; <label>:114:                                    ; preds = %15, %1
  %115 = alloca %"struct.std::_Vector_base.7"*, align 8
  %116 = alloca i8*
  %117 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %115, align 8
  %118 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %115, align 8
  %119 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %118, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %119, i32 0, i32 0
  %121 = load %"class.std::vector.11"*, %"class.std::vector.11"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %118, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %122, i32 0, i32 2
  %124 = load %"class.std::vector.11"*, %"class.std::vector.11"** %123, align 8
  %125 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %118, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %125, i32 0, i32 0
  %127 = load %"class.std::vector.11"*, %"class.std::vector.11"** %126, align 8
  %128 = ptrtoint %"class.std::vector.11"* %124 to i64
  %129 = ptrtoint %"class.std::vector.11"* %127 to i64
  %130 = shl i64 %128, %129
  %131 = sub i64 0, -7868960809952098048
  %132 = sub i64 %131, %128
  %133 = add i64 %132, -7868960809952098048
  %134 = sub i64 0, %128
  %135 = sub i64 0, %129
  %136 = sub i64 %133, %135
  %137 = add i64 %133, %129
  %138 = shl i64 %128, %129
  %139 = sub i64 0, %128
  %140 = add i64 0, %139
  %141 = sub i64 0, %128
  %142 = add i64 %140, 3299449093118326755
  %143 = add i64 %142, %129
  %144 = sub i64 %143, 3299449093118326755
  %145 = add i64 %140, %129
  %146 = shl i64 %128, %129
  %147 = sub i64 0, %128
  %148 = add i64 0, %147
  %149 = sub i64 0, %128
  %150 = sub i64 %148, -1821751073489371386
  %151 = add i64 %150, %129
  %152 = add i64 %151, -1821751073489371386
  %153 = add i64 %148, %129
  %154 = sub i64 %128, 8009802052816009075
  %155 = sub i64 %154, %129
  %156 = add i64 %155, 8009802052816009075
  %157 = sub i64 %128, %129
  %158 = sub i64 0, 8487408231547230163
  %159 = sub i64 %158, %156
  %160 = add i64 %159, 8487408231547230163
  %161 = sub i64 0, %156
  %162 = sub i64 0, 24
  %163 = sub i64 %160, %162
  %164 = add i64 %160, 24
  %165 = sub i64 0, -4206743212966713327
  %166 = sub i64 %165, %156
  %167 = add i64 %166, -4206743212966713327
  %168 = sub i64 0, %156
  %169 = sub i64 0, %167
  %170 = sub i64 0, 24
  %171 = add i64 %169, %170
  %172 = sub i64 0, %171
  %173 = add i64 %167, 24
  %174 = shl i64 %156, 24
  %175 = add i64 0, -8378349701297914813
  %176 = sub i64 %175, %156
  %177 = sub i64 %176, -8378349701297914813
  %178 = sub i64 0, %156
  %179 = sub i64 %177, -9015195808699985824
  %180 = add i64 %179, 24
  %181 = add i64 %180, -9015195808699985824
  %182 = add i64 %177, 24
  %183 = shl i64 %156, 24
  %184 = shl i64 %156, 24
  %185 = sub i64 0, 24
  %186 = add i64 %156, %185
  %187 = sub i64 %156, 24
  %188 = mul i64 %186, 24
  %189 = shl i64 %156, 24
  %190 = sdiv exact i64 %156, 24
  br label %15

; <label>:191:                                    ; preds = %80, %65
  %192 = landingpad { i8*, i32 }
          catch i8* null
  %193 = extractvalue { i8*, i32 } %192, 0
  store i8* %193, i8** %17, align 8
  %194 = extractvalue { i8*, i32 } %192, 1
  store i32 %194, i32* %18, align 4
  %195 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %195) #3
  br label %80
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.11"*, %"class.std::vector.11"*) #0 comdat {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %4, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %6 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN7MaxflowIxE4edgeESaIS5_EEEEvT_S9_(%"class.std::vector.11"* %5, %"class.std::vector.11"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN7MaxflowIxE4edgeESaIS5_EEEEvT_S9_(%"class.std::vector.11"*, %"class.std::vector.11"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.11"**
  %4 = alloca %"class.std::vector.11"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.70
  %8 = load i32, i32* @y.71
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 704005554, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %81
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 704005554, label %20
    i32 327291546, label %28
    i32 -992923792, label %60
    i32 -327461155, label %61
    i32 584679281, label %68
    i32 1388477274, label %72
    i32 -167532356, label %77
    i32 -830377094, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %81

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 327291546, i32 -830377094
  store i32 %27, i32* %16
  br label %81

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"** %29, %"class.std::vector.11"*** %4
  %30 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"** %30, %"class.std::vector.11"*** %3
  %31 = load volatile %"class.std::vector.11"**, %"class.std::vector.11"*** %4
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %31, align 8
  %32 = load volatile %"class.std::vector.11"**, %"class.std::vector.11"*** %3
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %32, align 8
  %33 = load i32, i32* @x.70
  %34 = load i32, i32* @y.71
  %35 = add i32 %33, -843844697
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -843844697
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -992923792, i32 -830377094
  store i32 %59, i32* %16
  br label %81

; <label>:60:                                     ; preds = %17
  store i32 -327461155, i32* %16
  br label %81

; <label>:61:                                     ; preds = %17
  %62 = load volatile %"class.std::vector.11"**, %"class.std::vector.11"*** %4
  %63 = load %"class.std::vector.11"*, %"class.std::vector.11"** %62, align 8
  %64 = load volatile %"class.std::vector.11"**, %"class.std::vector.11"*** %3
  %65 = load %"class.std::vector.11"*, %"class.std::vector.11"** %64, align 8
  %66 = icmp ne %"class.std::vector.11"* %63, %65
  %67 = select i1 %66, i32 584679281, i32 -167532356
  store i32 %67, i32* %16
  br label %81

; <label>:68:                                     ; preds = %17
  %69 = load volatile %"class.std::vector.11"**, %"class.std::vector.11"*** %4
  %70 = load %"class.std::vector.11"*, %"class.std::vector.11"** %69, align 8
  %71 = call %"class.std::vector.11"* @_ZSt11__addressofISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.11"* dereferenceable(24) %70) #3
  call void @_ZSt8_DestroyISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEvPT_(%"class.std::vector.11"* %71)
  store i32 1388477274, i32* %16
  br label %81

; <label>:72:                                     ; preds = %17
  %73 = load volatile %"class.std::vector.11"**, %"class.std::vector.11"*** %4
  %74 = load %"class.std::vector.11"*, %"class.std::vector.11"** %73, align 8
  %75 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %74, i32 1
  %76 = load volatile %"class.std::vector.11"**, %"class.std::vector.11"*** %4
  store %"class.std::vector.11"* %75, %"class.std::vector.11"** %76, align 8
  store i32 -327461155, i32* %16
  br label %81

; <label>:77:                                     ; preds = %17
  ret void

; <label>:78:                                     ; preds = %17
  %79 = alloca %"class.std::vector.11"*, align 8
  %80 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %79, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %80, align 8
  store i32 327291546, i32* %16
  br label %81

; <label>:81:                                     ; preds = %78, %72, %68, %61, %60, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEvPT_(%"class.std::vector.11"*) #5 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.72
  %5 = load i32, i32* @y.73
  %6 = add i32 %4, 1181289890
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1181289890
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1698688789, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1698688789, label %18
    i32 -1166188501, label %38
    i32 829800130, label %68
    i32 1736215642, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1166188501, i32 1736215642
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %39, align 8
  %40 = load %"class.std::vector.11"*, %"class.std::vector.11"** %39, align 8
  call void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EED2Ev(%"class.std::vector.11"* %40) #3
  %41 = load i32, i32* @x.72
  %42 = load i32, i32* @y.73
  %43 = sub i32 %41, 215381367
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 215381367
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 829800130, i32 1736215642
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %70, align 8
  %71 = load %"class.std::vector.11"*, %"class.std::vector.11"** %70, align 8
  call void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EED2Ev(%"class.std::vector.11"* %71) #3
  store i32 -1166188501, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.11"* @_ZSt11__addressofISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.11"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %4 = bitcast %"class.std::vector.11"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.11"*
  ret %"class.std::vector.11"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EED2Ev(%"class.std::vector.11"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.11"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %6 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.17"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %8, align 8
  %10 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.17"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %12, align 8
  %14 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.17"*
  %15 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %14) #3
  invoke void @_ZSt8_DestroyIPN7MaxflowIxE4edgeES2_EvT_S4_RSaIT0_E(%"struct.Maxflow<long long>::edge"* %9, %"struct.Maxflow<long long>::edge"* %13, %"class.std::allocator.18"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.17"*
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.17"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.76
  %20 = load i32, i32* @y.77
  %21 = sub i32 %19, 418471174
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 418471174
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %79

; <label>:45:                                     ; preds = %18, %79
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %3, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %4, align 4
  %49 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.17"*
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.17"* %49) #3
  %50 = load i32, i32* @x.76
  %51 = load i32, i32* @y.77
  %52 = sub i32 %50, 1196896492
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1196896492
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %79

; <label>:76:                                     ; preds = %45
  br label %77

; <label>:77:                                     ; preds = %76
  %78 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %78) #11
  unreachable

; <label>:79:                                     ; preds = %45, %18
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %3, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %4, align 4
  %83 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.17"*
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.17"* %83) #3
  br label %45
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN7MaxflowIxE4edgeES2_EvT_S4_RSaIT0_E(%"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"class.std::allocator.18"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %5 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %6 = alloca %"class.std::allocator.18"*, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %4, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %5, align 8
  store %"class.std::allocator.18"* %2, %"class.std::allocator.18"** %6, align 8
  %7 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4, align 8
  %8 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %5, align 8
  call void @_ZSt8_DestroyIPN7MaxflowIxE4edgeEEvT_S4_(%"struct.Maxflow<long long>::edge"* %7, %"struct.Maxflow<long long>::edge"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.18"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.80
  %6 = load i32, i32* @y.81
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2025029388, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2025029388, label %18
    i32 368020749, label %38
    i32 -1397858795, label %58
    i32 1184097988, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 368020749, i32 1184097988
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.17"*, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %39, align 8
  %40 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %41 to %"class.std::allocator.18"*
  store %"class.std::allocator.18"* %42, %"class.std::allocator.18"** %2
  %43 = load i32, i32* @x.80
  %44 = load i32, i32* @y.81
  %45 = add i32 %43, -2095908581
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -2095908581
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1397858795, i32 1184097988
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::allocator.18"*, %"class.std::allocator.18"** %2
  ret %"class.std::allocator.18"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Vector_base.17"*, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %61, align 8
  %62 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %63 to %"class.std::allocator.18"*
  store i32 368020749, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.17"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.17"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %2, align 8
  %5 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %13, align 8
  %15 = ptrtoint %"struct.Maxflow<long long>::edge"* %11 to i64
  %16 = ptrtoint %"struct.Maxflow<long long>::edge"* %14 to i64
  %17 = sub i64 %15, -5337009736354619989
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -5337009736354619989
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.17"* %5, %"struct.Maxflow<long long>::edge"* %8, i64 %21)
          to label %22 unwind label %78

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.82
  %24 = load i32, i32* @y.83
  %25 = add i32 %23, -266215480
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -266215480
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %85

; <label>:49:                                     ; preds = %22, %85
  %50 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %50) #3
  %51 = load i32, i32* @x.82
  %52 = load i32, i32* @y.83
  %53 = sub i32 %51, -1495675296
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1495675296
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %85

; <label>:77:                                     ; preds = %49
  ret void

; <label>:78:                                     ; preds = %1
  %79 = landingpad { i8*, i32 }
          catch i8* null
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %3, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %4, align 4
  %82 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %82) #3
  br label %83

; <label>:83:                                     ; preds = %78
  %84 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %84) #11
  unreachable

; <label>:85:                                     ; preds = %49, %22
  %86 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %86) #3
  br label %49
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN7MaxflowIxE4edgeEEvT_S4_(%"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*) #0 comdat {
  %3 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %4 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %3, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %4, align 8
  %5 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %3, align 8
  %6 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN7MaxflowIxE4edgeEEEvT_S6_(%"struct.Maxflow<long long>::edge"* %5, %"struct.Maxflow<long long>::edge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN7MaxflowIxE4edgeEEEvT_S6_(%"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*) #5 comdat align 2 {
  %3 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %4 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %3, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.17"*, %"struct.Maxflow<long long>::edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.Maxflow<long long>::edge"*
  %5 = alloca %"struct.std::_Vector_base.17"*
  %6 = alloca %"struct.std::_Vector_base.17"*, align 8
  %7 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %6, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %6, align 8
  store %"struct.std::_Vector_base.17"* %9, %"struct.std::_Vector_base.17"** %5
  %10 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  store %"struct.Maxflow<long long>::edge"* %10, %"struct.Maxflow<long long>::edge"** %4
  %11 = alloca i32
  store i32 1554291790, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1554291790, label %15
    i32 633801662, label %19
    i32 695231330, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4
  %17 = icmp ne %"struct.Maxflow<long long>::edge"* %16, null
  %18 = select i1 %17, i32 633801662, i32 695231330
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %21 to %"class.std::allocator.18"*
  %23 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE10deallocateERS3_PS2_m(%"class.std::allocator.18"* dereferenceable(1) %22, %"struct.Maxflow<long long>::edge"* %23, i64 %24)
  store i32 695231330, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %3 to %"class.std::allocator.18"*
  call void @_ZNSaIN7MaxflowIxE4edgeEED2Ev(%"class.std::allocator.18"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE10deallocateERS3_PS2_m(%"class.std::allocator.18"* dereferenceable(1), %"struct.Maxflow<long long>::edge"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.92
  %7 = load i32, i32* @y.93
  %8 = sub i32 %6, -795465604
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -795465604
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1815782503, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1815782503, label %20
    i32 -150962386, label %28
    i32 684713257, label %63
    i32 -1093932217, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -150962386, i32 -1093932217
  store i32 %27, i32* %16
  br label %72

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.18"*, align 8
  %30 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %29, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %29, align 8
  %33 = bitcast %"class.std::allocator.18"* %32 to %"class.__gnu_cxx::new_allocator.19"*
  %34 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.19"* %33, %"struct.Maxflow<long long>::edge"* %34, i64 %35)
  %36 = load i32, i32* @x.92
  %37 = load i32, i32* @y.93
  %38 = add i32 %36, -1660055954
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1660055954
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 684713257, i32 -1093932217
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.18"*, align 8
  %66 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %67 = alloca i64, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %65, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %66, align 8
  store i64 %2, i64* %67, align 8
  %68 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %65, align 8
  %69 = bitcast %"class.std::allocator.18"* %68 to %"class.__gnu_cxx::new_allocator.19"*
  %70 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %66, align 8
  %71 = load i64, i64* %67, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.19"* %69, %"struct.Maxflow<long long>::edge"* %70, i64 %71)
  store i32 -150962386, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.19"*, %"struct.Maxflow<long long>::edge"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.94
  %7 = load i32, i32* @y.95
  %8 = sub i32 %6, 1762785596
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1762785596
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1622667059, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1622667059, label %20
    i32 1498308745, label %40
    i32 1266647515, label %62
    i32 768609320, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1498308745, i32 768609320
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %42 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %41, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %41, align 8
  %45 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %42, align 8
  %46 = bitcast %"struct.Maxflow<long long>::edge"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.94
  %48 = load i32, i32* @y.95
  %49 = sub i32 %47, 163370015
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 163370015
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1266647515, i32 768609320
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %65 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %64, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %64, align 8
  %68 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %65, align 8
  %69 = bitcast %"struct.Maxflow<long long>::edge"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 1498308745, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN7MaxflowIxE4edgeEED2Ev(%"class.std::allocator.18"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.18"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %2, align 8
  %3 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %2, align 8
  %4 = bitcast %"class.std::allocator.18"* %3 to %"class.__gnu_cxx::new_allocator.19"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.19"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.19"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.98
  %5 = load i32, i32* @y.99
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1986968398, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1986968398, label %17
    i32 -932465251, label %25
    i32 583143772, label %43
    i32 -2052807478, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -932465251, i32 -2052807478
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %26, align 8
  %28 = load i32, i32* @x.98
  %29 = load i32, i32* @y.99
  %30 = add i32 %28, 1124306808
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1124306808
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 583143772, i32 -2052807478
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %45, align 8
  store i32 -932465251, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.7"*, %"class.std::vector.11"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.11"*
  %5 = alloca %"struct.std::_Vector_base.7"*
  %6 = alloca %"struct.std::_Vector_base.7"*, align 8
  %7 = alloca %"class.std::vector.11"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %6, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %6, align 8
  store %"struct.std::_Vector_base.7"* %9, %"struct.std::_Vector_base.7"** %5
  %10 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  store %"class.std::vector.11"* %10, %"class.std::vector.11"** %4
  %11 = alloca i32
  store i32 49662384, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 49662384, label %15
    i32 -174231398, label %19
    i32 -1253724839, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %4
  %17 = icmp ne %"class.std::vector.11"* %16, null
  %18 = select i1 %17, i32 -174231398, i32 -1253724839
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %21 to %"class.std::allocator.8"*
  %23 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEE10deallocateERS6_PS5_m(%"class.std::allocator.8"* dereferenceable(1) %22, %"class.std::vector.11"* %23, i64 %24)
  store i32 -1253724839, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.8"*
  call void @_ZNSaISt6vectorIN7MaxflowIxE4edgeESaIS2_EEED2Ev(%"class.std::allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEE10deallocateERS6_PS5_m(%"class.std::allocator.8"* dereferenceable(1), %"class.std::vector.11"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.8"*, align 8
  %5 = alloca %"class.std::vector.11"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %4, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  %8 = bitcast %"class.std::allocator.8"* %7 to %"class.__gnu_cxx::new_allocator.9"*
  %9 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.9"* %8, %"class.std::vector.11"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.9"*, %"class.std::vector.11"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %5 = alloca %"class.std::vector.11"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %4, align 8
  %8 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %9 = bitcast %"class.std::vector.11"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN7MaxflowIxE4edgeESaIS2_EEED2Ev(%"class.std::allocator.8"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %2, align 8
  %3 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %2, align 8
  %4 = bitcast %"class.std::allocator.8"* %3 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEED2Ev(%"class.__gnu_cxx::new_allocator.9"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEED2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.110
  %5 = load i32, i32* @y.111
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 232509508, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %46
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 232509508, label %17
    i32 783659794, label %25
    i32 97922257, label %42
    i32 2126592864, label %43
  ]

; <label>:16:                                     ; preds = %14
  br label %46

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 783659794, i32 2126592864
  store i32 %24, i32* %13
  br label %46

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %26, align 8
  %28 = load i32, i32* @x.110
  %29 = load i32, i32* @y.111
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 97922257, i32 2126592864
  store i32 %41, i32* %13
  br label %46

; <label>:42:                                     ; preds = %14
  ret void

; <label>:43:                                     ; preds = %14
  %44 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %44, align 8
  %45 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %44, align 8
  store i32 783659794, i32* %13
  br label %46

; <label>:46:                                     ; preds = %43, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.112
  %5 = load i32, i32* @y.113
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %122

; <label>:17:                                     ; preds = %3, %122
  %18 = alloca %"struct.std::_Vector_base.1"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::allocator.2"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %18, align 8
  store i64 %1, i64* %19, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %20, align 8
  %23 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %18, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %23, i32 0, i32 0
  %25 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %20, align 8
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %24, %"class.std::allocator.2"* dereferenceable(1) %25) #3
  %26 = load i64, i64* %19, align 8
  %27 = load i32, i32* @x.112
  %28 = load i32, i32* @y.113
  %29 = sub i32 %27, -1409431194
  %30 = sub i32 %29, 1
  %31 = add i32 %30, -1409431194
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %122

; <label>:41:                                     ; preds = %17
  invoke void @_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %23, i64 %26)
          to label %42 unwind label %84

; <label>:42:                                     ; preds = %41
  %43 = load i32, i32* @x.112
  %44 = load i32, i32* @y.113
  %45 = add i32 %43, 1435054528
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1435054528
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %132

; <label>:69:                                     ; preds = %42, %132
  %70 = load i32, i32* @x.112
  %71 = load i32, i32* @y.113
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %132

; <label>:83:                                     ; preds = %69
  ret void

; <label>:84:                                     ; preds = %41
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %21, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %22, align 4
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %24) #3
  br label %88

; <label>:88:                                     ; preds = %84
  %89 = load i32, i32* @x.112
  %90 = load i32, i32* @y.113
  %91 = add i32 %89, -1807823855
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, -1807823855
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %133

; <label>:103:                                    ; preds = %88, %133
  %104 = load i8*, i8** %21, align 8
  %105 = load i32, i32* %22, align 4
  %106 = insertvalue { i8*, i32 } undef, i8* %104, 0
  %107 = insertvalue { i8*, i32 } %106, i32 %105, 1
  %108 = load i32, i32* @x.112
  %109 = load i32, i32* @y.113
  %110 = sub i32 0, 1
  %111 = add i32 %108, %110
  %112 = sub i32 %108, 1
  %113 = mul i32 %108, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %109, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %133

; <label>:121:                                    ; preds = %103
  resume { i8*, i32 } %107

; <label>:122:                                    ; preds = %17, %3
  %123 = alloca %"struct.std::_Vector_base.1"*, align 8
  %124 = alloca i64, align 8
  %125 = alloca %"class.std::allocator.2"*, align 8
  %126 = alloca i8*
  %127 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %123, align 8
  store i64 %1, i64* %124, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %125, align 8
  %128 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %123, align 8
  %129 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %128, i32 0, i32 0
  %130 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %125, align 8
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %129, %"class.std::allocator.2"* dereferenceable(1) %130) #3
  %131 = load i64, i64* %124, align 8
  br label %17

; <label>:132:                                    ; preds = %69, %42
  br label %69

; <label>:133:                                    ; preds = %103, %88
  %134 = load i8*, i8** %21, align 8
  %135 = load i32, i32* %22, align 4
  %136 = insertvalue { i8*, i32 } undef, i8* %134, 0
  %137 = insertvalue { i8*, i32 } %136, i32 %135, 1
  br label %103
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEE21_M_default_initializeEm(%"class.std::vector.0"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %12 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %11) #3
  %13 = call i8* @_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E(i8* %9, i64 %10, %"class.std::allocator.2"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %15, i32 0, i32 1
  store i8* %13, i8** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.116
  %3 = load i32, i32* @y.117
  %4 = add i32 %2, -1322618497
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1322618497
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %82

; <label>:28:                                     ; preds = %1, %82
  %29 = alloca %"struct.std::_Vector_base.1"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %29, align 8
  %32 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = ptrtoint i8* %38 to i64
  %43 = ptrtoint i8* %41 to i64
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = load i32, i32* @x.116
  %48 = load i32, i32* @y.117
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %82

; <label>:72:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm(%"struct.std::_Vector_base.1"* %32, i8* %35, i64 %45)
          to label %73 unwind label %75

; <label>:73:                                     ; preds = %72
  %74 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %74) #3
  ret void

; <label>:75:                                     ; preds = %72
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %30, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %31, align 4
  %79 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %79) #3
  br label %80

; <label>:80:                                     ; preds = %75
  %81 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %81) #11
  unreachable

; <label>:82:                                     ; preds = %28, %1
  %83 = alloca %"struct.std::_Vector_base.1"*, align 8
  %84 = alloca i8*
  %85 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %83, align 8
  %86 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %83, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %86, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %90, i32 0, i32 2
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %86, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %93, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = ptrtoint i8* %92 to i64
  %97 = ptrtoint i8* %95 to i64
  %98 = sub i64 0, %96
  %99 = add i64 0, %98
  %100 = sub i64 0, %96
  %101 = sub i64 0, %99
  %102 = sub i64 0, %97
  %103 = add i64 %101, %102
  %104 = sub i64 0, %103
  %105 = add i64 %99, %97
  %106 = sub i64 0, %97
  %107 = add i64 %96, %106
  %108 = sub i64 %96, %97
  %109 = mul i64 %107, %97
  %110 = shl i64 %96, %97
  %111 = sub i64 0, -8545228713537308065
  %112 = sub i64 %111, %96
  %113 = add i64 %112, -8545228713537308065
  %114 = sub i64 0, %96
  %115 = sub i64 0, %113
  %116 = sub i64 0, %97
  %117 = add i64 %115, %116
  %118 = sub i64 0, %117
  %119 = add i64 %113, %97
  %120 = sub i64 0, %97
  %121 = add i64 %96, %120
  %122 = sub i64 %96, %97
  %123 = mul i64 %121, %97
  %124 = sub i64 0, %97
  %125 = add i64 %96, %124
  %126 = sub i64 %96, %97
  %127 = mul i64 %125, %97
  %128 = sub i64 %96, 8380778328193336207
  %129 = sub i64 %128, %97
  %130 = add i64 %129, 8380778328193336207
  %131 = sub i64 %96, %97
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.118
  %6 = load i32, i32* @y.119
  %7 = sub i32 %5, 822564118
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 822564118
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 543608774, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 543608774, label %19
    i32 902889066, label %39
    i32 -1274605915, label %62
    i32 1152750833, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 902889066, i32 1152750833
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %0, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %40, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %41, align 8
  %42 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %42 to %"class.std::allocator.2"*
  %44 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %41, align 8
  call void @_ZNSaIcEC2ERKS_(%"class.std::allocator.2"* %43, %"class.std::allocator.2"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %42, i32 0, i32 0
  store i8* null, i8** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %42, i32 0, i32 1
  store i8* null, i8** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %42, i32 0, i32 2
  store i8* null, i8** %47, align 8
  %48 = load i32, i32* @x.118
  %49 = load i32, i32* @y.119
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1274605915, i32 1152750833
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  %65 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %0, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %64, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %65, align 8
  %66 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %64, align 8
  %67 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %66 to %"class.std::allocator.2"*
  %68 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %65, align 8
  call void @_ZNSaIcEC2ERKS_(%"class.std::allocator.2"* %67, %"class.std::allocator.2"* dereferenceable(1) %68) #3
  %69 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %66, i32 0, i32 0
  store i8* null, i8** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %66, i32 0, i32 1
  store i8* null, i8** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %66, i32 0, i32 2
  store i8* null, i8** %71, align 8
  store i32 902889066, i32* %15
  br label %72

; <label>:72:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.120
  %6 = load i32, i32* @y.121
  %7 = sub i32 %5, 1449562281
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1449562281
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1904052068, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1904052068, label %19
    i32 -508425816, label %27
    i32 -456932306, label %61
    i32 -1497469516, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -508425816, i32 -1497469516
  store i32 %26, i32* %15
  br label %82

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.1"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call i8* @_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %33, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %38, i32 0, i32 1
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %45, i32 0, i32 2
  store i8* %44, i8** %46, align 8
  %47 = load i32, i32* @x.120
  %48 = load i32, i32* @y.121
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -456932306, i32 -1497469516
  store i32 %60, i32* %15
  br label %82

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Vector_base.1"*, align 8
  %64 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %63, align 8
  store i64 %1, i64* %64, align 8
  %65 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %63, align 8
  %66 = load i64, i64* %64, align 8
  %67 = call i8* @_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %65, i64 %66)
  %68 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %68, i32 0, i32 0
  store i8* %67, i8** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %73, i32 0, i32 1
  store i8* %72, i8** %74, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %75, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = load i64, i64* %64, align 8
  %79 = getelementptr inbounds i8, i8* %77, i64 %78
  %80 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %80, i32 0, i32 2
  store i8* %79, i8** %81, align 8
  store i32 -508425816, i32* %15
  br label %82

; <label>:82:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %0, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaIcED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSaIcEC2ERKS_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i8*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %8, %"struct.std::_Vector_base.1"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -1048131685, i32* %10
  %11 = alloca i8*
  br label %12

; <label>:12:                                     ; preds = %2, %66
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -1048131685, label %15
    i32 840733189, label %19
    i32 -1642274815, label %35
    i32 1018781899, label %55
    i32 -587755717, label %57
    i32 -1155578443, label %58
    i32 484357739, label %60
  ]

; <label>:14:                                     ; preds = %12
  br label %66

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 840733189, i32 -587755717
  store i32 %18, i32* %10
  br label %66

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.124
  %21 = load i32, i32* @y.125
  %22 = add i32 %20, 792550414
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 792550414
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -1642274815, i32 484357739
  store i32 %34, i32* %10
  br label %66

; <label>:35:                                     ; preds = %12
  %36 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %37 to %"class.std::allocator.2"*
  %39 = load i64, i64* %7, align 8
  %40 = call i8* @_ZNSt16allocator_traitsISaIcEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %38, i64 %39)
  store i8* %40, i8** %3
  %41 = load i32, i32* @x.124
  %42 = load i32, i32* @y.125
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1018781899, i32 484357739
  store i32 %54, i32* %10
  br label %66

; <label>:55:                                     ; preds = %12
  store i32 -1155578443, i32* %10
  %56 = load volatile i8*, i8** %3
  store i8* %56, i8** %11
  br label %66

; <label>:57:                                     ; preds = %12
  store i32 -1155578443, i32* %10
  store i8* null, i8** %11
  br label %66

; <label>:58:                                     ; preds = %12
  %59 = load i8*, i8** %11
  ret i8* %59

; <label>:60:                                     ; preds = %12
  %61 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %62 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %62 to %"class.std::allocator.2"*
  %64 = load i64, i64* %7, align 8
  %65 = call i8* @_ZNSt16allocator_traitsISaIcEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %63, i64 %64)
  store i32 -1642274815, i32* %10
  br label %66

; <label>:66:                                     ; preds = %60, %57, %55, %35, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZNSt16allocator_traitsISaIcEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call i8* @_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret i8* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 66757296, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %26
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 66757296, label %16
    i32 1897068497, label %21
    i32 53454979, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %26

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1897068497, i32 53454979
  store i32 %20, i32* %12
  br label %26

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 1
  %25 = call i8* @_Znwm(i64 %24)
  ret i8* %25

; <label>:26:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.130
  %5 = load i32, i32* @y.131
  %6 = add i32 %4, -1755845438
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1755845438
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1370057494, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1370057494, label %18
    i32 553728786, label %38
    i32 -1443802193, label %55
    i32 -1125296324, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 553728786, i32 -1125296324
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %41 = load i32, i32* @x.130
  %42 = load i32, i32* @y.131
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1443802193, i32 -1125296324
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret i64 -1

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  store i32 553728786, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: nounwind
declare void @_ZNSaIcED2Ev(%"class.std::allocator.2"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E(i8*, i64, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i8* @_ZSt25__uninitialized_default_nIPcmET_S1_T0_(i8* %7, i64 %8)
  ret i8* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt25__uninitialized_default_nIPcmET_S1_T0_(i8*, i64) #0 comdat {
  %3 = alloca i8*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.136
  %7 = load i32, i32* @y.137
  %8 = add i32 %6, -1592979511
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1592979511
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1099955502, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1099955502, label %20
    i32 66410479, label %28
    i32 1771587236, label %50
    i32 -1603105512, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 66410479, i32 -1603105512
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca i8*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8, align 1
  store i8* %0, i8** %29, align 8
  store i64 %1, i64* %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load i8*, i8** %29, align 8
  %33 = load i64, i64* %30, align 8
  %34 = call i8* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_(i8* %32, i64 %33)
  store i8* %34, i8** %3
  %35 = load i32, i32* @x.136
  %36 = load i32, i32* @y.137
  %37 = add i32 %35, -1913829913
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1913829913
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1771587236, i32 -1603105512
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  %51 = load volatile i8*, i8** %3
  ret i8* %51

; <label>:52:                                     ; preds = %17
  %53 = alloca i8*, align 8
  %54 = alloca i64, align 8
  %55 = alloca i8, align 1
  store i8* %0, i8** %53, align 8
  store i64 %1, i64* %54, align 8
  store i8 1, i8* %55, align 1
  %56 = load i8*, i8** %53, align 8
  %57 = load i64, i64* %54, align 8
  %58 = call i8* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_(i8* %56, i64 %57)
  store i32 66410479, i32* %16
  br label %59

; <label>:59:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.138
  %7 = load i32, i32* @y.139
  %8 = add i32 %6, -646423039
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -646423039
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1459481700, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1459481700, label %20
    i32 -31992468, label %40
    i32 -766432707, label %73
    i32 603472748, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -31992468, i32 603472748
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca i8*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i8, align 1
  store i8* %0, i8** %41, align 8
  store i64 %1, i64* %42, align 8
  %44 = load i8*, i8** %41, align 8
  %45 = load i64, i64* %42, align 8
  store i8 0, i8* %43, align 1
  %46 = call i8* @_ZSt6fill_nIPcmcET_S1_T0_RKT1_(i8* %44, i64 %45, i8* dereferenceable(1) %43)
  store i8* %46, i8** %3
  %47 = load i32, i32* @x.138
  %48 = load i32, i32* @y.139
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -766432707, i32 603472748
  store i32 %72, i32* %16
  br label %82

; <label>:73:                                     ; preds = %17
  %74 = load volatile i8*, i8** %3
  ret i8* %74

; <label>:75:                                     ; preds = %17
  %76 = alloca i8*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8, align 1
  store i8* %0, i8** %76, align 8
  store i64 %1, i64* %77, align 8
  %79 = load i8*, i8** %76, align 8
  %80 = load i64, i64* %77, align 8
  store i8 0, i8* %78, align 1
  %81 = call i8* @_ZSt6fill_nIPcmcET_S1_T0_RKT1_(i8* %79, i64 %80, i8* dereferenceable(1) %78)
  store i32 -31992468, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt6fill_nIPcmcET_S1_T0_RKT1_(i8*, i64, i8* dereferenceable(1)) #0 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i8* @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i8* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = call i8* @_ZSt10__fill_n_aImcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_(i8* %8, i64 %9, i8* dereferenceable(1) %10)
  ret i8* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt10__fill_n_aImcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_(i8*, i64, i8* dereferenceable(1)) #0 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8*, i8** %6, align 8
  call void @_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_(i8* %7, i8* %10, i8* dereferenceable(1) %11)
  %12 = load i8*, i8** %4, align 8
  %13 = load i64, i64* %5, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  ret i8* %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i8*) #0 comdat {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.144
  %6 = load i32, i32* @y.145
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1784817046, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1784817046, label %18
    i32 -1585790269, label %26
    i32 1631230746, label %45
    i32 -901348665, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1585790269, i32 -901348665
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca i8*, align 8
  store i8* %0, i8** %27, align 8
  %28 = load i8*, i8** %27, align 8
  %29 = call i8* @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_(i8* %28)
  store i8* %29, i8** %2
  %30 = load i32, i32* @x.144
  %31 = load i32, i32* @y.145
  %32 = sub i32 %30, -985946826
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -985946826
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1631230746, i32 -901348665
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  %46 = load volatile i8*, i8** %2
  ret i8* %46

; <label>:47:                                     ; preds = %15
  %48 = alloca i8*, align 8
  store i8* %0, i8** %48, align 8
  %49 = load i8*, i8** %48, align 8
  %50 = call i8* @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_(i8* %49)
  store i32 -1585790269, i32* %14
  br label %51

; <label>:51:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_(i8*, i8*, i8* dereferenceable(1)) #5 comdat {
  %4 = alloca i64
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %10 = load i8*, i8** %7, align 8
  %11 = load i8, i8* %10, align 1
  store i8 %11, i8* %8, align 1
  %12 = load i8*, i8** %6, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = ptrtoint i8* %12 to i64
  %15 = ptrtoint i8* %13 to i64
  %16 = add i64 %14, -2890838285557330972
  %17 = sub i64 %16, %15
  %18 = sub i64 %17, -2890838285557330972
  %19 = sub i64 %14, %15
  store i64 %18, i64* %9, align 8
  %20 = load i64, i64* %9, align 8
  store i64 %20, i64* %4
  %21 = alloca i32
  store i32 -1821424208, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %36
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -1821424208, label %25
    i32 2118663124, label %29
    i32 -2017576423, label %35
  ]

; <label>:24:                                     ; preds = %22
  br label %36

; <label>:25:                                     ; preds = %22
  %26 = load volatile i64, i64* %4
  %27 = icmp ne i64 %26, 0
  %28 = select i1 %27, i32 2118663124, i32 -2017576423
  store i32 %28, i32* %21
  br label %36

; <label>:29:                                     ; preds = %22
  %30 = load i8*, i8** %5, align 8
  %31 = load i8, i8* %8, align 1
  %32 = zext i8 %31 to i32
  %33 = trunc i32 %32 to i8
  %34 = load i64, i64* %9, align 8
  call void @llvm.memset.p0i8.i64(i8* %30, i8 %33, i64 %34, i32 1, i1 false)
  store i32 -2017576423, i32* %21
  br label %36

; <label>:35:                                     ; preds = %22
  ret void

; <label>:36:                                     ; preds = %29, %25, %24
  br label %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_(i8*) #5 comdat align 2 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm(%"struct.std::_Vector_base.1"*, i8*, i64) #0 comdat align 2 {
  %4 = alloca i8*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load i8*, i8** %7, align 8
  store i8* %10, i8** %4
  %11 = alloca i32
  store i32 -653673896, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %106
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -653673896, label %15
    i32 -546953462, label %19
    i32 1723849325, label %34
    i32 -1316938532, label %55
    i32 1633686204, label %56
    i32 -601076696, label %71
    i32 457320023, label %98
    i32 -1286718331, label %99
    i32 83098175, label %105
  ]

; <label>:14:                                     ; preds = %12
  br label %106

; <label>:15:                                     ; preds = %12
  %16 = load volatile i8*, i8** %4
  %17 = icmp ne i8* %16, null
  %18 = select i1 %17, i32 -546953462, i32 1633686204
  store i32 %18, i32* %11
  br label %106

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.150
  %21 = load i32, i32* @y.151
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 1723849325, i32 -1286718331
  store i32 %33, i32* %11
  br label %106

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %36 to %"class.std::allocator.2"*
  %38 = load i8*, i8** %7, align 8
  %39 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(%"class.std::allocator.2"* dereferenceable(1) %37, i8* %38, i64 %39)
  %40 = load i32, i32* @x.150
  %41 = load i32, i32* @y.151
  %42 = sub i32 %40, 1497263
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1497263
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1316938532, i32 -1286718331
  store i32 %54, i32* %11
  br label %106

; <label>:55:                                     ; preds = %12
  store i32 1633686204, i32* %11
  br label %106

; <label>:56:                                     ; preds = %12
  %57 = load i32, i32* @x.150
  %58 = load i32, i32* @y.151
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -601076696, i32 83098175
  store i32 %70, i32* %11
  br label %106

; <label>:71:                                     ; preds = %12
  %72 = load i32, i32* @x.150
  %73 = load i32, i32* @y.151
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 457320023, i32 83098175
  store i32 %97, i32* %11
  br label %106

; <label>:98:                                     ; preds = %12
  ret void

; <label>:99:                                     ; preds = %12
  %100 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %101 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %100, i32 0, i32 0
  %102 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %101 to %"class.std::allocator.2"*
  %103 = load i8*, i8** %7, align 8
  %104 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(%"class.std::allocator.2"* dereferenceable(1) %102, i8* %103, i64 %104)
  store i32 1723849325, i32* %11
  br label %106

; <label>:105:                                    ; preds = %12
  store i32 -601076696, i32* %11
  br label %106

; <label>:106:                                    ; preds = %105, %99, %71, %56, %55, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(%"class.std::allocator.2"* dereferenceable(1), i8*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load i8*, i8** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm(%"class.__gnu_cxx::new_allocator.3"* %8, i8* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm(%"class.__gnu_cxx::new_allocator.3"*, i8*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPccEvT_S1_RSaIT0_E(i8*, i8*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = load i8*, i8** %5, align 8
  call void @_ZSt8_DestroyIPcEvT_S1_(i8* %7, i8* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPcEvT_S1_(i8*, i8*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.158
  %6 = load i32, i32* @y.159
  %7 = add i32 %5, -91129752
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -91129752
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 933656605, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 933656605, label %19
    i32 221747974, label %27
    i32 958472706, label %46
    i32 -1968931283, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 221747974, i32 -1968931283
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  store i8* %0, i8** %28, align 8
  store i8* %1, i8** %29, align 8
  %30 = load i8*, i8** %28, align 8
  %31 = load i8*, i8** %29, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_(i8* %30, i8* %31)
  %32 = load i32, i32* @x.158
  %33 = load i32, i32* @y.159
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 958472706, i32 -1968931283
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca i8*, align 8
  %49 = alloca i8*, align 8
  store i8* %0, i8** %48, align 8
  store i8* %1, i8** %49, align 8
  %50 = load i8*, i8** %48, align 8
  %51 = load i8*, i8** %49, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_(i8* %50, i8* %51)
  store i32 221747974, i32* %15
  br label %52

; <label>:52:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_(i8*, i8*) #5 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %54

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.166
  %15 = load i32, i32* @y.167
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %63

; <label>:27:                                     ; preds = %13, %63
  %28 = load i32, i32* @x.166
  %29 = load i32, i32* @y.167
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %63

; <label>:53:                                     ; preds = %27
  ret void

; <label>:54:                                     ; preds = %3
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %7, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %10) #3
  br label %58

; <label>:58:                                     ; preds = %54
  %59 = load i8*, i8** %7, align 8
  %60 = load i32, i32* %8, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

; <label>:63:                                     ; preds = %27, %13
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IcSaIcEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.168
  %7 = load i32, i32* @y.169
  %8 = add i32 %6, 87044756
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 87044756
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2038778790, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %90
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2038778790, label %20
    i32 -1479464292, label %40
    i32 491470708, label %72
    i32 1178074633, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %90

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1479464292, i32 1178074633
  store i32 %39, i32* %16
  br label %90

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  store i64 %1, i64* %42, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %43, align 8
  %44 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %45 = bitcast %"class.std::vector"* %44 to %"struct.std::_Vector_base"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load %"class.std::vector.0"*, %"class.std::vector.0"** %47, align 8
  %49 = load i64, i64* %42, align 8
  %50 = load %"class.std::vector.0"*, %"class.std::vector.0"** %43, align 8
  %51 = bitcast %"class.std::vector"* %44 to %"struct.std::_Vector_base"*
  %52 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %51) #3
  %53 = call %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIcSaIcEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.0"* %48, i64 %49, %"class.std::vector.0"* dereferenceable(24) %50, %"class.std::allocator"* dereferenceable(1) %52)
  %54 = bitcast %"class.std::vector"* %44 to %"struct.std::_Vector_base"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %55, i32 0, i32 1
  store %"class.std::vector.0"* %53, %"class.std::vector.0"** %56, align 8
  %57 = load i32, i32* @x.168
  %58 = load i32, i32* @y.169
  %59 = sub i32 %57, -600312340
  %60 = sub i32 %59, 1
  %61 = add i32 %60, -600312340
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 491470708, i32 1178074633
  store i32 %71, i32* %16
  br label %90

; <label>:72:                                     ; preds = %17
  ret void

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.std::vector"*, align 8
  %75 = alloca i64, align 8
  %76 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %74, align 8
  store i64 %1, i64* %75, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %76, align 8
  %77 = load %"class.std::vector"*, %"class.std::vector"** %74, align 8
  %78 = bitcast %"class.std::vector"* %77 to %"struct.std::_Vector_base"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load %"class.std::vector.0"*, %"class.std::vector.0"** %80, align 8
  %82 = load i64, i64* %75, align 8
  %83 = load %"class.std::vector.0"*, %"class.std::vector.0"** %76, align 8
  %84 = bitcast %"class.std::vector"* %77 to %"struct.std::_Vector_base"*
  %85 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %84) #3
  %86 = call %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIcSaIcEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.0"* %81, i64 %82, %"class.std::vector.0"* dereferenceable(24) %83, %"class.std::allocator"* dereferenceable(1) %85)
  %87 = bitcast %"class.std::vector"* %77 to %"struct.std::_Vector_base"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %88, i32 0, i32 1
  store %"class.std::vector.0"* %86, %"class.std::vector.0"** %89, align 8
  store i32 -1479464292, i32* %16
  br label %90

; <label>:90:                                     ; preds = %73, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %13, align 8
  %15 = ptrtoint %"class.std::vector.0"* %11 to i64
  %16 = ptrtoint %"class.std::vector.0"* %14 to i64
  %17 = sub i64 %15, 2191041032725995936
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 2191041032725995936
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %5, %"class.std::vector.0"* %8, i64 %21)
          to label %22 unwind label %66

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.170
  %24 = load i32, i32* @y.171
  %25 = add i32 %23, -1428052123
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -1428052123
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %73

; <label>:49:                                     ; preds = %22, %73
  %50 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %50) #3
  %51 = load i32, i32* @x.170
  %52 = load i32, i32* @y.171
  %53 = sub i32 %51, -32605054
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -32605054
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %73

; <label>:65:                                     ; preds = %49
  ret void

; <label>:66:                                     ; preds = %1
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %3, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %4, align 4
  %70 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %70) #3
  br label %71

; <label>:71:                                     ; preds = %66
  %72 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %72) #11
  unreachable

; <label>:73:                                     ; preds = %49, %22
  %74 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %74) #3
  br label %49
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaISt6vectorIcSaIcEEEC2ERKS2_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.174
  %6 = load i32, i32* @y.175
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -234196667, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %94
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -234196667, label %18
    i32 1266345123, label %38
    i32 -29560563, label %73
    i32 -320982513, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %94

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1266345123, i32 -320982513
  store i32 %37, i32* %14
  br label %94

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base"*, align 8
  %40 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %39, align 8
  store i64 %1, i64* %40, align 8
  %41 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %39, align 8
  %42 = load i64, i64* %40, align 8
  %43 = call %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"* %41, i64 %42)
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %44, i32 0, i32 0
  store %"class.std::vector.0"* %43, %"class.std::vector.0"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load %"class.std::vector.0"*, %"class.std::vector.0"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %49, i32 0, i32 1
  store %"class.std::vector.0"* %48, %"class.std::vector.0"** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %51, i32 0, i32 0
  %53 = load %"class.std::vector.0"*, %"class.std::vector.0"** %52, align 8
  %54 = load i64, i64* %40, align 8
  %55 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %53, i64 %54
  %56 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %56, i32 0, i32 2
  store %"class.std::vector.0"* %55, %"class.std::vector.0"** %57, align 8
  %58 = load i32, i32* @x.174
  %59 = load i32, i32* @y.175
  %60 = add i32 %58, -817855285
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -817855285
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -29560563, i32 -320982513
  store i32 %72, i32* %14
  br label %94

; <label>:73:                                     ; preds = %15
  ret void

; <label>:74:                                     ; preds = %15
  %75 = alloca %"struct.std::_Vector_base"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %80, i32 0, i32 0
  store %"class.std::vector.0"* %79, %"class.std::vector.0"** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"class.std::vector.0"*, %"class.std::vector.0"** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %85, i32 0, i32 1
  store %"class.std::vector.0"* %84, %"class.std::vector.0"** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load %"class.std::vector.0"*, %"class.std::vector.0"** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %92, i32 0, i32 2
  store %"class.std::vector.0"* %91, %"class.std::vector.0"** %93, align 8
  store i32 1266345123, i32* %14
  br label %94

; <label>:94:                                     ; preds = %74, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.176
  %5 = load i32, i32* @y.177
  %6 = sub i32 %4, 1810390225
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1810390225
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1270004804, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1270004804, label %18
    i32 -106619206, label %38
    i32 -36737331, label %57
    i32 1482492240, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -106619206, i32 1482492240
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %40 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator"* %41) #3
  %42 = load i32, i32* @x.176
  %43 = load i32, i32* @y.177
  %44 = add i32 %42, 219542504
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 219542504
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -36737331, i32 1482492240
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %59, align 8
  %60 = load %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %60 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator"* %61) #3
  store i32 -106619206, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIcSaIcEEEC2ERKS2_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.178
  %6 = load i32, i32* @y.179
  %7 = sub i32 %5, -712590662
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -712590662
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -539269965, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -539269965, label %19
    i32 568207926, label %27
    i32 114605849, label %61
    i32 170774420, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 568207926, i32 170774420
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator"*, align 8
  %29 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %28, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %29, align 8
  %30 = load %"class.std::allocator"*, %"class.std::allocator"** %28, align 8
  %31 = bitcast %"class.std::allocator"* %30 to %"class.__gnu_cxx::new_allocator"*
  %32 = load %"class.std::allocator"*, %"class.std::allocator"** %29, align 8
  %33 = bitcast %"class.std::allocator"* %32 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator"* %31, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.178
  %35 = load i32, i32* @y.179
  %36 = sub i32 %34, -650387770
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -650387770
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 114605849, i32 170774420
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator"*, align 8
  %64 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %63, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %64, align 8
  %65 = load %"class.std::allocator"*, %"class.std::allocator"** %63, align 8
  %66 = bitcast %"class.std::allocator"* %65 to %"class.__gnu_cxx::new_allocator"*
  %67 = load %"class.std::allocator"*, %"class.std::allocator"** %64, align 8
  %68 = bitcast %"class.std::allocator"* %67 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator"* %66, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %68) #3
  store i32 568207926, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.180
  %6 = load i32, i32* @y.181
  %7 = sub i32 %5, 1150835968
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1150835968
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1950044668, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1950044668, label %19
    i32 2100647524, label %27
    i32 1011950839, label %46
    i32 -897211318, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2100647524, i32 -897211318
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %28, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %28, align 8
  %31 = load i32, i32* @x.180
  %32 = load i32, i32* @y.181
  %33 = sub i32 %31, -878631682
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -878631682
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1011950839, i32 -897211318
  store i32 %45, i32* %15
  br label %51

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %49 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %48, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %49, align 8
  %50 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %48, align 8
  store i32 2100647524, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i1
  %6 = alloca %"struct.std::_Vector_base"*
  %7 = alloca i64*
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.182
  %11 = load i32, i32* @y.183
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 2026658831, i32* %19
  %20 = alloca %"class.std::vector.0"*
  br label %21

; <label>:21:                                     ; preds = %2, %171
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 2026658831, label %24
    i32 -829663342, label %32
    i32 2084616184, label %67
    i32 2002655754, label %70
    i32 -363983810, label %86
    i32 381314114, label %120
    i32 -240225757, label %122
    i32 -1957361287, label %123
    i32 1546954435, label %139
    i32 -803272045, label %155
    i32 -405412406, label %157
    i32 1470820583, label %163
    i32 -631694457, label %170
  ]

; <label>:23:                                     ; preds = %21
  br label %171

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -829663342, i32 -405412406
  store i32 %31, i32* %19
  br label %171

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %7
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %33, align 8
  %35 = load volatile i64*, i64** %7
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %33, align 8
  store %"struct.std::_Vector_base"* %36, %"struct.std::_Vector_base"** %6
  %37 = load volatile i64*, i64** %7
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %5
  %40 = load i32, i32* @x.182
  %41 = load i32, i32* @y.183
  %42 = sub i32 %40, 1127679850
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1127679850
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 2084616184, i32 -405412406
  store i32 %66, i32* %19
  br label %171

; <label>:67:                                     ; preds = %21
  %68 = load volatile i1, i1* %5
  %69 = select i1 %68, i32 2002655754, i32 -240225757
  store i32 %69, i32* %19
  br label %171

; <label>:70:                                     ; preds = %21
  %71 = load i32, i32* @x.182
  %72 = load i32, i32* @y.183
  %73 = add i32 %71, 887148335
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 887148335
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 -363983810, i32 1470820583
  store i32 %85, i32* %19
  br label %171

; <label>:86:                                     ; preds = %21
  %87 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6
  %88 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %88 to %"class.std::allocator"*
  %90 = load volatile i64*, i64** %7
  %91 = load i64, i64* %90, align 8
  %92 = call %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE8allocateERS3_m(%"class.std::allocator"* dereferenceable(1) %89, i64 %91)
  store %"class.std::vector.0"* %92, %"class.std::vector.0"** %4
  %93 = load i32, i32* @x.182
  %94 = load i32, i32* @y.183
  %95 = sub i32 %93, -1238639297
  %96 = sub i32 %95, 1
  %97 = add i32 %96, -1238639297
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 false, true
  %106 = and i1 %103, false
  %107 = and i1 %101, %105
  %108 = and i1 %104, false
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 false, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 381314114, i32 1470820583
  store i32 %119, i32* %19
  br label %171

; <label>:120:                                    ; preds = %21
  store i32 -1957361287, i32* %19
  %121 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  store %"class.std::vector.0"* %121, %"class.std::vector.0"** %20
  br label %171

; <label>:122:                                    ; preds = %21
  store i32 -1957361287, i32* %19
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %20
  br label %171

; <label>:123:                                    ; preds = %21
  %124 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20
  store %"class.std::vector.0"* %124, %"class.std::vector.0"** %3
  %125 = load i32, i32* @x.182
  %126 = load i32, i32* @y.183
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  %138 = select i1 %136, i32 1546954435, i32 -631694457
  store i32 %138, i32* %19
  br label %171

; <label>:139:                                    ; preds = %21
  %140 = load i32, i32* @x.182
  %141 = load i32, i32* @y.183
  %142 = add i32 %140, 371815575
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, 371815575
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  %154 = select i1 %152, i32 -803272045, i32 -631694457
  store i32 %154, i32* %19
  br label %171

; <label>:155:                                    ; preds = %21
  %156 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %156

; <label>:157:                                    ; preds = %21
  %158 = alloca %"struct.std::_Vector_base"*, align 8
  %159 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %158, align 8
  store i64 %1, i64* %159, align 8
  %160 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %158, align 8
  %161 = load i64, i64* %159, align 8
  %162 = icmp ne i64 %161, 0
  store i32 -829663342, i32* %19
  br label %171

; <label>:163:                                    ; preds = %21
  %164 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6
  %165 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %164, i32 0, i32 0
  %166 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %165 to %"class.std::allocator"*
  %167 = load volatile i64*, i64** %7
  %168 = load i64, i64* %167, align 8
  %169 = call %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE8allocateERS3_m(%"class.std::allocator"* dereferenceable(1) %166, i64 %168)
  store i32 -363983810, i32* %19
  br label %171

; <label>:170:                                    ; preds = %21
  store i32 1546954435, i32* %19
  br label %171

; <label>:171:                                    ; preds = %170, %163, %157, %139, %123, %122, %120, %86, %70, %67, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE8allocateERS3_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.184
  %7 = load i32, i32* @y.185
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -449073499, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -449073499, label %19
    i32 150125363, label %39
    i32 363160178, label %61
    i32 1629291804, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 150125363, i32 1629291804
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::allocator"*, %"class.std::allocator"** %40, align 8
  %43 = bitcast %"class.std::allocator"* %42 to %"class.__gnu_cxx::new_allocator"*
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %43, i64 %44, i8* null)
  store %"class.std::vector.0"* %45, %"class.std::vector.0"** %3
  %46 = load i32, i32* @x.184
  %47 = load i32, i32* @y.185
  %48 = add i32 %46, -1359778195
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1359778195
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 363160178, i32 1629291804
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator"*, %"class.std::allocator"** %64, align 8
  %67 = bitcast %"class.std::allocator"* %66 to %"class.__gnu_cxx::new_allocator"*
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %67, i64 %68, i8* null)
  store i32 150125363, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 475974797, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 475974797, label %16
    i32 -578748518, label %21
    i32 2082197160, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -578748518, i32 2082197160
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.0"*
  ret %"class.std::vector.0"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIcSaIcEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24), %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %12 = call %"class.std::vector.0"* @_ZSt20uninitialized_fill_nIPSt6vectorIcSaIcEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.0"* %9, i64 %10, %"class.std::vector.0"* dereferenceable(24) %11)
  ret %"class.std::vector.0"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.192
  %6 = load i32, i32* @y.193
  %7 = sub i32 %5, 992392316
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 992392316
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -490796173, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -490796173, label %19
    i32 -2006419577, label %39
    i32 683221301, label %71
    i32 -1252493625, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2006419577, i32 -1252493625
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %40, align 8
  %41 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %42 to %"class.std::allocator"*
  store %"class.std::allocator"* %43, %"class.std::allocator"** %2
  %44 = load i32, i32* @x.192
  %45 = load i32, i32* @y.193
  %46 = sub i32 %44, 721405821
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 721405821
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 683221301, i32 -1252493625
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %74, align 8
  %75 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %76 to %"class.std::allocator"*
  store i32 -2006419577, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt20uninitialized_fill_nIPSt6vectorIcSaIcEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %11 = call %"class.std::vector.0"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIcSaIcEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.0"* %8, i64 %9, %"class.std::vector.0"* dereferenceable(24) %10)
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIcSaIcEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.196
  %5 = load i32, i32* @y.197
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %256

; <label>:29:                                     ; preds = %3, %256
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca %"class.std::vector.0"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %32, align 8
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  store %"class.std::vector.0"* %36, %"class.std::vector.0"** %33, align 8
  %37 = load i32, i32* @x.196
  %38 = load i32, i32* @y.197
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %256

; <label>:62:                                     ; preds = %29
  br label %63

; <label>:63:                                     ; preds = %71, %62
  %64 = load i64, i64* %31, align 8
  %65 = icmp ugt i64 %64, 0
  br i1 %65, label %66, label %131

; <label>:66:                                     ; preds = %63
  %67 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %68 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIcSaIcEEEPT_RS3_(%"class.std::vector.0"* dereferenceable(24) %67) #3
  %69 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  invoke void @_ZSt10_ConstructISt6vectorIcSaIcEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.0"* %68, %"class.std::vector.0"* dereferenceable(24) %69)
          to label %70 unwind label %79

; <label>:70:                                     ; preds = %66
  br label %71

; <label>:71:                                     ; preds = %70
  %72 = load i64, i64* %31, align 8
  %73 = sub i64 %72, -6342849560872024282
  %74 = add i64 %73, -1
  %75 = add i64 %74, -6342849560872024282
  %76 = add i64 %72, -1
  store i64 %75, i64* %31, align 8
  %77 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %78 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %77, i32 1
  store %"class.std::vector.0"* %78, %"class.std::vector.0"** %33, align 8
  br label %63

; <label>:79:                                     ; preds = %66
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %34, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %35, align 4
  br label %83

; <label>:83:                                     ; preds = %79
  %84 = load i8*, i8** %34, align 8
  %85 = call i8* @__cxa_begin_catch(i8* %84) #3
  %86 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %87 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIcSaIcEEEvT_S4_(%"class.std::vector.0"* %86, %"class.std::vector.0"* %87)
          to label %88 unwind label %187

; <label>:88:                                     ; preds = %83
  %89 = load i32, i32* @x.196
  %90 = load i32, i32* @y.197
  %91 = sub i32 %89, -1821668095
  %92 = sub i32 %91, 1
  %93 = add i32 %92, -1821668095
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 false, true
  %102 = and i1 %99, false
  %103 = and i1 %97, %101
  %104 = and i1 %100, false
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 false, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %264

; <label>:115:                                    ; preds = %88, %264
  %116 = load i32, i32* @x.196
  %117 = load i32, i32* @y.197
  %118 = sub i32 %116, 976681643
  %119 = sub i32 %118, 1
  %120 = add i32 %119, 976681643
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  br i1 %128, label %130, label %264

; <label>:130:                                    ; preds = %115
  invoke void @__cxa_rethrow() #12
          to label %255 unwind label %187

; <label>:131:                                    ; preds = %63
  %132 = load i32, i32* @x.196
  %133 = load i32, i32* @y.197
  %134 = add i32 %132, 881592610
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, 881592610
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 false, true
  %145 = and i1 %142, false
  %146 = and i1 %140, %144
  %147 = and i1 %143, false
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 false, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  br i1 %156, label %158, label %265

; <label>:158:                                    ; preds = %131, %265
  %159 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  %160 = load i32, i32* @x.196
  %161 = load i32, i32* @y.197
  %162 = add i32 %160, 141226155
  %163 = sub i32 %162, 1
  %164 = sub i32 %163, 141226155
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = xor i1 %168, true
  %171 = xor i1 %169, true
  %172 = xor i1 false, true
  %173 = and i1 %170, false
  %174 = and i1 %168, %172
  %175 = and i1 %171, false
  %176 = and i1 %169, %172
  %177 = or i1 %173, %174
  %178 = or i1 %175, %176
  %179 = xor i1 %177, %178
  %180 = or i1 %170, %171
  %181 = xor i1 %180, true
  %182 = or i1 false, %172
  %183 = and i1 %181, %182
  %184 = or i1 %179, %183
  %185 = or i1 %168, %169
  br i1 %184, label %186, label %265

; <label>:186:                                    ; preds = %158
  ret %"class.std::vector.0"* %159

; <label>:187:                                    ; preds = %130, %83
  %188 = landingpad { i8*, i32 }
          cleanup
  %189 = extractvalue { i8*, i32 } %188, 0
  store i8* %189, i8** %34, align 8
  %190 = extractvalue { i8*, i32 } %188, 1
  store i32 %190, i32* %35, align 4
  invoke void @__cxa_end_catch()
          to label %191 unwind label %198

; <label>:191:                                    ; preds = %187
  br label %193
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:193:                                    ; preds = %191
  %194 = load i8*, i8** %34, align 8
  %195 = load i32, i32* %35, align 4
  %196 = insertvalue { i8*, i32 } undef, i8* %194, 0
  %197 = insertvalue { i8*, i32 } %196, i32 %195, 1
  resume { i8*, i32 } %197

; <label>:198:                                    ; preds = %187
  %199 = load i32, i32* @x.196
  %200 = load i32, i32* @y.197
  %201 = sub i32 %199, -1926495800
  %202 = sub i32 %201, 1
  %203 = add i32 %202, -1926495800
  %204 = sub i32 %199, 1
  %205 = mul i32 %199, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %200, 10
  %209 = xor i1 %207, true
  %210 = xor i1 %208, true
  %211 = xor i1 false, true
  %212 = and i1 %209, false
  %213 = and i1 %207, %211
  %214 = and i1 %210, false
  %215 = and i1 %208, %211
  %216 = or i1 %212, %213
  %217 = or i1 %214, %215
  %218 = xor i1 %216, %217
  %219 = or i1 %209, %210
  %220 = xor i1 %219, true
  %221 = or i1 false, %211
  %222 = and i1 %220, %221
  %223 = or i1 %218, %222
  %224 = or i1 %207, %208
  br i1 %223, label %225, label %267

; <label>:225:                                    ; preds = %198, %267
  %226 = landingpad { i8*, i32 }
          catch i8* null
  %227 = extractvalue { i8*, i32 } %226, 0
  call void @__clang_call_terminate(i8* %227) #11
  %228 = load i32, i32* @x.196
  %229 = load i32, i32* @y.197
  %230 = add i32 %228, 1594723467
  %231 = sub i32 %230, 1
  %232 = sub i32 %231, 1594723467
  %233 = sub i32 %228, 1
  %234 = mul i32 %228, %232
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %229, 10
  %238 = xor i1 %236, true
  %239 = xor i1 %237, true
  %240 = xor i1 true, true
  %241 = and i1 %238, true
  %242 = and i1 %236, %240
  %243 = and i1 %239, true
  %244 = and i1 %237, %240
  %245 = or i1 %241, %242
  %246 = or i1 %243, %244
  %247 = xor i1 %245, %246
  %248 = or i1 %238, %239
  %249 = xor i1 %248, true
  %250 = or i1 true, %240
  %251 = and i1 %249, %250
  %252 = or i1 %247, %251
  %253 = or i1 %236, %237
  br i1 %252, label %254, label %267

; <label>:254:                                    ; preds = %225
  unreachable

; <label>:255:                                    ; preds = %130
  unreachable

; <label>:256:                                    ; preds = %29, %3
  %257 = alloca %"class.std::vector.0"*, align 8
  %258 = alloca i64, align 8
  %259 = alloca %"class.std::vector.0"*, align 8
  %260 = alloca %"class.std::vector.0"*, align 8
  %261 = alloca i8*
  %262 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %257, align 8
  store i64 %1, i64* %258, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %259, align 8
  %263 = load %"class.std::vector.0"*, %"class.std::vector.0"** %257, align 8
  store %"class.std::vector.0"* %263, %"class.std::vector.0"** %260, align 8
  br label %29

; <label>:264:                                    ; preds = %115, %88
  br label %115

; <label>:265:                                    ; preds = %158, %131
  %266 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  br label %158

; <label>:267:                                    ; preds = %225, %198
  %268 = landingpad { i8*, i32 }
          catch i8* null
  %269 = extractvalue { i8*, i32 } %268, 0
  call void @__clang_call_terminate(i8* %269) #11
  br label %225
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIcSaIcEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.0"*
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorIcSaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.0"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIcSaIcEEC2ERKS1_(%"class.std::vector.0"* %7, %"class.std::vector.0"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIcSaIcEEEPT_RS3_(%"class.std::vector.0"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.200
  %6 = load i32, i32* @y.201
  %7 = sub i32 %5, -550303370
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -550303370
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1223508193, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1223508193, label %19
    i32 1886028310, label %39
    i32 443879244, label %59
    i32 2002597081, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1886028310, i32 2002597081
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %42 = bitcast %"class.std::vector.0"* %41 to i8*
  %43 = bitcast i8* %42 to %"class.std::vector.0"*
  store %"class.std::vector.0"* %43, %"class.std::vector.0"** %2
  %44 = load i32, i32* @x.200
  %45 = load i32, i32* @y.201
  %46 = sub i32 %44, 1625390033
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1625390033
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 443879244, i32 2002597081
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %62, align 8
  %63 = load %"class.std::vector.0"*, %"class.std::vector.0"** %62, align 8
  %64 = bitcast %"class.std::vector.0"* %63 to i8*
  %65 = bitcast i8* %64 to %"class.std::vector.0"*
  store i32 1886028310, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIcSaIcEEEvT_S4_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIcSaIcEEEEvT_S6_(%"class.std::vector.0"* %5, %"class.std::vector.0"* %6)
  ret void
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorIcSaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.0"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEEC2ERKS1_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::allocator.2", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIcSaIcEE4sizeEv(%"class.std::vector.0"* %12) #3
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %15 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %16 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIcEE17_S_select_on_copyERKS1_(%"class.std::allocator.2"* sret %5, %"class.std::allocator.2"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_(%"struct.std::_Vector_base.1"* %11, i64 %13, %"class.std::allocator.2"* dereferenceable(1) %5)
          to label %17 unwind label %93

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.206
  %19 = load i32, i32* @y.207
  %20 = sub i32 %18, 1938072541
  %21 = sub i32 %20, 1
  %22 = add i32 %21, 1938072541
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %107

; <label>:44:                                     ; preds = %17, %107
  call void @_ZNSaIcED1Ev(%"class.std::allocator.2"* %5) #3
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %46 = call i8* @_ZNKSt6vectorIcSaIcEE5beginEv(%"class.std::vector.0"* %45) #3
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %8, i32 0, i32 0
  store i8* %46, i8** %47, align 8
  %48 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %49 = call i8* @_ZNKSt6vectorIcSaIcEE3endEv(%"class.std::vector.0"* %48) #3
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %9, i32 0, i32 0
  store i8* %49, i8** %50, align 8
  %51 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %56 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %55) #3
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %8, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %9, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = load i32, i32* @x.206
  %62 = load i32, i32* @y.207
  %63 = sub i32 %61, -1750544149
  %64 = sub i32 %63, 1
  %65 = add i32 %64, -1750544149
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %107

; <label>:87:                                     ; preds = %44
  %88 = invoke i8* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPccET0_T_SA_S9_RSaIT1_E(i8* %58, i8* %60, i8* %54, %"class.std::allocator.2"* dereferenceable(1) %56)
          to label %89 unwind label %97

; <label>:89:                                     ; preds = %87
  %90 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %91, i32 0, i32 1
  store i8* %88, i8** %92, align 8
  ret void

; <label>:93:                                     ; preds = %2
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %6, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %7, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator.2"* %5) #3
  br label %102

; <label>:97:                                     ; preds = %87
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %6, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %7, align 4
  %101 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.1"* %101) #3
  br label %102

; <label>:102:                                    ; preds = %97, %93
  %103 = load i8*, i8** %6, align 8
  %104 = load i32, i32* %7, align 4
  %105 = insertvalue { i8*, i32 } undef, i8* %103, 0
  %106 = insertvalue { i8*, i32 } %105, i32 %104, 1
  resume { i8*, i32 } %106

; <label>:107:                                    ; preds = %44, %17
  call void @_ZNSaIcED1Ev(%"class.std::allocator.2"* %5) #3
  %108 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %109 = call i8* @_ZNKSt6vectorIcSaIcEE5beginEv(%"class.std::vector.0"* %108) #3
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %8, i32 0, i32 0
  store i8* %109, i8** %110, align 8
  %111 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %112 = call i8* @_ZNKSt6vectorIcSaIcEE3endEv(%"class.std::vector.0"* %111) #3
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %9, i32 0, i32 0
  store i8* %112, i8** %113, align 8
  %114 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %115 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %114, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %115, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %119 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %118) #3
  %120 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %8, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %9, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  br label %44
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIcSaIcEE4sizeEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = ptrtoint i8* %7 to i64
  %13 = ptrtoint i8* %11 to i64
  %14 = add i64 %12, -6029581784307495941
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -6029581784307495941
  %17 = sub i64 %12, %13
  ret i64 %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIcEE17_S_select_on_copyERKS1_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.210
  %6 = load i32, i32* @y.211
  %7 = sub i32 %5, -174341730
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -174341730
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1150712080, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1150712080, label %19
    i32 1849162396, label %39
    i32 -2140929246, label %57
    i32 -1488935162, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1849162396, i32 -1488935162
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %40, align 8
  %41 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %40, align 8
  call void @_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.2"* sret %0, %"class.std::allocator.2"* dereferenceable(1) %41)
  %42 = load i32, i32* @x.210
  %43 = load i32, i32* @y.211
  %44 = add i32 %42, -2065778925
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -2065778925
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -2140929246, i32 -1488935162
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %59, align 8
  %60 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %59, align 8
  call void @_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.2"* sret %0, %"class.std::allocator.2"* dereferenceable(1) %60)
  store i32 1849162396, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPccET0_T_SA_S9_RSaIT1_E(i8*, i8*, i8*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  store i8* %0, i8** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %6, i32 0, i32 0
  store i8* %1, i8** %12, align 8
  store i8* %2, i8** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %9, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %10, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = call i8* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_(i8* %19, i8* %21, i8* %17)
  ret i8* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNKSt6vectorIcSaIcEE5beginEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.216
  %6 = load i32, i32* @y.217
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -956980212, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %89
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -956980212, label %18
    i32 -135478935, label %38
    i32 -113850715, label %76
    i32 713710478, label %78
  ]

; <label>:17:                                     ; preds = %15
  br label %89

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -135478935, i32 713710478
  store i32 %37, i32* %14
  br label %89

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %40 = alloca %"class.std::vector.0"*, align 8
  %41 = alloca i8*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  %42 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %43 = bitcast %"class.std::vector.0"* %42 to %"struct.std::_Vector_base.1"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  store i8* %46, i8** %41, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.21"* %39, i8** dereferenceable(8) %41) #3
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %39, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  store i8* %48, i8** %2
  %49 = load i32, i32* @x.216
  %50 = load i32, i32* @y.217
  %51 = sub i32 %49, -1298039969
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1298039969
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -113850715, i32 713710478
  store i32 %75, i32* %14
  br label %89

; <label>:76:                                     ; preds = %15
  %77 = load volatile i8*, i8** %2
  ret i8* %77

; <label>:78:                                     ; preds = %15
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %80 = alloca %"class.std::vector.0"*, align 8
  %81 = alloca i8*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %80, align 8
  %82 = load %"class.std::vector.0"*, %"class.std::vector.0"** %80, align 8
  %83 = bitcast %"class.std::vector.0"* %82 to %"struct.std::_Vector_base.1"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  store i8* %86, i8** %81, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.21"* %79, i8** dereferenceable(8) %81) #3
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %79, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  store i32 -135478935, i32* %14
  br label %89

; <label>:89:                                     ; preds = %78, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNKSt6vectorIcSaIcEE3endEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i8*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  store i8* %9, i8** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.21"* %2, i8** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  ret i8* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.220
  %6 = load i32, i32* @y.221
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -920181432, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -920181432, label %18
    i32 -988069473, label %38
    i32 251785213, label %55
    i32 2110447086, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -988069473, i32 2110447086
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %39, align 8
  %40 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %39, align 8
  call void @_ZNSaIcEC1ERKS_(%"class.std::allocator.2"* %0, %"class.std::allocator.2"* dereferenceable(1) %40) #3
  %41 = load i32, i32* @x.220
  %42 = load i32, i32* @y.221
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 251785213, i32 2110447086
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %57, align 8
  %58 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %57, align 8
  call void @_ZNSaIcEC1ERKS_(%"class.std::allocator.2"* %0, %"class.std::allocator.2"* dereferenceable(1) %58) #3
  store i32 -988069473, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: nounwind
declare void @_ZNSaIcEC1ERKS_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_(i8*, i8*, i8*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %4, i32 0, i32 0
  store i8* %0, i8** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  store i8* %1, i8** %11, align 8
  store i8* %2, i8** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i8*, i8** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %8, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %9, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i8* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcEET0_T_SC_SB_(i8* %18, i8* %20, i8* %16)
  ret i8* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcEET0_T_SC_SB_(i8*, i8*, i8*) #0 comdat align 2 {
  %4 = alloca i8*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.224
  %8 = load i32, i32* @y.225
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1723227645, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %105
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1723227645, label %20
    i32 1739339472, label %40
    i32 -1235678699, label %85
    i32 644927879, label %87
  ]

; <label>:19:                                     ; preds = %17
  br label %105

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1739339472, i32 644927879
  store i32 %39, i32* %16
  br label %105

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %43 = alloca i8*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %41, i32 0, i32 0
  store i8* %0, i8** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %42, i32 0, i32 0
  store i8* %1, i8** %47, align 8
  store i8* %2, i8** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %45 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = load i8*, i8** %43, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %44, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %45, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = call i8* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_(i8* %54, i8* %56, i8* %52)
  store i8* %57, i8** %4
  %58 = load i32, i32* @x.224
  %59 = load i32, i32* @y.225
  %60 = sub i32 %58, 451031377
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 451031377
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1235678699, i32 644927879
  store i32 %84, i32* %16
  br label %105

; <label>:85:                                     ; preds = %17
  %86 = load volatile i8*, i8** %4
  ret i8* %86

; <label>:87:                                     ; preds = %17
  %88 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %90 = alloca i8*, align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %92 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %88, i32 0, i32 0
  store i8* %0, i8** %93, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %89, i32 0, i32 0
  store i8* %1, i8** %94, align 8
  store i8* %2, i8** %90, align 8
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %91 to i8*
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %92 to i8*
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = load i8*, i8** %90, align 8
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %91, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %92, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = call i8* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_(i8* %101, i8* %103, i8* %99)
  store i32 1739339472, i32* %16
  br label %105

; <label>:105:                                    ; preds = %87, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_(i8*, i8*, i8*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %4, i32 0, i32 0
  store i8* %0, i8** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  store i8* %1, i8** %12, align 8
  store i8* %2, i8** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %8, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = call i8* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i8* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %7, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %10, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = call i8* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i8* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %9, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = load i8*, i8** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %7, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %9, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = call i8* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET1_T0_SA_S9_(i8* %27, i8* %29, i8* %25)
  ret i8* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET1_T0_SA_S9_(i8*, i8*, i8*) #0 comdat {
  %4 = alloca i8*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.228
  %8 = load i32, i32* @y.229
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1033812370, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %87
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1033812370, label %20
    i32 924852137, label %28
    i32 1625873736, label %64
    i32 -1482585474, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %87

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 924852137, i32 -1482585474
  store i32 %27, i32* %16
  br label %87

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %31 = alloca i8*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %29, i32 0, i32 0
  store i8* %0, i8** %34, align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %30, i32 0, i32 0
  store i8* %1, i8** %35, align 8
  store i8* %2, i8** %31, align 8
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %32 to i8*
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %32, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = call i8* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i8* %39)
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %33 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %33, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = call i8* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i8* %44)
  %46 = load i8*, i8** %31, align 8
  %47 = call i8* @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i8* %46)
  %48 = call i8* @_ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_(i8* %40, i8* %45, i8* %47)
  store i8* %48, i8** %4
  %49 = load i32, i32* @x.228
  %50 = load i32, i32* @y.229
  %51 = sub i32 %49, -126933753
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -126933753
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1625873736, i32 -1482585474
  store i32 %63, i32* %16
  br label %87

; <label>:64:                                     ; preds = %17
  %65 = load volatile i8*, i8** %4
  ret i8* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %69 = alloca i8*, align 8
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %67, i32 0, i32 0
  store i8* %0, i8** %72, align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %68, i32 0, i32 0
  store i8* %1, i8** %73, align 8
  store i8* %2, i8** %69, align 8
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %70 to i8*
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %70, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = call i8* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i8* %77)
  %79 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %71 to i8*
  %80 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 8, i1 false)
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %71, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = call i8* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i8* %82)
  %84 = load i8*, i8** %69, align 8
  %85 = call i8* @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i8* %84)
  %86 = call i8* @_ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_(i8* %78, i8* %83, i8* %85)
  store i32 924852137, i32* %16
  br label %87

; <label>:87:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i8*) #0 comdat {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.230
  %6 = load i32, i32* @y.231
  %7 = add i32 %5, 991865914
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 991865914
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 45042900, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 45042900, label %19
    i32 1464375220, label %39
    i32 1560135193, label %66
    i32 436338766, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1464375220, i32 436338766
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %41, i32 0, i32 0
  store i8* %0, i8** %43, align 8
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %42 to i8*
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %42, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = call i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb0EE7_S_baseES7_(i8* %47)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %40, i32 0, i32 0
  store i8* %48, i8** %49, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %40, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  store i8* %51, i8** %2
  %52 = load i32, i32* @x.230
  %53 = load i32, i32* @y.231
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1560135193, i32 436338766
  store i32 %65, i32* %15
  br label %81

; <label>:66:                                     ; preds = %16
  %67 = load volatile i8*, i8** %2
  ret i8* %67

; <label>:68:                                     ; preds = %16
  %69 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %70, i32 0, i32 0
  store i8* %0, i8** %72, align 8
  %73 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %71 to i8*
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %71, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = call i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb0EE7_S_baseES7_(i8* %76)
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %69, i32 0, i32 0
  store i8* %77, i8** %78, align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %69, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  store i32 1464375220, i32* %15
  br label %81

; <label>:81:                                     ; preds = %68, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_(i8*, i8*, i8*) #0 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i8*, i8** %4, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = call i8* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_(i8* %8, i8* %9, i8* %10)
  ret i8* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i8*) #0 comdat {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.234
  %6 = load i32, i32* @y.235
  %7 = add i32 %5, -1349264211
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1349264211
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 109180440, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 109180440, label %19
    i32 454598042, label %27
    i32 1593254099, label %50
    i32 -99118556, label %52
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 454598042, i32 -99118556
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %28, i32 0, i32 0
  store i8* %0, i8** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %29 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %29, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = call i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb1EE7_S_baseES7_(i8* %34)
  store i8* %35, i8** %2
  %36 = load i32, i32* @x.234
  %37 = load i32, i32* @y.235
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1593254099, i32 -99118556
  store i32 %49, i32* %15
  br label %61

; <label>:50:                                     ; preds = %16
  %51 = load volatile i8*, i8** %2
  ret i8* %51

; <label>:52:                                     ; preds = %16
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %53, i32 0, i32 0
  store i8* %0, i8** %55, align 8
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %54 to i8*
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 8, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %54, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = call i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb1EE7_S_baseES7_(i8* %59)
  store i32 454598042, i32* %15
  br label %61

; <label>:61:                                     ; preds = %52, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_(i8*, i8*, i8*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %9 = load i8*, i8** %6, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = ptrtoint i8* %9 to i64
  %12 = ptrtoint i8* %10 to i64
  %13 = add i64 %11, 8984809315853623041
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, 8984809315853623041
  %16 = sub i64 %11, %12
  store i64 %15, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 -1696406057, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %95
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1696406057, label %22
    i32 829910082, label %26
    i32 -1861361041, label %53
    i32 908765985, label %72
    i32 1121532298, label %73
    i32 -1324653732, label %77
  ]

; <label>:21:                                     ; preds = %19
  br label %95

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 829910082, i32 1121532298
  store i32 %25, i32* %18
  br label %95

; <label>:26:                                     ; preds = %19
  %27 = load i32, i32* @x.236
  %28 = load i32, i32* @y.237
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -1861361041, i32 -1324653732
  store i32 %52, i32* %18
  br label %95

; <label>:53:                                     ; preds = %19
  %54 = load i8*, i8** %7, align 8
  %55 = load i8*, i8** %5, align 8
  %56 = load i64, i64* %8, align 8
  %57 = mul i64 1, %56
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %54, i8* %55, i64 %57, i32 1, i1 false)
  %58 = load i32, i32* @x.236
  %59 = load i32, i32* @y.237
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 908765985, i32 -1324653732
  store i32 %71, i32* %18
  br label %95

; <label>:72:                                     ; preds = %19
  store i32 1121532298, i32* %18
  br label %95

; <label>:73:                                     ; preds = %19
  %74 = load i8*, i8** %7, align 8
  %75 = load i64, i64* %8, align 8
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  ret i8* %76

; <label>:77:                                     ; preds = %19
  %78 = load i8*, i8** %7, align 8
  %79 = load i8*, i8** %5, align 8
  %80 = load i64, i64* %8, align 8
  %81 = add i64 0, -7496424945809253180
  %82 = sub i64 %81, 1
  %83 = sub i64 %82, -7496424945809253180
  %84 = sub i64 0, 1
  %85 = sub i64 0, %83
  %86 = sub i64 0, %80
  %87 = add i64 %85, %86
  %88 = sub i64 0, %87
  %89 = add i64 %83, %80
  %90 = sub i64 0, %80
  %91 = add i64 1, %90
  %92 = sub i64 1, %80
  %93 = mul i64 %91, %80
  %94 = mul i64 1, %80
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %78, i8* %79, i64 %94, i32 1, i1 false)
  store i32 -1861361041, i32* %18
  br label %95

; <label>:95:                                     ; preds = %77, %72, %53, %26, %22, %21
  br label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb1EE7_S_baseES7_(i8*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %2, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = call dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.21"* %2) #3
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.21"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  ret i8** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb0EE7_S_baseES7_(i8*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %3, i32 0, i32 0
  store i8* %0, i8** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.21"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  ret i8* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.21"*, i8** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.21"*, align 8
  %4 = alloca i8**, align 8
  store %"class.__gnu_cxx::__normal_iterator.21"* %0, %"class.__gnu_cxx::__normal_iterator.21"** %3, align 8
  store i8** %1, i8*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.21"*, %"class.__gnu_cxx::__normal_iterator.21"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.21", %"class.__gnu_cxx::__normal_iterator.21"* %5, i32 0, i32 0
  %7 = load i8**, i8*** %4, align 8
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIcSaIcEEEEvT_S6_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  %6 = alloca i32
  store i32 -1941568913, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %148
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -1941568913, label %10
    i32 -1127388107, label %38
    i32 -1633791045, label %56
    i32 2040531681, label %59
    i32 -2005835586, label %75
    i32 150542626, label %104
    i32 -1388308787, label %105
    i32 -1123613277, label %108
    i32 -1725251573, label %124
    i32 351135582, label %139
    i32 1961035501, label %140
    i32 -1413867611, label %144
    i32 499676831, label %147
  ]

; <label>:9:                                      ; preds = %7
  br label %148

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.246
  %12 = load i32, i32* @y.247
  %13 = sub i32 %11, -557448690
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -557448690
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1127388107, i32 1961035501
  store i32 %37, i32* %6
  br label %148

; <label>:38:                                     ; preds = %7
  %39 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %41 = icmp ne %"class.std::vector.0"* %39, %40
  store i1 %41, i1* %3
  %42 = load i32, i32* @x.246
  %43 = load i32, i32* @y.247
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1633791045, i32 1961035501
  store i32 %55, i32* %6
  br label %148

; <label>:56:                                     ; preds = %7
  %57 = load volatile i1, i1* %3
  %58 = select i1 %57, i32 2040531681, i32 -1123613277
  store i32 %58, i32* %6
  br label %148

; <label>:59:                                     ; preds = %7
  %60 = load i32, i32* @x.246
  %61 = load i32, i32* @y.247
  %62 = add i32 %60, 1426015405
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 1426015405
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 -2005835586, i32 -1413867611
  store i32 %74, i32* %6
  br label %148

; <label>:75:                                     ; preds = %7
  %76 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %77 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIcSaIcEEEPT_RS3_(%"class.std::vector.0"* dereferenceable(24) %76) #3
  call void @_ZSt8_DestroyISt6vectorIcSaIcEEEvPT_(%"class.std::vector.0"* %77)
  %78 = load i32, i32* @x.246
  %79 = load i32, i32* @y.247
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 150542626, i32 -1413867611
  store i32 %103, i32* %6
  br label %148

; <label>:104:                                    ; preds = %7
  store i32 -1388308787, i32* %6
  br label %148

; <label>:105:                                    ; preds = %7
  %106 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %107 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %106, i32 1
  store %"class.std::vector.0"* %107, %"class.std::vector.0"** %4, align 8
  store i32 -1941568913, i32* %6
  br label %148

; <label>:108:                                    ; preds = %7
  %109 = load i32, i32* @x.246
  %110 = load i32, i32* @y.247
  %111 = sub i32 %109, -303601013
  %112 = sub i32 %111, 1
  %113 = add i32 %112, -303601013
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 -1725251573, i32 499676831
  store i32 %123, i32* %6
  br label %148

; <label>:124:                                    ; preds = %7
  %125 = load i32, i32* @x.246
  %126 = load i32, i32* @y.247
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  %138 = select i1 %136, i32 351135582, i32 499676831
  store i32 %138, i32* %6
  br label %148

; <label>:139:                                    ; preds = %7
  ret void

; <label>:140:                                    ; preds = %7
  %141 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %142 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %143 = icmp ne %"class.std::vector.0"* %141, %142
  store i32 -1127388107, i32* %6
  br label %148

; <label>:144:                                    ; preds = %7
  %145 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %146 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIcSaIcEEEPT_RS3_(%"class.std::vector.0"* dereferenceable(24) %145) #3
  call void @_ZSt8_DestroyISt6vectorIcSaIcEEEvPT_(%"class.std::vector.0"* %146)
  store i32 -2005835586, i32* %6
  br label %148

; <label>:147:                                    ; preds = %7
  store i32 -1725251573, i32* %6
  br label %148

; <label>:148:                                    ; preds = %147, %144, %140, %124, %108, %105, %104, %75, %59, %56, %38, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIcSaIcEEEvPT_(%"class.std::vector.0"*) #5 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.248
  %5 = load i32, i32* @y.249
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1847196664, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1847196664, label %17
    i32 -800103599, label %25
    i32 21495678, label %55
    i32 472061999, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -800103599, i32 472061999
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %26, align 8
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %26, align 8
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.0"* %27) #3
  %28 = load i32, i32* @x.248
  %29 = load i32, i32* @y.249
  %30 = sub i32 %28, -2037481873
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -2037481873
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 21495678, i32 472061999
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %57, align 8
  %58 = load %"class.std::vector.0"*, %"class.std::vector.0"** %57, align 8
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.0"* %58) #3
  store i32 -800103599, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"*, %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %4
  %11 = alloca i32
  store i32 -1584429579, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %82
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1584429579, label %15
    i32 225997582, label %19
    i32 -1609427391, label %25
    i32 1578557816, label %52
    i32 1241854615, label %80
    i32 -482357131, label %81
  ]

; <label>:14:                                     ; preds = %12
  br label %82

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %17 = icmp ne %"class.std::vector.0"* %16, null
  %18 = select i1 %17, i32 225997582, i32 -1609427391
  store i32 %18, i32* %11
  br label %82

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %21 to %"class.std::allocator"*
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE10deallocateERS3_PS2_m(%"class.std::allocator"* dereferenceable(1) %22, %"class.std::vector.0"* %23, i64 %24)
  store i32 -1609427391, i32* %11
  br label %82

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.250
  %27 = load i32, i32* @y.251
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 1578557816, i32 -482357131
  store i32 %51, i32* %11
  br label %82

; <label>:52:                                     ; preds = %12
  %53 = load i32, i32* @x.250
  %54 = load i32, i32* @y.251
  %55 = sub i32 %53, -1815288023
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1815288023
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1241854615, i32 -482357131
  store i32 %79, i32* %11
  br label %82

; <label>:80:                                     ; preds = %12
  ret void

; <label>:81:                                     ; preds = %12
  store i32 1578557816, i32* %11
  br label %82

; <label>:82:                                     ; preds = %81, %52, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE10deallocateERS3_PS2_m(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator"* %8, %"class.std::vector.0"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.0"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.254
  %7 = load i32, i32* @y.255
  %8 = sub i32 %6, 1375988626
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1375988626
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -697778594, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -697778594, label %20
    i32 582915321, label %28
    i32 585483570, label %62
    i32 2057424485, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 582915321, i32 2057424485
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %29, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %29, align 8
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %34 = bitcast %"class.std::vector.0"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.254
  %36 = load i32, i32* @y.255
  %37 = add i32 %35, -137558303
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -137558303
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 585483570, i32 2057424485
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %65 = alloca %"class.std::vector.0"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %64, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %64, align 8
  %68 = load %"class.std::vector.0"*, %"class.std::vector.0"** %65, align 8
  %69 = bitcast %"class.std::vector.0"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 582915321, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIcSaIcEES2_EvT_S4_RSaIT0_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.256
  %7 = load i32, i32* @y.257
  %8 = add i32 %6, -1021438717
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1021438717
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1539730406, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1539730406, label %20
    i32 414952764, label %40
    i32 -1835190582, label %61
    i32 -1027988224, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 414952764, i32 -1027988224
  store i32 %39, i32* %16
  br label %68

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.0"*, align 8
  %42 = alloca %"class.std::vector.0"*, align 8
  %43 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %42, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %43, align 8
  %44 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %42, align 8
  call void @_ZSt8_DestroyIPSt6vectorIcSaIcEEEvT_S4_(%"class.std::vector.0"* %44, %"class.std::vector.0"* %45)
  %46 = load i32, i32* @x.256
  %47 = load i32, i32* @y.257
  %48 = sub i32 %46, 1384662443
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1384662443
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1835190582, i32 -1027988224
  store i32 %60, i32* %16
  br label %68

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.std::vector.0"*, align 8
  %64 = alloca %"class.std::vector.0"*, align 8
  %65 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %63, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %64, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %65, align 8
  %66 = load %"class.std::vector.0"*, %"class.std::vector.0"** %63, align 8
  %67 = load %"class.std::vector.0"*, %"class.std::vector.0"** %64, align 8
  call void @_ZSt8_DestroyIPSt6vectorIcSaIcEEEvT_S4_(%"class.std::vector.0"* %66, %"class.std::vector.0"* %67)
  store i32 414952764, i32* %16
  br label %68

; <label>:68:                                     ; preds = %62, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"*, %"class.std::vector.0"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.std::vector.0"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.std::vector.0"** %1, %"class.std::vector.0"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.0"**, %"class.std::vector.0"*** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %8, %"class.std::vector.0"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.0"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIcSaIcEES1_IS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"class.std::vector.0"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.5"*, i8** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.262
  %6 = load i32, i32* @y.263
  %7 = add i32 %5, -1342760052
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1342760052
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -731549296, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -731549296, label %19
    i32 80714435, label %39
    i32 293651993, label %73
    i32 1056810383, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 80714435, i32 1056810383
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.5"*, align 8
  %41 = alloca i8**, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %0, %"class.__gnu_cxx::__normal_iterator.5"** %40, align 8
  store i8** %1, i8*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %42, i32 0, i32 0
  %44 = load i8**, i8*** %41, align 8
  %45 = load i8*, i8** %44, align 8
  store i8* %45, i8** %43, align 8
  %46 = load i32, i32* @x.262
  %47 = load i32, i32* @y.263
  %48 = sub i32 %46, -1017144449
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1017144449
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 293651993, i32 1056810383
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.5"*, align 8
  %76 = alloca i8**, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %0, %"class.__gnu_cxx::__normal_iterator.5"** %75, align 8
  store i8** %1, i8*** %76, align 8
  %77 = load %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %75, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %77, i32 0, i32 0
  %79 = load i8**, i8*** %76, align 8
  %80 = load i8*, i8** %79, align 8
  store i8* %80, i8** %78, align 8
  store i32 80714435, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.5"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.5"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.5"* %0, %"class.__gnu_cxx::__normal_iterator.5"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.5"*, %"class.__gnu_cxx::__normal_iterator.5"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.5", %"class.__gnu_cxx::__normal_iterator.5"* %3, i32 0, i32 0
  ret i8** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEC2Ev(%"class.std::vector.6"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.266
  %3 = load i32, i32* @y.267
  %4 = sub i32 %2, 58285497
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 58285497
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %122

; <label>:16:                                     ; preds = %1, %122
  %17 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %17, align 8
  %18 = load %"class.std::vector.6"*, %"class.std::vector.6"** %17, align 8
  %19 = bitcast %"class.std::vector.6"* %18 to %"struct.std::_Vector_base.7"*
  %20 = load i32, i32* @x.266
  %21 = load i32, i32* @y.267
  %22 = sub i32 %20, -1008705419
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -1008705419
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %122

; <label>:46:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EEC2Ev(%"struct.std::_Vector_base.7"* %19)
          to label %47 unwind label %77

; <label>:47:                                     ; preds = %46
  %48 = load i32, i32* @x.266
  %49 = load i32, i32* @y.267
  %50 = add i32 %48, -505556224
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -505556224
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %126

; <label>:62:                                     ; preds = %47, %126
  %63 = load i32, i32* @x.266
  %64 = load i32, i32* @y.267
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %126

; <label>:76:                                     ; preds = %62
  ret void

; <label>:77:                                     ; preds = %46
  %78 = load i32, i32* @x.266
  %79 = load i32, i32* @y.267
  %80 = add i32 %78, 651271888
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, 651271888
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %127

; <label>:104:                                    ; preds = %77, %127
  %105 = landingpad { i8*, i32 }
          catch i8* null
  %106 = extractvalue { i8*, i32 } %105, 0
  call void @__clang_call_terminate(i8* %106) #11
  %107 = load i32, i32* @x.266
  %108 = load i32, i32* @y.267
  %109 = sub i32 %107, 2083473409
  %110 = sub i32 %109, 1
  %111 = add i32 %110, 2083473409
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %127

; <label>:121:                                    ; preds = %104
  unreachable

; <label>:122:                                    ; preds = %16, %1
  %123 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %123, align 8
  %124 = load %"class.std::vector.6"*, %"class.std::vector.6"** %123, align 8
  %125 = bitcast %"class.std::vector.6"* %124 to %"struct.std::_Vector_base.7"*
  br label %16

; <label>:126:                                    ; preds = %62, %47
  br label %62

; <label>:127:                                    ; preds = %104, %77
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  call void @__clang_call_terminate(i8* %129) #11
  br label %104
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE6resizeEm(%"class.std::vector.6"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.6"*
  %7 = alloca %"class.std::vector.6"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"class.std::vector.6"*, %"class.std::vector.6"** %7, align 8
  store %"class.std::vector.6"* %9, %"class.std::vector.6"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %12 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"* %11) #3
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 680596770, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %98
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 680596770, label %17
    i32 -1945859194, label %22
    i32 -133075509, label %31
    i32 -686915532, label %47
    i32 -1632600447, label %79
    i32 688948076, label %82
    i32 190119685, label %91
    i32 -841436998, label %92
    i32 -663270192, label %93
  ]

; <label>:16:                                     ; preds = %14
  br label %98

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1945859194, i32 -133075509
  store i32 %21, i32* %13
  br label %98

; <label>:22:                                     ; preds = %14
  %23 = load i64, i64* %8, align 8
  %24 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %25 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"* %24) #3
  %26 = sub i64 %23, -5651847233589531435
  %27 = sub i64 %26, %25
  %28 = add i64 %27, -5651847233589531435
  %29 = sub i64 %23, %25
  %30 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  call void @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE17_M_default_appendEm(%"class.std::vector.6"* %30, i64 %28)
  store i32 -841436998, i32* %13
  br label %98

; <label>:31:                                     ; preds = %14
  %32 = load i32, i32* @x.268
  %33 = load i32, i32* @y.269
  %34 = sub i32 %32, 662597467
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 662597467
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -686915532, i32 -663270192
  store i32 %46, i32* %13
  br label %98

; <label>:47:                                     ; preds = %14
  %48 = load i64, i64* %8, align 8
  %49 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %50 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"* %49) #3
  %51 = icmp ult i64 %48, %50
  store i1 %51, i1* %3
  %52 = load i32, i32* @x.268
  %53 = load i32, i32* @y.269
  %54 = sub i32 %52, 1530669492
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 1530669492
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1632600447, i32 -663270192
  store i32 %78, i32* %13
  br label %98

; <label>:79:                                     ; preds = %14
  %80 = load volatile i1, i1* %3
  %81 = select i1 %80, i32 688948076, i32 190119685
  store i32 %81, i32* %13
  br label %98

; <label>:82:                                     ; preds = %14
  %83 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %84 = bitcast %"class.std::vector.6"* %83 to %"struct.std::_Vector_base.7"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %85, i32 0, i32 0
  %87 = load %"class.std::vector.11"*, %"class.std::vector.11"** %86, align 8
  %88 = load i64, i64* %8, align 8
  %89 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %87, i64 %88
  %90 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  call void @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector.6"* %90, %"class.std::vector.11"* %89) #3
  store i32 190119685, i32* %13
  br label %98

; <label>:91:                                     ; preds = %14
  store i32 -841436998, i32* %13
  br label %98

; <label>:92:                                     ; preds = %14
  ret void

; <label>:93:                                     ; preds = %14
  %94 = load i64, i64* %8, align 8
  %95 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %96 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"* %95) #3
  %97 = icmp ult i64 %94, %96
  store i32 -686915532, i32* %13
  br label %98

; <label>:98:                                     ; preds = %93, %91, %82, %79, %47, %31, %22, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EEC2Ev(%"struct.std::_Vector_base.7"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %3 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.8"*
  call void @_ZNSaISt6vectorIN7MaxflowIxE4edgeESaIS2_EEEC2Ev(%"class.std::allocator.8"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN7MaxflowIxE4edgeESaIS2_EEEC2Ev(%"class.std::allocator.8"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.274
  %5 = load i32, i32* @y.275
  %6 = sub i32 %4, -267978532
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -267978532
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1068040071, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1068040071, label %18
    i32 1282313264, label %38
    i32 1284580626, label %57
    i32 -582918561, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1282313264, i32 -582918561
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %39, align 8
  %40 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %39, align 8
  %41 = bitcast %"class.std::allocator.8"* %40 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator.9"* %41) #3
  %42 = load i32, i32* @x.274
  %43 = load i32, i32* @y.275
  %44 = add i32 %42, 684468894
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 684468894
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1284580626, i32 -582918561
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %59, align 8
  %60 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %59, align 8
  %61 = bitcast %"class.std::allocator.8"* %60 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator.9"* %61) #3
  store i32 1282313264, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %3 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  %4 = bitcast %"class.std::vector.6"* %3 to %"struct.std::_Vector_base.7"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.11"*, %"class.std::vector.11"** %6, align 8
  %8 = bitcast %"class.std::vector.6"* %3 to %"struct.std::_Vector_base.7"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.11"*, %"class.std::vector.11"** %10, align 8
  %12 = ptrtoint %"class.std::vector.11"* %7 to i64
  %13 = ptrtoint %"class.std::vector.11"* %11 to i64
  %14 = add i64 %12, 1948465095280506966
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 1948465095280506966
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE17_M_default_appendEm(%"class.std::vector.6"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.280
  %4 = load i32, i32* @y.281
  %5 = sub i32 %3, 62751000
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 62751000
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %426

; <label>:17:                                     ; preds = %2, %426
  %18 = alloca %"class.std::vector.6"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca %"class.std::vector.11"*, align 8
  %23 = alloca %"class.std::vector.11"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %18, align 8
  store i64 %1, i64* %19, align 8
  %26 = load %"class.std::vector.6"*, %"class.std::vector.6"** %18, align 8
  %27 = load i64, i64* %19, align 8
  %28 = icmp ne i64 %27, 0
  %29 = load i32, i32* @x.280
  %30 = load i32, i32* @y.281
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %426

; <label>:42:                                     ; preds = %17
  br i1 %28, label %43, label %309

; <label>:43:                                     ; preds = %42
  %44 = load i32, i32* @x.280
  %45 = load i32, i32* @y.281
  %46 = add i32 %44, 158025415
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 158025415
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %438

; <label>:58:                                     ; preds = %43, %438
  %59 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %60, i32 0, i32 2
  %62 = load %"class.std::vector.11"*, %"class.std::vector.11"** %61, align 8
  %63 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load %"class.std::vector.11"*, %"class.std::vector.11"** %65, align 8
  %67 = ptrtoint %"class.std::vector.11"* %62 to i64
  %68 = ptrtoint %"class.std::vector.11"* %66 to i64
  %69 = add i64 %67, 2706630867639115260
  %70 = sub i64 %69, %68
  %71 = sub i64 %70, 2706630867639115260
  %72 = sub i64 %67, %68
  %73 = sdiv exact i64 %71, 24
  %74 = load i64, i64* %19, align 8
  %75 = icmp uge i64 %73, %74
  %76 = load i32, i32* @x.280
  %77 = load i32, i32* @y.281
  %78 = add i32 %76, 1260179497
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, 1260179497
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %438

; <label>:90:                                     ; preds = %58
  br i1 %75, label %91, label %103

; <label>:91:                                     ; preds = %90
  %92 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %93, i32 0, i32 1
  %95 = load %"class.std::vector.11"*, %"class.std::vector.11"** %94, align 8
  %96 = load i64, i64* %19, align 8
  %97 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %98 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %97) #3
  %99 = call %"class.std::vector.11"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::vector.11"* %95, i64 %96, %"class.std::allocator.8"* dereferenceable(1) %98)
  %100 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %101 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %101, i32 0, i32 1
  store %"class.std::vector.11"* %99, %"class.std::vector.11"** %102, align 8
  br label %266

; <label>:103:                                    ; preds = %90
  %104 = load i64, i64* %19, align 8
  %105 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector.6"* %26, i64 %104, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %105, i64* %20, align 8
  %106 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"* %26) #3
  store i64 %106, i64* %21, align 8
  %107 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %108 = load i64, i64* %20, align 8
  %109 = call %"class.std::vector.11"* @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.7"* %107, i64 %108)
  store %"class.std::vector.11"* %109, %"class.std::vector.11"** %22, align 8
  %110 = load %"class.std::vector.11"*, %"class.std::vector.11"** %22, align 8
  store %"class.std::vector.11"* %110, %"class.std::vector.11"** %23, align 8
  %111 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %112, i32 0, i32 0
  %114 = load %"class.std::vector.11"*, %"class.std::vector.11"** %113, align 8
  %115 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %116, i32 0, i32 1
  %118 = load %"class.std::vector.11"*, %"class.std::vector.11"** %117, align 8
  %119 = load %"class.std::vector.11"*, %"class.std::vector.11"** %22, align 8
  %120 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %121 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %120) #3
  %122 = invoke %"class.std::vector.11"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.11"* %114, %"class.std::vector.11"* %118, %"class.std::vector.11"* %119, %"class.std::allocator.8"* dereferenceable(1) %121)
          to label %123 unwind label %130

; <label>:123:                                    ; preds = %103
  store %"class.std::vector.11"* %122, %"class.std::vector.11"** %23, align 8
  %124 = load %"class.std::vector.11"*, %"class.std::vector.11"** %23, align 8
  %125 = load i64, i64* %19, align 8
  %126 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %127 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %126) #3
  %128 = invoke %"class.std::vector.11"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::vector.11"* %124, i64 %125, %"class.std::allocator.8"* dereferenceable(1) %127)
          to label %129 unwind label %130

; <label>:129:                                    ; preds = %123
  store %"class.std::vector.11"* %128, %"class.std::vector.11"** %23, align 8
  br label %222

; <label>:130:                                    ; preds = %123, %103
  %131 = landingpad { i8*, i32 }
          catch i8* null
  %132 = extractvalue { i8*, i32 } %131, 0
  store i8* %132, i8** %24, align 8
  %133 = extractvalue { i8*, i32 } %131, 1
  store i32 %133, i32* %25, align 4
  br label %134

; <label>:134:                                    ; preds = %130
  %135 = load i8*, i8** %24, align 8
  %136 = call i8* @__cxa_begin_catch(i8* %135) #3
  %137 = load %"class.std::vector.11"*, %"class.std::vector.11"** %22, align 8
  %138 = load %"class.std::vector.11"*, %"class.std::vector.11"** %23, align 8
  %139 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %140 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %139) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.11"* %137, %"class.std::vector.11"* %138, %"class.std::allocator.8"* dereferenceable(1) %140)
          to label %141 unwind label %176

; <label>:141:                                    ; preds = %134
  %142 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %143 = load %"class.std::vector.11"*, %"class.std::vector.11"** %22, align 8
  %144 = load i64, i64* %20, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.7"* %142, %"class.std::vector.11"* %143, i64 %144)
          to label %145 unwind label %176

; <label>:145:                                    ; preds = %141
  %146 = load i32, i32* @x.280
  %147 = load i32, i32* @y.281
  %148 = add i32 %146, 1583817186
  %149 = sub i32 %148, 1
  %150 = sub i32 %149, 1583817186
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = and i1 %154, %155
  %157 = xor i1 %154, %155
  %158 = or i1 %156, %157
  %159 = or i1 %154, %155
  br i1 %158, label %160, label %498

; <label>:160:                                    ; preds = %145, %498
  %161 = load i32, i32* @x.280
  %162 = load i32, i32* @y.281
  %163 = add i32 %161, 340808370
  %164 = sub i32 %163, 1
  %165 = sub i32 %164, 340808370
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  br i1 %173, label %175, label %498

; <label>:175:                                    ; preds = %160
  invoke void @__cxa_rethrow() #12
          to label %425 unwind label %176

; <label>:176:                                    ; preds = %175, %141, %134
  %177 = landingpad { i8*, i32 }
          cleanup
  %178 = extractvalue { i8*, i32 } %177, 0
  store i8* %178, i8** %24, align 8
  %179 = extractvalue { i8*, i32 } %177, 1
  store i32 %179, i32* %25, align 4
  invoke void @__cxa_end_catch()
          to label %180 unwind label %422

; <label>:180:                                    ; preds = %176
  %181 = load i32, i32* @x.280
  %182 = load i32, i32* @y.281
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %499

; <label>:206:                                    ; preds = %180, %499
  %207 = load i32, i32* @x.280
  %208 = load i32, i32* @y.281
  %209 = sub i32 %207, 882115014
  %210 = sub i32 %209, 1
  %211 = add i32 %210, 882115014
  %212 = sub i32 %207, 1
  %213 = mul i32 %207, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %208, 10
  %217 = and i1 %215, %216
  %218 = xor i1 %215, %216
  %219 = or i1 %217, %218
  %220 = or i1 %215, %216
  br i1 %219, label %221, label %499

; <label>:221:                                    ; preds = %206
  br label %364

; <label>:222:                                    ; preds = %129
  %223 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %224 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %223, i32 0, i32 0
  %225 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %224, i32 0, i32 0
  %226 = load %"class.std::vector.11"*, %"class.std::vector.11"** %225, align 8
  %227 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %228 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %227, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %228, i32 0, i32 1
  %230 = load %"class.std::vector.11"*, %"class.std::vector.11"** %229, align 8
  %231 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %232 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %231) #3
  call void @_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.11"* %226, %"class.std::vector.11"* %230, %"class.std::allocator.8"* dereferenceable(1) %232)
  %233 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %234 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %235 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %234, i32 0, i32 0
  %236 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %235, i32 0, i32 0
  %237 = load %"class.std::vector.11"*, %"class.std::vector.11"** %236, align 8
  %238 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %239 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %238, i32 0, i32 0
  %240 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %239, i32 0, i32 2
  %241 = load %"class.std::vector.11"*, %"class.std::vector.11"** %240, align 8
  %242 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %242, i32 0, i32 0
  %244 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %243, i32 0, i32 0
  %245 = load %"class.std::vector.11"*, %"class.std::vector.11"** %244, align 8
  %246 = ptrtoint %"class.std::vector.11"* %241 to i64
  %247 = ptrtoint %"class.std::vector.11"* %245 to i64
  %248 = sub i64 0, %247
  %249 = add i64 %246, %248
  %250 = sub i64 %246, %247
  %251 = sdiv exact i64 %249, 24
  call void @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.7"* %233, %"class.std::vector.11"* %237, i64 %251)
  %252 = load %"class.std::vector.11"*, %"class.std::vector.11"** %22, align 8
  %253 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %254 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %253, i32 0, i32 0
  %255 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %254, i32 0, i32 0
  store %"class.std::vector.11"* %252, %"class.std::vector.11"** %255, align 8
  %256 = load %"class.std::vector.11"*, %"class.std::vector.11"** %23, align 8
  %257 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %258 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %257, i32 0, i32 0
  %259 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %258, i32 0, i32 1
  store %"class.std::vector.11"* %256, %"class.std::vector.11"** %259, align 8
  %260 = load %"class.std::vector.11"*, %"class.std::vector.11"** %22, align 8
  %261 = load i64, i64* %20, align 8
  %262 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %260, i64 %261
  %263 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %264 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %263, i32 0, i32 0
  %265 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %264, i32 0, i32 2
  store %"class.std::vector.11"* %262, %"class.std::vector.11"** %265, align 8
  br label %266

; <label>:266:                                    ; preds = %222, %91
  %267 = load i32, i32* @x.280
  %268 = load i32, i32* @y.281
  %269 = sub i32 %267, -162186700
  %270 = sub i32 %269, 1
  %271 = add i32 %270, -162186700
  %272 = sub i32 %267, 1
  %273 = mul i32 %267, %271
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %268, 10
  %277 = and i1 %275, %276
  %278 = xor i1 %275, %276
  %279 = or i1 %277, %278
  %280 = or i1 %275, %276
  br i1 %279, label %281, label %500

; <label>:281:                                    ; preds = %266, %500
  %282 = load i32, i32* @x.280
  %283 = load i32, i32* @y.281
  %284 = add i32 %282, 1466592484
  %285 = sub i32 %284, 1
  %286 = sub i32 %285, 1466592484
  %287 = sub i32 %282, 1
  %288 = mul i32 %282, %286
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %283, 10
  %292 = xor i1 %290, true
  %293 = xor i1 %291, true
  %294 = xor i1 false, true
  %295 = and i1 %292, false
  %296 = and i1 %290, %294
  %297 = and i1 %293, false
  %298 = and i1 %291, %294
  %299 = or i1 %295, %296
  %300 = or i1 %297, %298
  %301 = xor i1 %299, %300
  %302 = or i1 %292, %293
  %303 = xor i1 %302, true
  %304 = or i1 false, %294
  %305 = and i1 %303, %304
  %306 = or i1 %301, %305
  %307 = or i1 %290, %291
  br i1 %306, label %308, label %500

; <label>:308:                                    ; preds = %281
  br label %309

; <label>:309:                                    ; preds = %308, %42
  %310 = load i32, i32* @x.280
  %311 = load i32, i32* @y.281
  %312 = add i32 %310, 124665856
  %313 = sub i32 %312, 1
  %314 = sub i32 %313, 124665856
  %315 = sub i32 %310, 1
  %316 = mul i32 %310, %314
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %311, 10
  %320 = xor i1 %318, true
  %321 = xor i1 %319, true
  %322 = xor i1 false, true
  %323 = and i1 %320, false
  %324 = and i1 %318, %322
  %325 = and i1 %321, false
  %326 = and i1 %319, %322
  %327 = or i1 %323, %324
  %328 = or i1 %325, %326
  %329 = xor i1 %327, %328
  %330 = or i1 %320, %321
  %331 = xor i1 %330, true
  %332 = or i1 false, %322
  %333 = and i1 %331, %332
  %334 = or i1 %329, %333
  %335 = or i1 %318, %319
  br i1 %334, label %336, label %501

; <label>:336:                                    ; preds = %309, %501
  %337 = load i32, i32* @x.280
  %338 = load i32, i32* @y.281
  %339 = add i32 %337, -227027808
  %340 = sub i32 %339, 1
  %341 = sub i32 %340, -227027808
  %342 = sub i32 %337, 1
  %343 = mul i32 %337, %341
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %338, 10
  %347 = xor i1 %345, true
  %348 = xor i1 %346, true
  %349 = xor i1 true, true
  %350 = and i1 %347, true
  %351 = and i1 %345, %349
  %352 = and i1 %348, true
  %353 = and i1 %346, %349
  %354 = or i1 %350, %351
  %355 = or i1 %352, %353
  %356 = xor i1 %354, %355
  %357 = or i1 %347, %348
  %358 = xor i1 %357, true
  %359 = or i1 true, %349
  %360 = and i1 %358, %359
  %361 = or i1 %356, %360
  %362 = or i1 %345, %346
  br i1 %361, label %363, label %501

; <label>:363:                                    ; preds = %336
  ret void

; <label>:364:                                    ; preds = %221
  %365 = load i32, i32* @x.280
  %366 = load i32, i32* @y.281
  %367 = sub i32 %365, 506727878
  %368 = sub i32 %367, 1
  %369 = add i32 %368, 506727878
  %370 = sub i32 %365, 1
  %371 = mul i32 %365, %369
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %366, 10
  %375 = xor i1 %373, true
  %376 = xor i1 %374, true
  %377 = xor i1 true, true
  %378 = and i1 %375, true
  %379 = and i1 %373, %377
  %380 = and i1 %376, true
  %381 = and i1 %374, %377
  %382 = or i1 %378, %379
  %383 = or i1 %380, %381
  %384 = xor i1 %382, %383
  %385 = or i1 %375, %376
  %386 = xor i1 %385, true
  %387 = or i1 true, %377
  %388 = and i1 %386, %387
  %389 = or i1 %384, %388
  %390 = or i1 %373, %374
  br i1 %389, label %391, label %502

; <label>:391:                                    ; preds = %364, %502
  %392 = load i8*, i8** %24, align 8
  %393 = load i32, i32* %25, align 4
  %394 = insertvalue { i8*, i32 } undef, i8* %392, 0
  %395 = insertvalue { i8*, i32 } %394, i32 %393, 1
  %396 = load i32, i32* @x.280
  %397 = load i32, i32* @y.281
  %398 = sub i32 0, 1
  %399 = add i32 %396, %398
  %400 = sub i32 %396, 1
  %401 = mul i32 %396, %399
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %397, 10
  %405 = xor i1 %403, true
  %406 = xor i1 %404, true
  %407 = xor i1 true, true
  %408 = and i1 %405, true
  %409 = and i1 %403, %407
  %410 = and i1 %406, true
  %411 = and i1 %404, %407
  %412 = or i1 %408, %409
  %413 = or i1 %410, %411
  %414 = xor i1 %412, %413
  %415 = or i1 %405, %406
  %416 = xor i1 %415, true
  %417 = or i1 true, %407
  %418 = and i1 %416, %417
  %419 = or i1 %414, %418
  %420 = or i1 %403, %404
  br i1 %419, label %421, label %502

; <label>:421:                                    ; preds = %391
  resume { i8*, i32 } %395

; <label>:422:                                    ; preds = %176
  %423 = landingpad { i8*, i32 }
          catch i8* null
  %424 = extractvalue { i8*, i32 } %423, 0
  call void @__clang_call_terminate(i8* %424) #11
  unreachable

; <label>:425:                                    ; preds = %175
  unreachable

; <label>:426:                                    ; preds = %17, %2
  %427 = alloca %"class.std::vector.6"*, align 8
  %428 = alloca i64, align 8
  %429 = alloca i64, align 8
  %430 = alloca i64, align 8
  %431 = alloca %"class.std::vector.11"*, align 8
  %432 = alloca %"class.std::vector.11"*, align 8
  %433 = alloca i8*
  %434 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %427, align 8
  store i64 %1, i64* %428, align 8
  %435 = load %"class.std::vector.6"*, %"class.std::vector.6"** %427, align 8
  %436 = load i64, i64* %428, align 8
  %437 = icmp ne i64 %436, 0
  br label %17

; <label>:438:                                    ; preds = %58, %43
  %439 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %440 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %439, i32 0, i32 0
  %441 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %440, i32 0, i32 2
  %442 = load %"class.std::vector.11"*, %"class.std::vector.11"** %441, align 8
  %443 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %444 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %443, i32 0, i32 0
  %445 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %444, i32 0, i32 1
  %446 = load %"class.std::vector.11"*, %"class.std::vector.11"** %445, align 8
  %447 = ptrtoint %"class.std::vector.11"* %442 to i64
  %448 = ptrtoint %"class.std::vector.11"* %446 to i64
  %449 = sub i64 %447, 5974399540019991787
  %450 = sub i64 %449, %448
  %451 = add i64 %450, 5974399540019991787
  %452 = sub i64 %447, %448
  %453 = mul i64 %451, %448
  %454 = shl i64 %447, %448
  %455 = add i64 %447, -2420560599896768909
  %456 = sub i64 %455, %448
  %457 = sub i64 %456, -2420560599896768909
  %458 = sub i64 %447, %448
  %459 = mul i64 %457, %448
  %460 = sub i64 0, %447
  %461 = add i64 0, %460
  %462 = sub i64 0, %447
  %463 = sub i64 0, %448
  %464 = sub i64 %461, %463
  %465 = add i64 %461, %448
  %466 = sub i64 %447, 6161408189883775463
  %467 = sub i64 %466, %448
  %468 = add i64 %467, 6161408189883775463
  %469 = sub i64 %447, %448
  %470 = mul i64 %468, %448
  %471 = sub i64 0, %447
  %472 = add i64 0, %471
  %473 = sub i64 0, %447
  %474 = sub i64 %472, -2973685659687109798
  %475 = add i64 %474, %448
  %476 = add i64 %475, -2973685659687109798
  %477 = add i64 %472, %448
  %478 = sub i64 0, -2654196440329153303
  %479 = sub i64 %478, %447
  %480 = add i64 %479, -2654196440329153303
  %481 = sub i64 0, %447
  %482 = sub i64 0, %448
  %483 = sub i64 %480, %482
  %484 = add i64 %480, %448
  %485 = sub i64 %447, -812108576433333796
  %486 = sub i64 %485, %448
  %487 = add i64 %486, -812108576433333796
  %488 = sub i64 %447, %448
  %489 = sub i64 %487, 6688443466364929935
  %490 = sub i64 %489, 24
  %491 = add i64 %490, 6688443466364929935
  %492 = sub i64 %487, 24
  %493 = mul i64 %491, 24
  %494 = shl i64 %487, 24
  %495 = sdiv exact i64 %487, 24
  %496 = load i64, i64* %19, align 8
  %497 = icmp uge i64 %495, %496
  br label %58

; <label>:498:                                    ; preds = %160, %145
  br label %160

; <label>:499:                                    ; preds = %206, %180
  br label %206

; <label>:500:                                    ; preds = %281, %266
  br label %281

; <label>:501:                                    ; preds = %336, %309
  br label %336

; <label>:502:                                    ; preds = %391, %364
  %503 = load i8*, i8** %24, align 8
  %504 = load i32, i32* %25, align 4
  %505 = insertvalue { i8*, i32 } undef, i8* %503, 0
  %506 = insertvalue { i8*, i32 } %505, i32 %504, 1
  br label %391
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector.6"*, %"class.std::vector.11"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.282
  %4 = load i32, i32* @y.283
  %5 = sub i32 %3, -92356150
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -92356150
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %134

; <label>:17:                                     ; preds = %2, %134
  %18 = alloca %"class.std::vector.6"*, align 8
  %19 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %18, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %19, align 8
  %20 = load %"class.std::vector.6"*, %"class.std::vector.6"** %18, align 8
  %21 = load %"class.std::vector.11"*, %"class.std::vector.11"** %19, align 8
  %22 = bitcast %"class.std::vector.6"* %20 to %"struct.std::_Vector_base.7"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %23, i32 0, i32 1
  %25 = load %"class.std::vector.11"*, %"class.std::vector.11"** %24, align 8
  %26 = bitcast %"class.std::vector.6"* %20 to %"struct.std::_Vector_base.7"*
  %27 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %26) #3
  %28 = load i32, i32* @x.282
  %29 = load i32, i32* @y.283
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %134

; <label>:41:                                     ; preds = %17
  invoke void @_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.11"* %21, %"class.std::vector.11"* %25, %"class.std::allocator.8"* dereferenceable(1) %27)
          to label %42 unwind label %89

; <label>:42:                                     ; preds = %41
  %43 = load i32, i32* @x.282
  %44 = load i32, i32* @y.283
  %45 = add i32 %43, 621800612
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 621800612
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %145

; <label>:69:                                     ; preds = %42, %145
  %70 = load %"class.std::vector.11"*, %"class.std::vector.11"** %19, align 8
  %71 = bitcast %"class.std::vector.6"* %20 to %"struct.std::_Vector_base.7"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %72, i32 0, i32 1
  store %"class.std::vector.11"* %70, %"class.std::vector.11"** %73, align 8
  %74 = load i32, i32* @x.282
  %75 = load i32, i32* @y.283
  %76 = add i32 %74, -312375759
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, -312375759
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %145

; <label>:88:                                     ; preds = %69
  ret void

; <label>:89:                                     ; preds = %41
  %90 = load i32, i32* @x.282
  %91 = load i32, i32* @y.283
  %92 = add i32 %90, -1009604639
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, -1009604639
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %150

; <label>:116:                                    ; preds = %89, %150
  %117 = landingpad { i8*, i32 }
          catch i8* null
  %118 = extractvalue { i8*, i32 } %117, 0
  call void @__clang_call_terminate(i8* %118) #11
  %119 = load i32, i32* @x.282
  %120 = load i32, i32* @y.283
  %121 = sub i32 %119, 1252975176
  %122 = sub i32 %121, 1
  %123 = add i32 %122, 1252975176
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  br i1 %131, label %133, label %150

; <label>:133:                                    ; preds = %116
  unreachable

; <label>:134:                                    ; preds = %17, %2
  %135 = alloca %"class.std::vector.6"*, align 8
  %136 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %135, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %136, align 8
  %137 = load %"class.std::vector.6"*, %"class.std::vector.6"** %135, align 8
  %138 = load %"class.std::vector.11"*, %"class.std::vector.11"** %136, align 8
  %139 = bitcast %"class.std::vector.6"* %137 to %"struct.std::_Vector_base.7"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %139, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %140, i32 0, i32 1
  %142 = load %"class.std::vector.11"*, %"class.std::vector.11"** %141, align 8
  %143 = bitcast %"class.std::vector.6"* %137 to %"struct.std::_Vector_base.7"*
  %144 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %143) #3
  br label %17

; <label>:145:                                    ; preds = %69, %42
  %146 = load %"class.std::vector.11"*, %"class.std::vector.11"** %19, align 8
  %147 = bitcast %"class.std::vector.6"* %20 to %"struct.std::_Vector_base.7"*
  %148 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %148, i32 0, i32 1
  store %"class.std::vector.11"* %146, %"class.std::vector.11"** %149, align 8
  br label %69

; <label>:150:                                    ; preds = %116, %89
  %151 = landingpad { i8*, i32 }
          catch i8* null
  %152 = extractvalue { i8*, i32 } %151, 0
  call void @__clang_call_terminate(i8* %152) #11
  br label %116
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::vector.11"*, i64, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.11"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %6, align 8
  %7 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::vector.11"* @_ZSt25__uninitialized_default_nIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEmET_S7_T0_(%"class.std::vector.11"* %7, i64 %8)
  ret %"class.std::vector.11"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.6"*
  %7 = alloca %"class.std::vector.6"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %12 = load %"class.std::vector.6"*, %"class.std::vector.6"** %7, align 8
  store %"class.std::vector.6"* %12, %"class.std::vector.6"** %6
  %13 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %14 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector.6"* %13) #3
  %15 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %16 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"* %15) #3
  %17 = sub i64 0, %16
  %18 = add i64 %14, %17
  %19 = sub i64 %14, %16
  store i64 %18, i64* %5
  %20 = load i64, i64* %8, align 8
  store i64 %20, i64* %4
  %21 = alloca i32
  store i32 1534236182, i32* %21
  %22 = alloca i64
  br label %23

; <label>:23:                                     ; preds = %3, %61
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 1534236182, label %26
    i32 1296889547, label %31
    i32 2113965311, label %33
    i32 136849423, label %48
    i32 1366163493, label %54
    i32 89874308, label %57
    i32 -701865829, label %59
  ]

; <label>:25:                                     ; preds = %23
  br label %61

; <label>:26:                                     ; preds = %23
  %27 = load volatile i64, i64* %5
  %28 = load volatile i64, i64* %4
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i32 1296889547, i32 2113965311
  store i32 %30, i32* %21
  br label %61

; <label>:31:                                     ; preds = %23
  %32 = load i8*, i8** %9, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %32) #12
  unreachable

; <label>:33:                                     ; preds = %23
  %34 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %35 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"* %34) #3
  %36 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %37 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"* %36) #3
  store i64 %37, i64* %11, align 8
  %38 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %8)
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 0, %39
  %41 = sub i64 %35, %40
  %42 = add i64 %35, %39
  store i64 %41, i64* %10, align 8
  %43 = load i64, i64* %10, align 8
  %44 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %45 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"* %44) #3
  %46 = icmp ult i64 %43, %45
  %47 = select i1 %46, i32 1366163493, i32 136849423
  store i32 %47, i32* %21
  br label %61

; <label>:48:                                     ; preds = %23
  %49 = load i64, i64* %10, align 8
  %50 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %51 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector.6"* %50) #3
  %52 = icmp ugt i64 %49, %51
  %53 = select i1 %52, i32 1366163493, i32 89874308
  store i32 %53, i32* %21
  br label %61

; <label>:54:                                     ; preds = %23
  %55 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %6
  %56 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector.6"* %55) #3
  store i32 -701865829, i32* %21
  store i64 %56, i64* %22
  br label %61

; <label>:57:                                     ; preds = %23
  %58 = load i64, i64* %10, align 8
  store i32 -701865829, i32* %21
  store i64 %58, i64* %22
  br label %61

; <label>:59:                                     ; preds = %23
  %60 = load i64, i64* %22
  ret i64 %60

; <label>:61:                                     ; preds = %57, %54, %48, %33, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZNSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.7"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.7"*
  %5 = alloca %"struct.std::_Vector_base.7"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %5, align 8
  store %"struct.std::_Vector_base.7"* %7, %"struct.std::_Vector_base.7"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 1148143887, i32* %9
  %10 = alloca %"class.std::vector.11"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1148143887, label %14
    i32 -68041839, label %18
    i32 -1022436400, label %24
    i32 -1786109766, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -68041839, i32 -1022436400
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %20 to %"class.std::allocator.8"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::vector.11"* @_ZNSt16allocator_traitsISaISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEE8allocateERS6_m(%"class.std::allocator.8"* dereferenceable(1) %21, i64 %22)
  store i32 -1786109766, i32* %9
  store %"class.std::vector.11"* %23, %"class.std::vector.11"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -1786109766, i32* %9
  store %"class.std::vector.11"* null, %"class.std::vector.11"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"class.std::vector.11"*, %"class.std::vector.11"** %10
  ret %"class.std::vector.11"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.11"*, %"class.std::vector.11"*, %"class.std::vector.11"*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.11"*, align 8
  %6 = alloca %"class.std::vector.11"*, align 8
  %7 = alloca %"class.std::vector.11"*, align 8
  %8 = alloca %"class.std::allocator.8"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %5, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %6, align 8
  store %"class.std::vector.11"* %2, %"class.std::vector.11"** %7, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %8, align 8
  %11 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %12 = call %"class.std::vector.11"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.11"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %"class.std::vector.11"* %12, %"class.std::vector.11"** %13, align 8
  %14 = load %"class.std::vector.11"*, %"class.std::vector.11"** %6, align 8
  %15 = call %"class.std::vector.11"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.11"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %"class.std::vector.11"* %15, %"class.std::vector.11"** %16, align 8
  %17 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  %18 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.11"*, %"class.std::vector.11"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.11"*, %"class.std::vector.11"** %21, align 8
  %23 = call %"class.std::vector.11"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::vector.11"* %20, %"class.std::vector.11"* %22, %"class.std::vector.11"* %17, %"class.std::allocator.8"* dereferenceable(1) %18)
  ret %"class.std::vector.11"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZSt25__uninitialized_default_nIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEmET_S7_T0_(%"class.std::vector.11"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.11"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.292
  %7 = load i32, i32* @y.293
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 950221014, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 950221014, label %19
    i32 1603652051, label %39
    i32 -1609593714, label %73
    i32 1595573246, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1603652051, i32 1595573246
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.11"*, align 8
  %41 = alloca i64, align 8
  %42 = alloca i8, align 1
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %40, align 8
  store i64 %1, i64* %41, align 8
  store i8 1, i8* %42, align 1
  %43 = load %"class.std::vector.11"*, %"class.std::vector.11"** %40, align 8
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::vector.11"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN7MaxflowIxE4edgeESaIS5_EEmEET_S9_T0_(%"class.std::vector.11"* %43, i64 %44)
  store %"class.std::vector.11"* %45, %"class.std::vector.11"** %3
  %46 = load i32, i32* @x.292
  %47 = load i32, i32* @y.293
  %48 = sub i32 %46, -312257948
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -312257948
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1609593714, i32 1595573246
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %3
  ret %"class.std::vector.11"* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::vector.11"*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8, align 1
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %76, align 8
  store i64 %1, i64* %77, align 8
  store i8 1, i8* %78, align 1
  %79 = load %"class.std::vector.11"*, %"class.std::vector.11"** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call %"class.std::vector.11"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN7MaxflowIxE4edgeESaIS5_EEmEET_S9_T0_(%"class.std::vector.11"* %79, i64 %80)
  store i32 1603652051, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN7MaxflowIxE4edgeESaIS5_EEmEET_S9_T0_(%"class.std::vector.11"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::vector.11"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  store %"class.std::vector.11"* %8, %"class.std::vector.11"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %58, %2
  %10 = load i64, i64* %4, align 8
  %11 = icmp ugt i64 %10, 0
  br i1 %11, label %12, label %147

; <label>:12:                                     ; preds = %9
  %13 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %14 = call %"class.std::vector.11"* @_ZSt11__addressofISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.11"* dereferenceable(24) %13) #3
  invoke void @_ZSt10_ConstructISt6vectorIN7MaxflowIxE4edgeESaIS3_EEJEEvPT_DpOT0_(%"class.std::vector.11"* %14)
          to label %15 unwind label %66

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* @x.294
  %17 = load i32, i32* @y.295
  %18 = add i32 %16, 1693513017
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, 1693513017
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %258

; <label>:30:                                     ; preds = %15, %258
  %31 = load i32, i32* @x.294
  %32 = load i32, i32* @y.295
  %33 = sub i32 %31, -1233354628
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -1233354628
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %258

; <label>:57:                                     ; preds = %30
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i64, i64* %4, align 8
  %60 = sub i64 %59, -2139587820144858004
  %61 = add i64 %60, -1
  %62 = add i64 %61, -2139587820144858004
  %63 = add i64 %59, -1
  store i64 %62, i64* %4, align 8
  %64 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %65 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %64, i32 1
  store %"class.std::vector.11"* %65, %"class.std::vector.11"** %5, align 8
  br label %9

; <label>:66:                                     ; preds = %12
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %6, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %7, align 4
  br label %70

; <label>:70:                                     ; preds = %66
  %71 = load i32, i32* @x.294
  %72 = load i32, i32* @y.295
  %73 = sub i32 %71, -56496645
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -56496645
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %259

; <label>:85:                                     ; preds = %70, %259
  %86 = load i8*, i8** %6, align 8
  %87 = call i8* @__cxa_begin_catch(i8* %86) #3
  %88 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %89 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %90 = load i32, i32* @x.294
  %91 = load i32, i32* @y.295
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %259

; <label>:115:                                    ; preds = %85
  invoke void @_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.11"* %88, %"class.std::vector.11"* %89)
          to label %116 unwind label %149

; <label>:116:                                    ; preds = %115
  %117 = load i32, i32* @x.294
  %118 = load i32, i32* @y.295
  %119 = sub i32 %117, 2072618317
  %120 = sub i32 %119, 1
  %121 = add i32 %120, 2072618317
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  br i1 %129, label %131, label %264

; <label>:131:                                    ; preds = %116, %264
  %132 = load i32, i32* @x.294
  %133 = load i32, i32* @y.295
  %134 = add i32 %132, 91323596
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, 91323596
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  br i1 %144, label %146, label %264

; <label>:146:                                    ; preds = %131
  invoke void @__cxa_rethrow() #12
          to label %257 unwind label %149

; <label>:147:                                    ; preds = %9
  %148 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  ret %"class.std::vector.11"* %148

; <label>:149:                                    ; preds = %146, %115
  %150 = landingpad { i8*, i32 }
          cleanup
  %151 = extractvalue { i8*, i32 } %150, 0
  store i8* %151, i8** %6, align 8
  %152 = extractvalue { i8*, i32 } %150, 1
  store i32 %152, i32* %7, align 4
  invoke void @__cxa_end_catch()
          to label %153 unwind label %254

; <label>:153:                                    ; preds = %149
  %154 = load i32, i32* @x.294
  %155 = load i32, i32* @y.295
  %156 = add i32 %154, 829976043
  %157 = sub i32 %156, 1
  %158 = sub i32 %157, 829976043
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 true, true
  %167 = and i1 %164, true
  %168 = and i1 %162, %166
  %169 = and i1 %165, true
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 true, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  br i1 %178, label %180, label %265

; <label>:180:                                    ; preds = %153, %265
  %181 = load i32, i32* @x.294
  %182 = load i32, i32* @y.295
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = and i1 %188, %189
  %191 = xor i1 %188, %189
  %192 = or i1 %190, %191
  %193 = or i1 %188, %189
  br i1 %192, label %194, label %265

; <label>:194:                                    ; preds = %180
  br label %249
                                                  ; No predecessors!
  %196 = load i32, i32* @x.294
  %197 = load i32, i32* @y.295
  %198 = sub i32 %196, -1724685549
  %199 = sub i32 %198, 1
  %200 = add i32 %199, -1724685549
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = xor i1 %204, true
  %207 = xor i1 %205, true
  %208 = xor i1 true, true
  %209 = and i1 %206, true
  %210 = and i1 %204, %208
  %211 = and i1 %207, true
  %212 = and i1 %205, %208
  %213 = or i1 %209, %210
  %214 = or i1 %211, %212
  %215 = xor i1 %213, %214
  %216 = or i1 %206, %207
  %217 = xor i1 %216, true
  %218 = or i1 true, %208
  %219 = and i1 %217, %218
  %220 = or i1 %215, %219
  %221 = or i1 %204, %205
  br i1 %220, label %222, label %266

; <label>:222:                                    ; preds = %195, %266
  call void @llvm.trap()
  %223 = load i32, i32* @x.294
  %224 = load i32, i32* @y.295
  %225 = sub i32 0, 1
  %226 = add i32 %223, %225
  %227 = sub i32 %223, 1
  %228 = mul i32 %223, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %224, 10
  %232 = xor i1 %230, true
  %233 = xor i1 %231, true
  %234 = xor i1 false, true
  %235 = and i1 %232, false
  %236 = and i1 %230, %234
  %237 = and i1 %233, false
  %238 = and i1 %231, %234
  %239 = or i1 %235, %236
  %240 = or i1 %237, %238
  %241 = xor i1 %239, %240
  %242 = or i1 %232, %233
  %243 = xor i1 %242, true
  %244 = or i1 false, %234
  %245 = and i1 %243, %244
  %246 = or i1 %241, %245
  %247 = or i1 %230, %231
  br i1 %246, label %248, label %266

; <label>:248:                                    ; preds = %222
  unreachable

; <label>:249:                                    ; preds = %194
  %250 = load i8*, i8** %6, align 8
  %251 = load i32, i32* %7, align 4
  %252 = insertvalue { i8*, i32 } undef, i8* %250, 0
  %253 = insertvalue { i8*, i32 } %252, i32 %251, 1
  resume { i8*, i32 } %253

; <label>:254:                                    ; preds = %149
  %255 = landingpad { i8*, i32 }
          catch i8* null
  %256 = extractvalue { i8*, i32 } %255, 0
  call void @__clang_call_terminate(i8* %256) #11
  unreachable

; <label>:257:                                    ; preds = %146
  unreachable

; <label>:258:                                    ; preds = %30, %15
  br label %30

; <label>:259:                                    ; preds = %85, %70
  %260 = load i8*, i8** %6, align 8
  %261 = call i8* @__cxa_begin_catch(i8* %260) #3
  %262 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %263 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  br label %85

; <label>:264:                                    ; preds = %131, %116
  br label %131

; <label>:265:                                    ; preds = %180, %153
  br label %180

; <label>:266:                                    ; preds = %222, %195
  call void @llvm.trap()
  br label %222
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN7MaxflowIxE4edgeESaIS3_EEJEEvPT_DpOT0_(%"class.std::vector.11"*) #5 comdat {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %4 = bitcast %"class.std::vector.11"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.11"*
  call void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EEC2Ev(%"class.std::vector.11"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EEC2Ev(%"class.std::vector.11"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %4 = bitcast %"class.std::vector.11"* %3 to %"struct.std::_Vector_base.17"*
  invoke void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EEC2Ev(%"struct.std::_Vector_base.17"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EEC2Ev(%"struct.std::_Vector_base.17"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.300
  %5 = load i32, i32* @y.301
  %6 = sub i32 %4, 1726332619
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1726332619
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 240003008, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 240003008, label %18
    i32 816224348, label %26
    i32 -1091537813, label %44
    i32 1633165809, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 816224348, i32 1633165809
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.17"*, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %27, align 8
  %28 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.300
  %31 = load i32, i32* @y.301
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1091537813, i32 1633165809
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"struct.std::_Vector_base.17"*, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %46, align 8
  %47 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %47, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %48)
  store i32 816224348, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %3 to %"class.std::allocator.18"*
  call void @_ZNSaIN7MaxflowIxE4edgeEEC2Ev(%"class.std::allocator.18"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* null, %"struct.Maxflow<long long>::edge"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.Maxflow<long long>::edge"* null, %"struct.Maxflow<long long>::edge"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.Maxflow<long long>::edge"* null, %"struct.Maxflow<long long>::edge"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN7MaxflowIxE4edgeEEC2Ev(%"class.std::allocator.18"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.18"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %2, align 8
  %3 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %2, align 8
  %4 = bitcast %"class.std::allocator.18"* %3 to %"class.__gnu_cxx::new_allocator.19"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.19"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.19"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector.6"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %3 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  %4 = bitcast %"class.std::vector.6"* %3 to %"struct.std::_Vector_base.7"*
  %5 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEE8max_sizeERKS6_(%"class.std::allocator.8"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 -27346753, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -27346753, label %16
    i32 586137281, label %21
    i32 -1287700543, label %23
    i32 -502927422, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 586137281, i32 -1287700543
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 -502927422, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i64*, i64** %6, align 8
  store i64* %24, i64** %5, align 8
  store i32 -502927422, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i64*, i64** %5, align 8
  ret i64* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEE8max_sizeERKS6_(%"class.std::allocator.8"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %2, align 8
  %3 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %2, align 8
  %4 = bitcast %"class.std::allocator.8"* %3 to %"class.__gnu_cxx::new_allocator.9"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt12_Vector_baseISt6vectorIN7MaxflowIxE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %3 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %4 to %"class.std::allocator.8"*
  ret %"class.std::allocator.8"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.316
  %5 = load i32, i32* @y.317
  %6 = sub i32 %4, 1092991291
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1092991291
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 781811221, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 781811221, label %18
    i32 291895420, label %38
    i32 -1623317717, label %68
    i32 778335507, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 291895420, i32 778335507
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %39, align 8
  %41 = load i32, i32* @x.316
  %42 = load i32, i32* @y.317
  %43 = add i32 %41, -252446368
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -252446368
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1623317717, i32 778335507
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %70, align 8
  store i32 291895420, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZNSt16allocator_traitsISaISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEE8allocateERS6_m(%"class.std::allocator.8"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.318
  %7 = load i32, i32* @y.319
  %8 = sub i32 %6, 2143628843
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2143628843
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 645577104, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 645577104, label %20
    i32 443190940, label %28
    i32 1474152370, label %61
    i32 647188015, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 443190940, i32 647188015
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.8"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %29, align 8
  %32 = bitcast %"class.std::allocator.8"* %31 to %"class.__gnu_cxx::new_allocator.9"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"class.std::vector.11"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"* %32, i64 %33, i8* null)
  store %"class.std::vector.11"* %34, %"class.std::vector.11"** %3
  %35 = load i32, i32* @x.318
  %36 = load i32, i32* @y.319
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1474152370, i32 647188015
  store i32 %60, i32* %16
  br label %70

; <label>:61:                                     ; preds = %17
  %62 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %3
  ret %"class.std::vector.11"* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::allocator.8"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %64, align 8
  %67 = bitcast %"class.std::allocator.8"* %66 to %"class.__gnu_cxx::new_allocator.9"*
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::vector.11"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"* %67, i64 %68, i8* null)
  store i32 443190940, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.320
  %9 = load i32, i32* @y.321
  %10 = sub i32 %8, -1421077037
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1421077037
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 520322605, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %140
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 520322605, label %22
    i32 -762795548, label %42
    i32 634302541, label %79
    i32 -733101866, label %82
    i32 456137885, label %97
    i32 -1217230983, label %124
    i32 -1892972579, label %125
    i32 -1001497668, label %131
    i32 -835583219, label %139
  ]

; <label>:21:                                     ; preds = %19
  br label %140

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -762795548, i32 -1001497668
  store i32 %41, i32* %18
  br label %140

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.320
  %53 = load i32, i32* @y.321
  %54 = add i32 %52, 89038656
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 89038656
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 634302541, i32 -1001497668
  store i32 %78, i32* %18
  br label %140

; <label>:79:                                     ; preds = %19
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 -733101866, i32 -1892972579
  store i32 %81, i32* %18
  br label %140

; <label>:82:                                     ; preds = %19
  %83 = load i32, i32* @x.320
  %84 = load i32, i32* @y.321
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 456137885, i32 -835583219
  store i32 %96, i32* %18
  br label %140

; <label>:97:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  %98 = load i32, i32* @x.320
  %99 = load i32, i32* @y.321
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 -1217230983, i32 -835583219
  store i32 %123, i32* %18
  br label %140

; <label>:124:                                    ; preds = %19
  unreachable

; <label>:125:                                    ; preds = %19
  %126 = load volatile i64*, i64** %5
  %127 = load i64, i64* %126, align 8
  %128 = mul i64 %127, 24
  %129 = call i8* @_Znwm(i64 %128)
  %130 = bitcast i8* %129 to %"class.std::vector.11"*
  ret %"class.std::vector.11"* %130

; <label>:131:                                    ; preds = %19
  %132 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %133 = alloca i64, align 8
  %134 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %132, align 8
  store i64 %1, i64* %133, align 8
  store i8* %2, i8** %134, align 8
  %135 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %132, align 8
  %136 = load i64, i64* %133, align 8
  %137 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7MaxflowIxE4edgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %135) #3
  %138 = icmp ugt i64 %136, %137
  store i32 -762795548, i32* %18
  br label %140

; <label>:139:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 456137885, i32* %18
  br label %140

; <label>:140:                                    ; preds = %139, %131, %97, %82, %79, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::vector.11"*, %"class.std::vector.11"*, %"class.std::vector.11"*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"class.std::vector.11"*, align 8
  %8 = alloca %"class.std::allocator.8"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %12, align 8
  store %"class.std::vector.11"* %2, %"class.std::vector.11"** %7, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.11"*, %"class.std::vector.11"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.11"*, %"class.std::vector.11"** %20, align 8
  %22 = call %"class.std::vector.11"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS4_EEES7_ET0_T_SA_S9_(%"class.std::vector.11"* %19, %"class.std::vector.11"* %21, %"class.std::vector.11"* %17)
  ret %"class.std::vector.11"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.11"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEC2ES6_(%"class.std::move_iterator"* %2, %"class.std::vector.11"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  ret %"class.std::vector.11"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS4_EEES7_ET0_T_SA_S9_(%"class.std::vector.11"*, %"class.std::vector.11"*, %"class.std::vector.11"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::vector.11"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %11, align 8
  store %"class.std::vector.11"* %2, %"class.std::vector.11"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.11"*, %"class.std::vector.11"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.11"*, %"class.std::vector.11"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.11"*, %"class.std::vector.11"** %19, align 8
  %21 = call %"class.std::vector.11"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS6_EEES9_EET0_T_SC_SB_(%"class.std::vector.11"* %18, %"class.std::vector.11"* %20, %"class.std::vector.11"* %16)
  ret %"class.std::vector.11"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.11"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS6_EEES9_EET0_T_SC_SB_(%"class.std::vector.11"*, %"class.std::vector.11"*, %"class.std::vector.11"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::vector.11"*, align 8
  %7 = alloca %"class.std::vector.11"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %11, align 8
  store %"class.std::vector.11"* %2, %"class.std::vector.11"** %6, align 8
  %12 = load %"class.std::vector.11"*, %"class.std::vector.11"** %6, align 8
  store %"class.std::vector.11"* %12, %"class.std::vector.11"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %203, %3
  %14 = invoke zeroext i1 @_ZStneIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %206

; <label>:15:                                     ; preds = %13
  %16 = load i32, i32* @x.328
  %17 = load i32, i32* @y.329
  %18 = sub i32 0, 1
  %19 = add i32 %16, %18
  %20 = sub i32 %16, 1
  %21 = mul i32 %16, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %17, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %375

; <label>:41:                                     ; preds = %15, %375
  %42 = load i32, i32* @x.328
  %43 = load i32, i32* @y.329
  %44 = add i32 %42, 2049415900
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 2049415900
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %375

; <label>:68:                                     ; preds = %41
  br i1 %14, label %69, label %216

; <label>:69:                                     ; preds = %68
  %70 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  %71 = call %"class.std::vector.11"* @_ZSt11__addressofISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.11"* dereferenceable(24) %70) #3
  %72 = invoke dereferenceable(24) %"class.std::vector.11"* @_ZNKSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEdeEv(%"class.std::move_iterator"* %4)
          to label %73 unwind label %206

; <label>:73:                                     ; preds = %69
  %74 = load i32, i32* @x.328
  %75 = load i32, i32* @y.329
  %76 = sub i32 %74, -660328604
  %77 = sub i32 %76, 1
  %78 = add i32 %77, -660328604
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %376

; <label>:100:                                    ; preds = %73, %376
  %101 = load i32, i32* @x.328
  %102 = load i32, i32* @y.329
  %103 = add i32 %101, 1484832867
  %104 = sub i32 %103, 1
  %105 = sub i32 %104, 1484832867
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 true, true
  %114 = and i1 %111, true
  %115 = and i1 %109, %113
  %116 = and i1 %112, true
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 true, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  br i1 %125, label %127, label %376

; <label>:127:                                    ; preds = %100
  invoke void @_ZSt10_ConstructISt6vectorIN7MaxflowIxE4edgeESaIS3_EEJS5_EEvPT_DpOT0_(%"class.std::vector.11"* %71, %"class.std::vector.11"* dereferenceable(24) %72)
          to label %128 unwind label %206

; <label>:128:                                    ; preds = %127
  %129 = load i32, i32* @x.328
  %130 = load i32, i32* @y.329
  %131 = sub i32 %129, -1134390074
  %132 = sub i32 %131, 1
  %133 = add i32 %132, -1134390074
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %377

; <label>:143:                                    ; preds = %128, %377
  %144 = load i32, i32* @x.328
  %145 = load i32, i32* @y.329
  %146 = add i32 %144, 322540303
  %147 = sub i32 %146, 1
  %148 = sub i32 %147, 322540303
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  br i1 %156, label %158, label %377

; <label>:158:                                    ; preds = %143
  br label %159

; <label>:159:                                    ; preds = %158
  %160 = load i32, i32* @x.328
  %161 = load i32, i32* @y.329
  %162 = add i32 %160, 880938715
  %163 = sub i32 %162, 1
  %164 = sub i32 %163, 880938715
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = and i1 %168, %169
  %171 = xor i1 %168, %169
  %172 = or i1 %170, %171
  %173 = or i1 %168, %169
  br i1 %172, label %174, label %378

; <label>:174:                                    ; preds = %159, %378
  %175 = load i32, i32* @x.328
  %176 = load i32, i32* @y.329
  %177 = add i32 %175, -779798731
  %178 = sub i32 %177, 1
  %179 = sub i32 %178, -779798731
  %180 = sub i32 %175, 1
  %181 = mul i32 %175, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %176, 10
  %185 = xor i1 %183, true
  %186 = xor i1 %184, true
  %187 = xor i1 false, true
  %188 = and i1 %185, false
  %189 = and i1 %183, %187
  %190 = and i1 %186, false
  %191 = and i1 %184, %187
  %192 = or i1 %188, %189
  %193 = or i1 %190, %191
  %194 = xor i1 %192, %193
  %195 = or i1 %185, %186
  %196 = xor i1 %195, true
  %197 = or i1 false, %187
  %198 = and i1 %196, %197
  %199 = or i1 %194, %198
  %200 = or i1 %183, %184
  br i1 %199, label %201, label %378

; <label>:201:                                    ; preds = %174
  %202 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEppEv(%"class.std::move_iterator"* %4)
          to label %203 unwind label %206

; <label>:203:                                    ; preds = %201
  %204 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  %205 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %204, i32 1
  store %"class.std::vector.11"* %205, %"class.std::vector.11"** %7, align 8
  br label %13

; <label>:206:                                    ; preds = %201, %127, %69, %13
  %207 = landingpad { i8*, i32 }
          catch i8* null
  %208 = extractvalue { i8*, i32 } %207, 0
  store i8* %208, i8** %8, align 8
  %209 = extractvalue { i8*, i32 } %207, 1
  store i32 %209, i32* %9, align 4
  br label %210

; <label>:210:                                    ; preds = %206
  %211 = load i8*, i8** %8, align 8
  %212 = call i8* @__cxa_begin_catch(i8* %211) #3
  %213 = load %"class.std::vector.11"*, %"class.std::vector.11"** %6, align 8
  %214 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.11"* %213, %"class.std::vector.11"* %214)
          to label %215 unwind label %260

; <label>:215:                                    ; preds = %210
  invoke void @__cxa_rethrow() #12
          to label %374 unwind label %260

; <label>:216:                                    ; preds = %68
  %217 = load i32, i32* @x.328
  %218 = load i32, i32* @y.329
  %219 = sub i32 %217, -2015072383
  %220 = sub i32 %219, 1
  %221 = add i32 %220, -2015072383
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 false, true
  %230 = and i1 %227, false
  %231 = and i1 %225, %229
  %232 = and i1 %228, false
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 false, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  br i1 %241, label %243, label %379

; <label>:243:                                    ; preds = %216, %379
  %244 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  %245 = load i32, i32* @x.328
  %246 = load i32, i32* @y.329
  %247 = add i32 %245, -1678656424
  %248 = sub i32 %247, 1
  %249 = sub i32 %248, -1678656424
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = and i1 %253, %254
  %256 = xor i1 %253, %254
  %257 = or i1 %255, %256
  %258 = or i1 %253, %254
  br i1 %257, label %259, label %379

; <label>:259:                                    ; preds = %243
  ret %"class.std::vector.11"* %244

; <label>:260:                                    ; preds = %215, %210
  %261 = landingpad { i8*, i32 }
          cleanup
  %262 = extractvalue { i8*, i32 } %261, 0
  store i8* %262, i8** %8, align 8
  %263 = extractvalue { i8*, i32 } %261, 1
  store i32 %263, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %264 unwind label %341

; <label>:264:                                    ; preds = %260
  %265 = load i32, i32* @x.328
  %266 = load i32, i32* @y.329
  %267 = sub i32 0, 1
  %268 = add i32 %265, %267
  %269 = sub i32 %265, 1
  %270 = mul i32 %265, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %266, 10
  %274 = and i1 %272, %273
  %275 = xor i1 %272, %273
  %276 = or i1 %274, %275
  %277 = or i1 %272, %273
  br i1 %276, label %278, label %381

; <label>:278:                                    ; preds = %264, %381
  %279 = load i32, i32* @x.328
  %280 = load i32, i32* @y.329
  %281 = add i32 %279, -1942204392
  %282 = sub i32 %281, 1
  %283 = sub i32 %282, -1942204392
  %284 = sub i32 %279, 1
  %285 = mul i32 %279, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %280, 10
  %289 = and i1 %287, %288
  %290 = xor i1 %287, %288
  %291 = or i1 %289, %290
  %292 = or i1 %287, %288
  br i1 %291, label %293, label %381

; <label>:293:                                    ; preds = %278
  br label %336
                                                  ; No predecessors!
  %295 = load i32, i32* @x.328
  %296 = load i32, i32* @y.329
  %297 = sub i32 0, 1
  %298 = add i32 %295, %297
  %299 = sub i32 %295, 1
  %300 = mul i32 %295, %298
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %296, 10
  %304 = and i1 %302, %303
  %305 = xor i1 %302, %303
  %306 = or i1 %304, %305
  %307 = or i1 %302, %303
  br i1 %306, label %308, label %382

; <label>:308:                                    ; preds = %294, %382
  call void @llvm.trap()
  %309 = load i32, i32* @x.328
  %310 = load i32, i32* @y.329
  %311 = sub i32 %309, 417694509
  %312 = sub i32 %311, 1
  %313 = add i32 %312, 417694509
  %314 = sub i32 %309, 1
  %315 = mul i32 %309, %313
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %310, 10
  %319 = xor i1 %317, true
  %320 = xor i1 %318, true
  %321 = xor i1 true, true
  %322 = and i1 %319, true
  %323 = and i1 %317, %321
  %324 = and i1 %320, true
  %325 = and i1 %318, %321
  %326 = or i1 %322, %323
  %327 = or i1 %324, %325
  %328 = xor i1 %326, %327
  %329 = or i1 %319, %320
  %330 = xor i1 %329, true
  %331 = or i1 true, %321
  %332 = and i1 %330, %331
  %333 = or i1 %328, %332
  %334 = or i1 %317, %318
  br i1 %333, label %335, label %382

; <label>:335:                                    ; preds = %308
  unreachable

; <label>:336:                                    ; preds = %293
  %337 = load i8*, i8** %8, align 8
  %338 = load i32, i32* %9, align 4
  %339 = insertvalue { i8*, i32 } undef, i8* %337, 0
  %340 = insertvalue { i8*, i32 } %339, i32 %338, 1
  resume { i8*, i32 } %340

; <label>:341:                                    ; preds = %260
  %342 = load i32, i32* @x.328
  %343 = load i32, i32* @y.329
  %344 = add i32 %342, -2016157707
  %345 = sub i32 %344, 1
  %346 = sub i32 %345, -2016157707
  %347 = sub i32 %342, 1
  %348 = mul i32 %342, %346
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %343, 10
  %352 = and i1 %350, %351
  %353 = xor i1 %350, %351
  %354 = or i1 %352, %353
  %355 = or i1 %350, %351
  br i1 %354, label %356, label %383

; <label>:356:                                    ; preds = %341, %383
  %357 = landingpad { i8*, i32 }
          catch i8* null
  %358 = extractvalue { i8*, i32 } %357, 0
  call void @__clang_call_terminate(i8* %358) #11
  %359 = load i32, i32* @x.328
  %360 = load i32, i32* @y.329
  %361 = add i32 %359, 290834666
  %362 = sub i32 %361, 1
  %363 = sub i32 %362, 290834666
  %364 = sub i32 %359, 1
  %365 = mul i32 %359, %363
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %360, 10
  %369 = and i1 %367, %368
  %370 = xor i1 %367, %368
  %371 = or i1 %369, %370
  %372 = or i1 %367, %368
  br i1 %371, label %373, label %383

; <label>:373:                                    ; preds = %356
  unreachable

; <label>:374:                                    ; preds = %215
  unreachable

; <label>:375:                                    ; preds = %41, %15
  br label %41

; <label>:376:                                    ; preds = %100, %73
  br label %100

; <label>:377:                                    ; preds = %143, %128
  br label %143

; <label>:378:                                    ; preds = %174, %159
  br label %174

; <label>:379:                                    ; preds = %243, %216
  %380 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  br label %243

; <label>:381:                                    ; preds = %278, %264
  br label %278

; <label>:382:                                    ; preds = %308, %294
  call void @llvm.trap()
  br label %308

; <label>:383:                                    ; preds = %356, %341
  %384 = landingpad { i8*, i32 }
          catch i8* null
  %385 = extractvalue { i8*, i32 } %384, 0
  call void @__clang_call_terminate(i8* %385) #11
  br label %356
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN7MaxflowIxE4edgeESaIS3_EEJS5_EEvPT_DpOT0_(%"class.std::vector.11"*, %"class.std::vector.11"* dereferenceable(24)) #5 comdat {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %4, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %6 = bitcast %"class.std::vector.11"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.11"*
  %8 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.11"* @_ZSt7forwardISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.11"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EEC2EOS4_(%"class.std::vector.11"* %7, %"class.std::vector.11"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.11"* @_ZNKSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.11"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.334
  %6 = load i32, i32* @y.335
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -684553509, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -684553509, label %18
    i32 -1429596128, label %26
    i32 -1711979238, label %58
    i32 -1023282432, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1429596128, i32 -1023282432
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %27, align 8
  %28 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %27, align 8
  %29 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %28, i32 0, i32 0
  %30 = load %"class.std::vector.11"*, %"class.std::vector.11"** %29, align 8
  store %"class.std::vector.11"* %30, %"class.std::vector.11"** %2
  %31 = load i32, i32* @x.334
  %32 = load i32, i32* @y.335
  %33 = add i32 %31, -173593526
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -173593526
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1711979238, i32 -1023282432
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %2
  ret %"class.std::vector.11"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %61, align 8
  %62 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %61, align 8
  %63 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %62, i32 0, i32 0
  %64 = load %"class.std::vector.11"*, %"class.std::vector.11"** %63, align 8
  store i32 -1429596128, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %5, i32 1
  store %"class.std::vector.11"* %6, %"class.std::vector.11"** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"class.std::vector.11"* @_ZNKSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"class.std::vector.11"* @_ZNKSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"class.std::vector.11"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.11"* @_ZNKSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  ret %"class.std::vector.11"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.11"* @_ZSt7forwardISt6vectorIN7MaxflowIxE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.11"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  ret %"class.std::vector.11"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EEC2EOS4_(%"class.std::vector.11"*, %"class.std::vector.11"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %4, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %6 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.17"*
  %7 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.11"* @_ZSt4moveIRSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.11"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.11"* %8 to %"struct.std::_Vector_base.17"*
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EEC2EOS4_(%"struct.std::_Vector_base.17"* %6, %"struct.std::_Vector_base.17"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.11"* @_ZSt4moveIRSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.11"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  ret %"class.std::vector.11"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EEC2EOS4_(%"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.17"*, align 8
  %4 = alloca %"struct.std::_Vector_base.17"*, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %3, align 8
  store %"struct.std::_Vector_base.17"* %1, %"struct.std::_Vector_base.17"** %4, align 8
  %5 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.18"* @_ZSt4moveIRSaIN7MaxflowIxE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.18"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implC2EOS3_(%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %6, %"class.std::allocator.18"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %10, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.18"* @_ZSt4moveIRSaIN7MaxflowIxE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.18"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.18"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.350
  %6 = load i32, i32* @y.351
  %7 = sub i32 %5, 1242959322
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1242959322
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 955316014, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 955316014, label %19
    i32 1883851400, label %39
    i32 -936010677, label %56
    i32 -623163311, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1883851400, i32 -623163311
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.18"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %40, align 8
  %41 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %40, align 8
  store %"class.std::allocator.18"* %41, %"class.std::allocator.18"** %2
  %42 = load i32, i32* @x.350
  %43 = load i32, i32* @y.351
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -936010677, i32 -623163311
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"class.std::allocator.18"*, %"class.std::allocator.18"** %2
  ret %"class.std::allocator.18"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::allocator.18"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %59, align 8
  %60 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %59, align 8
  store i32 1883851400, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_implC2EOS3_(%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, %"class.std::allocator.18"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.18"*, align 8
  store %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.18"* %1, %"class.std::allocator.18"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %5 to %"class.std::allocator.18"*
  %7 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.18"* @_ZSt4moveIRSaIN7MaxflowIxE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.18"* dereferenceable(1) %7) #3
  call void @_ZNSaIN7MaxflowIxE4edgeEEC2ERKS2_(%"class.std::allocator.18"* %6, %"class.std::allocator.18"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* null, %"struct.Maxflow<long long>::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Maxflow<long long>::edge"* null, %"struct.Maxflow<long long>::edge"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Maxflow<long long>::edge"* null, %"struct.Maxflow<long long>::edge"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %1, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPN7MaxflowIxE4edgeEEvRT_S5_(%"struct.Maxflow<long long>::edge"** dereferenceable(8) %6, %"struct.Maxflow<long long>::edge"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPN7MaxflowIxE4edgeEEvRT_S5_(%"struct.Maxflow<long long>::edge"** dereferenceable(8) %9, %"struct.Maxflow<long long>::edge"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPN7MaxflowIxE4edgeEEvRT_S5_(%"struct.Maxflow<long long>::edge"** dereferenceable(8) %12, %"struct.Maxflow<long long>::edge"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN7MaxflowIxE4edgeEEC2ERKS2_(%"class.std::allocator.18"*, %"class.std::allocator.18"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.18"*, align 8
  %4 = alloca %"class.std::allocator.18"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %3, align 8
  store %"class.std::allocator.18"* %1, %"class.std::allocator.18"** %4, align 8
  %5 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %3, align 8
  %6 = bitcast %"class.std::allocator.18"* %5 to %"class.__gnu_cxx::new_allocator.19"*
  %7 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %4, align 8
  %8 = bitcast %"class.std::allocator.18"* %7 to %"class.__gnu_cxx::new_allocator.19"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.19"* %6, %"class.__gnu_cxx::new_allocator.19"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.358
  %6 = load i32, i32* @y.359
  %7 = add i32 %5, -483116169
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -483116169
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 665906399, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 665906399, label %19
    i32 -1218909075, label %27
    i32 -1520219410, label %57
    i32 -1461262457, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1218909075, i32 -1461262457
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %28, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %1, %"class.__gnu_cxx::new_allocator.19"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %28, align 8
  %31 = load i32, i32* @x.358
  %32 = load i32, i32* @y.359
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1520219410, i32 -1461262457
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %60 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %59, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %1, %"class.__gnu_cxx::new_allocator.19"** %60, align 8
  %61 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %59, align 8
  store i32 -1218909075, i32* %15
  br label %62

; <label>:62:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPN7MaxflowIxE4edgeEEvRT_S5_(%"struct.Maxflow<long long>::edge"** dereferenceable(8), %"struct.Maxflow<long long>::edge"** dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.360
  %6 = load i32, i32* @y.361
  %7 = sub i32 %5, -1899547643
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1899547643
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -106545875, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -106545875, label %19
    i32 1555405516, label %39
    i32 1958988759, label %68
    i32 -518426926, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1555405516, i32 -518426926
  store i32 %38, i32* %15
  br label %83

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Maxflow<long long>::edge"**, align 8
  %41 = alloca %"struct.Maxflow<long long>::edge"**, align 8
  %42 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"** %0, %"struct.Maxflow<long long>::edge"*** %40, align 8
  store %"struct.Maxflow<long long>::edge"** %1, %"struct.Maxflow<long long>::edge"*** %41, align 8
  %43 = load %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %40, align 8
  %44 = call dereferenceable(8) %"struct.Maxflow<long long>::edge"** @_ZSt4moveIRPN7MaxflowIxE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Maxflow<long long>::edge"** dereferenceable(8) %43) #3
  %45 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %44, align 8
  store %"struct.Maxflow<long long>::edge"* %45, %"struct.Maxflow<long long>::edge"** %42, align 8
  %46 = load %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %41, align 8
  %47 = call dereferenceable(8) %"struct.Maxflow<long long>::edge"** @_ZSt4moveIRPN7MaxflowIxE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Maxflow<long long>::edge"** dereferenceable(8) %46) #3
  %48 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %47, align 8
  %49 = load %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %40, align 8
  store %"struct.Maxflow<long long>::edge"* %48, %"struct.Maxflow<long long>::edge"** %49, align 8
  %50 = call dereferenceable(8) %"struct.Maxflow<long long>::edge"** @_ZSt4moveIRPN7MaxflowIxE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Maxflow<long long>::edge"** dereferenceable(8) %42) #3
  %51 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %50, align 8
  %52 = load %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %41, align 8
  store %"struct.Maxflow<long long>::edge"* %51, %"struct.Maxflow<long long>::edge"** %52, align 8
  %53 = load i32, i32* @x.360
  %54 = load i32, i32* @y.361
  %55 = add i32 %53, 665934090
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 665934090
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 1958988759, i32 -518426926
  store i32 %67, i32* %15
  br label %83

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca %"struct.Maxflow<long long>::edge"**, align 8
  %71 = alloca %"struct.Maxflow<long long>::edge"**, align 8
  %72 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"** %0, %"struct.Maxflow<long long>::edge"*** %70, align 8
  store %"struct.Maxflow<long long>::edge"** %1, %"struct.Maxflow<long long>::edge"*** %71, align 8
  %73 = load %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %70, align 8
  %74 = call dereferenceable(8) %"struct.Maxflow<long long>::edge"** @_ZSt4moveIRPN7MaxflowIxE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Maxflow<long long>::edge"** dereferenceable(8) %73) #3
  %75 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %74, align 8
  store %"struct.Maxflow<long long>::edge"* %75, %"struct.Maxflow<long long>::edge"** %72, align 8
  %76 = load %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %71, align 8
  %77 = call dereferenceable(8) %"struct.Maxflow<long long>::edge"** @_ZSt4moveIRPN7MaxflowIxE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Maxflow<long long>::edge"** dereferenceable(8) %76) #3
  %78 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %77, align 8
  %79 = load %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %70, align 8
  store %"struct.Maxflow<long long>::edge"* %78, %"struct.Maxflow<long long>::edge"** %79, align 8
  %80 = call dereferenceable(8) %"struct.Maxflow<long long>::edge"** @_ZSt4moveIRPN7MaxflowIxE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Maxflow<long long>::edge"** dereferenceable(8) %72) #3
  %81 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %80, align 8
  %82 = load %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %71, align 8
  store %"struct.Maxflow<long long>::edge"* %81, %"struct.Maxflow<long long>::edge"** %82, align 8
  store i32 1555405516, i32* %15
  br label %83

; <label>:83:                                     ; preds = %69, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Maxflow<long long>::edge"** @_ZSt4moveIRPN7MaxflowIxE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Maxflow<long long>::edge"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.Maxflow<long long>::edge"**, align 8
  store %"struct.Maxflow<long long>::edge"** %0, %"struct.Maxflow<long long>::edge"*** %2, align 8
  %3 = load %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %2, align 8
  ret %"struct.Maxflow<long long>::edge"** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIN7MaxflowIxE4edgeESaIS3_EEEC2ES6_(%"class.std::move_iterator"*, %"class.std::vector.11"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::vector.11"* %1, %"class.std::vector.11"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  store %"class.std::vector.11"* %7, %"class.std::vector.11"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.14"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.366
  %7 = load i32, i32* @y.367
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1203272036, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1203272036, label %19
    i32 -625281907, label %27
    i32 779526842, label %48
    i32 -1419011514, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -625281907, i32 -1419011514
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca %"class.std::allocator.14"*, align 8
  store i32* %0, i32** %28, align 8
  store i32* %1, i32** %29, align 8
  store %"class.std::allocator.14"* %2, %"class.std::allocator.14"** %30, align 8
  %31 = load i32*, i32** %28, align 8
  %32 = load i32*, i32** %29, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %31, i32* %32)
  %33 = load i32, i32* @x.366
  %34 = load i32, i32* @y.367
  %35 = sub i32 %33, -1380653283
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1380653283
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 779526842, i32 -1419011514
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca i32*, align 8
  %51 = alloca i32*, align 8
  %52 = alloca %"class.std::allocator.14"*, align 8
  store i32* %0, i32** %50, align 8
  store i32* %1, i32** %51, align 8
  store %"class.std::allocator.14"* %2, %"class.std::allocator.14"** %52, align 8
  %53 = load i32*, i32** %50, align 8
  %54 = load i32*, i32** %51, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %53, i32* %54)
  store i32 -625281907, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.14"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.368
  %6 = load i32, i32* @y.369
  %7 = sub i32 %5, 455757677
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 455757677
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -439685327, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -439685327, label %19
    i32 988751340, label %39
    i32 40967607, label %58
    i32 761818549, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 988751340, i32 761818549
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.13"*, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %40, align 8
  %41 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42 to %"class.std::allocator.14"*
  store %"class.std::allocator.14"* %43, %"class.std::allocator.14"** %2
  %44 = load i32, i32* @x.368
  %45 = load i32, i32* @y.369
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 40967607, i32 761818549
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.14"*, %"class.std::allocator.14"** %2
  ret %"class.std::allocator.14"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.13"*, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %61, align 8
  %62 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %63 to %"class.std::allocator.14"*
  store i32 988751340, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.370
  %3 = load i32, i32* @y.371
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %83

; <label>:27:                                     ; preds = %1, %83
  %28 = alloca %"struct.std::_Vector_base.13"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %28, align 8
  %31 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %31, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 2
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %31, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = ptrtoint i32* %37 to i64
  %42 = ptrtoint i32* %40 to i64
  %43 = sub i64 0, %42
  %44 = add i64 %41, %43
  %45 = sub i64 %41, %42
  %46 = sdiv exact i64 %44, 4
  %47 = load i32, i32* @x.370
  %48 = load i32, i32* @y.371
  %49 = add i32 %47, -1513388155
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1513388155
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %83

; <label>:73:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.13"* %31, i32* %34, i64 %46)
          to label %74 unwind label %76

; <label>:74:                                     ; preds = %73
  %75 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %75) #3
  ret void

; <label>:76:                                     ; preds = %73
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %29, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %30, align 4
  %80 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %80) #3
  br label %81

; <label>:81:                                     ; preds = %76
  %82 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %82) #11
  unreachable

; <label>:83:                                     ; preds = %27, %1
  %84 = alloca %"struct.std::_Vector_base.13"*, align 8
  %85 = alloca i8*
  %86 = alloca i32
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %84, align 8
  %87 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %84, align 8
  %88 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %88, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %87, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %91, i32 0, i32 2
  %93 = load i32*, i32** %92, align 8
  %94 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %87, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %94, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = ptrtoint i32* %93 to i64
  %98 = ptrtoint i32* %96 to i64
  %99 = add i64 %97, 1079464332262684927
  %100 = sub i64 %99, %98
  %101 = sub i64 %100, 1079464332262684927
  %102 = sub i64 %97, %98
  %103 = mul i64 %101, %98
  %104 = add i64 %97, 71780767714037105
  %105 = sub i64 %104, %98
  %106 = sub i64 %105, 71780767714037105
  %107 = sub i64 %97, %98
  %108 = mul i64 %106, %98
  %109 = add i64 0, -369054592287720483
  %110 = sub i64 %109, %97
  %111 = sub i64 %110, -369054592287720483
  %112 = sub i64 0, %97
  %113 = sub i64 %111, -2208583542066828046
  %114 = add i64 %113, %98
  %115 = add i64 %114, -2208583542066828046
  %116 = add i64 %111, %98
  %117 = add i64 0, -7779245017707654784
  %118 = sub i64 %117, %97
  %119 = sub i64 %118, -7779245017707654784
  %120 = sub i64 0, %97
  %121 = sub i64 %119, 6665966927035779657
  %122 = add i64 %121, %98
  %123 = add i64 %122, 6665966927035779657
  %124 = add i64 %119, %98
  %125 = sub i64 %97, 2061653997017702032
  %126 = sub i64 %125, %98
  %127 = add i64 %126, 2061653997017702032
  %128 = sub i64 %97, %98
  %129 = sub i64 %127, -838297268893154112
  %130 = sub i64 %129, 4
  %131 = add i64 %130, -838297268893154112
  %132 = sub i64 %127, 4
  %133 = mul i64 %131, 4
  %134 = shl i64 %127, 4
  %135 = shl i64 %127, 4
  %136 = shl i64 %127, 4
  %137 = sub i64 %127, -6968731159606874325
  %138 = sub i64 %137, 4
  %139 = add i64 %138, -6968731159606874325
  %140 = sub i64 %127, 4
  %141 = mul i64 %139, 4
  %142 = shl i64 %127, 4
  %143 = shl i64 %127, 4
  %144 = sub i64 0, 4
  %145 = add i64 %127, %144
  %146 = sub i64 %127, 4
  %147 = mul i64 %145, 4
  %148 = sdiv exact i64 %127, 4
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #5 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.13"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base.13"*
  %6 = alloca %"struct.std::_Vector_base.13"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %6, align 8
  store %"struct.std::_Vector_base.13"* %9, %"struct.std::_Vector_base.13"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 -1147117253, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %76
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1147117253, label %15
    i32 -403733613, label %19
    i32 1889817434, label %35
    i32 -619799608, label %68
    i32 1677451341, label %69
    i32 -1807121881, label %70
  ]

; <label>:14:                                     ; preds = %12
  br label %76

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 -403733613, i32 1677451341
  store i32 %18, i32* %11
  br label %76

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.376
  %21 = load i32, i32* @y.377
  %22 = add i32 %20, -1026699631
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -1026699631
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 1889817434, i32 -1807121881
  store i32 %34, i32* %11
  br label %76

; <label>:35:                                     ; preds = %12
  %36 = load volatile %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %5
  %37 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37 to %"class.std::allocator.14"*
  %39 = load i32*, i32** %7, align 8
  %40 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.14"* dereferenceable(1) %38, i32* %39, i64 %40)
  %41 = load i32, i32* @x.376
  %42 = load i32, i32* @y.377
  %43 = sub i32 %41, -174120518
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -174120518
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -619799608, i32 -1807121881
  store i32 %67, i32* %11
  br label %76

; <label>:68:                                     ; preds = %12
  store i32 1677451341, i32* %11
  br label %76

; <label>:69:                                     ; preds = %12
  ret void

; <label>:70:                                     ; preds = %12
  %71 = load volatile %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %5
  %72 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %72 to %"class.std::allocator.14"*
  %74 = load i32*, i32** %7, align 8
  %75 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.14"* dereferenceable(1) %73, i32* %74, i64 %75)
  store i32 1889817434, i32* %11
  br label %76

; <label>:76:                                     ; preds = %70, %68, %35, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.378
  %5 = load i32, i32* @y.379
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -2007974329, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2007974329, label %17
    i32 -840551833, label %37
    i32 159711940, label %68
    i32 807219688, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -840551833, i32 807219688
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39 to %"class.std::allocator.14"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.14"* %40) #3
  %41 = load i32, i32* @x.378
  %42 = load i32, i32* @y.379
  %43 = add i32 %41, -1089982007
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1089982007
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 159711940, i32 807219688
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %70, align 8
  %71 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %70, align 8
  %72 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %71 to %"class.std::allocator.14"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.14"* %72) #3
  store i32 -840551833, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.14"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.14"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %4, align 8
  %8 = bitcast %"class.std::allocator.14"* %7 to %"class.__gnu_cxx::new_allocator.15"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.15"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.15"*, i32*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.13"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.13"*, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %2, align 8
  %3 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.388
  %5 = load i32, i32* @y.389
  %6 = sub i32 %4, 1659497238
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1659497238
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1081325863, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1081325863, label %18
    i32 1138500004, label %38
    i32 -1955168639, label %72
    i32 1655444806, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1138500004, i32 1655444806
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40 to %"class.std::allocator.14"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.14"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40, i32 0, i32 0
  store i32* null, i32** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40, i32 0, i32 1
  store i32* null, i32** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40, i32 0, i32 2
  store i32* null, i32** %44, align 8
  %45 = load i32, i32* @x.388
  %46 = load i32, i32* @y.389
  %47 = add i32 %45, 804111453
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 804111453
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1955168639, i32 1655444806
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %74, align 8
  %75 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %74, align 8
  %76 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %75 to %"class.std::allocator.14"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.14"* %76) #3
  %77 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %75, i32 0, i32 0
  store i32* null, i32** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %75, i32 0, i32 1
  store i32* null, i32** %78, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %75, i32 0, i32 2
  store i32* null, i32** %79, align 8
  store i32 1138500004, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.6"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.392
  %7 = load i32, i32* @y.393
  %8 = sub i32 %6, -583583556
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -583583556
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1231823738, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1231823738, label %20
    i32 115912632, label %40
    i32 -113194842, label %77
    i32 -1830977106, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 115912632, i32 -1830977106
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.6"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::vector.6"*, %"class.std::vector.6"** %41, align 8
  %44 = bitcast %"class.std::vector.6"* %43 to %"struct.std::_Vector_base.7"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"class.std::vector.11"*, %"class.std::vector.11"** %46, align 8
  %48 = load i64, i64* %42, align 8
  %49 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %47, i64 %48
  store %"class.std::vector.11"* %49, %"class.std::vector.11"** %3
  %50 = load i32, i32* @x.392
  %51 = load i32, i32* @y.393
  %52 = add i32 %50, -1257034667
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -1257034667
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -113194842, i32 -1830977106
  store i32 %76, i32* %16
  br label %89

; <label>:77:                                     ; preds = %17
  %78 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %3
  ret %"class.std::vector.11"* %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %"class.std::vector.6"*, align 8
  %81 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %80, align 8
  store i64 %1, i64* %81, align 8
  %82 = load %"class.std::vector.6"*, %"class.std::vector.6"** %80, align 8
  %83 = bitcast %"class.std::vector.6"* %82 to %"struct.std::_Vector_base.7"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >, std::allocator<std::vector<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> > > >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load %"class.std::vector.11"*, %"class.std::vector.11"** %85, align 8
  %87 = load i64, i64* %81, align 8
  %88 = getelementptr inbounds %"class.std::vector.11", %"class.std::vector.11"* %86, i64 %87
  store i32 115912632, i32* %16
  br label %89

; <label>:89:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE9push_backEOS2_(%"class.std::vector.11"*, %"struct.Maxflow<long long>::edge"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %4, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %6 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4, align 8
  %7 = call dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZSt4moveIRN7MaxflowIxE4edgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Maxflow<long long>::edge"* dereferenceable(24) %6) #3
  call void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE12emplace_backIJS2_EEEvDpOT_(%"class.std::vector.11"* %5, %"struct.Maxflow<long long>::edge"* dereferenceable(24) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.396
  %6 = load i32, i32* @y.397
  %7 = add i32 %5, 1711243763
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1711243763
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1909045544, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %137
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1909045544, label %19
    i32 -2146243327, label %39
    i32 -2133829485, label %70
    i32 2070007548, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %137

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2146243327, i32 2070007548
  store i32 %38, i32* %15
  br label %137

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %40, align 8
  %41 = load %"class.std::vector.11"*, %"class.std::vector.11"** %40, align 8
  %42 = bitcast %"class.std::vector.11"* %41 to %"struct.std::_Vector_base.17"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %44, align 8
  %46 = bitcast %"class.std::vector.11"* %41 to %"struct.std::_Vector_base.17"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %48, align 8
  %50 = ptrtoint %"struct.Maxflow<long long>::edge"* %45 to i64
  %51 = ptrtoint %"struct.Maxflow<long long>::edge"* %49 to i64
  %52 = sub i64 0, %51
  %53 = add i64 %50, %52
  %54 = sub i64 %50, %51
  %55 = sdiv exact i64 %53, 24
  store i64 %55, i64* %2
  %56 = load i32, i32* @x.396
  %57 = load i32, i32* @y.397
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -2133829485, i32 2070007548
  store i32 %69, i32* %15
  br label %137

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64, i64* %2
  ret i64 %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %73, align 8
  %74 = load %"class.std::vector.11"*, %"class.std::vector.11"** %73, align 8
  %75 = bitcast %"class.std::vector.11"* %74 to %"struct.std::_Vector_base.17"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %76, i32 0, i32 1
  %78 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %77, align 8
  %79 = bitcast %"class.std::vector.11"* %74 to %"struct.std::_Vector_base.17"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %80, i32 0, i32 0
  %82 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %81, align 8
  %83 = ptrtoint %"struct.Maxflow<long long>::edge"* %78 to i64
  %84 = ptrtoint %"struct.Maxflow<long long>::edge"* %82 to i64
  %85 = sub i64 %83, 4500406750009070327
  %86 = sub i64 %85, %84
  %87 = add i64 %86, 4500406750009070327
  %88 = sub i64 %83, %84
  %89 = mul i64 %87, %84
  %90 = shl i64 %83, %84
  %91 = sub i64 0, %84
  %92 = add i64 %83, %91
  %93 = sub i64 %83, %84
  %94 = mul i64 %92, %84
  %95 = add i64 0, 7560315081856022762
  %96 = sub i64 %95, %83
  %97 = sub i64 %96, 7560315081856022762
  %98 = sub i64 0, %83
  %99 = sub i64 0, %84
  %100 = sub i64 %97, %99
  %101 = add i64 %97, %84
  %102 = shl i64 %83, %84
  %103 = sub i64 %83, -8618903511119436650
  %104 = sub i64 %103, %84
  %105 = add i64 %104, -8618903511119436650
  %106 = sub i64 %83, %84
  %107 = mul i64 %105, %84
  %108 = add i64 %83, -3763665809605133125
  %109 = sub i64 %108, %84
  %110 = sub i64 %109, -3763665809605133125
  %111 = sub i64 %83, %84
  %112 = sub i64 0, 24
  %113 = add i64 %110, %112
  %114 = sub i64 %110, 24
  %115 = mul i64 %113, 24
  %116 = add i64 %110, -1793141102386770889
  %117 = sub i64 %116, 24
  %118 = sub i64 %117, -1793141102386770889
  %119 = sub i64 %110, 24
  %120 = mul i64 %118, 24
  %121 = sub i64 0, %110
  %122 = add i64 0, %121
  %123 = sub i64 0, %110
  %124 = sub i64 0, %122
  %125 = sub i64 0, 24
  %126 = add i64 %124, %125
  %127 = sub i64 0, %126
  %128 = add i64 %122, 24
  %129 = sub i64 0, 24
  %130 = add i64 %110, %129
  %131 = sub i64 %110, 24
  %132 = mul i64 %130, 24
  %133 = shl i64 %110, 24
  %134 = shl i64 %110, 24
  %135 = shl i64 %110, 24
  %136 = sdiv exact i64 %110, 24
  store i32 -2146243327, i32* %15
  br label %137

; <label>:137:                                    ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE12emplace_backIJS2_EEEvDpOT_(%"class.std::vector.11"*, %"struct.Maxflow<long long>::edge"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.Maxflow<long long>::edge"*
  %4 = alloca %"struct.Maxflow<long long>::edge"*
  %5 = alloca %"class.std::vector.11"*
  %6 = alloca %"class.std::vector.11"*, align 8
  %7 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %6, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %7, align 8
  %8 = load %"class.std::vector.11"*, %"class.std::vector.11"** %6, align 8
  store %"class.std::vector.11"* %8, %"class.std::vector.11"** %5
  %9 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %5
  %10 = bitcast %"class.std::vector.11"* %9 to %"struct.std::_Vector_base.17"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %12, align 8
  store %"struct.Maxflow<long long>::edge"* %13, %"struct.Maxflow<long long>::edge"** %4
  %14 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %5
  %15 = bitcast %"class.std::vector.11"* %14 to %"struct.std::_Vector_base.17"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %17, align 8
  store %"struct.Maxflow<long long>::edge"* %18, %"struct.Maxflow<long long>::edge"** %3
  %19 = alloca i32
  store i32 -1390027018, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %51
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1390027018, label %23
    i32 -1272366097, label %28
    i32 1815360766, label %46
    i32 -1080114140, label %50
  ]

; <label>:22:                                     ; preds = %20
  br label %51

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4
  %25 = load volatile %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %3
  %26 = icmp ne %"struct.Maxflow<long long>::edge"* %24, %25
  %27 = select i1 %26, i32 -1272366097, i32 1815360766
  store i32 %27, i32* %19
  br label %51

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %5
  %30 = bitcast %"class.std::vector.11"* %29 to %"struct.std::_Vector_base.17"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %31 to %"class.std::allocator.18"*
  %33 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %5
  %34 = bitcast %"class.std::vector.11"* %33 to %"struct.std::_Vector_base.17"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %36, align 8
  %38 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  %39 = call dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZSt7forwardIN7MaxflowIxE4edgeEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.Maxflow<long long>::edge"* dereferenceable(24) %38) #3
  call void @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.18"* dereferenceable(1) %32, %"struct.Maxflow<long long>::edge"* %37, %"struct.Maxflow<long long>::edge"* dereferenceable(24) %39)
  %40 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %5
  %41 = bitcast %"class.std::vector.11"* %40 to %"struct.std::_Vector_base.17"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %43, align 8
  %45 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %44, i32 1
  store %"struct.Maxflow<long long>::edge"* %45, %"struct.Maxflow<long long>::edge"** %43, align 8
  store i32 -1080114140, i32* %19
  br label %51

; <label>:46:                                     ; preds = %20
  %47 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  %48 = call dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZSt7forwardIN7MaxflowIxE4edgeEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.Maxflow<long long>::edge"* dereferenceable(24) %47) #3
  %49 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %5
  call void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE19_M_emplace_back_auxIJS2_EEEvDpOT_(%"class.std::vector.11"* %49, %"struct.Maxflow<long long>::edge"* dereferenceable(24) %48)
  store i32 -1080114140, i32* %19
  br label %51

; <label>:50:                                     ; preds = %20
  ret void

; <label>:51:                                     ; preds = %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZSt4moveIRN7MaxflowIxE4edgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Maxflow<long long>::edge"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %2, align 8
  %3 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %2, align 8
  ret %"struct.Maxflow<long long>::edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.18"* dereferenceable(1), %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.18"*, align 8
  %5 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %6 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %4, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %5, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %6, align 8
  %7 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %4, align 8
  %8 = bitcast %"class.std::allocator.18"* %7 to %"class.__gnu_cxx::new_allocator.19"*
  %9 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %5, align 8
  %10 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %11 = call dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZSt7forwardIN7MaxflowIxE4edgeEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.Maxflow<long long>::edge"* dereferenceable(24) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE9constructIS3_JS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.19"* %8, %"struct.Maxflow<long long>::edge"* %9, %"struct.Maxflow<long long>::edge"* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZSt7forwardIN7MaxflowIxE4edgeEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.Maxflow<long long>::edge"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %2, align 8
  %3 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %2, align 8
  ret %"struct.Maxflow<long long>::edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE19_M_emplace_back_auxIJS2_EEEvDpOT_(%"class.std::vector.11"*, %"struct.Maxflow<long long>::edge"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %7 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %4, align 8
  %10 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.11"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.Maxflow<long long>::edge"* @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.17"* %12, i64 %13)
  store %"struct.Maxflow<long long>::edge"* %14, %"struct.Maxflow<long long>::edge"** %6, align 8
  %15 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  store %"struct.Maxflow<long long>::edge"* %15, %"struct.Maxflow<long long>::edge"** %7, align 8
  %16 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %17 to %"class.std::allocator.18"*
  %19 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %10) #3
  %21 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %19, i64 %20
  %22 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4, align 8
  %23 = call dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZSt7forwardIN7MaxflowIxE4edgeEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.Maxflow<long long>::edge"* dereferenceable(24) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.18"* dereferenceable(1) %18, %"struct.Maxflow<long long>::edge"* %21, %"struct.Maxflow<long long>::edge"* dereferenceable(24) %23)
          to label %24 unwind label %81

; <label>:24:                                     ; preds = %2
  store %"struct.Maxflow<long long>::edge"* null, %"struct.Maxflow<long long>::edge"** %7, align 8
  %25 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %27, align 8
  %29 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %31, align 8
  %33 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %34 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %35 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %34) #3
  %36 = invoke %"struct.Maxflow<long long>::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN7MaxflowIxE4edgeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.Maxflow<long long>::edge"* %28, %"struct.Maxflow<long long>::edge"* %32, %"struct.Maxflow<long long>::edge"* %33, %"class.std::allocator.18"* dereferenceable(1) %35)
          to label %37 unwind label %81

; <label>:37:                                     ; preds = %24
  %38 = load i32, i32* @x.406
  %39 = load i32, i32* @y.407
  %40 = sub i32 %38, -948320428
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -948320428
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %279

; <label>:64:                                     ; preds = %37, %279
  store %"struct.Maxflow<long long>::edge"* %36, %"struct.Maxflow<long long>::edge"** %7, align 8
  %65 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  %66 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %65, i32 1
  store %"struct.Maxflow<long long>::edge"* %66, %"struct.Maxflow<long long>::edge"** %7, align 8
  %67 = load i32, i32* @x.406
  %68 = load i32, i32* @y.407
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %279

; <label>:80:                                     ; preds = %64
  br label %156

; <label>:81:                                     ; preds = %24, %2
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %8, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %9, align 4
  br label %85

; <label>:85:                                     ; preds = %81
  %86 = load i8*, i8** %8, align 8
  %87 = call i8* @__cxa_begin_catch(i8* %86) #3
  %88 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  %89 = icmp ne %"struct.Maxflow<long long>::edge"* %88, null
  br i1 %89, label %144, label %90

; <label>:90:                                     ; preds = %85
  %91 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %91, i32 0, i32 0
  %93 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %92 to %"class.std::allocator.18"*
  %94 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %95 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %10) #3
  %96 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %94, i64 %95
  invoke void @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.18"* dereferenceable(1) %93, %"struct.Maxflow<long long>::edge"* %96)
          to label %97 unwind label %98

; <label>:97:                                     ; preds = %90
  br label %150

; <label>:98:                                     ; preds = %154, %150, %144, %90
  %99 = load i32, i32* @x.406
  %100 = load i32, i32* @y.407
  %101 = sub i32 %99, -1817567227
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -1817567227
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %282

; <label>:125:                                    ; preds = %98, %282
  %126 = landingpad { i8*, i32 }
          cleanup
  %127 = extractvalue { i8*, i32 } %126, 0
  store i8* %127, i8** %8, align 8
  %128 = extractvalue { i8*, i32 } %126, 1
  store i32 %128, i32* %9, align 4
  %129 = load i32, i32* @x.406
  %130 = load i32, i32* @y.407
  %131 = sub i32 %129, -367605412
  %132 = sub i32 %131, 1
  %133 = add i32 %132, -367605412
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %282

; <label>:143:                                    ; preds = %125
  invoke void @__cxa_end_catch()
          to label %155 unwind label %234

; <label>:144:                                    ; preds = %85
  %145 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %146 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  %147 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %148 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %147) #3
  invoke void @_ZSt8_DestroyIPN7MaxflowIxE4edgeES2_EvT_S4_RSaIT0_E(%"struct.Maxflow<long long>::edge"* %145, %"struct.Maxflow<long long>::edge"* %146, %"class.std::allocator.18"* dereferenceable(1) %148)
          to label %149 unwind label %98

; <label>:149:                                    ; preds = %144
  br label %150

; <label>:150:                                    ; preds = %149, %97
  %151 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %152 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %153 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.17"* %151, %"struct.Maxflow<long long>::edge"* %152, i64 %153)
          to label %154 unwind label %98

; <label>:154:                                    ; preds = %150
  invoke void @__cxa_rethrow() #12
          to label %237 unwind label %98

; <label>:155:                                    ; preds = %143
  br label %229

; <label>:156:                                    ; preds = %80
  %157 = load i32, i32* @x.406
  %158 = load i32, i32* @y.407
  %159 = sub i32 %157, -939801299
  %160 = sub i32 %159, 1
  %161 = add i32 %160, -939801299
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %286

; <label>:171:                                    ; preds = %156, %286
  %172 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %172, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %173, i32 0, i32 0
  %175 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %174, align 8
  %176 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %177, i32 0, i32 1
  %179 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %178, align 8
  %180 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %181 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %180) #3
  call void @_ZSt8_DestroyIPN7MaxflowIxE4edgeES2_EvT_S4_RSaIT0_E(%"struct.Maxflow<long long>::edge"* %175, %"struct.Maxflow<long long>::edge"* %179, %"class.std::allocator.18"* dereferenceable(1) %181)
  %182 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %183 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %184 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %183, i32 0, i32 0
  %185 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %184, i32 0, i32 0
  %186 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %185, align 8
  %187 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %188, i32 0, i32 2
  %190 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %189, align 8
  %191 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %192 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %191, i32 0, i32 0
  %193 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %192, i32 0, i32 0
  %194 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %193, align 8
  %195 = ptrtoint %"struct.Maxflow<long long>::edge"* %190 to i64
  %196 = ptrtoint %"struct.Maxflow<long long>::edge"* %194 to i64
  %197 = sub i64 0, %196
  %198 = add i64 %195, %197
  %199 = sub i64 %195, %196
  %200 = sdiv exact i64 %198, 24
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.17"* %182, %"struct.Maxflow<long long>::edge"* %186, i64 %200)
  %201 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %202 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %203 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %202, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %203, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %201, %"struct.Maxflow<long long>::edge"** %204, align 8
  %205 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  %206 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %207 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %206, i32 0, i32 0
  %208 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %207, i32 0, i32 1
  store %"struct.Maxflow<long long>::edge"* %205, %"struct.Maxflow<long long>::edge"** %208, align 8
  %209 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %210 = load i64, i64* %5, align 8
  %211 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %209, i64 %210
  %212 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %213 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %212, i32 0, i32 0
  %214 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %213, i32 0, i32 2
  store %"struct.Maxflow<long long>::edge"* %211, %"struct.Maxflow<long long>::edge"** %214, align 8
  %215 = load i32, i32* @x.406
  %216 = load i32, i32* @y.407
  %217 = sub i32 0, 1
  %218 = add i32 %215, %217
  %219 = sub i32 %215, 1
  %220 = mul i32 %215, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %216, 10
  %224 = and i1 %222, %223
  %225 = xor i1 %222, %223
  %226 = or i1 %224, %225
  %227 = or i1 %222, %223
  br i1 %226, label %228, label %286

; <label>:228:                                    ; preds = %171
  ret void

; <label>:229:                                    ; preds = %155
  %230 = load i8*, i8** %8, align 8
  %231 = load i32, i32* %9, align 4
  %232 = insertvalue { i8*, i32 } undef, i8* %230, 0
  %233 = insertvalue { i8*, i32 } %232, i32 %231, 1
  resume { i8*, i32 } %233

; <label>:234:                                    ; preds = %143
  %235 = landingpad { i8*, i32 }
          catch i8* null
  %236 = extractvalue { i8*, i32 } %235, 0
  call void @__clang_call_terminate(i8* %236) #11
  unreachable

; <label>:237:                                    ; preds = %154
  %238 = load i32, i32* @x.406
  %239 = load i32, i32* @y.407
  %240 = sub i32 0, 1
  %241 = add i32 %238, %240
  %242 = sub i32 %238, 1
  %243 = mul i32 %238, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %239, 10
  %247 = and i1 %245, %246
  %248 = xor i1 %245, %246
  %249 = or i1 %247, %248
  %250 = or i1 %245, %246
  br i1 %249, label %251, label %352

; <label>:251:                                    ; preds = %237, %352
  %252 = load i32, i32* @x.406
  %253 = load i32, i32* @y.407
  %254 = add i32 %252, 1568317785
  %255 = sub i32 %254, 1
  %256 = sub i32 %255, 1568317785
  %257 = sub i32 %252, 1
  %258 = mul i32 %252, %256
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %253, 10
  %262 = xor i1 %260, true
  %263 = xor i1 %261, true
  %264 = xor i1 true, true
  %265 = and i1 %262, true
  %266 = and i1 %260, %264
  %267 = and i1 %263, true
  %268 = and i1 %261, %264
  %269 = or i1 %265, %266
  %270 = or i1 %267, %268
  %271 = xor i1 %269, %270
  %272 = or i1 %262, %263
  %273 = xor i1 %272, true
  %274 = or i1 true, %264
  %275 = and i1 %273, %274
  %276 = or i1 %271, %275
  %277 = or i1 %260, %261
  br i1 %276, label %278, label %352

; <label>:278:                                    ; preds = %251
  unreachable

; <label>:279:                                    ; preds = %64, %37
  store %"struct.Maxflow<long long>::edge"* %36, %"struct.Maxflow<long long>::edge"** %7, align 8
  %280 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  %281 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %280, i32 1
  store %"struct.Maxflow<long long>::edge"* %281, %"struct.Maxflow<long long>::edge"** %7, align 8
  br label %64

; <label>:282:                                    ; preds = %125, %98
  %283 = landingpad { i8*, i32 }
          cleanup
  %284 = extractvalue { i8*, i32 } %283, 0
  store i8* %284, i8** %8, align 8
  %285 = extractvalue { i8*, i32 } %283, 1
  store i32 %285, i32* %9, align 4
  br label %125

; <label>:286:                                    ; preds = %171, %156
  %287 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %288 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %287, i32 0, i32 0
  %289 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %288, i32 0, i32 0
  %290 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %289, align 8
  %291 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %292 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %291, i32 0, i32 0
  %293 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %292, i32 0, i32 1
  %294 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %293, align 8
  %295 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %296 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %295) #3
  call void @_ZSt8_DestroyIPN7MaxflowIxE4edgeES2_EvT_S4_RSaIT0_E(%"struct.Maxflow<long long>::edge"* %290, %"struct.Maxflow<long long>::edge"* %294, %"class.std::allocator.18"* dereferenceable(1) %296)
  %297 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %298 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %299 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %298, i32 0, i32 0
  %300 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %299, i32 0, i32 0
  %301 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %300, align 8
  %302 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %303 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %302, i32 0, i32 0
  %304 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %303, i32 0, i32 2
  %305 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %304, align 8
  %306 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %307 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %306, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %307, i32 0, i32 0
  %309 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %308, align 8
  %310 = ptrtoint %"struct.Maxflow<long long>::edge"* %305 to i64
  %311 = ptrtoint %"struct.Maxflow<long long>::edge"* %309 to i64
  %312 = sub i64 0, %310
  %313 = add i64 0, %312
  %314 = sub i64 0, %310
  %315 = sub i64 %313, -2249289794385208395
  %316 = add i64 %315, %311
  %317 = add i64 %316, -2249289794385208395
  %318 = add i64 %313, %311
  %319 = sub i64 0, 5968452169010935055
  %320 = sub i64 %319, %310
  %321 = add i64 %320, 5968452169010935055
  %322 = sub i64 0, %310
  %323 = sub i64 0, %311
  %324 = sub i64 %321, %323
  %325 = add i64 %321, %311
  %326 = sub i64 %310, 2924334105169088459
  %327 = sub i64 %326, %311
  %328 = add i64 %327, 2924334105169088459
  %329 = sub i64 %310, %311
  %330 = shl i64 %328, 24
  %331 = shl i64 %328, 24
  %332 = sub i64 %328, 1102326360439187489
  %333 = sub i64 %332, 24
  %334 = add i64 %333, 1102326360439187489
  %335 = sub i64 %328, 24
  %336 = mul i64 %334, 24
  %337 = sdiv exact i64 %328, 24
  call void @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.17"* %297, %"struct.Maxflow<long long>::edge"* %301, i64 %337)
  %338 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %339 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %340 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %339, i32 0, i32 0
  %341 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %340, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %338, %"struct.Maxflow<long long>::edge"** %341, align 8
  %342 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  %343 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %344 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %343, i32 0, i32 0
  %345 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %344, i32 0, i32 1
  store %"struct.Maxflow<long long>::edge"* %342, %"struct.Maxflow<long long>::edge"** %345, align 8
  %346 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %347 = load i64, i64* %5, align 8
  %348 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %346, i64 %347
  %349 = bitcast %"class.std::vector.11"* %10 to %"struct.std::_Vector_base.17"*
  %350 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %349, i32 0, i32 0
  %351 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %350, i32 0, i32 2
  store %"struct.Maxflow<long long>::edge"* %348, %"struct.Maxflow<long long>::edge"** %351, align 8
  br label %171

; <label>:352:                                    ; preds = %251, %237
  br label %251
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE9constructIS3_JS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.19"*, %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"* dereferenceable(24)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %5 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %6 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %4, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %5, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %4, align 8
  %8 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %5, align 8
  %9 = bitcast %"struct.Maxflow<long long>::edge"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Maxflow<long long>::edge"*
  %11 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %12 = call dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZSt7forwardIN7MaxflowIxE4edgeEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.Maxflow<long long>::edge"* dereferenceable(24) %11) #3
  %13 = bitcast %"struct.Maxflow<long long>::edge"* %10 to i8*
  %14 = bitcast %"struct.Maxflow<long long>::edge"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"class.std::vector.11"*
  %8 = alloca i64*
  %9 = alloca i64*
  %10 = alloca i8**
  %11 = alloca i64*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.410
  %15 = load i32, i32* @y.411
  %16 = sub i32 %14, 1601696087
  %17 = sub i32 %16, 1
  %18 = add i32 %17, 1601696087
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 738728612, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %341
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 738728612, label %29
    i32 501299519, label %49
    i32 -1705509517, label %96
    i32 -2035657691, label %99
    i32 1265546729, label %127
    i32 -1951277440, label %145
    i32 -456943448, label %146
    i32 -1456256000, label %174
    i32 111659062, label %209
    i32 182307078, label %212
    i32 -1957621458, label %219
    i32 109287467, label %222
    i32 563182137, label %250
    i32 -1237179828, label %280
    i32 -519289640, label %282
    i32 2126365228, label %284
    i32 -1086845479, label %306
    i32 1554624256, label %309
    i32 -1560596226, label %338
  ]

; <label>:28:                                     ; preds = %26
  br label %341

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %13
  %31 = load volatile i1, i1* %12
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 501299519, i32 2126365228
  store i32 %48, i32* %24
  br label %341

; <label>:49:                                     ; preds = %26
  %50 = alloca %"class.std::vector.11"*, align 8
  %51 = alloca i64, align 8
  store i64* %51, i64** %11
  %52 = alloca i8*, align 8
  store i8** %52, i8*** %10
  %53 = alloca i64, align 8
  store i64* %53, i64** %9
  %54 = alloca i64, align 8
  store i64* %54, i64** %8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %50, align 8
  %55 = load volatile i64*, i64** %11
  store i64 %1, i64* %55, align 8
  %56 = load volatile i8**, i8*** %10
  store i8* %2, i8** %56, align 8
  %57 = load %"class.std::vector.11"*, %"class.std::vector.11"** %50, align 8
  store %"class.std::vector.11"* %57, %"class.std::vector.11"** %7
  %58 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %59 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.11"* %58) #3
  %60 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %61 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %60) #3
  %62 = sub i64 %59, 7504473510026705051
  %63 = sub i64 %62, %61
  %64 = add i64 %63, 7504473510026705051
  %65 = sub i64 %59, %61
  %66 = load volatile i64*, i64** %11
  %67 = load i64, i64* %66, align 8
  %68 = icmp ult i64 %64, %67
  store i1 %68, i1* %6
  %69 = load i32, i32* @x.410
  %70 = load i32, i32* @y.411
  %71 = add i32 %69, -845990495
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -845990495
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 -1705509517, i32 2126365228
  store i32 %95, i32* %24
  br label %341

; <label>:96:                                     ; preds = %26
  %97 = load volatile i1, i1* %6
  %98 = select i1 %97, i32 -2035657691, i32 -456943448
  store i32 %98, i32* %24
  br label %341

; <label>:99:                                     ; preds = %26
  %100 = load i32, i32* @x.410
  %101 = load i32, i32* @y.411
  %102 = sub i32 %100, 884531234
  %103 = sub i32 %102, 1
  %104 = add i32 %103, 884531234
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 false, true
  %113 = and i1 %110, false
  %114 = and i1 %108, %112
  %115 = and i1 %111, false
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 false, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  %126 = select i1 %124, i32 1265546729, i32 -1086845479
  store i32 %126, i32* %24
  br label %341

; <label>:127:                                    ; preds = %26
  %128 = load volatile i8**, i8*** %10
  %129 = load i8*, i8** %128, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %129) #12
  %130 = load i32, i32* @x.410
  %131 = load i32, i32* @y.411
  %132 = sub i32 %130, -304330739
  %133 = sub i32 %132, 1
  %134 = add i32 %133, -304330739
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = and i1 %138, %139
  %141 = xor i1 %138, %139
  %142 = or i1 %140, %141
  %143 = or i1 %138, %139
  %144 = select i1 %142, i32 -1951277440, i32 -1086845479
  store i32 %144, i32* %24
  br label %341

; <label>:145:                                    ; preds = %26
  unreachable

; <label>:146:                                    ; preds = %26
  %147 = load i32, i32* @x.410
  %148 = load i32, i32* @y.411
  %149 = add i32 %147, -1895169174
  %150 = sub i32 %149, 1
  %151 = sub i32 %150, -1895169174
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 true, true
  %160 = and i1 %157, true
  %161 = and i1 %155, %159
  %162 = and i1 %158, true
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 true, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  %173 = select i1 %171, i32 -1456256000, i32 1554624256
  store i32 %173, i32* %24
  br label %341

; <label>:174:                                    ; preds = %26
  %175 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %176 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %175) #3
  %177 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %178 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %177) #3
  %179 = load volatile i64*, i64** %8
  store i64 %178, i64* %179, align 8
  %180 = load volatile i64*, i64** %11
  %181 = load volatile i64*, i64** %8
  %182 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %181, i64* dereferenceable(8) %180)
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %176, -4242394577867828929
  %185 = add i64 %184, %183
  %186 = sub i64 %185, -4242394577867828929
  %187 = add i64 %176, %183
  %188 = load volatile i64*, i64** %9
  store i64 %186, i64* %188, align 8
  %189 = load volatile i64*, i64** %9
  %190 = load i64, i64* %189, align 8
  %191 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %192 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %191) #3
  %193 = icmp ult i64 %190, %192
  store i1 %193, i1* %5
  %194 = load i32, i32* @x.410
  %195 = load i32, i32* @y.411
  %196 = sub i32 %194, -25684859
  %197 = sub i32 %196, 1
  %198 = add i32 %197, -25684859
  %199 = sub i32 %194, 1
  %200 = mul i32 %194, %198
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %195, 10
  %204 = and i1 %202, %203
  %205 = xor i1 %202, %203
  %206 = or i1 %204, %205
  %207 = or i1 %202, %203
  %208 = select i1 %206, i32 111659062, i32 1554624256
  store i32 %208, i32* %24
  br label %341

; <label>:209:                                    ; preds = %26
  %210 = load volatile i1, i1* %5
  %211 = select i1 %210, i32 -1957621458, i32 182307078
  store i32 %211, i32* %24
  br label %341

; <label>:212:                                    ; preds = %26
  %213 = load volatile i64*, i64** %9
  %214 = load i64, i64* %213, align 8
  %215 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %216 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.11"* %215) #3
  %217 = icmp ugt i64 %214, %216
  %218 = select i1 %217, i32 -1957621458, i32 109287467
  store i32 %218, i32* %24
  br label %341

; <label>:219:                                    ; preds = %26
  %220 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %221 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.11"* %220) #3
  store i32 -519289640, i32* %24
  store i64 %221, i64* %25
  br label %341

; <label>:222:                                    ; preds = %26
  %223 = load i32, i32* @x.410
  %224 = load i32, i32* @y.411
  %225 = add i32 %223, 2085017622
  %226 = sub i32 %225, 1
  %227 = sub i32 %226, 2085017622
  %228 = sub i32 %223, 1
  %229 = mul i32 %223, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %224, 10
  %233 = xor i1 %231, true
  %234 = xor i1 %232, true
  %235 = xor i1 false, true
  %236 = and i1 %233, false
  %237 = and i1 %231, %235
  %238 = and i1 %234, false
  %239 = and i1 %232, %235
  %240 = or i1 %236, %237
  %241 = or i1 %238, %239
  %242 = xor i1 %240, %241
  %243 = or i1 %233, %234
  %244 = xor i1 %243, true
  %245 = or i1 false, %235
  %246 = and i1 %244, %245
  %247 = or i1 %242, %246
  %248 = or i1 %231, %232
  %249 = select i1 %247, i32 563182137, i32 -1560596226
  store i32 %249, i32* %24
  br label %341

; <label>:250:                                    ; preds = %26
  %251 = load volatile i64*, i64** %9
  %252 = load i64, i64* %251, align 8
  store i64 %252, i64* %4
  %253 = load i32, i32* @x.410
  %254 = load i32, i32* @y.411
  %255 = sub i32 %253, -1442441140
  %256 = sub i32 %255, 1
  %257 = add i32 %256, -1442441140
  %258 = sub i32 %253, 1
  %259 = mul i32 %253, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %254, 10
  %263 = xor i1 %261, true
  %264 = xor i1 %262, true
  %265 = xor i1 true, true
  %266 = and i1 %263, true
  %267 = and i1 %261, %265
  %268 = and i1 %264, true
  %269 = and i1 %262, %265
  %270 = or i1 %266, %267
  %271 = or i1 %268, %269
  %272 = xor i1 %270, %271
  %273 = or i1 %263, %264
  %274 = xor i1 %273, true
  %275 = or i1 true, %265
  %276 = and i1 %274, %275
  %277 = or i1 %272, %276
  %278 = or i1 %261, %262
  %279 = select i1 %277, i32 -1237179828, i32 -1560596226
  store i32 %279, i32* %24
  br label %341

; <label>:280:                                    ; preds = %26
  store i32 -519289640, i32* %24
  %281 = load volatile i64, i64* %4
  store i64 %281, i64* %25
  br label %341

; <label>:282:                                    ; preds = %26
  %283 = load i64, i64* %25
  ret i64 %283

; <label>:284:                                    ; preds = %26
  %285 = alloca %"class.std::vector.11"*, align 8
  %286 = alloca i64, align 8
  %287 = alloca i8*, align 8
  %288 = alloca i64, align 8
  %289 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %285, align 8
  store i64 %1, i64* %286, align 8
  store i8* %2, i8** %287, align 8
  %290 = load %"class.std::vector.11"*, %"class.std::vector.11"** %285, align 8
  %291 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.11"* %290) #3
  %292 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %290) #3
  %293 = add i64 0, 5260384465345697216
  %294 = sub i64 %293, %291
  %295 = sub i64 %294, 5260384465345697216
  %296 = sub i64 0, %291
  %297 = add i64 %295, 7896566576095190644
  %298 = add i64 %297, %292
  %299 = sub i64 %298, 7896566576095190644
  %300 = add i64 %295, %292
  %301 = sub i64 0, %292
  %302 = add i64 %291, %301
  %303 = sub i64 %291, %292
  %304 = load i64, i64* %286, align 8
  %305 = icmp ult i64 %302, %304
  store i32 501299519, i32* %24
  br label %341

; <label>:306:                                    ; preds = %26
  %307 = load volatile i8**, i8*** %10
  %308 = load i8*, i8** %307, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %308) #12
  store i32 1265546729, i32* %24
  br label %341

; <label>:309:                                    ; preds = %26
  %310 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %311 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %310) #3
  %312 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %313 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %312) #3
  %314 = load volatile i64*, i64** %8
  store i64 %313, i64* %314, align 8
  %315 = load volatile i64*, i64** %11
  %316 = load volatile i64*, i64** %8
  %317 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %316, i64* dereferenceable(8) %315)
  %318 = load i64, i64* %317, align 8
  %319 = add i64 %311, 1263059436048995022
  %320 = sub i64 %319, %318
  %321 = sub i64 %320, 1263059436048995022
  %322 = sub i64 %311, %318
  %323 = mul i64 %321, %318
  %324 = sub i64 0, %318
  %325 = add i64 %311, %324
  %326 = sub i64 %311, %318
  %327 = mul i64 %325, %318
  %328 = add i64 %311, -6625339043161485689
  %329 = add i64 %328, %318
  %330 = sub i64 %329, -6625339043161485689
  %331 = add i64 %311, %318
  %332 = load volatile i64*, i64** %9
  store i64 %330, i64* %332, align 8
  %333 = load volatile i64*, i64** %9
  %334 = load i64, i64* %333, align 8
  %335 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %336 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %335) #3
  %337 = icmp ult i64 %334, %336
  store i32 -1456256000, i32* %24
  br label %341

; <label>:338:                                    ; preds = %26
  %339 = load volatile i64*, i64** %9
  %340 = load i64, i64* %339, align 8
  store i32 563182137, i32* %24
  br label %341

; <label>:341:                                    ; preds = %338, %309, %306, %284, %280, %250, %222, %219, %212, %209, %174, %146, %127, %99, %96, %49, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZNSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.17"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.Maxflow<long long>::edge"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.17"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.412
  %10 = load i32, i32* @y.413
  %11 = sub i32 %9, -742608263
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -742608263
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 1932625570, i32* %19
  %20 = alloca %"struct.Maxflow<long long>::edge"*
  br label %21

; <label>:21:                                     ; preds = %2, %125
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 1932625570, label %24
    i32 172405112, label %32
    i32 -38165859, label %55
    i32 478903591, label %58
    i32 1504371318, label %86
    i32 89636318, label %107
    i32 -111166367, label %109
    i32 -930559250, label %110
    i32 721034693, label %112
    i32 445809228, label %118
  ]

; <label>:23:                                     ; preds = %21
  br label %125

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 172405112, i32 721034693
  store i32 %31, i32* %19
  br label %125

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.17"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %33, align 8
  store %"struct.std::_Vector_base.17"* %36, %"struct.std::_Vector_base.17"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.412
  %41 = load i32, i32* @y.413
  %42 = add i32 %40, -1257314279
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1257314279
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -38165859, i32 721034693
  store i32 %54, i32* %19
  br label %125

; <label>:55:                                     ; preds = %21
  %56 = load volatile i1, i1* %4
  %57 = select i1 %56, i32 478903591, i32 -111166367
  store i32 %57, i32* %19
  br label %125

; <label>:58:                                     ; preds = %21
  %59 = load i32, i32* @x.412
  %60 = load i32, i32* @y.413
  %61 = add i32 %59, -109708445
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -109708445
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 1504371318, i32 445809228
  store i32 %85, i32* %19
  br label %125

; <label>:86:                                     ; preds = %21
  %87 = load volatile %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %5
  %88 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %88 to %"class.std::allocator.18"*
  %90 = load volatile i64*, i64** %6
  %91 = load i64, i64* %90, align 8
  %92 = call %"struct.Maxflow<long long>::edge"* @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE8allocateERS3_m(%"class.std::allocator.18"* dereferenceable(1) %89, i64 %91)
  store %"struct.Maxflow<long long>::edge"* %92, %"struct.Maxflow<long long>::edge"** %3
  %93 = load i32, i32* @x.412
  %94 = load i32, i32* @y.413
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 89636318, i32 445809228
  store i32 %106, i32* %19
  br label %125

; <label>:107:                                    ; preds = %21
  store i32 -930559250, i32* %19
  %108 = load volatile %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %3
  store %"struct.Maxflow<long long>::edge"* %108, %"struct.Maxflow<long long>::edge"** %20
  br label %125

; <label>:109:                                    ; preds = %21
  store i32 -930559250, i32* %19
  store %"struct.Maxflow<long long>::edge"* null, %"struct.Maxflow<long long>::edge"** %20
  br label %125

; <label>:110:                                    ; preds = %21
  %111 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %20
  ret %"struct.Maxflow<long long>::edge"* %111

; <label>:112:                                    ; preds = %21
  %113 = alloca %"struct.std::_Vector_base.17"*, align 8
  %114 = alloca i64, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %113, align 8
  store i64 %1, i64* %114, align 8
  %115 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %113, align 8
  %116 = load i64, i64* %114, align 8
  %117 = icmp ne i64 %116, 0
  store i32 172405112, i32* %19
  br label %125

; <label>:118:                                    ; preds = %21
  %119 = load volatile %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %5
  %120 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %119, i32 0, i32 0
  %121 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %120 to %"class.std::allocator.18"*
  %122 = load volatile i64*, i64** %6
  %123 = load i64, i64* %122, align 8
  %124 = call %"struct.Maxflow<long long>::edge"* @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE8allocateERS3_m(%"class.std::allocator.18"* dereferenceable(1) %121, i64 %123)
  store i32 1504371318, i32* %19
  br label %125

; <label>:125:                                    ; preds = %118, %112, %109, %107, %86, %58, %55, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN7MaxflowIxE4edgeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"class.std::allocator.18"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Maxflow<long long>::edge"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.414
  %9 = load i32, i32* @y.415
  %10 = sub i32 %8, 1112697288
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1112697288
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 2059444456, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %87
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 2059444456, label %22
    i32 1150659907, label %30
    i32 1272817764, label %65
    i32 1542446276, label %67
  ]

; <label>:21:                                     ; preds = %19
  br label %87

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1150659907, i32 1542446276
  store i32 %29, i32* %18
  br label %87

; <label>:30:                                     ; preds = %19
  %31 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %32 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %33 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %34 = alloca %"class.std::allocator.18"*, align 8
  %35 = alloca %"class.std::move_iterator.22", align 8
  %36 = alloca %"class.std::move_iterator.22", align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %31, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %32, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %33, align 8
  store %"class.std::allocator.18"* %3, %"class.std::allocator.18"** %34, align 8
  %37 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %31, align 8
  %38 = call %"struct.Maxflow<long long>::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN7MaxflowIxE4edgeESt13move_iteratorIS3_EET0_T_(%"struct.Maxflow<long long>::edge"* %37)
  %39 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %35, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %38, %"struct.Maxflow<long long>::edge"** %39, align 8
  %40 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %32, align 8
  %41 = call %"struct.Maxflow<long long>::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN7MaxflowIxE4edgeESt13move_iteratorIS3_EET0_T_(%"struct.Maxflow<long long>::edge"* %40)
  %42 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %36, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %41, %"struct.Maxflow<long long>::edge"** %42, align 8
  %43 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %33, align 8
  %44 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %34, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %35, i32 0, i32 0
  %46 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %45, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %36, i32 0, i32 0
  %48 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %47, align 8
  %49 = call %"struct.Maxflow<long long>::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN7MaxflowIxE4edgeEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.Maxflow<long long>::edge"* %46, %"struct.Maxflow<long long>::edge"* %48, %"struct.Maxflow<long long>::edge"* %43, %"class.std::allocator.18"* dereferenceable(1) %44)
  store %"struct.Maxflow<long long>::edge"* %49, %"struct.Maxflow<long long>::edge"** %5
  %50 = load i32, i32* @x.414
  %51 = load i32, i32* @y.415
  %52 = add i32 %50, 1220855129
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1220855129
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1272817764, i32 1542446276
  store i32 %64, i32* %18
  br label %87

; <label>:65:                                     ; preds = %19
  %66 = load volatile %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %5
  ret %"struct.Maxflow<long long>::edge"* %66

; <label>:67:                                     ; preds = %19
  %68 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %69 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %70 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %71 = alloca %"class.std::allocator.18"*, align 8
  %72 = alloca %"class.std::move_iterator.22", align 8
  %73 = alloca %"class.std::move_iterator.22", align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %68, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %69, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %70, align 8
  store %"class.std::allocator.18"* %3, %"class.std::allocator.18"** %71, align 8
  %74 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %68, align 8
  %75 = call %"struct.Maxflow<long long>::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN7MaxflowIxE4edgeESt13move_iteratorIS3_EET0_T_(%"struct.Maxflow<long long>::edge"* %74)
  %76 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %72, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %75, %"struct.Maxflow<long long>::edge"** %76, align 8
  %77 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %69, align 8
  %78 = call %"struct.Maxflow<long long>::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN7MaxflowIxE4edgeESt13move_iteratorIS3_EET0_T_(%"struct.Maxflow<long long>::edge"* %77)
  %79 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %73, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %78, %"struct.Maxflow<long long>::edge"** %79, align 8
  %80 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %70, align 8
  %81 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %71, align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %72, i32 0, i32 0
  %83 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %82, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %73, i32 0, i32 0
  %85 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %84, align 8
  %86 = call %"struct.Maxflow<long long>::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN7MaxflowIxE4edgeEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.Maxflow<long long>::edge"* %83, %"struct.Maxflow<long long>::edge"* %85, %"struct.Maxflow<long long>::edge"* %80, %"class.std::allocator.18"* dereferenceable(1) %81)
  store i32 1150659907, i32* %18
  br label %87

; <label>:87:                                     ; preds = %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.18"* dereferenceable(1), %"struct.Maxflow<long long>::edge"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.416
  %6 = load i32, i32* @y.417
  %7 = add i32 %5, -526339093
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -526339093
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1847609376, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1847609376, label %19
    i32 -313051153, label %39
    i32 -1528205160, label %71
    i32 -1013863682, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -313051153, i32 -1013863682
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.18"*, align 8
  %41 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %40, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %41, align 8
  %42 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %40, align 8
  %43 = bitcast %"class.std::allocator.18"* %42 to %"class.__gnu_cxx::new_allocator.19"*
  %44 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.19"* %43, %"struct.Maxflow<long long>::edge"* %44)
  %45 = load i32, i32* @x.416
  %46 = load i32, i32* @y.417
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1528205160, i32 -1013863682
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::allocator.18"*, align 8
  %74 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %73, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %74, align 8
  %75 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %73, align 8
  %76 = bitcast %"class.std::allocator.18"* %75 to %"class.__gnu_cxx::new_allocator.19"*
  %77 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %74, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.19"* %76, %"struct.Maxflow<long long>::edge"* %77)
  store i32 -313051153, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.11"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %4 = bitcast %"class.std::vector.11"* %3 to %"struct.std::_Vector_base.17"*
  %5 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNKSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE8max_sizeERKS3_(%"class.std::allocator.18"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE8max_sizeERKS3_(%"class.std::allocator.18"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.18"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %2, align 8
  %3 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %2, align 8
  %4 = bitcast %"class.std::allocator.18"* %3 to %"class.__gnu_cxx::new_allocator.19"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.19"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.18"* @_ZNKSt12_Vector_baseIN7MaxflowIxE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.17"*, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %2, align 8
  %3 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %4 to %"class.std::allocator.18"*
  ret %"class.std::allocator.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.19"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZNSt16allocator_traitsISaIN7MaxflowIxE4edgeEEE8allocateERS3_m(%"class.std::allocator.18"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.18"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %3, align 8
  %6 = bitcast %"class.std::allocator.18"* %5 to %"class.__gnu_cxx::new_allocator.19"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.Maxflow<long long>::edge"* @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.19"* %6, i64 %7, i8* null)
  ret %"struct.Maxflow<long long>::edge"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.19"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.428
  %9 = load i32, i32* @y.429
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1035337703, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %83
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1035337703, label %21
    i32 1407644592, label %29
    i32 1495152584, label %65
    i32 -1222957164, label %68
    i32 -1700423963, label %69
    i32 -1801647531, label %75
  ]

; <label>:20:                                     ; preds = %18
  br label %83

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1407644592, i32 -1801647531
  store i32 %28, i32* %17
  br label %83

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %31 = alloca i64, align 8
  store i64* %31, i64** %5
  %32 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %30, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  store i8* %2, i8** %32, align 8
  %34 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %30, align 8
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.19"* %34) #3
  %38 = icmp ugt i64 %36, %37
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.428
  %40 = load i32, i32* @y.429
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 1495152584, i32 -1801647531
  store i32 %64, i32* %17
  br label %83

; <label>:65:                                     ; preds = %18
  %66 = load volatile i1, i1* %4
  %67 = select i1 %66, i32 -1222957164, i32 -1700423963
  store i32 %67, i32* %17
  br label %83

; <label>:68:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:69:                                     ; preds = %18
  %70 = load volatile i64*, i64** %5
  %71 = load i64, i64* %70, align 8
  %72 = mul i64 %71, 24
  %73 = call i8* @_Znwm(i64 %72)
  %74 = bitcast i8* %73 to %"struct.Maxflow<long long>::edge"*
  ret %"struct.Maxflow<long long>::edge"* %74

; <label>:75:                                     ; preds = %18
  %76 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %76, align 8
  store i64 %1, i64* %77, align 8
  store i8* %2, i8** %78, align 8
  %79 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.19"* %79) #3
  %82 = icmp ugt i64 %80, %81
  store i32 1407644592, i32* %17
  br label %83

; <label>:83:                                     ; preds = %75, %65, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN7MaxflowIxE4edgeEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"class.std::allocator.18"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Maxflow<long long>::edge"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.430
  %9 = load i32, i32* @y.431
  %10 = add i32 %8, 668590395
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 668590395
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1860406043, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %85
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1860406043, label %22
    i32 -1517082007, label %30
    i32 1039364259, label %64
    i32 -818450370, label %66
  ]

; <label>:21:                                     ; preds = %19
  br label %85

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1517082007, i32 -818450370
  store i32 %29, i32* %18
  br label %85

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::move_iterator.22", align 8
  %32 = alloca %"class.std::move_iterator.22", align 8
  %33 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %34 = alloca %"class.std::allocator.18"*, align 8
  %35 = alloca %"class.std::move_iterator.22", align 8
  %36 = alloca %"class.std::move_iterator.22", align 8
  %37 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %31, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %32, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %38, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %33, align 8
  store %"class.std::allocator.18"* %3, %"class.std::allocator.18"** %34, align 8
  %39 = bitcast %"class.std::move_iterator.22"* %35 to i8*
  %40 = bitcast %"class.std::move_iterator.22"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.std::move_iterator.22"* %36 to i8*
  %42 = bitcast %"class.std::move_iterator.22"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %33, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %35, i32 0, i32 0
  %45 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %44, align 8
  %46 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %36, i32 0, i32 0
  %47 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %46, align 8
  %48 = call %"struct.Maxflow<long long>::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN7MaxflowIxE4edgeEES4_ET0_T_S7_S6_(%"struct.Maxflow<long long>::edge"* %45, %"struct.Maxflow<long long>::edge"* %47, %"struct.Maxflow<long long>::edge"* %43)
  store %"struct.Maxflow<long long>::edge"* %48, %"struct.Maxflow<long long>::edge"** %5
  %49 = load i32, i32* @x.430
  %50 = load i32, i32* @y.431
  %51 = sub i32 %49, 481447899
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 481447899
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1039364259, i32 -818450370
  store i32 %63, i32* %18
  br label %85

; <label>:64:                                     ; preds = %19
  %65 = load volatile %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %5
  ret %"struct.Maxflow<long long>::edge"* %65

; <label>:66:                                     ; preds = %19
  %67 = alloca %"class.std::move_iterator.22", align 8
  %68 = alloca %"class.std::move_iterator.22", align 8
  %69 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %70 = alloca %"class.std::allocator.18"*, align 8
  %71 = alloca %"class.std::move_iterator.22", align 8
  %72 = alloca %"class.std::move_iterator.22", align 8
  %73 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %67, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %73, align 8
  %74 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %68, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %74, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %69, align 8
  store %"class.std::allocator.18"* %3, %"class.std::allocator.18"** %70, align 8
  %75 = bitcast %"class.std::move_iterator.22"* %71 to i8*
  %76 = bitcast %"class.std::move_iterator.22"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 8, i1 false)
  %77 = bitcast %"class.std::move_iterator.22"* %72 to i8*
  %78 = bitcast %"class.std::move_iterator.22"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 8, i32 8, i1 false)
  %79 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %69, align 8
  %80 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %71, i32 0, i32 0
  %81 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %80, align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %72, i32 0, i32 0
  %83 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %82, align 8
  %84 = call %"struct.Maxflow<long long>::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN7MaxflowIxE4edgeEES4_ET0_T_S7_S6_(%"struct.Maxflow<long long>::edge"* %81, %"struct.Maxflow<long long>::edge"* %83, %"struct.Maxflow<long long>::edge"* %79)
  store i32 -1517082007, i32* %18
  br label %85

; <label>:85:                                     ; preds = %66, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN7MaxflowIxE4edgeESt13move_iteratorIS3_EET0_T_(%"struct.Maxflow<long long>::edge"*) #0 comdat {
  %2 = alloca %"struct.Maxflow<long long>::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.432
  %6 = load i32, i32* @y.433
  %7 = sub i32 %5, -1742602873
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1742602873
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 294140720, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 294140720, label %19
    i32 -1929941193, label %27
    i32 -1536160781, label %48
    i32 271146285, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1929941193, i32 271146285
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.22", align 8
  %29 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %29, align 8
  %30 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %29, align 8
  call void @_ZNSt13move_iteratorIPN7MaxflowIxE4edgeEEC2ES3_(%"class.std::move_iterator.22"* %28, %"struct.Maxflow<long long>::edge"* %30)
  %31 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %28, i32 0, i32 0
  %32 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %31, align 8
  store %"struct.Maxflow<long long>::edge"* %32, %"struct.Maxflow<long long>::edge"** %2
  %33 = load i32, i32* @x.432
  %34 = load i32, i32* @y.433
  %35 = add i32 %33, 737010883
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 737010883
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -1536160781, i32 271146285
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  %49 = load volatile %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %2
  ret %"struct.Maxflow<long long>::edge"* %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::move_iterator.22", align 8
  %52 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %52, align 8
  %53 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %52, align 8
  call void @_ZNSt13move_iteratorIPN7MaxflowIxE4edgeEEC2ES3_(%"class.std::move_iterator.22"* %51, %"struct.Maxflow<long long>::edge"* %53)
  %54 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %51, i32 0, i32 0
  %55 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %54, align 8
  store i32 -1929941193, i32* %15
  br label %56

; <label>:56:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN7MaxflowIxE4edgeEES4_ET0_T_S7_S6_(%"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.22", align 8
  %5 = alloca %"class.std::move_iterator.22", align 8
  %6 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.22", align 8
  %9 = alloca %"class.std::move_iterator.22", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %4, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %5, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %11, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.22"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.22"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.22"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.22"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %8, i32 0, i32 0
  %18 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %9, i32 0, i32 0
  %20 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %19, align 8
  %21 = call %"struct.Maxflow<long long>::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN7MaxflowIxE4edgeEES6_EET0_T_S9_S8_(%"struct.Maxflow<long long>::edge"* %18, %"struct.Maxflow<long long>::edge"* %20, %"struct.Maxflow<long long>::edge"* %16)
  ret %"struct.Maxflow<long long>::edge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN7MaxflowIxE4edgeEES6_EET0_T_S9_S8_(%"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*) #0 comdat align 2 {
  %4 = alloca %"struct.Maxflow<long long>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.436
  %8 = load i32, i32* @y.437
  %9 = sub i32 %7, 878905787
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 878905787
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -831882607, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %94
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -831882607, label %21
    i32 639830229, label %41
    i32 2075483815, label %74
    i32 -886963567, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %94

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 639830229, i32 -886963567
  store i32 %40, i32* %17
  br label %94

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.22", align 8
  %43 = alloca %"class.std::move_iterator.22", align 8
  %44 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %45 = alloca %"class.std::move_iterator.22", align 8
  %46 = alloca %"class.std::move_iterator.22", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %42, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %43, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %48, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %44, align 8
  %49 = bitcast %"class.std::move_iterator.22"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.22"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator.22"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator.22"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %44, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %45, i32 0, i32 0
  %55 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %46, i32 0, i32 0
  %57 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %56, align 8
  %58 = call %"struct.Maxflow<long long>::edge"* @_ZSt4copyISt13move_iteratorIPN7MaxflowIxE4edgeEES4_ET0_T_S7_S6_(%"struct.Maxflow<long long>::edge"* %55, %"struct.Maxflow<long long>::edge"* %57, %"struct.Maxflow<long long>::edge"* %53)
  store %"struct.Maxflow<long long>::edge"* %58, %"struct.Maxflow<long long>::edge"** %4
  %59 = load i32, i32* @x.436
  %60 = load i32, i32* @y.437
  %61 = add i32 %59, -551699857
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -551699857
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 2075483815, i32 -886963567
  store i32 %73, i32* %17
  br label %94

; <label>:74:                                     ; preds = %18
  %75 = load volatile %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4
  ret %"struct.Maxflow<long long>::edge"* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.std::move_iterator.22", align 8
  %78 = alloca %"class.std::move_iterator.22", align 8
  %79 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %80 = alloca %"class.std::move_iterator.22", align 8
  %81 = alloca %"class.std::move_iterator.22", align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %77, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %82, align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %78, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %83, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %79, align 8
  %84 = bitcast %"class.std::move_iterator.22"* %80 to i8*
  %85 = bitcast %"class.std::move_iterator.22"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 8, i1 false)
  %86 = bitcast %"class.std::move_iterator.22"* %81 to i8*
  %87 = bitcast %"class.std::move_iterator.22"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %79, align 8
  %89 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %80, i32 0, i32 0
  %90 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %89, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %81, i32 0, i32 0
  %92 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %91, align 8
  %93 = call %"struct.Maxflow<long long>::edge"* @_ZSt4copyISt13move_iteratorIPN7MaxflowIxE4edgeEES4_ET0_T_S7_S6_(%"struct.Maxflow<long long>::edge"* %90, %"struct.Maxflow<long long>::edge"* %92, %"struct.Maxflow<long long>::edge"* %88)
  store i32 639830229, i32* %17
  br label %94

; <label>:94:                                     ; preds = %76, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZSt4copyISt13move_iteratorIPN7MaxflowIxE4edgeEES4_ET0_T_S7_S6_(%"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*) #0 comdat {
  %4 = alloca %"struct.Maxflow<long long>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.438
  %8 = load i32, i32* @y.439
  %9 = add i32 %7, 51070821
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 51070821
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -649112054, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %98
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -649112054, label %21
    i32 -1200176032, label %29
    i32 -943463041, label %76
    i32 -765773578, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %98

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1200176032, i32 -765773578
  store i32 %28, i32* %17
  br label %98

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator.22", align 8
  %31 = alloca %"class.std::move_iterator.22", align 8
  %32 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %33 = alloca %"class.std::move_iterator.22", align 8
  %34 = alloca %"class.std::move_iterator.22", align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %30, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %35, align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %31, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %36, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %32, align 8
  %37 = bitcast %"class.std::move_iterator.22"* %33 to i8*
  %38 = bitcast %"class.std::move_iterator.22"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %33, i32 0, i32 0
  %40 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %39, align 8
  %41 = call %"struct.Maxflow<long long>::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN7MaxflowIxE4edgeEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"struct.Maxflow<long long>::edge"* %40)
  %42 = bitcast %"class.std::move_iterator.22"* %34 to i8*
  %43 = bitcast %"class.std::move_iterator.22"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %34, i32 0, i32 0
  %45 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %44, align 8
  %46 = call %"struct.Maxflow<long long>::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN7MaxflowIxE4edgeEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"struct.Maxflow<long long>::edge"* %45)
  %47 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %32, align 8
  %48 = call %"struct.Maxflow<long long>::edge"* @_ZSt14__copy_move_a2ILb1EPN7MaxflowIxE4edgeES3_ET1_T0_S5_S4_(%"struct.Maxflow<long long>::edge"* %41, %"struct.Maxflow<long long>::edge"* %46, %"struct.Maxflow<long long>::edge"* %47)
  store %"struct.Maxflow<long long>::edge"* %48, %"struct.Maxflow<long long>::edge"** %4
  %49 = load i32, i32* @x.438
  %50 = load i32, i32* @y.439
  %51 = sub i32 %49, -563776420
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -563776420
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -943463041, i32 -765773578
  store i32 %75, i32* %17
  br label %98

; <label>:76:                                     ; preds = %18
  %77 = load volatile %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4
  ret %"struct.Maxflow<long long>::edge"* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %"class.std::move_iterator.22", align 8
  %80 = alloca %"class.std::move_iterator.22", align 8
  %81 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %82 = alloca %"class.std::move_iterator.22", align 8
  %83 = alloca %"class.std::move_iterator.22", align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %79, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %84, align 8
  %85 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %80, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %85, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %81, align 8
  %86 = bitcast %"class.std::move_iterator.22"* %82 to i8*
  %87 = bitcast %"class.std::move_iterator.22"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %82, i32 0, i32 0
  %89 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %88, align 8
  %90 = call %"struct.Maxflow<long long>::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN7MaxflowIxE4edgeEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"struct.Maxflow<long long>::edge"* %89)
  %91 = bitcast %"class.std::move_iterator.22"* %83 to i8*
  %92 = bitcast %"class.std::move_iterator.22"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 8, i1 false)
  %93 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %83, i32 0, i32 0
  %94 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %93, align 8
  %95 = call %"struct.Maxflow<long long>::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN7MaxflowIxE4edgeEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"struct.Maxflow<long long>::edge"* %94)
  %96 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %81, align 8
  %97 = call %"struct.Maxflow<long long>::edge"* @_ZSt14__copy_move_a2ILb1EPN7MaxflowIxE4edgeES3_ET1_T0_S5_S4_(%"struct.Maxflow<long long>::edge"* %90, %"struct.Maxflow<long long>::edge"* %95, %"struct.Maxflow<long long>::edge"* %96)
  store i32 -1200176032, i32* %17
  br label %98

; <label>:98:                                     ; preds = %78, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZSt14__copy_move_a2ILb1EPN7MaxflowIxE4edgeES3_ET1_T0_S5_S4_(%"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*) #0 comdat {
  %4 = alloca %"struct.Maxflow<long long>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.440
  %8 = load i32, i32* @y.441
  %9 = sub i32 %7, -580655091
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -580655091
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -308718046, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %68
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -308718046, label %21
    i32 740861096, label %29
    i32 1371001137, label %55
    i32 1149585421, label %57
  ]

; <label>:20:                                     ; preds = %18
  br label %68

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 740861096, i32 1149585421
  store i32 %28, i32* %17
  br label %68

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %31 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %32 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %30, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %31, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %32, align 8
  %33 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %30, align 8
  %34 = call %"struct.Maxflow<long long>::edge"* @_ZSt12__niter_baseIPN7MaxflowIxE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Maxflow<long long>::edge"* %33)
  %35 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %31, align 8
  %36 = call %"struct.Maxflow<long long>::edge"* @_ZSt12__niter_baseIPN7MaxflowIxE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Maxflow<long long>::edge"* %35)
  %37 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %32, align 8
  %38 = call %"struct.Maxflow<long long>::edge"* @_ZSt12__niter_baseIPN7MaxflowIxE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Maxflow<long long>::edge"* %37)
  %39 = call %"struct.Maxflow<long long>::edge"* @_ZSt13__copy_move_aILb1EPN7MaxflowIxE4edgeES3_ET1_T0_S5_S4_(%"struct.Maxflow<long long>::edge"* %34, %"struct.Maxflow<long long>::edge"* %36, %"struct.Maxflow<long long>::edge"* %38)
  store %"struct.Maxflow<long long>::edge"* %39, %"struct.Maxflow<long long>::edge"** %4
  %40 = load i32, i32* @x.440
  %41 = load i32, i32* @y.441
  %42 = add i32 %40, -1763600985
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1763600985
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1371001137, i32 1149585421
  store i32 %54, i32* %17
  br label %68

; <label>:55:                                     ; preds = %18
  %56 = load volatile %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4
  ret %"struct.Maxflow<long long>::edge"* %56

; <label>:57:                                     ; preds = %18
  %58 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %59 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %60 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %58, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %59, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %60, align 8
  %61 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %58, align 8
  %62 = call %"struct.Maxflow<long long>::edge"* @_ZSt12__niter_baseIPN7MaxflowIxE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Maxflow<long long>::edge"* %61)
  %63 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %59, align 8
  %64 = call %"struct.Maxflow<long long>::edge"* @_ZSt12__niter_baseIPN7MaxflowIxE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Maxflow<long long>::edge"* %63)
  %65 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %60, align 8
  %66 = call %"struct.Maxflow<long long>::edge"* @_ZSt12__niter_baseIPN7MaxflowIxE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Maxflow<long long>::edge"* %65)
  %67 = call %"struct.Maxflow<long long>::edge"* @_ZSt13__copy_move_aILb1EPN7MaxflowIxE4edgeES3_ET1_T0_S5_S4_(%"struct.Maxflow<long long>::edge"* %62, %"struct.Maxflow<long long>::edge"* %64, %"struct.Maxflow<long long>::edge"* %66)
  store i32 740861096, i32* %17
  br label %68

; <label>:68:                                     ; preds = %57, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN7MaxflowIxE4edgeEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"struct.Maxflow<long long>::edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.22", align 8
  %3 = alloca %"class.std::move_iterator.22", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %2, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %4, align 8
  %5 = bitcast %"class.std::move_iterator.22"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.22"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %3, i32 0, i32 0
  %8 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %7, align 8
  %9 = call %"struct.Maxflow<long long>::edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN7MaxflowIxE4edgeEELb1EE7_S_baseES5_(%"struct.Maxflow<long long>::edge"* %8)
  ret %"struct.Maxflow<long long>::edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZSt13__copy_move_aILb1EPN7MaxflowIxE4edgeES3_ET1_T0_S5_S4_(%"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*) #0 comdat {
  %4 = alloca %"struct.Maxflow<long long>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.444
  %8 = load i32, i32* @y.445
  %9 = sub i32 %7, -1193357830
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1193357830
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 861206852, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 861206852, label %21
    i32 -1379033176, label %29
    i32 861473480, label %65
    i32 -2117154300, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1379033176, i32 -2117154300
  store i32 %28, i32* %17
  br label %76

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %31 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %32 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %33 = alloca i8, align 1
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %30, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %31, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %30, align 8
  %35 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %31, align 8
  %36 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %32, align 8
  %37 = call %"struct.Maxflow<long long>::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN7MaxflowIxE4edgeEEEPT_PKS6_S9_S7_(%"struct.Maxflow<long long>::edge"* %34, %"struct.Maxflow<long long>::edge"* %35, %"struct.Maxflow<long long>::edge"* %36)
  store %"struct.Maxflow<long long>::edge"* %37, %"struct.Maxflow<long long>::edge"** %4
  %38 = load i32, i32* @x.444
  %39 = load i32, i32* @y.445
  %40 = sub i32 %38, -1616090732
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1616090732
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 861473480, i32 -2117154300
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4
  ret %"struct.Maxflow<long long>::edge"* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %69 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %70 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %71 = alloca i8, align 1
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %68, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %69, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %68, align 8
  %73 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %69, align 8
  %74 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %70, align 8
  %75 = call %"struct.Maxflow<long long>::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN7MaxflowIxE4edgeEEEPT_PKS6_S9_S7_(%"struct.Maxflow<long long>::edge"* %72, %"struct.Maxflow<long long>::edge"* %73, %"struct.Maxflow<long long>::edge"* %74)
  store i32 -1379033176, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZSt12__niter_baseIPN7MaxflowIxE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Maxflow<long long>::edge"*) #0 comdat {
  %2 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %2, align 8
  %3 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %2, align 8
  %4 = call %"struct.Maxflow<long long>::edge"* @_ZNSt10_Iter_baseIPN7MaxflowIxE4edgeELb0EE7_S_baseES3_(%"struct.Maxflow<long long>::edge"* %3)
  ret %"struct.Maxflow<long long>::edge"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN7MaxflowIxE4edgeEEEPT_PKS6_S9_S7_(%"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"*) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca %"struct.Maxflow<long long>::edge"**
  %7 = alloca %"struct.Maxflow<long long>::edge"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.448
  %11 = load i32, i32* @y.449
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -983309472, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %263
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -983309472, label %23
    i32 2052465683, label %31
    i32 -717203377, label %78
    i32 1375256301, label %81
    i32 -1709854798, label %109
    i32 -1639628385, label %145
    i32 -1890019547, label %146
    i32 1690015444, label %152
    i32 -1013009356, label %234
  ]

; <label>:22:                                     ; preds = %20
  br label %263

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 2052465683, i32 1690015444
  store i32 %30, i32* %19
  br label %263

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"** %32, %"struct.Maxflow<long long>::edge"*** %7
  %33 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %34 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"** %34, %"struct.Maxflow<long long>::edge"*** %6
  %35 = alloca i64, align 8
  store i64* %35, i64** %5
  %36 = load volatile %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %7
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %36, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %33, align 8
  %37 = load volatile %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %6
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %37, align 8
  %38 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %33, align 8
  %39 = load volatile %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %7
  %40 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %39, align 8
  %41 = ptrtoint %"struct.Maxflow<long long>::edge"* %38 to i64
  %42 = ptrtoint %"struct.Maxflow<long long>::edge"* %40 to i64
  %43 = sub i64 %41, 7751927641924763368
  %44 = sub i64 %43, %42
  %45 = add i64 %44, 7751927641924763368
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 24
  %48 = load volatile i64*, i64** %5
  store i64 %47, i64* %48, align 8
  %49 = load volatile i64*, i64** %5
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.448
  %53 = load i32, i32* @y.449
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -717203377, i32 1690015444
  store i32 %77, i32* %19
  br label %263

; <label>:78:                                     ; preds = %20
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 1375256301, i32 -1890019547
  store i32 %80, i32* %19
  br label %263

; <label>:81:                                     ; preds = %20
  %82 = load i32, i32* @x.448
  %83 = load i32, i32* @y.449
  %84 = sub i32 %82, -1695460934
  %85 = sub i32 %84, 1
  %86 = add i32 %85, -1695460934
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 -1709854798, i32 -1013009356
  store i32 %108, i32* %19
  br label %263

; <label>:109:                                    ; preds = %20
  %110 = load volatile %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %6
  %111 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %110, align 8
  %112 = bitcast %"struct.Maxflow<long long>::edge"* %111 to i8*
  %113 = load volatile %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %7
  %114 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %113, align 8
  %115 = bitcast %"struct.Maxflow<long long>::edge"* %114 to i8*
  %116 = load volatile i64*, i64** %5
  %117 = load i64, i64* %116, align 8
  %118 = mul i64 24, %117
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %112, i8* %115, i64 %118, i32 8, i1 false)
  %119 = load i32, i32* @x.448
  %120 = load i32, i32* @y.449
  %121 = sub i32 0, 1
  %122 = add i32 %119, %121
  %123 = sub i32 %119, 1
  %124 = mul i32 %119, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %120, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 -1639628385, i32 -1013009356
  store i32 %144, i32* %19
  br label %263

; <label>:145:                                    ; preds = %20
  store i32 -1890019547, i32* %19
  br label %263

; <label>:146:                                    ; preds = %20
  %147 = load volatile %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %6
  %148 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %147, align 8
  %149 = load volatile i64*, i64** %5
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %148, i64 %150
  ret %"struct.Maxflow<long long>::edge"* %151

; <label>:152:                                    ; preds = %20
  %153 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %154 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %155 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %156 = alloca i64, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %153, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %154, align 8
  store %"struct.Maxflow<long long>::edge"* %2, %"struct.Maxflow<long long>::edge"** %155, align 8
  %157 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %154, align 8
  %158 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %153, align 8
  %159 = ptrtoint %"struct.Maxflow<long long>::edge"* %157 to i64
  %160 = ptrtoint %"struct.Maxflow<long long>::edge"* %158 to i64
  %161 = sub i64 0, %160
  %162 = add i64 %159, %161
  %163 = sub i64 %159, %160
  %164 = mul i64 %162, %160
  %165 = sub i64 0, %159
  %166 = add i64 0, %165
  %167 = sub i64 0, %159
  %168 = sub i64 0, %166
  %169 = sub i64 0, %160
  %170 = add i64 %168, %169
  %171 = sub i64 0, %170
  %172 = add i64 %166, %160
  %173 = shl i64 %159, %160
  %174 = add i64 0, 5078353736760033686
  %175 = sub i64 %174, %159
  %176 = sub i64 %175, 5078353736760033686
  %177 = sub i64 0, %159
  %178 = sub i64 %176, -4265768705668006696
  %179 = add i64 %178, %160
  %180 = add i64 %179, -4265768705668006696
  %181 = add i64 %176, %160
  %182 = add i64 0, 3899535030344643627
  %183 = sub i64 %182, %159
  %184 = sub i64 %183, 3899535030344643627
  %185 = sub i64 0, %159
  %186 = sub i64 0, %160
  %187 = sub i64 %184, %186
  %188 = add i64 %184, %160
  %189 = add i64 0, -3082552709886374733
  %190 = sub i64 %189, %159
  %191 = sub i64 %190, -3082552709886374733
  %192 = sub i64 0, %159
  %193 = sub i64 0, %160
  %194 = sub i64 %191, %193
  %195 = add i64 %191, %160
  %196 = sub i64 0, %160
  %197 = add i64 %159, %196
  %198 = sub i64 %159, %160
  %199 = shl i64 %197, 24
  %200 = sub i64 0, %197
  %201 = add i64 0, %200
  %202 = sub i64 0, %197
  %203 = sub i64 0, %201
  %204 = sub i64 0, 24
  %205 = add i64 %203, %204
  %206 = sub i64 0, %205
  %207 = add i64 %201, 24
  %208 = shl i64 %197, 24
  %209 = shl i64 %197, 24
  %210 = sub i64 0, %197
  %211 = add i64 0, %210
  %212 = sub i64 0, %197
  %213 = sub i64 0, %211
  %214 = sub i64 0, 24
  %215 = add i64 %213, %214
  %216 = sub i64 0, %215
  %217 = add i64 %211, 24
  %218 = add i64 %197, -4511244747004172160
  %219 = sub i64 %218, 24
  %220 = sub i64 %219, -4511244747004172160
  %221 = sub i64 %197, 24
  %222 = mul i64 %220, 24
  %223 = sub i64 0, -8122087810924139050
  %224 = sub i64 %223, %197
  %225 = add i64 %224, -8122087810924139050
  %226 = sub i64 0, %197
  %227 = add i64 %225, 315357113684715017
  %228 = add i64 %227, 24
  %229 = sub i64 %228, 315357113684715017
  %230 = add i64 %225, 24
  %231 = sdiv exact i64 %197, 24
  store i64 %231, i64* %156, align 8
  %232 = load i64, i64* %156, align 8
  %233 = icmp ne i64 %232, 0
  store i32 2052465683, i32* %19
  br label %263

; <label>:234:                                    ; preds = %20
  %235 = load volatile %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %6
  %236 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %235, align 8
  %237 = bitcast %"struct.Maxflow<long long>::edge"* %236 to i8*
  %238 = load volatile %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %7
  %239 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %238, align 8
  %240 = bitcast %"struct.Maxflow<long long>::edge"* %239 to i8*
  %241 = load volatile i64*, i64** %5
  %242 = load i64, i64* %241, align 8
  %243 = sub i64 24, -1438444821367803174
  %244 = sub i64 %243, %242
  %245 = add i64 %244, -1438444821367803174
  %246 = sub i64 24, %242
  %247 = mul i64 %245, %242
  %248 = sub i64 0, 24
  %249 = add i64 0, %248
  %250 = sub i64 0, 24
  %251 = sub i64 0, %249
  %252 = sub i64 0, %242
  %253 = add i64 %251, %252
  %254 = sub i64 0, %253
  %255 = add i64 %249, %242
  %256 = shl i64 24, %242
  %257 = sub i64 24, 8340066807286192778
  %258 = sub i64 %257, %242
  %259 = add i64 %258, 8340066807286192778
  %260 = sub i64 24, %242
  %261 = mul i64 %259, %242
  %262 = mul i64 24, %242
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %237, i8* %240, i64 %262, i32 8, i1 false)
  store i32 -1709854798, i32* %19
  br label %263

; <label>:263:                                    ; preds = %234, %152, %145, %109, %81, %78, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZNSt10_Iter_baseIPN7MaxflowIxE4edgeELb0EE7_S_baseES3_(%"struct.Maxflow<long long>::edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %2, align 8
  %3 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %2, align 8
  ret %"struct.Maxflow<long long>::edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN7MaxflowIxE4edgeEELb1EE7_S_baseES5_(%"struct.Maxflow<long long>::edge"*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.22", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %2, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %0, %"struct.Maxflow<long long>::edge"** %3, align 8
  %4 = call %"struct.Maxflow<long long>::edge"* @_ZNKSt13move_iteratorIPN7MaxflowIxE4edgeEE4baseEv(%"class.std::move_iterator.22"* %2)
  ret %"struct.Maxflow<long long>::edge"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZNKSt13move_iteratorIPN7MaxflowIxE4edgeEE4baseEv(%"class.std::move_iterator.22"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.22"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %2, align 8
  %3 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %3, i32 0, i32 0
  %5 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4, align 8
  ret %"struct.Maxflow<long long>::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN7MaxflowIxE4edgeEEC2ES3_(%"class.std::move_iterator.22"*, %"struct.Maxflow<long long>::edge"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.456
  %6 = load i32, i32* @y.457
  %7 = sub i32 %5, 1238357110
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1238357110
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -870942471, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -870942471, label %19
    i32 1445153683, label %27
    i32 752365540, label %60
    i32 -2068317930, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1445153683, i32 -2068317930
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.22"*, align 8
  %29 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %28, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %29, align 8
  %30 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %30, i32 0, i32 0
  %32 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %29, align 8
  store %"struct.Maxflow<long long>::edge"* %32, %"struct.Maxflow<long long>::edge"** %31, align 8
  %33 = load i32, i32* @x.456
  %34 = load i32, i32* @y.457
  %35 = sub i32 %33, -1503515704
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1503515704
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 752365540, i32 -2068317930
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.22"*, align 8
  %63 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"class.std::move_iterator.22"* %0, %"class.std::move_iterator.22"** %62, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %63, align 8
  %64 = load %"class.std::move_iterator.22"*, %"class.std::move_iterator.22"** %62, align 8
  %65 = getelementptr inbounds %"class.std::move_iterator.22", %"class.std::move_iterator.22"* %64, i32 0, i32 0
  %66 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %63, align 8
  store %"struct.Maxflow<long long>::edge"* %66, %"struct.Maxflow<long long>::edge"** %65, align 8
  store i32 1445153683, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7MaxflowIxE4edgeEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.19"*, %"struct.Maxflow<long long>::edge"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.458
  %6 = load i32, i32* @y.459
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1622194824, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1622194824, label %18
    i32 737462915, label %38
    i32 -1449365567, label %57
    i32 -541337888, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 737462915, i32 -541337888
  store i32 %37, i32* %14
  br label %63

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %40 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %39, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %39, align 8
  %42 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %40, align 8
  %43 = load i32, i32* @x.458
  %44 = load i32, i32* @y.459
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1449365567, i32 -541337888
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %60 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %59, align 8
  store %"struct.Maxflow<long long>::edge"* %1, %"struct.Maxflow<long long>::edge"** %60, align 8
  %61 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %59, align 8
  %62 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %60, align 8
  store i32 737462915, i32* %14
  br label %63

; <label>:63:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.14"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.460
  %7 = load i32, i32* @y.461
  %8 = sub i32 %6, 1235129984
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1235129984
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 375222512, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 375222512, label %20
    i32 546945589, label %40
    i32 -1196112090, label %64
    i32 -1093857347, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 546945589, i32 -1093857347
  store i32 %39, i32* %16
  br label %74

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.14"*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %41, align 8
  store i32* %1, i32** %42, align 8
  store i32* %2, i32** %43, align 8
  %44 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %41, align 8
  %45 = bitcast %"class.std::allocator.14"* %44 to %"class.__gnu_cxx::new_allocator.15"*
  %46 = load i32*, i32** %42, align 8
  %47 = load i32*, i32** %43, align 8
  %48 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %47) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.15"* %45, i32* %46, i32* dereferenceable(4) %48)
  %49 = load i32, i32* @x.460
  %50 = load i32, i32* @y.461
  %51 = add i32 %49, 1376742573
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1376742573
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1196112090, i32 -1093857347
  store i32 %63, i32* %16
  br label %74

; <label>:64:                                     ; preds = %17
  ret void

; <label>:65:                                     ; preds = %17
  %66 = alloca %"class.std::allocator.14"*, align 8
  %67 = alloca i32*, align 8
  %68 = alloca i32*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %66, align 8
  store i32* %1, i32** %67, align 8
  store i32* %2, i32** %68, align 8
  %69 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %66, align 8
  %70 = bitcast %"class.std::allocator.14"* %69 to %"class.__gnu_cxx::new_allocator.15"*
  %71 = load i32*, i32** %67, align 8
  %72 = load i32*, i32** %68, align 8
  %73 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %72) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.15"* %70, i32* %71, i32* dereferenceable(4) %73)
  store i32 546945589, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.12"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.12"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load %"class.std::vector.12"*, %"class.std::vector.12"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.12"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %13 = load i64, i64* %5, align 8
  %14 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.13"* %12, i64 %13)
  store i32* %14, i32** %6, align 8
  %15 = load i32*, i32** %6, align 8
  store i32* %15, i32** %7, align 8
  %16 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %17 to %"class.std::allocator.14"*
  %19 = load i32*, i32** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.12"* %10) #3
  %21 = getelementptr inbounds i32, i32* %19, i64 %20
  %22 = load i32*, i32** %4, align 8
  %23 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.14"* dereferenceable(1) %18, i32* %21, i32* dereferenceable(4) %23)
          to label %24 unwind label %69

; <label>:24:                                     ; preds = %2
  store i32* null, i32** %7, align 8
  %25 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i32*, i32** %31, align 8
  %33 = load i32*, i32** %6, align 8
  %34 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %35 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %34) #3
  %36 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %28, i32* %32, i32* %33, %"class.std::allocator.14"* dereferenceable(1) %35)
          to label %37 unwind label %69

; <label>:37:                                     ; preds = %24
  %38 = load i32, i32* @x.462
  %39 = load i32, i32* @y.463
  %40 = add i32 %38, 1808276986
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1808276986
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %311

; <label>:52:                                     ; preds = %37, %311
  store i32* %36, i32** %7, align 8
  %53 = load i32*, i32** %7, align 8
  %54 = getelementptr inbounds i32, i32* %53, i32 1
  store i32* %54, i32** %7, align 8
  %55 = load i32, i32* @x.462
  %56 = load i32, i32* @y.463
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %311

; <label>:68:                                     ; preds = %52
  br label %215

; <label>:69:                                     ; preds = %24, %2
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %8, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %9, align 4
  br label %73

; <label>:73:                                     ; preds = %69
  %74 = load i8*, i8** %8, align 8
  %75 = call i8* @__cxa_begin_catch(i8* %74) #3
  %76 = load i32*, i32** %7, align 8
  %77 = icmp ne i32* %76, null
  br i1 %77, label %132, label %78

; <label>:78:                                     ; preds = %73
  %79 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %79, i32 0, i32 0
  %81 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %80 to %"class.std::allocator.14"*
  %82 = load i32*, i32** %6, align 8
  %83 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.12"* %10) #3
  %84 = getelementptr inbounds i32, i32* %82, i64 %83
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.14"* dereferenceable(1) %81, i32* %84)
          to label %85 unwind label %128

; <label>:85:                                     ; preds = %78
  %86 = load i32, i32* @x.462
  %87 = load i32, i32* @y.463
  %88 = sub i32 %86, 262719055
  %89 = sub i32 %88, 1
  %90 = add i32 %89, 262719055
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 false, true
  %99 = and i1 %96, false
  %100 = and i1 %94, %98
  %101 = and i1 %97, false
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 false, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %314

; <label>:112:                                    ; preds = %85, %314
  %113 = load i32, i32* @x.462
  %114 = load i32, i32* @y.463
  %115 = add i32 %113, 368952420
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 368952420
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %314

; <label>:127:                                    ; preds = %112
  br label %167

; <label>:128:                                    ; preds = %213, %167, %132, %78
  %129 = landingpad { i8*, i32 }
          cleanup
  %130 = extractvalue { i8*, i32 } %129, 0
  store i8* %130, i8** %8, align 8
  %131 = extractvalue { i8*, i32 } %129, 1
  store i32 %131, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %214 unwind label %265

; <label>:132:                                    ; preds = %73
  %133 = load i32*, i32** %6, align 8
  %134 = load i32*, i32** %7, align 8
  %135 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %136 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %135) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %133, i32* %134, %"class.std::allocator.14"* dereferenceable(1) %136)
          to label %137 unwind label %128

; <label>:137:                                    ; preds = %132
  %138 = load i32, i32* @x.462
  %139 = load i32, i32* @y.463
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  br i1 %149, label %151, label %315

; <label>:151:                                    ; preds = %137, %315
  %152 = load i32, i32* @x.462
  %153 = load i32, i32* @y.463
  %154 = add i32 %152, 1026052066
  %155 = sub i32 %154, 1
  %156 = sub i32 %155, 1026052066
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  br i1 %164, label %166, label %315

; <label>:166:                                    ; preds = %151
  br label %167

; <label>:167:                                    ; preds = %166, %127
  %168 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %169 = load i32*, i32** %6, align 8
  %170 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.13"* %168, i32* %169, i64 %170)
          to label %171 unwind label %128

; <label>:171:                                    ; preds = %167
  %172 = load i32, i32* @x.462
  %173 = load i32, i32* @y.463
  %174 = sub i32 %172, -91966889
  %175 = sub i32 %174, 1
  %176 = add i32 %175, -91966889
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 true, true
  %185 = and i1 %182, true
  %186 = and i1 %180, %184
  %187 = and i1 %183, true
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 true, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  br i1 %196, label %198, label %316

; <label>:198:                                    ; preds = %171, %316
  %199 = load i32, i32* @x.462
  %200 = load i32, i32* @y.463
  %201 = add i32 %199, -1782235523
  %202 = sub i32 %201, 1
  %203 = sub i32 %202, -1782235523
  %204 = sub i32 %199, 1
  %205 = mul i32 %199, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %200, 10
  %209 = and i1 %207, %208
  %210 = xor i1 %207, %208
  %211 = or i1 %209, %210
  %212 = or i1 %207, %208
  br i1 %211, label %213, label %316

; <label>:213:                                    ; preds = %198
  invoke void @__cxa_rethrow() #12
          to label %268 unwind label %128

; <label>:214:                                    ; preds = %128
  br label %260

; <label>:215:                                    ; preds = %68
  %216 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %217 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %216, i32 0, i32 0
  %218 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %217, i32 0, i32 0
  %219 = load i32*, i32** %218, align 8
  %220 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %221 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %220, i32 0, i32 0
  %222 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %221, i32 0, i32 1
  %223 = load i32*, i32** %222, align 8
  %224 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %225 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %224) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %219, i32* %223, %"class.std::allocator.14"* dereferenceable(1) %225)
  %226 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %227 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %228 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %227, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %228, i32 0, i32 0
  %230 = load i32*, i32** %229, align 8
  %231 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %232 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %231, i32 0, i32 0
  %233 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %232, i32 0, i32 2
  %234 = load i32*, i32** %233, align 8
  %235 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %236 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %235, i32 0, i32 0
  %237 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %236, i32 0, i32 0
  %238 = load i32*, i32** %237, align 8
  %239 = ptrtoint i32* %234 to i64
  %240 = ptrtoint i32* %238 to i64
  %241 = add i64 %239, 8971718150082045391
  %242 = sub i64 %241, %240
  %243 = sub i64 %242, 8971718150082045391
  %244 = sub i64 %239, %240
  %245 = sdiv exact i64 %243, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.13"* %226, i32* %230, i64 %245)
  %246 = load i32*, i32** %6, align 8
  %247 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %248 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %247, i32 0, i32 0
  %249 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %248, i32 0, i32 0
  store i32* %246, i32** %249, align 8
  %250 = load i32*, i32** %7, align 8
  %251 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %252 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %251, i32 0, i32 0
  %253 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %252, i32 0, i32 1
  store i32* %250, i32** %253, align 8
  %254 = load i32*, i32** %6, align 8
  %255 = load i64, i64* %5, align 8
  %256 = getelementptr inbounds i32, i32* %254, i64 %255
  %257 = bitcast %"class.std::vector.12"* %10 to %"struct.std::_Vector_base.13"*
  %258 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %257, i32 0, i32 0
  %259 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %258, i32 0, i32 2
  store i32* %256, i32** %259, align 8
  ret void

; <label>:260:                                    ; preds = %214
  %261 = load i8*, i8** %8, align 8
  %262 = load i32, i32* %9, align 4
  %263 = insertvalue { i8*, i32 } undef, i8* %261, 0
  %264 = insertvalue { i8*, i32 } %263, i32 %262, 1
  resume { i8*, i32 } %264

; <label>:265:                                    ; preds = %128
  %266 = landingpad { i8*, i32 }
          catch i8* null
  %267 = extractvalue { i8*, i32 } %266, 0
  call void @__clang_call_terminate(i8* %267) #11
  unreachable

; <label>:268:                                    ; preds = %213
  %269 = load i32, i32* @x.462
  %270 = load i32, i32* @y.463
  %271 = add i32 %269, -795652213
  %272 = sub i32 %271, 1
  %273 = sub i32 %272, -795652213
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = xor i1 %277, true
  %280 = xor i1 %278, true
  %281 = xor i1 false, true
  %282 = and i1 %279, false
  %283 = and i1 %277, %281
  %284 = and i1 %280, false
  %285 = and i1 %278, %281
  %286 = or i1 %282, %283
  %287 = or i1 %284, %285
  %288 = xor i1 %286, %287
  %289 = or i1 %279, %280
  %290 = xor i1 %289, true
  %291 = or i1 false, %281
  %292 = and i1 %290, %291
  %293 = or i1 %288, %292
  %294 = or i1 %277, %278
  br i1 %293, label %295, label %317

; <label>:295:                                    ; preds = %268, %317
  %296 = load i32, i32* @x.462
  %297 = load i32, i32* @y.463
  %298 = add i32 %296, -1624061452
  %299 = sub i32 %298, 1
  %300 = sub i32 %299, -1624061452
  %301 = sub i32 %296, 1
  %302 = mul i32 %296, %300
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %297, 10
  %306 = and i1 %304, %305
  %307 = xor i1 %304, %305
  %308 = or i1 %306, %307
  %309 = or i1 %304, %305
  br i1 %308, label %310, label %317

; <label>:310:                                    ; preds = %295
  unreachable

; <label>:311:                                    ; preds = %52, %37
  store i32* %36, i32** %7, align 8
  %312 = load i32*, i32** %7, align 8
  %313 = getelementptr inbounds i32, i32* %312, i32 1
  store i32* %313, i32** %7, align 8
  br label %52

; <label>:314:                                    ; preds = %112, %85
  br label %112

; <label>:315:                                    ; preds = %151, %137
  br label %151

; <label>:316:                                    ; preds = %198, %171
  br label %198

; <label>:317:                                    ; preds = %295, %268
  br label %295
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.15"*, i32*, i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.464
  %7 = load i32, i32* @y.465
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 533597935, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 533597935, label %19
    i32 -1389181301, label %39
    i32 237787312, label %65
    i32 1735670909, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1389181301, i32 1735670909
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %41 = alloca i32*, align 8
  %42 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %40, align 8
  store i32* %1, i32** %41, align 8
  store i32* %2, i32** %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %40, align 8
  %44 = load i32*, i32** %41, align 8
  %45 = bitcast i32* %44 to i8*
  %46 = bitcast i8* %45 to i32*
  %47 = load i32*, i32** %42, align 8
  %48 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %47) #3
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %46, align 4
  %50 = load i32, i32* @x.464
  %51 = load i32, i32* @y.465
  %52 = add i32 %50, 233197513
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 233197513
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 237787312, i32 1735670909
  store i32 %64, i32* %15
  br label %77

; <label>:65:                                     ; preds = %16
  ret void

; <label>:66:                                     ; preds = %16
  %67 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %68 = alloca i32*, align 8
  %69 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %67, align 8
  store i32* %1, i32** %68, align 8
  store i32* %2, i32** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %67, align 8
  %71 = load i32*, i32** %68, align 8
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i8* %72 to i32*
  %74 = load i32*, i32** %69, align 8
  %75 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %74) #3
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %73, align 4
  store i32 -1389181301, i32* %15
  br label %77

; <label>:77:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.12"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.12"*
  %9 = alloca %"class.std::vector.12"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.12"*, %"class.std::vector.12"** %9, align 8
  store %"class.std::vector.12"* %14, %"class.std::vector.12"** %8
  %15 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %8
  %16 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.12"* %15) #3
  %17 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %8
  %18 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.12"* %17) #3
  %19 = add i64 %16, -7906121144740087193
  %20 = sub i64 %19, %18
  %21 = sub i64 %20, -7906121144740087193
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 353753136, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %208
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 353753136, label %29
    i32 -864870544, label %34
    i32 -305988341, label %62
    i32 1609311838, label %91
    i32 -1116904884, label %92
    i32 -1778425050, label %108
    i32 1710231489, label %124
    i32 -1827123295, label %144
    i32 1533437741, label %147
    i32 340353093, label %150
    i32 -1389062239, label %178
    i32 -154388125, label %195
    i32 2007890945, label %197
    i32 354911954, label %199
    i32 -2128105166, label %201
    i32 468199865, label %206
  ]

; <label>:28:                                     ; preds = %26
  br label %208

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -864870544, i32 -1116904884
  store i32 %33, i32* %24
  br label %208

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.468
  %36 = load i32, i32* @y.469
  %37 = sub i32 %35, 726146135
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 726146135
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -305988341, i32 354911954
  store i32 %61, i32* %24
  br label %208

; <label>:62:                                     ; preds = %26
  %63 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %63) #12
  %64 = load i32, i32* @x.468
  %65 = load i32, i32* @y.469
  %66 = sub i32 %64, 1492999443
  %67 = sub i32 %66, 1
  %68 = add i32 %67, 1492999443
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 1609311838, i32 354911954
  store i32 %90, i32* %24
  br label %208

; <label>:91:                                     ; preds = %26
  unreachable

; <label>:92:                                     ; preds = %26
  %93 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %8
  %94 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.12"* %93) #3
  %95 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %8
  %96 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.12"* %95) #3
  store i64 %96, i64* %13, align 8
  %97 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %94, -9044183507537940148
  %100 = add i64 %99, %98
  %101 = add i64 %100, -9044183507537940148
  %102 = add i64 %94, %98
  store i64 %101, i64* %12, align 8
  %103 = load i64, i64* %12, align 8
  %104 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %8
  %105 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.12"* %104) #3
  %106 = icmp ult i64 %103, %105
  %107 = select i1 %106, i32 1533437741, i32 -1778425050
  store i32 %107, i32* %24
  br label %208

; <label>:108:                                    ; preds = %26
  %109 = load i32, i32* @x.468
  %110 = load i32, i32* @y.469
  %111 = sub i32 %109, -27059724
  %112 = sub i32 %111, 1
  %113 = add i32 %112, -27059724
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 1710231489, i32 -2128105166
  store i32 %123, i32* %24
  br label %208

; <label>:124:                                    ; preds = %26
  %125 = load i64, i64* %12, align 8
  %126 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %8
  %127 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.12"* %126) #3
  %128 = icmp ugt i64 %125, %127
  store i1 %128, i1* %5
  %129 = load i32, i32* @x.468
  %130 = load i32, i32* @y.469
  %131 = add i32 %129, 1414516195
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, 1414516195
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  %143 = select i1 %141, i32 -1827123295, i32 -2128105166
  store i32 %143, i32* %24
  br label %208

; <label>:144:                                    ; preds = %26
  %145 = load volatile i1, i1* %5
  %146 = select i1 %145, i32 1533437741, i32 340353093
  store i32 %146, i32* %24
  br label %208

; <label>:147:                                    ; preds = %26
  %148 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %8
  %149 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.12"* %148) #3
  store i32 2007890945, i32* %24
  store i64 %149, i64* %25
  br label %208

; <label>:150:                                    ; preds = %26
  %151 = load i32, i32* @x.468
  %152 = load i32, i32* @y.469
  %153 = add i32 %151, -1257090585
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, -1257090585
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 true, true
  %164 = and i1 %161, true
  %165 = and i1 %159, %163
  %166 = and i1 %162, true
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 true, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  %177 = select i1 %175, i32 -1389062239, i32 468199865
  store i32 %177, i32* %24
  br label %208

; <label>:178:                                    ; preds = %26
  %179 = load i64, i64* %12, align 8
  store i64 %179, i64* %4
  %180 = load i32, i32* @x.468
  %181 = load i32, i32* @y.469
  %182 = sub i32 %180, 1713983686
  %183 = sub i32 %182, 1
  %184 = add i32 %183, 1713983686
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = and i1 %188, %189
  %191 = xor i1 %188, %189
  %192 = or i1 %190, %191
  %193 = or i1 %188, %189
  %194 = select i1 %192, i32 -154388125, i32 468199865
  store i32 %194, i32* %24
  br label %208

; <label>:195:                                    ; preds = %26
  store i32 2007890945, i32* %24
  %196 = load volatile i64, i64* %4
  store i64 %196, i64* %25
  br label %208

; <label>:197:                                    ; preds = %26
  %198 = load i64, i64* %25
  ret i64 %198

; <label>:199:                                    ; preds = %26
  %200 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %200) #12
  store i32 -305988341, i32* %24
  br label %208

; <label>:201:                                    ; preds = %26
  %202 = load i64, i64* %12, align 8
  %203 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %8
  %204 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.12"* %203) #3
  %205 = icmp ugt i64 %202, %204
  store i32 1710231489, i32* %24
  br label %208

; <label>:206:                                    ; preds = %26
  %207 = load i64, i64* %12, align 8
  store i32 -1389062239, i32* %24
  br label %208

; <label>:208:                                    ; preds = %206, %201, %199, %195, %178, %150, %147, %144, %124, %108, %92, %62, %34, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.13"*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.13"*
  %6 = alloca %"struct.std::_Vector_base.13"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %6, align 8
  store %"struct.std::_Vector_base.13"* %8, %"struct.std::_Vector_base.13"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1376324210, i32* %10
  %11 = alloca i32*
  br label %12

; <label>:12:                                     ; preds = %2, %85
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1376324210, label %15
    i32 -633503362, label %19
    i32 -818877538, label %25
    i32 797069097, label %26
    i32 -1365515951, label %54
    i32 -1628057910, label %82
    i32 -1289008336, label %84
  ]

; <label>:14:                                     ; preds = %12
  br label %85

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -633503362, i32 -818877538
  store i32 %18, i32* %10
  br label %85

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.14"*
  %23 = load i64, i64* %7, align 8
  %24 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.14"* dereferenceable(1) %22, i64 %23)
  store i32 797069097, i32* %10
  store i32* %24, i32** %11
  br label %85

; <label>:25:                                     ; preds = %12
  store i32 797069097, i32* %10
  store i32* null, i32** %11
  br label %85

; <label>:26:                                     ; preds = %12
  %27 = load i32*, i32** %11
  store i32* %27, i32** %3
  %28 = load i32, i32* @x.470
  %29 = load i32, i32* @y.471
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1365515951, i32 -1289008336
  store i32 %53, i32* %10
  br label %85

; <label>:54:                                     ; preds = %12
  %55 = load i32, i32* @x.470
  %56 = load i32, i32* @y.471
  %57 = add i32 %55, -146138885
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -146138885
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -1628057910, i32 -1289008336
  store i32 %81, i32* %10
  br label %85

; <label>:82:                                     ; preds = %12
  %83 = load volatile i32*, i32** %3
  ret i32* %83

; <label>:84:                                     ; preds = %12
  store i32 -1365515951, i32* %10
  br label %85

; <label>:85:                                     ; preds = %84, %54, %26, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.14"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.14"*, align 8
  %9 = alloca %"class.std::move_iterator.23", align 8
  %10 = alloca %"class.std::move_iterator.23", align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %8, align 8
  %11 = load i32*, i32** %5, align 8
  %12 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  store i32* %12, i32** %13, align 8
  %14 = load i32*, i32** %6, align 8
  %15 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  store i32* %15, i32** %16, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %20, i32* %22, i32* %17, %"class.std::allocator.14"* dereferenceable(1) %18)
  ret i32* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.14"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.14"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %3, align 8
  %6 = bitcast %"class.std::allocator.14"* %5 to %"class.__gnu_cxx::new_allocator.15"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.15"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.12"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.476
  %6 = load i32, i32* @y.477
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 273731670, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 273731670, label %18
    i32 639419803, label %38
    i32 148381841, label %71
    i32 1158105461, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 639419803, i32 1158105461
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %39, align 8
  %40 = load %"class.std::vector.12"*, %"class.std::vector.12"** %39, align 8
  %41 = bitcast %"class.std::vector.12"* %40 to %"struct.std::_Vector_base.13"*
  %42 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %41) #3
  %43 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.14"* dereferenceable(1) %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.476
  %45 = load i32, i32* @y.477
  %46 = add i32 %44, -1535597826
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1535597826
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 148381841, i32 1158105461
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %74, align 8
  %75 = load %"class.std::vector.12"*, %"class.std::vector.12"** %74, align 8
  %76 = bitcast %"class.std::vector.12"* %75 to %"struct.std::_Vector_base.13"*
  %77 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %76) #3
  %78 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.14"* dereferenceable(1) %77) #3
  store i32 639419803, i32* %14
  br label %79

; <label>:79:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.14"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %2, align 8
  %3 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %2, align 8
  %4 = bitcast %"class.std::allocator.14"* %3 to %"class.__gnu_cxx::new_allocator.15"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.14"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.13"*, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %2, align 8
  %3 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.14"*
  ret %"class.std::allocator.14"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.482
  %5 = load i32, i32* @y.483
  %6 = sub i32 %4, -1680425558
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1680425558
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1576773165, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1576773165, label %18
    i32 -1048759063, label %38
    i32 318908780, label %68
    i32 -1899103387, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1048759063, i32 -1899103387
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %39, align 8
  %41 = load i32, i32* @x.482
  %42 = load i32, i32* @y.483
  %43 = sub i32 %41, 1164215285
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1164215285
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 318908780, i32 -1899103387
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret i64 4611686018427387903

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %70, align 8
  store i32 -1048759063, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.14"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.14"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %3, align 8
  %6 = bitcast %"class.std::allocator.14"* %5 to %"class.__gnu_cxx::new_allocator.15"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1519420304, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %60
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1519420304, label %16
    i32 -470148654, label %21
    i32 884662735, label %37
    i32 1941431524, label %53
    i32 -932251511, label %54
    i32 -228654103, label %59
  ]

; <label>:15:                                     ; preds = %13
  br label %60

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -470148654, i32 -932251511
  store i32 %20, i32* %12
  br label %60

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.486
  %23 = load i32, i32* @y.487
  %24 = sub i32 %22, -1221716715
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -1221716715
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 884662735, i32 -228654103
  store i32 %36, i32* %12
  br label %60

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %38 = load i32, i32* @x.486
  %39 = load i32, i32* @y.487
  %40 = add i32 %38, 2079174160
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 2079174160
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1941431524, i32 -228654103
  store i32 %52, i32* %12
  br label %60

; <label>:53:                                     ; preds = %13
  unreachable

; <label>:54:                                     ; preds = %13
  %55 = load i64, i64* %7, align 8
  %56 = mul i64 %55, 4
  %57 = call i8* @_Znwm(i64 %56)
  %58 = bitcast i8* %57 to i32*
  ret i32* %58

; <label>:59:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 884662735, i32* %12
  br label %60

; <label>:60:                                     ; preds = %59, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.14"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.488
  %9 = load i32, i32* @y.489
  %10 = add i32 %8, -615839569
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -615839569
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -561448921, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %85
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -561448921, label %22
    i32 1294881858, label %30
    i32 2047489209, label %64
    i32 -523209755, label %66
  ]

; <label>:21:                                     ; preds = %19
  br label %85

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1294881858, i32 -523209755
  store i32 %29, i32* %18
  br label %85

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::move_iterator.23", align 8
  %32 = alloca %"class.std::move_iterator.23", align 8
  %33 = alloca i32*, align 8
  %34 = alloca %"class.std::allocator.14"*, align 8
  %35 = alloca %"class.std::move_iterator.23", align 8
  %36 = alloca %"class.std::move_iterator.23", align 8
  %37 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %31, i32 0, i32 0
  store i32* %0, i32** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %32, i32 0, i32 0
  store i32* %1, i32** %38, align 8
  store i32* %2, i32** %33, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %34, align 8
  %39 = bitcast %"class.std::move_iterator.23"* %35 to i8*
  %40 = bitcast %"class.std::move_iterator.23"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.std::move_iterator.23"* %36 to i8*
  %42 = bitcast %"class.std::move_iterator.23"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load i32*, i32** %33, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %35, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %36, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %45, i32* %47, i32* %43)
  store i32* %48, i32** %5
  %49 = load i32, i32* @x.488
  %50 = load i32, i32* @y.489
  %51 = add i32 %49, 65713527
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 65713527
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 2047489209, i32 -523209755
  store i32 %63, i32* %18
  br label %85

; <label>:64:                                     ; preds = %19
  %65 = load volatile i32*, i32** %5
  ret i32* %65

; <label>:66:                                     ; preds = %19
  %67 = alloca %"class.std::move_iterator.23", align 8
  %68 = alloca %"class.std::move_iterator.23", align 8
  %69 = alloca i32*, align 8
  %70 = alloca %"class.std::allocator.14"*, align 8
  %71 = alloca %"class.std::move_iterator.23", align 8
  %72 = alloca %"class.std::move_iterator.23", align 8
  %73 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %67, i32 0, i32 0
  store i32* %0, i32** %73, align 8
  %74 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %68, i32 0, i32 0
  store i32* %1, i32** %74, align 8
  store i32* %2, i32** %69, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %70, align 8
  %75 = bitcast %"class.std::move_iterator.23"* %71 to i8*
  %76 = bitcast %"class.std::move_iterator.23"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 8, i1 false)
  %77 = bitcast %"class.std::move_iterator.23"* %72 to i8*
  %78 = bitcast %"class.std::move_iterator.23"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 8, i32 8, i1 false)
  %79 = load i32*, i32** %69, align 8
  %80 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %71, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %72, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %81, i32* %83, i32* %79)
  store i32 1294881858, i32* %18
  br label %85

; <label>:85:                                     ; preds = %66, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.490
  %6 = load i32, i32* @y.491
  %7 = sub i32 %5, 2134477537
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2134477537
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1153371642, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1153371642, label %19
    i32 -1947558656, label %27
    i32 -1858844625, label %60
    i32 1105409586, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1947558656, i32 1105409586
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.23", align 8
  %29 = alloca i32*, align 8
  store i32* %0, i32** %29, align 8
  %30 = load i32*, i32** %29, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.23"* %28, i32* %30)
  %31 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %28, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  store i32* %32, i32** %2
  %33 = load i32, i32* @x.490
  %34 = load i32, i32* @y.491
  %35 = sub i32 %33, 420218362
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 420218362
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1858844625, i32 1105409586
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i32*, i32** %2
  ret i32* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::move_iterator.23", align 8
  %64 = alloca i32*, align 8
  store i32* %0, i32** %64, align 8
  %65 = load i32*, i32** %64, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.23"* %63, i32* %65)
  %66 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %63, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  store i32 -1947558656, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.23", align 8
  %5 = alloca %"class.std::move_iterator.23", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.23", align 8
  %9 = alloca %"class.std::move_iterator.23", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.23"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.23"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.23"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.23"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.494
  %8 = load i32, i32* @y.495
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1439360268, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %81
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1439360268, label %20
    i32 -785171371, label %28
    i32 -861374924, label %61
    i32 -1725568350, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %81

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -785171371, i32 -1725568350
  store i32 %27, i32* %16
  br label %81

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator.23", align 8
  %30 = alloca %"class.std::move_iterator.23", align 8
  %31 = alloca i32*, align 8
  %32 = alloca %"class.std::move_iterator.23", align 8
  %33 = alloca %"class.std::move_iterator.23", align 8
  %34 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %29, i32 0, i32 0
  store i32* %0, i32** %34, align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %30, i32 0, i32 0
  store i32* %1, i32** %35, align 8
  store i32* %2, i32** %31, align 8
  %36 = bitcast %"class.std::move_iterator.23"* %32 to i8*
  %37 = bitcast %"class.std::move_iterator.23"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = bitcast %"class.std::move_iterator.23"* %33 to i8*
  %39 = bitcast %"class.std::move_iterator.23"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = load i32*, i32** %31, align 8
  %41 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %32, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %33, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %42, i32* %44, i32* %40)
  store i32* %45, i32** %4
  %46 = load i32, i32* @x.494
  %47 = load i32, i32* @y.495
  %48 = add i32 %46, -1501394757
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1501394757
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -861374924, i32 -1725568350
  store i32 %60, i32* %16
  br label %81

; <label>:61:                                     ; preds = %17
  %62 = load volatile i32*, i32** %4
  ret i32* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::move_iterator.23", align 8
  %65 = alloca %"class.std::move_iterator.23", align 8
  %66 = alloca i32*, align 8
  %67 = alloca %"class.std::move_iterator.23", align 8
  %68 = alloca %"class.std::move_iterator.23", align 8
  %69 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %64, i32 0, i32 0
  store i32* %0, i32** %69, align 8
  %70 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %65, i32 0, i32 0
  store i32* %1, i32** %70, align 8
  store i32* %2, i32** %66, align 8
  %71 = bitcast %"class.std::move_iterator.23"* %67 to i8*
  %72 = bitcast %"class.std::move_iterator.23"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 8, i32 8, i1 false)
  %73 = bitcast %"class.std::move_iterator.23"* %68 to i8*
  %74 = bitcast %"class.std::move_iterator.23"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = load i32*, i32** %66, align 8
  %76 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %67, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %68, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %77, i32* %79, i32* %75)
  store i32 -785171371, i32* %16
  br label %81

; <label>:81:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.496
  %8 = load i32, i32* @y.497
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1432271903, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1432271903, label %20
    i32 1619817822, label %28
    i32 346339534, label %62
    i32 1231727461, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1619817822, i32 1231727461
  store i32 %27, i32* %16
  br label %84

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator.23", align 8
  %30 = alloca %"class.std::move_iterator.23", align 8
  %31 = alloca i32*, align 8
  %32 = alloca %"class.std::move_iterator.23", align 8
  %33 = alloca %"class.std::move_iterator.23", align 8
  %34 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %29, i32 0, i32 0
  store i32* %0, i32** %34, align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %30, i32 0, i32 0
  store i32* %1, i32** %35, align 8
  store i32* %2, i32** %31, align 8
  %36 = bitcast %"class.std::move_iterator.23"* %32 to i8*
  %37 = bitcast %"class.std::move_iterator.23"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %32, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %39)
  %41 = bitcast %"class.std::move_iterator.23"* %33 to i8*
  %42 = bitcast %"class.std::move_iterator.23"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %33, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %44)
  %46 = load i32*, i32** %31, align 8
  %47 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %40, i32* %45, i32* %46)
  store i32* %47, i32** %4
  %48 = load i32, i32* @x.496
  %49 = load i32, i32* @y.497
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 346339534, i32 1231727461
  store i32 %61, i32* %16
  br label %84

; <label>:62:                                     ; preds = %17
  %63 = load volatile i32*, i32** %4
  ret i32* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::move_iterator.23", align 8
  %66 = alloca %"class.std::move_iterator.23", align 8
  %67 = alloca i32*, align 8
  %68 = alloca %"class.std::move_iterator.23", align 8
  %69 = alloca %"class.std::move_iterator.23", align 8
  %70 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %65, i32 0, i32 0
  store i32* %0, i32** %70, align 8
  %71 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %66, i32 0, i32 0
  store i32* %1, i32** %71, align 8
  store i32* %2, i32** %67, align 8
  %72 = bitcast %"class.std::move_iterator.23"* %68 to i8*
  %73 = bitcast %"class.std::move_iterator.23"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 8, i1 false)
  %74 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %68, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %75)
  %77 = bitcast %"class.std::move_iterator.23"* %69 to i8*
  %78 = bitcast %"class.std::move_iterator.23"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 8, i32 8, i1 false)
  %79 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %69, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %80)
  %82 = load i32*, i32** %67, align 8
  %83 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %76, i32* %81, i32* %82)
  store i32 1619817822, i32* %16
  br label %84

; <label>:84:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.23", align 8
  %3 = alloca %"class.std::move_iterator.23", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.std::move_iterator.23"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.23"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32**
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.506
  %11 = load i32, i32* @y.507
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1308574697, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %162
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1308574697, label %23
    i32 -1678439530, label %31
    i32 -1859986304, label %79
    i32 -966709074, label %82
    i32 -1898551599, label %92
    i32 1974725662, label %98
  ]

; <label>:22:                                     ; preds = %20
  br label %162

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1678439530, i32 1974725662
  store i32 %30, i32* %19
  br label %162

; <label>:31:                                     ; preds = %20
  %32 = alloca i32*, align 8
  store i32** %32, i32*** %7
  %33 = alloca i32*, align 8
  %34 = alloca i32*, align 8
  store i32** %34, i32*** %6
  %35 = alloca i64, align 8
  store i64* %35, i64** %5
  %36 = load volatile i32**, i32*** %7
  store i32* %0, i32** %36, align 8
  store i32* %1, i32** %33, align 8
  %37 = load volatile i32**, i32*** %6
  store i32* %2, i32** %37, align 8
  %38 = load i32*, i32** %33, align 8
  %39 = load volatile i32**, i32*** %7
  %40 = load i32*, i32** %39, align 8
  %41 = ptrtoint i32* %38 to i64
  %42 = ptrtoint i32* %40 to i64
  %43 = add i64 %41, 944210760384990046
  %44 = sub i64 %43, %42
  %45 = sub i64 %44, 944210760384990046
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 4
  %48 = load volatile i64*, i64** %5
  store i64 %47, i64* %48, align 8
  %49 = load volatile i64*, i64** %5
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.506
  %53 = load i32, i32* @y.507
  %54 = sub i32 %52, 1777931462
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 1777931462
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1859986304, i32 1974725662
  store i32 %78, i32* %19
  br label %162

; <label>:79:                                     ; preds = %20
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 -966709074, i32 -1898551599
  store i32 %81, i32* %19
  br label %162

; <label>:82:                                     ; preds = %20
  %83 = load volatile i32**, i32*** %6
  %84 = load i32*, i32** %83, align 8
  %85 = bitcast i32* %84 to i8*
  %86 = load volatile i32**, i32*** %7
  %87 = load i32*, i32** %86, align 8
  %88 = bitcast i32* %87 to i8*
  %89 = load volatile i64*, i64** %5
  %90 = load i64, i64* %89, align 8
  %91 = mul i64 4, %90
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %85, i8* %88, i64 %91, i32 4, i1 false)
  store i32 -1898551599, i32* %19
  br label %162

; <label>:92:                                     ; preds = %20
  %93 = load volatile i32**, i32*** %6
  %94 = load i32*, i32** %93, align 8
  %95 = load volatile i64*, i64** %5
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds i32, i32* %94, i64 %96
  ret i32* %97

; <label>:98:                                     ; preds = %20
  %99 = alloca i32*, align 8
  %100 = alloca i32*, align 8
  %101 = alloca i32*, align 8
  %102 = alloca i64, align 8
  store i32* %0, i32** %99, align 8
  store i32* %1, i32** %100, align 8
  store i32* %2, i32** %101, align 8
  %103 = load i32*, i32** %100, align 8
  %104 = load i32*, i32** %99, align 8
  %105 = ptrtoint i32* %103 to i64
  %106 = ptrtoint i32* %104 to i64
  %107 = sub i64 %105, 6056684249563296866
  %108 = sub i64 %107, %106
  %109 = add i64 %108, 6056684249563296866
  %110 = sub i64 %105, %106
  %111 = mul i64 %109, %106
  %112 = add i64 %105, -7417075040814250543
  %113 = sub i64 %112, %106
  %114 = sub i64 %113, -7417075040814250543
  %115 = sub i64 %105, %106
  %116 = mul i64 %114, %106
  %117 = add i64 %105, 2434247317664679678
  %118 = sub i64 %117, %106
  %119 = sub i64 %118, 2434247317664679678
  %120 = sub i64 %105, %106
  %121 = mul i64 %119, %106
  %122 = add i64 0, -4509473602196872007
  %123 = sub i64 %122, %105
  %124 = sub i64 %123, -4509473602196872007
  %125 = sub i64 0, %105
  %126 = sub i64 0, %106
  %127 = sub i64 %124, %126
  %128 = add i64 %124, %106
  %129 = shl i64 %105, %106
  %130 = add i64 %105, -5968694542435923439
  %131 = sub i64 %130, %106
  %132 = sub i64 %131, -5968694542435923439
  %133 = sub i64 %105, %106
  %134 = mul i64 %132, %106
  %135 = sub i64 %105, -2588797308673064399
  %136 = sub i64 %135, %106
  %137 = add i64 %136, -2588797308673064399
  %138 = sub i64 %105, %106
  %139 = add i64 0, -587765445226185071
  %140 = sub i64 %139, %137
  %141 = sub i64 %140, -587765445226185071
  %142 = sub i64 0, %137
  %143 = sub i64 0, 4
  %144 = sub i64 %141, %143
  %145 = add i64 %141, 4
  %146 = sub i64 0, %137
  %147 = add i64 0, %146
  %148 = sub i64 0, %137
  %149 = sub i64 0, %147
  %150 = sub i64 0, 4
  %151 = add i64 %149, %150
  %152 = sub i64 0, %151
  %153 = add i64 %147, 4
  %154 = add i64 %137, -5534701967331789804
  %155 = sub i64 %154, 4
  %156 = sub i64 %155, -5534701967331789804
  %157 = sub i64 %137, 4
  %158 = mul i64 %156, 4
  %159 = sdiv exact i64 %137, 4
  store i64 %159, i64* %102, align 8
  %160 = load i64, i64* %102, align 8
  %161 = icmp ne i64 %160, 0
  store i32 -1678439530, i32* %19
  br label %162

; <label>:162:                                    ; preds = %98, %82, %79, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #5 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.23", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.23"* %2)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.23"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.512
  %6 = load i32, i32* @y.513
  %7 = add i32 %5, 1961241958
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1961241958
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1806874488, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1806874488, label %19
    i32 1006886057, label %39
    i32 1898435696, label %59
    i32 735192552, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1006886057, i32 735192552
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %40, align 8
  %41 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %40, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %41, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.512
  %45 = load i32, i32* @y.513
  %46 = sub i32 %44, 1870115596
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1870115596
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1898435696, i32 735192552
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %62, align 8
  %63 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %63, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  store i32 1006886057, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.23"*, i32*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.514
  %6 = load i32, i32* @y.515
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2033704027, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %54
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2033704027, label %18
    i32 406424801, label %26
    i32 -1112509408, label %47
    i32 -1321558688, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %54

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 406424801, i32 -1321558688
  store i32 %25, i32* %14
  br label %54

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator.23"*, align 8
  %28 = alloca i32*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %27, align 8
  store i32* %1, i32** %28, align 8
  %29 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %27, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %29, i32 0, i32 0
  %31 = load i32*, i32** %28, align 8
  store i32* %31, i32** %30, align 8
  %32 = load i32, i32* @x.514
  %33 = load i32, i32* @y.515
  %34 = sub i32 %32, -1994703800
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1994703800
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1112509408, i32 -1321558688
  store i32 %46, i32* %14
  br label %54

; <label>:47:                                     ; preds = %15
  ret void

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::move_iterator.23"*, align 8
  %50 = alloca i32*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %49, align 8
  store i32* %1, i32** %50, align 8
  %51 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %49, align 8
  %52 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %51, i32 0, i32 0
  %53 = load i32*, i32** %50, align 8
  store i32* %53, i32** %52, align 8
  store i32 406424801, i32* %14
  br label %54

; <label>:54:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.15"*, i32*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %4 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7MaxflowIxE3bfsEi(%class.Maxflow*, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Maxflow*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::vector.12", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::allocator.14", align 1
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %"class.std::queue", align 8
  %11 = alloca %"class.std::deque", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::vector.11"*, align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %16 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  store %class.Maxflow* %0, %class.Maxflow** %3, align 8
  store i32 %1, i32* %4, align 4
  %17 = load %class.Maxflow*, %class.Maxflow** %3, align 8
  %18 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %17, i32 0, i32 0
  %19 = call i64 @_ZNKSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.6"* %18) #3
  store i32 -1, i32* %6, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.14"* %7) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.12"* %5, i64 %19, i32* dereferenceable(4) %6, %"class.std::allocator.14"* dereferenceable(1) %7)
          to label %20 unwind label %430

; <label>:20:                                     ; preds = %2
  %21 = load i32, i32* @x.518
  %22 = load i32, i32* @y.519
  %23 = sub i32 %21, 343529914
  %24 = sub i32 %23, 1
  %25 = add i32 %24, 343529914
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %565

; <label>:47:                                     ; preds = %20, %565
  %48 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %17, i32 0, i32 1
  %49 = call dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIiSaIiEEaSEOS1_(%"class.std::vector.12"* %48, %"class.std::vector.12"* dereferenceable(24) %5) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %5) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.14"* %7) #3
  call void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %11)
  %50 = load i32, i32* @x.518
  %51 = load i32, i32* @y.519
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %565

; <label>:63:                                     ; preds = %47
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"* %10, %"class.std::deque"* dereferenceable(80) %11)
          to label %64 unwind label %434

; <label>:64:                                     ; preds = %63
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %11) #3
  %65 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %17, i32 0, i32 1
  %66 = load i32, i32* %4, align 4
  %67 = sext i32 %66 to i64
  %68 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %65, i64 %67) #3
  store i32 0, i32* %68, align 4
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %10, i32* dereferenceable(4) %4)
          to label %69 unwind label %468

; <label>:69:                                     ; preds = %64
  br label %70

; <label>:70:                                     ; preds = %517, %69
  %71 = load i32, i32* @x.518
  %72 = load i32, i32* @y.519
  %73 = sub i32 %71, -1078788457
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -1078788457
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %568

; <label>:97:                                     ; preds = %70, %568
  %98 = load i32, i32* @x.518
  %99 = load i32, i32* @y.519
  %100 = sub i32 %98, -1242559249
  %101 = sub i32 %100, 1
  %102 = add i32 %101, -1242559249
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 true, true
  %111 = and i1 %108, true
  %112 = and i1 %106, %110
  %113 = and i1 %109, true
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 true, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %568

; <label>:124:                                    ; preds = %97
  %125 = invoke zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"* %10)
          to label %126 unwind label %468

; <label>:126:                                    ; preds = %124
  %127 = xor i1 %125, true
  %128 = and i1 true, %127
  %129 = xor i1 true, true
  %130 = and i1 %125, %129
  %131 = or i1 %128, %130
  %132 = xor i1 %125, true
  br i1 %131, label %133, label %518

; <label>:133:                                    ; preds = %126
  %134 = load i32, i32* @x.518
  %135 = load i32, i32* @y.519
  %136 = sub i32 %134, 2002169430
  %137 = sub i32 %136, 1
  %138 = add i32 %137, 2002169430
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 false, true
  %147 = and i1 %144, false
  %148 = and i1 %142, %146
  %149 = and i1 %145, false
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 false, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  br i1 %158, label %160, label %569

; <label>:160:                                    ; preds = %133, %569
  %161 = load i32, i32* @x.518
  %162 = load i32, i32* @y.519
  %163 = add i32 %161, -1270111551
  %164 = sub i32 %163, 1
  %165 = sub i32 %164, -1270111551
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  br i1 %173, label %175, label %569

; <label>:175:                                    ; preds = %160
  %176 = invoke dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"* %10)
          to label %177 unwind label %468

; <label>:177:                                    ; preds = %175
  %178 = load i32, i32* @x.518
  %179 = load i32, i32* @y.519
  %180 = sub i32 0, 1
  %181 = add i32 %178, %180
  %182 = sub i32 %178, 1
  %183 = mul i32 %178, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %179, 10
  %187 = and i1 %185, %186
  %188 = xor i1 %185, %186
  %189 = or i1 %187, %188
  %190 = or i1 %185, %186
  br i1 %189, label %191, label %570

; <label>:191:                                    ; preds = %177, %570
  %192 = load i32, i32* %176, align 4
  store i32 %192, i32* %12, align 4
  %193 = load i32, i32* @x.518
  %194 = load i32, i32* @y.519
  %195 = sub i32 %193, 662344259
  %196 = sub i32 %195, 1
  %197 = add i32 %196, 662344259
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %570

; <label>:207:                                    ; preds = %191
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"* %10)
          to label %208 unwind label %468

; <label>:208:                                    ; preds = %207
  %209 = load i32, i32* @x.518
  %210 = load i32, i32* @y.519
  %211 = sub i32 0, 1
  %212 = add i32 %209, %211
  %213 = sub i32 %209, 1
  %214 = mul i32 %209, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %210, 10
  %218 = xor i1 %216, true
  %219 = xor i1 %217, true
  %220 = xor i1 false, true
  %221 = and i1 %218, false
  %222 = and i1 %216, %220
  %223 = and i1 %219, false
  %224 = and i1 %217, %220
  %225 = or i1 %221, %222
  %226 = or i1 %223, %224
  %227 = xor i1 %225, %226
  %228 = or i1 %218, %219
  %229 = xor i1 %228, true
  %230 = or i1 false, %220
  %231 = and i1 %229, %230
  %232 = or i1 %227, %231
  %233 = or i1 %216, %217
  br i1 %232, label %234, label %572

; <label>:234:                                    ; preds = %208, %572
  %235 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %17, i32 0, i32 0
  %236 = load i32, i32* %12, align 4
  %237 = sext i32 %236 to i64
  %238 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.6"* %235, i64 %237) #3
  store %"class.std::vector.11"* %238, %"class.std::vector.11"** %13, align 8
  %239 = load %"class.std::vector.11"*, %"class.std::vector.11"** %13, align 8
  %240 = call %"struct.Maxflow<long long>::edge"* @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE5beginEv(%"class.std::vector.11"* %239) #3
  %241 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %14, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %240, %"struct.Maxflow<long long>::edge"** %241, align 8
  %242 = load %"class.std::vector.11"*, %"class.std::vector.11"** %13, align 8
  %243 = call %"struct.Maxflow<long long>::edge"* @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE3endEv(%"class.std::vector.11"* %242) #3
  %244 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %15, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %243, %"struct.Maxflow<long long>::edge"** %244, align 8
  %245 = load i32, i32* @x.518
  %246 = load i32, i32* @y.519
  %247 = sub i32 0, 1
  %248 = add i32 %245, %247
  %249 = sub i32 %245, 1
  %250 = mul i32 %245, %248
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %246, 10
  %254 = xor i1 %252, true
  %255 = xor i1 %253, true
  %256 = xor i1 false, true
  %257 = and i1 %254, false
  %258 = and i1 %252, %256
  %259 = and i1 %255, false
  %260 = and i1 %253, %256
  %261 = or i1 %257, %258
  %262 = or i1 %259, %260
  %263 = xor i1 %261, %262
  %264 = or i1 %254, %255
  %265 = xor i1 %264, true
  %266 = or i1 false, %256
  %267 = and i1 %265, %266
  %268 = or i1 %263, %267
  %269 = or i1 %252, %253
  br i1 %268, label %270, label %572

; <label>:270:                                    ; preds = %234
  br label %271

; <label>:271:                                    ; preds = %516, %270
  %272 = load i32, i32* @x.518
  %273 = load i32, i32* @y.519
  %274 = sub i32 0, 1
  %275 = add i32 %272, %274
  %276 = sub i32 %272, 1
  %277 = mul i32 %272, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %273, 10
  %281 = and i1 %279, %280
  %282 = xor i1 %279, %280
  %283 = or i1 %281, %282
  %284 = or i1 %279, %280
  br i1 %283, label %285, label %583

; <label>:285:                                    ; preds = %271, %583
  %286 = call zeroext i1 @_ZN9__gnu_cxxneIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %14, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %15) #3
  %287 = load i32, i32* @x.518
  %288 = load i32, i32* @y.519
  %289 = sub i32 0, 1
  %290 = add i32 %287, %289
  %291 = sub i32 %287, 1
  %292 = mul i32 %287, %290
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %288, 10
  %296 = and i1 %294, %295
  %297 = xor i1 %294, %295
  %298 = or i1 %296, %297
  %299 = or i1 %294, %295
  br i1 %298, label %300, label %583

; <label>:300:                                    ; preds = %285
  br i1 %286, label %301, label %517

; <label>:301:                                    ; preds = %300
  %302 = load i32, i32* @x.518
  %303 = load i32, i32* @y.519
  %304 = add i32 %302, -977135044
  %305 = sub i32 %304, 1
  %306 = sub i32 %305, -977135044
  %307 = sub i32 %302, 1
  %308 = mul i32 %302, %306
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %303, 10
  %312 = xor i1 %310, true
  %313 = xor i1 %311, true
  %314 = xor i1 true, true
  %315 = and i1 %312, true
  %316 = and i1 %310, %314
  %317 = and i1 %313, true
  %318 = and i1 %311, %314
  %319 = or i1 %315, %316
  %320 = or i1 %317, %318
  %321 = xor i1 %319, %320
  %322 = or i1 %312, %313
  %323 = xor i1 %322, true
  %324 = or i1 true, %314
  %325 = and i1 %323, %324
  %326 = or i1 %321, %325
  %327 = or i1 %310, %311
  br i1 %326, label %328, label %585

; <label>:328:                                    ; preds = %301, %585
  %329 = call dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.24"* %14) #3
  store %"struct.Maxflow<long long>::edge"* %329, %"struct.Maxflow<long long>::edge"** %16, align 8
  %330 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %16, align 8
  %331 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %330, i32 0, i32 1
  %332 = load i64, i64* %331, align 8
  %333 = icmp sgt i64 %332, 0
  %334 = load i32, i32* @x.518
  %335 = load i32, i32* @y.519
  %336 = sub i32 %334, -1113208237
  %337 = sub i32 %336, 1
  %338 = add i32 %337, -1113208237
  %339 = sub i32 %334, 1
  %340 = mul i32 %334, %338
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %335, 10
  %344 = xor i1 %342, true
  %345 = xor i1 %343, true
  %346 = xor i1 true, true
  %347 = and i1 %344, true
  %348 = and i1 %342, %346
  %349 = and i1 %345, true
  %350 = and i1 %343, %346
  %351 = or i1 %347, %348
  %352 = or i1 %349, %350
  %353 = xor i1 %351, %352
  %354 = or i1 %344, %345
  %355 = xor i1 %354, true
  %356 = or i1 true, %346
  %357 = and i1 %355, %356
  %358 = or i1 %353, %357
  %359 = or i1 %342, %343
  br i1 %358, label %360, label %585

; <label>:360:                                    ; preds = %328
  br i1 %333, label %361, label %472

; <label>:361:                                    ; preds = %360
  %362 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %17, i32 0, i32 1
  %363 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %16, align 8
  %364 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %363, i32 0, i32 0
  %365 = load i32, i32* %364, align 8
  %366 = sext i32 %365 to i64
  %367 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %362, i64 %366) #3
  %368 = load i32, i32* %367, align 4
  %369 = icmp slt i32 %368, 0
  br i1 %369, label %370, label %472

; <label>:370:                                    ; preds = %361
  %371 = load i32, i32* @x.518
  %372 = load i32, i32* @y.519
  %373 = sub i32 0, 1
  %374 = add i32 %371, %373
  %375 = sub i32 %371, 1
  %376 = mul i32 %371, %374
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %372, 10
  %380 = xor i1 %378, true
  %381 = xor i1 %379, true
  %382 = xor i1 true, true
  %383 = and i1 %380, true
  %384 = and i1 %378, %382
  %385 = and i1 %381, true
  %386 = and i1 %379, %382
  %387 = or i1 %383, %384
  %388 = or i1 %385, %386
  %389 = xor i1 %387, %388
  %390 = or i1 %380, %381
  %391 = xor i1 %390, true
  %392 = or i1 true, %382
  %393 = and i1 %391, %392
  %394 = or i1 %389, %393
  %395 = or i1 %378, %379
  br i1 %394, label %396, label %591

; <label>:396:                                    ; preds = %370, %591
  %397 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %17, i32 0, i32 1
  %398 = load i32, i32* %12, align 4
  %399 = sext i32 %398 to i64
  %400 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %397, i64 %399) #3
  %401 = load i32, i32* %400, align 4
  %402 = sub i32 %401, -903663811
  %403 = add i32 %402, 1
  %404 = add i32 %403, -903663811
  %405 = add nsw i32 %401, 1
  %406 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %17, i32 0, i32 1
  %407 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %16, align 8
  %408 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %407, i32 0, i32 0
  %409 = load i32, i32* %408, align 8
  %410 = sext i32 %409 to i64
  %411 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %406, i64 %410) #3
  store i32 %404, i32* %411, align 4
  %412 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %16, align 8
  %413 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %412, i32 0, i32 0
  %414 = load i32, i32* @x.518
  %415 = load i32, i32* @y.519
  %416 = sub i32 %414, 581914087
  %417 = sub i32 %416, 1
  %418 = add i32 %417, 581914087
  %419 = sub i32 %414, 1
  %420 = mul i32 %414, %418
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %415, 10
  %424 = and i1 %422, %423
  %425 = xor i1 %422, %423
  %426 = or i1 %424, %425
  %427 = or i1 %422, %423
  br i1 %426, label %428, label %591

; <label>:428:                                    ; preds = %396
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %10, i32* dereferenceable(4) %413)
          to label %429 unwind label %468

; <label>:429:                                    ; preds = %428
  br label %472

; <label>:430:                                    ; preds = %2
  %431 = landingpad { i8*, i32 }
          cleanup
  %432 = extractvalue { i8*, i32 } %431, 0
  store i8* %432, i8** %8, align 8
  %433 = extractvalue { i8*, i32 } %431, 1
  store i32 %433, i32* %9, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.14"* %7) #3
  br label %560

; <label>:434:                                    ; preds = %63
  %435 = load i32, i32* @x.518
  %436 = load i32, i32* @y.519
  %437 = sub i32 %435, -523172232
  %438 = sub i32 %437, 1
  %439 = add i32 %438, -523172232
  %440 = sub i32 %435, 1
  %441 = mul i32 %435, %439
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %436, 10
  %445 = and i1 %443, %444
  %446 = xor i1 %443, %444
  %447 = or i1 %445, %446
  %448 = or i1 %443, %444
  br i1 %447, label %449, label %609

; <label>:449:                                    ; preds = %434, %609
  %450 = landingpad { i8*, i32 }
          cleanup
  %451 = extractvalue { i8*, i32 } %450, 0
  store i8* %451, i8** %8, align 8
  %452 = extractvalue { i8*, i32 } %450, 1
  store i32 %452, i32* %9, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %11) #3
  %453 = load i32, i32* @x.518
  %454 = load i32, i32* @y.519
  %455 = sub i32 %453, 1433896062
  %456 = sub i32 %455, 1
  %457 = add i32 %456, 1433896062
  %458 = sub i32 %453, 1
  %459 = mul i32 %453, %457
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %454, 10
  %463 = and i1 %461, %462
  %464 = xor i1 %461, %462
  %465 = or i1 %463, %464
  %466 = or i1 %461, %462
  br i1 %465, label %467, label %609

; <label>:467:                                    ; preds = %449
  br label %560

; <label>:468:                                    ; preds = %428, %207, %175, %124, %64
  %469 = landingpad { i8*, i32 }
          cleanup
  %470 = extractvalue { i8*, i32 } %469, 0
  store i8* %470, i8** %8, align 8
  %471 = extractvalue { i8*, i32 } %469, 1
  store i32 %471, i32* %9, align 4
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %10) #3
  br label %560

; <label>:472:                                    ; preds = %429, %361, %360
  br label %473

; <label>:473:                                    ; preds = %472
  %474 = load i32, i32* @x.518
  %475 = load i32, i32* @y.519
  %476 = sub i32 %474, 1897338731
  %477 = sub i32 %476, 1
  %478 = add i32 %477, 1897338731
  %479 = sub i32 %474, 1
  %480 = mul i32 %474, %478
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %475, 10
  %484 = and i1 %482, %483
  %485 = xor i1 %482, %483
  %486 = or i1 %484, %485
  %487 = or i1 %482, %483
  br i1 %486, label %488, label %613

; <label>:488:                                    ; preds = %473, %613
  %489 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.24"* @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.24"* %14) #3
  %490 = load i32, i32* @x.518
  %491 = load i32, i32* @y.519
  %492 = sub i32 %490, 1375145933
  %493 = sub i32 %492, 1
  %494 = add i32 %493, 1375145933
  %495 = sub i32 %490, 1
  %496 = mul i32 %490, %494
  %497 = urem i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = icmp slt i32 %491, 10
  %500 = xor i1 %498, true
  %501 = xor i1 %499, true
  %502 = xor i1 true, true
  %503 = and i1 %500, true
  %504 = and i1 %498, %502
  %505 = and i1 %501, true
  %506 = and i1 %499, %502
  %507 = or i1 %503, %504
  %508 = or i1 %505, %506
  %509 = xor i1 %507, %508
  %510 = or i1 %500, %501
  %511 = xor i1 %510, true
  %512 = or i1 true, %502
  %513 = and i1 %511, %512
  %514 = or i1 %509, %513
  %515 = or i1 %498, %499
  br i1 %514, label %516, label %613

; <label>:516:                                    ; preds = %488
  br label %271

; <label>:517:                                    ; preds = %300
  br label %70

; <label>:518:                                    ; preds = %126
  %519 = load i32, i32* @x.518
  %520 = load i32, i32* @y.519
  %521 = sub i32 0, 1
  %522 = add i32 %519, %521
  %523 = sub i32 %519, 1
  %524 = mul i32 %519, %522
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %520, 10
  %528 = xor i1 %526, true
  %529 = xor i1 %527, true
  %530 = xor i1 false, true
  %531 = and i1 %528, false
  %532 = and i1 %526, %530
  %533 = and i1 %529, false
  %534 = and i1 %527, %530
  %535 = or i1 %531, %532
  %536 = or i1 %533, %534
  %537 = xor i1 %535, %536
  %538 = or i1 %528, %529
  %539 = xor i1 %538, true
  %540 = or i1 false, %530
  %541 = and i1 %539, %540
  %542 = or i1 %537, %541
  %543 = or i1 %526, %527
  br i1 %542, label %544, label %615

; <label>:544:                                    ; preds = %518, %615
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %10) #3
  %545 = load i32, i32* @x.518
  %546 = load i32, i32* @y.519
  %547 = add i32 %545, -1923755269
  %548 = sub i32 %547, 1
  %549 = sub i32 %548, -1923755269
  %550 = sub i32 %545, 1
  %551 = mul i32 %545, %549
  %552 = urem i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = icmp slt i32 %546, 10
  %555 = and i1 %553, %554
  %556 = xor i1 %553, %554
  %557 = or i1 %555, %556
  %558 = or i1 %553, %554
  br i1 %557, label %559, label %615

; <label>:559:                                    ; preds = %544
  ret void

; <label>:560:                                    ; preds = %468, %467, %430
  %561 = load i8*, i8** %8, align 8
  %562 = load i32, i32* %9, align 4
  %563 = insertvalue { i8*, i32 } undef, i8* %561, 0
  %564 = insertvalue { i8*, i32 } %563, i32 %562, 1
  resume { i8*, i32 } %564

; <label>:565:                                    ; preds = %47, %20
  %566 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %17, i32 0, i32 1
  %567 = call dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIiSaIiEEaSEOS1_(%"class.std::vector.12"* %566, %"class.std::vector.12"* dereferenceable(24) %5) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %5) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.14"* %7) #3
  call void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %11)
  br label %47

; <label>:568:                                    ; preds = %97, %70
  br label %97

; <label>:569:                                    ; preds = %160, %133
  br label %160

; <label>:570:                                    ; preds = %191, %177
  %571 = load i32, i32* %176, align 4
  store i32 %571, i32* %12, align 4
  br label %191

; <label>:572:                                    ; preds = %234, %208
  %573 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %17, i32 0, i32 0
  %574 = load i32, i32* %12, align 4
  %575 = sext i32 %574 to i64
  %576 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.6"* %573, i64 %575) #3
  store %"class.std::vector.11"* %576, %"class.std::vector.11"** %13, align 8
  %577 = load %"class.std::vector.11"*, %"class.std::vector.11"** %13, align 8
  %578 = call %"struct.Maxflow<long long>::edge"* @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE5beginEv(%"class.std::vector.11"* %577) #3
  %579 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %14, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %578, %"struct.Maxflow<long long>::edge"** %579, align 8
  %580 = load %"class.std::vector.11"*, %"class.std::vector.11"** %13, align 8
  %581 = call %"struct.Maxflow<long long>::edge"* @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE3endEv(%"class.std::vector.11"* %580) #3
  %582 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %15, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"* %581, %"struct.Maxflow<long long>::edge"** %582, align 8
  br label %234

; <label>:583:                                    ; preds = %285, %271
  %584 = call zeroext i1 @_ZN9__gnu_cxxneIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %14, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %15) #3
  br label %285

; <label>:585:                                    ; preds = %328, %301
  %586 = call dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.24"* %14) #3
  store %"struct.Maxflow<long long>::edge"* %586, %"struct.Maxflow<long long>::edge"** %16, align 8
  %587 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %16, align 8
  %588 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %587, i32 0, i32 1
  %589 = load i64, i64* %588, align 8
  %590 = icmp sgt i64 %589, 0
  br label %328

; <label>:591:                                    ; preds = %396, %370
  %592 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %17, i32 0, i32 1
  %593 = load i32, i32* %12, align 4
  %594 = sext i32 %593 to i64
  %595 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %592, i64 %594) #3
  %596 = load i32, i32* %595, align 4
  %597 = shl i32 %596, 1
  %598 = sub i32 0, 1
  %599 = sub i32 %596, %598
  %600 = add nsw i32 %596, 1
  %601 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %17, i32 0, i32 1
  %602 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %16, align 8
  %603 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %602, i32 0, i32 0
  %604 = load i32, i32* %603, align 8
  %605 = sext i32 %604 to i64
  %606 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %601, i64 %605) #3
  store i32 %599, i32* %606, align 4
  %607 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %16, align 8
  %608 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %607, i32 0, i32 0
  br label %396

; <label>:609:                                    ; preds = %449, %434
  %610 = landingpad { i8*, i32 }
          cleanup
  %611 = extractvalue { i8*, i32 } %610, 0
  store i8* %611, i8** %8, align 8
  %612 = extractvalue { i8*, i32 } %610, 1
  store i32 %612, i32* %9, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %11) #3
  br label %449

; <label>:613:                                    ; preds = %488, %473
  %614 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.24"* @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.24"* %14) #3
  br label %488

; <label>:615:                                    ; preds = %544, %518
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %10) #3
  br label %544
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.14"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.520
  %5 = load i32, i32* @y.521
  %6 = add i32 %4, -1220392579
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1220392579
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 517072537, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 517072537, label %18
    i32 1567273970, label %26
    i32 1301358289, label %45
    i32 1339501502, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1567273970, i32 1339501502
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %27, align 8
  %28 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %27, align 8
  %29 = bitcast %"class.std::allocator.14"* %28 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.15"* %29) #3
  %30 = load i32, i32* @x.520
  %31 = load i32, i32* @y.521
  %32 = add i32 %30, 2102386466
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 2102386466
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1301358289, i32 1339501502
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %47, align 8
  %48 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %47, align 8
  %49 = bitcast %"class.std::allocator.14"* %48 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.15"* %49) #3
  store i32 1567273970, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.12"*, i64, i32* dereferenceable(4), %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.12"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.14"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %8, align 8
  %11 = load %"class.std::vector.12"*, %"class.std::vector.12"** %5, align 8
  %12 = bitcast %"class.std::vector.12"* %11 to %"struct.std::_Vector_base.13"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %8, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.13"* %12, i64 %13, %"class.std::allocator.14"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.12"* %11, i64 %15, i32* dereferenceable(4) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* @x.522
  %20 = load i32, i32* @y.523
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %110

; <label>:32:                                     ; preds = %18, %110
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %9, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %10, align 4
  %36 = bitcast %"class.std::vector.12"* %11 to %"struct.std::_Vector_base.13"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.13"* %36) #3
  %37 = load i32, i32* @x.522
  %38 = load i32, i32* @y.523
  %39 = sub i32 %37, -128643063
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -128643063
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %110

; <label>:63:                                     ; preds = %32
  br label %64

; <label>:64:                                     ; preds = %63
  %65 = load i32, i32* @x.522
  %66 = load i32, i32* @y.523
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %115

; <label>:90:                                     ; preds = %64, %115
  %91 = load i8*, i8** %9, align 8
  %92 = load i32, i32* %10, align 4
  %93 = insertvalue { i8*, i32 } undef, i8* %91, 0
  %94 = insertvalue { i8*, i32 } %93, i32 %92, 1
  %95 = load i32, i32* @x.522
  %96 = load i32, i32* @y.523
  %97 = sub i32 %95, 1501188658
  %98 = sub i32 %97, 1
  %99 = add i32 %98, 1501188658
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  br i1 %107, label %109, label %115

; <label>:109:                                    ; preds = %90
  resume { i8*, i32 } %94

; <label>:110:                                    ; preds = %32, %18
  %111 = landingpad { i8*, i32 }
          cleanup
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %9, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %10, align 4
  %114 = bitcast %"class.std::vector.12"* %11 to %"struct.std::_Vector_base.13"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.13"* %114) #3
  br label %32

; <label>:115:                                    ; preds = %90, %64
  %116 = load i8*, i8** %9, align 8
  %117 = load i32, i32* %10, align 4
  %118 = insertvalue { i8*, i32 } undef, i8* %116, 0
  %119 = insertvalue { i8*, i32 } %118, i32 %117, 1
  br label %90
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.12"* @_ZNSt6vectorIiSaIiEEaSEOS1_(%"class.std::vector.12"*, %"class.std::vector.12"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.12"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.524
  %7 = load i32, i32* @y.525
  %8 = sub i32 %6, -359453457
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -359453457
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 916511542, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 916511542, label %20
    i32 1431152766, label %28
    i32 -1349069803, label %64
    i32 1624104889, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1431152766, i32 1624104889
  store i32 %27, i32* %16
  br label %74

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.12"*, align 8
  %30 = alloca %"class.std::vector.12"*, align 8
  %31 = alloca i8, align 1
  %32 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %29, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %30, align 8
  %33 = load %"class.std::vector.12"*, %"class.std::vector.12"** %29, align 8
  store %"class.std::vector.12"* %33, %"class.std::vector.12"** %3
  store i8 1, i8* %31, align 1
  %34 = load %"class.std::vector.12"*, %"class.std::vector.12"** %30, align 8
  %35 = call dereferenceable(24) %"class.std::vector.12"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.12"* dereferenceable(24) %34) #3
  %36 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %3
  call void @_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE(%"class.std::vector.12"* %36, %"class.std::vector.12"* dereferenceable(24) %35) #3
  %37 = load i32, i32* @x.524
  %38 = load i32, i32* @y.525
  %39 = sub i32 %37, -212748646
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -212748646
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1349069803, i32 1624104889
  store i32 %63, i32* %16
  br label %74

; <label>:64:                                     ; preds = %17
  %65 = load volatile %"class.std::vector.12"*, %"class.std::vector.12"** %3
  ret %"class.std::vector.12"* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::vector.12"*, align 8
  %68 = alloca %"class.std::vector.12"*, align 8
  %69 = alloca i8, align 1
  %70 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %67, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %68, align 8
  %71 = load %"class.std::vector.12"*, %"class.std::vector.12"** %67, align 8
  store i8 1, i8* %69, align 1
  %72 = load %"class.std::vector.12"*, %"class.std::vector.12"** %68, align 8
  %73 = call dereferenceable(24) %"class.std::vector.12"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.12"* dereferenceable(24) %72) #3
  call void @_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE(%"class.std::vector.12"* %71, %"class.std::vector.12"* dereferenceable(24) %73) #3
  store i32 1431152766, i32* %16
  br label %74

; <label>:74:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.14"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %2, align 8
  %3 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %2, align 8
  %4 = bitcast %"class.std::allocator.14"* %3 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN7MaxflowIxE5dfs_dEiix(%class.Maxflow*, i32, i32, i64) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i32
  %7 = alloca i32
  %8 = alloca %class.Maxflow*
  %9 = alloca i64, align 8
  %10 = alloca %class.Maxflow*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca %"struct.Maxflow<long long>::edge"*, align 8
  %16 = alloca i64, align 8
  store %class.Maxflow* %0, %class.Maxflow** %10, align 8
  store i32 %1, i32* %11, align 4
  store i32 %2, i32* %12, align 4
  store i64 %3, i64* %13, align 8
  %17 = load %class.Maxflow*, %class.Maxflow** %10, align 8
  store %class.Maxflow* %17, %class.Maxflow** %8
  %18 = load i32, i32* %11, align 4
  store i32 %18, i32* %7
  %19 = load i32, i32* %12, align 4
  store i32 %19, i32* %6
  %20 = alloca i32
  store i32 1276205151, i32* %20
  br label %21

; <label>:21:                                     ; preds = %4, %222
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1276205151, label %24
    i32 -816384612, label %29
    i32 -1843067695, label %44
    i32 397746275, label %72
    i32 -1518947377, label %73
    i32 874815287, label %79
    i32 1119228322, label %95
    i32 751439103, label %120
    i32 181082797, label %123
    i32 -1731657046, label %138
    i32 1761345779, label %155
    i32 655067711, label %169
    i32 -404964535, label %197
    i32 590377370, label %198
    i32 2039024249, label %199
    i32 962369120, label %206
    i32 1819293918, label %207
    i32 1280776531, label %209
    i32 115695558, label %211
  ]

; <label>:23:                                     ; preds = %21
  br label %222

; <label>:24:                                     ; preds = %21
  %25 = load volatile i32, i32* %7
  %26 = load volatile i32, i32* %6
  %27 = icmp eq i32 %25, %26
  %28 = select i1 %27, i32 -816384612, i32 -1518947377
  store i32 %28, i32* %20
  br label %222

; <label>:29:                                     ; preds = %21
  %30 = load i32, i32* @x.528
  %31 = load i32, i32* @y.529
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1843067695, i32 1280776531
  store i32 %43, i32* %20
  br label %222

; <label>:44:                                     ; preds = %21
  %45 = load i64, i64* %13, align 8
  store i64 %45, i64* %9, align 8
  %46 = load i32, i32* @x.528
  %47 = load i32, i32* @y.529
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 397746275, i32 1280776531
  store i32 %71, i32* %20
  br label %222

; <label>:72:                                     ; preds = %21
  store i32 1819293918, i32* %20
  br label %222

; <label>:73:                                     ; preds = %21
  %74 = load volatile %class.Maxflow*, %class.Maxflow** %8
  %75 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %74, i32 0, i32 2
  %76 = load i32, i32* %11, align 4
  %77 = sext i32 %76 to i64
  %78 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %75, i64 %77) #3
  store i32* %78, i32** %14, align 8
  store i32 874815287, i32* %20
  br label %222

; <label>:79:                                     ; preds = %21
  %80 = load i32, i32* @x.528
  %81 = load i32, i32* @y.529
  %82 = sub i32 %80, 564582106
  %83 = sub i32 %82, 1
  %84 = add i32 %83, 564582106
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 1119228322, i32 115695558
  store i32 %94, i32* %20
  br label %222

; <label>:95:                                     ; preds = %21
  %96 = load i32*, i32** %14, align 8
  %97 = load i32, i32* %96, align 4
  %98 = load volatile %class.Maxflow*, %class.Maxflow** %8
  %99 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %98, i32 0, i32 0
  %100 = load i32, i32* %11, align 4
  %101 = sext i32 %100 to i64
  %102 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.6"* %99, i64 %101) #3
  %103 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %102) #3
  %104 = trunc i64 %103 to i32
  %105 = icmp slt i32 %97, %104
  store i1 %105, i1* %5
  %106 = load i32, i32* @x.528
  %107 = load i32, i32* @y.529
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  %119 = select i1 %117, i32 751439103, i32 115695558
  store i32 %119, i32* %20
  br label %222

; <label>:120:                                    ; preds = %21
  %121 = load volatile i1, i1* %5
  %122 = select i1 %121, i32 181082797, i32 962369120
  store i32 %122, i32* %20
  br label %222

; <label>:123:                                    ; preds = %21
  %124 = load volatile %class.Maxflow*, %class.Maxflow** %8
  %125 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %124, i32 0, i32 0
  %126 = load i32, i32* %11, align 4
  %127 = sext i32 %126 to i64
  %128 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.6"* %125, i64 %127) #3
  %129 = load i32*, i32** %14, align 8
  %130 = load i32, i32* %129, align 4
  %131 = sext i32 %130 to i64
  %132 = call dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EEixEm(%"class.std::vector.11"* %128, i64 %131) #3
  store %"struct.Maxflow<long long>::edge"* %132, %"struct.Maxflow<long long>::edge"** %15, align 8
  %133 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %15, align 8
  %134 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %133, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = icmp sgt i64 %135, 0
  %137 = select i1 %136, i32 -1731657046, i32 590377370
  store i32 %137, i32* %20
  br label %222

; <label>:138:                                    ; preds = %21
  %139 = load volatile %class.Maxflow*, %class.Maxflow** %8
  %140 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %139, i32 0, i32 1
  %141 = load i32, i32* %11, align 4
  %142 = sext i32 %141 to i64
  %143 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %140, i64 %142) #3
  %144 = load i32, i32* %143, align 4
  %145 = load volatile %class.Maxflow*, %class.Maxflow** %8
  %146 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %145, i32 0, i32 1
  %147 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %15, align 8
  %148 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %147, i32 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = sext i32 %149 to i64
  %151 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.12"* %146, i64 %150) #3
  %152 = load i32, i32* %151, align 4
  %153 = icmp slt i32 %144, %152
  %154 = select i1 %153, i32 1761345779, i32 590377370
  store i32 %154, i32* %20
  br label %222

; <label>:155:                                    ; preds = %21
  %156 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %15, align 8
  %157 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %156, i32 0, i32 0
  %158 = load i32, i32* %157, align 8
  %159 = load i32, i32* %12, align 4
  %160 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %15, align 8
  %161 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %160, i32 0, i32 1
  %162 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %161)
  %163 = load i64, i64* %162, align 8
  %164 = load volatile %class.Maxflow*, %class.Maxflow** %8
  %165 = call i64 @_ZN7MaxflowIxE5dfs_dEiix(%class.Maxflow* %164, i32 %158, i32 %159, i64 %163)
  store i64 %165, i64* %16, align 8
  %166 = load i64, i64* %16, align 8
  %167 = icmp sgt i64 %166, 0
  %168 = select i1 %167, i32 655067711, i32 -404964535
  store i32 %168, i32* %20
  br label %222

; <label>:169:                                    ; preds = %21
  %170 = load i64, i64* %16, align 8
  %171 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %15, align 8
  %172 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %171, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 0, %170
  %175 = add i64 %173, %174
  %176 = sub nsw i64 %173, %170
  store i64 %175, i64* %172, align 8
  %177 = load i64, i64* %16, align 8
  %178 = load volatile %class.Maxflow*, %class.Maxflow** %8
  %179 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %178, i32 0, i32 0
  %180 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %15, align 8
  %181 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %180, i32 0, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = sext i32 %182 to i64
  %184 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.6"* %179, i64 %183) #3
  %185 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %15, align 8
  %186 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %185, i32 0, i32 2
  %187 = load i32, i32* %186, align 8
  %188 = sext i32 %187 to i64
  %189 = call dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EEixEm(%"class.std::vector.11"* %184, i64 %188) #3
  %190 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %189, i32 0, i32 1
  %191 = load i64, i64* %190, align 8
  %192 = sub i64 %191, 100540312693804061
  %193 = add i64 %192, %177
  %194 = add i64 %193, 100540312693804061
  %195 = add nsw i64 %191, %177
  store i64 %194, i64* %190, align 8
  %196 = load i64, i64* %16, align 8
  store i64 %196, i64* %9, align 8
  store i32 1819293918, i32* %20
  br label %222

; <label>:197:                                    ; preds = %21
  store i32 590377370, i32* %20
  br label %222

; <label>:198:                                    ; preds = %21
  store i32 2039024249, i32* %20
  br label %222

; <label>:199:                                    ; preds = %21
  %200 = load i32*, i32** %14, align 8
  %201 = load i32, i32* %200, align 4
  %202 = add i32 %201, 1930588656
  %203 = add i32 %202, 1
  %204 = sub i32 %203, 1930588656
  %205 = add nsw i32 %201, 1
  store i32 %204, i32* %200, align 4
  store i32 874815287, i32* %20
  br label %222

; <label>:206:                                    ; preds = %21
  store i64 0, i64* %9, align 8
  store i32 1819293918, i32* %20
  br label %222

; <label>:207:                                    ; preds = %21
  %208 = load i64, i64* %9, align 8
  ret i64 %208

; <label>:209:                                    ; preds = %21
  %210 = load i64, i64* %13, align 8
  store i64 %210, i64* %9, align 8
  store i32 -1843067695, i32* %20
  br label %222

; <label>:211:                                    ; preds = %21
  %212 = load i32*, i32** %14, align 8
  %213 = load i32, i32* %212, align 4
  %214 = load volatile %class.Maxflow*, %class.Maxflow** %8
  %215 = getelementptr inbounds %class.Maxflow, %class.Maxflow* %214, i32 0, i32 0
  %216 = load i32, i32* %11, align 4
  %217 = sext i32 %216 to i64
  %218 = call dereferenceable(24) %"class.std::vector.11"* @_ZNSt6vectorIS_IN7MaxflowIxE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.6"* %215, i64 %217) #3
  %219 = call i64 @_ZNKSt6vectorIN7MaxflowIxE4edgeESaIS2_EE4sizeEv(%"class.std::vector.11"* %218) #3
  %220 = trunc i64 %219 to i32
  %221 = icmp slt i32 %213, %220
  store i32 1119228322, i32* %20
  br label %222

; <label>:222:                                    ; preds = %211, %209, %206, %199, %198, %197, %169, %155, %138, %123, %120, %95, %79, %73, %72, %44, %29, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %6, %"class.std::deque"* dereferenceable(80) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.534
  %3 = load i32, i32* @y.535
  %4 = add i32 %2, 484266121
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 484266121
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %114

; <label>:28:                                     ; preds = %1, %114
  %29 = alloca %"class.std::deque"*, align 8
  %30 = alloca %"struct.std::_Deque_iterator", align 8
  %31 = alloca %"struct.std::_Deque_iterator", align 8
  %32 = alloca i8*
  %33 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %29, align 8
  %34 = load %"class.std::deque"*, %"class.std::deque"** %29, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %30, %"class.std::deque"* %34) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %31, %"class.std::deque"* %34) #3
  %35 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %36 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %35) #3
  %37 = load i32, i32* @x.534
  %38 = load i32, i32* @y.535
  %39 = add i32 %37, 131967715
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 131967715
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %114

; <label>:63:                                     ; preds = %28
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"* %34, %"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator"* %31, %"class.std::allocator.14"* dereferenceable(1) %36)
          to label %64 unwind label %66

; <label>:64:                                     ; preds = %63
  %65 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %65) #3
  ret void

; <label>:66:                                     ; preds = %63
  %67 = load i32, i32* @x.534
  %68 = load i32, i32* @y.535
  %69 = sub i32 %67, -442601995
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -442601995
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %123

; <label>:81:                                     ; preds = %66, %123
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %32, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %33, align 4
  %85 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %85) #3
  %86 = load i32, i32* @x.534
  %87 = load i32, i32* @y.535
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %123

; <label>:111:                                    ; preds = %81
  br label %112

; <label>:112:                                    ; preds = %111
  %113 = load i8*, i8** %32, align 8
  call void @__clang_call_terminate(i8* %113) #11
  unreachable

; <label>:114:                                    ; preds = %28, %1
  %115 = alloca %"class.std::deque"*, align 8
  %116 = alloca %"struct.std::_Deque_iterator", align 8
  %117 = alloca %"struct.std::_Deque_iterator", align 8
  %118 = alloca i8*
  %119 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %115, align 8
  %120 = load %"class.std::deque"*, %"class.std::deque"** %115, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %116, %"class.std::deque"* %120) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %117, %"class.std::deque"* %120) #3
  %121 = bitcast %"class.std::deque"* %120 to %"class.std::_Deque_base"*
  %122 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %121) #3
  br label %28

; <label>:123:                                    ; preds = %81, %66
  %124 = landingpad { i8*, i32 }
          catch i8* null
  %125 = extractvalue { i8*, i32 } %124, 0
  store i8* %125, i8** %32, align 8
  %126 = extractvalue { i8*, i32 } %124, 1
  store i32 %126, i32* %33, align 4
  %127 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %127) #3
  br label %81
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.536
  %6 = load i32, i32* @y.537
  %7 = add i32 %5, 24617218
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 24617218
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1207054143, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1207054143, label %19
    i32 1227982436, label %39
    i32 1651978074, label %72
    i32 465052761, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1227982436, i32 465052761
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::queue"*, align 8
  %41 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load %"class.std::queue"*, %"class.std::queue"** %40, align 8
  %43 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %42, i32 0, i32 0
  %44 = load i32*, i32** %41, align 8
  call void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"* %43, i32* dereferenceable(4) %44)
  %45 = load i32, i32* @x.536
  %46 = load i32, i32* @y.537
  %47 = add i32 %45, -2045232853
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -2045232853
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1651978074, i32 465052761
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::queue"*, align 8
  %75 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %74, align 8
  store i32* %1, i32** %75, align 8
  %76 = load %"class.std::queue"*, %"class.std::queue"** %74, align 8
  %77 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %76, i32 0, i32 0
  %78 = load i32*, i32** %75, align 8
  call void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"* %77, i32* dereferenceable(4) %78)
  store i32 1227982436, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"* %4) #3
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.540
  %6 = load i32, i32* @y.541
  %7 = sub i32 %5, 531380231
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 531380231
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -657176718, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -657176718, label %19
    i32 -235301357, label %39
    i32 -183278613, label %59
    i32 1956151282, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -235301357, i32 1956151282
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %40, align 8
  %41 = load %"class.std::queue"*, %"class.std::queue"** %40, align 8
  %42 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %41, i32 0, i32 0
  %43 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %42) #3
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.540
  %45 = load i32, i32* @y.541
  %46 = sub i32 %44, 1762173629
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1762173629
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -183278613, i32 1956151282
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %62, align 8
  %63 = load %"class.std::queue"*, %"class.std::queue"** %62, align 8
  %64 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %63, i32 0, i32 0
  %65 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %64) #3
  store i32 -235301357, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE5beginEv(%"class.std::vector.11"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %3 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %5 = bitcast %"class.std::vector.11"* %4 to %"struct.std::_Vector_base.17"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %2, %"struct.Maxflow<long long>::edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %2, i32 0, i32 0
  %9 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %8, align 8
  ret %"struct.Maxflow<long long>::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Maxflow<long long>::edge"* @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EE3endEv(%"class.std::vector.11"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %3 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %5 = bitcast %"class.std::vector.11"* %4 to %"struct.std::_Vector_base.17"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %2, %"struct.Maxflow<long long>::edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %2, i32 0, i32 0
  %9 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %8, align 8
  ret %"struct.Maxflow<long long>::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %1, %"class.__gnu_cxx::__normal_iterator.24"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Maxflow<long long>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %5) #3
  %7 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Maxflow<long long>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %8) #3
  %10 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %9, align 8
  %11 = icmp ne %"struct.Maxflow<long long>::edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %3, i32 0, i32 0
  %5 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4, align 8
  ret %"struct.Maxflow<long long>::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.24"* @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %3, i32 0, i32 0
  %5 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %5, i32 1
  store %"struct.Maxflow<long long>::edge"* %6, %"struct.Maxflow<long long>::edge"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.24"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6)
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %5, i64 0)
          to label %7 unwind label %50

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.556
  %9 = load i32, i32* @y.557
  %10 = sub i32 %8, 11106612
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 11106612
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %9, 10
  %18 = and i1 %16, %17
  %19 = xor i1 %16, %17
  %20 = or i1 %18, %19
  %21 = or i1 %16, %17
  br i1 %20, label %22, label %88

; <label>:22:                                     ; preds = %7, %88
  %23 = load i32, i32* @x.556
  %24 = load i32, i32* @y.557
  %25 = sub i32 %23, -2035781285
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -2035781285
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %88

; <label>:49:                                     ; preds = %22
  ret void

; <label>:50:                                     ; preds = %1
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6) #3
  br label %54

; <label>:54:                                     ; preds = %50
  %55 = load i32, i32* @x.556
  %56 = load i32, i32* @y.557
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %89

; <label>:68:                                     ; preds = %54, %89
  %69 = load i8*, i8** %3, align 8
  %70 = load i32, i32* %4, align 4
  %71 = insertvalue { i8*, i32 } undef, i8* %69, 0
  %72 = insertvalue { i8*, i32 } %71, i32 %70, 1
  %73 = load i32, i32* @x.556
  %74 = load i32, i32* @y.557
  %75 = sub i32 %73, 774526684
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 774526684
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %89

; <label>:87:                                     ; preds = %68
  resume { i8*, i32 } %72

; <label>:88:                                     ; preds = %22, %7
  br label %22

; <label>:89:                                     ; preds = %68, %54
  %90 = load i8*, i8** %3, align 8
  %91 = load i32, i32* %4, align 4
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  br label %68
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.558
  %5 = load i32, i32* @y.559
  %6 = add i32 %4, 1651732346
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1651732346
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1299355105, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1299355105, label %18
    i32 181479254, label %38
    i32 -1827746666, label %61
    i32 -1413734356, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 181479254, i32 -1413734356
  store i32 %37, i32* %14
  br label %70

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  %40 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40 to %"class.std::allocator.14"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.14"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40, i32 0, i32 0
  store i32** null, i32*** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40, i32 0, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %44) #3
  %45 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %45) #3
  %46 = load i32, i32* @x.558
  %47 = load i32, i32* @y.559
  %48 = sub i32 %46, 400468691
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 400468691
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1827746666, i32 -1413734356
  store i32 %60, i32* %14
  br label %70

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %63, align 8
  %64 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %63, align 8
  %65 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64 to %"class.std::allocator.14"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.14"* %65) #3
  %66 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 0
  store i32** null, i32*** %66, align 8
  %67 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 1
  store i64 0, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %68) #3
  %69 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %69) #3
  store i32 181479254, i32* %14
  br label %70

; <label>:70:                                     ; preds = %62, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %15 = udiv i64 %13, %14
  %16 = add i64 %15, -3475691893290241088
  %17 = add i64 %16, 1
  %18 = sub i64 %17, -3475691893290241088
  %19 = add i64 %15, 1
  store i64 %18, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %20 = load i64, i64* %5, align 8
  %21 = sub i64 0, %20
  %22 = sub i64 0, 2
  %23 = add i64 %21, %22
  %24 = sub i64 0, %23
  %25 = add i64 %20, 2
  store i64 %24, i64* %7, align 8
  %26 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 1
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %12, i64 %32)
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34, i32 0, i32 0
  store i32** %33, i32*** %35, align 8
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %36, i32 0, i32 0
  %38 = load i32**, i32*** %37, align 8
  %39 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %39, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = load i64, i64* %5, align 8
  %43 = sub i64 %41, 2193762268361081643
  %44 = sub i64 %43, %42
  %45 = add i64 %44, 2193762268361081643
  %46 = sub i64 %41, %42
  %47 = udiv i64 %45, 2
  %48 = getelementptr inbounds i32*, i32** %38, i64 %47
  store i32** %48, i32*** %8, align 8
  %49 = load i32**, i32*** %8, align 8
  %50 = load i64, i64* %5, align 8
  %51 = getelementptr inbounds i32*, i32** %49, i64 %50
  store i32** %51, i32*** %9, align 8
  %52 = load i32**, i32*** %8, align 8
  %53 = load i32**, i32*** %9, align 8
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"* %12, i32** %52, i32** %53)
          to label %54 unwind label %55

; <label>:54:                                     ; preds = %2
  br label %107

; <label>:55:                                     ; preds = %2
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %10, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %11, align 4
  br label %59

; <label>:59:                                     ; preds = %55
  %60 = load i8*, i8** %10, align 8
  %61 = call i8* @__cxa_begin_catch(i8* %60) #3
  %62 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %62, i32 0, i32 0
  %64 = load i32**, i32*** %63, align 8
  %65 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %65, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %12, i32** %64, i64 %67) #3
  %68 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 0
  store i32** null, i32*** %69, align 8
  %70 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %70, i32 0, i32 1
  store i64 0, i64* %71, align 8
  invoke void @__cxa_rethrow() #12
          to label %141 unwind label %72

; <label>:72:                                     ; preds = %59
  %73 = load i32, i32* @x.560
  %74 = load i32, i32* @y.561
  %75 = add i32 %73, -158767875
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -158767875
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %142

; <label>:87:                                     ; preds = %72, %142
  %88 = landingpad { i8*, i32 }
          cleanup
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %10, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %11, align 4
  %91 = load i32, i32* @x.560
  %92 = load i32, i32* @y.561
  %93 = add i32 %91, -1495622337
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, -1495622337
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %142

; <label>:105:                                    ; preds = %87
  invoke void @__cxa_end_catch()
          to label %106 unwind label %138

; <label>:106:                                    ; preds = %105
  br label %133

; <label>:107:                                    ; preds = %54
  %108 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %108, i32 0, i32 2
  %110 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %109, i32** %110) #3
  %111 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %111, i32 0, i32 3
  %113 = load i32**, i32*** %9, align 8
  %114 = getelementptr inbounds i32*, i32** %113, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %112, i32** %114) #3
  %115 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %115, i32 0, i32 2
  %117 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %116, i32 0, i32 1
  %118 = load i32*, i32** %117, align 8
  %119 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %119, i32 0, i32 2
  %121 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %120, i32 0, i32 0
  store i32* %118, i32** %121, align 8
  %122 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %122, i32 0, i32 3
  %124 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %123, i32 0, i32 1
  %125 = load i32*, i32** %124, align 8
  %126 = load i64, i64* %4, align 8
  %127 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %128 = urem i64 %126, %127
  %129 = getelementptr inbounds i32, i32* %125, i64 %128
  %130 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %130, i32 0, i32 3
  %132 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %131, i32 0, i32 0
  store i32* %129, i32** %132, align 8
  ret void

; <label>:133:                                    ; preds = %106
  %134 = load i8*, i8** %10, align 8
  %135 = load i32, i32* %11, align 4
  %136 = insertvalue { i8*, i32 } undef, i8* %134, 0
  %137 = insertvalue { i8*, i32 } %136, i32 %135, 1
  resume { i8*, i32 } %137

; <label>:138:                                    ; preds = %105
  %139 = landingpad { i8*, i32 }
          catch i8* null
  %140 = extractvalue { i8*, i32 } %139, 0
  call void @__clang_call_terminate(i8* %140) #11
  unreachable

; <label>:141:                                    ; preds = %59
  unreachable

; <label>:142:                                    ; preds = %87, %72
  %143 = landingpad { i8*, i32 }
          cleanup
  %144 = extractvalue { i8*, i32 } %143, 0
  store i8* %144, i8** %10, align 8
  %145 = extractvalue { i8*, i32 } %143, 1
  store i32 %145, i32* %11, align 4
  br label %87
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator.14"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.14"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.564
  %5 = load i32, i32* @y.565
  %6 = sub i32 %4, 631958040
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 631958040
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 505762572, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 505762572, label %18
    i32 -1369879436, label %38
    i32 -1938790049, label %72
    i32 1348544804, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1369879436, i32 1348544804
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %39, align 8
  %40 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 0
  store i32* null, i32** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 1
  store i32* null, i32** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 2
  store i32* null, i32** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 3
  store i32** null, i32*** %44, align 8
  %45 = load i32, i32* @x.564
  %46 = load i32, i32* @y.565
  %47 = add i32 %45, -1054823744
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1054823744
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1938790049, i32 1348544804
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %74, align 8
  %75 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 0
  store i32* null, i32** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 1
  store i32* null, i32** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 2
  store i32* null, i32** %78, align 8
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 3
  store i32** null, i32*** %79, align 8
  store i32 -1369879436, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #5 comdat {
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3
  %6 = alloca i32
  store i32 -1459681772, i32* %6
  %7 = alloca i64
  br label %8

; <label>:8:                                      ; preds = %1, %66
  %9 = load i32, i32* %6
  switch i32 %9, label %10 [
    i32 -1459681772, label %11
    i32 2111245951, label %15
    i32 -1614082517, label %18
    i32 -1804822959, label %19
    i32 -1128627264, label %47
    i32 -1423756427, label %63
    i32 1405999229, label %65
  ]

; <label>:10:                                     ; preds = %8
  br label %66

; <label>:11:                                     ; preds = %8
  %12 = load volatile i64, i64* %3
  %13 = icmp ult i64 %12, 512
  %14 = select i1 %13, i32 2111245951, i32 -1614082517
  store i32 %14, i32* %6
  br label %66

; <label>:15:                                     ; preds = %8
  %16 = load i64, i64* %4, align 8
  %17 = udiv i64 512, %16
  store i32 -1804822959, i32* %6
  store i64 %17, i64* %7
  br label %66

; <label>:18:                                     ; preds = %8
  store i32 -1804822959, i32* %6
  store i64 1, i64* %7
  br label %66

; <label>:19:                                     ; preds = %8
  %20 = load i64, i64* %7
  store i64 %20, i64* %2
  %21 = load i32, i32* @x.566
  %22 = load i32, i32* @y.567
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -1128627264, i32 1405999229
  store i32 %46, i32* %6
  br label %66

; <label>:47:                                     ; preds = %8
  %48 = load i32, i32* @x.566
  %49 = load i32, i32* @y.567
  %50 = add i32 %48, -1670733731
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1670733731
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1423756427, i32 1405999229
  store i32 %62, i32* %6
  br label %66

; <label>:63:                                     ; preds = %8
  %64 = load volatile i64, i64* %2
  ret i64 %64

; <label>:65:                                     ; preds = %8
  store i32 -1128627264, i32* %6
  br label %66

; <label>:66:                                     ; preds = %65, %47, %19, %18, %15, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.25", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.25"* sret %5, %"class.std::_Deque_base"* %8) #3
  %9 = load i64, i64* %4, align 8
  %10 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.25"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.25"* %5) #3
  ret i32** %10

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %6, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %7, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.25"* %5) #3
  br label %16

; <label>:16:                                     ; preds = %12
  %17 = load i8*, i8** %6, align 8
  %18 = load i32, i32* %7, align 4
  %19 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load i32**, i32*** %5, align 8
  store i32** %11, i32*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %20, %3
  %13 = load i32**, i32*** %7, align 8
  %14 = load i32**, i32*** %6, align 8
  %15 = icmp ult i32** %13, %14
  br i1 %15, label %16, label %32

; <label>:16:                                     ; preds = %12
  %17 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %18 unwind label %23

; <label>:18:                                     ; preds = %16
  %19 = load i32**, i32*** %7, align 8
  store i32* %17, i32** %19, align 8
  br label %20

; <label>:20:                                     ; preds = %18
  %21 = load i32**, i32*** %7, align 8
  %22 = getelementptr inbounds i32*, i32** %21, i32 1
  store i32** %22, i32*** %7, align 8
  br label %12

; <label>:23:                                     ; preds = %16
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %8, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %9, align 4
  br label %27

; <label>:27:                                     ; preds = %23
  %28 = load i8*, i8** %8, align 8
  %29 = call i8* @__cxa_begin_catch(i8* %28) #3
  %30 = load i32**, i32*** %5, align 8
  %31 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %10, i32** %30, i32** %31) #3
  invoke void @__cxa_rethrow() #12
          to label %141 unwind label %33

; <label>:32:                                     ; preds = %12
  br label %91

; <label>:33:                                     ; preds = %27
  %34 = load i32, i32* @x.570
  %35 = load i32, i32* @y.571
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %142

; <label>:59:                                     ; preds = %33, %142
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %8, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %9, align 4
  %63 = load i32, i32* @x.570
  %64 = load i32, i32* @y.571
  %65 = sub i32 %63, 903345796
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 903345796
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %142

; <label>:89:                                     ; preds = %59
  invoke void @__cxa_end_catch()
          to label %90 unwind label %138

; <label>:90:                                     ; preds = %89
  br label %133

; <label>:91:                                     ; preds = %32
  %92 = load i32, i32* @x.570
  %93 = load i32, i32* @y.571
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %146

; <label>:105:                                    ; preds = %91, %146
  %106 = load i32, i32* @x.570
  %107 = load i32, i32* @y.571
  %108 = add i32 %106, 1930668264
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, 1930668264
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %146

; <label>:132:                                    ; preds = %105
  ret void

; <label>:133:                                    ; preds = %90
  %134 = load i8*, i8** %8, align 8
  %135 = load i32, i32* %9, align 4
  %136 = insertvalue { i8*, i32 } undef, i8* %134, 0
  %137 = insertvalue { i8*, i32 } %136, i32 %135, 1
  resume { i8*, i32 } %137

; <label>:138:                                    ; preds = %89
  %139 = landingpad { i8*, i32 }
          catch i8* null
  %140 = extractvalue { i8*, i32 } %139, 0
  call void @__clang_call_terminate(i8* %140) #11
  unreachable

; <label>:141:                                    ; preds = %27
  unreachable

; <label>:142:                                    ; preds = %59, %33
  %143 = landingpad { i8*, i32 }
          cleanup
  %144 = extractvalue { i8*, i32 } %143, 0
  store i8* %144, i8** %8, align 8
  %145 = extractvalue { i8*, i32 } %143, 1
  store i32 %145, i32* %9, align 4
  br label %59

; <label>:146:                                    ; preds = %105, %91
  br label %105
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"*, i32**, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.572
  %5 = load i32, i32* @y.573
  %6 = sub i32 %4, 1180136487
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1180136487
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %103

; <label>:18:                                     ; preds = %3, %103
  %19 = alloca %"class.std::_Deque_base"*, align 8
  %20 = alloca i32**, align 8
  %21 = alloca i64, align 8
  %22 = alloca %"class.std::allocator.25", align 1
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %19, align 8
  store i32** %1, i32*** %20, align 8
  store i64 %2, i64* %21, align 8
  %25 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %19, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.25"* sret %22, %"class.std::_Deque_base"* %25) #3
  %26 = load i32**, i32*** %20, align 8
  %27 = load i64, i64* %21, align 8
  %28 = load i32, i32* @x.572
  %29 = load i32, i32* @y.573
  %30 = add i32 %28, -2013312902
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -2013312902
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %103

; <label>:42:                                     ; preds = %18
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.25"* dereferenceable(1) %22, i32** %26, i64 %27)
          to label %43 unwind label %44

; <label>:43:                                     ; preds = %42
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.25"* %22) #3
  ret void

; <label>:44:                                     ; preds = %42
  %45 = load i32, i32* @x.572
  %46 = load i32, i32* @y.573
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %113

; <label>:70:                                     ; preds = %44, %113
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %23, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %24, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.25"* %22) #3
  %74 = load i32, i32* @x.572
  %75 = load i32, i32* @y.573
  %76 = add i32 %74, -1392901332
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, -1392901332
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %113

; <label>:100:                                    ; preds = %70
  br label %101

; <label>:101:                                    ; preds = %100
  %102 = load i8*, i8** %23, align 8
  call void @__clang_call_terminate(i8* %102) #11
  unreachable

; <label>:103:                                    ; preds = %18, %3
  %104 = alloca %"class.std::_Deque_base"*, align 8
  %105 = alloca i32**, align 8
  %106 = alloca i64, align 8
  %107 = alloca %"class.std::allocator.25", align 1
  %108 = alloca i8*
  %109 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %104, align 8
  store i32** %1, i32*** %105, align 8
  store i64 %2, i64* %106, align 8
  %110 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %104, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.25"* sret %107, %"class.std::_Deque_base"* %110) #3
  %111 = load i32**, i32*** %105, align 8
  %112 = load i64, i64* %106, align 8
  br label %18

; <label>:113:                                    ; preds = %70, %44
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  store i8* %115, i8** %23, align 8
  %116 = extractvalue { i8*, i32 } %114, 1
  store i32 %116, i32* %24, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.25"* %22) #3
  br label %70
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.25"* noalias sret, %"class.std::_Deque_base"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.576
  %6 = load i32, i32* @y.577
  %7 = add i32 %5, -1021191059
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1021191059
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1449806789, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1449806789, label %19
    i32 1794845520, label %39
    i32 1236486165, label %69
    i32 1635346528, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1794845520, i32 1635346528
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %42 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %41) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.25"* %0, %"class.std::allocator.14"* dereferenceable(1) %42) #3
  %43 = load i32, i32* @x.576
  %44 = load i32, i32* @y.577
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1236486165, i32 1635346528
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  ret void

; <label>:70:                                     ; preds = %16
  %71 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %71, align 8
  %72 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %71, align 8
  %73 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %72) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.25"* %0, %"class.std::allocator.14"* dereferenceable(1) %73) #3
  store i32 1794845520, i32* %15
  br label %74

; <label>:74:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.25"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i32**
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.578
  %7 = load i32, i32* @y.579
  %8 = sub i32 %6, 153007803
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 153007803
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 903749442, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 903749442, label %20
    i32 -2141100780, label %40
    i32 -2072621816, label %74
    i32 -1481742524, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -2141100780, i32 -1481742524
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.25"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %41, align 8
  %44 = bitcast %"class.std::allocator.25"* %43 to %"class.__gnu_cxx::new_allocator.26"*
  %45 = load i64, i64* %42, align 8
  %46 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"* %44, i64 %45, i8* null)
  store i32** %46, i32*** %3
  %47 = load i32, i32* @x.578
  %48 = load i32, i32* @y.579
  %49 = sub i32 %47, 296769279
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 296769279
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -2072621816, i32 -1481742524
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  %75 = load volatile i32**, i32*** %3
  ret i32** %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.25"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %77, align 8
  store i64 %1, i64* %78, align 8
  %79 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %77, align 8
  %80 = bitcast %"class.std::allocator.25"* %79 to %"class.__gnu_cxx::new_allocator.26"*
  %81 = load i64, i64* %78, align 8
  %82 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"* %80, i64 %81, i8* null)
  store i32 -2141100780, i32* %16
  br label %83

; <label>:83:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.25"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %2, align 8
  %3 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %2, align 8
  %4 = bitcast %"class.std::allocator.25"* %3 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.26"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.14"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.14"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.582
  %6 = load i32, i32* @y.583
  %7 = add i32 %5, -1355877545
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1355877545
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1191832937, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1191832937, label %19
    i32 475799551, label %27
    i32 1039670988, label %47
    i32 339771893, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 475799551, i32 339771893
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %28, align 8
  %29 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30 to %"class.std::allocator.14"*
  store %"class.std::allocator.14"* %31, %"class.std::allocator.14"** %2
  %32 = load i32, i32* @x.582
  %33 = load i32, i32* @y.583
  %34 = add i32 %32, -1336947864
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1336947864
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1039670988, i32 339771893
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::allocator.14"*, %"class.std::allocator.14"** %2
  ret %"class.std::allocator.14"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %50, align 8
  %51 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %50, align 8
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52 to %"class.std::allocator.14"*
  store i32 475799551, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.25"*, %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.25"*, align 8
  %4 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %3, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %4, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %3, align 8
  %6 = bitcast %"class.std::allocator.25"* %5 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.26"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.586
  %5 = load i32, i32* @y.587
  %6 = sub i32 %4, -1966100383
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1966100383
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1613633031, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1613633031, label %18
    i32 -1839347049, label %38
    i32 1447685717, label %55
    i32 360580368, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1839347049, i32 360580368
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %39, align 8
  %41 = load i32, i32* @x.586
  %42 = load i32, i32* @y.587
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1447685717, i32 360580368
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %57, align 8
  store i32 -1839347049, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1754986395, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1754986395, label %16
    i32 1782634849, label %21
    i32 1154756680, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1782634849, i32 1154756680
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i32**
  ret i32** %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.590
  %5 = load i32, i32* @y.591
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1922724070, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1922724070, label %17
    i32 -2095888963, label %25
    i32 1003161172, label %55
    i32 -1221712410, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -2095888963, i32 -1221712410
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %26, align 8
  %28 = load i32, i32* @x.590
  %29 = load i32, i32* @y.591
  %30 = sub i32 %28, 1373142727
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 1373142727
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1003161172, i32 -1221712410
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret i64 2305843009213693951

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %57, align 8
  store i32 -2095888963, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.14"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %7 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.14"* dereferenceable(1) %5, i64 %6)
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #5 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base"*
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  store %"class.std::_Deque_base"* %9, %"class.std::_Deque_base"** %4
  %10 = load i32**, i32*** %6, align 8
  store i32** %10, i32*** %8, align 8
  %11 = alloca i32
  store i32 -1067685844, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %28
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1067685844, label %15
    i32 1110947489, label %20
    i32 -1409702354, label %24
    i32 1451423758, label %27
  ]

; <label>:14:                                     ; preds = %12
  br label %28

; <label>:15:                                     ; preds = %12
  %16 = load i32**, i32*** %8, align 8
  %17 = load i32**, i32*** %7, align 8
  %18 = icmp ult i32** %16, %17
  %19 = select i1 %18, i32 1110947489, i32 1451423758
  store i32 %19, i32* %11
  br label %28

; <label>:20:                                     ; preds = %12
  %21 = load i32**, i32*** %8, align 8
  %22 = load i32*, i32** %21, align 8
  %23 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %23, i32* %22) #3
  store i32 -1409702354, i32* %11
  br label %28

; <label>:24:                                     ; preds = %12
  %25 = load i32**, i32*** %8, align 8
  %26 = getelementptr inbounds i32*, i32** %25, i32 1
  store i32** %26, i32*** %8, align 8
  store i32 -1067685844, i32* %11
  br label %28

; <label>:27:                                     ; preds = %12
  ret void

; <label>:28:                                     ; preds = %24, %20, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6 to %"class.std::allocator.14"*
  %8 = load i32*, i32** %4, align 8
  %9 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %10 unwind label %107

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* @x.598
  %12 = load i32, i32* @y.599
  %13 = add i32 %11, 340240071
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 340240071
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %110

; <label>:37:                                     ; preds = %10, %110
  %38 = load i32, i32* @x.598
  %39 = load i32, i32* @y.599
  %40 = add i32 %38, 50893602
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 50893602
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %110

; <label>:64:                                     ; preds = %37
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.14"* dereferenceable(1) %7, i32* %8, i64 %9)
          to label %65 unwind label %107

; <label>:65:                                     ; preds = %64
  %66 = load i32, i32* @x.598
  %67 = load i32, i32* @y.599
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %111

; <label>:79:                                     ; preds = %65, %111
  %80 = load i32, i32* @x.598
  %81 = load i32, i32* @y.599
  %82 = sub i32 %80, -1589675095
  %83 = sub i32 %82, 1
  %84 = add i32 %83, -1589675095
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 false, true
  %93 = and i1 %90, false
  %94 = and i1 %88, %92
  %95 = and i1 %91, false
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 false, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  br i1 %104, label %106, label %111

; <label>:106:                                    ; preds = %79
  ret void

; <label>:107:                                    ; preds = %64, %2
  %108 = landingpad { i8*, i32 }
          catch i8* null
  %109 = extractvalue { i8*, i32 } %108, 0
  call void @__clang_call_terminate(i8* %109) #11
  unreachable

; <label>:110:                                    ; preds = %37, %10
  br label %37

; <label>:111:                                    ; preds = %79, %65
  br label %79
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.25"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.25"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = bitcast %"class.std::allocator.25"* %7 to %"class.__gnu_cxx::new_allocator.26"*
  %9 = load i32**, i32*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.26"* %8, i32** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.26"*, i32**, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %8 = load i32**, i32*** %5, align 8
  %9 = bitcast i32** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.604
  %2 = load i32, i32* @y.605
  %3 = add i32 %1, -1444671446
  %4 = sub i32 %3, 1
  %5 = sub i32 %4, -1444671446
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %48

; <label>:15:                                     ; preds = %0, %48
  %16 = load i32, i32* @x.604
  %17 = load i32, i32* @y.605
  %18 = sub i32 %16, -1659846849
  %19 = sub i32 %18, 1
  %20 = add i32 %19, -1659846849
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %48

; <label>:42:                                     ; preds = %15
  %43 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %44 unwind label %45

; <label>:44:                                     ; preds = %42
  ret i64 %43

; <label>:45:                                     ; preds = %42
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  call void @__clang_call_terminate(i8* %47) #11
  unreachable

; <label>:48:                                     ; preds = %15, %0
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::deque"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.606
  %6 = load i32, i32* @y.607
  %7 = add i32 %5, 2018344383
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2018344383
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 214793250, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 214793250, label %19
    i32 456012107, label %39
    i32 94543804, label %69
    i32 -652049704, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 456012107, i32 -652049704
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %40, align 8
  %41 = load %"class.std::deque"*, %"class.std::deque"** %40, align 8
  store %"class.std::deque"* %41, %"class.std::deque"** %2
  %42 = load i32, i32* @x.606
  %43 = load i32, i32* @y.607
  %44 = sub i32 %42, -302692654
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -302692654
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 94543804, i32 -652049704
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"class.std::deque"*, %"class.std::deque"** %2
  ret %"class.std::deque"* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %72, align 8
  %73 = load %"class.std::deque"*, %"class.std::deque"** %72, align 8
  store i32 456012107, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to %"class.std::_Deque_base"*
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  %9 = bitcast %"class.std::deque"* %8 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %6, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %4, align 8
  %7 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %8) #3
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %7, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  ret %"class.std::_Deque_base"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #3
  %12 = call dereferenceable(1) %"class.std::allocator.14"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.14"* dereferenceable(1) %11) #3
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9, %"class.std::allocator.14"* dereferenceable(1) %12) #3
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %23

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %15, i32 0, i32 0
  %17 = load i32**, i32*** %16, align 8
  %18 = icmp ne i32** %17, null
  br i1 %18, label %19, label %27

; <label>:19:                                     ; preds = %13
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %21 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %22 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %21, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %22) #3
  br label %27

; <label>:23:                                     ; preds = %2
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %6, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  br label %28

; <label>:27:                                     ; preds = %19, %13
  ret void

; <label>:28:                                     ; preds = %23
  %29 = load i32, i32* @x.614
  %30 = load i32, i32* @y.615
  %31 = add i32 %29, -2055078892
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -2055078892
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  br i1 %53, label %55, label %75

; <label>:55:                                     ; preds = %28, %75
  %56 = load i8*, i8** %6, align 8
  %57 = load i32, i32* %7, align 4
  %58 = insertvalue { i8*, i32 } undef, i8* %56, 0
  %59 = insertvalue { i8*, i32 } %58, i32 %57, 1
  %60 = load i32, i32* @x.614
  %61 = load i32, i32* @y.615
  %62 = add i32 %60, -1296294732
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -1296294732
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %75

; <label>:74:                                     ; preds = %55
  resume { i8*, i32 } %59

; <label>:75:                                     ; preds = %55, %28
  %76 = load i8*, i8** %6, align 8
  %77 = load i32, i32* %7, align 4
  %78 = insertvalue { i8*, i32 } undef, i8* %76, 0
  %79 = insertvalue { i8*, i32 } %78, i32 %77, 1
  br label %55
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.14"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.14"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %2, align 8
  %3 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %2, align 8
  ret %"class.std::allocator.14"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.14"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.14"*
  ret %"class.std::allocator.14"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.620
  %6 = load i32, i32* @y.621
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -317880643, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -317880643, label %18
    i32 536175561, label %26
    i32 -1791708832, label %64
    i32 1654552206, label %65
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 536175561, i32 1654552206
  store i32 %25, i32* %14
  br label %76

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %28 = alloca %"class.std::allocator.14"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %27, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %28, align 8
  %29 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29 to %"class.std::allocator.14"*
  %31 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %28, align 8
  %32 = call dereferenceable(1) %"class.std::allocator.14"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.14"* dereferenceable(1) %31) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.14"* %30, %"class.std::allocator.14"* dereferenceable(1) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 0
  store i32** null, i32*** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 1
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %35) #3
  %36 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %36) #3
  %37 = load i32, i32* @x.620
  %38 = load i32, i32* @y.621
  %39 = add i32 %37, -1132307161
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1132307161
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1791708832, i32 1654552206
  store i32 %63, i32* %14
  br label %76

; <label>:64:                                     ; preds = %15
  ret void

; <label>:65:                                     ; preds = %15
  %66 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %67 = alloca %"class.std::allocator.14"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %66, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %67, align 8
  %68 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %66, align 8
  %69 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68 to %"class.std::allocator.14"*
  %70 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %67, align 8
  %71 = call dereferenceable(1) %"class.std::allocator.14"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.14"* dereferenceable(1) %70) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.14"* %69, %"class.std::allocator.14"* dereferenceable(1) %71) #3
  %72 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 0
  store i32** null, i32*** %72, align 8
  %73 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 1
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %74) #3
  %75 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %75) #3
  store i32 536175561, i32* %14
  br label %76

; <label>:76:                                     ; preds = %65, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %10 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  %13 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %12, i32*** dereferenceable(8) %14) #3
  %15 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  %16 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %17) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %1, %"class.__gnu_cxx::new_allocator.15"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.626
  %6 = load i32, i32* @y.627
  %7 = sub i32 %5, -90118710
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -90118710
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2085932426, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %84
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2085932426, label %19
    i32 -1638479772, label %27
    i32 1935961879, label %68
    i32 2036375461, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %84

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1638479772, i32 2036375461
  store i32 %26, i32* %15
  br label %84

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator"*, align 8
  %29 = alloca %"struct.std::_Deque_iterator"*, align 8
  %30 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %28, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %29, align 8
  %31 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %32 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %31) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #3
  %33 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %34 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %33) #3
  %35 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %36 = bitcast %"struct.std::_Deque_iterator"* %35 to i8*
  %37 = bitcast %"struct.std::_Deque_iterator"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 32, i32 8, i1 false)
  %38 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %30) #3
  %39 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %40 = bitcast %"struct.std::_Deque_iterator"* %39 to i8*
  %41 = bitcast %"struct.std::_Deque_iterator"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 32, i32 8, i1 false)
  %42 = load i32, i32* @x.626
  %43 = load i32, i32* @y.627
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1935961879, i32 2036375461
  store i32 %67, i32* %15
  br label %84

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca %"struct.std::_Deque_iterator"*, align 8
  %71 = alloca %"struct.std::_Deque_iterator"*, align 8
  %72 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %70, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %71, align 8
  %73 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %70, align 8
  %74 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %73) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %72, %"struct.std::_Deque_iterator"* dereferenceable(32) %74) #3
  %75 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %71, align 8
  %76 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %75) #3
  %77 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %70, align 8
  %78 = bitcast %"struct.std::_Deque_iterator"* %77 to i8*
  %79 = bitcast %"struct.std::_Deque_iterator"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 32, i32 8, i1 false)
  %80 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %72) #3
  %81 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %71, align 8
  %82 = bitcast %"struct.std::_Deque_iterator"* %81 to i8*
  %83 = bitcast %"struct.std::_Deque_iterator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 32, i32 8, i1 false)
  store i32 -1638479772, i32* %15
  br label %84

; <label>:84:                                     ; preds = %69, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8), i32*** dereferenceable(8)) #5 comdat {
  %3 = alloca i32***, align 8
  %4 = alloca i32***, align 8
  %5 = alloca i32**, align 8
  store i32*** %0, i32**** %3, align 8
  store i32*** %1, i32**** %4, align 8
  %6 = load i32***, i32**** %3, align 8
  %7 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %6) #3
  %8 = load i32**, i32*** %7, align 8
  store i32** %8, i32*** %5, align 8
  %9 = load i32***, i32**** %4, align 8
  %10 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %9) #3
  %11 = load i32**, i32*** %10, align 8
  %12 = load i32***, i32**** %3, align 8
  store i32** %11, i32*** %12, align 8
  %13 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %5) #3
  %14 = load i32**, i32*** %13, align 8
  %15 = load i32***, i32**** %4, align 8
  store i32** %14, i32*** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.630
  %6 = load i32, i32* @y.631
  %7 = add i32 %5, 974624201
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 974624201
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 451110936, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 451110936, label %19
    i32 898282501, label %39
    i32 -491702082, label %80
    i32 1259239856, label %81
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 898282501, i32 1259239856
  store i32 %38, i32* %15
  br label %95

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  %41 = alloca i64*, align 8
  %42 = alloca i64, align 8
  store i64* %0, i64** %40, align 8
  store i64* %1, i64** %41, align 8
  %43 = load i64*, i64** %40, align 8
  %44 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %43) #3
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = load i64*, i64** %41, align 8
  %47 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %46) #3
  %48 = load i64, i64* %47, align 8
  %49 = load i64*, i64** %40, align 8
  store i64 %48, i64* %49, align 8
  %50 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %42) #3
  %51 = load i64, i64* %50, align 8
  %52 = load i64*, i64** %41, align 8
  store i64 %51, i64* %52, align 8
  %53 = load i32, i32* @x.630
  %54 = load i32, i32* @y.631
  %55 = sub i32 %53, 525491570
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 525491570
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -491702082, i32 1259239856
  store i32 %79, i32* %15
  br label %95

; <label>:80:                                     ; preds = %16
  ret void

; <label>:81:                                     ; preds = %16
  %82 = alloca i64*, align 8
  %83 = alloca i64*, align 8
  %84 = alloca i64, align 8
  store i64* %0, i64** %82, align 8
  store i64* %1, i64** %83, align 8
  %85 = load i64*, i64** %82, align 8
  %86 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %85) #3
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %84, align 8
  %88 = load i64*, i64** %83, align 8
  %89 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %88) #3
  %90 = load i64, i64* %89, align 8
  %91 = load i64*, i64** %82, align 8
  store i64 %90, i64* %91, align 8
  %92 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %84) #3
  %93 = load i64, i64* %92, align 8
  %94 = load i64*, i64** %83, align 8
  store i64 %93, i64* %94, align 8
  store i32 898282501, i32* %15
  br label %95

; <label>:95:                                     ; preds = %81, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.632
  %6 = load i32, i32* @y.633
  %7 = add i32 %5, -736306654
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -736306654
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 896945220, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 896945220, label %19
    i32 1333215356, label %39
    i32 -1413967239, label %68
    i32 -1452585763, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1333215356, i32 -1452585763
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  %41 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  store %"struct.std::_Deque_iterator"* %41, %"struct.std::_Deque_iterator"** %2
  %42 = load i32, i32* @x.632
  %43 = load i32, i32* @y.633
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1413967239, i32 -1452585763
  store i32 %67, i32* %15
  br label %73

; <label>:68:                                     ; preds = %16
  %69 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2
  ret %"struct.std::_Deque_iterator"* %69

; <label>:70:                                     ; preds = %16
  %71 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %71, align 8
  %72 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %71, align 8
  store i32 1333215356, i32* %15
  br label %73

; <label>:73:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 2
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %19, i32 0, i32 3
  %21 = load i32**, i32*** %20, align 8
  store i32** %21, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8)) #5 comdat {
  %2 = alloca i32***, align 8
  store i32*** %0, i32**** %2, align 8
  %3 = load i32***, i32**** %2, align 8
  ret i32*** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.14"* dereferenceable(1)) #5 comdat align 2 {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %6, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.644
  %6 = load i32, i32* @y.645
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -237968942, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %54
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -237968942, label %18
    i32 -1267819563, label %26
    i32 -612227305, label %47
    i32 1174504509, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %54

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1267819563, i32 1174504509
  store i32 %25, i32* %14
  br label %54

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %27, align 8
  %28 = load %"class.std::deque"*, %"class.std::deque"** %27, align 8
  %29 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %31) #3
  %32 = load i32, i32* @x.644
  %33 = load i32, i32* @y.645
  %34 = add i32 %32, -1697348161
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1697348161
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -612227305, i32 1174504509
  store i32 %46, i32* %14
  br label %54

; <label>:47:                                     ; preds = %15
  ret void

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %49, align 8
  %50 = load %"class.std::deque"*, %"class.std::deque"** %49, align 8
  %51 = bitcast %"class.std::deque"* %50 to %"class.std::_Deque_base"*
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %53) #3
  store i32 -1267819563, i32* %14
  br label %54

; <label>:54:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %5, %"class.std::_Deque_base"** %3
  %6 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 0
  %9 = load i32**, i32*** %8, align 8
  store i32** %9, i32*** %2
  %10 = alloca i32
  store i32 -296164171, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %89
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -296164171, label %14
    i32 464756266, label %18
    i32 -1582853409, label %40
    i32 936310703, label %67
    i32 2089940066, label %85
    i32 -1428161377, label %86
  ]

; <label>:13:                                     ; preds = %11
  br label %89

; <label>:14:                                     ; preds = %11
  %15 = load volatile i32**, i32*** %2
  %16 = icmp ne i32** %15, null
  %17 = select i1 %16, i32 464756266, i32 -1582853409
  store i32 %17, i32* %10
  br label %89

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 2
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 3
  %23 = load i32**, i32*** %22, align 8
  %24 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %25 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %25, i32 0, i32 3
  %27 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %26, i32 0, i32 3
  %28 = load i32**, i32*** %27, align 8
  %29 = getelementptr inbounds i32*, i32** %28, i64 1
  %30 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %30, i32** %23, i32** %29) #3
  %31 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 0
  %34 = load i32**, i32*** %33, align 8
  %35 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %36, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %39, i32** %34, i64 %38) #3
  store i32 -1582853409, i32* %10
  br label %89

; <label>:40:                                     ; preds = %11
  %41 = load i32, i32* @x.646
  %42 = load i32, i32* @y.647
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 936310703, i32 -1428161377
  store i32 %66, i32* %10
  br label %89

; <label>:67:                                     ; preds = %11
  %68 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %69 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %68, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69) #3
  %70 = load i32, i32* @x.646
  %71 = load i32, i32* @y.647
  %72 = sub i32 %70, -788140735
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -788140735
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 2089940066, i32 -1428161377
  store i32 %84, i32* %10
  br label %89

; <label>:85:                                     ; preds = %11
  ret void

; <label>:86:                                     ; preds = %11
  %87 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %88 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %87, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %88) #3
  store i32 936310703, i32* %10
  br label %89

; <label>:89:                                     ; preds = %86, %67, %40, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca i32**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.648
  %9 = load i32, i32* @y.649
  %10 = sub i32 %8, 991473609
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 991473609
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -2010470722, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %193
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -2010470722, label %22
    i32 237992961, label %30
    i32 -624371624, label %75
    i32 799618599, label %78
    i32 -1798153349, label %105
    i32 773742197, label %151
    i32 368545759, label %152
    i32 -89141468, label %156
    i32 -562458282, label %157
    i32 -1635668847, label %173
  ]

; <label>:21:                                     ; preds = %19
  br label %193

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 237992961, i32 -562458282
  store i32 %29, i32* %18
  br label %193

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::deque"*, align 8
  %32 = alloca i32*, align 8
  store i32** %32, i32*** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %31, align 8
  %33 = load volatile i32**, i32*** %5
  store i32* %1, i32** %33, align 8
  %34 = load %"class.std::deque"*, %"class.std::deque"** %31, align 8
  store %"class.std::deque"* %34, %"class.std::deque"** %4
  %35 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %36 = bitcast %"class.std::deque"* %35 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %42 = bitcast %"class.std::deque"* %41 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 3
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 2
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 -1
  %48 = icmp ne i32* %40, %47
  store i1 %48, i1* %3
  %49 = load i32, i32* @x.648
  %50 = load i32, i32* @y.649
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -624371624, i32 -562458282
  store i32 %74, i32* %18
  br label %193

; <label>:75:                                     ; preds = %19
  %76 = load volatile i1, i1* %3
  %77 = select i1 %76, i32 799618599, i32 368545759
  store i32 %77, i32* %18
  br label %193

; <label>:78:                                     ; preds = %19
  %79 = load i32, i32* @x.648
  %80 = load i32, i32* @y.649
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 -1798153349, i32 -1635668847
  store i32 %104, i32* %18
  br label %193

; <label>:105:                                    ; preds = %19
  %106 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %107 = bitcast %"class.std::deque"* %106 to %"class.std::_Deque_base"*
  %108 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %107, i32 0, i32 0
  %109 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %108 to %"class.std::allocator.14"*
  %110 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %111 = bitcast %"class.std::deque"* %110 to %"class.std::_Deque_base"*
  %112 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %112, i32 0, i32 3
  %114 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %113, i32 0, i32 0
  %115 = load i32*, i32** %114, align 8
  %116 = load volatile i32**, i32*** %5
  %117 = load i32*, i32** %116, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.14"* dereferenceable(1) %109, i32* %115, i32* dereferenceable(4) %117)
  %118 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %119 = bitcast %"class.std::deque"* %118 to %"class.std::_Deque_base"*
  %120 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %119, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %120, i32 0, i32 3
  %122 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %121, i32 0, i32 0
  %123 = load i32*, i32** %122, align 8
  %124 = getelementptr inbounds i32, i32* %123, i32 1
  store i32* %124, i32** %122, align 8
  %125 = load i32, i32* @x.648
  %126 = load i32, i32* @y.649
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 true, true
  %137 = and i1 %134, true
  %138 = and i1 %132, %136
  %139 = and i1 %135, true
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 true, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  %150 = select i1 %148, i32 773742197, i32 -1635668847
  store i32 %150, i32* %18
  br label %193

; <label>:151:                                    ; preds = %19
  store i32 -89141468, i32* %18
  br label %193

; <label>:152:                                    ; preds = %19
  %153 = load volatile i32**, i32*** %5
  %154 = load i32*, i32** %153, align 8
  %155 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"* %155, i32* dereferenceable(4) %154)
  store i32 -89141468, i32* %18
  br label %193

; <label>:156:                                    ; preds = %19
  ret void

; <label>:157:                                    ; preds = %19
  %158 = alloca %"class.std::deque"*, align 8
  %159 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %158, align 8
  store i32* %1, i32** %159, align 8
  %160 = load %"class.std::deque"*, %"class.std::deque"** %158, align 8
  %161 = bitcast %"class.std::deque"* %160 to %"class.std::_Deque_base"*
  %162 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %161, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %162, i32 0, i32 3
  %164 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %163, i32 0, i32 0
  %165 = load i32*, i32** %164, align 8
  %166 = bitcast %"class.std::deque"* %160 to %"class.std::_Deque_base"*
  %167 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %166, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %167, i32 0, i32 3
  %169 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %168, i32 0, i32 2
  %170 = load i32*, i32** %169, align 8
  %171 = getelementptr inbounds i32, i32* %170, i64 -1
  %172 = icmp ne i32* %165, %171
  store i32 237992961, i32* %18
  br label %193

; <label>:173:                                    ; preds = %19
  %174 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %175 = bitcast %"class.std::deque"* %174 to %"class.std::_Deque_base"*
  %176 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %175, i32 0, i32 0
  %177 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %176 to %"class.std::allocator.14"*
  %178 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %179 = bitcast %"class.std::deque"* %178 to %"class.std::_Deque_base"*
  %180 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %179, i32 0, i32 0
  %181 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %180, i32 0, i32 3
  %182 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %181, i32 0, i32 0
  %183 = load i32*, i32** %182, align 8
  %184 = load volatile i32**, i32*** %5
  %185 = load i32*, i32** %184, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.14"* dereferenceable(1) %177, i32* %183, i32* dereferenceable(4) %185)
  %186 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %187 = bitcast %"class.std::deque"* %186 to %"class.std::_Deque_base"*
  %188 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %188, i32 0, i32 3
  %190 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %189, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = getelementptr inbounds i32, i32* %191, i32 1
  store i32* %192, i32** %190, align 8
  store i32 -1798153349, i32* %18
  br label %193

; <label>:193:                                    ; preds = %173, %157, %152, %151, %105, %78, %75, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load i32**, i32*** %13, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 1
  store i32* %9, i32** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17 to %"class.std::allocator.14"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %4, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %24) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.14"* dereferenceable(1) %18, i32* %23, i32* dereferenceable(4) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load i32**, i32*** %33, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %29, i32** %35) #3
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  store i32* %40, i32** %44, align 8
  br label %147

; <label>:45:                                     ; preds = %2
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %5, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %6, align 4
  br label %49

; <label>:49:                                     ; preds = %45
  %50 = load i32, i32* @x.650
  %51 = load i32, i32* @y.651
  %52 = add i32 %50, 1420911165
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1420911165
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %197

; <label>:76:                                     ; preds = %49, %197
  %77 = load i8*, i8** %5, align 8
  %78 = call i8* @__cxa_begin_catch(i8* %77) #3
  %79 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %80 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %81 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %81, i32 0, i32 3
  %83 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %82, i32 0, i32 3
  %84 = load i32**, i32*** %83, align 8
  %85 = getelementptr inbounds i32*, i32** %84, i64 1
  %86 = load i32*, i32** %85, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %79, i32* %86) #3
  %87 = load i32, i32* @x.650
  %88 = load i32, i32* @y.651
  %89 = add i32 %87, -1850331448
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -1850331448
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  br i1 %99, label %101, label %197

; <label>:101:                                    ; preds = %76
  invoke void @__cxa_rethrow() #12
          to label %156 unwind label %102

; <label>:102:                                    ; preds = %101
  %103 = load i32, i32* @x.650
  %104 = load i32, i32* @y.651
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %208

; <label>:128:                                    ; preds = %102, %208
  %129 = landingpad { i8*, i32 }
          cleanup
  %130 = extractvalue { i8*, i32 } %129, 0
  store i8* %130, i8** %5, align 8
  %131 = extractvalue { i8*, i32 } %129, 1
  store i32 %131, i32* %6, align 4
  %132 = load i32, i32* @x.650
  %133 = load i32, i32* @y.651
  %134 = sub i32 0, 1
  %135 = add i32 %132, %134
  %136 = sub i32 %132, 1
  %137 = mul i32 %132, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %133, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  br i1 %143, label %145, label %208

; <label>:145:                                    ; preds = %128
  invoke void @__cxa_end_catch()
          to label %146 unwind label %153

; <label>:146:                                    ; preds = %145
  br label %148

; <label>:147:                                    ; preds = %26
  ret void

; <label>:148:                                    ; preds = %146
  %149 = load i8*, i8** %5, align 8
  %150 = load i32, i32* %6, align 4
  %151 = insertvalue { i8*, i32 } undef, i8* %149, 0
  %152 = insertvalue { i8*, i32 } %151, i32 %150, 1
  resume { i8*, i32 } %152

; <label>:153:                                    ; preds = %145
  %154 = landingpad { i8*, i32 }
          catch i8* null
  %155 = extractvalue { i8*, i32 } %154, 0
  call void @__clang_call_terminate(i8* %155) #11
  unreachable

; <label>:156:                                    ; preds = %101
  %157 = load i32, i32* @x.650
  %158 = load i32, i32* @y.651
  %159 = sub i32 0, 1
  %160 = add i32 %157, %159
  %161 = sub i32 %157, 1
  %162 = mul i32 %157, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %158, 10
  %166 = xor i1 %164, true
  %167 = xor i1 %165, true
  %168 = xor i1 true, true
  %169 = and i1 %166, true
  %170 = and i1 %164, %168
  %171 = and i1 %167, true
  %172 = and i1 %165, %168
  %173 = or i1 %169, %170
  %174 = or i1 %171, %172
  %175 = xor i1 %173, %174
  %176 = or i1 %166, %167
  %177 = xor i1 %176, true
  %178 = or i1 true, %168
  %179 = and i1 %177, %178
  %180 = or i1 %175, %179
  %181 = or i1 %164, %165
  br i1 %180, label %182, label %212

; <label>:182:                                    ; preds = %156, %212
  %183 = load i32, i32* @x.650
  %184 = load i32, i32* @y.651
  %185 = sub i32 0, 1
  %186 = add i32 %183, %185
  %187 = sub i32 %183, 1
  %188 = mul i32 %183, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %184, 10
  %192 = and i1 %190, %191
  %193 = xor i1 %190, %191
  %194 = or i1 %192, %193
  %195 = or i1 %190, %191
  br i1 %194, label %196, label %212

; <label>:196:                                    ; preds = %182
  unreachable

; <label>:197:                                    ; preds = %76, %49
  %198 = load i8*, i8** %5, align 8
  %199 = call i8* @__cxa_begin_catch(i8* %198) #3
  %200 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %201 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %202 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %201, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %202, i32 0, i32 3
  %204 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %203, i32 0, i32 3
  %205 = load i32**, i32*** %204, align 8
  %206 = getelementptr inbounds i32*, i32** %205, i64 1
  %207 = load i32*, i32** %206, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %200, i32* %207) #3
  br label %76

; <label>:208:                                    ; preds = %128, %102
  %209 = landingpad { i8*, i32 }
          cleanup
  %210 = extractvalue { i8*, i32 } %209, 0
  store i8* %210, i8** %5, align 8
  %211 = extractvalue { i8*, i32 } %209, 1
  store i32 %211, i32* %6, align 4
  br label %128

; <label>:212:                                    ; preds = %182, %156
  br label %182
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.652
  %9 = load i32, i32* @y.653
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 2026028492, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %201
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 2026028492, label %21
    i32 -1539640646, label %29
    i32 195186922, label %82
    i32 -1644514971, label %85
    i32 106755336, label %89
    i32 1121513597, label %90
  ]

; <label>:20:                                     ; preds = %18
  br label %201

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1539640646, i32 1121513597
  store i32 %28, i32* %17
  br label %201

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::deque"*, align 8
  %31 = alloca i64, align 8
  store i64* %31, i64** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %30, align 8
  %32 = load volatile i64*, i64** %5
  store i64 %1, i64* %32, align 8
  %33 = load %"class.std::deque"*, %"class.std::deque"** %30, align 8
  store %"class.std::deque"* %33, %"class.std::deque"** %4
  %34 = load volatile i64*, i64** %5
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, -6996918886832315638
  %37 = add i64 %36, 1
  %38 = sub i64 %37, -6996918886832315638
  %39 = add i64 %35, 1
  %40 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %41 = bitcast %"class.std::deque"* %40 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %46 = bitcast %"class.std::deque"* %45 to %"class.std::_Deque_base"*
  %47 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %47, i32 0, i32 3
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %48, i32 0, i32 3
  %50 = load i32**, i32*** %49, align 8
  %51 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %52 = bitcast %"class.std::deque"* %51 to %"class.std::_Deque_base"*
  %53 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %53, i32 0, i32 0
  %55 = load i32**, i32*** %54, align 8
  %56 = ptrtoint i32** %50 to i64
  %57 = ptrtoint i32** %55 to i64
  %58 = sub i64 0, %57
  %59 = add i64 %56, %58
  %60 = sub i64 %56, %57
  %61 = sdiv exact i64 %59, 8
  %62 = add i64 %44, -8502430651605204814
  %63 = sub i64 %62, %61
  %64 = sub i64 %63, -8502430651605204814
  %65 = sub i64 %44, %61
  %66 = icmp ugt i64 %38, %64
  store i1 %66, i1* %3
  %67 = load i32, i32* @x.652
  %68 = load i32, i32* @y.653
  %69 = sub i32 %67, 1430870993
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 1430870993
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 195186922, i32 1121513597
  store i32 %81, i32* %17
  br label %201

; <label>:82:                                     ; preds = %18
  %83 = load volatile i1, i1* %3
  %84 = select i1 %83, i32 -1644514971, i32 106755336
  store i32 %84, i32* %17
  br label %201

; <label>:85:                                     ; preds = %18
  %86 = load volatile i64*, i64** %5
  %87 = load i64, i64* %86, align 8
  %88 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %88, i64 %87, i1 zeroext false)
  store i32 106755336, i32* %17
  br label %201

; <label>:89:                                     ; preds = %18
  ret void

; <label>:90:                                     ; preds = %18
  %91 = alloca %"class.std::deque"*, align 8
  %92 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %91, align 8
  store i64 %1, i64* %92, align 8
  %93 = load %"class.std::deque"*, %"class.std::deque"** %91, align 8
  %94 = load i64, i64* %92, align 8
  %95 = sub i64 %94, 4905315594438845507
  %96 = sub i64 %95, 1
  %97 = add i64 %96, 4905315594438845507
  %98 = sub i64 %94, 1
  %99 = mul i64 %97, 1
  %100 = add i64 %94, -8654084257441992862
  %101 = sub i64 %100, 1
  %102 = sub i64 %101, -8654084257441992862
  %103 = sub i64 %94, 1
  %104 = mul i64 %102, 1
  %105 = sub i64 0, -5511851042782271821
  %106 = sub i64 %105, %94
  %107 = add i64 %106, -5511851042782271821
  %108 = sub i64 0, %94
  %109 = add i64 %107, 3555176814475892249
  %110 = add i64 %109, 1
  %111 = sub i64 %110, 3555176814475892249
  %112 = add i64 %107, 1
  %113 = shl i64 %94, 1
  %114 = shl i64 %94, 1
  %115 = sub i64 0, 1
  %116 = sub i64 %94, %115
  %117 = add i64 %94, 1
  %118 = bitcast %"class.std::deque"* %93 to %"class.std::_Deque_base"*
  %119 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %118, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %119, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::deque"* %93 to %"class.std::_Deque_base"*
  %123 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %122, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %123, i32 0, i32 3
  %125 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %124, i32 0, i32 3
  %126 = load i32**, i32*** %125, align 8
  %127 = bitcast %"class.std::deque"* %93 to %"class.std::_Deque_base"*
  %128 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %127, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %128, i32 0, i32 0
  %130 = load i32**, i32*** %129, align 8
  %131 = ptrtoint i32** %126 to i64
  %132 = ptrtoint i32** %130 to i64
  %133 = shl i64 %131, %132
  %134 = sub i64 %131, -2046013914597872871
  %135 = sub i64 %134, %132
  %136 = add i64 %135, -2046013914597872871
  %137 = sub i64 %131, %132
  %138 = sub i64 0, %136
  %139 = add i64 0, %138
  %140 = sub i64 0, %136
  %141 = sub i64 0, %139
  %142 = sub i64 0, 8
  %143 = add i64 %141, %142
  %144 = sub i64 0, %143
  %145 = add i64 %139, 8
  %146 = add i64 0, -4531716346329142882
  %147 = sub i64 %146, %136
  %148 = sub i64 %147, -4531716346329142882
  %149 = sub i64 0, %136
  %150 = sub i64 0, %148
  %151 = sub i64 0, 8
  %152 = add i64 %150, %151
  %153 = sub i64 0, %152
  %154 = add i64 %148, 8
  %155 = add i64 %136, 2120843115310464530
  %156 = sub i64 %155, 8
  %157 = sub i64 %156, 2120843115310464530
  %158 = sub i64 %136, 8
  %159 = mul i64 %157, 8
  %160 = sub i64 0, 8
  %161 = add i64 %136, %160
  %162 = sub i64 %136, 8
  %163 = mul i64 %161, 8
  %164 = sub i64 %136, -4314616514721233311
  %165 = sub i64 %164, 8
  %166 = add i64 %165, -4314616514721233311
  %167 = sub i64 %136, 8
  %168 = mul i64 %166, 8
  %169 = add i64 0, 3699614903752821085
  %170 = sub i64 %169, %136
  %171 = sub i64 %170, 3699614903752821085
  %172 = sub i64 0, %136
  %173 = sub i64 %171, 2280922381605442709
  %174 = add i64 %173, 8
  %175 = add i64 %174, 2280922381605442709
  %176 = add i64 %171, 8
  %177 = sdiv exact i64 %136, 8
  %178 = shl i64 %121, %177
  %179 = sub i64 0, 2751765754725055869
  %180 = sub i64 %179, %121
  %181 = add i64 %180, 2751765754725055869
  %182 = sub i64 0, %121
  %183 = sub i64 0, %177
  %184 = sub i64 %181, %183
  %185 = add i64 %181, %177
  %186 = add i64 %121, -8317060731235341626
  %187 = sub i64 %186, %177
  %188 = sub i64 %187, -8317060731235341626
  %189 = sub i64 %121, %177
  %190 = mul i64 %188, %177
  %191 = sub i64 %121, 5666518830463224129
  %192 = sub i64 %191, %177
  %193 = add i64 %192, 5666518830463224129
  %194 = sub i64 %121, %177
  %195 = mul i64 %193, %177
  %196 = add i64 %121, 3426611724042677811
  %197 = sub i64 %196, %177
  %198 = sub i64 %197, 3426611724042677811
  %199 = sub i64 %121, %177
  %200 = icmp ugt i64 %116, %198
  store i32 -1539640646, i32* %17
  br label %201

; <label>:201:                                    ; preds = %90, %85, %82, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i32**
  %5 = alloca i32**
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::deque"*
  %9 = alloca %"class.std::deque"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32**, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %9, align 8
  store i64 %1, i64* %10, align 8
  %17 = zext i1 %2 to i8
  store i8 %17, i8* %11, align 1
  %18 = load %"class.std::deque"*, %"class.std::deque"** %9, align 8
  store %"class.std::deque"* %18, %"class.std::deque"** %8
  %19 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %20 = bitcast %"class.std::deque"* %19 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 3
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %26 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 3
  %30 = load i32**, i32*** %29, align 8
  %31 = ptrtoint i32** %24 to i64
  %32 = ptrtoint i32** %30 to i64
  %33 = sub i64 0, %32
  %34 = add i64 %31, %33
  %35 = sub i64 %31, %32
  %36 = sdiv exact i64 %34, 8
  %37 = sub i64 0, %36
  %38 = sub i64 0, 1
  %39 = add i64 %37, %38
  %40 = sub i64 0, %39
  %41 = add nsw i64 %36, 1
  store i64 %40, i64* %12, align 8
  %42 = load i64, i64* %12, align 8
  %43 = load i64, i64* %10, align 8
  %44 = add i64 %42, -9095450858652693916
  %45 = add i64 %44, %43
  %46 = sub i64 %45, -9095450858652693916
  %47 = add i64 %42, %43
  store i64 %46, i64* %13, align 8
  %48 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %49 = bitcast %"class.std::deque"* %48 to %"class.std::_Deque_base"*
  %50 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %50, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %7
  %53 = load i64, i64* %13, align 8
  %54 = mul i64 2, %53
  store i64 %54, i64* %6
  %55 = alloca i32
  store i32 1364402362, i32* %55
  %56 = alloca i64
  %57 = alloca i64
  br label %58

; <label>:58:                                     ; preds = %3, %393
  %59 = load i32, i32* %55
  switch i32 %59, label %60 [
    i32 1364402362, label %61
    i32 -15739741, label %66
    i32 588798772, label %86
    i32 1112173198, label %88
    i32 -439409635, label %116
    i32 889593946, label %144
    i32 129056811, label %145
    i32 -1711293936, label %158
    i32 -1417842654, label %174
    i32 2013568652, label %205
    i32 1911678903, label %206
    i32 -2023820991, label %224
    i32 -1690464437, label %225
    i32 -1732147440, label %261
    i32 2056857201, label %263
    i32 1416193910, label %264
    i32 -510351578, label %305
    i32 1878097550, label %320
    i32 -1303500624, label %361
    i32 -1011737551, label %362
    i32 884993783, label %363
    i32 -1952522665, label %379
  ]

; <label>:60:                                     ; preds = %58
  br label %393

; <label>:61:                                     ; preds = %58
  %62 = load volatile i64, i64* %7
  %63 = load volatile i64, i64* %6
  %64 = icmp ugt i64 %62, %63
  %65 = select i1 %64, i32 -15739741, i32 -1690464437
  store i32 %65, i32* %55
  br label %393

; <label>:66:                                     ; preds = %58
  %67 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %68 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %69 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 0
  %71 = load i32**, i32*** %70, align 8
  %72 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %73 = bitcast %"class.std::deque"* %72 to %"class.std::_Deque_base"*
  %74 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %13, align 8
  %78 = sub i64 0, %77
  %79 = add i64 %76, %78
  %80 = sub i64 %76, %77
  %81 = udiv i64 %79, 2
  %82 = getelementptr inbounds i32*, i32** %71, i64 %81
  store i32** %82, i32*** %5
  %83 = load i8, i8* %11, align 1
  %84 = trunc i8 %83 to i1
  %85 = select i1 %84, i32 588798772, i32 1112173198
  store i32 %85, i32* %55
  br label %393

; <label>:86:                                     ; preds = %58
  %87 = load i64, i64* %10, align 8
  store i32 129056811, i32* %55
  store i64 %87, i64* %56
  br label %393

; <label>:88:                                     ; preds = %58
  %89 = load i32, i32* @x.654
  %90 = load i32, i32* @y.655
  %91 = add i32 %89, -2014668048
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, -2014668048
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  %115 = select i1 %113, i32 -439409635, i32 -1011737551
  store i32 %115, i32* %55
  br label %393

; <label>:116:                                    ; preds = %58
  %117 = load i32, i32* @x.654
  %118 = load i32, i32* @y.655
  %119 = add i32 %117, 749584284
  %120 = sub i32 %119, 1
  %121 = sub i32 %120, 749584284
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 false, true
  %130 = and i1 %127, false
  %131 = and i1 %125, %129
  %132 = and i1 %128, false
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 false, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  %143 = select i1 %141, i32 889593946, i32 -1011737551
  store i32 %143, i32* %55
  br label %393

; <label>:144:                                    ; preds = %58
  store i32 129056811, i32* %55
  store i64 0, i64* %56
  br label %393

; <label>:145:                                    ; preds = %58
  %146 = load i64, i64* %56
  %147 = load volatile i32**, i32*** %5
  %148 = getelementptr inbounds i32*, i32** %147, i64 %146
  store i32** %148, i32*** %14, align 8
  %149 = load i32**, i32*** %14, align 8
  %150 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %151 = bitcast %"class.std::deque"* %150 to %"class.std::_Deque_base"*
  %152 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %151, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %152, i32 0, i32 2
  %154 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %153, i32 0, i32 3
  %155 = load i32**, i32*** %154, align 8
  %156 = icmp ult i32** %149, %155
  %157 = select i1 %156, i32 -1711293936, i32 1911678903
  store i32 %157, i32* %55
  br label %393

; <label>:158:                                    ; preds = %58
  %159 = load i32, i32* @x.654
  %160 = load i32, i32* @y.655
  %161 = add i32 %159, 434649416
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, 434649416
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  %173 = select i1 %171, i32 -1417842654, i32 884993783
  store i32 %173, i32* %55
  br label %393

; <label>:174:                                    ; preds = %58
  %175 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %176 = bitcast %"class.std::deque"* %175 to %"class.std::_Deque_base"*
  %177 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %177, i32 0, i32 2
  %179 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %178, i32 0, i32 3
  %180 = load i32**, i32*** %179, align 8
  %181 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %182 = bitcast %"class.std::deque"* %181 to %"class.std::_Deque_base"*
  %183 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %182, i32 0, i32 0
  %184 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %183, i32 0, i32 3
  %185 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %184, i32 0, i32 3
  %186 = load i32**, i32*** %185, align 8
  %187 = getelementptr inbounds i32*, i32** %186, i64 1
  %188 = load i32**, i32*** %14, align 8
  %189 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %180, i32** %187, i32** %188)
  %190 = load i32, i32* @x.654
  %191 = load i32, i32* @y.655
  %192 = sub i32 %190, 1257900764
  %193 = sub i32 %192, 1
  %194 = add i32 %193, 1257900764
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  %204 = select i1 %202, i32 2013568652, i32 884993783
  store i32 %204, i32* %55
  br label %393

; <label>:205:                                    ; preds = %58
  store i32 -2023820991, i32* %55
  br label %393

; <label>:206:                                    ; preds = %58
  %207 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %208 = bitcast %"class.std::deque"* %207 to %"class.std::_Deque_base"*
  %209 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %208, i32 0, i32 0
  %210 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %209, i32 0, i32 2
  %211 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %210, i32 0, i32 3
  %212 = load i32**, i32*** %211, align 8
  %213 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %214 = bitcast %"class.std::deque"* %213 to %"class.std::_Deque_base"*
  %215 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %214, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %215, i32 0, i32 3
  %217 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %216, i32 0, i32 3
  %218 = load i32**, i32*** %217, align 8
  %219 = getelementptr inbounds i32*, i32** %218, i64 1
  %220 = load i32**, i32*** %14, align 8
  %221 = load i64, i64* %12, align 8
  %222 = getelementptr inbounds i32*, i32** %220, i64 %221
  %223 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %212, i32** %219, i32** %222)
  store i32 -2023820991, i32* %55
  br label %393

; <label>:224:                                    ; preds = %58
  store i32 -510351578, i32* %55
  br label %393

; <label>:225:                                    ; preds = %58
  %226 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %227 = bitcast %"class.std::deque"* %226 to %"class.std::_Deque_base"*
  %228 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %227, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %228, i32 0, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %232 = bitcast %"class.std::deque"* %231 to %"class.std::_Deque_base"*
  %233 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %232, i32 0, i32 0
  %234 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %233, i32 0, i32 1
  %235 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %234, i64* dereferenceable(8) %10)
  %236 = load i64, i64* %235, align 8
  %237 = add i64 %230, -6320005802345124147
  %238 = add i64 %237, %236
  %239 = sub i64 %238, -6320005802345124147
  %240 = add i64 %230, %236
  %241 = add i64 %239, 1105146533189151563
  %242 = add i64 %241, 2
  %243 = sub i64 %242, 1105146533189151563
  %244 = add i64 %239, 2
  store i64 %243, i64* %15, align 8
  %245 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %246 = bitcast %"class.std::deque"* %245 to %"class.std::_Deque_base"*
  %247 = load i64, i64* %15, align 8
  %248 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %246, i64 %247)
  store i32** %248, i32*** %16, align 8
  %249 = load i32**, i32*** %16, align 8
  %250 = load i64, i64* %15, align 8
  %251 = load i64, i64* %13, align 8
  %252 = sub i64 %250, 1817241795245490904
  %253 = sub i64 %252, %251
  %254 = add i64 %253, 1817241795245490904
  %255 = sub i64 %250, %251
  %256 = udiv i64 %254, 2
  %257 = getelementptr inbounds i32*, i32** %249, i64 %256
  store i32** %257, i32*** %4
  %258 = load i8, i8* %11, align 1
  %259 = trunc i8 %258 to i1
  %260 = select i1 %259, i32 -1732147440, i32 2056857201
  store i32 %260, i32* %55
  br label %393

; <label>:261:                                    ; preds = %58
  %262 = load i64, i64* %10, align 8
  store i32 1416193910, i32* %55
  store i64 %262, i64* %57
  br label %393

; <label>:263:                                    ; preds = %58
  store i32 1416193910, i32* %55
  store i64 0, i64* %57
  br label %393

; <label>:264:                                    ; preds = %58
  %265 = load i64, i64* %57
  %266 = load volatile i32**, i32*** %4
  %267 = getelementptr inbounds i32*, i32** %266, i64 %265
  store i32** %267, i32*** %14, align 8
  %268 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %269 = bitcast %"class.std::deque"* %268 to %"class.std::_Deque_base"*
  %270 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %269, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %270, i32 0, i32 2
  %272 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %271, i32 0, i32 3
  %273 = load i32**, i32*** %272, align 8
  %274 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %275 = bitcast %"class.std::deque"* %274 to %"class.std::_Deque_base"*
  %276 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %275, i32 0, i32 0
  %277 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %276, i32 0, i32 3
  %278 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %277, i32 0, i32 3
  %279 = load i32**, i32*** %278, align 8
  %280 = getelementptr inbounds i32*, i32** %279, i64 1
  %281 = load i32**, i32*** %14, align 8
  %282 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %273, i32** %280, i32** %281)
  %283 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %284 = bitcast %"class.std::deque"* %283 to %"class.std::_Deque_base"*
  %285 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %286 = bitcast %"class.std::deque"* %285 to %"class.std::_Deque_base"*
  %287 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %286, i32 0, i32 0
  %288 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %287, i32 0, i32 0
  %289 = load i32**, i32*** %288, align 8
  %290 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %291 = bitcast %"class.std::deque"* %290 to %"class.std::_Deque_base"*
  %292 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %291, i32 0, i32 0
  %293 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %292, i32 0, i32 1
  %294 = load i64, i64* %293, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %284, i32** %289, i64 %294) #3
  %295 = load i32**, i32*** %16, align 8
  %296 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %297 = bitcast %"class.std::deque"* %296 to %"class.std::_Deque_base"*
  %298 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %298, i32 0, i32 0
  store i32** %295, i32*** %299, align 8
  %300 = load i64, i64* %15, align 8
  %301 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %302 = bitcast %"class.std::deque"* %301 to %"class.std::_Deque_base"*
  %303 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %302, i32 0, i32 0
  %304 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %303, i32 0, i32 1
  store i64 %300, i64* %304, align 8
  store i32 -510351578, i32* %55
  br label %393

; <label>:305:                                    ; preds = %58
  %306 = load i32, i32* @x.654
  %307 = load i32, i32* @y.655
  %308 = sub i32 0, 1
  %309 = add i32 %306, %308
  %310 = sub i32 %306, 1
  %311 = mul i32 %306, %309
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %307, 10
  %315 = and i1 %313, %314
  %316 = xor i1 %313, %314
  %317 = or i1 %315, %316
  %318 = or i1 %313, %314
  %319 = select i1 %317, i32 1878097550, i32 -1952522665
  store i32 %319, i32* %55
  br label %393

; <label>:320:                                    ; preds = %58
  %321 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %322 = bitcast %"class.std::deque"* %321 to %"class.std::_Deque_base"*
  %323 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %322, i32 0, i32 0
  %324 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %323, i32 0, i32 2
  %325 = load i32**, i32*** %14, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %324, i32** %325) #3
  %326 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %327 = bitcast %"class.std::deque"* %326 to %"class.std::_Deque_base"*
  %328 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %327, i32 0, i32 0
  %329 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %328, i32 0, i32 3
  %330 = load i32**, i32*** %14, align 8
  %331 = load i64, i64* %12, align 8
  %332 = getelementptr inbounds i32*, i32** %330, i64 %331
  %333 = getelementptr inbounds i32*, i32** %332, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %329, i32** %333) #3
  %334 = load i32, i32* @x.654
  %335 = load i32, i32* @y.655
  %336 = add i32 %334, -788955898
  %337 = sub i32 %336, 1
  %338 = sub i32 %337, -788955898
  %339 = sub i32 %334, 1
  %340 = mul i32 %334, %338
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %335, 10
  %344 = xor i1 %342, true
  %345 = xor i1 %343, true
  %346 = xor i1 false, true
  %347 = and i1 %344, false
  %348 = and i1 %342, %346
  %349 = and i1 %345, false
  %350 = and i1 %343, %346
  %351 = or i1 %347, %348
  %352 = or i1 %349, %350
  %353 = xor i1 %351, %352
  %354 = or i1 %344, %345
  %355 = xor i1 %354, true
  %356 = or i1 false, %346
  %357 = and i1 %355, %356
  %358 = or i1 %353, %357
  %359 = or i1 %342, %343
  %360 = select i1 %358, i32 -1303500624, i32 -1952522665
  store i32 %360, i32* %55
  br label %393

; <label>:361:                                    ; preds = %58
  ret void

; <label>:362:                                    ; preds = %58
  store i32 -439409635, i32* %55
  br label %393

; <label>:363:                                    ; preds = %58
  %364 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %365 = bitcast %"class.std::deque"* %364 to %"class.std::_Deque_base"*
  %366 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %365, i32 0, i32 0
  %367 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %366, i32 0, i32 2
  %368 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %367, i32 0, i32 3
  %369 = load i32**, i32*** %368, align 8
  %370 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %371 = bitcast %"class.std::deque"* %370 to %"class.std::_Deque_base"*
  %372 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %371, i32 0, i32 0
  %373 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %372, i32 0, i32 3
  %374 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %373, i32 0, i32 3
  %375 = load i32**, i32*** %374, align 8
  %376 = getelementptr inbounds i32*, i32** %375, i64 1
  %377 = load i32**, i32*** %14, align 8
  %378 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %369, i32** %376, i32** %377)
  store i32 -1417842654, i32* %55
  br label %393

; <label>:379:                                    ; preds = %58
  %380 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %381 = bitcast %"class.std::deque"* %380 to %"class.std::_Deque_base"*
  %382 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %381, i32 0, i32 0
  %383 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %382, i32 0, i32 2
  %384 = load i32**, i32*** %14, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %383, i32** %384) #3
  %385 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %386 = bitcast %"class.std::deque"* %385 to %"class.std::_Deque_base"*
  %387 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %386, i32 0, i32 0
  %388 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %387, i32 0, i32 3
  %389 = load i32**, i32*** %14, align 8
  %390 = load i64, i64* %12, align 8
  %391 = getelementptr inbounds i32*, i32** %389, i64 %390
  %392 = getelementptr inbounds i32*, i32** %391, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %388, i32** %392) #3
  store i32 1878097550, i32* %55
  br label %393

; <label>:393:                                    ; preds = %379, %363, %362, %320, %305, %264, %263, %261, %225, %224, %206, %205, %174, %158, %145, %144, %116, %88, %86, %66, %61, %60
  br label %58
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #5 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i8, align 1
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32**, i32*** %5, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %8, i32** %9, i32** %10)
  ret i32** %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #0 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32***
  %7 = alloca i32***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.668
  %11 = load i32, i32* @y.669
  %12 = add i32 %10, 2056742950
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 2056742950
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 422288433, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %149
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 422288433, label %24
    i32 1645649373, label %32
    i32 1778518547, label %80
    i32 -1031958019, label %83
    i32 1404584776, label %93
    i32 1741388206, label %99
  ]

; <label>:23:                                     ; preds = %21
  br label %149

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1645649373, i32 1741388206
  store i32 %31, i32* %20
  br label %149

; <label>:32:                                     ; preds = %21
  %33 = alloca i32**, align 8
  store i32*** %33, i32**** %7
  %34 = alloca i32**, align 8
  %35 = alloca i32**, align 8
  store i32*** %35, i32**** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile i32***, i32**** %7
  store i32** %0, i32*** %37, align 8
  store i32** %1, i32*** %34, align 8
  %38 = load volatile i32***, i32**** %6
  store i32** %2, i32*** %38, align 8
  %39 = load i32**, i32*** %34, align 8
  %40 = load volatile i32***, i32**** %7
  %41 = load i32**, i32*** %40, align 8
  %42 = ptrtoint i32** %39 to i64
  %43 = ptrtoint i32** %41 to i64
  %44 = sub i64 %42, -1979311347055493589
  %45 = sub i64 %44, %43
  %46 = add i64 %45, -1979311347055493589
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 8
  %49 = load volatile i64*, i64** %5
  store i64 %48, i64* %49, align 8
  %50 = load volatile i64*, i64** %5
  %51 = load i64, i64* %50, align 8
  %52 = icmp ne i64 %51, 0
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.668
  %54 = load i32, i32* @y.669
  %55 = add i32 %53, 1782668264
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1782668264
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1778518547, i32 1741388206
  store i32 %79, i32* %20
  br label %149

; <label>:80:                                     ; preds = %21
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 -1031958019, i32 1404584776
  store i32 %82, i32* %20
  br label %149

; <label>:83:                                     ; preds = %21
  %84 = load volatile i32***, i32**** %6
  %85 = load i32**, i32*** %84, align 8
  %86 = bitcast i32** %85 to i8*
  %87 = load volatile i32***, i32**** %7
  %88 = load i32**, i32*** %87, align 8
  %89 = bitcast i32** %88 to i8*
  %90 = load volatile i64*, i64** %5
  %91 = load i64, i64* %90, align 8
  %92 = mul i64 8, %91
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %86, i8* %89, i64 %92, i32 8, i1 false)
  store i32 1404584776, i32* %20
  br label %149

; <label>:93:                                     ; preds = %21
  %94 = load volatile i32***, i32**** %6
  %95 = load i32**, i32*** %94, align 8
  %96 = load volatile i64*, i64** %5
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds i32*, i32** %95, i64 %97
  ret i32** %98

; <label>:99:                                     ; preds = %21
  %100 = alloca i32**, align 8
  %101 = alloca i32**, align 8
  %102 = alloca i32**, align 8
  %103 = alloca i64, align 8
  store i32** %0, i32*** %100, align 8
  store i32** %1, i32*** %101, align 8
  store i32** %2, i32*** %102, align 8
  %104 = load i32**, i32*** %101, align 8
  %105 = load i32**, i32*** %100, align 8
  %106 = ptrtoint i32** %104 to i64
  %107 = ptrtoint i32** %105 to i64
  %108 = sub i64 0, 2193966361853354635
  %109 = sub i64 %108, %106
  %110 = add i64 %109, 2193966361853354635
  %111 = sub i64 0, %106
  %112 = sub i64 0, %110
  %113 = sub i64 0, %107
  %114 = add i64 %112, %113
  %115 = sub i64 0, %114
  %116 = add i64 %110, %107
  %117 = sub i64 %106, 6014323460944657276
  %118 = sub i64 %117, %107
  %119 = add i64 %118, 6014323460944657276
  %120 = sub i64 %106, %107
  %121 = mul i64 %119, %107
  %122 = add i64 %106, 1670607304474555813
  %123 = sub i64 %122, %107
  %124 = sub i64 %123, 1670607304474555813
  %125 = sub i64 %106, %107
  %126 = add i64 0, 7221616254760872880
  %127 = sub i64 %126, %124
  %128 = sub i64 %127, 7221616254760872880
  %129 = sub i64 0, %124
  %130 = sub i64 0, 8
  %131 = sub i64 %128, %130
  %132 = add i64 %128, 8
  %133 = sub i64 0, 8
  %134 = add i64 %124, %133
  %135 = sub i64 %124, 8
  %136 = mul i64 %134, 8
  %137 = sub i64 0, 1913527806828105736
  %138 = sub i64 %137, %124
  %139 = add i64 %138, 1913527806828105736
  %140 = sub i64 0, %124
  %141 = sub i64 0, %139
  %142 = sub i64 0, 8
  %143 = add i64 %141, %142
  %144 = sub i64 0, %143
  %145 = add i64 %139, 8
  %146 = sdiv exact i64 %124, 8
  store i64 %146, i64* %103, align 8
  %147 = load i64, i64* %103, align 8
  %148 = icmp ne i64 %147, 0
  store i32 1645649373, i32* %20
  br label %149

; <label>:149:                                    ; preds = %99, %83, %80, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #5 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.670
  %6 = load i32, i32* @y.671
  %7 = sub i32 %5, 824649448
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 824649448
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 351097061, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 351097061, label %19
    i32 686180323, label %27
    i32 275475344, label %57
    i32 1522193773, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 686180323, i32 1522193773
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca i32**, align 8
  store i32** %0, i32*** %28, align 8
  %29 = load i32**, i32*** %28, align 8
  store i32** %29, i32*** %2
  %30 = load i32, i32* @x.670
  %31 = load i32, i32* @y.671
  %32 = sub i32 %30, -874694781
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -874694781
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 275475344, i32 1522193773
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32**, i32*** %2
  ret i32** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i32**, align 8
  store i32** %0, i32*** %60, align 8
  %61 = load i32**, i32*** %60, align 8
  store i32 686180323, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.672
  %8 = load i32, i32* @y.673
  %9 = sub i32 %7, 552601027
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 552601027
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1698051448, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %91
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1698051448, label %21
    i32 -1655721669, label %41
    i32 -124076603, label %78
    i32 -2104825908, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %91

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1655721669, i32 -2104825908
  store i32 %40, i32* %17
  br label %91

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  %45 = load i32**, i32*** %42, align 8
  %46 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %45)
  %47 = load i32**, i32*** %43, align 8
  %48 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %47)
  %49 = load i32**, i32*** %44, align 8
  %50 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %49)
  %51 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %46, i32** %48, i32** %50)
  store i32** %51, i32*** %4
  %52 = load i32, i32* @x.672
  %53 = load i32, i32* @y.673
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -124076603, i32 -2104825908
  store i32 %77, i32* %17
  br label %91

; <label>:78:                                     ; preds = %18
  %79 = load volatile i32**, i32*** %4
  ret i32** %79

; <label>:80:                                     ; preds = %18
  %81 = alloca i32**, align 8
  %82 = alloca i32**, align 8
  %83 = alloca i32**, align 8
  store i32** %0, i32*** %81, align 8
  store i32** %1, i32*** %82, align 8
  store i32** %2, i32*** %83, align 8
  %84 = load i32**, i32*** %81, align 8
  %85 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %84)
  %86 = load i32**, i32*** %82, align 8
  %87 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %86)
  %88 = load i32**, i32*** %83, align 8
  %89 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %88)
  %90 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %85, i32** %87, i32** %89)
  store i32 -1655721669, i32* %17
  br label %91

; <label>:91:                                     ; preds = %80, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.674
  %8 = load i32, i32* @y.675
  %9 = sub i32 %7, 837920345
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 837920345
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 135354025, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 135354025, label %21
    i32 1538476922, label %41
    i32 -947232399, label %65
    i32 -2139934720, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1538476922, i32 -2139934720
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  %45 = alloca i8, align 1
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = load i32**, i32*** %44, align 8
  %49 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %46, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.674
  %51 = load i32, i32* @y.675
  %52 = add i32 %50, -1472305519
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -1472305519
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -947232399, i32 -2139934720
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i32**, i32*** %4
  ret i32** %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i8, align 1
  store i32** %0, i32*** %68, align 8
  store i32** %1, i32*** %69, align 8
  store i32** %2, i32*** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i32**, i32*** %68, align 8
  %73 = load i32**, i32*** %69, align 8
  %74 = load i32**, i32*** %70, align 8
  %75 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %72, i32** %73, i32** %74)
  store i32 1538476922, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32***
  %7 = alloca i32***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.676
  %11 = load i32, i32* @y.677
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1708098724, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %206
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1708098724, label %23
    i32 -1213441187, label %31
    i32 -1494317811, label %67
    i32 1810363479, label %70
    i32 -1317135354, label %86
    i32 -1155958369, label %130
    i32 -863660083, label %131
    i32 818815526, label %140
    i32 -2104747023, label %166
  ]

; <label>:22:                                     ; preds = %20
  br label %206

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1213441187, i32 818815526
  store i32 %30, i32* %19
  br label %206

; <label>:31:                                     ; preds = %20
  %32 = alloca i32**, align 8
  store i32*** %32, i32**** %7
  %33 = alloca i32**, align 8
  %34 = alloca i32**, align 8
  store i32*** %34, i32**** %6
  %35 = alloca i64, align 8
  store i64* %35, i64** %5
  %36 = load volatile i32***, i32**** %7
  store i32** %0, i32*** %36, align 8
  store i32** %1, i32*** %33, align 8
  %37 = load volatile i32***, i32**** %6
  store i32** %2, i32*** %37, align 8
  %38 = load i32**, i32*** %33, align 8
  %39 = load volatile i32***, i32**** %7
  %40 = load i32**, i32*** %39, align 8
  %41 = ptrtoint i32** %38 to i64
  %42 = ptrtoint i32** %40 to i64
  %43 = sub i64 %41, 485833290401708930
  %44 = sub i64 %43, %42
  %45 = add i64 %44, 485833290401708930
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 8
  %48 = load volatile i64*, i64** %5
  store i64 %47, i64* %48, align 8
  %49 = load volatile i64*, i64** %5
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.676
  %53 = load i32, i32* @y.677
  %54 = add i32 %52, 694751765
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 694751765
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -1494317811, i32 818815526
  store i32 %66, i32* %19
  br label %206

; <label>:67:                                     ; preds = %20
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 1810363479, i32 -863660083
  store i32 %69, i32* %19
  br label %206

; <label>:70:                                     ; preds = %20
  %71 = load i32, i32* @x.676
  %72 = load i32, i32* @y.677
  %73 = add i32 %71, 481056479
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 481056479
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 -1317135354, i32 -2104747023
  store i32 %85, i32* %19
  br label %206

; <label>:86:                                     ; preds = %20
  %87 = load volatile i32***, i32**** %6
  %88 = load i32**, i32*** %87, align 8
  %89 = load volatile i64*, i64** %5
  %90 = load i64, i64* %89, align 8
  %91 = add i64 0, -6879550316904651668
  %92 = sub i64 %91, %90
  %93 = sub i64 %92, -6879550316904651668
  %94 = sub i64 0, %90
  %95 = getelementptr inbounds i32*, i32** %88, i64 %93
  %96 = bitcast i32** %95 to i8*
  %97 = load volatile i32***, i32**** %7
  %98 = load i32**, i32*** %97, align 8
  %99 = bitcast i32** %98 to i8*
  %100 = load volatile i64*, i64** %5
  %101 = load i64, i64* %100, align 8
  %102 = mul i64 8, %101
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %96, i8* %99, i64 %102, i32 8, i1 false)
  %103 = load i32, i32* @x.676
  %104 = load i32, i32* @y.677
  %105 = sub i32 %103, 297488738
  %106 = sub i32 %105, 1
  %107 = add i32 %106, 297488738
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 -1155958369, i32 -2104747023
  store i32 %129, i32* %19
  br label %206

; <label>:130:                                    ; preds = %20
  store i32 -863660083, i32* %19
  br label %206

; <label>:131:                                    ; preds = %20
  %132 = load volatile i32***, i32**** %6
  %133 = load i32**, i32*** %132, align 8
  %134 = load volatile i64*, i64** %5
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 0, %135
  %137 = add i64 0, %136
  %138 = sub i64 0, %135
  %139 = getelementptr inbounds i32*, i32** %133, i64 %137
  ret i32** %139

; <label>:140:                                    ; preds = %20
  %141 = alloca i32**, align 8
  %142 = alloca i32**, align 8
  %143 = alloca i32**, align 8
  %144 = alloca i64, align 8
  store i32** %0, i32*** %141, align 8
  store i32** %1, i32*** %142, align 8
  store i32** %2, i32*** %143, align 8
  %145 = load i32**, i32*** %142, align 8
  %146 = load i32**, i32*** %141, align 8
  %147 = ptrtoint i32** %145 to i64
  %148 = ptrtoint i32** %146 to i64
  %149 = sub i64 %147, 5728783956450971839
  %150 = sub i64 %149, %148
  %151 = add i64 %150, 5728783956450971839
  %152 = sub i64 %147, %148
  %153 = mul i64 %151, %148
  %154 = sub i64 %147, -8297639636040616454
  %155 = sub i64 %154, %148
  %156 = add i64 %155, -8297639636040616454
  %157 = sub i64 %147, %148
  %158 = sub i64 %156, -1375166864894359079
  %159 = sub i64 %158, 8
  %160 = add i64 %159, -1375166864894359079
  %161 = sub i64 %156, 8
  %162 = mul i64 %160, 8
  %163 = sdiv exact i64 %156, 8
  store i64 %163, i64* %144, align 8
  %164 = load i64, i64* %144, align 8
  %165 = icmp ne i64 %164, 0
  store i32 -1213441187, i32* %19
  br label %206

; <label>:166:                                    ; preds = %20
  %167 = load volatile i32***, i32**** %6
  %168 = load i32**, i32*** %167, align 8
  %169 = load volatile i64*, i64** %5
  %170 = load i64, i64* %169, align 8
  %171 = add i64 0, -8203821106374080438
  %172 = sub i64 %171, 0
  %173 = sub i64 %172, -8203821106374080438
  %174 = sub i64 0, 0
  %175 = add i64 %173, 7482695819400364331
  %176 = add i64 %175, %170
  %177 = sub i64 %176, 7482695819400364331
  %178 = add i64 %173, %170
  %179 = add i64 0, 3386892778903362453
  %180 = sub i64 %179, %170
  %181 = sub i64 %180, 3386892778903362453
  %182 = sub i64 0, %170
  %183 = getelementptr inbounds i32*, i32** %168, i64 %181
  %184 = bitcast i32** %183 to i8*
  %185 = load volatile i32***, i32**** %7
  %186 = load i32**, i32*** %185, align 8
  %187 = bitcast i32** %186 to i8*
  %188 = load volatile i64*, i64** %5
  %189 = load i64, i64* %188, align 8
  %190 = sub i64 0, 8
  %191 = add i64 0, %190
  %192 = sub i64 0, 8
  %193 = add i64 %191, 6459729506458065911
  %194 = add i64 %193, %189
  %195 = sub i64 %194, 6459729506458065911
  %196 = add i64 %191, %189
  %197 = sub i64 0, 8341969497898439587
  %198 = sub i64 %197, 8
  %199 = add i64 %198, 8341969497898439587
  %200 = sub i64 0, 8
  %201 = add i64 %199, 2768403062253459610
  %202 = add i64 %201, %189
  %203 = sub i64 %202, 2768403062253459610
  %204 = add i64 %199, %189
  %205 = mul i64 8, %189
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %184, i8* %187, i64 %205, i32 8, i1 false)
  store i32 -1317135354, i32* %19
  br label %206

; <label>:206:                                    ; preds = %166, %140, %130, %86, %70, %67, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %4) #3
  %5 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.684
  %6 = load i32, i32* @y.685
  %7 = sub i32 %5, 1286068985
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1286068985
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1920509603, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1920509603, label %19
    i32 1465401059, label %39
    i32 -872924574, label %59
    i32 -72970459, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1465401059, i32 -72970459
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  %41 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %41, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.684
  %45 = load i32, i32* @y.685
  %46 = sub i32 %44, -82214896
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -82214896
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -872924574, i32 -72970459
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %62, align 8
  %63 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %63, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  store i32 1465401059, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 -1
  %15 = icmp ne i32* %8, %14
  br i1 %15, label %16, label %74

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %18 to %"class.std::allocator.14"*
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.14"* dereferenceable(1) %19, i32* %24)
          to label %25 unwind label %159

; <label>:25:                                     ; preds = %16
  %26 = load i32, i32* @x.686
  %27 = load i32, i32* @y.687
  %28 = sub i32 %26, -53244901
  %29 = sub i32 %28, 1
  %30 = add i32 %29, -53244901
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %162

; <label>:52:                                     ; preds = %25, %162
  %53 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %54, i32 0, i32 2
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds i32, i32* %57, i32 1
  store i32* %58, i32** %56, align 8
  %59 = load i32, i32* @x.686
  %60 = load i32, i32* @y.687
  %61 = sub i32 %59, 127083137
  %62 = sub i32 %61, 1
  %63 = add i32 %62, 127083137
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %162

; <label>:73:                                     ; preds = %52
  br label %129

; <label>:74:                                     ; preds = %1
  invoke void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"* %3)
          to label %75 unwind label %159

; <label>:75:                                     ; preds = %74
  %76 = load i32, i32* @x.686
  %77 = load i32, i32* @y.687
  %78 = add i32 %76, -903540890
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, -903540890
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 true, true
  %89 = and i1 %86, true
  %90 = and i1 %84, %88
  %91 = and i1 %87, true
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 true, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  br i1 %100, label %102, label %169

; <label>:102:                                    ; preds = %75, %169
  %103 = load i32, i32* @x.686
  %104 = load i32, i32* @y.687
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %169

; <label>:128:                                    ; preds = %102
  br label %129

; <label>:129:                                    ; preds = %128, %73
  %130 = load i32, i32* @x.686
  %131 = load i32, i32* @y.687
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %170

; <label>:143:                                    ; preds = %129, %170
  %144 = load i32, i32* @x.686
  %145 = load i32, i32* @y.687
  %146 = add i32 %144, 885424181
  %147 = sub i32 %146, 1
  %148 = sub i32 %147, 885424181
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  br i1 %156, label %158, label %170

; <label>:158:                                    ; preds = %143
  ret void

; <label>:159:                                    ; preds = %74, %16
  %160 = landingpad { i8*, i32 }
          catch i8* null
  %161 = extractvalue { i8*, i32 } %160, 0
  call void @__clang_call_terminate(i8* %161) #11
  unreachable

; <label>:162:                                    ; preds = %52, %25
  %163 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %164 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %163, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %164, i32 0, i32 2
  %166 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %165, i32 0, i32 0
  %167 = load i32*, i32** %166, align 8
  %168 = getelementptr inbounds i32, i32* %167, i32 1
  store i32* %168, i32** %166, align 8
  br label %52

; <label>:169:                                    ; preds = %102, %75
  br label %102

; <label>:170:                                    ; preds = %143, %129
  br label %143
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  %6 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.14"* dereferenceable(1) %5, i32* %10)
  %11 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %12 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %13 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 2
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %14, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %11, i32* %16) #3
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %18, i32 0, i32 2
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = getelementptr inbounds i32*, i32** %24, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %19, i32** %25) #3
  %26 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 1
  %30 = load i32*, i32** %29, align 8
  %31 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 0
  store i32* %30, i32** %34, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"*, %"struct.Maxflow<long long>::edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.690
  %6 = load i32, i32* @y.691
  %7 = sub i32 %5, -916402326
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -916402326
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2111805168, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2111805168, label %19
    i32 316132828, label %27
    i32 -1163172234, label %60
    i32 -1937287087, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 316132828, i32 -1937287087
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %29 = alloca %"struct.Maxflow<long long>::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %28, align 8
  store %"struct.Maxflow<long long>::edge"** %1, %"struct.Maxflow<long long>::edge"*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %30, i32 0, i32 0
  %32 = load %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %29, align 8
  %33 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %32, align 8
  store %"struct.Maxflow<long long>::edge"* %33, %"struct.Maxflow<long long>::edge"** %31, align 8
  %34 = load i32, i32* @x.690
  %35 = load i32, i32* @y.691
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1163172234, i32 -1937287087
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %63 = alloca %"struct.Maxflow<long long>::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %62, align 8
  store %"struct.Maxflow<long long>::edge"** %1, %"struct.Maxflow<long long>::edge"*** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %62, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %64, i32 0, i32 0
  %66 = load %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %63, align 8
  %67 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %66, align 8
  store %"struct.Maxflow<long long>::edge"* %67, %"struct.Maxflow<long long>::edge"** %65, align 8
  store i32 316132828, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Maxflow<long long>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN7MaxflowIxE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"struct.Maxflow<long long>::edge"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.692
  %6 = load i32, i32* @y.693
  %7 = sub i32 %5, 1998374337
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1998374337
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 927402569, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 927402569, label %19
    i32 -2136442208, label %39
    i32 868979584, label %69
    i32 -1173192712, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2136442208, i32 -1173192712
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %41, i32 0, i32 0
  store %"struct.Maxflow<long long>::edge"** %42, %"struct.Maxflow<long long>::edge"*** %2
  %43 = load i32, i32* @x.692
  %44 = load i32, i32* @y.693
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 868979584, i32 -1173192712
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.Maxflow<long long>::edge"**, %"struct.Maxflow<long long>::edge"*** %2
  ret %"struct.Maxflow<long long>::edge"** %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %72, align 8
  %73 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %72, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %73, i32 0, i32 0
  store i32 -2136442208, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.13"*, i64, %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.13"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.14"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.14"* %2, %"class.std::allocator.14"** %6, align 8
  %9 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %6, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"class.std::allocator.14"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.13"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.694
  %16 = load i32, i32* @y.695
  %17 = sub i32 %15, -487401880
  %18 = sub i32 %17, 1
  %19 = add i32 %18, -487401880
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %65

; <label>:41:                                     ; preds = %14, %65
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %7, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #3
  %45 = load i32, i32* @x.694
  %46 = load i32, i32* @y.695
  %47 = sub i32 %45, -1266290913
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1266290913
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %65

; <label>:59:                                     ; preds = %41
  br label %60

; <label>:60:                                     ; preds = %59
  %61 = load i8*, i8** %7, align 8
  %62 = load i32, i32* %8, align 4
  %63 = insertvalue { i8*, i32 } undef, i8* %61, 0
  %64 = insertvalue { i8*, i32 } %63, i32 %62, 1
  resume { i8*, i32 } %64

; <label>:65:                                     ; preds = %41, %14
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %7, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #3
  br label %41
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.12"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.12"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.12"*, %"class.std::vector.12"** %4, align 8
  %8 = bitcast %"class.std::vector.12"* %7 to %"struct.std::_Vector_base.13"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = bitcast %"class.std::vector.12"* %7 to %"struct.std::_Vector_base.13"*
  %15 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %14) #3
  %16 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %11, i64 %12, i32* dereferenceable(4) %13, %"class.std::allocator.14"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.12"* %7 to %"struct.std::_Vector_base.13"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %18, i32 0, i32 1
  store i32* %16, i32** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.14"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator.14"*
  %7 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.14"* %6, %"class.std::allocator.14"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.13"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.700
  %6 = load i32, i32* @y.701
  %7 = sub i32 %5, -1307198613
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1307198613
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1517483454, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1517483454, label %19
    i32 -1832480586, label %27
    i32 1067808337, label %61
    i32 1105376917, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1832480586, i32 1105376917
  store i32 %26, i32* %15
  br label %82

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.13"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.13"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  store i32* %32, i32** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %38, i32 0, i32 1
  store i32* %37, i32** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds i32, i32* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %45, i32 0, i32 2
  store i32* %44, i32** %46, align 8
  %47 = load i32, i32* @x.700
  %48 = load i32, i32* @y.701
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1067808337, i32 1105376917
  store i32 %60, i32* %15
  br label %82

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Vector_base.13"*, align 8
  %64 = alloca i64, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %63, align 8
  store i64 %1, i64* %64, align 8
  %65 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %63, align 8
  %66 = load i64, i64* %64, align 8
  %67 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.13"* %65, i64 %66)
  %68 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %65, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %68, i32 0, i32 0
  store i32* %67, i32** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %65, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %65, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %73, i32 0, i32 1
  store i32* %72, i32** %74, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %65, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %75, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = load i64, i64* %64, align 8
  %79 = getelementptr inbounds i32, i32* %77, i64 %78
  %80 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %65, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %80, i32 0, i32 2
  store i32* %79, i32** %81, align 8
  store i32 -1832480586, i32* %15
  br label %82

; <label>:82:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.14"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.14"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.14"* %3, %"class.std::allocator.14"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %7, i64 %8, i32* dereferenceable(4) %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.708
  %8 = load i32, i32* @y.709
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -2025981382, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2025981382, label %20
    i32 -573797456, label %28
    i32 -2142044145, label %64
    i32 472534675, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -573797456, i32 472534675
  store i32 %27, i32* %16
  br label %75

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32*, align 8
  store i32* %0, i32** %29, align 8
  store i64 %1, i64* %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %32)
  %34 = load i64, i64* %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %33, i64 %34, i32* dereferenceable(4) %35)
  store i32* %36, i32** %4
  %37 = load i32, i32* @x.708
  %38 = load i32, i32* @y.709
  %39 = sub i32 %37, -1788670558
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1788670558
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -2142044145, i32 472534675
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile i32*, i32** %4
  ret i32* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca i32*, align 8
  %68 = alloca i64, align 8
  %69 = alloca i32*, align 8
  store i32* %0, i32** %67, align 8
  store i64 %1, i64* %68, align 8
  store i32* %2, i32** %69, align 8
  %70 = load i32*, i32** %67, align 8
  %71 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %70)
  %72 = load i64, i64* %68, align 8
  %73 = load i32*, i32** %69, align 8
  %74 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %71, i64 %72, i32* dereferenceable(4) %73)
  store i32 -573797456, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.710
  %11 = load i32, i32* @y.711
  %12 = add i32 %10, -525226383
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -525226383
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1110133638, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %155
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1110133638, label %24
    i32 43404479, label %44
    i32 -1504385334, label %83
    i32 -908815486, label %84
    i32 1950666818, label %100
    i32 -438655215, label %119
    i32 -1823922190, label %122
    i32 -365044606, label %127
    i32 2053408676, label %139
    i32 -2044290120, label %142
    i32 1884180140, label %151
  ]

; <label>:23:                                     ; preds = %21
  br label %155

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 43404479, i32 -2044290120
  store i32 %43, i32* %20
  br label %155

; <label>:44:                                     ; preds = %21
  %45 = alloca i32*, align 8
  store i32** %45, i32*** %7
  %46 = alloca i64, align 8
  %47 = alloca i32*, align 8
  %48 = alloca i32, align 4
  store i32* %48, i32** %6
  %49 = alloca i64, align 8
  store i64* %49, i64** %5
  %50 = load volatile i32**, i32*** %7
  store i32* %0, i32** %50, align 8
  store i64 %1, i64* %46, align 8
  store i32* %2, i32** %47, align 8
  %51 = load i32*, i32** %47, align 8
  %52 = load i32, i32* %51, align 4
  %53 = load volatile i32*, i32** %6
  store i32 %52, i32* %53, align 4
  %54 = load i64, i64* %46, align 8
  %55 = load volatile i64*, i64** %5
  store i64 %54, i64* %55, align 8
  %56 = load i32, i32* @x.710
  %57 = load i32, i32* @y.711
  %58 = add i32 %56, 1394609380
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1394609380
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -1504385334, i32 -2044290120
  store i32 %82, i32* %20
  br label %155

; <label>:83:                                     ; preds = %21
  store i32 -908815486, i32* %20
  br label %155

; <label>:84:                                     ; preds = %21
  %85 = load i32, i32* @x.710
  %86 = load i32, i32* @y.711
  %87 = add i32 %85, -162151676
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, -162151676
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 1950666818, i32 1884180140
  store i32 %99, i32* %20
  br label %155

; <label>:100:                                    ; preds = %21
  %101 = load volatile i64*, i64** %5
  %102 = load i64, i64* %101, align 8
  %103 = icmp ugt i64 %102, 0
  store i1 %103, i1* %4
  %104 = load i32, i32* @x.710
  %105 = load i32, i32* @y.711
  %106 = sub i32 %104, -1305800547
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -1305800547
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 -438655215, i32 1884180140
  store i32 %118, i32* %20
  br label %155

; <label>:119:                                    ; preds = %21
  %120 = load volatile i1, i1* %4
  %121 = select i1 %120, i32 -1823922190, i32 2053408676
  store i32 %121, i32* %20
  br label %155

; <label>:122:                                    ; preds = %21
  %123 = load volatile i32*, i32** %6
  %124 = load i32, i32* %123, align 4
  %125 = load volatile i32**, i32*** %7
  %126 = load i32*, i32** %125, align 8
  store i32 %124, i32* %126, align 4
  store i32 -365044606, i32* %20
  br label %155

; <label>:127:                                    ; preds = %21
  %128 = load volatile i64*, i64** %5
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 5523705803591449230
  %131 = add i64 %130, -1
  %132 = sub i64 %131, 5523705803591449230
  %133 = add i64 %129, -1
  %134 = load volatile i64*, i64** %5
  store i64 %132, i64* %134, align 8
  %135 = load volatile i32**, i32*** %7
  %136 = load i32*, i32** %135, align 8
  %137 = getelementptr inbounds i32, i32* %136, i32 1
  %138 = load volatile i32**, i32*** %7
  store i32* %137, i32** %138, align 8
  store i32 -908815486, i32* %20
  br label %155

; <label>:139:                                    ; preds = %21
  %140 = load volatile i32**, i32*** %7
  %141 = load i32*, i32** %140, align 8
  ret i32* %141

; <label>:142:                                    ; preds = %21
  %143 = alloca i32*, align 8
  %144 = alloca i64, align 8
  %145 = alloca i32*, align 8
  %146 = alloca i32, align 4
  %147 = alloca i64, align 8
  store i32* %0, i32** %143, align 8
  store i64 %1, i64* %144, align 8
  store i32* %2, i32** %145, align 8
  %148 = load i32*, i32** %145, align 8
  %149 = load i32, i32* %148, align 4
  store i32 %149, i32* %146, align 4
  %150 = load i64, i64* %144, align 8
  store i64 %150, i64* %147, align 8
  store i32 43404479, i32* %20
  br label %155

; <label>:151:                                    ; preds = %21
  %152 = load volatile i64*, i64** %5
  %153 = load i64, i64* %152, align 8
  %154 = icmp ugt i64 %153, 0
  store i32 1950666818, i32* %20
  br label %155

; <label>:155:                                    ; preds = %151, %142, %127, %122, %119, %100, %84, %83, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE14_M_move_assignEOS1_St17integral_constantIbLb1EE(%"class.std::vector.12"*, %"class.std::vector.12"* dereferenceable(24)) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.712
  %4 = load i32, i32* @y.713
  %5 = add i32 %3, -236096221
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -236096221
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %103

; <label>:17:                                     ; preds = %2, %103
  %18 = alloca %"struct.std::integral_constant", align 1
  %19 = alloca %"class.std::vector.12"*, align 8
  %20 = alloca %"class.std::vector.12"*, align 8
  %21 = alloca %"class.std::vector.12", align 8
  %22 = alloca %"class.std::allocator.14", align 1
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %19, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %20, align 8
  %25 = load %"class.std::vector.12"*, %"class.std::vector.12"** %19, align 8
  %26 = bitcast %"class.std::vector.12"* %25 to %"struct.std::_Vector_base.13"*
  call void @_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv(%"class.std::allocator.14"* sret %22, %"struct.std::_Vector_base.13"* %26) #3
  call void @_ZNSt6vectorIiSaIiEEC2ERKS0_(%"class.std::vector.12"* %21, %"class.std::allocator.14"* dereferenceable(1) %22) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.14"* %22) #3
  %27 = bitcast %"class.std::vector.12"* %25 to %"struct.std::_Vector_base.13"*
  %28 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %27, i32 0, i32 0
  %29 = bitcast %"class.std::vector.12"* %21 to %"struct.std::_Vector_base.13"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %29, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %30) #3
  %31 = bitcast %"class.std::vector.12"* %25 to %"struct.std::_Vector_base.13"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %31, i32 0, i32 0
  %33 = load %"class.std::vector.12"*, %"class.std::vector.12"** %20, align 8
  %34 = bitcast %"class.std::vector.12"* %33 to %"struct.std::_Vector_base.13"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %34, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %35) #3
  %36 = bitcast %"class.std::vector.12"* %25 to %"struct.std::_Vector_base.13"*
  %37 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %36) #3
  %38 = load %"class.std::vector.12"*, %"class.std::vector.12"** %20, align 8
  %39 = bitcast %"class.std::vector.12"* %38 to %"struct.std::_Vector_base.13"*
  %40 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %39) #3
  %41 = load i32, i32* @x.712
  %42 = load i32, i32* @y.713
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %103

; <label>:54:                                     ; preds = %17
  invoke void @_ZSt15__alloc_on_moveISaIiEEvRT_S2_(%"class.std::allocator.14"* dereferenceable(1) %37, %"class.std::allocator.14"* dereferenceable(1) %40)
          to label %55 unwind label %97

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* @x.712
  %57 = load i32, i32* @y.713
  %58 = add i32 %56, -1991416869
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -1991416869
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %127

; <label>:70:                                     ; preds = %55, %127
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %21) #3
  %71 = load i32, i32* @x.712
  %72 = load i32, i32* @y.713
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %127

; <label>:96:                                     ; preds = %70
  ret void

; <label>:97:                                     ; preds = %54
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %23, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %24, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %21) #3
  br label %101

; <label>:101:                                    ; preds = %97
  %102 = load i8*, i8** %23, align 8
  call void @__clang_call_terminate(i8* %102) #11
  unreachable

; <label>:103:                                    ; preds = %17, %2
  %104 = alloca %"struct.std::integral_constant", align 1
  %105 = alloca %"class.std::vector.12"*, align 8
  %106 = alloca %"class.std::vector.12"*, align 8
  %107 = alloca %"class.std::vector.12", align 8
  %108 = alloca %"class.std::allocator.14", align 1
  %109 = alloca i8*
  %110 = alloca i32
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %105, align 8
  store %"class.std::vector.12"* %1, %"class.std::vector.12"** %106, align 8
  %111 = load %"class.std::vector.12"*, %"class.std::vector.12"** %105, align 8
  %112 = bitcast %"class.std::vector.12"* %111 to %"struct.std::_Vector_base.13"*
  call void @_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv(%"class.std::allocator.14"* sret %108, %"struct.std::_Vector_base.13"* %112) #3
  call void @_ZNSt6vectorIiSaIiEEC2ERKS0_(%"class.std::vector.12"* %107, %"class.std::allocator.14"* dereferenceable(1) %108) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.14"* %108) #3
  %113 = bitcast %"class.std::vector.12"* %111 to %"struct.std::_Vector_base.13"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %113, i32 0, i32 0
  %115 = bitcast %"class.std::vector.12"* %107 to %"struct.std::_Vector_base.13"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %115, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %114, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %116) #3
  %117 = bitcast %"class.std::vector.12"* %111 to %"struct.std::_Vector_base.13"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %117, i32 0, i32 0
  %119 = load %"class.std::vector.12"*, %"class.std::vector.12"** %106, align 8
  %120 = bitcast %"class.std::vector.12"* %119 to %"struct.std::_Vector_base.13"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %120, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %118, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %121) #3
  %122 = bitcast %"class.std::vector.12"* %111 to %"struct.std::_Vector_base.13"*
  %123 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %122) #3
  %124 = load %"class.std::vector.12"*, %"class.std::vector.12"** %106, align 8
  %125 = bitcast %"class.std::vector.12"* %124 to %"struct.std::_Vector_base.13"*
  %126 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %125) #3
  br label %17

; <label>:127:                                    ; preds = %70, %55
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.12"* %21) #3
  br label %70
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.12"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.12"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.12"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %2, align 8
  %3 = load %"class.std::vector.12"*, %"class.std::vector.12"** %2, align 8
  ret %"class.std::vector.12"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt12_Vector_baseIiSaIiEE13get_allocatorEv(%"class.std::allocator.14"* noalias sret, %"struct.std::_Vector_base.13"*) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.13"*, align 8
  store %"struct.std::_Vector_base.13"* %1, %"struct.std::_Vector_base.13"** %3, align 8
  %4 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.14"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.13"* %4) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.14"* %0, %"class.std::allocator.14"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2ERKS0_(%"class.std::vector.12"*, %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.718
  %6 = load i32, i32* @y.719
  %7 = add i32 %5, -1801236258
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1801236258
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1489478539, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1489478539, label %19
    i32 -1457991698, label %27
    i32 1149038976, label %60
    i32 -800582230, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1457991698, i32 -800582230
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.12"*, align 8
  %29 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %28, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %29, align 8
  %30 = load %"class.std::vector.12"*, %"class.std::vector.12"** %28, align 8
  %31 = bitcast %"class.std::vector.12"* %30 to %"struct.std::_Vector_base.13"*
  %32 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %29, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_(%"struct.std::_Vector_base.13"* %31, %"class.std::allocator.14"* dereferenceable(1) %32) #3
  %33 = load i32, i32* @x.718
  %34 = load i32, i32* @y.719
  %35 = add i32 %33, 1116691832
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1116691832
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1149038976, i32 -800582230
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::vector.12"*, align 8
  %63 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::vector.12"* %0, %"class.std::vector.12"** %62, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %63, align 8
  %64 = load %"class.std::vector.12"*, %"class.std::vector.12"** %62, align 8
  %65 = bitcast %"class.std::vector.12"* %64 to %"struct.std::_Vector_base.13"*
  %66 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %63, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_(%"struct.std::_Vector_base.13"* %65, %"class.std::allocator.14"* dereferenceable(1) %66) #3
  store i32 -1457991698, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %6, i32** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %9, i32** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %12, i32** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt15__alloc_on_moveISaIiEEvRT_S2_(%"class.std::allocator.14"* dereferenceable(1), %"class.std::allocator.14"* dereferenceable(1)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.722
  %6 = load i32, i32* @y.723
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1006620873, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1006620873, label %18
    i32 2124536887, label %26
    i32 -904639712, label %46
    i32 562923580, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2124536887, i32 562923580
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.14"*, align 8
  %28 = alloca %"class.std::allocator.14"*, align 8
  %29 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %27, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %28, align 8
  %30 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %27, align 8
  %31 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %28, align 8
  call void @_ZSt18__do_alloc_on_moveISaIiEEvRT_S2_St17integral_constantIbLb1EE(%"class.std::allocator.14"* dereferenceable(1) %30, %"class.std::allocator.14"* dereferenceable(1) %31)
  %32 = load i32, i32* @x.722
  %33 = load i32, i32* @y.723
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -904639712, i32 562923580
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.std::allocator.14"*, align 8
  %49 = alloca %"class.std::allocator.14"*, align 8
  %50 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %48, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %49, align 8
  %51 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %48, align 8
  %52 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %49, align 8
  call void @_ZSt18__do_alloc_on_moveISaIiEEvRT_S2_St17integral_constantIbLb1EE(%"class.std::allocator.14"* dereferenceable(1) %51, %"class.std::allocator.14"* dereferenceable(1) %52)
  store i32 2124536887, i32* %14
  br label %53

; <label>:53:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.14"*, %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.724
  %6 = load i32, i32* @y.725
  %7 = sub i32 %5, 550985485
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 550985485
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -718688897, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -718688897, label %19
    i32 386404244, label %27
    i32 -228438990, label %61
    i32 -1785294237, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 386404244, i32 -1785294237
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.14"*, align 8
  %29 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %28, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %29, align 8
  %30 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %28, align 8
  %31 = bitcast %"class.std::allocator.14"* %30 to %"class.__gnu_cxx::new_allocator.15"*
  %32 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %29, align 8
  %33 = bitcast %"class.std::allocator.14"* %32 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.15"* %31, %"class.__gnu_cxx::new_allocator.15"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.724
  %35 = load i32, i32* @y.725
  %36 = sub i32 %34, -1177137928
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1177137928
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -228438990, i32 -1785294237
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator.14"*, align 8
  %64 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %63, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %64, align 8
  %65 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %63, align 8
  %66 = bitcast %"class.std::allocator.14"* %65 to %"class.__gnu_cxx::new_allocator.15"*
  %67 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %64, align 8
  %68 = bitcast %"class.std::allocator.14"* %67 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.15"* %66, %"class.__gnu_cxx::new_allocator.15"* dereferenceable(1) %68) #3
  store i32 386404244, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_(%"struct.std::_Vector_base.13"*, %"class.std::allocator.14"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.13"*, align 8
  %4 = alloca %"class.std::allocator.14"*, align 8
  store %"struct.std::_Vector_base.13"* %0, %"struct.std::_Vector_base.13"** %3, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %4, align 8
  %5 = load %"struct.std::_Vector_base.13"*, %"struct.std::_Vector_base.13"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.13", %"struct.std::_Vector_base.13"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %4, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, %"class.std::allocator.14"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8), i32** dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.728
  %6 = load i32, i32* @y.729
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -827872771, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %82
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -827872771, label %18
    i32 893571016, label %38
    i32 578300793, label %67
    i32 -1245769232, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %82

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 893571016, i32 -1245769232
  store i32 %37, i32* %14
  br label %82

; <label>:38:                                     ; preds = %15
  %39 = alloca i32**, align 8
  %40 = alloca i32**, align 8
  %41 = alloca i32*, align 8
  store i32** %0, i32*** %39, align 8
  store i32** %1, i32*** %40, align 8
  %42 = load i32**, i32*** %39, align 8
  %43 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %42) #3
  %44 = load i32*, i32** %43, align 8
  store i32* %44, i32** %41, align 8
  %45 = load i32**, i32*** %40, align 8
  %46 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %45) #3
  %47 = load i32*, i32** %46, align 8
  %48 = load i32**, i32*** %39, align 8
  store i32* %47, i32** %48, align 8
  %49 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %41) #3
  %50 = load i32*, i32** %49, align 8
  %51 = load i32**, i32*** %40, align 8
  store i32* %50, i32** %51, align 8
  %52 = load i32, i32* @x.728
  %53 = load i32, i32* @y.729
  %54 = sub i32 %52, -290587388
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -290587388
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 578300793, i32 -1245769232
  store i32 %66, i32* %14
  br label %82

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i32*, align 8
  store i32** %0, i32*** %69, align 8
  store i32** %1, i32*** %70, align 8
  %72 = load i32**, i32*** %69, align 8
  %73 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %72) #3
  %74 = load i32*, i32** %73, align 8
  store i32* %74, i32** %71, align 8
  %75 = load i32**, i32*** %70, align 8
  %76 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %75) #3
  %77 = load i32*, i32** %76, align 8
  %78 = load i32**, i32*** %69, align 8
  store i32* %77, i32** %78, align 8
  %79 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %71) #3
  %80 = load i32*, i32** %79, align 8
  %81 = load i32**, i32*** %70, align 8
  store i32* %80, i32** %81, align 8
  store i32 893571016, i32* %14
  br label %82

; <label>:82:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8)) #5 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt18__do_alloc_on_moveISaIiEEvRT_S2_St17integral_constantIbLb1EE(%"class.std::allocator.14"* dereferenceable(1), %"class.std::allocator.14"* dereferenceable(1)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.732
  %6 = load i32, i32* @y.733
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1962097470, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1962097470, label %18
    i32 1199548041, label %38
    i32 -418364850, label %72
    i32 6092363, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1199548041, i32 6092363
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::integral_constant", align 1
  %40 = alloca %"class.std::allocator.14"*, align 8
  %41 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %40, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %41, align 8
  %42 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %41, align 8
  %43 = call dereferenceable(1) %"class.std::allocator.14"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.14"* dereferenceable(1) %42) #3
  %44 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %40, align 8
  %45 = load i32, i32* @x.732
  %46 = load i32, i32* @y.733
  %47 = sub i32 %45, -686886324
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -686886324
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -418364850, i32 6092363
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::integral_constant", align 1
  %75 = alloca %"class.std::allocator.14"*, align 8
  %76 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %75, align 8
  store %"class.std::allocator.14"* %1, %"class.std::allocator.14"** %76, align 8
  %77 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %76, align 8
  %78 = call dereferenceable(1) %"class.std::allocator.14"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.14"* dereferenceable(1) %77) #3
  %79 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %75, align 8
  store i32 1199548041, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Maxflow<long long>::edge"* @_ZNSt6vectorIN7MaxflowIxE4edgeESaIS2_EEixEm(%"class.std::vector.11"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %6 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.17"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Maxflow<long long>::edge, std::allocator<Maxflow<long long>::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Maxflow<long long>::edge"*, %"struct.Maxflow<long long>::edge"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.Maxflow<long long>::edge", %"struct.Maxflow<long long>::edge"* %9, i64 %10
  ret %"struct.Maxflow<long long>::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1646530193, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %61
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1646530193, label %16
    i32 -461999618, label %21
    i32 1459742843, label %37
    i32 1432414662, label %54
    i32 650243412, label %55
    i32 70143859, label %57
    i32 1045065241, label %59
  ]

; <label>:15:                                     ; preds = %13
  br label %61

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp slt i64 %17, %18
  %20 = select i1 %19, i32 -461999618, i32 650243412
  store i32 %20, i32* %12
  br label %61

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.736
  %23 = load i32, i32* @y.737
  %24 = add i32 %22, -630259958
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -630259958
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 1459742843, i32 1045065241
  store i32 %36, i32* %12
  br label %61

; <label>:37:                                     ; preds = %13
  %38 = load i64*, i64** %7, align 8
  store i64* %38, i64** %5, align 8
  %39 = load i32, i32* @x.736
  %40 = load i32, i32* @y.737
  %41 = add i32 %39, -1586453161
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -1586453161
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1432414662, i32 1045065241
  store i32 %53, i32* %12
  br label %61

; <label>:54:                                     ; preds = %13
  store i32 70143859, i32* %12
  br label %61

; <label>:55:                                     ; preds = %13
  %56 = load i64*, i64** %6, align 8
  store i64* %56, i64** %5, align 8
  store i32 70143859, i32* %12
  br label %61

; <label>:57:                                     ; preds = %13
  %58 = load i64*, i64** %5, align 8
  ret i64* %58

; <label>:59:                                     ; preds = %13
  %60 = load i64*, i64** %7, align 8
  store i64* %60, i64** %5, align 8
  store i32 1459742843, i32* %12
  br label %61

; <label>:61:                                     ; preds = %59, %55, %54, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s896919586.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
