; ModuleID = 'Project_CodeNet_C++1400/p03718/s631522313.cpp'
source_filename = "Project_CodeNet_C++1400/p03718/s631522313.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"struct.std::pair" = type { i32, i32 }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" = type { %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"* }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%class.Dinic = type { i32, %"class.std::vector.13", %"class.std::vector.8", %"class.std::vector.8" }
%"class.std::vector.13" = type { %"struct.std::_Vector_base.14" }
%"struct.std::_Vector_base.14" = type { %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl" = type { %"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"* }
%"class.std::vector.18" = type { %"struct.std::_Vector_base.19" }
%"struct.std::_Vector_base.19" = type { %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl" }
%"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl" = type { %class.MaxFEdge*, %class.MaxFEdge*, %class.MaxFEdge* }
%class.MaxFEdge = type <{ i32, [4 x i8], i64, i32, [4 x i8] }>
%"class.std::allocator" = type { i8 }
%"class.std::allocator.5" = type { i8 }
%"class.std::allocator.10" = type { i8 }
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.11" = type { i8 }
%"class.std::allocator.20" = type { i8 }
%"class.__gnu_cxx::new_allocator.21" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::move_iterator" = type { %"class.std::__cxx11::basic_string"* }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"class.std::move_iterator.23" = type { %"class.std::vector.8"* }
%"class.std::move_iterator.24" = type { i32* }
%"class.std::move_iterator.25" = type { %"class.std::vector.18"* }
%"class.std::move_iterator.26" = type { %class.MaxFEdge* }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"class.__gnu_cxx::__normal_iterator" = type { %class.MaxFEdge* }
%"class.std::allocator.27" = type { i8 }
%"class.__gnu_cxx::new_allocator.28" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.30" = type { i32* }

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6resizeEm = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIiSaIiEE6resizeEm = comdat any

$_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_ = comdat any

$_ZNSt4pairIiiEaSEOS0_ = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZN5DinicIxEC2Ei = comdat any

$_ZN5DinicIxE7AddEdgeEiix = comdat any

$_ZN5DinicIxE7MaxFlowEii = comdat any

$_ZN5DinicIxED2Ev = comdat any

$_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EED2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EES4_EvT_S6_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EEEvT_S6_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI8MaxFEdgeIxESaIS4_EEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt6vectorI8MaxFEdgeIxESaIS2_EEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorI8MaxFEdgeIxESaIS2_EEEPT_RS5_ = comdat any

$_ZNSt6vectorI8MaxFEdgeIxESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIP8MaxFEdgeIxES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIP8MaxFEdgeIxEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP8MaxFEdgeIxEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE10deallocateEPS2_m = comdat any

$_ZNSaI8MaxFEdgeIxEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorI8MaxFEdgeIxESaIS2_EEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEE10deallocateEPS5_m = comdat any

$_ZNSaISt6vectorI8MaxFEdgeIxESaIS1_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEED2Ev = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev = comdat any

$_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ = comdat any

$_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ = comdat any

$_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m = comdat any

$_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endEPS5_ = comdat any

$_ZSt27__uninitialized_default_n_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmS5_ET_S7_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmET_S7_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_ = comdat any

$_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_ = comdat any

$_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_ = comdat any

$_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv = comdat any

$_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv = comdat any

$_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m = comdat any

$_ZNSaISt6vectorIiSaIiEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_ = comdat any

$_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_ = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_ = comdat any

$_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv = comdat any

$_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt6vectorIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZSt4swapIPiEvRT_S2_ = comdat any

$_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_ = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPimET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEC2Ev = comdat any

$_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE6resizeEm = comdat any

$_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorI8MaxFEdgeIxESaIS1_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEEC2Ev = comdat any

$_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv = comdat any

$_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_ = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorI8MaxFEdgeIxESaIS2_EEmS4_ET_S6_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorI8MaxFEdgeIxESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorI8MaxFEdgeIxESaIS2_EEmET_S6_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI8MaxFEdgeIxESaIS4_EEmEET_S8_T0_ = comdat any

$_ZSt10_ConstructISt6vectorI8MaxFEdgeIxESaIS2_EEJEEvPT_DpOT0_ = comdat any

$_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaI8MaxFEdgeIxEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEEC2Ev = comdat any

$_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorI8MaxFEdgeIxESaIS2_EEEE8max_sizeERKS5_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorI8MaxFEdgeIxESaIS2_EEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EESt13move_iteratorIS5_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS3_EEES6_ET0_T_S9_S8_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS5_EEES8_EET0_T_SB_SA_ = comdat any

$_ZStneIPSt6vectorI8MaxFEdgeIxESaIS2_EEEbRKSt13move_iteratorIT_ESA_ = comdat any

$_ZSt10_ConstructISt6vectorI8MaxFEdgeIxESaIS2_EEJS4_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEEppEv = comdat any

$_ZSteqIPSt6vectorI8MaxFEdgeIxESaIS2_EEEbRKSt13move_iteratorIT_ESA_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEE4baseEv = comdat any

$_ZSt7forwardISt6vectorI8MaxFEdgeIxESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSt6vectorI8MaxFEdgeIxESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaI8MaxFEdgeIxEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZNSaI8MaxFEdgeIxEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEEC2ERKS3_ = comdat any

$_ZSt4swapIP8MaxFEdgeIxEEvRT_S4_ = comdat any

$_ZSt4moveIRP8MaxFEdgeIxEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEEC2ES5_ = comdat any

$_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm = comdat any

$_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE9push_backEOS1_ = comdat any

$_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv = comdat any

$_ZN8MaxFEdgeIxEC2Eixi = comdat any

$_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIR8MaxFEdgeIxEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardI8MaxFEdgeIxEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP8MaxFEdgeIxES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIP8MaxFEdgeIxEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIP8MaxFEdgeIxESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIP8MaxFEdgeIxEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIP8MaxFEdgeIxEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIP8MaxFEdgeIxEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructI8MaxFEdgeIxEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofI8MaxFEdgeIxEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIP8MaxFEdgeIxEEdeEv = comdat any

$_ZNSt13move_iteratorIP8MaxFEdgeIxEEppEv = comdat any

$_ZSteqIP8MaxFEdgeIxEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIP8MaxFEdgeIxEE4baseEv = comdat any

$_ZNSt13move_iteratorIP8MaxFEdgeIxEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt14numeric_limitsIxE3maxEv = comdat any

$_ZN5DinicIxE3bfsEi = comdat any

$_ZNSt6vectorIiSaIiEE6assignEmRKi = comdat any

$_ZN5DinicIxE3dfsEiix = comdat any

$_ZNSt5dequeIiSaIiEEC2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_ = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi = comdat any

$_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv = comdat any

$_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt5dequeIiSaIiEEC2EOS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_ = comdat any

$_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_ = comdat any

$_ZSt4swapIPPiEvRT_S3_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt5dequeIiSaIiEE9push_backERKi = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNKSt5dequeIiSaIiEE5emptyEv = comdat any

$_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_ = comdat any

$_ZNSt5dequeIiSaIiEE5frontEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt5dequeIiSaIiEE9pop_frontEv = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi = comdat any

$_ZNKSt6vectorIiSaIiEE8capacityEv = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_ = comdat any

$_ZNSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt6vectorIiSaIiEE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_ = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEixEm = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@H = global i32 0, align 4
@W = global i32 0, align 4
@_Z1AB5cxx11 = global %"class.std::vector" zeroinitializer, align 8
@S = global %"struct.std::pair" zeroinitializer, align 4
@T = global %"struct.std::pair" zeroinitializer, align 4
@M = global %"class.std::vector.3" zeroinitializer, align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [4 x i8] c"-1\0A\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s631522313.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0
@x.622 = common global i32 0
@y.623 = common global i32 0
@x.624 = common global i32 0
@y.625 = common global i32 0
@x.626 = common global i32 0
@y.627 = common global i32 0
@x.628 = common global i32 0
@y.629 = common global i32 0
@x.630 = common global i32 0
@y.631 = common global i32 0
@x.632 = common global i32 0
@y.633 = common global i32 0
@x.634 = common global i32 0
@y.635 = common global i32 0
@x.636 = common global i32 0
@y.637 = common global i32 0
@x.638 = common global i32 0
@y.639 = common global i32 0
@x.640 = common global i32 0
@y.641 = common global i32 0
@x.642 = common global i32 0
@y.643 = common global i32 0
@x.644 = common global i32 0
@y.645 = common global i32 0
@x.646 = common global i32 0
@y.647 = common global i32 0
@x.648 = common global i32 0
@y.649 = common global i32 0
@x.650 = common global i32 0
@y.651 = common global i32 0
@x.652 = common global i32 0
@y.653 = common global i32 0
@x.654 = common global i32 0
@y.655 = common global i32 0
@x.656 = common global i32 0
@y.657 = common global i32 0
@x.658 = common global i32 0
@y.659 = common global i32 0
@x.660 = common global i32 0
@y.661 = common global i32 0
@x.662 = common global i32 0
@y.663 = common global i32 0
@x.664 = common global i32 0
@y.665 = common global i32 0
@x.666 = common global i32 0
@y.667 = common global i32 0
@x.668 = common global i32 0
@y.669 = common global i32 0
@x.670 = common global i32 0
@y.671 = common global i32 0
@x.672 = common global i32 0
@y.673 = common global i32 0
@x.674 = common global i32 0
@y.675 = common global i32 0
@x.676 = common global i32 0
@y.677 = common global i32 0
@x.678 = common global i32 0
@y.679 = common global i32 0
@x.680 = common global i32 0
@y.681 = common global i32 0
@x.682 = common global i32 0
@y.683 = common global i32 0
@x.684 = common global i32 0
@y.685 = common global i32 0
@x.686 = common global i32 0
@y.687 = common global i32 0
@x.688 = common global i32 0
@y.689 = common global i32 0
@x.690 = common global i32 0
@y.691 = common global i32 0
@x.692 = common global i32 0
@y.693 = common global i32 0
@x.694 = common global i32 0
@y.695 = common global i32 0
@x.696 = common global i32 0
@y.697 = common global i32 0
@x.698 = common global i32 0
@y.699 = common global i32 0
@x.700 = common global i32 0
@y.701 = common global i32 0
@x.702 = common global i32 0
@y.703 = common global i32 0
@x.704 = common global i32 0
@y.705 = common global i32 0
@x.706 = common global i32 0
@y.707 = common global i32 0
@x.708 = common global i32 0
@y.709 = common global i32 0
@x.710 = common global i32 0
@y.711 = common global i32 0
@x.712 = common global i32 0
@y.713 = common global i32 0
@x.714 = common global i32 0
@y.715 = common global i32 0
@x.716 = common global i32 0
@y.717 = common global i32 0
@x.718 = common global i32 0
@y.719 = common global i32 0
@x.720 = common global i32 0
@y.721 = common global i32 0
@x.722 = common global i32 0
@y.723 = common global i32 0
@x.724 = common global i32 0
@y.725 = common global i32 0
@x.726 = common global i32 0
@y.727 = common global i32 0
@x.728 = common global i32 0
@y.729 = common global i32 0
@x.730 = common global i32 0
@y.731 = common global i32 0
@x.732 = common global i32 0
@y.733 = common global i32 0
@x.734 = common global i32 0
@y.735 = common global i32 0
@x.736 = common global i32 0
@y.737 = common global i32 0
@x.738 = common global i32 0
@y.739 = common global i32 0
@x.740 = common global i32 0
@y.741 = common global i32 0
@x.742 = common global i32 0
@y.743 = common global i32 0
@x.744 = common global i32 0
@y.745 = common global i32 0
@x.746 = common global i32 0
@y.747 = common global i32 0
@x.748 = common global i32 0
@y.749 = common global i32 0
@x.750 = common global i32 0
@y.751 = common global i32 0
@x.752 = common global i32 0
@y.753 = common global i32 0
@x.754 = common global i32 0
@y.755 = common global i32 0
@x.756 = common global i32 0
@y.757 = common global i32 0
@x.758 = common global i32 0
@y.759 = common global i32 0
@x.760 = common global i32 0
@y.761 = common global i32 0
@x.762 = common global i32 0
@y.763 = common global i32 0
@x.764 = common global i32 0
@y.765 = common global i32 0
@x.766 = common global i32 0
@y.767 = common global i32 0
@x.768 = common global i32 0
@y.769 = common global i32 0
@x.770 = common global i32 0
@y.771 = common global i32 0
@x.772 = common global i32 0
@y.773 = common global i32 0
@x.774 = common global i32 0
@y.775 = common global i32 0
@x.776 = common global i32 0
@y.777 = common global i32 0
@x.778 = common global i32 0
@y.779 = common global i32 0
@x.780 = common global i32 0
@y.781 = common global i32 0
@x.782 = common global i32 0
@y.783 = common global i32 0
@x.784 = common global i32 0
@y.785 = common global i32 0
@x.786 = common global i32 0
@y.787 = common global i32 0
@x.788 = common global i32 0
@y.789 = common global i32 0
@x.790 = common global i32 0
@y.791 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.6
  %4 = load i32, i32* @y.7
  %5 = add i32 %3, 720512978
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 720512978
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 1363362005, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1363362005, label %17
    i32 580748338, label %25
    i32 180093781, label %50
    i32 -617915123, label %51
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 580748338, i32 -617915123
  store i32 %24, i32* %13
  br label %61

; <label>:25:                                     ; preds = %14
  %26 = alloca i32, align 4
  store i32 0, i32* %26, align 4
  %27 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %28 = getelementptr i8, i8* %27, i64 -24
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %30
  %32 = bitcast i8* %31 to %"class.std::basic_ios"*
  %33 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %32, %"class.std::basic_ostream"* null)
  %34 = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  call void @_Z5inputv()
  call void @_Z5solvev()
  %35 = load i32, i32* @x.6
  %36 = load i32, i32* @y.7
  %37 = sub i32 %35, 923841154
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 923841154
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 180093781, i32 -617915123
  store i32 %49, i32* %13
  br label %61

; <label>:50:                                     ; preds = %14
  ret i32 0

; <label>:51:                                     ; preds = %14
  %52 = alloca i32, align 4
  store i32 0, i32* %52, align 4
  %53 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %54 = getelementptr i8, i8* %53, i64 -24
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %56
  %58 = bitcast i8* %57 to %"class.std::basic_ios"*
  %59 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %58, %"class.std::basic_ostream"* null)
  %60 = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  call void @_Z5inputv()
  call void @_Z5solvev()
  store i32 580748338, i32* %13
  br label %61

; <label>:61:                                     ; preds = %51, %25, %17, %16
  br label %14
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) #1

; Function Attrs: noinline uwtable
define void @_Z5inputv() #0 {
  %1 = alloca i1
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.8
  %6 = load i32, i32* @y.9
  %7 = add i32 %5, 808801741
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 808801741
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -597531321, i32* %15
  br label %16

; <label>:16:                                     ; preds = %0, %285
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -597531321, label %19
    i32 536287676, label %39
    i32 -1823795015, label %61
    i32 -2036730326, label %62
    i32 -244700181, label %89
    i32 -1743351036, label %121
    i32 -428345520, label %124
    i32 -2024936716, label %152
    i32 -795000114, label %185
    i32 127690544, label %186
    i32 -997407350, label %214
    i32 -206043162, label %236
    i32 1631339206, label %237
    i32 1592540259, label %238
    i32 2065437718, label %244
    i32 335167927, label %249
    i32 -1505669557, label %255
  ]

; <label>:18:                                     ; preds = %16
  br label %285

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 536287676, i32 1592540259
  store i32 %38, i32* %15
  br label %285

; <label>:39:                                     ; preds = %16
  %40 = alloca i32, align 4
  store i32* %40, i32** %2
  %41 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) @H)
  %42 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %41, i32* dereferenceable(4) @W)
  %43 = load i32, i32* @H, align 4
  %44 = sext i32 %43 to i64
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6resizeEm(%"class.std::vector"* @_Z1AB5cxx11, i64 %44)
  %45 = load volatile i32*, i32** %2
  store i32 0, i32* %45, align 4
  %46 = load i32, i32* @x.8
  %47 = load i32, i32* @y.9
  %48 = add i32 %46, 833156633
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 833156633
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1823795015, i32 1592540259
  store i32 %60, i32* %15
  br label %285

; <label>:61:                                     ; preds = %16
  store i32 -2036730326, i32* %15
  br label %285

; <label>:62:                                     ; preds = %16
  %63 = load i32, i32* @x.8
  %64 = load i32, i32* @y.9
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -244700181, i32 2065437718
  store i32 %88, i32* %15
  br label %285

; <label>:89:                                     ; preds = %16
  %90 = load volatile i32*, i32** %2
  %91 = load i32, i32* %90, align 4
  %92 = load i32, i32* @H, align 4
  %93 = icmp slt i32 %91, %92
  store i1 %93, i1* %1
  %94 = load i32, i32* @x.8
  %95 = load i32, i32* @y.9
  %96 = add i32 %94, 1336377628
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 1336377628
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 false, true
  %107 = and i1 %104, false
  %108 = and i1 %102, %106
  %109 = and i1 %105, false
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 false, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 -1743351036, i32 2065437718
  store i32 %120, i32* %15
  br label %285

; <label>:121:                                    ; preds = %16
  %122 = load volatile i1, i1* %1
  %123 = select i1 %122, i32 -428345520, i32 1631339206
  store i32 %123, i32* %15
  br label %285

; <label>:124:                                    ; preds = %16
  %125 = load i32, i32* @x.8
  %126 = load i32, i32* @y.9
  %127 = add i32 %125, -282482702
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -282482702
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  %151 = select i1 %149, i32 -2024936716, i32 335167927
  store i32 %151, i32* %15
  br label %285

; <label>:152:                                    ; preds = %16
  %153 = load volatile i32*, i32** %2
  %154 = load i32, i32* %153, align 4
  %155 = sext i32 %154 to i64
  %156 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector"* @_Z1AB5cxx11, i64 %155) #3
  %157 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, %"class.std::__cxx11::basic_string"* dereferenceable(32) %156)
  %158 = load i32, i32* @x.8
  %159 = load i32, i32* @y.9
  %160 = sub i32 %158, -784387543
  %161 = sub i32 %160, 1
  %162 = add i32 %161, -784387543
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 true, true
  %171 = and i1 %168, true
  %172 = and i1 %166, %170
  %173 = and i1 %169, true
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 true, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  %184 = select i1 %182, i32 -795000114, i32 335167927
  store i32 %184, i32* %15
  br label %285

; <label>:185:                                    ; preds = %16
  store i32 127690544, i32* %15
  br label %285

; <label>:186:                                    ; preds = %16
  %187 = load i32, i32* @x.8
  %188 = load i32, i32* @y.9
  %189 = add i32 %187, 737302072
  %190 = sub i32 %189, 1
  %191 = sub i32 %190, 737302072
  %192 = sub i32 %187, 1
  %193 = mul i32 %187, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %188, 10
  %197 = xor i1 %195, true
  %198 = xor i1 %196, true
  %199 = xor i1 true, true
  %200 = and i1 %197, true
  %201 = and i1 %195, %199
  %202 = and i1 %198, true
  %203 = and i1 %196, %199
  %204 = or i1 %200, %201
  %205 = or i1 %202, %203
  %206 = xor i1 %204, %205
  %207 = or i1 %197, %198
  %208 = xor i1 %207, true
  %209 = or i1 true, %199
  %210 = and i1 %208, %209
  %211 = or i1 %206, %210
  %212 = or i1 %195, %196
  %213 = select i1 %211, i32 -997407350, i32 -1505669557
  store i32 %213, i32* %15
  br label %285

; <label>:214:                                    ; preds = %16
  %215 = load volatile i32*, i32** %2
  %216 = load i32, i32* %215, align 4
  %217 = sub i32 0, 1
  %218 = sub i32 %216, %217
  %219 = add nsw i32 %216, 1
  %220 = load volatile i32*, i32** %2
  store i32 %218, i32* %220, align 4
  %221 = load i32, i32* @x.8
  %222 = load i32, i32* @y.9
  %223 = add i32 %221, -1175836127
  %224 = sub i32 %223, 1
  %225 = sub i32 %224, -1175836127
  %226 = sub i32 %221, 1
  %227 = mul i32 %221, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %222, 10
  %231 = and i1 %229, %230
  %232 = xor i1 %229, %230
  %233 = or i1 %231, %232
  %234 = or i1 %229, %230
  %235 = select i1 %233, i32 -206043162, i32 -1505669557
  store i32 %235, i32* %15
  br label %285

; <label>:236:                                    ; preds = %16
  store i32 -2036730326, i32* %15
  br label %285

; <label>:237:                                    ; preds = %16
  ret void

; <label>:238:                                    ; preds = %16
  %239 = alloca i32, align 4
  %240 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) @H)
  %241 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %240, i32* dereferenceable(4) @W)
  %242 = load i32, i32* @H, align 4
  %243 = sext i32 %242 to i64
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6resizeEm(%"class.std::vector"* @_Z1AB5cxx11, i64 %243)
  store i32 0, i32* %239, align 4
  store i32 536287676, i32* %15
  br label %285

; <label>:244:                                    ; preds = %16
  %245 = load volatile i32*, i32** %2
  %246 = load i32, i32* %245, align 4
  %247 = load i32, i32* @H, align 4
  %248 = icmp slt i32 %246, %247
  store i32 -244700181, i32* %15
  br label %285

; <label>:249:                                    ; preds = %16
  %250 = load volatile i32*, i32** %2
  %251 = load i32, i32* %250, align 4
  %252 = sext i32 %251 to i64
  %253 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector"* @_Z1AB5cxx11, i64 %252) #3
  %254 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, %"class.std::__cxx11::basic_string"* dereferenceable(32) %253)
  store i32 -2024936716, i32* %15
  br label %285

; <label>:255:                                    ; preds = %16
  %256 = load volatile i32*, i32** %2
  %257 = load i32, i32* %256, align 4
  %258 = add i32 0, 1600570215
  %259 = sub i32 %258, %257
  %260 = sub i32 %259, 1600570215
  %261 = sub i32 0, %257
  %262 = sub i32 0, 1
  %263 = sub i32 %260, %262
  %264 = add i32 %260, 1
  %265 = sub i32 %257, -1233913783
  %266 = sub i32 %265, 1
  %267 = add i32 %266, -1233913783
  %268 = sub i32 %257, 1
  %269 = mul i32 %267, 1
  %270 = shl i32 %257, 1
  %271 = add i32 %257, -1634359793
  %272 = sub i32 %271, 1
  %273 = sub i32 %272, -1634359793
  %274 = sub i32 %257, 1
  %275 = mul i32 %273, 1
  %276 = sub i32 0, 1
  %277 = add i32 %257, %276
  %278 = sub i32 %257, 1
  %279 = mul i32 %277, 1
  %280 = sub i32 %257, 1548616975
  %281 = add i32 %280, 1
  %282 = add i32 %281, 1548616975
  %283 = add nsw i32 %257, 1
  %284 = load volatile i32*, i32** %2
  store i32 %282, i32* %284, align 4
  store i32 -997407350, i32* %15
  br label %285

; <label>:285:                                    ; preds = %255, %249, %244, %238, %236, %214, %186, %185, %152, %124, %121, %89, %62, %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define void @_Z5solvev() #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.10
  %2 = load i32, i32* @y.11
  %3 = add i32 %1, -804109598
  %4 = sub i32 %3, 1
  %5 = sub i32 %4, -804109598
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %1071

; <label>:27:                                     ; preds = %0, %1071
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %"struct.std::pair", align 4
  %31 = alloca %"struct.std::pair", align 4
  %32 = alloca %class.Dinic, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i8*
  %37 = alloca i32
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = load i32, i32* @H, align 4
  %44 = sext i32 %43 to i64
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm(%"class.std::vector.3"* @M, i64 %44)
  store i32 0, i32* %28, align 4
  %45 = load i32, i32* @x.10
  %46 = load i32, i32* @y.11
  %47 = sub i32 %45, 255672490
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 255672490
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %1071

; <label>:59:                                     ; preds = %27
  br label %60

; <label>:60:                                     ; preds = %359, %59
  %61 = load i32, i32* @x.10
  %62 = load i32, i32* @y.11
  %63 = add i32 %61, 1548869508
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 1548869508
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %1089

; <label>:87:                                     ; preds = %60, %1089
  %88 = load i32, i32* %28, align 4
  %89 = load i32, i32* @H, align 4
  %90 = icmp slt i32 %88, %89
  %91 = load i32, i32* @x.10
  %92 = load i32, i32* @y.11
  %93 = sub i32 %91, 1949182026
  %94 = sub i32 %93, 1
  %95 = add i32 %94, 1949182026
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 true, true
  %104 = and i1 %101, true
  %105 = and i1 %99, %103
  %106 = and i1 %102, true
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 true, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %1089

; <label>:117:                                    ; preds = %87
  br i1 %90, label %118, label %365

; <label>:118:                                    ; preds = %117
  %119 = load i32, i32* @x.10
  %120 = load i32, i32* @y.11
  %121 = sub i32 0, 1
  %122 = add i32 %119, %121
  %123 = sub i32 %119, 1
  %124 = mul i32 %119, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %120, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %1093

; <label>:144:                                    ; preds = %118, %1093
  %145 = load i32, i32* %28, align 4
  %146 = sext i32 %145 to i64
  %147 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.3"* @M, i64 %146) #3
  %148 = load i32, i32* @W, align 4
  %149 = sext i32 %148 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.8"* %147, i64 %149)
  store i32 0, i32* %29, align 4
  %150 = load i32, i32* @x.10
  %151 = load i32, i32* @y.11
  %152 = sub i32 0, 1
  %153 = add i32 %150, %152
  %154 = sub i32 %150, 1
  %155 = mul i32 %150, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %151, 10
  %159 = xor i1 %157, true
  %160 = xor i1 %158, true
  %161 = xor i1 true, true
  %162 = and i1 %159, true
  %163 = and i1 %157, %161
  %164 = and i1 %160, true
  %165 = and i1 %158, %161
  %166 = or i1 %162, %163
  %167 = or i1 %164, %165
  %168 = xor i1 %166, %167
  %169 = or i1 %159, %160
  %170 = xor i1 %169, true
  %171 = or i1 true, %161
  %172 = and i1 %170, %171
  %173 = or i1 %168, %172
  %174 = or i1 %157, %158
  br i1 %173, label %175, label %1093

; <label>:175:                                    ; preds = %144
  br label %176

; <label>:176:                                    ; preds = %352, %175
  %177 = load i32, i32* %29, align 4
  %178 = load i32, i32* @W, align 4
  %179 = icmp slt i32 %177, %178
  br i1 %179, label %180, label %358

; <label>:180:                                    ; preds = %176
  %181 = load i32, i32* %28, align 4
  %182 = sext i32 %181 to i64
  %183 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector"* @_Z1AB5cxx11, i64 %182) #3
  %184 = load i32, i32* %29, align 4
  %185 = sext i32 %184 to i64
  %186 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %183, i64 %185)
  %187 = load i8, i8* %186, align 1
  %188 = sext i8 %187 to i32
  %189 = icmp eq i32 %188, 83
  br i1 %189, label %190, label %232

; <label>:190:                                    ; preds = %180
  %191 = load i32, i32* @x.10
  %192 = load i32, i32* @y.11
  %193 = sub i32 0, 1
  %194 = add i32 %191, %193
  %195 = sub i32 %191, 1
  %196 = mul i32 %191, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %192, 10
  %200 = xor i1 %198, true
  %201 = xor i1 %199, true
  %202 = xor i1 true, true
  %203 = and i1 %200, true
  %204 = and i1 %198, %202
  %205 = and i1 %201, true
  %206 = and i1 %199, %202
  %207 = or i1 %203, %204
  %208 = or i1 %205, %206
  %209 = xor i1 %207, %208
  %210 = or i1 %200, %201
  %211 = xor i1 %210, true
  %212 = or i1 true, %202
  %213 = and i1 %211, %212
  %214 = or i1 %209, %213
  %215 = or i1 %198, %199
  br i1 %214, label %216, label %1099

; <label>:216:                                    ; preds = %190, %1099
  call void @_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_(%"struct.std::pair"* %30, i32* dereferenceable(4) %28, i32* dereferenceable(4) %29)
  %217 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"* @S, %"struct.std::pair"* dereferenceable(8) %30) #3
  %218 = load i32, i32* @x.10
  %219 = load i32, i32* @y.11
  %220 = sub i32 0, 1
  %221 = add i32 %218, %220
  %222 = sub i32 %218, 1
  %223 = mul i32 %218, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %219, 10
  %227 = and i1 %225, %226
  %228 = xor i1 %225, %226
  %229 = or i1 %227, %228
  %230 = or i1 %225, %226
  br i1 %229, label %231, label %1099

; <label>:231:                                    ; preds = %216
  br label %232

; <label>:232:                                    ; preds = %231, %180
  %233 = load i32, i32* %28, align 4
  %234 = sext i32 %233 to i64
  %235 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector"* @_Z1AB5cxx11, i64 %234) #3
  %236 = load i32, i32* %29, align 4
  %237 = sext i32 %236 to i64
  %238 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %235, i64 %237)
  %239 = load i8, i8* %238, align 1
  %240 = sext i8 %239 to i32
  %241 = icmp eq i32 %240, 84
  br i1 %241, label %242, label %244

; <label>:242:                                    ; preds = %232
  call void @_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_(%"struct.std::pair"* %31, i32* dereferenceable(4) %28, i32* dereferenceable(4) %29)
  %243 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"* @T, %"struct.std::pair"* dereferenceable(8) %31) #3
  br label %244

; <label>:244:                                    ; preds = %242, %232
  %245 = load i32, i32* %28, align 4
  %246 = sext i32 %245 to i64
  %247 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector"* @_Z1AB5cxx11, i64 %246) #3
  %248 = load i32, i32* %29, align 4
  %249 = sext i32 %248 to i64
  %250 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %247, i64 %249)
  %251 = load i8, i8* %250, align 1
  %252 = sext i8 %251 to i32
  %253 = icmp eq i32 %252, 46
  br i1 %253, label %254, label %261

; <label>:254:                                    ; preds = %244
  %255 = load i32, i32* %28, align 4
  %256 = sext i32 %255 to i64
  %257 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.3"* @M, i64 %256) #3
  %258 = load i32, i32* %29, align 4
  %259 = sext i32 %258 to i64
  %260 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %257, i64 %259) #3
  store i32 0, i32* %260, align 4
  br label %298

; <label>:261:                                    ; preds = %244
  %262 = load i32, i32* @x.10
  %263 = load i32, i32* @y.11
  %264 = add i32 %262, -1468858699
  %265 = sub i32 %264, 1
  %266 = sub i32 %265, -1468858699
  %267 = sub i32 %262, 1
  %268 = mul i32 %262, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %263, 10
  %272 = and i1 %270, %271
  %273 = xor i1 %270, %271
  %274 = or i1 %272, %273
  %275 = or i1 %270, %271
  br i1 %274, label %276, label %1101

; <label>:276:                                    ; preds = %261, %1101
  %277 = load i32, i32* %28, align 4
  %278 = sext i32 %277 to i64
  %279 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.3"* @M, i64 %278) #3
  %280 = load i32, i32* %29, align 4
  %281 = sext i32 %280 to i64
  %282 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %279, i64 %281) #3
  store i32 1, i32* %282, align 4
  %283 = load i32, i32* @x.10
  %284 = load i32, i32* @y.11
  %285 = sub i32 %283, 1144906769
  %286 = sub i32 %285, 1
  %287 = add i32 %286, 1144906769
  %288 = sub i32 %283, 1
  %289 = mul i32 %283, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %284, 10
  %293 = and i1 %291, %292
  %294 = xor i1 %291, %292
  %295 = or i1 %293, %294
  %296 = or i1 %291, %292
  br i1 %295, label %297, label %1101

; <label>:297:                                    ; preds = %276
  br label %298

; <label>:298:                                    ; preds = %297, %254
  %299 = load i32, i32* @x.10
  %300 = load i32, i32* @y.11
  %301 = sub i32 0, 1
  %302 = add i32 %299, %301
  %303 = sub i32 %299, 1
  %304 = mul i32 %299, %302
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %300, 10
  %308 = xor i1 %306, true
  %309 = xor i1 %307, true
  %310 = xor i1 true, true
  %311 = and i1 %308, true
  %312 = and i1 %306, %310
  %313 = and i1 %309, true
  %314 = and i1 %307, %310
  %315 = or i1 %311, %312
  %316 = or i1 %313, %314
  %317 = xor i1 %315, %316
  %318 = or i1 %308, %309
  %319 = xor i1 %318, true
  %320 = or i1 true, %310
  %321 = and i1 %319, %320
  %322 = or i1 %317, %321
  %323 = or i1 %306, %307
  br i1 %322, label %324, label %1108

; <label>:324:                                    ; preds = %298, %1108
  %325 = load i32, i32* @x.10
  %326 = load i32, i32* @y.11
  %327 = add i32 %325, 822764006
  %328 = sub i32 %327, 1
  %329 = sub i32 %328, 822764006
  %330 = sub i32 %325, 1
  %331 = mul i32 %325, %329
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %326, 10
  %335 = xor i1 %333, true
  %336 = xor i1 %334, true
  %337 = xor i1 false, true
  %338 = and i1 %335, false
  %339 = and i1 %333, %337
  %340 = and i1 %336, false
  %341 = and i1 %334, %337
  %342 = or i1 %338, %339
  %343 = or i1 %340, %341
  %344 = xor i1 %342, %343
  %345 = or i1 %335, %336
  %346 = xor i1 %345, true
  %347 = or i1 false, %337
  %348 = and i1 %346, %347
  %349 = or i1 %344, %348
  %350 = or i1 %333, %334
  br i1 %349, label %351, label %1108

; <label>:351:                                    ; preds = %324
  br label %352

; <label>:352:                                    ; preds = %351
  %353 = load i32, i32* %29, align 4
  %354 = sub i32 %353, 2097379641
  %355 = add i32 %354, 1
  %356 = add i32 %355, 2097379641
  %357 = add nsw i32 %353, 1
  store i32 %356, i32* %29, align 4
  br label %176

; <label>:358:                                    ; preds = %176
  br label %359

; <label>:359:                                    ; preds = %358
  %360 = load i32, i32* %28, align 4
  %361 = add i32 %360, -1107595540
  %362 = add i32 %361, 1
  %363 = sub i32 %362, -1107595540
  %364 = add nsw i32 %360, 1
  store i32 %363, i32* %28, align 4
  br label %60

; <label>:365:                                    ; preds = %117
  %366 = load i32, i32* @x.10
  %367 = load i32, i32* @y.11
  %368 = sub i32 0, 1
  %369 = add i32 %366, %368
  %370 = sub i32 %366, 1
  %371 = mul i32 %366, %369
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %367, 10
  %375 = and i1 %373, %374
  %376 = xor i1 %373, %374
  %377 = or i1 %375, %376
  %378 = or i1 %373, %374
  br i1 %377, label %379, label %1109

; <label>:379:                                    ; preds = %365, %1109
  %380 = load i32, i32* getelementptr inbounds (%"struct.std::pair", %"struct.std::pair"* @S, i32 0, i32 0), align 4
  %381 = load i32, i32* getelementptr inbounds (%"struct.std::pair", %"struct.std::pair"* @T, i32 0, i32 0), align 4
  %382 = icmp eq i32 %380, %381
  %383 = load i32, i32* @x.10
  %384 = load i32, i32* @y.11
  %385 = sub i32 0, 1
  %386 = add i32 %383, %385
  %387 = sub i32 %383, 1
  %388 = mul i32 %383, %386
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %384, 10
  %392 = xor i1 %390, true
  %393 = xor i1 %391, true
  %394 = xor i1 true, true
  %395 = and i1 %392, true
  %396 = and i1 %390, %394
  %397 = and i1 %393, true
  %398 = and i1 %391, %394
  %399 = or i1 %395, %396
  %400 = or i1 %397, %398
  %401 = xor i1 %399, %400
  %402 = or i1 %392, %393
  %403 = xor i1 %402, true
  %404 = or i1 true, %394
  %405 = and i1 %403, %404
  %406 = or i1 %401, %405
  %407 = or i1 %390, %391
  br i1 %406, label %408, label %1109

; <label>:408:                                    ; preds = %379
  br i1 %382, label %413, label %409

; <label>:409:                                    ; preds = %408
  %410 = load i32, i32* getelementptr inbounds (%"struct.std::pair", %"struct.std::pair"* @S, i32 0, i32 1), align 4
  %411 = load i32, i32* getelementptr inbounds (%"struct.std::pair", %"struct.std::pair"* @T, i32 0, i32 1), align 4
  %412 = icmp eq i32 %410, %411
  br i1 %412, label %413, label %415

; <label>:413:                                    ; preds = %409, %408
  %414 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0))
  br label %1065

; <label>:415:                                    ; preds = %409
  %416 = load i32, i32* @x.10
  %417 = load i32, i32* @y.11
  %418 = sub i32 0, 1
  %419 = add i32 %416, %418
  %420 = sub i32 %416, 1
  %421 = mul i32 %416, %419
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %417, 10
  %425 = and i1 %423, %424
  %426 = xor i1 %423, %424
  %427 = or i1 %425, %426
  %428 = or i1 %423, %424
  br i1 %427, label %429, label %1113

; <label>:429:                                    ; preds = %415, %1113
  %430 = load i32, i32* @H, align 4
  %431 = mul nsw i32 2, %430
  %432 = load i32, i32* @W, align 4
  %433 = mul nsw i32 %431, %432
  call void @_ZN5DinicIxEC2Ei(%class.Dinic* %32, i32 %433)
  store i32 0, i32* %33, align 4
  %434 = load i32, i32* @x.10
  %435 = load i32, i32* @y.11
  %436 = sub i32 0, 1
  %437 = add i32 %434, %436
  %438 = sub i32 %434, 1
  %439 = mul i32 %434, %437
  %440 = urem i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %435, 10
  %443 = and i1 %441, %442
  %444 = xor i1 %441, %442
  %445 = or i1 %443, %444
  %446 = or i1 %441, %442
  br i1 %445, label %447, label %1113

; <label>:447:                                    ; preds = %429
  br label %448

; <label>:448:                                    ; preds = %995, %447
  %449 = load i32, i32* %33, align 4
  %450 = load i32, i32* @H, align 4
  %451 = icmp slt i32 %449, %450
  br i1 %451, label %452, label %1001

; <label>:452:                                    ; preds = %448
  %453 = load i32, i32* @x.10
  %454 = load i32, i32* @y.11
  %455 = add i32 %453, 2096174465
  %456 = sub i32 %455, 1
  %457 = sub i32 %456, 2096174465
  %458 = sub i32 %453, 1
  %459 = mul i32 %453, %457
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %454, 10
  %463 = and i1 %461, %462
  %464 = xor i1 %461, %462
  %465 = or i1 %463, %464
  %466 = or i1 %461, %462
  br i1 %465, label %467, label %1155

; <label>:467:                                    ; preds = %452, %1155
  store i32 0, i32* %34, align 4
  %468 = load i32, i32* @x.10
  %469 = load i32, i32* @y.11
  %470 = add i32 %468, -1150303604
  %471 = sub i32 %470, 1
  %472 = sub i32 %471, -1150303604
  %473 = sub i32 %468, 1
  %474 = mul i32 %468, %472
  %475 = urem i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = icmp slt i32 %469, 10
  %478 = xor i1 %476, true
  %479 = xor i1 %477, true
  %480 = xor i1 false, true
  %481 = and i1 %478, false
  %482 = and i1 %476, %480
  %483 = and i1 %479, false
  %484 = and i1 %477, %480
  %485 = or i1 %481, %482
  %486 = or i1 %483, %484
  %487 = xor i1 %485, %486
  %488 = or i1 %478, %479
  %489 = xor i1 %488, true
  %490 = or i1 false, %480
  %491 = and i1 %489, %490
  %492 = or i1 %487, %491
  %493 = or i1 %476, %477
  br i1 %492, label %494, label %1155

; <label>:494:                                    ; preds = %467
  br label %495

; <label>:495:                                    ; preds = %993, %494
  %496 = load i32, i32* @x.10
  %497 = load i32, i32* @y.11
  %498 = add i32 %496, -221743924
  %499 = sub i32 %498, 1
  %500 = sub i32 %499, -221743924
  %501 = sub i32 %496, 1
  %502 = mul i32 %496, %500
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %497, 10
  %506 = and i1 %504, %505
  %507 = xor i1 %504, %505
  %508 = or i1 %506, %507
  %509 = or i1 %504, %505
  br i1 %508, label %510, label %1156

; <label>:510:                                    ; preds = %495, %1156
  %511 = load i32, i32* %34, align 4
  %512 = load i32, i32* @W, align 4
  %513 = icmp slt i32 %511, %512
  %514 = load i32, i32* @x.10
  %515 = load i32, i32* @y.11
  %516 = add i32 %514, 2006871674
  %517 = sub i32 %516, 1
  %518 = sub i32 %517, 2006871674
  %519 = sub i32 %514, 1
  %520 = mul i32 %514, %518
  %521 = urem i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = icmp slt i32 %515, 10
  %524 = xor i1 %522, true
  %525 = xor i1 %523, true
  %526 = xor i1 true, true
  %527 = and i1 %524, true
  %528 = and i1 %522, %526
  %529 = and i1 %525, true
  %530 = and i1 %523, %526
  %531 = or i1 %527, %528
  %532 = or i1 %529, %530
  %533 = xor i1 %531, %532
  %534 = or i1 %524, %525
  %535 = xor i1 %534, true
  %536 = or i1 true, %526
  %537 = and i1 %535, %536
  %538 = or i1 %533, %537
  %539 = or i1 %522, %523
  br i1 %538, label %540, label %1156

; <label>:540:                                    ; preds = %510
  br i1 %513, label %541, label %994

; <label>:541:                                    ; preds = %540
  %542 = load i32, i32* %33, align 4
  %543 = sext i32 %542 to i64
  %544 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.3"* @M, i64 %543) #3
  %545 = load i32, i32* %34, align 4
  %546 = sext i32 %545 to i64
  %547 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %544, i64 %546) #3
  %548 = load i32, i32* %547, align 4
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %550, label %551

; <label>:550:                                    ; preds = %541
  br label %935

; <label>:551:                                    ; preds = %541
  %552 = load i32, i32* %33, align 4
  %553 = load i32, i32* %34, align 4
  %554 = invoke i32 @_Z4convii(i32 %552, i32 %553)
          to label %555 unwind label %644

; <label>:555:                                    ; preds = %551
  store i32 %554, i32* %35, align 4
  %556 = load i32, i32* %35, align 4
  %557 = mul nsw i32 2, %556
  %558 = load i32, i32* %35, align 4
  %559 = mul nsw i32 2, %558
  %560 = sub i32 0, 1
  %561 = sub i32 %559, %560
  %562 = add nsw i32 %559, 1
  invoke void @_ZN5DinicIxE7AddEdgeEiix(%class.Dinic* %32, i32 %557, i32 %561, i64 1)
          to label %563 unwind label %644

; <label>:563:                                    ; preds = %555
  store i32 0, i32* %38, align 4
  br label %564

; <label>:564:                                    ; preds = %793, %563
  %565 = load i32, i32* @x.10
  %566 = load i32, i32* @y.11
  %567 = add i32 %565, -1527273929
  %568 = sub i32 %567, 1
  %569 = sub i32 %568, -1527273929
  %570 = sub i32 %565, 1
  %571 = mul i32 %565, %569
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %566, 10
  %575 = and i1 %573, %574
  %576 = xor i1 %573, %574
  %577 = or i1 %575, %576
  %578 = or i1 %573, %574
  br i1 %577, label %579, label %1160

; <label>:579:                                    ; preds = %564, %1160
  %580 = load i32, i32* %38, align 4
  %581 = load i32, i32* @H, align 4
  %582 = icmp slt i32 %580, %581
  %583 = load i32, i32* @x.10
  %584 = load i32, i32* @y.11
  %585 = sub i32 %583, 1448486306
  %586 = sub i32 %585, 1
  %587 = add i32 %586, 1448486306
  %588 = sub i32 %583, 1
  %589 = mul i32 %583, %587
  %590 = urem i32 %589, 2
  %591 = icmp eq i32 %590, 0
  %592 = icmp slt i32 %584, 10
  %593 = xor i1 %591, true
  %594 = xor i1 %592, true
  %595 = xor i1 false, true
  %596 = and i1 %593, false
  %597 = and i1 %591, %595
  %598 = and i1 %594, false
  %599 = and i1 %592, %595
  %600 = or i1 %596, %597
  %601 = or i1 %598, %599
  %602 = xor i1 %600, %601
  %603 = or i1 %593, %594
  %604 = xor i1 %603, true
  %605 = or i1 false, %595
  %606 = and i1 %604, %605
  %607 = or i1 %602, %606
  %608 = or i1 %591, %592
  br i1 %607, label %609, label %1160

; <label>:609:                                    ; preds = %579
  br i1 %582, label %610, label %800

; <label>:610:                                    ; preds = %609
  %611 = load i32, i32* %38, align 4
  %612 = load i32, i32* %33, align 4
  %613 = icmp eq i32 %611, %612
  br i1 %613, label %614, label %648

; <label>:614:                                    ; preds = %610
  %615 = load i32, i32* @x.10
  %616 = load i32, i32* @y.11
  %617 = add i32 %615, 1029909913
  %618 = sub i32 %617, 1
  %619 = sub i32 %618, 1029909913
  %620 = sub i32 %615, 1
  %621 = mul i32 %615, %619
  %622 = urem i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = icmp slt i32 %616, 10
  %625 = and i1 %623, %624
  %626 = xor i1 %623, %624
  %627 = or i1 %625, %626
  %628 = or i1 %623, %624
  br i1 %627, label %629, label %1164

; <label>:629:                                    ; preds = %614, %1164
  %630 = load i32, i32* @x.10
  %631 = load i32, i32* @y.11
  %632 = sub i32 0, 1
  %633 = add i32 %630, %632
  %634 = sub i32 %630, 1
  %635 = mul i32 %630, %633
  %636 = urem i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = icmp slt i32 %631, 10
  %639 = and i1 %637, %638
  %640 = xor i1 %637, %638
  %641 = or i1 %639, %640
  %642 = or i1 %637, %638
  br i1 %641, label %643, label %1164

; <label>:643:                                    ; preds = %629
  br label %793

; <label>:644:                                    ; preds = %1062, %1060, %1014, %1005, %1001, %917, %915, %755, %753, %555, %551
  %645 = landingpad { i8*, i32 }
          cleanup
  %646 = extractvalue { i8*, i32 } %645, 0
  store i8* %646, i8** %36, align 8
  %647 = extractvalue { i8*, i32 } %645, 1
  store i32 %647, i32* %37, align 4
  call void @_ZN5DinicIxED2Ev(%class.Dinic* %32) #3
  br label %1066

; <label>:648:                                    ; preds = %610
  %649 = load i32, i32* @x.10
  %650 = load i32, i32* @y.11
  %651 = sub i32 0, 1
  %652 = add i32 %649, %651
  %653 = sub i32 %649, 1
  %654 = mul i32 %649, %652
  %655 = urem i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = icmp slt i32 %650, 10
  %658 = xor i1 %656, true
  %659 = xor i1 %657, true
  %660 = xor i1 false, true
  %661 = and i1 %658, false
  %662 = and i1 %656, %660
  %663 = and i1 %659, false
  %664 = and i1 %657, %660
  %665 = or i1 %661, %662
  %666 = or i1 %663, %664
  %667 = xor i1 %665, %666
  %668 = or i1 %658, %659
  %669 = xor i1 %668, true
  %670 = or i1 false, %660
  %671 = and i1 %669, %670
  %672 = or i1 %667, %671
  %673 = or i1 %656, %657
  br i1 %672, label %674, label %1165

; <label>:674:                                    ; preds = %648, %1165
  %675 = load i32, i32* %38, align 4
  %676 = sext i32 %675 to i64
  %677 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.3"* @M, i64 %676) #3
  %678 = load i32, i32* %34, align 4
  %679 = sext i32 %678 to i64
  %680 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %677, i64 %679) #3
  %681 = load i32, i32* %680, align 4
  %682 = icmp eq i32 %681, 0
  %683 = load i32, i32* @x.10
  %684 = load i32, i32* @y.11
  %685 = add i32 %683, -1174539286
  %686 = sub i32 %685, 1
  %687 = sub i32 %686, -1174539286
  %688 = sub i32 %683, 1
  %689 = mul i32 %683, %687
  %690 = urem i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = icmp slt i32 %684, 10
  %693 = xor i1 %691, true
  %694 = xor i1 %692, true
  %695 = xor i1 true, true
  %696 = and i1 %693, true
  %697 = and i1 %691, %695
  %698 = and i1 %694, true
  %699 = and i1 %692, %695
  %700 = or i1 %696, %697
  %701 = or i1 %698, %699
  %702 = xor i1 %700, %701
  %703 = or i1 %693, %694
  %704 = xor i1 %703, true
  %705 = or i1 true, %695
  %706 = and i1 %704, %705
  %707 = or i1 %702, %706
  %708 = or i1 %691, %692
  br i1 %707, label %709, label %1165

; <label>:709:                                    ; preds = %674
  br i1 %682, label %710, label %711

; <label>:710:                                    ; preds = %709
  br label %793

; <label>:711:                                    ; preds = %709
  %712 = load i32, i32* @x.10
  %713 = load i32, i32* @y.11
  %714 = sub i32 0, 1
  %715 = add i32 %712, %714
  %716 = sub i32 %712, 1
  %717 = mul i32 %712, %715
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %713, 10
  %721 = and i1 %719, %720
  %722 = xor i1 %719, %720
  %723 = or i1 %721, %722
  %724 = or i1 %719, %720
  br i1 %723, label %725, label %1174

; <label>:725:                                    ; preds = %711, %1174
  %726 = load i32, i32* %38, align 4
  %727 = load i32, i32* %34, align 4
  %728 = load i32, i32* @x.10
  %729 = load i32, i32* @y.11
  %730 = sub i32 0, 1
  %731 = add i32 %728, %730
  %732 = sub i32 %728, 1
  %733 = mul i32 %728, %731
  %734 = urem i32 %733, 2
  %735 = icmp eq i32 %734, 0
  %736 = icmp slt i32 %729, 10
  %737 = xor i1 %735, true
  %738 = xor i1 %736, true
  %739 = xor i1 false, true
  %740 = and i1 %737, false
  %741 = and i1 %735, %739
  %742 = and i1 %738, false
  %743 = and i1 %736, %739
  %744 = or i1 %740, %741
  %745 = or i1 %742, %743
  %746 = xor i1 %744, %745
  %747 = or i1 %737, %738
  %748 = xor i1 %747, true
  %749 = or i1 false, %739
  %750 = and i1 %748, %749
  %751 = or i1 %746, %750
  %752 = or i1 %735, %736
  br i1 %751, label %753, label %1174

; <label>:753:                                    ; preds = %725
  %754 = invoke i32 @_Z4convii(i32 %726, i32 %727)
          to label %755 unwind label %644

; <label>:755:                                    ; preds = %753
  store i32 %754, i32* %39, align 4
  %756 = load i32, i32* %35, align 4
  %757 = mul nsw i32 2, %756
  %758 = add i32 %757, -907034514
  %759 = add i32 %758, 1
  %760 = sub i32 %759, -907034514
  %761 = add nsw i32 %757, 1
  %762 = load i32, i32* %39, align 4
  %763 = mul nsw i32 2, %762
  invoke void @_ZN5DinicIxE7AddEdgeEiix(%class.Dinic* %32, i32 %760, i32 %763, i64 1000000)
          to label %764 unwind label %644

; <label>:764:                                    ; preds = %755
  %765 = load i32, i32* @x.10
  %766 = load i32, i32* @y.11
  %767 = sub i32 0, 1
  %768 = add i32 %765, %767
  %769 = sub i32 %765, 1
  %770 = mul i32 %765, %768
  %771 = urem i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = icmp slt i32 %766, 10
  %774 = and i1 %772, %773
  %775 = xor i1 %772, %773
  %776 = or i1 %774, %775
  %777 = or i1 %772, %773
  br i1 %776, label %778, label %1177

; <label>:778:                                    ; preds = %764, %1177
  %779 = load i32, i32* @x.10
  %780 = load i32, i32* @y.11
  %781 = sub i32 0, 1
  %782 = add i32 %779, %781
  %783 = sub i32 %779, 1
  %784 = mul i32 %779, %782
  %785 = urem i32 %784, 2
  %786 = icmp eq i32 %785, 0
  %787 = icmp slt i32 %780, 10
  %788 = and i1 %786, %787
  %789 = xor i1 %786, %787
  %790 = or i1 %788, %789
  %791 = or i1 %786, %787
  br i1 %790, label %792, label %1177

; <label>:792:                                    ; preds = %778
  br label %793

; <label>:793:                                    ; preds = %792, %710, %643
  %794 = load i32, i32* %38, align 4
  %795 = sub i32 0, %794
  %796 = sub i32 0, 1
  %797 = add i32 %795, %796
  %798 = sub i32 0, %797
  %799 = add nsw i32 %794, 1
  store i32 %798, i32* %38, align 4
  br label %564

; <label>:800:                                    ; preds = %609
  store i32 0, i32* %40, align 4
  br label %801

; <label>:801:                                    ; preds = %927, %800
  %802 = load i32, i32* %40, align 4
  %803 = load i32, i32* @W, align 4
  %804 = icmp slt i32 %802, %803
  br i1 %804, label %805, label %934

; <label>:805:                                    ; preds = %801
  %806 = load i32, i32* @x.10
  %807 = load i32, i32* @y.11
  %808 = sub i32 %806, 716136758
  %809 = sub i32 %808, 1
  %810 = add i32 %809, 716136758
  %811 = sub i32 %806, 1
  %812 = mul i32 %806, %810
  %813 = urem i32 %812, 2
  %814 = icmp eq i32 %813, 0
  %815 = icmp slt i32 %807, 10
  %816 = and i1 %814, %815
  %817 = xor i1 %814, %815
  %818 = or i1 %816, %817
  %819 = or i1 %814, %815
  br i1 %818, label %820, label %1178

; <label>:820:                                    ; preds = %805, %1178
  %821 = load i32, i32* %40, align 4
  %822 = load i32, i32* %34, align 4
  %823 = icmp eq i32 %821, %822
  %824 = load i32, i32* @x.10
  %825 = load i32, i32* @y.11
  %826 = sub i32 0, 1
  %827 = add i32 %824, %826
  %828 = sub i32 %824, 1
  %829 = mul i32 %824, %827
  %830 = urem i32 %829, 2
  %831 = icmp eq i32 %830, 0
  %832 = icmp slt i32 %825, 10
  %833 = xor i1 %831, true
  %834 = xor i1 %832, true
  %835 = xor i1 true, true
  %836 = and i1 %833, true
  %837 = and i1 %831, %835
  %838 = and i1 %834, true
  %839 = and i1 %832, %835
  %840 = or i1 %836, %837
  %841 = or i1 %838, %839
  %842 = xor i1 %840, %841
  %843 = or i1 %833, %834
  %844 = xor i1 %843, true
  %845 = or i1 true, %835
  %846 = and i1 %844, %845
  %847 = or i1 %842, %846
  %848 = or i1 %831, %832
  br i1 %847, label %849, label %1178

; <label>:849:                                    ; preds = %820
  br i1 %823, label %850, label %851

; <label>:850:                                    ; preds = %849
  br label %927

; <label>:851:                                    ; preds = %849
  %852 = load i32, i32* %33, align 4
  %853 = sext i32 %852 to i64
  %854 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.3"* @M, i64 %853) #3
  %855 = load i32, i32* %40, align 4
  %856 = sext i32 %855 to i64
  %857 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %854, i64 %856) #3
  %858 = load i32, i32* %857, align 4
  %859 = icmp eq i32 %858, 0
  br i1 %859, label %860, label %861

; <label>:860:                                    ; preds = %851
  br label %927

; <label>:861:                                    ; preds = %851
  %862 = load i32, i32* @x.10
  %863 = load i32, i32* @y.11
  %864 = sub i32 0, 1
  %865 = add i32 %862, %864
  %866 = sub i32 %862, 1
  %867 = mul i32 %862, %865
  %868 = urem i32 %867, 2
  %869 = icmp eq i32 %868, 0
  %870 = icmp slt i32 %863, 10
  %871 = xor i1 %869, true
  %872 = xor i1 %870, true
  %873 = xor i1 false, true
  %874 = and i1 %871, false
  %875 = and i1 %869, %873
  %876 = and i1 %872, false
  %877 = and i1 %870, %873
  %878 = or i1 %874, %875
  %879 = or i1 %876, %877
  %880 = xor i1 %878, %879
  %881 = or i1 %871, %872
  %882 = xor i1 %881, true
  %883 = or i1 false, %873
  %884 = and i1 %882, %883
  %885 = or i1 %880, %884
  %886 = or i1 %869, %870
  br i1 %885, label %887, label %1182

; <label>:887:                                    ; preds = %861, %1182
  %888 = load i32, i32* %33, align 4
  %889 = load i32, i32* %40, align 4
  %890 = load i32, i32* @x.10
  %891 = load i32, i32* @y.11
  %892 = sub i32 0, 1
  %893 = add i32 %890, %892
  %894 = sub i32 %890, 1
  %895 = mul i32 %890, %893
  %896 = urem i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = icmp slt i32 %891, 10
  %899 = xor i1 %897, true
  %900 = xor i1 %898, true
  %901 = xor i1 false, true
  %902 = and i1 %899, false
  %903 = and i1 %897, %901
  %904 = and i1 %900, false
  %905 = and i1 %898, %901
  %906 = or i1 %902, %903
  %907 = or i1 %904, %905
  %908 = xor i1 %906, %907
  %909 = or i1 %899, %900
  %910 = xor i1 %909, true
  %911 = or i1 false, %901
  %912 = and i1 %910, %911
  %913 = or i1 %908, %912
  %914 = or i1 %897, %898
  br i1 %913, label %915, label %1182

; <label>:915:                                    ; preds = %887
  %916 = invoke i32 @_Z4convii(i32 %888, i32 %889)
          to label %917 unwind label %644

; <label>:917:                                    ; preds = %915
  store i32 %916, i32* %41, align 4
  %918 = load i32, i32* %35, align 4
  %919 = mul nsw i32 2, %918
  %920 = sub i32 %919, -2074592418
  %921 = add i32 %920, 1
  %922 = add i32 %921, -2074592418
  %923 = add nsw i32 %919, 1
  %924 = load i32, i32* %41, align 4
  %925 = mul nsw i32 2, %924
  invoke void @_ZN5DinicIxE7AddEdgeEiix(%class.Dinic* %32, i32 %922, i32 %925, i64 1000000)
          to label %926 unwind label %644

; <label>:926:                                    ; preds = %917
  br label %927

; <label>:927:                                    ; preds = %926, %860, %850
  %928 = load i32, i32* %40, align 4
  %929 = sub i32 0, %928
  %930 = sub i32 0, 1
  %931 = add i32 %929, %930
  %932 = sub i32 0, %931
  %933 = add nsw i32 %928, 1
  store i32 %932, i32* %40, align 4
  br label %801

; <label>:934:                                    ; preds = %801
  br label %935

; <label>:935:                                    ; preds = %934, %550
  %936 = load i32, i32* @x.10
  %937 = load i32, i32* @y.11
  %938 = add i32 %936, -1151546790
  %939 = sub i32 %938, 1
  %940 = sub i32 %939, -1151546790
  %941 = sub i32 %936, 1
  %942 = mul i32 %936, %940
  %943 = urem i32 %942, 2
  %944 = icmp eq i32 %943, 0
  %945 = icmp slt i32 %937, 10
  %946 = xor i1 %944, true
  %947 = xor i1 %945, true
  %948 = xor i1 true, true
  %949 = and i1 %946, true
  %950 = and i1 %944, %948
  %951 = and i1 %947, true
  %952 = and i1 %945, %948
  %953 = or i1 %949, %950
  %954 = or i1 %951, %952
  %955 = xor i1 %953, %954
  %956 = or i1 %946, %947
  %957 = xor i1 %956, true
  %958 = or i1 true, %948
  %959 = and i1 %957, %958
  %960 = or i1 %955, %959
  %961 = or i1 %944, %945
  br i1 %960, label %962, label %1185

; <label>:962:                                    ; preds = %935, %1185
  %963 = load i32, i32* %34, align 4
  %964 = sub i32 0, 1
  %965 = sub i32 %963, %964
  %966 = add nsw i32 %963, 1
  store i32 %965, i32* %34, align 4
  %967 = load i32, i32* @x.10
  %968 = load i32, i32* @y.11
  %969 = add i32 %967, -1615292772
  %970 = sub i32 %969, 1
  %971 = sub i32 %970, -1615292772
  %972 = sub i32 %967, 1
  %973 = mul i32 %967, %971
  %974 = urem i32 %973, 2
  %975 = icmp eq i32 %974, 0
  %976 = icmp slt i32 %968, 10
  %977 = xor i1 %975, true
  %978 = xor i1 %976, true
  %979 = xor i1 false, true
  %980 = and i1 %977, false
  %981 = and i1 %975, %979
  %982 = and i1 %978, false
  %983 = and i1 %976, %979
  %984 = or i1 %980, %981
  %985 = or i1 %982, %983
  %986 = xor i1 %984, %985
  %987 = or i1 %977, %978
  %988 = xor i1 %987, true
  %989 = or i1 false, %979
  %990 = and i1 %988, %989
  %991 = or i1 %986, %990
  %992 = or i1 %975, %976
  br i1 %991, label %993, label %1185

; <label>:993:                                    ; preds = %962
  br label %495

; <label>:994:                                    ; preds = %540
  br label %995

; <label>:995:                                    ; preds = %994
  %996 = load i32, i32* %33, align 4
  %997 = sub i32 %996, 782686670
  %998 = add i32 %997, 1
  %999 = add i32 %998, 782686670
  %1000 = add nsw i32 %996, 1
  store i32 %999, i32* %33, align 4
  br label %448

; <label>:1001:                                   ; preds = %448
  %1002 = load i32, i32* getelementptr inbounds (%"struct.std::pair", %"struct.std::pair"* @S, i32 0, i32 0), align 4
  %1003 = load i32, i32* getelementptr inbounds (%"struct.std::pair", %"struct.std::pair"* @S, i32 0, i32 1), align 4
  %1004 = invoke i32 @_Z4convii(i32 %1002, i32 %1003)
          to label %1005 unwind label %644

; <label>:1005:                                   ; preds = %1001
  %1006 = mul nsw i32 2, %1004
  %1007 = sub i32 %1006, 60150089
  %1008 = add i32 %1007, 1
  %1009 = add i32 %1008, 60150089
  %1010 = add nsw i32 %1006, 1
  %1011 = load i32, i32* getelementptr inbounds (%"struct.std::pair", %"struct.std::pair"* @T, i32 0, i32 0), align 4
  %1012 = load i32, i32* getelementptr inbounds (%"struct.std::pair", %"struct.std::pair"* @T, i32 0, i32 1), align 4
  %1013 = invoke i32 @_Z4convii(i32 %1011, i32 %1012)
          to label %1014 unwind label %644

; <label>:1014:                                   ; preds = %1005
  %1015 = mul nsw i32 2, %1013
  %1016 = invoke i64 @_ZN5DinicIxE7MaxFlowEii(%class.Dinic* %32, i32 %1009, i32 %1015)
          to label %1017 unwind label %644

; <label>:1017:                                   ; preds = %1014
  %1018 = load i32, i32* @x.10
  %1019 = load i32, i32* @y.11
  %1020 = sub i32 0, 1
  %1021 = add i32 %1018, %1020
  %1022 = sub i32 %1018, 1
  %1023 = mul i32 %1018, %1021
  %1024 = urem i32 %1023, 2
  %1025 = icmp eq i32 %1024, 0
  %1026 = icmp slt i32 %1019, 10
  %1027 = and i1 %1025, %1026
  %1028 = xor i1 %1025, %1026
  %1029 = or i1 %1027, %1028
  %1030 = or i1 %1025, %1026
  br i1 %1029, label %1031, label %1202

; <label>:1031:                                   ; preds = %1017, %1202
  %1032 = trunc i64 %1016 to i32
  store i32 %1032, i32* %42, align 4
  %1033 = load i32, i32* %42, align 4
  %1034 = load i32, i32* @x.10
  %1035 = load i32, i32* @y.11
  %1036 = add i32 %1034, -1723189776
  %1037 = sub i32 %1036, 1
  %1038 = sub i32 %1037, -1723189776
  %1039 = sub i32 %1034, 1
  %1040 = mul i32 %1034, %1038
  %1041 = urem i32 %1040, 2
  %1042 = icmp eq i32 %1041, 0
  %1043 = icmp slt i32 %1035, 10
  %1044 = xor i1 %1042, true
  %1045 = xor i1 %1043, true
  %1046 = xor i1 true, true
  %1047 = and i1 %1044, true
  %1048 = and i1 %1042, %1046
  %1049 = and i1 %1045, true
  %1050 = and i1 %1043, %1046
  %1051 = or i1 %1047, %1048
  %1052 = or i1 %1049, %1050
  %1053 = xor i1 %1051, %1052
  %1054 = or i1 %1044, %1045
  %1055 = xor i1 %1054, true
  %1056 = or i1 true, %1046
  %1057 = and i1 %1055, %1056
  %1058 = or i1 %1053, %1057
  %1059 = or i1 %1042, %1043
  br i1 %1058, label %1060, label %1202

; <label>:1060:                                   ; preds = %1031
  %1061 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %1033)
          to label %1062 unwind label %644

; <label>:1062:                                   ; preds = %1060
  %1063 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %1061, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0))
          to label %1064 unwind label %644

; <label>:1064:                                   ; preds = %1062
  call void @_ZN5DinicIxED2Ev(%class.Dinic* %32) #3
  br label %1065

; <label>:1065:                                   ; preds = %1064, %413
  ret void

; <label>:1066:                                   ; preds = %644
  %1067 = load i8*, i8** %36, align 8
  %1068 = load i32, i32* %37, align 4
  %1069 = insertvalue { i8*, i32 } undef, i8* %1067, 0
  %1070 = insertvalue { i8*, i32 } %1069, i32 %1068, 1
  resume { i8*, i32 } %1070

; <label>:1071:                                   ; preds = %27, %0
  %1072 = alloca i32, align 4
  %1073 = alloca i32, align 4
  %1074 = alloca %"struct.std::pair", align 4
  %1075 = alloca %"struct.std::pair", align 4
  %1076 = alloca %class.Dinic, align 8
  %1077 = alloca i32, align 4
  %1078 = alloca i32, align 4
  %1079 = alloca i32, align 4
  %1080 = alloca i8*
  %1081 = alloca i32
  %1082 = alloca i32, align 4
  %1083 = alloca i32, align 4
  %1084 = alloca i32, align 4
  %1085 = alloca i32, align 4
  %1086 = alloca i32, align 4
  %1087 = load i32, i32* @H, align 4
  %1088 = sext i32 %1087 to i64
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm(%"class.std::vector.3"* @M, i64 %1088)
  store i32 0, i32* %1072, align 4
  br label %27

; <label>:1089:                                   ; preds = %87, %60
  %1090 = load i32, i32* %28, align 4
  %1091 = load i32, i32* @H, align 4
  %1092 = icmp slt i32 %1090, %1091
  br label %87

; <label>:1093:                                   ; preds = %144, %118
  %1094 = load i32, i32* %28, align 4
  %1095 = sext i32 %1094 to i64
  %1096 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.3"* @M, i64 %1095) #3
  %1097 = load i32, i32* @W, align 4
  %1098 = sext i32 %1097 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.8"* %1096, i64 %1098)
  store i32 0, i32* %29, align 4
  br label %144

; <label>:1099:                                   ; preds = %216, %190
  call void @_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_(%"struct.std::pair"* %30, i32* dereferenceable(4) %28, i32* dereferenceable(4) %29)
  %1100 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"* @S, %"struct.std::pair"* dereferenceable(8) %30) #3
  br label %216

; <label>:1101:                                   ; preds = %276, %261
  %1102 = load i32, i32* %28, align 4
  %1103 = sext i32 %1102 to i64
  %1104 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.3"* @M, i64 %1103) #3
  %1105 = load i32, i32* %29, align 4
  %1106 = sext i32 %1105 to i64
  %1107 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %1104, i64 %1106) #3
  store i32 1, i32* %1107, align 4
  br label %276

; <label>:1108:                                   ; preds = %324, %298
  br label %324

; <label>:1109:                                   ; preds = %379, %365
  %1110 = load i32, i32* getelementptr inbounds (%"struct.std::pair", %"struct.std::pair"* @S, i32 0, i32 0), align 4
  %1111 = load i32, i32* getelementptr inbounds (%"struct.std::pair", %"struct.std::pair"* @T, i32 0, i32 0), align 4
  %1112 = icmp eq i32 %1110, %1111
  br label %379

; <label>:1113:                                   ; preds = %429, %415
  %1114 = load i32, i32* @H, align 4
  %1115 = add i32 0, 2135179110
  %1116 = sub i32 %1115, 2
  %1117 = sub i32 %1116, 2135179110
  %1118 = sub i32 0, 2
  %1119 = sub i32 0, %1114
  %1120 = sub i32 %1117, %1119
  %1121 = add i32 %1117, %1114
  %1122 = sub i32 0, 2
  %1123 = add i32 0, %1122
  %1124 = sub i32 0, 2
  %1125 = sub i32 %1123, -1264379849
  %1126 = add i32 %1125, %1114
  %1127 = add i32 %1126, -1264379849
  %1128 = add i32 %1123, %1114
  %1129 = sub i32 2, -2107172214
  %1130 = sub i32 %1129, %1114
  %1131 = add i32 %1130, -2107172214
  %1132 = sub i32 2, %1114
  %1133 = mul i32 %1131, %1114
  %1134 = sub i32 2, -1891449705
  %1135 = sub i32 %1134, %1114
  %1136 = add i32 %1135, -1891449705
  %1137 = sub i32 2, %1114
  %1138 = mul i32 %1136, %1114
  %1139 = shl i32 2, %1114
  %1140 = mul nsw i32 2, %1114
  %1141 = load i32, i32* @W, align 4
  %1142 = sub i32 %1140, -1210838468
  %1143 = sub i32 %1142, %1141
  %1144 = add i32 %1143, -1210838468
  %1145 = sub i32 %1140, %1141
  %1146 = mul i32 %1144, %1141
  %1147 = sub i32 0, %1140
  %1148 = add i32 0, %1147
  %1149 = sub i32 0, %1140
  %1150 = add i32 %1148, 1271319783
  %1151 = add i32 %1150, %1141
  %1152 = sub i32 %1151, 1271319783
  %1153 = add i32 %1148, %1141
  %1154 = mul nsw i32 %1140, %1141
  call void @_ZN5DinicIxEC2Ei(%class.Dinic* %32, i32 %1154)
  store i32 0, i32* %33, align 4
  br label %429

; <label>:1155:                                   ; preds = %467, %452
  store i32 0, i32* %34, align 4
  br label %467

; <label>:1156:                                   ; preds = %510, %495
  %1157 = load i32, i32* %34, align 4
  %1158 = load i32, i32* @W, align 4
  %1159 = icmp slt i32 %1157, %1158
  br label %510

; <label>:1160:                                   ; preds = %579, %564
  %1161 = load i32, i32* %38, align 4
  %1162 = load i32, i32* @H, align 4
  %1163 = icmp slt i32 %1161, %1162
  br label %579

; <label>:1164:                                   ; preds = %629, %614
  br label %629

; <label>:1165:                                   ; preds = %674, %648
  %1166 = load i32, i32* %38, align 4
  %1167 = sext i32 %1166 to i64
  %1168 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.3"* @M, i64 %1167) #3
  %1169 = load i32, i32* %34, align 4
  %1170 = sext i32 %1169 to i64
  %1171 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %1168, i64 %1170) #3
  %1172 = load i32, i32* %1171, align 4
  %1173 = icmp eq i32 %1172, 0
  br label %674

; <label>:1174:                                   ; preds = %725, %711
  %1175 = load i32, i32* %38, align 4
  %1176 = load i32, i32* %34, align 4
  br label %725

; <label>:1177:                                   ; preds = %778, %764
  br label %778

; <label>:1178:                                   ; preds = %820, %805
  %1179 = load i32, i32* %40, align 4
  %1180 = load i32, i32* %34, align 4
  %1181 = icmp eq i32 %1179, %1180
  br label %820

; <label>:1182:                                   ; preds = %887, %861
  %1183 = load i32, i32* %33, align 4
  %1184 = load i32, i32* %40, align 4
  br label %887

; <label>:1185:                                   ; preds = %962, %935
  %1186 = load i32, i32* %34, align 4
  %1187 = sub i32 %1186, 502424062
  %1188 = sub i32 %1187, 1
  %1189 = add i32 %1188, 502424062
  %1190 = sub i32 %1186, 1
  %1191 = mul i32 %1189, 1
  %1192 = add i32 %1186, -1544646834
  %1193 = sub i32 %1192, 1
  %1194 = sub i32 %1193, -1544646834
  %1195 = sub i32 %1186, 1
  %1196 = mul i32 %1194, 1
  %1197 = shl i32 %1186, 1
  %1198 = shl i32 %1186, 1
  %1199 = sub i32 0, 1
  %1200 = sub i32 %1186, %1199
  %1201 = add nsw i32 %1186, 1
  store i32 %1200, i32* %34, align 4
  br label %962

; <label>:1202:                                   ; preds = %1031, %1017
  %1203 = trunc i64 %1016 to i32
  store i32 %1203, i32* %42, align 4
  %1204 = load i32, i32* %42, align 4
  br label %1031
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" {
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"class.std::vector"* @_Z1AB5cxx11) #3
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @_Z1AB5cxx11 to i8*), i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %60

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.14
  %7 = load i32, i32* @y.15
  %8 = sub i32 %6, -1025275013
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1025275013
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 true, true
  %19 = and i1 %16, true
  %20 = and i1 %14, %18
  %21 = and i1 %17, true
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 true, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %104

; <label>:32:                                     ; preds = %5, %104
  %33 = load i32, i32* @x.14
  %34 = load i32, i32* @y.15
  %35 = sub i32 %33, 802659859
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 802659859
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %104

; <label>:59:                                     ; preds = %32
  ret void

; <label>:60:                                     ; preds = %1
  %61 = load i32, i32* @x.14
  %62 = load i32, i32* @y.15
  %63 = sub i32 %61, 115682327
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 115682327
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %105

; <label>:87:                                     ; preds = %60, %105
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  call void @__clang_call_terminate(i8* %89) #8
  %90 = load i32, i32* @x.14
  %91 = load i32, i32* @y.15
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %105

; <label>:103:                                    ; preds = %87
  unreachable

; <label>:104:                                    ; preds = %32, %5
  br label %32

; <label>:105:                                    ; preds = %87, %60
  %106 = landingpad { i8*, i32 }
          catch i8* null
  %107 = extractvalue { i8*, i32 } %106, 0
  call void @__clang_call_terminate(i8* %107) #8
  br label %87
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %9, %"class.std::__cxx11::basic_string"* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %59

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.16
  %18 = load i32, i32* @y.17
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %66

; <label>:42:                                     ; preds = %16, %66
  %43 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base"* %43) #3
  %44 = load i32, i32* @x.16
  %45 = load i32, i32* @y.17
  %46 = add i32 %44, -1759342693
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1759342693
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %66

; <label>:58:                                     ; preds = %42
  ret void

; <label>:59:                                     ; preds = %1
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %3, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %4, align 4
  %63 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base"* %63) #3
  br label %64

; <label>:64:                                     ; preds = %59
  %65 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %65) #8
  unreachable

; <label>:66:                                     ; preds = %42, %16
  %67 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base"* %67) #3
  br label %42
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6resizeEm(%"class.std::vector"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.18
  %9 = load i32, i32* @y.19
  %10 = sub i32 %8, -1354797747
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1354797747
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 726866580, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %278
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 726866580, label %22
    i32 -825348725, label %42
    i32 -443394729, label %79
    i32 -841843567, label %82
    i32 807176240, label %97
    i32 1361046370, label %134
    i32 -792447602, label %135
    i32 913281814, label %142
    i32 -90908285, label %152
    i32 1596748907, label %179
    i32 -1784493752, label %207
    i32 -1168025248, label %208
    i32 934194827, label %224
    i32 586719729, label %252
    i32 1299028848, label %253
    i32 1763588324, label %260
    i32 -551952246, label %276
    i32 -1863705855, label %277
  ]

; <label>:21:                                     ; preds = %19
  br label %278

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -825348725, i32 1299028848
  store i32 %41, i32* %18
  br label %278

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  store %"class.std::vector"* %0, %"class.std::vector"** %43, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  %46 = load %"class.std::vector"*, %"class.std::vector"** %43, align 8
  store %"class.std::vector"* %46, %"class.std::vector"** %4
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %50 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* %49) #3
  %51 = icmp ugt i64 %48, %50
  store i1 %51, i1* %3
  %52 = load i32, i32* @x.18
  %53 = load i32, i32* @y.19
  %54 = add i32 %52, -1073836999
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -1073836999
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -443394729, i32 1299028848
  store i32 %78, i32* %18
  br label %278

; <label>:79:                                     ; preds = %19
  %80 = load volatile i1, i1* %3
  %81 = select i1 %80, i32 -841843567, i32 -792447602
  store i32 %81, i32* %18
  br label %278

; <label>:82:                                     ; preds = %19
  %83 = load i32, i32* @x.18
  %84 = load i32, i32* @y.19
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 807176240, i32 1763588324
  store i32 %96, i32* %18
  br label %278

; <label>:97:                                     ; preds = %19
  %98 = load volatile i64*, i64** %5
  %99 = load i64, i64* %98, align 8
  %100 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %101 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* %100) #3
  %102 = sub i64 %99, -1281334403487856465
  %103 = sub i64 %102, %101
  %104 = add i64 %103, -1281334403487856465
  %105 = sub i64 %99, %101
  %106 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_default_appendEm(%"class.std::vector"* %106, i64 %104)
  %107 = load i32, i32* @x.18
  %108 = load i32, i32* @y.19
  %109 = add i32 %107, 247567913
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 247567913
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 false, true
  %120 = and i1 %117, false
  %121 = and i1 %115, %119
  %122 = and i1 %118, false
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 false, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  %133 = select i1 %131, i32 1361046370, i32 1763588324
  store i32 %133, i32* %18
  br label %278

; <label>:134:                                    ; preds = %19
  store i32 -1168025248, i32* %18
  br label %278

; <label>:135:                                    ; preds = %19
  %136 = load volatile i64*, i64** %5
  %137 = load i64, i64* %136, align 8
  %138 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %139 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* %138) #3
  %140 = icmp ult i64 %137, %139
  %141 = select i1 %140, i32 913281814, i32 -90908285
  store i32 %141, i32* %18
  br label %278

; <label>:142:                                    ; preds = %19
  %143 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %144 = bitcast %"class.std::vector"* %143 to %"struct.std::_Vector_base"*
  %145 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %144, i32 0, i32 0
  %146 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %145, i32 0, i32 0
  %147 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %146, align 8
  %148 = load volatile i64*, i64** %5
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %147, i64 %149
  %151 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endEPS5_(%"class.std::vector"* %151, %"class.std::__cxx11::basic_string"* %150) #3
  store i32 -90908285, i32* %18
  br label %278

; <label>:152:                                    ; preds = %19
  %153 = load i32, i32* @x.18
  %154 = load i32, i32* @y.19
  %155 = sub i32 0, 1
  %156 = add i32 %153, %155
  %157 = sub i32 %153, 1
  %158 = mul i32 %153, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %154, 10
  %162 = xor i1 %160, true
  %163 = xor i1 %161, true
  %164 = xor i1 true, true
  %165 = and i1 %162, true
  %166 = and i1 %160, %164
  %167 = and i1 %163, true
  %168 = and i1 %161, %164
  %169 = or i1 %165, %166
  %170 = or i1 %167, %168
  %171 = xor i1 %169, %170
  %172 = or i1 %162, %163
  %173 = xor i1 %172, true
  %174 = or i1 true, %164
  %175 = and i1 %173, %174
  %176 = or i1 %171, %175
  %177 = or i1 %160, %161
  %178 = select i1 %176, i32 1596748907, i32 -551952246
  store i32 %178, i32* %18
  br label %278

; <label>:179:                                    ; preds = %19
  %180 = load i32, i32* @x.18
  %181 = load i32, i32* @y.19
  %182 = add i32 %180, -1203820859
  %183 = sub i32 %182, 1
  %184 = sub i32 %183, -1203820859
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  %206 = select i1 %204, i32 -1784493752, i32 -551952246
  store i32 %206, i32* %18
  br label %278

; <label>:207:                                    ; preds = %19
  store i32 -1168025248, i32* %18
  br label %278

; <label>:208:                                    ; preds = %19
  %209 = load i32, i32* @x.18
  %210 = load i32, i32* @y.19
  %211 = add i32 %209, 1000581803
  %212 = sub i32 %211, 1
  %213 = sub i32 %212, 1000581803
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = and i1 %217, %218
  %220 = xor i1 %217, %218
  %221 = or i1 %219, %220
  %222 = or i1 %217, %218
  %223 = select i1 %221, i32 934194827, i32 -1863705855
  store i32 %223, i32* %18
  br label %278

; <label>:224:                                    ; preds = %19
  %225 = load i32, i32* @x.18
  %226 = load i32, i32* @y.19
  %227 = add i32 %225, -1991876274
  %228 = sub i32 %227, 1
  %229 = sub i32 %228, -1991876274
  %230 = sub i32 %225, 1
  %231 = mul i32 %225, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %226, 10
  %235 = xor i1 %233, true
  %236 = xor i1 %234, true
  %237 = xor i1 false, true
  %238 = and i1 %235, false
  %239 = and i1 %233, %237
  %240 = and i1 %236, false
  %241 = and i1 %234, %237
  %242 = or i1 %238, %239
  %243 = or i1 %240, %241
  %244 = xor i1 %242, %243
  %245 = or i1 %235, %236
  %246 = xor i1 %245, true
  %247 = or i1 false, %237
  %248 = and i1 %246, %247
  %249 = or i1 %244, %248
  %250 = or i1 %233, %234
  %251 = select i1 %249, i32 586719729, i32 -1863705855
  store i32 %251, i32* %18
  br label %278

; <label>:252:                                    ; preds = %19
  ret void

; <label>:253:                                    ; preds = %19
  %254 = alloca %"class.std::vector"*, align 8
  %255 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %254, align 8
  store i64 %1, i64* %255, align 8
  %256 = load %"class.std::vector"*, %"class.std::vector"** %254, align 8
  %257 = load i64, i64* %255, align 8
  %258 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* %256) #3
  %259 = icmp ugt i64 %257, %258
  store i32 -825348725, i32* %18
  br label %278

; <label>:260:                                    ; preds = %19
  %261 = load volatile i64*, i64** %5
  %262 = load i64, i64* %261, align 8
  %263 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %264 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* %263) #3
  %265 = sub i64 0, %262
  %266 = add i64 0, %265
  %267 = sub i64 0, %262
  %268 = add i64 %266, -3893803887116724643
  %269 = add i64 %268, %264
  %270 = sub i64 %269, -3893803887116724643
  %271 = add i64 %266, %264
  %272 = sub i64 0, %264
  %273 = add i64 %262, %272
  %274 = sub i64 %262, %264
  %275 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_default_appendEm(%"class.std::vector"* %275, i64 %273)
  store i32 807176240, i32* %18
  br label %278

; <label>:276:                                    ; preds = %19
  store i32 1596748907, i32* %18
  br label %278

; <label>:277:                                    ; preds = %19
  store i32 934194827, i32* %18
  br label %278

; <label>:278:                                    ; preds = %277, %276, %260, %253, %224, %208, %207, %179, %152, %142, %135, %134, %97, %82, %79, %42, %22, %21
  br label %19
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i64 %10
  ret %"class.std::__cxx11::basic_string"* %11
}

; Function Attrs: noinline nounwind uwtable
define void @_Z8daminputv() #5 {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.22
  %4 = load i32, i32* @y.23
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 -224529047, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %66
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -224529047, label %16
    i32 238502704, label %36
    i32 -1475235168, label %64
    i32 75962107, label %65
  ]

; <label>:15:                                     ; preds = %13
  br label %66

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 false, true
  %22 = and i1 %19, false
  %23 = and i1 %17, %21
  %24 = and i1 %20, false
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 false, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  %35 = select i1 %33, i32 238502704, i32 75962107
  store i32 %35, i32* %12
  br label %66

; <label>:36:                                     ; preds = %13
  %37 = load i32, i32* @x.22
  %38 = load i32, i32* @y.23
  %39 = add i32 %37, 1586450481
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1586450481
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1475235168, i32 75962107
  store i32 %63, i32* %12
  br label %66

; <label>:64:                                     ; preds = %13
  ret void

; <label>:65:                                     ; preds = %13
  store i32 238502704, i32* %12
  br label %66

; <label>:66:                                     ; preds = %65, %36, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define i32 @_Z4convii(i32, i32) #5 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* @W, align 4
  %7 = mul nsw i32 %5, %6
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 0, %8
  %10 = sub i32 %7, %9
  %11 = add nsw i32 %7, %8
  ret i32 %10
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.2() #0 section ".text.startup" {
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.3"* @M) #3
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.3"*)* @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.3"* @M to i8*), i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.3"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base.4"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.28
  %8 = load i32, i32* @y.29
  %9 = add i32 %7, -323914597
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -323914597
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = xor i1 %15, true
  %18 = xor i1 %16, true
  %19 = xor i1 false, true
  %20 = and i1 %17, false
  %21 = and i1 %15, %19
  %22 = and i1 %18, false
  %23 = and i1 %16, %19
  %24 = or i1 %20, %21
  %25 = or i1 %22, %23
  %26 = xor i1 %24, %25
  %27 = or i1 %17, %18
  %28 = xor i1 %27, true
  %29 = or i1 false, %19
  %30 = and i1 %28, %29
  %31 = or i1 %26, %30
  %32 = or i1 %15, %16
  br i1 %31, label %33, label %50

; <label>:33:                                     ; preds = %6, %50
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  call void @__clang_call_terminate(i8* %35) #8
  %36 = load i32, i32* @x.28
  %37 = load i32, i32* @y.29
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %50

; <label>:49:                                     ; preds = %33
  unreachable

; <label>:50:                                     ; preds = %33, %6
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  call void @__clang_call_terminate(i8* %52) #8
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.3"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.3"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %10 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  %14 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %15 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.8"* %9, %"class.std::vector.8"* %13, %"class.std::allocator.5"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.4"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.4"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.30
  %25 = load i32, i32* @y.31
  %26 = sub i32 %24, -1441246269
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -1441246269
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %67

; <label>:50:                                     ; preds = %23, %67
  %51 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %51) #8
  %52 = load i32, i32* @x.30
  %53 = load i32, i32* @y.31
  %54 = sub i32 %52, -1990715033
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -1990715033
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %67

; <label>:66:                                     ; preds = %50
  unreachable

; <label>:67:                                     ; preds = %50, %23
  %68 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %68) #8
  br label %50
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm(%"class.std::vector.3"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.3"*
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.3"* %9, %"class.std::vector.3"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %12 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %11) #3
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 1929166252, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %197
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1929166252, label %17
    i32 -1665950692, label %22
    i32 -1277929553, label %38
    i32 1981368765, label %61
    i32 1046106622, label %62
    i32 1042660725, label %77
    i32 205415407, label %96
    i32 -1201144827, label %99
    i32 -488415795, label %108
    i32 1669413573, label %123
    i32 -876152525, label %139
    i32 328850131, label %140
    i32 -696803520, label %141
    i32 506583599, label %191
    i32 1739626914, label %196
  ]

; <label>:16:                                     ; preds = %14
  br label %197

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1665950692, i32 1046106622
  store i32 %21, i32* %13
  br label %197

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.32
  %24 = load i32, i32* @y.33
  %25 = add i32 %23, -976071113
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -976071113
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 -1277929553, i32 -696803520
  store i32 %37, i32* %13
  br label %197

; <label>:38:                                     ; preds = %14
  %39 = load i64, i64* %8, align 8
  %40 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %41 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %40) #3
  %42 = sub i64 0, %41
  %43 = add i64 %39, %42
  %44 = sub i64 %39, %41
  %45 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm(%"class.std::vector.3"* %45, i64 %43)
  %46 = load i32, i32* @x.32
  %47 = load i32, i32* @y.33
  %48 = sub i32 %46, -1043125921
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1043125921
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1981368765, i32 -696803520
  store i32 %60, i32* %13
  br label %197

; <label>:61:                                     ; preds = %14
  store i32 328850131, i32* %13
  br label %197

; <label>:62:                                     ; preds = %14
  %63 = load i32, i32* @x.32
  %64 = load i32, i32* @y.33
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 1042660725, i32 506583599
  store i32 %76, i32* %13
  br label %197

; <label>:77:                                     ; preds = %14
  %78 = load i64, i64* %8, align 8
  %79 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %80 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %79) #3
  %81 = icmp ult i64 %78, %80
  store i1 %81, i1* %3
  %82 = load i32, i32* @x.32
  %83 = load i32, i32* @y.33
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 205415407, i32 506583599
  store i32 %95, i32* %13
  br label %197

; <label>:96:                                     ; preds = %14
  %97 = load volatile i1, i1* %3
  %98 = select i1 %97, i32 -1201144827, i32 -488415795
  store i32 %98, i32* %13
  br label %197

; <label>:99:                                     ; preds = %14
  %100 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %101 = bitcast %"class.std::vector.3"* %100 to %"struct.std::_Vector_base.4"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %102, i32 0, i32 0
  %104 = load %"class.std::vector.8"*, %"class.std::vector.8"** %103, align 8
  %105 = load i64, i64* %8, align 8
  %106 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %104, i64 %105
  %107 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.3"* %107, %"class.std::vector.8"* %106) #3
  store i32 -488415795, i32* %13
  br label %197

; <label>:108:                                    ; preds = %14
  %109 = load i32, i32* @x.32
  %110 = load i32, i32* @y.33
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  %122 = select i1 %120, i32 1669413573, i32 1739626914
  store i32 %122, i32* %13
  br label %197

; <label>:123:                                    ; preds = %14
  %124 = load i32, i32* @x.32
  %125 = load i32, i32* @y.33
  %126 = add i32 %124, 1603340143
  %127 = sub i32 %126, 1
  %128 = sub i32 %127, 1603340143
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  %138 = select i1 %136, i32 -876152525, i32 1739626914
  store i32 %138, i32* %13
  br label %197

; <label>:139:                                    ; preds = %14
  store i32 328850131, i32* %13
  br label %197

; <label>:140:                                    ; preds = %14
  ret void

; <label>:141:                                    ; preds = %14
  %142 = load i64, i64* %8, align 8
  %143 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %144 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %143) #3
  %145 = sub i64 0, %144
  %146 = add i64 %142, %145
  %147 = sub i64 %142, %144
  %148 = mul i64 %146, %144
  %149 = sub i64 0, %142
  %150 = add i64 0, %149
  %151 = sub i64 0, %142
  %152 = sub i64 %150, 1659182048514036620
  %153 = add i64 %152, %144
  %154 = add i64 %153, 1659182048514036620
  %155 = add i64 %150, %144
  %156 = sub i64 0, %144
  %157 = add i64 %142, %156
  %158 = sub i64 %142, %144
  %159 = mul i64 %157, %144
  %160 = sub i64 0, 3101078921764100108
  %161 = sub i64 %160, %142
  %162 = add i64 %161, 3101078921764100108
  %163 = sub i64 0, %142
  %164 = sub i64 %162, 1693980946030440381
  %165 = add i64 %164, %144
  %166 = add i64 %165, 1693980946030440381
  %167 = add i64 %162, %144
  %168 = sub i64 %142, 5352584247517726553
  %169 = sub i64 %168, %144
  %170 = add i64 %169, 5352584247517726553
  %171 = sub i64 %142, %144
  %172 = mul i64 %170, %144
  %173 = sub i64 %142, 444732072497150424
  %174 = sub i64 %173, %144
  %175 = add i64 %174, 444732072497150424
  %176 = sub i64 %142, %144
  %177 = mul i64 %175, %144
  %178 = sub i64 0, %142
  %179 = add i64 0, %178
  %180 = sub i64 0, %142
  %181 = add i64 %179, -3774017002822316673
  %182 = add i64 %181, %144
  %183 = sub i64 %182, -3774017002822316673
  %184 = add i64 %179, %144
  %185 = shl i64 %142, %144
  %186 = add i64 %142, -4889342663048634353
  %187 = sub i64 %186, %144
  %188 = sub i64 %187, -4889342663048634353
  %189 = sub i64 %142, %144
  %190 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm(%"class.std::vector.3"* %190, i64 %188)
  store i32 -1277929553, i32* %13
  br label %197

; <label>:191:                                    ; preds = %14
  %192 = load i64, i64* %8, align 8
  %193 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %194 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %193) #3
  %195 = icmp ult i64 %192, %194
  store i32 1042660725, i32* %13
  br label %197

; <label>:196:                                    ; preds = %14
  store i32 1669413573, i32* %13
  br label %197

; <label>:197:                                    ; preds = %196, %191, %141, %139, %123, %108, %99, %96, %77, %62, %61, %38, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.3"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %9, i64 %10
  ret %"class.std::vector.8"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.8"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.36
  %9 = load i32, i32* @y.37
  %10 = add i32 %8, 1387673077
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1387673077
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 477028677, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %161
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 477028677, label %22
    i32 106343632, label %30
    i32 2080162574, label %67
    i32 1864141213, label %70
    i32 -565171132, label %79
    i32 1785465877, label %86
    i32 -348792921, label %96
    i32 -329538132, label %124
    i32 -1311474504, label %151
    i32 -724938746, label %152
    i32 1859235302, label %153
    i32 -1137155529, label %160
  ]

; <label>:21:                                     ; preds = %19
  br label %161

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 106343632, i32 1859235302
  store i32 %29, i32* %18
  br label %161

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.8"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %31, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  %34 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  store %"class.std::vector.8"* %34, %"class.std::vector.8"** %4
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %38 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %37) #3
  %39 = icmp ugt i64 %36, %38
  store i1 %39, i1* %3
  %40 = load i32, i32* @x.36
  %41 = load i32, i32* @y.37
  %42 = add i32 %40, 1841328387
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1841328387
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 2080162574, i32 1859235302
  store i32 %66, i32* %18
  br label %161

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %3
  %69 = select i1 %68, i32 1864141213, i32 -565171132
  store i32 %69, i32* %18
  br label %161

; <label>:70:                                     ; preds = %19
  %71 = load volatile i64*, i64** %5
  %72 = load i64, i64* %71, align 8
  %73 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %74 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %73) #3
  %75 = sub i64 0, %74
  %76 = add i64 %72, %75
  %77 = sub i64 %72, %74
  %78 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.8"* %78, i64 %76)
  store i32 -724938746, i32* %18
  br label %161

; <label>:79:                                     ; preds = %19
  %80 = load volatile i64*, i64** %5
  %81 = load i64, i64* %80, align 8
  %82 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %83 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %82) #3
  %84 = icmp ult i64 %81, %83
  %85 = select i1 %84, i32 1785465877, i32 -348792921
  store i32 %85, i32* %18
  br label %161

; <label>:86:                                     ; preds = %19
  %87 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %88 = bitcast %"class.std::vector.8"* %87 to %"struct.std::_Vector_base.9"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %89, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = load volatile i64*, i64** %5
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds i32, i32* %91, i64 %93
  %95 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.8"* %95, i32* %94) #3
  store i32 -348792921, i32* %18
  br label %161

; <label>:96:                                     ; preds = %19
  %97 = load i32, i32* @x.36
  %98 = load i32, i32* @y.37
  %99 = add i32 %97, -1365281573
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, -1365281573
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 -329538132, i32 -1137155529
  store i32 %123, i32* %18
  br label %161

; <label>:124:                                    ; preds = %19
  %125 = load i32, i32* @x.36
  %126 = load i32, i32* @y.37
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 false, true
  %137 = and i1 %134, false
  %138 = and i1 %132, %136
  %139 = and i1 %135, false
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 false, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  %150 = select i1 %148, i32 -1311474504, i32 -1137155529
  store i32 %150, i32* %18
  br label %161

; <label>:151:                                    ; preds = %19
  store i32 -724938746, i32* %18
  br label %161

; <label>:152:                                    ; preds = %19
  ret void

; <label>:153:                                    ; preds = %19
  %154 = alloca %"class.std::vector.8"*, align 8
  %155 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %154, align 8
  store i64 %1, i64* %155, align 8
  %156 = load %"class.std::vector.8"*, %"class.std::vector.8"** %154, align 8
  %157 = load i64, i64* %155, align 8
  %158 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %156) #3
  %159 = icmp ugt i64 %157, %158
  store i32 106343632, i32* %18
  br label %161

; <label>:160:                                    ; preds = %19
  store i32 -329538132, i32* %18
  br label %161

; <label>:161:                                    ; preds = %160, %153, %151, %124, %96, %86, %79, %70, %67, %30, %22, %21
  br label %19
}

declare dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"*, i64) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_(%"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load i32*, i32** %5, align 8
  %10 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %9) #3
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load i32*, i32** %6, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %13) #3
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %12, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZNSt4pairIiiEaSEOS0_(%"struct.std::pair"*, %"struct.std::pair"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %7 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %6, i32 0, i32 0
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %7) #3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 0, i32 0
  store i32 %9, i32* %10, align 4
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %11, i32 0, i32 1
  %13 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %12) #3
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 0, i32 1
  store i32 %14, i32* %15, align 4
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  ret i32* %11
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5DinicIxEC2Ei(%class.Dinic*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Dinic*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*
  %6 = alloca i32
  store %class.Dinic* %0, %class.Dinic** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %class.Dinic*, %class.Dinic** %3, align 8
  %8 = getelementptr inbounds %class.Dinic, %class.Dinic* %7, i32 0, i32 0
  %9 = load i32, i32* %4, align 4
  store i32 %9, i32* %8, align 8
  %10 = getelementptr inbounds %class.Dinic, %class.Dinic* %7, i32 0, i32 1
  call void @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEC2Ev(%"class.std::vector.13"* %10) #3
  %11 = getelementptr inbounds %class.Dinic, %class.Dinic* %7, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* %11) #3
  %12 = getelementptr inbounds %class.Dinic, %class.Dinic* %7, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* %12) #3
  %13 = getelementptr inbounds %class.Dinic, %class.Dinic* %7, i32 0, i32 1
  %14 = getelementptr inbounds %class.Dinic, %class.Dinic* %7, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  invoke void @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE6resizeEm(%"class.std::vector.13"* %13, i64 %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %2
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %5, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %6, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %12) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %11) #3
  call void @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EED2Ev(%"class.std::vector.13"* %10) #3
  br label %22

; <label>:22:                                     ; preds = %18
  %23 = load i8*, i8** %5, align 8
  %24 = load i32, i32* %6, align 4
  %25 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5DinicIxE7AddEdgeEiix(%class.Dinic*, i32, i32, i64) #0 comdat align 2 {
  %5 = alloca %class.Dinic*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca %class.MaxFEdge, align 8
  %10 = alloca %class.MaxFEdge, align 8
  store %class.Dinic* %0, %class.Dinic** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i64 %3, i64* %8, align 8
  %11 = load %class.Dinic*, %class.Dinic** %5, align 8
  %12 = getelementptr inbounds %class.Dinic, %class.Dinic* %11, i32 0, i32 1
  %13 = load i32, i32* %6, align 4
  %14 = sext i32 %13 to i64
  %15 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"* %12, i64 %14) #3
  %16 = load i32, i32* %7, align 4
  %17 = load i64, i64* %8, align 8
  %18 = getelementptr inbounds %class.Dinic, %class.Dinic* %11, i32 0, i32 1
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"* %18, i64 %20) #3
  %22 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv(%"class.std::vector.18"* %21) #3
  %23 = trunc i64 %22 to i32
  call void @_ZN8MaxFEdgeIxEC2Eixi(%class.MaxFEdge* %9, i32 %16, i64 %17, i32 %23)
  call void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE9push_backEOS1_(%"class.std::vector.18"* %15, %class.MaxFEdge* dereferenceable(24) %9)
  %24 = getelementptr inbounds %class.Dinic, %class.Dinic* %11, i32 0, i32 1
  %25 = load i32, i32* %7, align 4
  %26 = sext i32 %25 to i64
  %27 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"* %24, i64 %26) #3
  %28 = load i32, i32* %6, align 4
  %29 = getelementptr inbounds %class.Dinic, %class.Dinic* %11, i32 0, i32 1
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"* %29, i64 %31) #3
  %33 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv(%"class.std::vector.18"* %32) #3
  %34 = sub i64 0, 1
  %35 = add i64 %33, %34
  %36 = sub i64 %33, 1
  %37 = trunc i64 %35 to i32
  call void @_ZN8MaxFEdgeIxEC2Eixi(%class.MaxFEdge* %10, i32 %28, i64 0, i32 %37)
  call void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE9push_backEOS1_(%"class.std::vector.18"* %27, %class.MaxFEdge* dereferenceable(24) %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN5DinicIxE7MaxFlowEii(%class.Dinic*, i32, i32) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %class.Dinic*
  %6 = alloca i32*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i64*
  %10 = alloca i32*
  %11 = alloca i32*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.48
  %15 = load i32, i32* @y.49
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %13
  %22 = icmp slt i32 %15, 10
  store i1 %22, i1* %12
  %23 = alloca i32
  store i32 2011777492, i32* %23
  br label %24

; <label>:24:                                     ; preds = %3, %197
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 2011777492, label %27
    i32 1793534559, label %47
    i32 1677133367, label %89
    i32 285758854, label %90
    i32 -1976414007, label %106
    i32 -1839071140, label %133
    i32 481376813, label %136
    i32 -1266819545, label %139
    i32 1325325669, label %148
    i32 1787124559, label %162
    i32 1052214332, label %163
    i32 32424309, label %174
    i32 -1255920800, label %175
    i32 -260607086, label %185
  ]

; <label>:26:                                     ; preds = %24
  br label %197

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %13
  %29 = load volatile i1, i1* %12
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 1793534559, i32 -1255920800
  store i32 %46, i32* %23
  br label %197

; <label>:47:                                     ; preds = %24
  %48 = alloca %class.Dinic*, align 8
  %49 = alloca i32, align 4
  store i32* %49, i32** %11
  %50 = alloca i32, align 4
  store i32* %50, i32** %10
  %51 = alloca i64, align 8
  store i64* %51, i64** %9
  %52 = alloca i64, align 8
  store i64* %52, i64** %8
  %53 = alloca i64, align 8
  store i64* %53, i64** %7
  %54 = alloca i32, align 4
  store i32* %54, i32** %6
  store %class.Dinic* %0, %class.Dinic** %48, align 8
  %55 = load volatile i32*, i32** %11
  store i32 %1, i32* %55, align 4
  %56 = load volatile i32*, i32** %10
  store i32 %2, i32* %56, align 4
  %57 = load %class.Dinic*, %class.Dinic** %48, align 8
  store %class.Dinic* %57, %class.Dinic** %5
  %58 = load volatile i64*, i64** %9
  store i64 0, i64* %58, align 8
  %59 = load volatile i64*, i64** %8
  store i64 0, i64* %59, align 8
  %60 = call i64 @_ZNSt14numeric_limitsIxE3maxEv() #3
  %61 = load volatile i64*, i64** %7
  store i64 %60, i64* %61, align 8
  %62 = load i32, i32* @x.48
  %63 = load i32, i32* @y.49
  %64 = sub i32 %62, 2046855968
  %65 = sub i32 %64, 1
  %66 = add i32 %65, 2046855968
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 1677133367, i32 -1255920800
  store i32 %88, i32* %23
  br label %197

; <label>:89:                                     ; preds = %24
  store i32 285758854, i32* %23
  br label %197

; <label>:90:                                     ; preds = %24
  %91 = load i32, i32* @x.48
  %92 = load i32, i32* @y.49
  %93 = sub i32 %91, 1348004421
  %94 = sub i32 %93, 1
  %95 = add i32 %94, 1348004421
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  %105 = select i1 %103, i32 -1976414007, i32 -260607086
  store i32 %105, i32* %23
  br label %197

; <label>:106:                                    ; preds = %24
  %107 = load volatile i32*, i32** %11
  %108 = load i32, i32* %107, align 4
  %109 = load volatile %class.Dinic*, %class.Dinic** %5
  call void @_ZN5DinicIxE3bfsEi(%class.Dinic* %109, i32 %108)
  %110 = load volatile %class.Dinic*, %class.Dinic** %5
  %111 = getelementptr inbounds %class.Dinic, %class.Dinic* %110, i32 0, i32 3
  %112 = load volatile i32*, i32** %10
  %113 = load i32, i32* %112, align 4
  %114 = sext i32 %113 to i64
  %115 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %111, i64 %114) #3
  %116 = load i32, i32* %115, align 4
  %117 = icmp slt i32 %116, 0
  store i1 %117, i1* %4
  %118 = load i32, i32* @x.48
  %119 = load i32, i32* @y.49
  %120 = sub i32 %118, 555221620
  %121 = sub i32 %120, 1
  %122 = add i32 %121, 555221620
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  %132 = select i1 %130, i32 -1839071140, i32 -260607086
  store i32 %132, i32* %23
  br label %197

; <label>:133:                                    ; preds = %24
  %134 = load volatile i1, i1* %4
  %135 = select i1 %134, i32 481376813, i32 -1266819545
  store i32 %135, i32* %23
  br label %197

; <label>:136:                                    ; preds = %24
  %137 = load volatile i64*, i64** %9
  %138 = load i64, i64* %137, align 8
  ret i64 %138

; <label>:139:                                    ; preds = %24
  %140 = load volatile %class.Dinic*, %class.Dinic** %5
  %141 = getelementptr inbounds %class.Dinic, %class.Dinic* %140, i32 0, i32 2
  %142 = load volatile %class.Dinic*, %class.Dinic** %5
  %143 = getelementptr inbounds %class.Dinic, %class.Dinic* %142, i32 0, i32 0
  %144 = load i32, i32* %143, align 8
  %145 = sext i32 %144 to i64
  %146 = load volatile i32*, i32** %6
  store i32 0, i32* %146, align 4
  %147 = load volatile i32*, i32** %6
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.8"* %141, i64 %145, i32* dereferenceable(4) %147)
  store i32 1325325669, i32* %23
  br label %197

; <label>:148:                                    ; preds = %24
  %149 = load volatile i32*, i32** %11
  %150 = load i32, i32* %149, align 4
  %151 = load volatile i32*, i32** %10
  %152 = load i32, i32* %151, align 4
  %153 = load volatile i64*, i64** %7
  %154 = load i64, i64* %153, align 8
  %155 = load volatile %class.Dinic*, %class.Dinic** %5
  %156 = call i64 @_ZN5DinicIxE3dfsEiix(%class.Dinic* %155, i32 %150, i32 %152, i64 %154)
  %157 = load volatile i64*, i64** %8
  store i64 %156, i64* %157, align 8
  %158 = load volatile i64*, i64** %8
  %159 = load i64, i64* %158, align 8
  %160 = icmp sle i64 %159, 0
  %161 = select i1 %160, i32 1787124559, i32 1052214332
  store i32 %161, i32* %23
  br label %197

; <label>:162:                                    ; preds = %24
  store i32 32424309, i32* %23
  br label %197

; <label>:163:                                    ; preds = %24
  %164 = load volatile i64*, i64** %8
  %165 = load i64, i64* %164, align 8
  %166 = load volatile i64*, i64** %9
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 0, %167
  %169 = sub i64 0, %165
  %170 = add i64 %168, %169
  %171 = sub i64 0, %170
  %172 = add nsw i64 %167, %165
  %173 = load volatile i64*, i64** %9
  store i64 %171, i64* %173, align 8
  store i32 1325325669, i32* %23
  br label %197

; <label>:174:                                    ; preds = %24
  store i32 285758854, i32* %23
  br label %197

; <label>:175:                                    ; preds = %24
  %176 = alloca %class.Dinic*, align 8
  %177 = alloca i32, align 4
  %178 = alloca i32, align 4
  %179 = alloca i64, align 8
  %180 = alloca i64, align 8
  %181 = alloca i64, align 8
  %182 = alloca i32, align 4
  store %class.Dinic* %0, %class.Dinic** %176, align 8
  store i32 %1, i32* %177, align 4
  store i32 %2, i32* %178, align 4
  %183 = load %class.Dinic*, %class.Dinic** %176, align 8
  store i64 0, i64* %179, align 8
  store i64 0, i64* %180, align 8
  %184 = call i64 @_ZNSt14numeric_limitsIxE3maxEv() #3
  store i64 %184, i64* %181, align 8
  store i32 1793534559, i32* %23
  br label %197

; <label>:185:                                    ; preds = %24
  %186 = load volatile i32*, i32** %11
  %187 = load i32, i32* %186, align 4
  %188 = load volatile %class.Dinic*, %class.Dinic** %5
  call void @_ZN5DinicIxE3bfsEi(%class.Dinic* %188, i32 %187)
  %189 = load volatile %class.Dinic*, %class.Dinic** %5
  %190 = getelementptr inbounds %class.Dinic, %class.Dinic* %189, i32 0, i32 3
  %191 = load volatile i32*, i32** %10
  %192 = load i32, i32* %191, align 4
  %193 = sext i32 %192 to i64
  %194 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %190, i64 %193) #3
  %195 = load i32, i32* %194, align 4
  %196 = icmp slt i32 %195, 0
  store i32 -1976414007, i32* %23
  br label %197

; <label>:197:                                    ; preds = %185, %175, %174, %163, %162, %148, %139, %133, %106, %90, %89, %47, %27, %26
  br label %24
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5DinicIxED2Ev(%class.Dinic*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.Dinic*, align 8
  store %class.Dinic* %0, %class.Dinic** %2, align 8
  %3 = load %class.Dinic*, %class.Dinic** %2, align 8
  %4 = getelementptr inbounds %class.Dinic, %class.Dinic* %3, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %4) #3
  %5 = getelementptr inbounds %class.Dinic, %class.Dinic* %3, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %5) #3
  %6 = getelementptr inbounds %class.Dinic, %class.Dinic* %3, i32 0, i32 1
  call void @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EED2Ev(%"class.std::vector.13"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.52
  %6 = load i32, i32* @y.53
  %7 = sub i32 %5, -972275095
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -972275095
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2045977104, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2045977104, label %19
    i32 706554893, label %27
    i32 979486383, label %57
    i32 1374175513, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 706554893, i32 1374175513
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  %29 = load i32*, i32** %28, align 8
  store i32* %29, i32** %2
  %30 = load i32, i32* @x.52
  %31 = load i32, i32* @y.53
  %32 = add i32 %30, -1170449774
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1170449774
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 979486383, i32 1374175513
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32*, i32** %2
  ret i32* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i32*, align 8
  store i32* %0, i32** %60, align 8
  %61 = load i32*, i32** %60, align 8
  store i32 706554893, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.54
  %3 = load i32, i32* @y.55
  %4 = add i32 %2, -1073238203
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1073238203
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %131

; <label>:28:                                     ; preds = %1, %131
  %29 = alloca %"class.std::vector.8"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %29, align 8
  %32 = load %"class.std::vector.8"*, %"class.std::vector.8"** %29, align 8
  %33 = bitcast %"class.std::vector.8"* %32 to %"struct.std::_Vector_base.9"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = bitcast %"class.std::vector.8"* %32 to %"struct.std::_Vector_base.9"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %"class.std::vector.8"* %32 to %"struct.std::_Vector_base.9"*
  %42 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %41) #3
  %43 = load i32, i32* @x.54
  %44 = load i32, i32* @y.55
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %131

; <label>:68:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %36, i32* %40, %"class.std::allocator.10"* dereferenceable(1) %42)
          to label %69 unwind label %124

; <label>:69:                                     ; preds = %68
  %70 = load i32, i32* @x.54
  %71 = load i32, i32* @y.55
  %72 = sub i32 %70, -2132875782
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -2132875782
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %146

; <label>:96:                                     ; preds = %69, %146
  %97 = bitcast %"class.std::vector.8"* %32 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %97) #3
  %98 = load i32, i32* @x.54
  %99 = load i32, i32* @y.55
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  br i1 %121, label %123, label %146

; <label>:123:                                    ; preds = %96
  ret void

; <label>:124:                                    ; preds = %68
  %125 = landingpad { i8*, i32 }
          catch i8* null
  %126 = extractvalue { i8*, i32 } %125, 0
  store i8* %126, i8** %30, align 8
  %127 = extractvalue { i8*, i32 } %125, 1
  store i32 %127, i32* %31, align 4
  %128 = bitcast %"class.std::vector.8"* %32 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %128) #3
  br label %129

; <label>:129:                                    ; preds = %124
  %130 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %130) #8
  unreachable

; <label>:131:                                    ; preds = %28, %1
  %132 = alloca %"class.std::vector.8"*, align 8
  %133 = alloca i8*
  %134 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %132, align 8
  %135 = load %"class.std::vector.8"*, %"class.std::vector.8"** %132, align 8
  %136 = bitcast %"class.std::vector.8"* %135 to %"struct.std::_Vector_base.9"*
  %137 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %136, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %137, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = bitcast %"class.std::vector.8"* %135 to %"struct.std::_Vector_base.9"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %141, i32 0, i32 1
  %143 = load i32*, i32** %142, align 8
  %144 = bitcast %"class.std::vector.8"* %135 to %"struct.std::_Vector_base.9"*
  %145 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %144) #3
  br label %28

; <label>:146:                                    ; preds = %96, %69
  %147 = bitcast %"class.std::vector.8"* %32 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %147) #3
  br label %96
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EED2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.13"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %6 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %10 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %14 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %15 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.18"* %9, %"class.std::vector.18"* %13, %"class.std::allocator.15"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.14"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.14"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.58
  %7 = load i32, i32* @y.59
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 2093872257, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2093872257, label %19
    i32 -431504143, label %39
    i32 -2102670303, label %60
    i32 1476199905, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -431504143, i32 1476199905
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  %42 = alloca %"class.std::allocator.10"*, align 8
  store i32* %0, i32** %40, align 8
  store i32* %1, i32** %41, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %42, align 8
  %43 = load i32*, i32** %40, align 8
  %44 = load i32*, i32** %41, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %43, i32* %44)
  %45 = load i32, i32* @x.58
  %46 = load i32, i32* @y.59
  %47 = sub i32 %45, 1450963643
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1450963643
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -2102670303, i32 1476199905
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca i32*, align 8
  %63 = alloca i32*, align 8
  %64 = alloca %"class.std::allocator.10"*, align 8
  store i32* %0, i32** %62, align 8
  store i32* %1, i32** %63, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %64, align 8
  %65 = load i32*, i32** %62, align 8
  %66 = load i32*, i32** %63, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %65, i32* %66)
  store i32 -431504143, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = sub i64 %15, 5308627240609474263
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 5308627240609474263
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.9"* %5, i32* %8, i64 %21)
          to label %22 unwind label %53

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.62
  %24 = load i32, i32* @y.63
  %25 = sub i32 %23, 1678639744
  %26 = sub i32 %25, 1
  %27 = add i32 %26, 1678639744
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %60

; <label>:37:                                     ; preds = %22, %60
  %38 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %38) #3
  %39 = load i32, i32* @x.62
  %40 = load i32, i32* @y.63
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %60

; <label>:52:                                     ; preds = %37
  ret void

; <label>:53:                                     ; preds = %1
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %3, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %4, align 4
  %57 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %57) #3
  br label %58

; <label>:58:                                     ; preds = %53
  %59 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %59) #8
  unreachable

; <label>:60:                                     ; preds = %37, %22
  %61 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %61) #3
  br label %37
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #8
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #5 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.9"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca %"struct.std::_Vector_base.9"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.std::_Vector_base.9"* %9, %"struct.std::_Vector_base.9"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 -1473705171, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %71
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1473705171, label %15
    i32 1020410605, label %19
    i32 2129085700, label %25
    i32 2052334102, label %53
    i32 818289531, label %69
    i32 1452544598, label %70
  ]

; <label>:14:                                     ; preds = %12
  br label %71

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 1020410605, i32 2129085700
  store i32 %18, i32* %11
  br label %71

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.10"*
  %23 = load i32*, i32** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.10"* dereferenceable(1) %22, i32* %23, i64 %24)
  store i32 2129085700, i32* %11
  br label %71

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.70
  %27 = load i32, i32* @y.71
  %28 = add i32 %26, -1413214746
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -1413214746
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 2052334102, i32 1452544598
  store i32 %52, i32* %11
  br label %71

; <label>:53:                                     ; preds = %12
  %54 = load i32, i32* @x.70
  %55 = load i32, i32* @y.71
  %56 = add i32 %54, 1320360677
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 1320360677
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 818289531, i32 1452544598
  store i32 %68, i32* %11
  br label %71

; <label>:69:                                     ; preds = %12
  ret void

; <label>:70:                                     ; preds = %12
  store i32 2052334102, i32* %11
  br label %71

; <label>:71:                                     ; preds = %70, %53, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.72
  %5 = load i32, i32* @y.73
  %6 = sub i32 %4, 902501800
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 902501800
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1630888273, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1630888273, label %18
    i32 1933201321, label %38
    i32 1702638842, label %68
    i32 -1282660251, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1933201321, i32 -1282660251
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40 to %"class.std::allocator.10"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %41) #3
  %42 = load i32, i32* @x.72
  %43 = load i32, i32* @y.73
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1702638842, i32 -1282660251
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %70, align 8
  %71 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %70, align 8
  %72 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %71 to %"class.std::allocator.10"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %72) #3
  store i32 1933201321, i32* %14
  br label %73

; <label>:73:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.10"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.11"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.11"*, i32*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.80
  %5 = load i32, i32* @y.81
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1846333632, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1846333632, label %17
    i32 1409125781, label %37
    i32 985560589, label %54
    i32 -1976337473, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1409125781, i32 -1976337473
  store i32 %36, i32* %13
  br label %58

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %38, align 8
  %40 = load i32, i32* @x.80
  %41 = load i32, i32* @y.81
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 985560589, i32 -1976337473
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %56, align 8
  store i32 1409125781, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.82
  %7 = load i32, i32* @y.83
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1423317179, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1423317179, label %19
    i32 275776375, label %27
    i32 296161396, label %47
    i32 682891663, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 275776375, i32 682891663
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.18"*, align 8
  %29 = alloca %"class.std::vector.18"*, align 8
  %30 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %28, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %29, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %30, align 8
  %31 = load %"class.std::vector.18"*, %"class.std::vector.18"** %28, align 8
  %32 = load %"class.std::vector.18"*, %"class.std::vector.18"** %29, align 8
  call void @_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EEEvT_S6_(%"class.std::vector.18"* %31, %"class.std::vector.18"* %32)
  %33 = load i32, i32* @x.82
  %34 = load i32, i32* @y.83
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 296161396, i32 682891663
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::vector.18"*, align 8
  %50 = alloca %"class.std::vector.18"*, align 8
  %51 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %49, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %50, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %51, align 8
  %52 = load %"class.std::vector.18"*, %"class.std::vector.18"** %49, align 8
  %53 = load %"class.std::vector.18"*, %"class.std::vector.18"** %50, align 8
  call void @_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EEEvT_S6_(%"class.std::vector.18"* %52, %"class.std::vector.18"* %53)
  store i32 275776375, i32* %15
  br label %54

; <label>:54:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %5 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %13, align 8
  %15 = ptrtoint %"class.std::vector.18"* %11 to i64
  %16 = ptrtoint %"class.std::vector.18"* %14 to i64
  %17 = sub i64 %15, 4892446475642761285
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 4892446475642761285
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.14"* %5, %"class.std::vector.18"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EEEvT_S6_(%"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI8MaxFEdgeIxESaIS4_EEEEvT_S8_(%"class.std::vector.18"* %5, %"class.std::vector.18"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI8MaxFEdgeIxESaIS4_EEEEvT_S8_(%"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.18"**
  %5 = alloca %"class.std::vector.18"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.90
  %9 = load i32, i32* @y.91
  %10 = add i32 %8, 1814973295
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1814973295
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1218052184, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %182
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1218052184, label %22
    i32 616940395, label %30
    i32 1787931146, label %62
    i32 -1259645247, label %63
    i32 88791955, label %91
    i32 -2041944613, label %112
    i32 -1661934720, label %115
    i32 1308403210, label %131
    i32 -516266918, label %162
    i32 619553813, label %163
    i32 -217102886, label %168
    i32 1673703205, label %169
    i32 -918155674, label %172
    i32 1597417845, label %178
  ]

; <label>:21:                                     ; preds = %19
  br label %182

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 616940395, i32 1673703205
  store i32 %29, i32* %18
  br label %182

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"** %31, %"class.std::vector.18"*** %5
  %32 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"** %32, %"class.std::vector.18"*** %4
  %33 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %33, align 8
  %34 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %4
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %34, align 8
  %35 = load i32, i32* @x.90
  %36 = load i32, i32* @y.91
  %37 = sub i32 %35, -2093429673
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -2093429673
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1787931146, i32 1673703205
  store i32 %61, i32* %18
  br label %182

; <label>:62:                                     ; preds = %19
  store i32 -1259645247, i32* %18
  br label %182

; <label>:63:                                     ; preds = %19
  %64 = load i32, i32* @x.90
  %65 = load i32, i32* @y.91
  %66 = add i32 %64, -1780693140
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, -1780693140
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 88791955, i32 -918155674
  store i32 %90, i32* %18
  br label %182

; <label>:91:                                     ; preds = %19
  %92 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  %93 = load %"class.std::vector.18"*, %"class.std::vector.18"** %92, align 8
  %94 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %4
  %95 = load %"class.std::vector.18"*, %"class.std::vector.18"** %94, align 8
  %96 = icmp ne %"class.std::vector.18"* %93, %95
  store i1 %96, i1* %3
  %97 = load i32, i32* @x.90
  %98 = load i32, i32* @y.91
  %99 = add i32 %97, -335561639
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, -335561639
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 -2041944613, i32 -918155674
  store i32 %111, i32* %18
  br label %182

; <label>:112:                                    ; preds = %19
  %113 = load volatile i1, i1* %3
  %114 = select i1 %113, i32 -1661934720, i32 -217102886
  store i32 %114, i32* %18
  br label %182

; <label>:115:                                    ; preds = %19
  %116 = load i32, i32* @x.90
  %117 = load i32, i32* @y.91
  %118 = add i32 %116, -1359123365
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, -1359123365
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  %130 = select i1 %128, i32 1308403210, i32 1597417845
  store i32 %130, i32* %18
  br label %182

; <label>:131:                                    ; preds = %19
  %132 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  %133 = load %"class.std::vector.18"*, %"class.std::vector.18"** %132, align 8
  %134 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorI8MaxFEdgeIxESaIS2_EEEPT_RS5_(%"class.std::vector.18"* dereferenceable(24) %133) #3
  call void @_ZSt8_DestroyISt6vectorI8MaxFEdgeIxESaIS2_EEEvPT_(%"class.std::vector.18"* %134)
  %135 = load i32, i32* @x.90
  %136 = load i32, i32* @y.91
  %137 = sub i32 %135, 242195384
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 242195384
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 true, true
  %148 = and i1 %145, true
  %149 = and i1 %143, %147
  %150 = and i1 %146, true
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 true, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  %161 = select i1 %159, i32 -516266918, i32 1597417845
  store i32 %161, i32* %18
  br label %182

; <label>:162:                                    ; preds = %19
  store i32 619553813, i32* %18
  br label %182

; <label>:163:                                    ; preds = %19
  %164 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  %165 = load %"class.std::vector.18"*, %"class.std::vector.18"** %164, align 8
  %166 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %165, i32 1
  %167 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  store %"class.std::vector.18"* %166, %"class.std::vector.18"** %167, align 8
  store i32 -1259645247, i32* %18
  br label %182

; <label>:168:                                    ; preds = %19
  ret void

; <label>:169:                                    ; preds = %19
  %170 = alloca %"class.std::vector.18"*, align 8
  %171 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %170, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %171, align 8
  store i32 616940395, i32* %18
  br label %182

; <label>:172:                                    ; preds = %19
  %173 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  %174 = load %"class.std::vector.18"*, %"class.std::vector.18"** %173, align 8
  %175 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %4
  %176 = load %"class.std::vector.18"*, %"class.std::vector.18"** %175, align 8
  %177 = icmp ne %"class.std::vector.18"* %174, %176
  store i32 88791955, i32* %18
  br label %182

; <label>:178:                                    ; preds = %19
  %179 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  %180 = load %"class.std::vector.18"*, %"class.std::vector.18"** %179, align 8
  %181 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorI8MaxFEdgeIxESaIS2_EEEPT_RS5_(%"class.std::vector.18"* dereferenceable(24) %180) #3
  call void @_ZSt8_DestroyISt6vectorI8MaxFEdgeIxESaIS2_EEEvPT_(%"class.std::vector.18"* %181)
  store i32 1308403210, i32* %18
  br label %182

; <label>:182:                                    ; preds = %178, %172, %169, %163, %162, %131, %115, %112, %91, %63, %62, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorI8MaxFEdgeIxESaIS2_EEEvPT_(%"class.std::vector.18"*) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  call void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EED2Ev(%"class.std::vector.18"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt11__addressofISt6vectorI8MaxFEdgeIxESaIS2_EEEPT_RS5_(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.94
  %6 = load i32, i32* @y.95
  %7 = sub i32 %5, 1287535649
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1287535649
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1928380170, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1928380170, label %19
    i32 14998957, label %27
    i32 -1779487969, label %47
    i32 1377917585, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 14998957, i32 1377917585
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %28, align 8
  %29 = load %"class.std::vector.18"*, %"class.std::vector.18"** %28, align 8
  %30 = bitcast %"class.std::vector.18"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::vector.18"*
  store %"class.std::vector.18"* %31, %"class.std::vector.18"** %2
  %32 = load i32, i32* @x.94
  %33 = load i32, i32* @y.95
  %34 = sub i32 %32, 430378605
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 430378605
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1779487969, i32 1377917585
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %2
  ret %"class.std::vector.18"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %50, align 8
  %51 = load %"class.std::vector.18"*, %"class.std::vector.18"** %50, align 8
  %52 = bitcast %"class.std::vector.18"* %51 to i8*
  %53 = bitcast i8* %52 to %"class.std::vector.18"*
  store i32 14998957, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EED2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.18"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %class.MaxFEdge*, %class.MaxFEdge** %8, align 8
  %10 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %class.MaxFEdge*, %class.MaxFEdge** %12, align 8
  %14 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %15 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %14) #3
  invoke void @_ZSt8_DestroyIP8MaxFEdgeIxES1_EvT_S3_RSaIT0_E(%class.MaxFEdge* %9, %class.MaxFEdge* %13, %"class.std::allocator.20"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.96
  %20 = load i32, i32* @y.97
  %21 = add i32 %19, 1987949751
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 1987949751
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %55

; <label>:33:                                     ; preds = %18, %55
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %37) #3
  %38 = load i32, i32* @x.96
  %39 = load i32, i32* @y.97
  %40 = add i32 %38, -1157601685
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1157601685
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %55

; <label>:52:                                     ; preds = %33
  br label %53

; <label>:53:                                     ; preds = %52
  %54 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %54) #8
  unreachable

; <label>:55:                                     ; preds = %33, %18
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %3, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %4, align 4
  %59 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %59) #3
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP8MaxFEdgeIxES1_EvT_S3_RSaIT0_E(%class.MaxFEdge*, %class.MaxFEdge*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %4 = alloca %class.MaxFEdge*, align 8
  %5 = alloca %class.MaxFEdge*, align 8
  %6 = alloca %"class.std::allocator.20"*, align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %4, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %5, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %6, align 8
  %7 = load %class.MaxFEdge*, %class.MaxFEdge** %4, align 8
  %8 = load %class.MaxFEdge*, %class.MaxFEdge** %5, align 8
  call void @_ZSt8_DestroyIP8MaxFEdgeIxEEvT_S3_(%class.MaxFEdge* %7, %class.MaxFEdge* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %4 to %"class.std::allocator.20"*
  ret %"class.std::allocator.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EED2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %class.MaxFEdge*, %class.MaxFEdge** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %class.MaxFEdge*, %class.MaxFEdge** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %class.MaxFEdge*, %class.MaxFEdge** %13, align 8
  %15 = ptrtoint %class.MaxFEdge* %11 to i64
  %16 = ptrtoint %class.MaxFEdge* %14 to i64
  %17 = sub i64 %15, 3441690935374102987
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 3441690935374102987
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %5, %class.MaxFEdge* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.102
  %26 = load i32, i32* @y.103
  %27 = sub i32 %25, 1854015642
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 1854015642
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %114

; <label>:51:                                     ; preds = %24, %114
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %3, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %4, align 4
  %55 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %55) #3
  %56 = load i32, i32* @x.102
  %57 = load i32, i32* @y.103
  %58 = add i32 %56, 1196456198
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1196456198
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %114

; <label>:70:                                     ; preds = %51
  br label %71

; <label>:71:                                     ; preds = %70
  %72 = load i32, i32* @x.102
  %73 = load i32, i32* @y.103
  %74 = sub i32 %72, -1169428458
  %75 = sub i32 %74, 1
  %76 = add i32 %75, -1169428458
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %119

; <label>:86:                                     ; preds = %71, %119
  %87 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %87) #8
  %88 = load i32, i32* @x.102
  %89 = load i32, i32* @y.103
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %119

; <label>:113:                                    ; preds = %86
  unreachable

; <label>:114:                                    ; preds = %51, %24
  %115 = landingpad { i8*, i32 }
          catch i8* null
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %3, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %4, align 4
  %118 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %118) #3
  br label %51

; <label>:119:                                    ; preds = %86, %71
  %120 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %120) #8
  br label %86
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP8MaxFEdgeIxEEvT_S3_(%class.MaxFEdge*, %class.MaxFEdge*) #0 comdat {
  %3 = alloca %class.MaxFEdge*, align 8
  %4 = alloca %class.MaxFEdge*, align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %3, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %4, align 8
  %5 = load %class.MaxFEdge*, %class.MaxFEdge** %3, align 8
  %6 = load %class.MaxFEdge*, %class.MaxFEdge** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP8MaxFEdgeIxEEEvT_S5_(%class.MaxFEdge* %5, %class.MaxFEdge* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP8MaxFEdgeIxEEEvT_S5_(%class.MaxFEdge*, %class.MaxFEdge*) #5 comdat align 2 {
  %3 = alloca %class.MaxFEdge*, align 8
  %4 = alloca %class.MaxFEdge*, align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %3, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"*, %class.MaxFEdge*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.19"*
  %6 = alloca i64*
  %7 = alloca %class.MaxFEdge**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.108
  %11 = load i32, i32* @y.109
  %12 = sub i32 %10, 1626084912
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 1626084912
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -514621940, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %75
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -514621940, label %24
    i32 -812798866, label %32
    i32 1251294338, label %56
    i32 -286532708, label %59
    i32 1013338564, label %67
    i32 -1269856058, label %68
  ]

; <label>:23:                                     ; preds = %21
  br label %75

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -812798866, i32 -1269856058
  store i32 %31, i32* %20
  br label %75

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.19"*, align 8
  %34 = alloca %class.MaxFEdge*, align 8
  store %class.MaxFEdge** %34, %class.MaxFEdge*** %7
  %35 = alloca i64, align 8
  store i64* %35, i64** %6
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %33, align 8
  %36 = load volatile %class.MaxFEdge**, %class.MaxFEdge*** %7
  store %class.MaxFEdge* %1, %class.MaxFEdge** %36, align 8
  %37 = load volatile i64*, i64** %6
  store i64 %2, i64* %37, align 8
  %38 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %33, align 8
  store %"struct.std::_Vector_base.19"* %38, %"struct.std::_Vector_base.19"** %5
  %39 = load volatile %class.MaxFEdge**, %class.MaxFEdge*** %7
  %40 = load %class.MaxFEdge*, %class.MaxFEdge** %39, align 8
  %41 = icmp ne %class.MaxFEdge* %40, null
  store i1 %41, i1* %4
  %42 = load i32, i32* @x.108
  %43 = load i32, i32* @y.109
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1251294338, i32 -1269856058
  store i32 %55, i32* %20
  br label %75

; <label>:56:                                     ; preds = %21
  %57 = load volatile i1, i1* %4
  %58 = select i1 %57, i32 -286532708, i32 1013338564
  store i32 %58, i32* %20
  br label %75

; <label>:59:                                     ; preds = %21
  %60 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %61 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %60, i32 0, i32 0
  %62 = bitcast %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %61 to %"class.std::allocator.20"*
  %63 = load volatile %class.MaxFEdge**, %class.MaxFEdge*** %7
  %64 = load %class.MaxFEdge*, %class.MaxFEdge** %63, align 8
  %65 = load volatile i64*, i64** %6
  %66 = load i64, i64* %65, align 8
  call void @_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.20"* dereferenceable(1) %62, %class.MaxFEdge* %64, i64 %66)
  store i32 1013338564, i32* %20
  br label %75

; <label>:67:                                     ; preds = %21
  ret void

; <label>:68:                                     ; preds = %21
  %69 = alloca %"struct.std::_Vector_base.19"*, align 8
  %70 = alloca %class.MaxFEdge*, align 8
  %71 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %69, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %70, align 8
  store i64 %2, i64* %71, align 8
  %72 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %69, align 8
  %73 = load %class.MaxFEdge*, %class.MaxFEdge** %70, align 8
  %74 = icmp ne %class.MaxFEdge* %73, null
  store i32 -812798866, i32* %20
  br label %75

; <label>:75:                                     ; preds = %68, %59, %56, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %3 to %"class.std::allocator.20"*
  call void @_ZNSaI8MaxFEdgeIxEED2Ev(%"class.std::allocator.20"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.20"* dereferenceable(1), %class.MaxFEdge*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca %class.MaxFEdge*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load %class.MaxFEdge*, %class.MaxFEdge** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.21"* %8, %class.MaxFEdge* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.21"*, %class.MaxFEdge*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca %class.MaxFEdge*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load %class.MaxFEdge*, %class.MaxFEdge** %5, align 8
  %9 = bitcast %class.MaxFEdge* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI8MaxFEdgeIxEED2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEED2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEED2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.118
  %5 = load i32, i32* @y.119
  %6 = add i32 %4, -1851992807
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1851992807
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1472478757, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1472478757, label %18
    i32 325971821, label %38
    i32 1925043004, label %68
    i32 -1799647705, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 325971821, i32 -1799647705
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %39, align 8
  %41 = load i32, i32* @x.118
  %42 = load i32, i32* @y.119
  %43 = sub i32 %41, 1255151664
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1255151664
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1925043004, i32 -1799647705
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %70, align 8
  store i32 325971821, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.14"*, %"class.std::vector.18"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca %"struct.std::_Vector_base.14"*
  %6 = alloca %"struct.std::_Vector_base.14"*, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %6, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %6, align 8
  store %"struct.std::_Vector_base.14"* %9, %"struct.std::_Vector_base.14"** %5
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  store %"class.std::vector.18"* %10, %"class.std::vector.18"** %4
  %11 = alloca i32
  store i32 1081949425, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %120
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1081949425, label %15
    i32 -830571809, label %19
    i32 1117137130, label %46
    i32 -1504743437, label %67
    i32 1050545029, label %68
    i32 -78845267, label %84
    i32 -184745690, label %112
    i32 526452605, label %113
    i32 324802650, label %119
  ]

; <label>:14:                                     ; preds = %12
  br label %120

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %17 = icmp ne %"class.std::vector.18"* %16, null
  %18 = select i1 %17, i32 -830571809, i32 1050545029
  store i32 %18, i32* %11
  br label %120

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.120
  %21 = load i32, i32* @y.121
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 1117137130, i32 526452605
  store i32 %45, i32* %11
  br label %120

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %48 to %"class.std::allocator.15"*
  %50 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %51 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorI8MaxFEdgeIxESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.15"* dereferenceable(1) %49, %"class.std::vector.18"* %50, i64 %51)
  %52 = load i32, i32* @x.120
  %53 = load i32, i32* @y.121
  %54 = add i32 %52, 542804467
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 542804467
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -1504743437, i32 526452605
  store i32 %66, i32* %11
  br label %120

; <label>:67:                                     ; preds = %12
  store i32 1050545029, i32* %11
  br label %120

; <label>:68:                                     ; preds = %12
  %69 = load i32, i32* @x.120
  %70 = load i32, i32* @y.121
  %71 = add i32 %69, -14900027
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -14900027
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 -78845267, i32 324802650
  store i32 %83, i32* %11
  br label %120

; <label>:84:                                     ; preds = %12
  %85 = load i32, i32* @x.120
  %86 = load i32, i32* @y.121
  %87 = sub i32 %85, 1851570801
  %88 = sub i32 %87, 1
  %89 = add i32 %88, 1851570801
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 -184745690, i32 324802650
  store i32 %111, i32* %11
  br label %120

; <label>:112:                                    ; preds = %12
  ret void

; <label>:113:                                    ; preds = %12
  %114 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %115 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %114, i32 0, i32 0
  %116 = bitcast %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %115 to %"class.std::allocator.15"*
  %117 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %118 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorI8MaxFEdgeIxESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.15"* dereferenceable(1) %116, %"class.std::vector.18"* %117, i64 %118)
  store i32 1117137130, i32* %11
  br label %120

; <label>:119:                                    ; preds = %12
  store i32 -78845267, i32* %11
  br label %120

; <label>:120:                                    ; preds = %119, %113, %84, %68, %67, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaISt6vectorI8MaxFEdgeIxESaIS1_EEED2Ev(%"class.std::allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorI8MaxFEdgeIxESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.15"* dereferenceable(1), %"class.std::vector.18"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.16"* %8, %"class.std::vector.18"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.16"*, %"class.std::vector.18"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.126
  %7 = load i32, i32* @y.127
  %8 = sub i32 %6, 136355130
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 136355130
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -713890431, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -713890431, label %20
    i32 -2116029672, label %40
    i32 -1786766330, label %61
    i32 -527248391, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -2116029672, i32 -527248391
  store i32 %39, i32* %16
  br label %69

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %42 = alloca %"class.std::vector.18"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %41, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %41, align 8
  %45 = load %"class.std::vector.18"*, %"class.std::vector.18"** %42, align 8
  %46 = bitcast %"class.std::vector.18"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.126
  %48 = load i32, i32* @y.127
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1786766330, i32 -527248391
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %64 = alloca %"class.std::vector.18"*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %63, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %63, align 8
  %67 = load %"class.std::vector.18"*, %"class.std::vector.18"** %64, align 8
  %68 = bitcast %"class.std::vector.18"* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 -2116029672, i32* %16
  br label %69

; <label>:69:                                     ; preds = %62, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI8MaxFEdgeIxESaIS1_EEED2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.134
  %5 = load i32, i32* @y.135
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 688095281, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %79
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 688095281, label %17
    i32 1045925650, label %37
    i32 1494038956, label %71
    i32 -655989370, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %79

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1045925650, i32 -655989370
  store i32 %36, i32* %13
  br label %79

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %39 to %"class.std::allocator"*
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.std::allocator"* %40) #3
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %39, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %39, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %39, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %43, align 8
  %44 = load i32, i32* @x.134
  %45 = load i32, i32* @y.135
  %46 = add i32 %44, -679043848
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -679043848
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1494038956, i32 -655989370
  store i32 %70, i32* %13
  br label %79

; <label>:71:                                     ; preds = %14
  ret void

; <label>:72:                                     ; preds = %14
  %73 = alloca %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %73, align 8
  %74 = load %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %73, align 8
  %75 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %74 to %"class.std::allocator"*
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.std::allocator"* %75) #3
  %76 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %74, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %74, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %74, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %78, align 8
  store i32 1045925650, i32* %13
  br label %79

; <label>:79:                                     ; preds = %72, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %7, %"class.std::__cxx11::basic_string"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.144
  %3 = load i32, i32* @y.145
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %155

; <label>:27:                                     ; preds = %1, %155
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %28, align 8
  %31 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %35, i32 0, i32 2
  %37 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %39, align 8
  %41 = ptrtoint %"class.std::__cxx11::basic_string"* %37 to i64
  %42 = ptrtoint %"class.std::__cxx11::basic_string"* %40 to i64
  %43 = add i64 %41, -4091345054304924610
  %44 = sub i64 %43, %42
  %45 = sub i64 %44, -4091345054304924610
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 32
  %48 = load i32, i32* @x.144
  %49 = load i32, i32* @y.145
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %155

; <label>:61:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %31, %"class.std::__cxx11::basic_string"* %34, i64 %47)
          to label %62 unwind label %64

; <label>:62:                                     ; preds = %61
  %63 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %63) #3
  ret void

; <label>:64:                                     ; preds = %61
  %65 = load i32, i32* @x.144
  %66 = load i32, i32* @y.145
  %67 = sub i32 %65, -880190975
  %68 = sub i32 %67, 1
  %69 = add i32 %68, -880190975
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %224

; <label>:79:                                     ; preds = %64, %224
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %29, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %30, align 4
  %83 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %83) #3
  %84 = load i32, i32* @x.144
  %85 = load i32, i32* @y.145
  %86 = add i32 %84, 288512281
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, 288512281
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %224

; <label>:110:                                    ; preds = %79
  br label %111

; <label>:111:                                    ; preds = %110
  %112 = load i32, i32* @x.144
  %113 = load i32, i32* @y.145
  %114 = sub i32 %112, -392482268
  %115 = sub i32 %114, 1
  %116 = add i32 %115, -392482268
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %229

; <label>:138:                                    ; preds = %111, %229
  %139 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %139) #8
  %140 = load i32, i32* @x.144
  %141 = load i32, i32* @y.145
  %142 = add i32 %140, 1788062011
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, 1788062011
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %229

; <label>:154:                                    ; preds = %138
  unreachable

; <label>:155:                                    ; preds = %27, %1
  %156 = alloca %"struct.std::_Vector_base"*, align 8
  %157 = alloca i8*
  %158 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %156, align 8
  %159 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %156, align 8
  %160 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %159, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %160, i32 0, i32 0
  %162 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %161, align 8
  %163 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %159, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %163, i32 0, i32 2
  %165 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %164, align 8
  %166 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %159, i32 0, i32 0
  %167 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %166, i32 0, i32 0
  %168 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %167, align 8
  %169 = ptrtoint %"class.std::__cxx11::basic_string"* %165 to i64
  %170 = ptrtoint %"class.std::__cxx11::basic_string"* %168 to i64
  %171 = shl i64 %169, %170
  %172 = sub i64 0, %169
  %173 = add i64 0, %172
  %174 = sub i64 0, %169
  %175 = add i64 %173, 4742991254842943133
  %176 = add i64 %175, %170
  %177 = sub i64 %176, 4742991254842943133
  %178 = add i64 %173, %170
  %179 = sub i64 0, %170
  %180 = add i64 %169, %179
  %181 = sub i64 %169, %170
  %182 = mul i64 %180, %170
  %183 = sub i64 0, -7105352148177477033
  %184 = sub i64 %183, %169
  %185 = add i64 %184, -7105352148177477033
  %186 = sub i64 0, %169
  %187 = sub i64 0, %170
  %188 = sub i64 %185, %187
  %189 = add i64 %185, %170
  %190 = sub i64 0, -319530462712630199
  %191 = sub i64 %190, %169
  %192 = add i64 %191, -319530462712630199
  %193 = sub i64 0, %169
  %194 = sub i64 %192, -5587156271139132972
  %195 = add i64 %194, %170
  %196 = add i64 %195, -5587156271139132972
  %197 = add i64 %192, %170
  %198 = sub i64 0, %170
  %199 = add i64 %169, %198
  %200 = sub i64 %169, %170
  %201 = mul i64 %199, %170
  %202 = shl i64 %169, %170
  %203 = sub i64 0, %170
  %204 = add i64 %169, %203
  %205 = sub i64 %169, %170
  %206 = sub i64 %204, -1947080612219690143
  %207 = sub i64 %206, 32
  %208 = add i64 %207, -1947080612219690143
  %209 = sub i64 %204, 32
  %210 = mul i64 %208, 32
  %211 = add i64 0, 4940377936881760520
  %212 = sub i64 %211, %204
  %213 = sub i64 %212, 4940377936881760520
  %214 = sub i64 0, %204
  %215 = add i64 %213, 4133379001502638508
  %216 = add i64 %215, 32
  %217 = sub i64 %216, 4133379001502638508
  %218 = add i64 %213, 32
  %219 = sub i64 0, 32
  %220 = add i64 %204, %219
  %221 = sub i64 %204, 32
  %222 = mul i64 %220, 32
  %223 = sdiv exact i64 %204, 32
  br label %27

; <label>:224:                                    ; preds = %79, %64
  %225 = landingpad { i8*, i32 }
          catch i8* null
  %226 = extractvalue { i8*, i32 } %225, 0
  store i8* %226, i8** %29, align 8
  %227 = extractvalue { i8*, i32 } %225, 1
  store i32 %227, i32* %30, align 4
  %228 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %228) #3
  br label %79

; <label>:229:                                    ; preds = %138, %111
  %230 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %230) #8
  br label %138
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"* %5, %"class.std::__cxx11::basic_string"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::__cxx11::basic_string"**
  %5 = alloca %"class.std::__cxx11::basic_string"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.148
  %9 = load i32, i32* @y.149
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1620595571, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %202
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1620595571, label %21
    i32 2036848239, label %41
    i32 976387279, label %73
    i32 645161716, label %74
    i32 676357983, label %102
    i32 -1474112464, label %135
    i32 -1497585248, label %138
    i32 -237612933, label %142
    i32 1969181074, label %147
    i32 1037911699, label %163
    i32 -465331922, label %191
    i32 1001355965, label %192
    i32 382653992, label %195
    i32 -424736590, label %201
  ]

; <label>:20:                                     ; preds = %18
  br label %202

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 2036848239, i32 1001355965
  store i32 %40, i32* %17
  br label %202

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"** %42, %"class.std::__cxx11::basic_string"*** %5
  %43 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"** %43, %"class.std::__cxx11::basic_string"*** %4
  %44 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %5
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %44, align 8
  %45 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %4
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %45, align 8
  %46 = load i32, i32* @x.148
  %47 = load i32, i32* @y.149
  %48 = sub i32 %46, -271455969
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -271455969
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 976387279, i32 1001355965
  store i32 %72, i32* %17
  br label %202

; <label>:73:                                     ; preds = %18
  store i32 645161716, i32* %17
  br label %202

; <label>:74:                                     ; preds = %18
  %75 = load i32, i32* @x.148
  %76 = load i32, i32* @y.149
  %77 = sub i32 %75, 1848491089
  %78 = sub i32 %77, 1
  %79 = add i32 %78, 1848491089
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 676357983, i32 382653992
  store i32 %101, i32* %17
  br label %202

; <label>:102:                                    ; preds = %18
  %103 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %5
  %104 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %103, align 8
  %105 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %4
  %106 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %105, align 8
  %107 = icmp ne %"class.std::__cxx11::basic_string"* %104, %106
  store i1 %107, i1* %3
  %108 = load i32, i32* @x.148
  %109 = load i32, i32* @y.149
  %110 = add i32 %108, 955693500
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, 955693500
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 false, true
  %121 = and i1 %118, false
  %122 = and i1 %116, %120
  %123 = and i1 %119, false
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 false, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -1474112464, i32 382653992
  store i32 %134, i32* %17
  br label %202

; <label>:135:                                    ; preds = %18
  %136 = load volatile i1, i1* %3
  %137 = select i1 %136, i32 -1497585248, i32 1969181074
  store i32 %137, i32* %17
  br label %202

; <label>:138:                                    ; preds = %18
  %139 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %5
  %140 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %139, align 8
  %141 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %140) #3
  call void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"* %141)
  store i32 -237612933, i32* %17
  br label %202

; <label>:142:                                    ; preds = %18
  %143 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %5
  %144 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %144, i32 1
  %146 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %5
  store %"class.std::__cxx11::basic_string"* %145, %"class.std::__cxx11::basic_string"** %146, align 8
  store i32 645161716, i32* %17
  br label %202

; <label>:147:                                    ; preds = %18
  %148 = load i32, i32* @x.148
  %149 = load i32, i32* @y.149
  %150 = add i32 %148, 981607716
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, 981607716
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  %162 = select i1 %160, i32 1037911699, i32 -424736590
  store i32 %162, i32* %17
  br label %202

; <label>:163:                                    ; preds = %18
  %164 = load i32, i32* @x.148
  %165 = load i32, i32* @y.149
  %166 = sub i32 %164, 1127265153
  %167 = sub i32 %166, 1
  %168 = add i32 %167, 1127265153
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = xor i1 %172, true
  %175 = xor i1 %173, true
  %176 = xor i1 true, true
  %177 = and i1 %174, true
  %178 = and i1 %172, %176
  %179 = and i1 %175, true
  %180 = and i1 %173, %176
  %181 = or i1 %177, %178
  %182 = or i1 %179, %180
  %183 = xor i1 %181, %182
  %184 = or i1 %174, %175
  %185 = xor i1 %184, true
  %186 = or i1 true, %176
  %187 = and i1 %185, %186
  %188 = or i1 %183, %187
  %189 = or i1 %172, %173
  %190 = select i1 %188, i32 -465331922, i32 -424736590
  store i32 %190, i32* %17
  br label %202

; <label>:191:                                    ; preds = %18
  ret void

; <label>:192:                                    ; preds = %18
  %193 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %194 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %193, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %194, align 8
  store i32 2036848239, i32* %17
  br label %202

; <label>:195:                                    ; preds = %18
  %196 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %5
  %197 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %196, align 8
  %198 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %4
  %199 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %198, align 8
  %200 = icmp ne %"class.std::__cxx11::basic_string"* %197, %199
  store i32 676357983, i32* %17
  br label %202

; <label>:201:                                    ; preds = %18
  store i32 1037911699, i32* %17
  br label %202

; <label>:202:                                    ; preds = %201, %195, %192, %163, %147, %142, %138, %135, %102, %74, %73, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"*) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::__cxx11::basic_string"*
  ret %"class.std::__cxx11::basic_string"* %5
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"*, %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::__cxx11::basic_string"* %10, %"class.std::__cxx11::basic_string"** %4
  %11 = alloca i32
  store i32 2087970110, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 2087970110, label %15
    i32 15466553, label %19
    i32 -450727274, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  %17 = icmp ne %"class.std::__cxx11::basic_string"* %16, null
  %18 = select i1 %17, i32 15466553, i32 -450727274
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %21 to %"class.std::allocator"*
  %23 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator"* dereferenceable(1) %22, %"class.std::__cxx11::basic_string"* %23, i64 %24)
  store i32 -450727274, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator"* dereferenceable(1), %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator"* %8, %"class.std::__cxx11::basic_string"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::__cxx11::basic_string"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.160
  %7 = load i32, i32* @y.161
  %8 = sub i32 %6, 806048585
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 806048585
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -727338638, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %81
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -727338638, label %20
    i32 -1293890357, label %40
    i32 -1164370500, label %73
    i32 747586049, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %81

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1293890357, i32 747586049
  store i32 %39, i32* %16
  br label %81

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %42 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %41, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %41, align 8
  %45 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %42, align 8
  %46 = bitcast %"class.std::__cxx11::basic_string"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.160
  %48 = load i32, i32* @y.161
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1164370500, i32 747586049
  store i32 %72, i32* %16
  br label %81

; <label>:73:                                     ; preds = %17
  ret void

; <label>:74:                                     ; preds = %17
  %75 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %76 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %77 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %75, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %76, align 8
  store i64 %2, i64* %77, align 8
  %78 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %75, align 8
  %79 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %76, align 8
  %80 = bitcast %"class.std::__cxx11::basic_string"* %79 to i8*
  call void @_ZdlPv(i8* %80) #3
  store i32 -1293890357, i32* %16
  br label %81

; <label>:81:                                     ; preds = %74, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.162
  %5 = load i32, i32* @y.163
  %6 = add i32 %4, -1286932378
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1286932378
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 174431485, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 174431485, label %18
    i32 -1753743029, label %38
    i32 1509731185, label %69
    i32 1059913526, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1753743029, i32 1059913526
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %39, align 8
  %40 = load %"class.std::allocator"*, %"class.std::allocator"** %39, align 8
  %41 = bitcast %"class.std::allocator"* %40 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.__gnu_cxx::new_allocator"* %41) #3
  %42 = load i32, i32* @x.162
  %43 = load i32, i32* @y.163
  %44 = add i32 %42, 732693206
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 732693206
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1509731185, i32 1059913526
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %71, align 8
  %72 = load %"class.std::allocator"*, %"class.std::allocator"** %71, align 8
  %73 = bitcast %"class.std::allocator"* %72 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.__gnu_cxx::new_allocator"* %73) #3
  store i32 -1753743029, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.166
  %6 = load i32, i32* @y.167
  %7 = sub i32 %5, -282731601
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -282731601
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1649806503, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %109
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1649806503, label %19
    i32 -1592870952, label %27
    i32 461875120, label %72
    i32 -1907186259, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %109

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1592870952, i32 -1907186259
  store i32 %26, i32* %15
  br label %109

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %32, align 8
  %34 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %36, align 8
  %38 = ptrtoint %"class.std::__cxx11::basic_string"* %33 to i64
  %39 = ptrtoint %"class.std::__cxx11::basic_string"* %37 to i64
  %40 = add i64 %38, -2059582253513869486
  %41 = sub i64 %40, %39
  %42 = sub i64 %41, -2059582253513869486
  %43 = sub i64 %38, %39
  %44 = sdiv exact i64 %42, 32
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.166
  %46 = load i32, i32* @y.167
  %47 = add i32 %45, 1199403033
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1199403033
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 461875120, i32 -1907186259
  store i32 %71, i32* %15
  br label %109

; <label>:72:                                     ; preds = %16
  %73 = load volatile i64, i64* %2
  ret i64 %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %75, align 8
  %76 = load %"class.std::vector"*, %"class.std::vector"** %75, align 8
  %77 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %78, i32 0, i32 1
  %80 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %79, align 8
  %81 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %83, align 8
  %85 = ptrtoint %"class.std::__cxx11::basic_string"* %80 to i64
  %86 = ptrtoint %"class.std::__cxx11::basic_string"* %84 to i64
  %87 = shl i64 %85, %86
  %88 = shl i64 %85, %86
  %89 = add i64 %85, 6469451569908043288
  %90 = sub i64 %89, %86
  %91 = sub i64 %90, 6469451569908043288
  %92 = sub i64 %85, %86
  %93 = mul i64 %91, %86
  %94 = sub i64 %85, -3492479775989442647
  %95 = sub i64 %94, %86
  %96 = add i64 %95, -3492479775989442647
  %97 = sub i64 %85, %86
  %98 = shl i64 %96, 32
  %99 = sub i64 0, 32
  %100 = add i64 %96, %99
  %101 = sub i64 %96, 32
  %102 = mul i64 %100, 32
  %103 = shl i64 %96, 32
  %104 = sub i64 0, 32
  %105 = add i64 %96, %104
  %106 = sub i64 %96, 32
  %107 = mul i64 %105, 32
  %108 = sdiv exact i64 %96, 32
  store i32 -1592870952, i32* %15
  br label %109

; <label>:109:                                    ; preds = %74, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_default_appendEm(%"class.std::vector"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.168
  %4 = load i32, i32* @y.169
  %5 = sub i32 %3, -62905801
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -62905801
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %359

; <label>:17:                                     ; preds = %2, %359
  %18 = alloca %"class.std::vector"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %23 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %18, align 8
  store i64 %1, i64* %19, align 8
  %26 = load %"class.std::vector"*, %"class.std::vector"** %18, align 8
  %27 = load i64, i64* %19, align 8
  %28 = icmp ne i64 %27, 0
  %29 = load i32, i32* @x.168
  %30 = load i32, i32* @y.169
  %31 = sub i32 %29, 836196863
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 836196863
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %359

; <label>:43:                                     ; preds = %17
  br i1 %28, label %44, label %349

; <label>:44:                                     ; preds = %43
  %45 = load i32, i32* @x.168
  %46 = load i32, i32* @y.169
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %371

; <label>:70:                                     ; preds = %44, %371
  %71 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %72, i32 0, i32 2
  %74 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %73, align 8
  %75 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %76, i32 0, i32 1
  %78 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %77, align 8
  %79 = ptrtoint %"class.std::__cxx11::basic_string"* %74 to i64
  %80 = ptrtoint %"class.std::__cxx11::basic_string"* %78 to i64
  %81 = sub i64 0, %80
  %82 = add i64 %79, %81
  %83 = sub i64 %79, %80
  %84 = sdiv exact i64 %82, 32
  %85 = load i64, i64* %19, align 8
  %86 = icmp uge i64 %84, %85
  %87 = load i32, i32* @x.168
  %88 = load i32, i32* @y.169
  %89 = sub i32 %87, 543165433
  %90 = sub i32 %89, 1
  %91 = add i32 %90, 543165433
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  br i1 %99, label %101, label %371

; <label>:101:                                    ; preds = %70
  br i1 %86, label %102, label %114

; <label>:102:                                    ; preds = %101
  %103 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %104, i32 0, i32 1
  %106 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %105, align 8
  %107 = load i64, i64* %19, align 8
  %108 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %109 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %108) #3
  %110 = call %"class.std::__cxx11::basic_string"* @_ZSt27__uninitialized_default_n_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmS5_ET_S7_T0_RSaIT1_E(%"class.std::__cxx11::basic_string"* %106, i64 %107, %"class.std::allocator"* dereferenceable(1) %109)
  %111 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %112, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %110, %"class.std::__cxx11::basic_string"** %113, align 8
  br label %348

; <label>:114:                                    ; preds = %101
  %115 = load i64, i64* %19, align 8
  %116 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector"* %26, i64 %115, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0))
  store i64 %116, i64* %20, align 8
  %117 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* %26) #3
  store i64 %117, i64* %21, align 8
  %118 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %119 = load i64, i64* %20, align 8
  %120 = call %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base"* %118, i64 %119)
  store %"class.std::__cxx11::basic_string"* %120, %"class.std::__cxx11::basic_string"** %22, align 8
  %121 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %22, align 8
  store %"class.std::__cxx11::basic_string"* %121, %"class.std::__cxx11::basic_string"** %23, align 8
  %122 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %123 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %122, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %123, i32 0, i32 0
  %125 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %124, align 8
  %126 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %127, i32 0, i32 1
  %129 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %128, align 8
  %130 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %22, align 8
  %131 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %132 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %131) #3
  %133 = invoke %"class.std::__cxx11::basic_string"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"* %125, %"class.std::__cxx11::basic_string"* %129, %"class.std::__cxx11::basic_string"* %130, %"class.std::allocator"* dereferenceable(1) %132)
          to label %134 unwind label %171

; <label>:134:                                    ; preds = %114
  %135 = load i32, i32* @x.168
  %136 = load i32, i32* @y.169
  %137 = add i32 %135, -1859512093
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, -1859512093
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %413

; <label>:149:                                    ; preds = %134, %413
  store %"class.std::__cxx11::basic_string"* %133, %"class.std::__cxx11::basic_string"** %23, align 8
  %150 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %23, align 8
  %151 = load i64, i64* %19, align 8
  %152 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %153 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %152) #3
  %154 = load i32, i32* @x.168
  %155 = load i32, i32* @y.169
  %156 = add i32 %154, 439616364
  %157 = sub i32 %156, 1
  %158 = sub i32 %157, 439616364
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = and i1 %162, %163
  %165 = xor i1 %162, %163
  %166 = or i1 %164, %165
  %167 = or i1 %162, %163
  br i1 %166, label %168, label %413

; <label>:168:                                    ; preds = %149
  %169 = invoke %"class.std::__cxx11::basic_string"* @_ZSt27__uninitialized_default_n_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmS5_ET_S7_T0_RSaIT1_E(%"class.std::__cxx11::basic_string"* %150, i64 %151, %"class.std::allocator"* dereferenceable(1) %153)
          to label %170 unwind label %171

; <label>:170:                                    ; preds = %168
  store %"class.std::__cxx11::basic_string"* %169, %"class.std::__cxx11::basic_string"** %23, align 8
  br label %303

; <label>:171:                                    ; preds = %168, %114
  %172 = landingpad { i8*, i32 }
          catch i8* null
  %173 = extractvalue { i8*, i32 } %172, 0
  store i8* %173, i8** %24, align 8
  %174 = extractvalue { i8*, i32 } %172, 1
  store i32 %174, i32* %25, align 4
  br label %175

; <label>:175:                                    ; preds = %171
  %176 = load i32, i32* @x.168
  %177 = load i32, i32* @y.169
  %178 = sub i32 %176, -1115228552
  %179 = sub i32 %178, 1
  %180 = add i32 %179, -1115228552
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = and i1 %184, %185
  %187 = xor i1 %184, %185
  %188 = or i1 %186, %187
  %189 = or i1 %184, %185
  br i1 %188, label %190, label %418

; <label>:190:                                    ; preds = %175, %418
  %191 = load i8*, i8** %24, align 8
  %192 = call i8* @__cxa_begin_catch(i8* %191) #3
  %193 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %22, align 8
  %194 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %23, align 8
  %195 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %196 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %195) #3
  %197 = load i32, i32* @x.168
  %198 = load i32, i32* @y.169
  %199 = sub i32 %197, -1603706216
  %200 = sub i32 %199, 1
  %201 = add i32 %200, -1603706216
  %202 = sub i32 %197, 1
  %203 = mul i32 %197, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %198, 10
  %207 = and i1 %205, %206
  %208 = xor i1 %205, %206
  %209 = or i1 %207, %208
  %210 = or i1 %205, %206
  br i1 %209, label %211, label %418

; <label>:211:                                    ; preds = %190
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %193, %"class.std::__cxx11::basic_string"* %194, %"class.std::allocator"* dereferenceable(1) %196)
          to label %212 unwind label %217

; <label>:212:                                    ; preds = %211
  %213 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %214 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %22, align 8
  %215 = load i64, i64* %20, align 8
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %213, %"class.std::__cxx11::basic_string"* %214, i64 %215)
          to label %216 unwind label %217

; <label>:216:                                    ; preds = %212
  invoke void @__cxa_rethrow() #12
          to label %358 unwind label %217

; <label>:217:                                    ; preds = %216, %212, %211
  %218 = load i32, i32* @x.168
  %219 = load i32, i32* @y.169
  %220 = sub i32 %218, -296700070
  %221 = sub i32 %220, 1
  %222 = add i32 %221, -296700070
  %223 = sub i32 %218, 1
  %224 = mul i32 %218, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %219, 10
  %228 = xor i1 %226, true
  %229 = xor i1 %227, true
  %230 = xor i1 true, true
  %231 = and i1 %228, true
  %232 = and i1 %226, %230
  %233 = and i1 %229, true
  %234 = and i1 %227, %230
  %235 = or i1 %231, %232
  %236 = or i1 %233, %234
  %237 = xor i1 %235, %236
  %238 = or i1 %228, %229
  %239 = xor i1 %238, true
  %240 = or i1 true, %230
  %241 = and i1 %239, %240
  %242 = or i1 %237, %241
  %243 = or i1 %226, %227
  br i1 %242, label %244, label %425

; <label>:244:                                    ; preds = %217, %425
  %245 = landingpad { i8*, i32 }
          cleanup
  %246 = extractvalue { i8*, i32 } %245, 0
  store i8* %246, i8** %24, align 8
  %247 = extractvalue { i8*, i32 } %245, 1
  store i32 %247, i32* %25, align 4
  %248 = load i32, i32* @x.168
  %249 = load i32, i32* @y.169
  %250 = sub i32 0, 1
  %251 = add i32 %248, %250
  %252 = sub i32 %248, 1
  %253 = mul i32 %248, %251
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %249, 10
  %257 = and i1 %255, %256
  %258 = xor i1 %255, %256
  %259 = or i1 %257, %258
  %260 = or i1 %255, %256
  br i1 %259, label %261, label %425

; <label>:261:                                    ; preds = %244
  invoke void @__cxa_end_catch()
          to label %262 unwind label %355

; <label>:262:                                    ; preds = %261
  %263 = load i32, i32* @x.168
  %264 = load i32, i32* @y.169
  %265 = sub i32 0, 1
  %266 = add i32 %263, %265
  %267 = sub i32 %263, 1
  %268 = mul i32 %263, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %264, 10
  %272 = xor i1 %270, true
  %273 = xor i1 %271, true
  %274 = xor i1 false, true
  %275 = and i1 %272, false
  %276 = and i1 %270, %274
  %277 = and i1 %273, false
  %278 = and i1 %271, %274
  %279 = or i1 %275, %276
  %280 = or i1 %277, %278
  %281 = xor i1 %279, %280
  %282 = or i1 %272, %273
  %283 = xor i1 %282, true
  %284 = or i1 false, %274
  %285 = and i1 %283, %284
  %286 = or i1 %281, %285
  %287 = or i1 %270, %271
  br i1 %286, label %288, label %429

; <label>:288:                                    ; preds = %262, %429
  %289 = load i32, i32* @x.168
  %290 = load i32, i32* @y.169
  %291 = sub i32 0, 1
  %292 = add i32 %289, %291
  %293 = sub i32 %289, 1
  %294 = mul i32 %289, %292
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %290, 10
  %298 = and i1 %296, %297
  %299 = xor i1 %296, %297
  %300 = or i1 %298, %299
  %301 = or i1 %296, %297
  br i1 %300, label %302, label %429

; <label>:302:                                    ; preds = %288
  br label %350

; <label>:303:                                    ; preds = %170
  %304 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %305 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %304, i32 0, i32 0
  %306 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %305, i32 0, i32 0
  %307 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %306, align 8
  %308 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %309 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %308, i32 0, i32 0
  %310 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %309, i32 0, i32 1
  %311 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %310, align 8
  %312 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %313 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %312) #3
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %307, %"class.std::__cxx11::basic_string"* %311, %"class.std::allocator"* dereferenceable(1) %313)
  %314 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %315 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %316 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %315, i32 0, i32 0
  %317 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %316, i32 0, i32 0
  %318 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %317, align 8
  %319 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %320 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %319, i32 0, i32 0
  %321 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %320, i32 0, i32 2
  %322 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %321, align 8
  %323 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %324 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %323, i32 0, i32 0
  %325 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %324, i32 0, i32 0
  %326 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %325, align 8
  %327 = ptrtoint %"class.std::__cxx11::basic_string"* %322 to i64
  %328 = ptrtoint %"class.std::__cxx11::basic_string"* %326 to i64
  %329 = add i64 %327, -3526677143366847838
  %330 = sub i64 %329, %328
  %331 = sub i64 %330, -3526677143366847838
  %332 = sub i64 %327, %328
  %333 = sdiv exact i64 %331, 32
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %314, %"class.std::__cxx11::basic_string"* %318, i64 %333)
  %334 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %22, align 8
  %335 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %336 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %335, i32 0, i32 0
  %337 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %336, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %334, %"class.std::__cxx11::basic_string"** %337, align 8
  %338 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %23, align 8
  %339 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %340 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %339, i32 0, i32 0
  %341 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %340, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %338, %"class.std::__cxx11::basic_string"** %341, align 8
  %342 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %22, align 8
  %343 = load i64, i64* %20, align 8
  %344 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %342, i64 %343
  %345 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %346 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %345, i32 0, i32 0
  %347 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %346, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %344, %"class.std::__cxx11::basic_string"** %347, align 8
  br label %348

; <label>:348:                                    ; preds = %303, %102
  br label %349

; <label>:349:                                    ; preds = %348, %43
  ret void

; <label>:350:                                    ; preds = %302
  %351 = load i8*, i8** %24, align 8
  %352 = load i32, i32* %25, align 4
  %353 = insertvalue { i8*, i32 } undef, i8* %351, 0
  %354 = insertvalue { i8*, i32 } %353, i32 %352, 1
  resume { i8*, i32 } %354

; <label>:355:                                    ; preds = %261
  %356 = landingpad { i8*, i32 }
          catch i8* null
  %357 = extractvalue { i8*, i32 } %356, 0
  call void @__clang_call_terminate(i8* %357) #8
  unreachable

; <label>:358:                                    ; preds = %216
  unreachable

; <label>:359:                                    ; preds = %17, %2
  %360 = alloca %"class.std::vector"*, align 8
  %361 = alloca i64, align 8
  %362 = alloca i64, align 8
  %363 = alloca i64, align 8
  %364 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %365 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %366 = alloca i8*
  %367 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %360, align 8
  store i64 %1, i64* %361, align 8
  %368 = load %"class.std::vector"*, %"class.std::vector"** %360, align 8
  %369 = load i64, i64* %361, align 8
  %370 = icmp ne i64 %369, 0
  br label %17

; <label>:371:                                    ; preds = %70, %44
  %372 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %373 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %372, i32 0, i32 0
  %374 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %373, i32 0, i32 2
  %375 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %374, align 8
  %376 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %377 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %376, i32 0, i32 0
  %378 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %377, i32 0, i32 1
  %379 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %378, align 8
  %380 = ptrtoint %"class.std::__cxx11::basic_string"* %375 to i64
  %381 = ptrtoint %"class.std::__cxx11::basic_string"* %379 to i64
  %382 = add i64 %380, -4738359527439762758
  %383 = sub i64 %382, %381
  %384 = sub i64 %383, -4738359527439762758
  %385 = sub i64 %380, %381
  %386 = mul i64 %384, %381
  %387 = shl i64 %380, %381
  %388 = sub i64 %380, 3422917620550612618
  %389 = sub i64 %388, %381
  %390 = add i64 %389, 3422917620550612618
  %391 = sub i64 %380, %381
  %392 = mul i64 %390, %381
  %393 = sub i64 0, %380
  %394 = add i64 0, %393
  %395 = sub i64 0, %380
  %396 = sub i64 %394, -5733196925997609148
  %397 = add i64 %396, %381
  %398 = add i64 %397, -5733196925997609148
  %399 = add i64 %394, %381
  %400 = shl i64 %380, %381
  %401 = shl i64 %380, %381
  %402 = add i64 %380, -5263517287849137424
  %403 = sub i64 %402, %381
  %404 = sub i64 %403, -5263517287849137424
  %405 = sub i64 %380, %381
  %406 = sub i64 0, 32
  %407 = add i64 %404, %406
  %408 = sub i64 %404, 32
  %409 = mul i64 %407, 32
  %410 = sdiv exact i64 %404, 32
  %411 = load i64, i64* %19, align 8
  %412 = icmp uge i64 %410, %411
  br label %70

; <label>:413:                                    ; preds = %149, %134
  store %"class.std::__cxx11::basic_string"* %133, %"class.std::__cxx11::basic_string"** %23, align 8
  %414 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %23, align 8
  %415 = load i64, i64* %19, align 8
  %416 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %417 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %416) #3
  br label %149

; <label>:418:                                    ; preds = %190, %175
  %419 = load i8*, i8** %24, align 8
  %420 = call i8* @__cxa_begin_catch(i8* %419) #3
  %421 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %22, align 8
  %422 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %23, align 8
  %423 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %424 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %423) #3
  br label %190

; <label>:425:                                    ; preds = %244, %217
  %426 = landingpad { i8*, i32 }
          cleanup
  %427 = extractvalue { i8*, i32 } %426, 0
  store i8* %427, i8** %24, align 8
  %428 = extractvalue { i8*, i32 } %426, 1
  store i32 %428, i32* %25, align 4
  br label %244

; <label>:429:                                    ; preds = %288, %262
  br label %288
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endEPS5_(%"class.std::vector"*, %"class.std::__cxx11::basic_string"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %7 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %11) #3
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %6, %"class.std::__cxx11::basic_string"* %10, %"class.std::allocator"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %15 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %14, %"class.std::__cxx11::basic_string"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt27__uninitialized_default_n_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmS5_ET_S7_T0_RSaIT1_E(%"class.std::__cxx11::basic_string"*, i64, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::__cxx11::basic_string"* @_ZSt25__uninitialized_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmET_S7_T0_(%"class.std::__cxx11::basic_string"* %7, i64 %8)
  ret %"class.std::__cxx11::basic_string"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector"*
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %12 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  store %"class.std::vector"* %12, %"class.std::vector"** %6
  %13 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %14 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector"* %13) #3
  %15 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %16 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* %15) #3
  %17 = sub i64 0, %16
  %18 = add i64 %14, %17
  %19 = sub i64 %14, %16
  store i64 %18, i64* %5
  %20 = load i64, i64* %8, align 8
  store i64 %20, i64* %4
  %21 = alloca i32
  store i32 -1192597237, i32* %21
  %22 = alloca i64
  br label %23

; <label>:23:                                     ; preds = %3, %62
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 -1192597237, label %26
    i32 -1997917353, label %31
    i32 667970055, label %33
    i32 904027750, label %49
    i32 2109728676, label %55
    i32 274961552, label %58
    i32 1835217009, label %60
  ]

; <label>:25:                                     ; preds = %23
  br label %62

; <label>:26:                                     ; preds = %23
  %27 = load volatile i64, i64* %5
  %28 = load volatile i64, i64* %4
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i32 -1997917353, i32 667970055
  store i32 %30, i32* %21
  br label %62

; <label>:31:                                     ; preds = %23
  %32 = load i8*, i8** %9, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %32) #12
  unreachable

; <label>:33:                                     ; preds = %23
  %34 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %35 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* %34) #3
  %36 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %37 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* %36) #3
  store i64 %37, i64* %11, align 8
  %38 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %8)
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %35, -638673032425851451
  %41 = add i64 %40, %39
  %42 = sub i64 %41, -638673032425851451
  %43 = add i64 %35, %39
  store i64 %42, i64* %10, align 8
  %44 = load i64, i64* %10, align 8
  %45 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %46 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* %45) #3
  %47 = icmp ult i64 %44, %46
  %48 = select i1 %47, i32 2109728676, i32 904027750
  store i32 %48, i32* %21
  br label %62

; <label>:49:                                     ; preds = %23
  %50 = load i64, i64* %10, align 8
  %51 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %52 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector"* %51) #3
  %53 = icmp ugt i64 %50, %52
  %54 = select i1 %53, i32 2109728676, i32 274961552
  store i32 %54, i32* %21
  br label %62

; <label>:55:                                     ; preds = %23
  %56 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %57 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector"* %56) #3
  store i32 1835217009, i32* %21
  store i64 %57, i64* %22
  br label %62

; <label>:58:                                     ; preds = %23
  %59 = load i64, i64* %10, align 8
  store i32 1835217009, i32* %21
  store i64 %59, i64* %22
  br label %62

; <label>:60:                                     ; preds = %23
  %61 = load i64, i64* %22
  ret i64 %61

; <label>:62:                                     ; preds = %58, %55, %49, %33, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.176
  %9 = load i32, i32* @y.177
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1746160311, i32* %17
  %18 = alloca %"class.std::__cxx11::basic_string"*
  br label %19

; <label>:19:                                     ; preds = %2, %84
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 1746160311, label %22
    i32 -962787112, label %42
    i32 464589455, label %65
    i32 -1410687073, label %68
    i32 -1689994056, label %75
    i32 702850946, label %76
    i32 556272921, label %78
  ]

; <label>:21:                                     ; preds = %19
  br label %84

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -962787112, i32 556272921
  store i32 %41, i32* %17
  br label %84

; <label>:42:                                     ; preds = %19
  %43 = alloca %"struct.std::_Vector_base"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %43, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  %46 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %43, align 8
  store %"struct.std::_Vector_base"* %46, %"struct.std::_Vector_base"** %4
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = icmp ne i64 %48, 0
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.176
  %51 = load i32, i32* @y.177
  %52 = add i32 %50, 883833613
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 883833613
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 464589455, i32 556272921
  store i32 %64, i32* %17
  br label %84

; <label>:65:                                     ; preds = %19
  %66 = load volatile i1, i1* %3
  %67 = select i1 %66, i32 -1410687073, i32 -1689994056
  store i32 %67, i32* %17
  br label %84

; <label>:68:                                     ; preds = %19
  %69 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %70 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %70 to %"class.std::allocator"*
  %72 = load volatile i64*, i64** %5
  %73 = load i64, i64* %72, align 8
  %74 = call %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator"* dereferenceable(1) %71, i64 %73)
  store i32 702850946, i32* %17
  store %"class.std::__cxx11::basic_string"* %74, %"class.std::__cxx11::basic_string"** %18
  br label %84

; <label>:75:                                     ; preds = %19
  store i32 702850946, i32* %17
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %18
  br label %84

; <label>:76:                                     ; preds = %19
  %77 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %18
  ret %"class.std::__cxx11::basic_string"* %77

; <label>:78:                                     ; preds = %19
  %79 = alloca %"struct.std::_Vector_base"*, align 8
  %80 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %79, align 8
  store i64 %1, i64* %80, align 8
  %81 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %79, align 8
  %82 = load i64, i64* %80, align 8
  %83 = icmp ne i64 %82, 0
  store i32 -962787112, i32* %17
  br label %84

; <label>:84:                                     ; preds = %78, %75, %68, %65, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %12 = call %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %12, %"class.std::__cxx11::basic_string"** %13, align 8
  %14 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %15 = call %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %15, %"class.std::__cxx11::basic_string"** %16, align 8
  %17 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %21, align 8
  %23 = call %"class.std::__cxx11::basic_string"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::__cxx11::basic_string"* %20, %"class.std::__cxx11::basic_string"* %22, %"class.std::__cxx11::basic_string"* %17, %"class.std::allocator"* dereferenceable(1) %18)
  ret %"class.std::__cxx11::basic_string"* %23
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt25__uninitialized_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmET_S7_T0_(%"class.std::__cxx11::basic_string"*, i64) #0 comdat {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::__cxx11::basic_string"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_(%"class.std::__cxx11::basic_string"* %6, i64 %7)
  ret %"class.std::__cxx11::basic_string"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_(%"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %8, %"class.std::__cxx11::basic_string"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %58, %2
  %10 = load i64, i64* %4, align 8
  %11 = icmp ugt i64 %10, 0
  br i1 %11, label %12, label %128

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* @x.182
  %14 = load i32, i32* @y.183
  %15 = sub i32 %13, 1763728616
  %16 = sub i32 %15, 1
  %17 = add i32 %16, 1763728616
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %216

; <label>:39:                                     ; preds = %12, %216
  %40 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %41 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %40) #3
  %42 = load i32, i32* @x.182
  %43 = load i32, i32* @y.183
  %44 = add i32 %42, -1976187630
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1976187630
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %216

; <label>:56:                                     ; preds = %39
  invoke void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEEvPT_DpOT0_(%"class.std::__cxx11::basic_string"* %41)
          to label %57 unwind label %65

; <label>:57:                                     ; preds = %56
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i64, i64* %4, align 8
  %60 = sub i64 0, -1
  %61 = sub i64 %59, %60
  %62 = add i64 %59, -1
  store i64 %61, i64* %4, align 8
  %63 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %64 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %63, i32 1
  store %"class.std::__cxx11::basic_string"* %64, %"class.std::__cxx11::basic_string"** %5, align 8
  br label %9

; <label>:65:                                     ; preds = %56
  %66 = load i32, i32* @x.182
  %67 = load i32, i32* @y.183
  %68 = sub i32 %66, -2130642486
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -2130642486
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %219

; <label>:92:                                     ; preds = %65, %219
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %6, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %7, align 4
  %96 = load i32, i32* @x.182
  %97 = load i32, i32* @y.183
  %98 = sub i32 0, 1
  %99 = add i32 %96, %98
  %100 = sub i32 %96, 1
  %101 = mul i32 %96, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %97, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %219

; <label>:121:                                    ; preds = %92
  br label %122

; <label>:122:                                    ; preds = %121
  %123 = load i8*, i8** %6, align 8
  %124 = call i8* @__cxa_begin_catch(i8* %123) #3
  %125 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %126 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %125, %"class.std::__cxx11::basic_string"* %126)
          to label %127 unwind label %159

; <label>:127:                                    ; preds = %122
  invoke void @__cxa_rethrow() #12
          to label %215 unwind label %159

; <label>:128:                                    ; preds = %9
  %129 = load i32, i32* @x.182
  %130 = load i32, i32* @y.183
  %131 = add i32 %129, 2101415989
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, 2101415989
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %223

; <label>:143:                                    ; preds = %128, %223
  %144 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %145 = load i32, i32* @x.182
  %146 = load i32, i32* @y.183
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  br i1 %156, label %158, label %223

; <label>:158:                                    ; preds = %143
  ret %"class.std::__cxx11::basic_string"* %144

; <label>:159:                                    ; preds = %127, %122
  %160 = landingpad { i8*, i32 }
          cleanup
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %6, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %7, align 4
  invoke void @__cxa_end_catch()
          to label %163 unwind label %212

; <label>:163:                                    ; preds = %159
  br label %165
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:165:                                    ; preds = %163
  %166 = load i32, i32* @x.182
  %167 = load i32, i32* @y.183
  %168 = sub i32 %166, 91092874
  %169 = sub i32 %168, 1
  %170 = add i32 %169, 91092874
  %171 = sub i32 %166, 1
  %172 = mul i32 %166, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %167, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 true, true
  %179 = and i1 %176, true
  %180 = and i1 %174, %178
  %181 = and i1 %177, true
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 true, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  br i1 %190, label %192, label %225

; <label>:192:                                    ; preds = %165, %225
  %193 = load i8*, i8** %6, align 8
  %194 = load i32, i32* %7, align 4
  %195 = insertvalue { i8*, i32 } undef, i8* %193, 0
  %196 = insertvalue { i8*, i32 } %195, i32 %194, 1
  %197 = load i32, i32* @x.182
  %198 = load i32, i32* @y.183
  %199 = add i32 %197, -1640797380
  %200 = sub i32 %199, 1
  %201 = sub i32 %200, -1640797380
  %202 = sub i32 %197, 1
  %203 = mul i32 %197, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %198, 10
  %207 = and i1 %205, %206
  %208 = xor i1 %205, %206
  %209 = or i1 %207, %208
  %210 = or i1 %205, %206
  br i1 %209, label %211, label %225

; <label>:211:                                    ; preds = %192
  resume { i8*, i32 } %196

; <label>:212:                                    ; preds = %159
  %213 = landingpad { i8*, i32 }
          catch i8* null
  %214 = extractvalue { i8*, i32 } %213, 0
  call void @__clang_call_terminate(i8* %214) #8
  unreachable

; <label>:215:                                    ; preds = %127
  unreachable

; <label>:216:                                    ; preds = %39, %12
  %217 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %218 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %217) #3
  br label %39

; <label>:219:                                    ; preds = %92, %65
  %220 = landingpad { i8*, i32 }
          catch i8* null
  %221 = extractvalue { i8*, i32 } %220, 0
  store i8* %221, i8** %6, align 8
  %222 = extractvalue { i8*, i32 } %220, 1
  store i32 %222, i32* %7, align 4
  br label %92

; <label>:223:                                    ; preds = %143, %128
  %224 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  br label %143

; <label>:225:                                    ; preds = %192, %165
  %226 = load i8*, i8** %6, align 8
  %227 = load i32, i32* %7, align 4
  %228 = insertvalue { i8*, i32 } undef, i8* %226, 0
  %229 = insertvalue { i8*, i32 } %228, i32 %227, 1
  br label %192
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEEvPT_DpOT0_(%"class.std::__cxx11::basic_string"*) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::__cxx11::basic_string"*
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %5) #3
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1917163473, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1917163473, label %16
    i32 1959777072, label %21
    i32 -87760362, label %23
    i32 874142649, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 1959777072, i32 -87760362
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 874142649, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i64*, i64** %6, align 8
  store i64* %24, i64** %5, align 8
  store i32 874142649, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i64*, i64** %5, align 8
  ret i64* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 576460752303423487
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::basic_string"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.196
  %7 = load i32, i32* @y.197
  %8 = add i32 %6, 1978054571
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1978054571
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 571679002, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 571679002, label %20
    i32 -1327962421, label %40
    i32 1862811276, label %62
    i32 188726758, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1327962421, i32 188726758
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  %44 = bitcast %"class.std::allocator"* %43 to %"class.__gnu_cxx::new_allocator"*
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %44, i64 %45, i8* null)
  store %"class.std::__cxx11::basic_string"* %46, %"class.std::__cxx11::basic_string"** %3
  %47 = load i32, i32* @x.196
  %48 = load i32, i32* @y.197
  %49 = sub i32 %47, 1792684835
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1792684835
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1862811276, i32 188726758
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3
  ret %"class.std::__cxx11::basic_string"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator"*, %"class.std::allocator"** %65, align 8
  %68 = bitcast %"class.std::allocator"* %67 to %"class.__gnu_cxx::new_allocator"*
  %69 = load i64, i64* %66, align 8
  %70 = call %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %68, i64 %69, i8* null)
  store i32 -1327962421, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 839494647, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %85
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 839494647, label %17
    i32 -202578380, label %22
    i32 -1142961585, label %23
    i32 -1371453168, label %50
    i32 211782196, label %70
    i32 -571340259, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %85

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -202578380, i32 -1142961585
  store i32 %21, i32* %13
  br label %85

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.198
  %25 = load i32, i32* @y.199
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -1371453168, i32 -571340259
  store i32 %49, i32* %13
  br label %85

; <label>:50:                                     ; preds = %14
  %51 = load i64, i64* %8, align 8
  %52 = mul i64 %51, 32
  %53 = call i8* @_Znwm(i64 %52)
  %54 = bitcast i8* %53 to %"class.std::__cxx11::basic_string"*
  store %"class.std::__cxx11::basic_string"* %54, %"class.std::__cxx11::basic_string"** %4
  %55 = load i32, i32* @x.198
  %56 = load i32, i32* @y.199
  %57 = sub i32 %55, 783991146
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 783991146
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 211782196, i32 -571340259
  store i32 %69, i32* %13
  br label %85

; <label>:70:                                     ; preds = %14
  %71 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  ret %"class.std::__cxx11::basic_string"* %71

; <label>:72:                                     ; preds = %14
  %73 = load i64, i64* %8, align 8
  %74 = shl i64 %73, 32
  %75 = shl i64 %73, 32
  %76 = sub i64 %73, -7049063838193110460
  %77 = sub i64 %76, 32
  %78 = add i64 %77, -7049063838193110460
  %79 = sub i64 %73, 32
  %80 = mul i64 %78, 32
  %81 = shl i64 %73, 32
  %82 = mul i64 %73, 32
  %83 = call i8* @_Znwm(i64 %82)
  %84 = bitcast i8* %83 to %"class.std::__cxx11::basic_string"*
  store i32 -1371453168, i32* %13
  br label %85

; <label>:85:                                     ; preds = %72, %50, %23, %17, %16
  br label %14
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #9

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %12, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %20, align 8
  %22 = call %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"* %19, %"class.std::__cxx11::basic_string"* %21, %"class.std::__cxx11::basic_string"* %17)
  ret %"class.std::__cxx11::basic_string"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  call void @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_(%"class.std::move_iterator"* %2, %"class.std::__cxx11::basic_string"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  ret %"class.std::__cxx11::basic_string"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat {
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.204
  %8 = load i32, i32* @y.205
  %9 = sub i32 %7, 86484858
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 86484858
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -755799076, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -755799076, label %21
    i32 240387225, label %41
    i32 1012070388, label %75
    i32 -1304647424, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 240387225, i32 -1304647424
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator", align 8
  %43 = alloca %"class.std::move_iterator", align 8
  %44 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.std::move_iterator", align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %43, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %49, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.std::move_iterator"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %46, i32 0, i32 0
  %56 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %58 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %57, align 8
  %59 = call %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"* %56, %"class.std::__cxx11::basic_string"* %58, %"class.std::__cxx11::basic_string"* %54)
  store %"class.std::__cxx11::basic_string"* %59, %"class.std::__cxx11::basic_string"** %4
  %60 = load i32, i32* @x.204
  %61 = load i32, i32* @y.205
  %62 = add i32 %60, -528358091
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -528358091
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 1012070388, i32 -1304647424
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  ret %"class.std::__cxx11::basic_string"* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.std::move_iterator", align 8
  %79 = alloca %"class.std::move_iterator", align 8
  %80 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %81 = alloca i8, align 1
  %82 = alloca %"class.std::move_iterator", align 8
  %83 = alloca %"class.std::move_iterator", align 8
  %84 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %78, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %84, align 8
  %85 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %79, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %85, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %80, align 8
  store i8 1, i8* %81, align 1
  %86 = bitcast %"class.std::move_iterator"* %82 to i8*
  %87 = bitcast %"class.std::move_iterator"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.std::move_iterator"* %83 to i8*
  %89 = bitcast %"class.std::move_iterator"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %80, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %82, i32 0, i32 0
  %92 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %91, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  %94 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %93, align 8
  %95 = call %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"* %92, %"class.std::__cxx11::basic_string"* %94, %"class.std::__cxx11::basic_string"* %90)
  store i32 240387225, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %11, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  %12 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %12, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %24, %3
  %14 = invoke zeroext i1 @_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %27

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %90

; <label>:16:                                     ; preds = %15
  %17 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %18 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %17) #3
  %19 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.std::move_iterator"* %4)
          to label %20 unwind label %27

; <label>:20:                                     ; preds = %16
  invoke void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_(%"class.std::__cxx11::basic_string"* %18, %"class.std::__cxx11::basic_string"* dereferenceable(32) %19)
          to label %21 unwind label %27

; <label>:21:                                     ; preds = %20
  br label %22

; <label>:22:                                     ; preds = %21
  %23 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.std::move_iterator"* %4)
          to label %24 unwind label %27

; <label>:24:                                     ; preds = %22
  %25 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %25, i32 1
  store %"class.std::__cxx11::basic_string"* %26, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %13

; <label>:27:                                     ; preds = %22, %20, %16, %13
  %28 = load i32, i32* @x.206
  %29 = load i32, i32* @y.207
  %30 = sub i32 %28, 1543020258
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 1543020258
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %107

; <label>:54:                                     ; preds = %27, %107
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %8, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %9, align 4
  %58 = load i32, i32* @x.206
  %59 = load i32, i32* @y.207
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 true, true
  %70 = and i1 %67, true
  %71 = and i1 %65, %69
  %72 = and i1 %68, true
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 true, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  br i1 %81, label %83, label %107

; <label>:83:                                     ; preds = %54
  br label %84

; <label>:84:                                     ; preds = %83
  %85 = load i8*, i8** %8, align 8
  %86 = call i8* @__cxa_begin_catch(i8* %85) #3
  %87 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %88 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %87, %"class.std::__cxx11::basic_string"* %88)
          to label %89 unwind label %92

; <label>:89:                                     ; preds = %84
  invoke void @__cxa_rethrow() #12
          to label %106 unwind label %92

; <label>:90:                                     ; preds = %15
  %91 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  ret %"class.std::__cxx11::basic_string"* %91

; <label>:92:                                     ; preds = %89, %84
  %93 = landingpad { i8*, i32 }
          cleanup
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %8, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %96 unwind label %103

; <label>:96:                                     ; preds = %92
  br label %98
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:98:                                     ; preds = %96
  %99 = load i8*, i8** %8, align 8
  %100 = load i32, i32* %9, align 4
  %101 = insertvalue { i8*, i32 } undef, i8* %99, 0
  %102 = insertvalue { i8*, i32 } %101, i32 %100, 1
  resume { i8*, i32 } %102

; <label>:103:                                    ; preds = %92
  %104 = landingpad { i8*, i32 }
          catch i8* null
  %105 = extractvalue { i8*, i32 } %104, 0
  call void @__clang_call_terminate(i8* %105) #8
  unreachable

; <label>:106:                                    ; preds = %89
  unreachable

; <label>:107:                                    ; preds = %54, %27
  %108 = landingpad { i8*, i32 }
          catch i8* null
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %8, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %9, align 4
  br label %54
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.210
  %6 = load i32, i32* @y.211
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1495091755, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1495091755, label %18
    i32 1276595316, label %26
    i32 -1877266025, label %61
    i32 -523907417, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1276595316, i32 -523907417
  store i32 %25, i32* %14
  br label %70

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %28 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %27, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %28, align 8
  %29 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %27, align 8
  %30 = bitcast %"class.std::__cxx11::basic_string"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::__cxx11::basic_string"*
  %32 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %28, align 8
  %33 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %32) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %31, %"class.std::__cxx11::basic_string"* dereferenceable(32) %33) #3
  %34 = load i32, i32* @x.210
  %35 = load i32, i32* @y.211
  %36 = sub i32 %34, -2042500728
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -2042500728
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1877266025, i32 -523907417
  store i32 %60, i32* %14
  br label %70

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %64 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %63, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %64, align 8
  %65 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %63, align 8
  %66 = bitcast %"class.std::__cxx11::basic_string"* %65 to i8*
  %67 = bitcast i8* %66 to %"class.std::__cxx11::basic_string"*
  %68 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %64, align 8
  %69 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %68) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %67, %"class.std::__cxx11::basic_string"* dereferenceable(32) %69) #3
  store i32 1276595316, i32* %14
  br label %70

; <label>:70:                                     ; preds = %62, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  ret %"class.std::__cxx11::basic_string"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.214
  %6 = load i32, i32* @y.215
  %7 = sub i32 %5, -1295176930
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1295176930
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -657570553, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -657570553, label %19
    i32 -1667225398, label %39
    i32 -125563412, label %61
    i32 -968749055, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1667225398, i32 -968749055
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %40, align 8
  %41 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %40, align 8
  store %"class.std::move_iterator"* %41, %"class.std::move_iterator"** %2
  %42 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  %44 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %44, i32 1
  store %"class.std::__cxx11::basic_string"* %45, %"class.std::__cxx11::basic_string"** %43, align 8
  %46 = load i32, i32* @x.214
  %47 = load i32, i32* @y.215
  %48 = add i32 %46, 193884182
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 193884182
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -125563412, i32 -968749055
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  ret %"class.std::move_iterator"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %64, align 8
  %65 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %64, align 8
  %66 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %65, i32 0, i32 0
  %67 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %67, i32 1
  store %"class.std::__cxx11::basic_string"* %68, %"class.std::__cxx11::basic_string"** %66, align 8
  store i32 -1667225398, i32* %15
  br label %69

; <label>:69:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"class.std::__cxx11::basic_string"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  ret %"class.std::__cxx11::basic_string"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  ret %"class.std::__cxx11::basic_string"* %3
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_(%"class.std::move_iterator"*, %"class.std::__cxx11::basic_string"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %7, %"class.std::__cxx11::basic_string"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.5"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.232
  %7 = load i32, i32* @y.233
  %8 = sub i32 %6, -2139308417
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -2139308417
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -117966586, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %80
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -117966586, label %20
    i32 934373286, label %40
    i32 -1447028555, label %73
    i32 1217679615, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %80

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 934373286, i32 1217679615
  store i32 %39, i32* %16
  br label %80

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.8"*, align 8
  %42 = alloca %"class.std::vector.8"*, align 8
  %43 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %41, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %42, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %43, align 8
  %44 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %42, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.8"* %44, %"class.std::vector.8"* %45)
  %46 = load i32, i32* @x.232
  %47 = load i32, i32* @y.233
  %48 = add i32 %46, 1818211109
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1818211109
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1447028555, i32 1217679615
  store i32 %72, i32* %16
  br label %80

; <label>:73:                                     ; preds = %17
  ret void

; <label>:74:                                     ; preds = %17
  %75 = alloca %"class.std::vector.8"*, align 8
  %76 = alloca %"class.std::vector.8"*, align 8
  %77 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %75, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %76, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %77, align 8
  %78 = load %"class.std::vector.8"*, %"class.std::vector.8"** %75, align 8
  %79 = load %"class.std::vector.8"*, %"class.std::vector.8"** %76, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.8"* %78, %"class.std::vector.8"* %79)
  store i32 934373286, i32* %16
  br label %80

; <label>:80:                                     ; preds = %74, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %5 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %13, align 8
  %15 = ptrtoint %"class.std::vector.8"* %11 to i64
  %16 = ptrtoint %"class.std::vector.8"* %14 to i64
  %17 = add i64 %15, 6841333407766111132
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 6841333407766111132
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.4"* %5, %"class.std::vector.8"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.236
  %26 = load i32, i32* @y.237
  %27 = add i32 %25, -665188392
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, -665188392
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %85

; <label>:51:                                     ; preds = %24, %85
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %3, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %4, align 4
  %55 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %55) #3
  %56 = load i32, i32* @x.236
  %57 = load i32, i32* @y.237
  %58 = add i32 %56, 1264836291
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1264836291
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %85

; <label>:82:                                     ; preds = %51
  br label %83

; <label>:83:                                     ; preds = %82
  %84 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %84) #8
  unreachable

; <label>:85:                                     ; preds = %51, %24
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %3, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %4, align 4
  %89 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %89) #3
  br label %51
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.8"* %5, %"class.std::vector.8"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"**
  %4 = alloca %"class.std::vector.8"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.240
  %8 = load i32, i32* @y.241
  %9 = add i32 %7, 1840214836
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1840214836
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -349249276, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %118
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -349249276, label %21
    i32 -2086106139, label %29
    i32 -748286873, label %61
    i32 319919872, label %62
    i32 620596844, label %69
    i32 2106103310, label %73
    i32 1826371280, label %88
    i32 940246847, label %108
    i32 1533308726, label %109
    i32 1616786903, label %110
    i32 1602311246, label %113
  ]

; <label>:20:                                     ; preds = %18
  br label %118

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -2086106139, i32 1616786903
  store i32 %28, i32* %17
  br label %118

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"** %30, %"class.std::vector.8"*** %4
  %31 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"** %31, %"class.std::vector.8"*** %3
  %32 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %32, align 8
  %33 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %3
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %33, align 8
  %34 = load i32, i32* @x.240
  %35 = load i32, i32* @y.241
  %36 = sub i32 %34, 27931621
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 27931621
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -748286873, i32 1616786903
  store i32 %60, i32* %17
  br label %118

; <label>:61:                                     ; preds = %18
  store i32 319919872, i32* %17
  br label %118

; <label>:62:                                     ; preds = %18
  %63 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  %64 = load %"class.std::vector.8"*, %"class.std::vector.8"** %63, align 8
  %65 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %3
  %66 = load %"class.std::vector.8"*, %"class.std::vector.8"** %65, align 8
  %67 = icmp ne %"class.std::vector.8"* %64, %66
  %68 = select i1 %67, i32 620596844, i32 1533308726
  store i32 %68, i32* %17
  br label %118

; <label>:69:                                     ; preds = %18
  %70 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  %71 = load %"class.std::vector.8"*, %"class.std::vector.8"** %70, align 8
  %72 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.8"* dereferenceable(24) %71) #3
  call void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.8"* %72)
  store i32 2106103310, i32* %17
  br label %118

; <label>:73:                                     ; preds = %18
  %74 = load i32, i32* @x.240
  %75 = load i32, i32* @y.241
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 1826371280, i32 1602311246
  store i32 %87, i32* %17
  br label %118

; <label>:88:                                     ; preds = %18
  %89 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  %90 = load %"class.std::vector.8"*, %"class.std::vector.8"** %89, align 8
  %91 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %90, i32 1
  %92 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  store %"class.std::vector.8"* %91, %"class.std::vector.8"** %92, align 8
  %93 = load i32, i32* @x.240
  %94 = load i32, i32* @y.241
  %95 = add i32 %93, -1391376919
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, -1391376919
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  %107 = select i1 %105, i32 940246847, i32 1602311246
  store i32 %107, i32* %17
  br label %118

; <label>:108:                                    ; preds = %18
  store i32 319919872, i32* %17
  br label %118

; <label>:109:                                    ; preds = %18
  ret void

; <label>:110:                                    ; preds = %18
  %111 = alloca %"class.std::vector.8"*, align 8
  %112 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %111, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %112, align 8
  store i32 -2086106139, i32* %17
  br label %118

; <label>:113:                                    ; preds = %18
  %114 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  %115 = load %"class.std::vector.8"*, %"class.std::vector.8"** %114, align 8
  %116 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %115, i32 1
  %117 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  store %"class.std::vector.8"* %116, %"class.std::vector.8"** %117, align 8
  store i32 1826371280, i32* %17
  br label %118

; <label>:118:                                    ; preds = %113, %110, %108, %88, %73, %69, %62, %61, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.8"*) #5 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.242
  %5 = load i32, i32* @y.243
  %6 = sub i32 %4, 1240704520
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1240704520
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -884938301, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -884938301, label %18
    i32 -562999520, label %26
    i32 -409313814, label %56
    i32 1598676917, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -562999520, i32 1598676917
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %27, align 8
  %28 = load %"class.std::vector.8"*, %"class.std::vector.8"** %27, align 8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %28) #3
  %29 = load i32, i32* @x.242
  %30 = load i32, i32* @y.243
  %31 = add i32 %29, 687053636
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 687053636
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -409313814, i32 1598676917
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %58, align 8
  %59 = load %"class.std::vector.8"*, %"class.std::vector.8"** %58, align 8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %59) #3
  store i32 -562999520, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.8"*
  ret %"class.std::vector.8"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.4"*, %"class.std::vector.8"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca i64*
  %7 = alloca %"class.std::vector.8"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.246
  %11 = load i32, i32* @y.247
  %12 = add i32 %10, -1259215251
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -1259215251
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 299808971, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %76
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 299808971, label %24
    i32 -1299661573, label %32
    i32 1612095028, label %57
    i32 2035131630, label %60
    i32 429888729, label %68
    i32 1310506181, label %69
  ]

; <label>:23:                                     ; preds = %21
  br label %76

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -1299661573, i32 1310506181
  store i32 %31, i32* %20
  br label %76

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.4"*, align 8
  %34 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"** %34, %"class.std::vector.8"*** %7
  %35 = alloca i64, align 8
  store i64* %35, i64** %6
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %33, align 8
  %36 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %7
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %36, align 8
  %37 = load volatile i64*, i64** %6
  store i64 %2, i64* %37, align 8
  %38 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %33, align 8
  store %"struct.std::_Vector_base.4"* %38, %"struct.std::_Vector_base.4"** %5
  %39 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %7
  %40 = load %"class.std::vector.8"*, %"class.std::vector.8"** %39, align 8
  %41 = icmp ne %"class.std::vector.8"* %40, null
  store i1 %41, i1* %4
  %42 = load i32, i32* @x.246
  %43 = load i32, i32* @y.247
  %44 = add i32 %42, 1286665479
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1286665479
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1612095028, i32 1310506181
  store i32 %56, i32* %20
  br label %76

; <label>:57:                                     ; preds = %21
  %58 = load volatile i1, i1* %4
  %59 = select i1 %58, i32 2035131630, i32 429888729
  store i32 %59, i32* %20
  br label %76

; <label>:60:                                     ; preds = %21
  %61 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %62 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %62 to %"class.std::allocator.5"*
  %64 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %7
  %65 = load %"class.std::vector.8"*, %"class.std::vector.8"** %64, align 8
  %66 = load volatile i64*, i64** %6
  %67 = load i64, i64* %66, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.5"* dereferenceable(1) %63, %"class.std::vector.8"* %65, i64 %67)
  store i32 429888729, i32* %20
  br label %76

; <label>:68:                                     ; preds = %21
  ret void

; <label>:69:                                     ; preds = %21
  %70 = alloca %"struct.std::_Vector_base.4"*, align 8
  %71 = alloca %"class.std::vector.8"*, align 8
  %72 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %70, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %71, align 8
  store i64 %2, i64* %72, align 8
  %73 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %70, align 8
  %74 = load %"class.std::vector.8"*, %"class.std::vector.8"** %71, align 8
  %75 = icmp ne %"class.std::vector.8"* %74, null
  store i32 -1299661573, i32* %20
  br label %76

; <label>:76:                                     ; preds = %69, %60, %57, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.248
  %5 = load i32, i32* @y.249
  %6 = sub i32 %4, -1210288955
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1210288955
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -400463107, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -400463107, label %18
    i32 -1566889471, label %38
    i32 1853828918, label %68
    i32 -575298336, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1566889471, i32 -575298336
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %40 to %"class.std::allocator.5"*
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.5"* %41) #3
  %42 = load i32, i32* @x.248
  %43 = load i32, i32* @y.249
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1853828918, i32 -575298336
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %70, align 8
  %71 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %70, align 8
  %72 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %71 to %"class.std::allocator.5"*
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.5"* %72) #3
  store i32 -1566889471, i32* %14
  br label %73

; <label>:73:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.5"* dereferenceable(1), %"class.std::vector.8"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.6"* %8, %"class.std::vector.8"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.6"*, %"class.std::vector.8"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %9 = bitcast %"class.std::vector.8"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.254
  %5 = load i32, i32* @y.255
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 787125961, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 787125961, label %17
    i32 1226155254, label %25
    i32 -578643371, label %55
    i32 1031232888, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1226155254, i32 1031232888
  store i32 %24, i32* %13
  br label %60

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %26, align 8
  %27 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %26, align 8
  %28 = bitcast %"class.std::allocator.5"* %27 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.6"* %28) #3
  %29 = load i32, i32* @x.254
  %30 = load i32, i32* @y.255
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -578643371, i32 1031232888
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %57, align 8
  %58 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %57, align 8
  %59 = bitcast %"class.std::allocator.5"* %58 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.6"* %59) #3
  store i32 1226155254, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %8 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %10, align 8
  %12 = ptrtoint %"class.std::vector.8"* %7 to i64
  %13 = ptrtoint %"class.std::vector.8"* %11 to i64
  %14 = add i64 %12, 2283189487555621162
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 2283189487555621162
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm(%"class.std::vector.3"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.260
  %4 = load i32, i32* @y.261
  %5 = sub i32 %3, -462524147
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -462524147
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %568

; <label>:17:                                     ; preds = %2, %568
  %18 = alloca %"class.std::vector.3"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca %"class.std::vector.8"*, align 8
  %23 = alloca %"class.std::vector.8"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %18, align 8
  store i64 %1, i64* %19, align 8
  %26 = load %"class.std::vector.3"*, %"class.std::vector.3"** %18, align 8
  %27 = load i64, i64* %19, align 8
  %28 = icmp ne i64 %27, 0
  %29 = load i32, i32* @x.260
  %30 = load i32, i32* @y.261
  %31 = add i32 %29, -1734441326
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1734441326
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  br i1 %53, label %55, label %568

; <label>:55:                                     ; preds = %17
  br i1 %28, label %56, label %451

; <label>:56:                                     ; preds = %55
  %57 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %58, i32 0, i32 2
  %60 = load %"class.std::vector.8"*, %"class.std::vector.8"** %59, align 8
  %61 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %61, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %62, i32 0, i32 1
  %64 = load %"class.std::vector.8"*, %"class.std::vector.8"** %63, align 8
  %65 = ptrtoint %"class.std::vector.8"* %60 to i64
  %66 = ptrtoint %"class.std::vector.8"* %64 to i64
  %67 = sub i64 0, %66
  %68 = add i64 %65, %67
  %69 = sub i64 %65, %66
  %70 = sdiv exact i64 %68, 24
  %71 = load i64, i64* %19, align 8
  %72 = icmp uge i64 %70, %71
  br i1 %72, label %73, label %138

; <label>:73:                                     ; preds = %56
  %74 = load i32, i32* @x.260
  %75 = load i32, i32* @y.261
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  br i1 %97, label %99, label %580

; <label>:99:                                     ; preds = %73, %580
  %100 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %101 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %101, i32 0, i32 1
  %103 = load %"class.std::vector.8"*, %"class.std::vector.8"** %102, align 8
  %104 = load i64, i64* %19, align 8
  %105 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %106 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %105) #3
  %107 = call %"class.std::vector.8"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.8"* %103, i64 %104, %"class.std::allocator.5"* dereferenceable(1) %106)
  %108 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %109, i32 0, i32 1
  store %"class.std::vector.8"* %107, %"class.std::vector.8"** %110, align 8
  %111 = load i32, i32* @x.260
  %112 = load i32, i32* @y.261
  %113 = sub i32 %111, 510787446
  %114 = sub i32 %113, 1
  %115 = add i32 %114, 510787446
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 true, true
  %124 = and i1 %121, true
  %125 = and i1 %119, %123
  %126 = and i1 %122, true
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 true, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  br i1 %135, label %137, label %580

; <label>:137:                                    ; preds = %99
  br label %450

; <label>:138:                                    ; preds = %56
  %139 = load i32, i32* @x.260
  %140 = load i32, i32* @y.261
  %141 = sub i32 0, 1
  %142 = add i32 %139, %141
  %143 = sub i32 %139, 1
  %144 = mul i32 %139, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %140, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 true, true
  %151 = and i1 %148, true
  %152 = and i1 %146, %150
  %153 = and i1 %149, true
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 true, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  br i1 %162, label %164, label %592

; <label>:164:                                    ; preds = %138, %592
  %165 = load i64, i64* %19, align 8
  %166 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.3"* %26, i64 %165, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0))
  store i64 %166, i64* %20, align 8
  %167 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %26) #3
  store i64 %167, i64* %21, align 8
  %168 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %169 = load i64, i64* %20, align 8
  %170 = call %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %168, i64 %169)
  store %"class.std::vector.8"* %170, %"class.std::vector.8"** %22, align 8
  %171 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  store %"class.std::vector.8"* %171, %"class.std::vector.8"** %23, align 8
  %172 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %172, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %173, i32 0, i32 0
  %175 = load %"class.std::vector.8"*, %"class.std::vector.8"** %174, align 8
  %176 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %177, i32 0, i32 1
  %179 = load %"class.std::vector.8"*, %"class.std::vector.8"** %178, align 8
  %180 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  %181 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %182 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %181) #3
  %183 = load i32, i32* @x.260
  %184 = load i32, i32* @y.261
  %185 = sub i32 %183, 784557995
  %186 = sub i32 %185, 1
  %187 = add i32 %186, 784557995
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = xor i1 %191, true
  %194 = xor i1 %192, true
  %195 = xor i1 true, true
  %196 = and i1 %193, true
  %197 = and i1 %191, %195
  %198 = and i1 %194, true
  %199 = and i1 %192, %195
  %200 = or i1 %196, %197
  %201 = or i1 %198, %199
  %202 = xor i1 %200, %201
  %203 = or i1 %193, %194
  %204 = xor i1 %203, true
  %205 = or i1 true, %195
  %206 = and i1 %204, %205
  %207 = or i1 %202, %206
  %208 = or i1 %191, %192
  br i1 %207, label %209, label %592

; <label>:209:                                    ; preds = %164
  %210 = invoke %"class.std::vector.8"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.8"* %175, %"class.std::vector.8"* %179, %"class.std::vector.8"* %180, %"class.std::allocator.5"* dereferenceable(1) %182)
          to label %211 unwind label %259

; <label>:211:                                    ; preds = %209
  store %"class.std::vector.8"* %210, %"class.std::vector.8"** %23, align 8
  %212 = load %"class.std::vector.8"*, %"class.std::vector.8"** %23, align 8
  %213 = load i64, i64* %19, align 8
  %214 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %215 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %214) #3
  %216 = invoke %"class.std::vector.8"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.8"* %212, i64 %213, %"class.std::allocator.5"* dereferenceable(1) %215)
          to label %217 unwind label %259

; <label>:217:                                    ; preds = %211
  %218 = load i32, i32* @x.260
  %219 = load i32, i32* @y.261
  %220 = sub i32 %218, -869709186
  %221 = sub i32 %220, 1
  %222 = add i32 %221, -869709186
  %223 = sub i32 %218, 1
  %224 = mul i32 %218, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %219, 10
  %228 = xor i1 %226, true
  %229 = xor i1 %227, true
  %230 = xor i1 false, true
  %231 = and i1 %228, false
  %232 = and i1 %226, %230
  %233 = and i1 %229, false
  %234 = and i1 %227, %230
  %235 = or i1 %231, %232
  %236 = or i1 %233, %234
  %237 = xor i1 %235, %236
  %238 = or i1 %228, %229
  %239 = xor i1 %238, true
  %240 = or i1 false, %230
  %241 = and i1 %239, %240
  %242 = or i1 %237, %241
  %243 = or i1 %226, %227
  br i1 %242, label %244, label %611

; <label>:244:                                    ; preds = %217, %611
  store %"class.std::vector.8"* %216, %"class.std::vector.8"** %23, align 8
  %245 = load i32, i32* @x.260
  %246 = load i32, i32* @y.261
  %247 = sub i32 0, 1
  %248 = add i32 %245, %247
  %249 = sub i32 %245, 1
  %250 = mul i32 %245, %248
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %246, 10
  %254 = and i1 %252, %253
  %255 = xor i1 %252, %253
  %256 = or i1 %254, %255
  %257 = or i1 %252, %253
  br i1 %256, label %258, label %611

; <label>:258:                                    ; preds = %244
  br label %405

; <label>:259:                                    ; preds = %211, %209
  %260 = landingpad { i8*, i32 }
          catch i8* null
  %261 = extractvalue { i8*, i32 } %260, 0
  store i8* %261, i8** %24, align 8
  %262 = extractvalue { i8*, i32 } %260, 1
  store i32 %262, i32* %25, align 4
  br label %263

; <label>:263:                                    ; preds = %259
  %264 = load i8*, i8** %24, align 8
  %265 = call i8* @__cxa_begin_catch(i8* %264) #3
  %266 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  %267 = load %"class.std::vector.8"*, %"class.std::vector.8"** %23, align 8
  %268 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %269 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %268) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.8"* %266, %"class.std::vector.8"* %267, %"class.std::allocator.5"* dereferenceable(1) %269)
          to label %270 unwind label %358

; <label>:270:                                    ; preds = %263
  %271 = load i32, i32* @x.260
  %272 = load i32, i32* @y.261
  %273 = add i32 %271, 404889957
  %274 = sub i32 %273, 1
  %275 = sub i32 %274, 404889957
  %276 = sub i32 %271, 1
  %277 = mul i32 %271, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %272, 10
  %281 = xor i1 %279, true
  %282 = xor i1 %280, true
  %283 = xor i1 true, true
  %284 = and i1 %281, true
  %285 = and i1 %279, %283
  %286 = and i1 %282, true
  %287 = and i1 %280, %283
  %288 = or i1 %284, %285
  %289 = or i1 %286, %287
  %290 = xor i1 %288, %289
  %291 = or i1 %281, %282
  %292 = xor i1 %291, true
  %293 = or i1 true, %283
  %294 = and i1 %292, %293
  %295 = or i1 %290, %294
  %296 = or i1 %279, %280
  br i1 %295, label %297, label %612

; <label>:297:                                    ; preds = %270, %612
  %298 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %299 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  %300 = load i64, i64* %20, align 8
  %301 = load i32, i32* @x.260
  %302 = load i32, i32* @y.261
  %303 = add i32 %301, -1608039774
  %304 = sub i32 %303, 1
  %305 = sub i32 %304, -1608039774
  %306 = sub i32 %301, 1
  %307 = mul i32 %301, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %302, 10
  %311 = xor i1 %309, true
  %312 = xor i1 %310, true
  %313 = xor i1 false, true
  %314 = and i1 %311, false
  %315 = and i1 %309, %313
  %316 = and i1 %312, false
  %317 = and i1 %310, %313
  %318 = or i1 %314, %315
  %319 = or i1 %316, %317
  %320 = xor i1 %318, %319
  %321 = or i1 %311, %312
  %322 = xor i1 %321, true
  %323 = or i1 false, %313
  %324 = and i1 %322, %323
  %325 = or i1 %320, %324
  %326 = or i1 %309, %310
  br i1 %325, label %327, label %612

; <label>:327:                                    ; preds = %297
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.4"* %298, %"class.std::vector.8"* %299, i64 %300)
          to label %328 unwind label %358

; <label>:328:                                    ; preds = %327
  %329 = load i32, i32* @x.260
  %330 = load i32, i32* @y.261
  %331 = sub i32 0, 1
  %332 = add i32 %329, %331
  %333 = sub i32 %329, 1
  %334 = mul i32 %329, %332
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %330, 10
  %338 = and i1 %336, %337
  %339 = xor i1 %336, %337
  %340 = or i1 %338, %339
  %341 = or i1 %336, %337
  br i1 %340, label %342, label %616

; <label>:342:                                    ; preds = %328, %616
  %343 = load i32, i32* @x.260
  %344 = load i32, i32* @y.261
  %345 = sub i32 %343, 662574679
  %346 = sub i32 %345, 1
  %347 = add i32 %346, 662574679
  %348 = sub i32 %343, 1
  %349 = mul i32 %343, %347
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %344, 10
  %353 = and i1 %351, %352
  %354 = xor i1 %351, %352
  %355 = or i1 %353, %354
  %356 = or i1 %351, %352
  br i1 %355, label %357, label %616

; <label>:357:                                    ; preds = %342
  invoke void @__cxa_rethrow() #12
          to label %514 unwind label %358

; <label>:358:                                    ; preds = %357, %327, %263
  %359 = load i32, i32* @x.260
  %360 = load i32, i32* @y.261
  %361 = sub i32 %359, 115099109
  %362 = sub i32 %361, 1
  %363 = add i32 %362, 115099109
  %364 = sub i32 %359, 1
  %365 = mul i32 %359, %363
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %360, 10
  %369 = and i1 %367, %368
  %370 = xor i1 %367, %368
  %371 = or i1 %369, %370
  %372 = or i1 %367, %368
  br i1 %371, label %373, label %617

; <label>:373:                                    ; preds = %358, %617
  %374 = landingpad { i8*, i32 }
          cleanup
  %375 = extractvalue { i8*, i32 } %374, 0
  store i8* %375, i8** %24, align 8
  %376 = extractvalue { i8*, i32 } %374, 1
  store i32 %376, i32* %25, align 4
  %377 = load i32, i32* @x.260
  %378 = load i32, i32* @y.261
  %379 = sub i32 %377, 906517935
  %380 = sub i32 %379, 1
  %381 = add i32 %380, 906517935
  %382 = sub i32 %377, 1
  %383 = mul i32 %377, %381
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %378, 10
  %387 = xor i1 %385, true
  %388 = xor i1 %386, true
  %389 = xor i1 true, true
  %390 = and i1 %387, true
  %391 = and i1 %385, %389
  %392 = and i1 %388, true
  %393 = and i1 %386, %389
  %394 = or i1 %390, %391
  %395 = or i1 %392, %393
  %396 = xor i1 %394, %395
  %397 = or i1 %387, %388
  %398 = xor i1 %397, true
  %399 = or i1 true, %389
  %400 = and i1 %398, %399
  %401 = or i1 %396, %400
  %402 = or i1 %385, %386
  br i1 %401, label %403, label %617

; <label>:403:                                    ; preds = %373
  invoke void @__cxa_end_catch()
          to label %404 unwind label %511

; <label>:404:                                    ; preds = %403
  br label %506

; <label>:405:                                    ; preds = %258
  %406 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %407 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %406, i32 0, i32 0
  %408 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %407, i32 0, i32 0
  %409 = load %"class.std::vector.8"*, %"class.std::vector.8"** %408, align 8
  %410 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %411 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %410, i32 0, i32 0
  %412 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %411, i32 0, i32 1
  %413 = load %"class.std::vector.8"*, %"class.std::vector.8"** %412, align 8
  %414 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %415 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %414) #3
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.8"* %409, %"class.std::vector.8"* %413, %"class.std::allocator.5"* dereferenceable(1) %415)
  %416 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %417 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %418 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %417, i32 0, i32 0
  %419 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %418, i32 0, i32 0
  %420 = load %"class.std::vector.8"*, %"class.std::vector.8"** %419, align 8
  %421 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %422 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %421, i32 0, i32 0
  %423 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %422, i32 0, i32 2
  %424 = load %"class.std::vector.8"*, %"class.std::vector.8"** %423, align 8
  %425 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %426 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %425, i32 0, i32 0
  %427 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %426, i32 0, i32 0
  %428 = load %"class.std::vector.8"*, %"class.std::vector.8"** %427, align 8
  %429 = ptrtoint %"class.std::vector.8"* %424 to i64
  %430 = ptrtoint %"class.std::vector.8"* %428 to i64
  %431 = sub i64 %429, -3655360144509099203
  %432 = sub i64 %431, %430
  %433 = add i64 %432, -3655360144509099203
  %434 = sub i64 %429, %430
  %435 = sdiv exact i64 %433, 24
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.4"* %416, %"class.std::vector.8"* %420, i64 %435)
  %436 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  %437 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %438 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %437, i32 0, i32 0
  %439 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %438, i32 0, i32 0
  store %"class.std::vector.8"* %436, %"class.std::vector.8"** %439, align 8
  %440 = load %"class.std::vector.8"*, %"class.std::vector.8"** %23, align 8
  %441 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %442 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %441, i32 0, i32 0
  %443 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %442, i32 0, i32 1
  store %"class.std::vector.8"* %440, %"class.std::vector.8"** %443, align 8
  %444 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  %445 = load i64, i64* %20, align 8
  %446 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %444, i64 %445
  %447 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %448 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %447, i32 0, i32 0
  %449 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %448, i32 0, i32 2
  store %"class.std::vector.8"* %446, %"class.std::vector.8"** %449, align 8
  br label %450

; <label>:450:                                    ; preds = %405, %137
  br label %451

; <label>:451:                                    ; preds = %450, %55
  %452 = load i32, i32* @x.260
  %453 = load i32, i32* @y.261
  %454 = sub i32 %452, -1319817827
  %455 = sub i32 %454, 1
  %456 = add i32 %455, -1319817827
  %457 = sub i32 %452, 1
  %458 = mul i32 %452, %456
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %453, 10
  %462 = xor i1 %460, true
  %463 = xor i1 %461, true
  %464 = xor i1 true, true
  %465 = and i1 %462, true
  %466 = and i1 %460, %464
  %467 = and i1 %463, true
  %468 = and i1 %461, %464
  %469 = or i1 %465, %466
  %470 = or i1 %467, %468
  %471 = xor i1 %469, %470
  %472 = or i1 %462, %463
  %473 = xor i1 %472, true
  %474 = or i1 true, %464
  %475 = and i1 %473, %474
  %476 = or i1 %471, %475
  %477 = or i1 %460, %461
  br i1 %476, label %478, label %621

; <label>:478:                                    ; preds = %451, %621
  %479 = load i32, i32* @x.260
  %480 = load i32, i32* @y.261
  %481 = add i32 %479, -1894592528
  %482 = sub i32 %481, 1
  %483 = sub i32 %482, -1894592528
  %484 = sub i32 %479, 1
  %485 = mul i32 %479, %483
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %480, 10
  %489 = xor i1 %487, true
  %490 = xor i1 %488, true
  %491 = xor i1 true, true
  %492 = and i1 %489, true
  %493 = and i1 %487, %491
  %494 = and i1 %490, true
  %495 = and i1 %488, %491
  %496 = or i1 %492, %493
  %497 = or i1 %494, %495
  %498 = xor i1 %496, %497
  %499 = or i1 %489, %490
  %500 = xor i1 %499, true
  %501 = or i1 true, %491
  %502 = and i1 %500, %501
  %503 = or i1 %498, %502
  %504 = or i1 %487, %488
  br i1 %503, label %505, label %621

; <label>:505:                                    ; preds = %478
  ret void

; <label>:506:                                    ; preds = %404
  %507 = load i8*, i8** %24, align 8
  %508 = load i32, i32* %25, align 4
  %509 = insertvalue { i8*, i32 } undef, i8* %507, 0
  %510 = insertvalue { i8*, i32 } %509, i32 %508, 1
  resume { i8*, i32 } %510

; <label>:511:                                    ; preds = %403
  %512 = landingpad { i8*, i32 }
          catch i8* null
  %513 = extractvalue { i8*, i32 } %512, 0
  call void @__clang_call_terminate(i8* %513) #8
  unreachable

; <label>:514:                                    ; preds = %357
  %515 = load i32, i32* @x.260
  %516 = load i32, i32* @y.261
  %517 = sub i32 %515, -436013041
  %518 = sub i32 %517, 1
  %519 = add i32 %518, -436013041
  %520 = sub i32 %515, 1
  %521 = mul i32 %515, %519
  %522 = urem i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = icmp slt i32 %516, 10
  %525 = xor i1 %523, true
  %526 = xor i1 %524, true
  %527 = xor i1 false, true
  %528 = and i1 %525, false
  %529 = and i1 %523, %527
  %530 = and i1 %526, false
  %531 = and i1 %524, %527
  %532 = or i1 %528, %529
  %533 = or i1 %530, %531
  %534 = xor i1 %532, %533
  %535 = or i1 %525, %526
  %536 = xor i1 %535, true
  %537 = or i1 false, %527
  %538 = and i1 %536, %537
  %539 = or i1 %534, %538
  %540 = or i1 %523, %524
  br i1 %539, label %541, label %622

; <label>:541:                                    ; preds = %514, %622
  %542 = load i32, i32* @x.260
  %543 = load i32, i32* @y.261
  %544 = sub i32 0, 1
  %545 = add i32 %542, %544
  %546 = sub i32 %542, 1
  %547 = mul i32 %542, %545
  %548 = urem i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %543, 10
  %551 = xor i1 %549, true
  %552 = xor i1 %550, true
  %553 = xor i1 false, true
  %554 = and i1 %551, false
  %555 = and i1 %549, %553
  %556 = and i1 %552, false
  %557 = and i1 %550, %553
  %558 = or i1 %554, %555
  %559 = or i1 %556, %557
  %560 = xor i1 %558, %559
  %561 = or i1 %551, %552
  %562 = xor i1 %561, true
  %563 = or i1 false, %553
  %564 = and i1 %562, %563
  %565 = or i1 %560, %564
  %566 = or i1 %549, %550
  br i1 %565, label %567, label %622

; <label>:567:                                    ; preds = %541
  unreachable

; <label>:568:                                    ; preds = %17, %2
  %569 = alloca %"class.std::vector.3"*, align 8
  %570 = alloca i64, align 8
  %571 = alloca i64, align 8
  %572 = alloca i64, align 8
  %573 = alloca %"class.std::vector.8"*, align 8
  %574 = alloca %"class.std::vector.8"*, align 8
  %575 = alloca i8*
  %576 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %569, align 8
  store i64 %1, i64* %570, align 8
  %577 = load %"class.std::vector.3"*, %"class.std::vector.3"** %569, align 8
  %578 = load i64, i64* %570, align 8
  %579 = icmp ne i64 %578, 0
  br label %17

; <label>:580:                                    ; preds = %99, %73
  %581 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %582 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %581, i32 0, i32 0
  %583 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %582, i32 0, i32 1
  %584 = load %"class.std::vector.8"*, %"class.std::vector.8"** %583, align 8
  %585 = load i64, i64* %19, align 8
  %586 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %587 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %586) #3
  %588 = call %"class.std::vector.8"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.8"* %584, i64 %585, %"class.std::allocator.5"* dereferenceable(1) %587)
  %589 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %590 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %589, i32 0, i32 0
  %591 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %590, i32 0, i32 1
  store %"class.std::vector.8"* %588, %"class.std::vector.8"** %591, align 8
  br label %99

; <label>:592:                                    ; preds = %164, %138
  %593 = load i64, i64* %19, align 8
  %594 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.3"* %26, i64 %593, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0))
  store i64 %594, i64* %20, align 8
  %595 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %26) #3
  store i64 %595, i64* %21, align 8
  %596 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %597 = load i64, i64* %20, align 8
  %598 = call %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %596, i64 %597)
  store %"class.std::vector.8"* %598, %"class.std::vector.8"** %22, align 8
  %599 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  store %"class.std::vector.8"* %599, %"class.std::vector.8"** %23, align 8
  %600 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %601 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %600, i32 0, i32 0
  %602 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %601, i32 0, i32 0
  %603 = load %"class.std::vector.8"*, %"class.std::vector.8"** %602, align 8
  %604 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %605 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %604, i32 0, i32 0
  %606 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %605, i32 0, i32 1
  %607 = load %"class.std::vector.8"*, %"class.std::vector.8"** %606, align 8
  %608 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  %609 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %610 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %609) #3
  br label %164

; <label>:611:                                    ; preds = %244, %217
  store %"class.std::vector.8"* %216, %"class.std::vector.8"** %23, align 8
  br label %244

; <label>:612:                                    ; preds = %297, %270
  %613 = bitcast %"class.std::vector.3"* %26 to %"struct.std::_Vector_base.4"*
  %614 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  %615 = load i64, i64* %20, align 8
  br label %297

; <label>:616:                                    ; preds = %342, %328
  br label %342

; <label>:617:                                    ; preds = %373, %358
  %618 = landingpad { i8*, i32 }
          cleanup
  %619 = extractvalue { i8*, i32 } %618, 0
  store i8* %619, i8** %24, align 8
  %620 = extractvalue { i8*, i32 } %618, 1
  store i32 %620, i32* %25, align 4
  br label %373

; <label>:621:                                    ; preds = %478, %451
  br label %478

; <label>:622:                                    ; preds = %541, %514
  br label %541
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.3"*, %"class.std::vector.8"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %7 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %9, align 8
  %11 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %12 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %11) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.8"* %6, %"class.std::vector.8"* %10, %"class.std::allocator.5"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %15 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::vector.8"* %14, %"class.std::vector.8"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.8"*, i64, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::vector.8"* @_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_(%"class.std::vector.8"* %7, i64 %8)
  ret %"class.std::vector.8"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca %"class.std::vector.3"*
  %10 = alloca %"class.std::vector.3"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %10, align 8
  store i64 %1, i64* %11, align 8
  store i8* %2, i8** %12, align 8
  %15 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  store %"class.std::vector.3"* %15, %"class.std::vector.3"** %9
  %16 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %17 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %16) #3
  %18 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %19 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %18) #3
  %20 = add i64 %17, 9077891239601402635
  %21 = sub i64 %20, %19
  %22 = sub i64 %21, 9077891239601402635
  %23 = sub i64 %17, %19
  store i64 %22, i64* %8
  %24 = load i64, i64* %11, align 8
  store i64 %24, i64* %7
  %25 = alloca i32
  store i32 1356083545, i32* %25
  %26 = alloca i64
  br label %27

; <label>:27:                                     ; preds = %3, %192
  %28 = load i32, i32* %25
  switch i32 %28, label %29 [
    i32 1356083545, label %30
    i32 2047099160, label %35
    i32 182158612, label %37
    i32 -1142050379, label %53
    i32 1157771546, label %83
    i32 -217183678, label %86
    i32 745433976, label %92
    i32 -2125173774, label %107
    i32 1603774641, label %125
    i32 1755797656, label %127
    i32 -1206405708, label %129
    i32 -37417778, label %157
    i32 1321854570, label %172
    i32 -482649865, label %174
    i32 -321414523, label %188
    i32 -1926497121, label %191
  ]

; <label>:29:                                     ; preds = %27
  br label %192

; <label>:30:                                     ; preds = %27
  %31 = load volatile i64, i64* %8
  %32 = load volatile i64, i64* %7
  %33 = icmp ult i64 %31, %32
  %34 = select i1 %33, i32 2047099160, i32 182158612
  store i32 %34, i32* %25
  br label %192

; <label>:35:                                     ; preds = %27
  %36 = load i8*, i8** %12, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %36) #12
  unreachable

; <label>:37:                                     ; preds = %27
  %38 = load i32, i32* @x.266
  %39 = load i32, i32* @y.267
  %40 = sub i32 %38, -501329186
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -501329186
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1142050379, i32 -482649865
  store i32 %52, i32* %25
  br label %192

; <label>:53:                                     ; preds = %27
  %54 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %55 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %54) #3
  %56 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %57 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %56) #3
  store i64 %57, i64* %14, align 8
  %58 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %55, -3920757535364784480
  %61 = add i64 %60, %59
  %62 = add i64 %61, -3920757535364784480
  %63 = add i64 %55, %59
  store i64 %62, i64* %13, align 8
  %64 = load i64, i64* %13, align 8
  %65 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %66 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %65) #3
  %67 = icmp ult i64 %64, %66
  store i1 %67, i1* %6
  %68 = load i32, i32* @x.266
  %69 = load i32, i32* @y.267
  %70 = add i32 %68, -888199725
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, -888199725
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 1157771546, i32 -482649865
  store i32 %82, i32* %25
  br label %192

; <label>:83:                                     ; preds = %27
  %84 = load volatile i1, i1* %6
  %85 = select i1 %84, i32 745433976, i32 -217183678
  store i32 %85, i32* %25
  br label %192

; <label>:86:                                     ; preds = %27
  %87 = load i64, i64* %13, align 8
  %88 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %89 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %88) #3
  %90 = icmp ugt i64 %87, %89
  %91 = select i1 %90, i32 745433976, i32 1755797656
  store i32 %91, i32* %25
  br label %192

; <label>:92:                                     ; preds = %27
  %93 = load i32, i32* @x.266
  %94 = load i32, i32* @y.267
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 -2125173774, i32 -321414523
  store i32 %106, i32* %25
  br label %192

; <label>:107:                                    ; preds = %27
  %108 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %109 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %108) #3
  store i64 %109, i64* %5
  %110 = load i32, i32* @x.266
  %111 = load i32, i32* @y.267
  %112 = add i32 %110, -235807981
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, -235807981
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 1603774641, i32 -321414523
  store i32 %124, i32* %25
  br label %192

; <label>:125:                                    ; preds = %27
  store i32 -1206405708, i32* %25
  %126 = load volatile i64, i64* %5
  store i64 %126, i64* %26
  br label %192

; <label>:127:                                    ; preds = %27
  %128 = load i64, i64* %13, align 8
  store i32 -1206405708, i32* %25
  store i64 %128, i64* %26
  br label %192

; <label>:129:                                    ; preds = %27
  %130 = load i64, i64* %26
  store i64 %130, i64* %4
  %131 = load i32, i32* @x.266
  %132 = load i32, i32* @y.267
  %133 = sub i32 0, 1
  %134 = add i32 %131, %133
  %135 = sub i32 %131, 1
  %136 = mul i32 %131, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %132, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 true, true
  %143 = and i1 %140, true
  %144 = and i1 %138, %142
  %145 = and i1 %141, true
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 true, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  %156 = select i1 %154, i32 -37417778, i32 -1926497121
  store i32 %156, i32* %25
  br label %192

; <label>:157:                                    ; preds = %27
  %158 = load i32, i32* @x.266
  %159 = load i32, i32* @y.267
  %160 = sub i32 0, 1
  %161 = add i32 %158, %160
  %162 = sub i32 %158, 1
  %163 = mul i32 %158, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %159, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  %171 = select i1 %169, i32 1321854570, i32 -1926497121
  store i32 %171, i32* %25
  br label %192

; <label>:172:                                    ; preds = %27
  %173 = load volatile i64, i64* %4
  ret i64 %173

; <label>:174:                                    ; preds = %27
  %175 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %176 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %175) #3
  %177 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %178 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %177) #3
  store i64 %178, i64* %14, align 8
  %179 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 0, %180
  %182 = sub i64 %176, %181
  %183 = add i64 %176, %180
  store i64 %182, i64* %13, align 8
  %184 = load i64, i64* %13, align 8
  %185 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %186 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.3"* %185) #3
  %187 = icmp ult i64 %184, %186
  store i32 -1142050379, i32* %25
  br label %192

; <label>:188:                                    ; preds = %27
  %189 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %190 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %189) #3
  store i32 -2125173774, i32* %25
  br label %192

; <label>:191:                                    ; preds = %27
  store i32 -37417778, i32* %25
  br label %192

; <label>:192:                                    ; preds = %191, %188, %174, %157, %129, %127, %125, %107, %92, %86, %83, %53, %37, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca %"struct.std::_Vector_base.4"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.std::_Vector_base.4"* %8, %"struct.std::_Vector_base.4"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -610233088, i32* %10
  %11 = alloca %"class.std::vector.8"*
  br label %12

; <label>:12:                                     ; preds = %2, %78
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -610233088, label %15
    i32 359639767, label %19
    i32 173811235, label %34
    i32 467619029, label %67
    i32 1917778891, label %69
    i32 -1898631909, label %70
    i32 -2119113395, label %72
  ]

; <label>:14:                                     ; preds = %12
  br label %78

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 359639767, i32 1917778891
  store i32 %18, i32* %10
  br label %78

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.268
  %21 = load i32, i32* @y.269
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 173811235, i32 -2119113395
  store i32 %33, i32* %10
  br label %78

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %36 to %"class.std::allocator.5"*
  %38 = load i64, i64* %7, align 8
  %39 = call %"class.std::vector.8"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.5"* dereferenceable(1) %37, i64 %38)
  store %"class.std::vector.8"* %39, %"class.std::vector.8"** %3
  %40 = load i32, i32* @x.268
  %41 = load i32, i32* @y.269
  %42 = add i32 %40, -429354445
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -429354445
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 467619029, i32 -2119113395
  store i32 %66, i32* %10
  br label %78

; <label>:67:                                     ; preds = %12
  store i32 -1898631909, i32* %10
  %68 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %3
  store %"class.std::vector.8"* %68, %"class.std::vector.8"** %11
  br label %78

; <label>:69:                                     ; preds = %12
  store i32 -1898631909, i32* %10
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %11
  br label %78

; <label>:70:                                     ; preds = %12
  %71 = load %"class.std::vector.8"*, %"class.std::vector.8"** %11
  ret %"class.std::vector.8"* %71

; <label>:72:                                     ; preds = %12
  %73 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %74 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %73, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %74 to %"class.std::allocator.5"*
  %76 = load i64, i64* %7, align 8
  %77 = call %"class.std::vector.8"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.5"* dereferenceable(1) %75, i64 %76)
  store i32 173811235, i32* %10
  br label %78

; <label>:78:                                     ; preds = %72, %69, %67, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator.23", align 8
  %10 = alloca %"class.std::move_iterator.23", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %12 = call %"class.std::vector.8"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.8"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  store %"class.std::vector.8"* %12, %"class.std::vector.8"** %13, align 8
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %15 = call %"class.std::vector.8"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.8"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  store %"class.std::vector.8"* %15, %"class.std::vector.8"** %16, align 8
  %17 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %18 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.8"*, %"class.std::vector.8"** %21, align 8
  %23 = call %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.8"* %20, %"class.std::vector.8"* %22, %"class.std::vector.8"* %17, %"class.std::allocator.5"* dereferenceable(1) %18)
  ret %"class.std::vector.8"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_(%"class.std::vector.8"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.8"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.272
  %7 = load i32, i32* @y.273
  %8 = add i32 %6, 348902978
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 348902978
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 577064321, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 577064321, label %20
    i32 1974320671, label %40
    i32 -1976251555, label %62
    i32 1681418369, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1974320671, i32 1681418369
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.8"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %41, align 8
  store i64 %1, i64* %42, align 8
  store i8 1, i8* %43, align 1
  %44 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::vector.8"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_(%"class.std::vector.8"* %44, i64 %45)
  store %"class.std::vector.8"* %46, %"class.std::vector.8"** %3
  %47 = load i32, i32* @x.272
  %48 = load i32, i32* @y.273
  %49 = sub i32 %47, -1740444390
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1740444390
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1976251555, i32 1681418369
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %3
  ret %"class.std::vector.8"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::vector.8"*, align 8
  %66 = alloca i64, align 8
  %67 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %65, align 8
  store i64 %1, i64* %66, align 8
  store i8 1, i8* %67, align 1
  %68 = load %"class.std::vector.8"*, %"class.std::vector.8"** %65, align 8
  %69 = load i64, i64* %66, align 8
  %70 = call %"class.std::vector.8"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_(%"class.std::vector.8"* %68, i64 %69)
  store i32 1974320671, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_(%"class.std::vector.8"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.274
  %4 = load i32, i32* @y.275
  %5 = sub i32 %3, 2103808577
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 2103808577
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %318

; <label>:29:                                     ; preds = %2, %318
  %30 = alloca %"class.std::vector.8"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::vector.8"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %30, align 8
  store i64 %1, i64* %31, align 8
  %35 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  store %"class.std::vector.8"* %35, %"class.std::vector.8"** %32, align 8
  %36 = load i32, i32* @x.274
  %37 = load i32, i32* @y.275
  %38 = add i32 %36, -810666286
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -810666286
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %318

; <label>:50:                                     ; preds = %29
  br label %51

; <label>:51:                                     ; preds = %87, %50
  %52 = load i32, i32* @x.274
  %53 = load i32, i32* @y.275
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %325

; <label>:65:                                     ; preds = %51, %325
  %66 = load i64, i64* %31, align 8
  %67 = icmp ugt i64 %66, 0
  %68 = load i32, i32* @x.274
  %69 = load i32, i32* @y.275
  %70 = add i32 %68, -755374967
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, -755374967
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  br i1 %80, label %82, label %325

; <label>:82:                                     ; preds = %65
  br i1 %67, label %83, label %135

; <label>:83:                                     ; preds = %82
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %32, align 8
  %85 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.8"* dereferenceable(24) %84) #3
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_(%"class.std::vector.8"* %85)
          to label %86 unwind label %95

; <label>:86:                                     ; preds = %83
  br label %87

; <label>:87:                                     ; preds = %86
  %88 = load i64, i64* %31, align 8
  %89 = add i64 %88, 4609193218237515832
  %90 = add i64 %89, -1
  %91 = sub i64 %90, 4609193218237515832
  %92 = add i64 %88, -1
  store i64 %91, i64* %31, align 8
  %93 = load %"class.std::vector.8"*, %"class.std::vector.8"** %32, align 8
  %94 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %93, i32 1
  store %"class.std::vector.8"* %94, %"class.std::vector.8"** %32, align 8
  br label %51

; <label>:95:                                     ; preds = %83
  %96 = load i32, i32* @x.274
  %97 = load i32, i32* @y.275
  %98 = sub i32 %96, 1005704305
  %99 = sub i32 %98, 1
  %100 = add i32 %99, 1005704305
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %328

; <label>:110:                                    ; preds = %95, %328
  %111 = landingpad { i8*, i32 }
          catch i8* null
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %33, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %34, align 4
  %114 = load i32, i32* @x.274
  %115 = load i32, i32* @y.275
  %116 = add i32 %114, 767356901
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, 767356901
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  br i1 %126, label %128, label %328

; <label>:128:                                    ; preds = %110
  br label %129

; <label>:129:                                    ; preds = %128
  %130 = load i8*, i8** %33, align 8
  %131 = call i8* @__cxa_begin_catch(i8* %130) #3
  %132 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  %133 = load %"class.std::vector.8"*, %"class.std::vector.8"** %32, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.8"* %132, %"class.std::vector.8"* %133)
          to label %134 unwind label %178

; <label>:134:                                    ; preds = %129
  invoke void @__cxa_rethrow() #12
          to label %276 unwind label %178

; <label>:135:                                    ; preds = %82
  %136 = load i32, i32* @x.274
  %137 = load i32, i32* @y.275
  %138 = sub i32 0, 1
  %139 = add i32 %136, %138
  %140 = sub i32 %136, 1
  %141 = mul i32 %136, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %137, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %332

; <label>:149:                                    ; preds = %135, %332
  %150 = load %"class.std::vector.8"*, %"class.std::vector.8"** %32, align 8
  %151 = load i32, i32* @x.274
  %152 = load i32, i32* @y.275
  %153 = sub i32 %151, -1083668810
  %154 = sub i32 %153, 1
  %155 = add i32 %154, -1083668810
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 true, true
  %164 = and i1 %161, true
  %165 = and i1 %159, %163
  %166 = and i1 %162, true
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 true, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %332

; <label>:177:                                    ; preds = %149
  ret %"class.std::vector.8"* %150

; <label>:178:                                    ; preds = %134, %129
  %179 = landingpad { i8*, i32 }
          cleanup
  %180 = extractvalue { i8*, i32 } %179, 0
  store i8* %180, i8** %33, align 8
  %181 = extractvalue { i8*, i32 } %179, 1
  store i32 %181, i32* %34, align 4
  invoke void @__cxa_end_catch()
          to label %182 unwind label %219

; <label>:182:                                    ; preds = %178
  %183 = load i32, i32* @x.274
  %184 = load i32, i32* @y.275
  %185 = sub i32 %183, -810480028
  %186 = sub i32 %185, 1
  %187 = add i32 %186, -810480028
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = and i1 %191, %192
  %194 = xor i1 %191, %192
  %195 = or i1 %193, %194
  %196 = or i1 %191, %192
  br i1 %195, label %197, label %334

; <label>:197:                                    ; preds = %182, %334
  %198 = load i32, i32* @x.274
  %199 = load i32, i32* @y.275
  %200 = add i32 %198, 1225643450
  %201 = sub i32 %200, 1
  %202 = sub i32 %201, 1225643450
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  br i1 %210, label %212, label %334

; <label>:212:                                    ; preds = %197
  br label %214
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:214:                                    ; preds = %212
  %215 = load i8*, i8** %33, align 8
  %216 = load i32, i32* %34, align 4
  %217 = insertvalue { i8*, i32 } undef, i8* %215, 0
  %218 = insertvalue { i8*, i32 } %217, i32 %216, 1
  resume { i8*, i32 } %218

; <label>:219:                                    ; preds = %178
  %220 = load i32, i32* @x.274
  %221 = load i32, i32* @y.275
  %222 = sub i32 %220, -1565821521
  %223 = sub i32 %222, 1
  %224 = add i32 %223, -1565821521
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = xor i1 %228, true
  %231 = xor i1 %229, true
  %232 = xor i1 false, true
  %233 = and i1 %230, false
  %234 = and i1 %228, %232
  %235 = and i1 %231, false
  %236 = and i1 %229, %232
  %237 = or i1 %233, %234
  %238 = or i1 %235, %236
  %239 = xor i1 %237, %238
  %240 = or i1 %230, %231
  %241 = xor i1 %240, true
  %242 = or i1 false, %232
  %243 = and i1 %241, %242
  %244 = or i1 %239, %243
  %245 = or i1 %228, %229
  br i1 %244, label %246, label %335

; <label>:246:                                    ; preds = %219, %335
  %247 = landingpad { i8*, i32 }
          catch i8* null
  %248 = extractvalue { i8*, i32 } %247, 0
  call void @__clang_call_terminate(i8* %248) #8
  %249 = load i32, i32* @x.274
  %250 = load i32, i32* @y.275
  %251 = add i32 %249, -463292692
  %252 = sub i32 %251, 1
  %253 = sub i32 %252, -463292692
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = xor i1 %257, true
  %260 = xor i1 %258, true
  %261 = xor i1 true, true
  %262 = and i1 %259, true
  %263 = and i1 %257, %261
  %264 = and i1 %260, true
  %265 = and i1 %258, %261
  %266 = or i1 %262, %263
  %267 = or i1 %264, %265
  %268 = xor i1 %266, %267
  %269 = or i1 %259, %260
  %270 = xor i1 %269, true
  %271 = or i1 true, %261
  %272 = and i1 %270, %271
  %273 = or i1 %268, %272
  %274 = or i1 %257, %258
  br i1 %273, label %275, label %335

; <label>:275:                                    ; preds = %246
  unreachable

; <label>:276:                                    ; preds = %134
  %277 = load i32, i32* @x.274
  %278 = load i32, i32* @y.275
  %279 = sub i32 0, 1
  %280 = add i32 %277, %279
  %281 = sub i32 %277, 1
  %282 = mul i32 %277, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %278, 10
  %286 = xor i1 %284, true
  %287 = xor i1 %285, true
  %288 = xor i1 true, true
  %289 = and i1 %286, true
  %290 = and i1 %284, %288
  %291 = and i1 %287, true
  %292 = and i1 %285, %288
  %293 = or i1 %289, %290
  %294 = or i1 %291, %292
  %295 = xor i1 %293, %294
  %296 = or i1 %286, %287
  %297 = xor i1 %296, true
  %298 = or i1 true, %288
  %299 = and i1 %297, %298
  %300 = or i1 %295, %299
  %301 = or i1 %284, %285
  br i1 %300, label %302, label %338

; <label>:302:                                    ; preds = %276, %338
  %303 = load i32, i32* @x.274
  %304 = load i32, i32* @y.275
  %305 = add i32 %303, -595751786
  %306 = sub i32 %305, 1
  %307 = sub i32 %306, -595751786
  %308 = sub i32 %303, 1
  %309 = mul i32 %303, %307
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %304, 10
  %313 = and i1 %311, %312
  %314 = xor i1 %311, %312
  %315 = or i1 %313, %314
  %316 = or i1 %311, %312
  br i1 %315, label %317, label %338

; <label>:317:                                    ; preds = %302
  unreachable

; <label>:318:                                    ; preds = %29, %2
  %319 = alloca %"class.std::vector.8"*, align 8
  %320 = alloca i64, align 8
  %321 = alloca %"class.std::vector.8"*, align 8
  %322 = alloca i8*
  %323 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %319, align 8
  store i64 %1, i64* %320, align 8
  %324 = load %"class.std::vector.8"*, %"class.std::vector.8"** %319, align 8
  store %"class.std::vector.8"* %324, %"class.std::vector.8"** %321, align 8
  br label %29

; <label>:325:                                    ; preds = %65, %51
  %326 = load i64, i64* %31, align 8
  %327 = icmp ugt i64 %326, 0
  br label %65

; <label>:328:                                    ; preds = %110, %95
  %329 = landingpad { i8*, i32 }
          catch i8* null
  %330 = extractvalue { i8*, i32 } %329, 0
  store i8* %330, i8** %33, align 8
  %331 = extractvalue { i8*, i32 } %329, 1
  store i32 %331, i32* %34, align 4
  br label %110

; <label>:332:                                    ; preds = %149, %135
  %333 = load %"class.std::vector.8"*, %"class.std::vector.8"** %32, align 8
  br label %149

; <label>:334:                                    ; preds = %197, %182
  br label %197

; <label>:335:                                    ; preds = %246, %219
  %336 = landingpad { i8*, i32 }
          catch i8* null
  %337 = extractvalue { i8*, i32 } %336, 0
  call void @__clang_call_terminate(i8* %337) #8
  br label %246

; <label>:338:                                    ; preds = %302, %276
  br label %302
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_(%"class.std::vector.8"*) #5 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.276
  %5 = load i32, i32* @y.277
  %6 = sub i32 %4, -811333255
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -811333255
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 499202695, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 499202695, label %18
    i32 851460038, label %26
    i32 -2004248594, label %45
    i32 1881145039, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 851460038, i32 1881145039
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %27, align 8
  %28 = load %"class.std::vector.8"*, %"class.std::vector.8"** %27, align 8
  %29 = bitcast %"class.std::vector.8"* %28 to i8*
  %30 = bitcast i8* %29 to %"class.std::vector.8"*
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* %30) #3
  %31 = load i32, i32* @x.276
  %32 = load i32, i32* @y.277
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -2004248594, i32 1881145039
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %47, align 8
  %48 = load %"class.std::vector.8"*, %"class.std::vector.8"** %47, align 8
  %49 = bitcast %"class.std::vector.8"* %48 to i8*
  %50 = bitcast i8* %49 to %"class.std::vector.8"*
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* %50) #3
  store i32 851460038, i32* %14
  br label %51

; <label>:51:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.9"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.280
  %5 = load i32, i32* @y.281
  %6 = sub i32 %4, 1241860727
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1241860727
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1081299092, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1081299092, label %18
    i32 1165901838, label %26
    i32 1232715012, label %44
    i32 1896239044, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1165901838, i32 1896239044
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %27, align 8
  %28 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.280
  %31 = load i32, i32* @y.281
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1232715012, i32 1896239044
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %46, align 8
  %47 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %47, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %48)
  store i32 1165901838, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 0
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 1
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 2
  store i32* null, i32** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.284
  %5 = load i32, i32* @y.285
  %6 = add i32 %4, -737489250
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -737489250
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1831877739, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1831877739, label %18
    i32 -1745666064, label %26
    i32 803700645, label %45
    i32 -861550713, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1745666064, i32 -861550713
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %27, align 8
  %28 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %27, align 8
  %29 = bitcast %"class.std::allocator.10"* %28 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.11"* %29) #3
  %30 = load i32, i32* @x.284
  %31 = load i32, i32* @y.285
  %32 = add i32 %30, -237983619
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -237983619
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 803700645, i32 -861550713
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %47, align 8
  %48 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %47, align 8
  %49 = bitcast %"class.std::allocator.10"* %48 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.11"* %49) #3
  store i32 -1745666064, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.286
  %5 = load i32, i32* @y.287
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 698821260, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 698821260, label %17
    i32 -786392925, label %25
    i32 1895021957, label %55
    i32 -1794448493, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -786392925, i32 -1794448493
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %26, align 8
  %28 = load i32, i32* @x.286
  %29 = load i32, i32* @y.287
  %30 = add i32 %28, -703962232
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -703962232
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1895021957, i32 -1794448493
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %57, align 8
  store i32 -786392925, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.288
  %6 = load i32, i32* @y.289
  %7 = sub i32 %5, -764301406
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -764301406
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -49928499, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -49928499, label %19
    i32 1997714308, label %39
    i32 1608802184, label %60
    i32 -411544455, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1997714308, i32 -411544455
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %40, align 8
  %41 = load %"class.std::vector.3"*, %"class.std::vector.3"** %40, align 8
  %42 = bitcast %"class.std::vector.3"* %41 to %"struct.std::_Vector_base.4"*
  %43 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %42) #3
  %44 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_(%"class.std::allocator.5"* dereferenceable(1) %43) #3
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.288
  %46 = load i32, i32* @y.289
  %47 = add i32 %45, 1752931807
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1752931807
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1608802184, i32 -411544455
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %63, align 8
  %64 = load %"class.std::vector.3"*, %"class.std::vector.3"** %63, align 8
  %65 = bitcast %"class.std::vector.3"* %64 to %"struct.std::_Vector_base.4"*
  %66 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %65) #3
  %67 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_(%"class.std::allocator.5"* dereferenceable(1) %66) #3
  store i32 1997714308, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_(%"class.std::allocator.5"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.294
  %5 = load i32, i32* @y.295
  %6 = add i32 %4, -13573147
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -13573147
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1121258884, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1121258884, label %18
    i32 -1054908048, label %38
    i32 -2133821379, label %68
    i32 1926084195, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1054908048, i32 1926084195
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  %41 = load i32, i32* @x.294
  %42 = load i32, i32* @y.295
  %43 = sub i32 %41, -1304684444
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1304684444
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -2133821379, i32 1926084195
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %70, align 8
  store i32 -1054908048, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.8"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret %"class.std::vector.8"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 682140507, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 682140507, label %16
    i32 -397845875, label %21
    i32 583352740, label %37
    i32 405286224, label %65
    i32 -1386914463, label %66
    i32 -861101908, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -397845875, i32 -1386914463
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.298
  %23 = load i32, i32* @y.299
  %24 = add i32 %22, 108727153
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 108727153
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 583352740, i32 -861101908
  store i32 %36, i32* %12
  br label %72

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %38 = load i32, i32* @x.298
  %39 = load i32, i32* @y.299
  %40 = sub i32 %38, -1216121635
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1216121635
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 405286224, i32 -861101908
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  unreachable

; <label>:66:                                     ; preds = %13
  %67 = load i64, i64* %7, align 8
  %68 = mul i64 %67, 24
  %69 = call i8* @_Znwm(i64 %68)
  %70 = bitcast i8* %69 to %"class.std::vector.8"*
  ret %"class.std::vector.8"* %70

; <label>:71:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 583352740, i32* %12
  br label %72

; <label>:72:                                     ; preds = %71, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.300
  %9 = load i32, i32* @y.301
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 197029333, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %107
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 197029333, label %21
    i32 1741064359, label %41
    i32 -1566014760, label %86
    i32 1965984277, label %88
  ]

; <label>:20:                                     ; preds = %18
  br label %107

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1741064359, i32 1965984277
  store i32 %40, i32* %17
  br label %107

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.23", align 8
  %43 = alloca %"class.std::move_iterator.23", align 8
  %44 = alloca %"class.std::vector.8"*, align 8
  %45 = alloca %"class.std::allocator.5"*, align 8
  %46 = alloca %"class.std::move_iterator.23", align 8
  %47 = alloca %"class.std::move_iterator.23", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %42, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %43, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %49, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %44, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %45, align 8
  %50 = bitcast %"class.std::move_iterator.23"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.23"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.23"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.23"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %46, i32 0, i32 0
  %56 = load %"class.std::vector.8"*, %"class.std::vector.8"** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %47, i32 0, i32 0
  %58 = load %"class.std::vector.8"*, %"class.std::vector.8"** %57, align 8
  %59 = call %"class.std::vector.8"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_(%"class.std::vector.8"* %56, %"class.std::vector.8"* %58, %"class.std::vector.8"* %54)
  store %"class.std::vector.8"* %59, %"class.std::vector.8"** %5
  %60 = load i32, i32* @x.300
  %61 = load i32, i32* @y.301
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -1566014760, i32 1965984277
  store i32 %85, i32* %17
  br label %107

; <label>:86:                                     ; preds = %18
  %87 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  ret %"class.std::vector.8"* %87

; <label>:88:                                     ; preds = %18
  %89 = alloca %"class.std::move_iterator.23", align 8
  %90 = alloca %"class.std::move_iterator.23", align 8
  %91 = alloca %"class.std::vector.8"*, align 8
  %92 = alloca %"class.std::allocator.5"*, align 8
  %93 = alloca %"class.std::move_iterator.23", align 8
  %94 = alloca %"class.std::move_iterator.23", align 8
  %95 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %89, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %95, align 8
  %96 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %90, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %96, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %91, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %92, align 8
  %97 = bitcast %"class.std::move_iterator.23"* %93 to i8*
  %98 = bitcast %"class.std::move_iterator.23"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = bitcast %"class.std::move_iterator.23"* %94 to i8*
  %100 = bitcast %"class.std::move_iterator.23"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = load %"class.std::vector.8"*, %"class.std::vector.8"** %91, align 8
  %102 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %93, i32 0, i32 0
  %103 = load %"class.std::vector.8"*, %"class.std::vector.8"** %102, align 8
  %104 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %94, i32 0, i32 0
  %105 = load %"class.std::vector.8"*, %"class.std::vector.8"** %104, align 8
  %106 = call %"class.std::vector.8"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_(%"class.std::vector.8"* %103, %"class.std::vector.8"* %105, %"class.std::vector.8"* %101)
  store i32 1741064359, i32* %17
  br label %107

; <label>:107:                                    ; preds = %88, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.8"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.23", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_(%"class.std::move_iterator.23"* %2, %"class.std::vector.8"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  ret %"class.std::vector.8"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.23", align 8
  %5 = alloca %"class.std::move_iterator.23", align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.23", align 8
  %9 = alloca %"class.std::move_iterator.23", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %4, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %11, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.23"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.23"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.23"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.23"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %21 = call %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_(%"class.std::vector.8"* %18, %"class.std::vector.8"* %20, %"class.std::vector.8"* %16)
  ret %"class.std::vector.8"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.23", align 8
  %5 = alloca %"class.std::move_iterator.23", align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %4, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %11, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  %12 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %12, %"class.std::vector.8"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %161, %3
  %14 = load i32, i32* @x.306
  %15 = load i32, i32* @y.307
  %16 = add i32 %14, -1630162707
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1630162707
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %352

; <label>:40:                                     ; preds = %13, %352
  %41 = load i32, i32* @x.306
  %42 = load i32, i32* @y.307
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %352

; <label>:54:                                     ; preds = %40
  %55 = invoke zeroext i1 @_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.23"* dereferenceable(8) %4, %"class.std::move_iterator.23"* dereferenceable(8) %5)
          to label %56 unwind label %164

; <label>:56:                                     ; preds = %54
  br i1 %55, label %57, label %228

; <label>:57:                                     ; preds = %56
  %58 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %59 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.8"* dereferenceable(24) %58) #3
  %60 = invoke dereferenceable(24) %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv(%"class.std::move_iterator.23"* %4)
          to label %61 unwind label %164

; <label>:61:                                     ; preds = %57
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_(%"class.std::vector.8"* %59, %"class.std::vector.8"* dereferenceable(24) %60)
          to label %62 unwind label %164

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* @x.306
  %64 = load i32, i32* @y.307
  %65 = sub i32 %63, 2091033610
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 2091033610
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %353

; <label>:89:                                     ; preds = %62, %353
  %90 = load i32, i32* @x.306
  %91 = load i32, i32* @y.307
  %92 = sub i32 %90, 1643855534
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 1643855534
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %353

; <label>:104:                                    ; preds = %89
  br label %105

; <label>:105:                                    ; preds = %104
  %106 = load i32, i32* @x.306
  %107 = load i32, i32* @y.307
  %108 = add i32 %106, 810500450
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, 810500450
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %354

; <label>:132:                                    ; preds = %105, %354
  %133 = load i32, i32* @x.306
  %134 = load i32, i32* @y.307
  %135 = add i32 %133, -41281668
  %136 = sub i32 %135, 1
  %137 = sub i32 %136, -41281668
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 true, true
  %146 = and i1 %143, true
  %147 = and i1 %141, %145
  %148 = and i1 %144, true
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 true, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  br i1 %157, label %159, label %354

; <label>:159:                                    ; preds = %132
  %160 = invoke dereferenceable(8) %"class.std::move_iterator.23"* @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv(%"class.std::move_iterator.23"* %4)
          to label %161 unwind label %164

; <label>:161:                                    ; preds = %159
  %162 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %163 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %162, i32 1
  store %"class.std::vector.8"* %163, %"class.std::vector.8"** %7, align 8
  br label %13

; <label>:164:                                    ; preds = %159, %61, %57, %54
  %165 = landingpad { i8*, i32 }
          catch i8* null
  %166 = extractvalue { i8*, i32 } %165, 0
  store i8* %166, i8** %8, align 8
  %167 = extractvalue { i8*, i32 } %165, 1
  store i32 %167, i32* %9, align 4
  br label %168

; <label>:168:                                    ; preds = %164
  %169 = load i8*, i8** %8, align 8
  %170 = call i8* @__cxa_begin_catch(i8* %169) #3
  %171 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %172 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.8"* %171, %"class.std::vector.8"* %172)
          to label %173 unwind label %230

; <label>:173:                                    ; preds = %168
  %174 = load i32, i32* @x.306
  %175 = load i32, i32* @y.307
  %176 = add i32 %174, 43176918
  %177 = sub i32 %176, 1
  %178 = sub i32 %177, 43176918
  %179 = sub i32 %174, 1
  %180 = mul i32 %174, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %175, 10
  %184 = xor i1 %182, true
  %185 = xor i1 %183, true
  %186 = xor i1 false, true
  %187 = and i1 %184, false
  %188 = and i1 %182, %186
  %189 = and i1 %185, false
  %190 = and i1 %183, %186
  %191 = or i1 %187, %188
  %192 = or i1 %189, %190
  %193 = xor i1 %191, %192
  %194 = or i1 %184, %185
  %195 = xor i1 %194, true
  %196 = or i1 false, %186
  %197 = and i1 %195, %196
  %198 = or i1 %193, %197
  %199 = or i1 %182, %183
  br i1 %198, label %200, label %355

; <label>:200:                                    ; preds = %173, %355
  %201 = load i32, i32* @x.306
  %202 = load i32, i32* @y.307
  %203 = sub i32 %201, 1165983480
  %204 = sub i32 %203, 1
  %205 = add i32 %204, 1165983480
  %206 = sub i32 %201, 1
  %207 = mul i32 %201, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %202, 10
  %211 = xor i1 %209, true
  %212 = xor i1 %210, true
  %213 = xor i1 true, true
  %214 = and i1 %211, true
  %215 = and i1 %209, %213
  %216 = and i1 %212, true
  %217 = and i1 %210, %213
  %218 = or i1 %214, %215
  %219 = or i1 %216, %217
  %220 = xor i1 %218, %219
  %221 = or i1 %211, %212
  %222 = xor i1 %221, true
  %223 = or i1 true, %213
  %224 = and i1 %222, %223
  %225 = or i1 %220, %224
  %226 = or i1 %209, %210
  br i1 %225, label %227, label %355

; <label>:227:                                    ; preds = %200
  invoke void @__cxa_rethrow() #12
          to label %298 unwind label %230

; <label>:228:                                    ; preds = %56
  %229 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  ret %"class.std::vector.8"* %229

; <label>:230:                                    ; preds = %227, %168
  %231 = landingpad { i8*, i32 }
          cleanup
  %232 = extractvalue { i8*, i32 } %231, 0
  store i8* %232, i8** %8, align 8
  %233 = extractvalue { i8*, i32 } %231, 1
  store i32 %233, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %234 unwind label %295

; <label>:234:                                    ; preds = %230
  %235 = load i32, i32* @x.306
  %236 = load i32, i32* @y.307
  %237 = add i32 %235, 357412323
  %238 = sub i32 %237, 1
  %239 = sub i32 %238, 357412323
  %240 = sub i32 %235, 1
  %241 = mul i32 %235, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %236, 10
  %245 = xor i1 %243, true
  %246 = xor i1 %244, true
  %247 = xor i1 false, true
  %248 = and i1 %245, false
  %249 = and i1 %243, %247
  %250 = and i1 %246, false
  %251 = and i1 %244, %247
  %252 = or i1 %248, %249
  %253 = or i1 %250, %251
  %254 = xor i1 %252, %253
  %255 = or i1 %245, %246
  %256 = xor i1 %255, true
  %257 = or i1 false, %247
  %258 = and i1 %256, %257
  %259 = or i1 %254, %258
  %260 = or i1 %243, %244
  br i1 %259, label %261, label %356

; <label>:261:                                    ; preds = %234, %356
  %262 = load i32, i32* @x.306
  %263 = load i32, i32* @y.307
  %264 = add i32 %262, 164835882
  %265 = sub i32 %264, 1
  %266 = sub i32 %265, 164835882
  %267 = sub i32 %262, 1
  %268 = mul i32 %262, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %263, 10
  %272 = xor i1 %270, true
  %273 = xor i1 %271, true
  %274 = xor i1 true, true
  %275 = and i1 %272, true
  %276 = and i1 %270, %274
  %277 = and i1 %273, true
  %278 = and i1 %271, %274
  %279 = or i1 %275, %276
  %280 = or i1 %277, %278
  %281 = xor i1 %279, %280
  %282 = or i1 %272, %273
  %283 = xor i1 %282, true
  %284 = or i1 true, %274
  %285 = and i1 %283, %284
  %286 = or i1 %281, %285
  %287 = or i1 %270, %271
  br i1 %286, label %288, label %356

; <label>:288:                                    ; preds = %261
  br label %290
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:290:                                    ; preds = %288
  %291 = load i8*, i8** %8, align 8
  %292 = load i32, i32* %9, align 4
  %293 = insertvalue { i8*, i32 } undef, i8* %291, 0
  %294 = insertvalue { i8*, i32 } %293, i32 %292, 1
  resume { i8*, i32 } %294

; <label>:295:                                    ; preds = %230
  %296 = landingpad { i8*, i32 }
          catch i8* null
  %297 = extractvalue { i8*, i32 } %296, 0
  call void @__clang_call_terminate(i8* %297) #8
  unreachable

; <label>:298:                                    ; preds = %227
  %299 = load i32, i32* @x.306
  %300 = load i32, i32* @y.307
  %301 = sub i32 %299, 82339058
  %302 = sub i32 %301, 1
  %303 = add i32 %302, 82339058
  %304 = sub i32 %299, 1
  %305 = mul i32 %299, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %300, 10
  %309 = xor i1 %307, true
  %310 = xor i1 %308, true
  %311 = xor i1 true, true
  %312 = and i1 %309, true
  %313 = and i1 %307, %311
  %314 = and i1 %310, true
  %315 = and i1 %308, %311
  %316 = or i1 %312, %313
  %317 = or i1 %314, %315
  %318 = xor i1 %316, %317
  %319 = or i1 %309, %310
  %320 = xor i1 %319, true
  %321 = or i1 true, %311
  %322 = and i1 %320, %321
  %323 = or i1 %318, %322
  %324 = or i1 %307, %308
  br i1 %323, label %325, label %357

; <label>:325:                                    ; preds = %298, %357
  %326 = load i32, i32* @x.306
  %327 = load i32, i32* @y.307
  %328 = sub i32 0, 1
  %329 = add i32 %326, %328
  %330 = sub i32 %326, 1
  %331 = mul i32 %326, %329
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %327, 10
  %335 = xor i1 %333, true
  %336 = xor i1 %334, true
  %337 = xor i1 false, true
  %338 = and i1 %335, false
  %339 = and i1 %333, %337
  %340 = and i1 %336, false
  %341 = and i1 %334, %337
  %342 = or i1 %338, %339
  %343 = or i1 %340, %341
  %344 = xor i1 %342, %343
  %345 = or i1 %335, %336
  %346 = xor i1 %345, true
  %347 = or i1 false, %337
  %348 = and i1 %346, %347
  %349 = or i1 %344, %348
  %350 = or i1 %333, %334
  br i1 %349, label %351, label %357

; <label>:351:                                    ; preds = %325
  unreachable

; <label>:352:                                    ; preds = %40, %13
  br label %40

; <label>:353:                                    ; preds = %89, %62
  br label %89

; <label>:354:                                    ; preds = %132, %105
  br label %132

; <label>:355:                                    ; preds = %200, %173
  br label %200

; <label>:356:                                    ; preds = %261, %234
  br label %261

; <label>:357:                                    ; preds = %325, %298
  br label %325
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.23"* dereferenceable(8), %"class.std::move_iterator.23"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.23"*, align 8
  %4 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %3, align 8
  store %"class.std::move_iterator.23"* %1, %"class.std::move_iterator.23"** %4, align 8
  %5 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %3, align 8
  %6 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.23"* dereferenceable(8) %5, %"class.std::move_iterator.23"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, true
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.8"*
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.8"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIiSaIiEEC2EOS1_(%"class.std::vector.8"* %7, %"class.std::vector.8"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv(%"class.std::move_iterator.23"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %2, align 8
  %3 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  ret %"class.std::vector.8"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.23"* @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv(%"class.std::move_iterator.23"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.23"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.314
  %6 = load i32, i32* @y.315
  %7 = add i32 %5, 558532670
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 558532670
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1230982461, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1230982461, label %19
    i32 -1600052775, label %39
    i32 70728460, label %60
    i32 -2107259852, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1600052775, i32 -2107259852
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %40, align 8
  %41 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %40, align 8
  store %"class.std::move_iterator.23"* %41, %"class.std::move_iterator.23"** %2
  %42 = load volatile %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %2
  %43 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %42, i32 0, i32 0
  %44 = load %"class.std::vector.8"*, %"class.std::vector.8"** %43, align 8
  %45 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %44, i32 1
  store %"class.std::vector.8"* %45, %"class.std::vector.8"** %43, align 8
  %46 = load i32, i32* @x.314
  %47 = load i32, i32* @y.315
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 70728460, i32 -2107259852
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %2
  ret %"class.std::move_iterator.23"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %63, align 8
  %64 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %63, align 8
  %65 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %64, i32 0, i32 0
  %66 = load %"class.std::vector.8"*, %"class.std::vector.8"** %65, align 8
  %67 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %66, i32 1
  store %"class.std::vector.8"* %67, %"class.std::vector.8"** %65, align 8
  store i32 -1600052775, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.23"* dereferenceable(8), %"class.std::move_iterator.23"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.316
  %7 = load i32, i32* @y.317
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1648623911, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1648623911, label %19
    i32 -1061822590, label %39
    i32 2027669451, label %62
    i32 -422874212, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1061822590, i32 -422874212
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.23"*, align 8
  %41 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %40, align 8
  store %"class.std::move_iterator.23"* %1, %"class.std::move_iterator.23"** %41, align 8
  %42 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %40, align 8
  %43 = call %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.23"* %42)
  %44 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %41, align 8
  %45 = call %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.23"* %44)
  %46 = icmp eq %"class.std::vector.8"* %43, %45
  store i1 %46, i1* %3
  %47 = load i32, i32* @x.316
  %48 = load i32, i32* @y.317
  %49 = sub i32 %47, -1918735953
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1918735953
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 2027669451, i32 -422874212
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile i1, i1* %3
  ret i1 %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.std::move_iterator.23"*, align 8
  %66 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %65, align 8
  store %"class.std::move_iterator.23"* %1, %"class.std::move_iterator.23"** %66, align 8
  %67 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %65, align 8
  %68 = call %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.23"* %67)
  %69 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %66, align 8
  %70 = call %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.23"* %69)
  %71 = icmp eq %"class.std::vector.8"* %68, %70
  store i32 -1061822590, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.23"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.318
  %6 = load i32, i32* @y.319
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2137497297, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2137497297, label %18
    i32 -1676064406, label %38
    i32 1174302046, label %58
    i32 -74137374, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1676064406, i32 -74137374
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %39, align 8
  %40 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %39, align 8
  %41 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %40, i32 0, i32 0
  %42 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  store %"class.std::vector.8"* %42, %"class.std::vector.8"** %2
  %43 = load i32, i32* @x.318
  %44 = load i32, i32* @y.319
  %45 = add i32 %43, -1674216198
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1674216198
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1174302046, i32 -74137374
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %61, align 8
  %62 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %61, align 8
  %63 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %62, i32 0, i32 0
  %64 = load %"class.std::vector.8"*, %"class.std::vector.8"** %63, align 8
  store i32 -1676064406, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  ret %"class.std::vector.8"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EOS1_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.322
  %6 = load i32, i32* @y.323
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -294226893, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %69
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -294226893, label %18
    i32 811158652, label %38
    i32 -395080356, label %60
    i32 -1934181009, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %69

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 811158652, i32 -1934181009
  store i32 %37, i32* %14
  br label %69

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.8"*, align 8
  %40 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %39, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %40, align 8
  %41 = load %"class.std::vector.8"*, %"class.std::vector.8"** %39, align 8
  %42 = bitcast %"class.std::vector.8"* %41 to %"struct.std::_Vector_base.9"*
  %43 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  %44 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.8"* dereferenceable(24) %43) #3
  %45 = bitcast %"class.std::vector.8"* %44 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EOS1_(%"struct.std::_Vector_base.9"* %42, %"struct.std::_Vector_base.9"* dereferenceable(24) %45) #3
  %46 = load i32, i32* @x.322
  %47 = load i32, i32* @y.323
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -395080356, i32 -1934181009
  store i32 %59, i32* %14
  br label %69

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::vector.8"*, align 8
  %63 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %62, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %63, align 8
  %64 = load %"class.std::vector.8"*, %"class.std::vector.8"** %62, align 8
  %65 = bitcast %"class.std::vector.8"* %64 to %"struct.std::_Vector_base.9"*
  %66 = load %"class.std::vector.8"*, %"class.std::vector.8"** %63, align 8
  %67 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.8"* dereferenceable(24) %66) #3
  %68 = bitcast %"class.std::vector.8"* %67 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EOS1_(%"struct.std::_Vector_base.9"* %65, %"struct.std::_Vector_base.9"* dereferenceable(24) %68) #3
  store i32 811158652, i32* %14
  br label %69

; <label>:69:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.324
  %6 = load i32, i32* @y.325
  %7 = add i32 %5, -935565853
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -935565853
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1328820685, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1328820685, label %19
    i32 -334862667, label %39
    i32 2128706920, label %57
    i32 -298161535, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -334862667, i32 -298161535
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  %41 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  store %"class.std::vector.8"* %41, %"class.std::vector.8"** %2
  %42 = load i32, i32* @x.324
  %43 = load i32, i32* @y.325
  %44 = add i32 %42, 2035209945
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 2035209945
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 2128706920, i32 -298161535
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %60, align 8
  %61 = load %"class.std::vector.8"*, %"class.std::vector.8"** %60, align 8
  store i32 -334862667, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EOS1_(%"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store %"struct.std::_Vector_base.9"* %1, %"struct.std::_Vector_base.9"** %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, %"class.std::allocator.10"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.10"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.328
  %6 = load i32, i32* @y.329
  %7 = sub i32 %5, 1071778143
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1071778143
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1804364449, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1804364449, label %19
    i32 -274701516, label %27
    i32 109736977, label %57
    i32 1915939388, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -274701516, i32 1915939388
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %28, align 8
  %29 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %28, align 8
  store %"class.std::allocator.10"* %29, %"class.std::allocator.10"** %2
  %30 = load i32, i32* @x.328
  %31 = load i32, i32* @y.329
  %32 = sub i32 %30, 1320004377
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1320004377
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 109736977, i32 1915939388
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::allocator.10"*, %"class.std::allocator.10"** %2
  ret %"class.std::allocator.10"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %60, align 8
  %61 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %60, align 8
  store i32 -274701516, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator.10"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1) %7) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"* %6, %"class.std::allocator.10"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %6, i32** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %9, i32** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %12, i32** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.11"* %6, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.336
  %6 = load i32, i32* @y.337
  %7 = sub i32 %5, 1262122144
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1262122144
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1408006362, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1408006362, label %19
    i32 1590207122, label %27
    i32 -1216198549, label %58
    i32 -606502055, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1590207122, i32 -606502055
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %28, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %1, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %28, align 8
  %31 = load i32, i32* @x.336
  %32 = load i32, i32* @y.337
  %33 = sub i32 %31, -1918687171
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -1918687171
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1216198549, i32 -606502055
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %61 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %60, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %1, %"class.__gnu_cxx::new_allocator.11"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %60, align 8
  store i32 1590207122, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8), i32** dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.338
  %6 = load i32, i32* @y.339
  %7 = add i32 %5, -188501457
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -188501457
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 945799563, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 945799563, label %19
    i32 -1819723996, label %27
    i32 1917542887, label %55
    i32 1949037467, label %56
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1819723996, i32 1949037467
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca i32**, align 8
  %29 = alloca i32**, align 8
  %30 = alloca i32*, align 8
  store i32** %0, i32*** %28, align 8
  store i32** %1, i32*** %29, align 8
  %31 = load i32**, i32*** %28, align 8
  %32 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %31) #3
  %33 = load i32*, i32** %32, align 8
  store i32* %33, i32** %30, align 8
  %34 = load i32**, i32*** %29, align 8
  %35 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %34) #3
  %36 = load i32*, i32** %35, align 8
  %37 = load i32**, i32*** %28, align 8
  store i32* %36, i32** %37, align 8
  %38 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %30) #3
  %39 = load i32*, i32** %38, align 8
  %40 = load i32**, i32*** %29, align 8
  store i32* %39, i32** %40, align 8
  %41 = load i32, i32* @x.338
  %42 = load i32, i32* @y.339
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1917542887, i32 1949037467
  store i32 %54, i32* %15
  br label %70

; <label>:55:                                     ; preds = %16
  ret void

; <label>:56:                                     ; preds = %16
  %57 = alloca i32**, align 8
  %58 = alloca i32**, align 8
  %59 = alloca i32*, align 8
  store i32** %0, i32*** %57, align 8
  store i32** %1, i32*** %58, align 8
  %60 = load i32**, i32*** %57, align 8
  %61 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %60) #3
  %62 = load i32*, i32** %61, align 8
  store i32* %62, i32** %59, align 8
  %63 = load i32**, i32*** %58, align 8
  %64 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %63) #3
  %65 = load i32*, i32** %64, align 8
  %66 = load i32**, i32*** %57, align 8
  store i32* %65, i32** %66, align 8
  %67 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %59) #3
  %68 = load i32*, i32** %67, align 8
  %69 = load i32**, i32*** %58, align 8
  store i32* %68, i32** %69, align 8
  store i32 -1819723996, i32* %15
  br label %70

; <label>:70:                                     ; preds = %56, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8)) #5 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_(%"class.std::move_iterator.23"*, %"class.std::vector.8"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.23"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %7, %"class.std::vector.8"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 4
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.8"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store i64 %1, i64* %4, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %12 = load i64, i64* %4, align 8
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %279

; <label>:14:                                     ; preds = %2
  %15 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i32*, i32** %17, align 8
  %19 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 1
  %22 = load i32*, i32** %21, align 8
  %23 = ptrtoint i32* %18 to i64
  %24 = ptrtoint i32* %22 to i64
  %25 = add i64 %23, -6515107088892898798
  %26 = sub i64 %25, %24
  %27 = sub i64 %26, -6515107088892898798
  %28 = sub i64 %23, %24
  %29 = sdiv exact i64 %27, 4
  %30 = load i64, i64* %4, align 8
  %31 = icmp uge i64 %29, %30
  br i1 %31, label %32, label %44

; <label>:32:                                     ; preds = %14
  %33 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 1
  %36 = load i32*, i32** %35, align 8
  %37 = load i64, i64* %4, align 8
  %38 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %39 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %38) #3
  %40 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %36, i64 %37, %"class.std::allocator.10"* dereferenceable(1) %39)
  %41 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, i32 0, i32 1
  store i32* %40, i32** %43, align 8
  br label %249

; <label>:44:                                     ; preds = %14
  %45 = load i64, i64* %4, align 8
  %46 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.8"* %11, i64 %45, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0))
  store i64 %46, i64* %5, align 8
  %47 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %11) #3
  store i64 %47, i64* %6, align 8
  %48 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %49 = load i64, i64* %5, align 8
  %50 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.9"* %48, i64 %49)
  store i32* %50, i32** %7, align 8
  %51 = load i32*, i32** %7, align 8
  store i32* %51, i32** %8, align 8
  %52 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %53, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load i32*, i32** %58, align 8
  %60 = load i32*, i32** %7, align 8
  %61 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %62 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %61) #3
  %63 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %55, i32* %59, i32* %60, %"class.std::allocator.10"* dereferenceable(1) %62)
          to label %64 unwind label %71

; <label>:64:                                     ; preds = %44
  store i32* %63, i32** %8, align 8
  %65 = load i32*, i32** %8, align 8
  %66 = load i64, i64* %4, align 8
  %67 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %68 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %67) #3
  %69 = invoke i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %65, i64 %66, %"class.std::allocator.10"* dereferenceable(1) %68)
          to label %70 unwind label %71

; <label>:70:                                     ; preds = %64
  store i32* %69, i32** %8, align 8
  br label %163

; <label>:71:                                     ; preds = %64, %44
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %9, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %10, align 4
  br label %75

; <label>:75:                                     ; preds = %71
  %76 = load i32, i32* @x.346
  %77 = load i32, i32* @y.347
  %78 = sub i32 %76, 1376378198
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 1376378198
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %373

; <label>:90:                                     ; preds = %75, %373
  %91 = load i8*, i8** %9, align 8
  %92 = call i8* @__cxa_begin_catch(i8* %91) #3
  %93 = load i32*, i32** %7, align 8
  %94 = load i32*, i32** %8, align 8
  %95 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %96 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %95) #3
  %97 = load i32, i32* @x.346
  %98 = load i32, i32* @y.347
  %99 = add i32 %97, -747102772
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, -747102772
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %373

; <label>:111:                                    ; preds = %90
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %93, i32* %94, %"class.std::allocator.10"* dereferenceable(1) %96)
          to label %112 unwind label %117

; <label>:112:                                    ; preds = %111
  %113 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %114 = load i32*, i32** %7, align 8
  %115 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.9"* %113, i32* %114, i64 %115)
          to label %116 unwind label %117

; <label>:116:                                    ; preds = %112
  invoke void @__cxa_rethrow() #12
          to label %330 unwind label %117

; <label>:117:                                    ; preds = %116, %112, %111
  %118 = load i32, i32* @x.346
  %119 = load i32, i32* @y.347
  %120 = add i32 %118, 1595572454
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, 1595572454
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %380

; <label>:144:                                    ; preds = %117, %380
  %145 = landingpad { i8*, i32 }
          cleanup
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %9, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %10, align 4
  %148 = load i32, i32* @x.346
  %149 = load i32, i32* @y.347
  %150 = sub i32 0, 1
  %151 = add i32 %148, %150
  %152 = sub i32 %148, 1
  %153 = mul i32 %148, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %149, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  br i1 %159, label %161, label %380

; <label>:161:                                    ; preds = %144
  invoke void @__cxa_end_catch()
          to label %162 unwind label %285

; <label>:162:                                    ; preds = %161
  br label %280

; <label>:163:                                    ; preds = %70
  %164 = load i32, i32* @x.346
  %165 = load i32, i32* @y.347
  %166 = sub i32 0, 1
  %167 = add i32 %164, %166
  %168 = sub i32 %164, 1
  %169 = mul i32 %164, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %165, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  br i1 %175, label %177, label %384

; <label>:177:                                    ; preds = %163, %384
  %178 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %179 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %178, i32 0, i32 0
  %180 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %179, i32 0, i32 0
  %181 = load i32*, i32** %180, align 8
  %182 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %183 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %182, i32 0, i32 0
  %184 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %183, i32 0, i32 1
  %185 = load i32*, i32** %184, align 8
  %186 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %187 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %186) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %181, i32* %185, %"class.std::allocator.10"* dereferenceable(1) %187)
  %188 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %189 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %190 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %189, i32 0, i32 0
  %191 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %190, i32 0, i32 0
  %192 = load i32*, i32** %191, align 8
  %193 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %194 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %193, i32 0, i32 0
  %195 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %194, i32 0, i32 2
  %196 = load i32*, i32** %195, align 8
  %197 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %198 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %197, i32 0, i32 0
  %199 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %198, i32 0, i32 0
  %200 = load i32*, i32** %199, align 8
  %201 = ptrtoint i32* %196 to i64
  %202 = ptrtoint i32* %200 to i64
  %203 = add i64 %201, 1703094018016097801
  %204 = sub i64 %203, %202
  %205 = sub i64 %204, 1703094018016097801
  %206 = sub i64 %201, %202
  %207 = sdiv exact i64 %205, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.9"* %188, i32* %192, i64 %207)
  %208 = load i32*, i32** %7, align 8
  %209 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %210 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %209, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %210, i32 0, i32 0
  store i32* %208, i32** %211, align 8
  %212 = load i32*, i32** %8, align 8
  %213 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %214 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %213, i32 0, i32 0
  %215 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %214, i32 0, i32 1
  store i32* %212, i32** %215, align 8
  %216 = load i32*, i32** %7, align 8
  %217 = load i64, i64* %5, align 8
  %218 = getelementptr inbounds i32, i32* %216, i64 %217
  %219 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %220 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %219, i32 0, i32 0
  %221 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %220, i32 0, i32 2
  store i32* %218, i32** %221, align 8
  %222 = load i32, i32* @x.346
  %223 = load i32, i32* @y.347
  %224 = add i32 %222, -2046471529
  %225 = sub i32 %224, 1
  %226 = sub i32 %225, -2046471529
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = xor i1 %230, true
  %233 = xor i1 %231, true
  %234 = xor i1 false, true
  %235 = and i1 %232, false
  %236 = and i1 %230, %234
  %237 = and i1 %233, false
  %238 = and i1 %231, %234
  %239 = or i1 %235, %236
  %240 = or i1 %237, %238
  %241 = xor i1 %239, %240
  %242 = or i1 %232, %233
  %243 = xor i1 %242, true
  %244 = or i1 false, %234
  %245 = and i1 %243, %244
  %246 = or i1 %241, %245
  %247 = or i1 %230, %231
  br i1 %246, label %248, label %384

; <label>:248:                                    ; preds = %177
  br label %249

; <label>:249:                                    ; preds = %248, %32
  %250 = load i32, i32* @x.346
  %251 = load i32, i32* @y.347
  %252 = sub i32 0, 1
  %253 = add i32 %250, %252
  %254 = sub i32 %250, 1
  %255 = mul i32 %250, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %251, 10
  %259 = and i1 %257, %258
  %260 = xor i1 %257, %258
  %261 = or i1 %259, %260
  %262 = or i1 %257, %258
  br i1 %261, label %263, label %466

; <label>:263:                                    ; preds = %249, %466
  %264 = load i32, i32* @x.346
  %265 = load i32, i32* @y.347
  %266 = add i32 %264, -289339269
  %267 = sub i32 %266, 1
  %268 = sub i32 %267, -289339269
  %269 = sub i32 %264, 1
  %270 = mul i32 %264, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %265, 10
  %274 = and i1 %272, %273
  %275 = xor i1 %272, %273
  %276 = or i1 %274, %275
  %277 = or i1 %272, %273
  br i1 %276, label %278, label %466

; <label>:278:                                    ; preds = %263
  br label %279

; <label>:279:                                    ; preds = %278, %2
  ret void

; <label>:280:                                    ; preds = %162
  %281 = load i8*, i8** %9, align 8
  %282 = load i32, i32* %10, align 4
  %283 = insertvalue { i8*, i32 } undef, i8* %281, 0
  %284 = insertvalue { i8*, i32 } %283, i32 %282, 1
  resume { i8*, i32 } %284

; <label>:285:                                    ; preds = %161
  %286 = load i32, i32* @x.346
  %287 = load i32, i32* @y.347
  %288 = add i32 %286, -330832561
  %289 = sub i32 %288, 1
  %290 = sub i32 %289, -330832561
  %291 = sub i32 %286, 1
  %292 = mul i32 %286, %290
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %287, 10
  %296 = and i1 %294, %295
  %297 = xor i1 %294, %295
  %298 = or i1 %296, %297
  %299 = or i1 %294, %295
  br i1 %298, label %300, label %467

; <label>:300:                                    ; preds = %285, %467
  %301 = landingpad { i8*, i32 }
          catch i8* null
  %302 = extractvalue { i8*, i32 } %301, 0
  call void @__clang_call_terminate(i8* %302) #8
  %303 = load i32, i32* @x.346
  %304 = load i32, i32* @y.347
  %305 = sub i32 %303, -1268535384
  %306 = sub i32 %305, 1
  %307 = add i32 %306, -1268535384
  %308 = sub i32 %303, 1
  %309 = mul i32 %303, %307
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %304, 10
  %313 = xor i1 %311, true
  %314 = xor i1 %312, true
  %315 = xor i1 false, true
  %316 = and i1 %313, false
  %317 = and i1 %311, %315
  %318 = and i1 %314, false
  %319 = and i1 %312, %315
  %320 = or i1 %316, %317
  %321 = or i1 %318, %319
  %322 = xor i1 %320, %321
  %323 = or i1 %313, %314
  %324 = xor i1 %323, true
  %325 = or i1 false, %315
  %326 = and i1 %324, %325
  %327 = or i1 %322, %326
  %328 = or i1 %311, %312
  br i1 %327, label %329, label %467

; <label>:329:                                    ; preds = %300
  unreachable

; <label>:330:                                    ; preds = %116
  %331 = load i32, i32* @x.346
  %332 = load i32, i32* @y.347
  %333 = sub i32 %331, 807419166
  %334 = sub i32 %333, 1
  %335 = add i32 %334, 807419166
  %336 = sub i32 %331, 1
  %337 = mul i32 %331, %335
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %332, 10
  %341 = and i1 %339, %340
  %342 = xor i1 %339, %340
  %343 = or i1 %341, %342
  %344 = or i1 %339, %340
  br i1 %343, label %345, label %470

; <label>:345:                                    ; preds = %330, %470
  %346 = load i32, i32* @x.346
  %347 = load i32, i32* @y.347
  %348 = add i32 %346, 184566767
  %349 = sub i32 %348, 1
  %350 = sub i32 %349, 184566767
  %351 = sub i32 %346, 1
  %352 = mul i32 %346, %350
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %347, 10
  %356 = xor i1 %354, true
  %357 = xor i1 %355, true
  %358 = xor i1 true, true
  %359 = and i1 %356, true
  %360 = and i1 %354, %358
  %361 = and i1 %357, true
  %362 = and i1 %355, %358
  %363 = or i1 %359, %360
  %364 = or i1 %361, %362
  %365 = xor i1 %363, %364
  %366 = or i1 %356, %357
  %367 = xor i1 %366, true
  %368 = or i1 true, %358
  %369 = and i1 %367, %368
  %370 = or i1 %365, %369
  %371 = or i1 %354, %355
  br i1 %370, label %372, label %470

; <label>:372:                                    ; preds = %345
  unreachable

; <label>:373:                                    ; preds = %90, %75
  %374 = load i8*, i8** %9, align 8
  %375 = call i8* @__cxa_begin_catch(i8* %374) #3
  %376 = load i32*, i32** %7, align 8
  %377 = load i32*, i32** %8, align 8
  %378 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %379 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %378) #3
  br label %90

; <label>:380:                                    ; preds = %144, %117
  %381 = landingpad { i8*, i32 }
          cleanup
  %382 = extractvalue { i8*, i32 } %381, 0
  store i8* %382, i8** %9, align 8
  %383 = extractvalue { i8*, i32 } %381, 1
  store i32 %383, i32* %10, align 4
  br label %144

; <label>:384:                                    ; preds = %177, %163
  %385 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %386 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %385, i32 0, i32 0
  %387 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %386, i32 0, i32 0
  %388 = load i32*, i32** %387, align 8
  %389 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %390 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %389, i32 0, i32 0
  %391 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %390, i32 0, i32 1
  %392 = load i32*, i32** %391, align 8
  %393 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %394 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %393) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %388, i32* %392, %"class.std::allocator.10"* dereferenceable(1) %394)
  %395 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %396 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %397 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %396, i32 0, i32 0
  %398 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %397, i32 0, i32 0
  %399 = load i32*, i32** %398, align 8
  %400 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %401 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %400, i32 0, i32 0
  %402 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %401, i32 0, i32 2
  %403 = load i32*, i32** %402, align 8
  %404 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %405 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %404, i32 0, i32 0
  %406 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %405, i32 0, i32 0
  %407 = load i32*, i32** %406, align 8
  %408 = ptrtoint i32* %403 to i64
  %409 = ptrtoint i32* %407 to i64
  %410 = sub i64 0, -2949929315322688121
  %411 = sub i64 %410, %408
  %412 = add i64 %411, -2949929315322688121
  %413 = sub i64 0, %408
  %414 = sub i64 0, %409
  %415 = sub i64 %412, %414
  %416 = add i64 %412, %409
  %417 = shl i64 %408, %409
  %418 = add i64 0, -1070506748605758400
  %419 = sub i64 %418, %408
  %420 = sub i64 %419, -1070506748605758400
  %421 = sub i64 0, %408
  %422 = sub i64 0, %409
  %423 = sub i64 %420, %422
  %424 = add i64 %420, %409
  %425 = sub i64 %408, -6205748470957612164
  %426 = sub i64 %425, %409
  %427 = add i64 %426, -6205748470957612164
  %428 = sub i64 %408, %409
  %429 = mul i64 %427, %409
  %430 = sub i64 0, %409
  %431 = add i64 %408, %430
  %432 = sub i64 %408, %409
  %433 = shl i64 %431, 4
  %434 = sub i64 %431, 3902019836758290772
  %435 = sub i64 %434, 4
  %436 = add i64 %435, 3902019836758290772
  %437 = sub i64 %431, 4
  %438 = mul i64 %436, 4
  %439 = sub i64 0, %431
  %440 = add i64 0, %439
  %441 = sub i64 0, %431
  %442 = sub i64 %440, 2687543999313115298
  %443 = add i64 %442, 4
  %444 = add i64 %443, 2687543999313115298
  %445 = add i64 %440, 4
  %446 = sub i64 %431, 7813952216274575748
  %447 = sub i64 %446, 4
  %448 = add i64 %447, 7813952216274575748
  %449 = sub i64 %431, 4
  %450 = mul i64 %448, 4
  %451 = sdiv exact i64 %431, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.9"* %395, i32* %399, i64 %451)
  %452 = load i32*, i32** %7, align 8
  %453 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %454 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %453, i32 0, i32 0
  %455 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %454, i32 0, i32 0
  store i32* %452, i32** %455, align 8
  %456 = load i32*, i32** %8, align 8
  %457 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %458 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %457, i32 0, i32 0
  %459 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %458, i32 0, i32 1
  store i32* %456, i32** %459, align 8
  %460 = load i32*, i32** %7, align 8
  %461 = load i64, i64* %5, align 8
  %462 = getelementptr inbounds i32, i32* %460, i64 %461
  %463 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %464 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %463, i32 0, i32 0
  %465 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %464, i32 0, i32 2
  store i32* %462, i32** %465, align 8
  br label %177

; <label>:466:                                    ; preds = %263, %249
  br label %263

; <label>:467:                                    ; preds = %300, %285
  %468 = landingpad { i8*, i32 }
          catch i8* null
  %469 = extractvalue { i8*, i32 } %468, 0
  call void @__clang_call_terminate(i8* %469) #8
  br label %300

; <label>:470:                                    ; preds = %345, %330
  br label %345
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.8"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %12 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %11) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %6, i32* %10, %"class.std::allocator.10"* dereferenceable(1) %12)
          to label %13 unwind label %47

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.348
  %15 = load i32, i32* @y.349
  %16 = sub i32 %14, -884101579
  %17 = sub i32 %16, 1
  %18 = add i32 %17, -884101579
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %80

; <label>:28:                                     ; preds = %13, %80
  %29 = load i32*, i32** %4, align 8
  %30 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %31, i32 0, i32 1
  store i32* %29, i32** %32, align 8
  %33 = load i32, i32* @x.348
  %34 = load i32, i32* @y.349
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %80

; <label>:46:                                     ; preds = %28
  ret void

; <label>:47:                                     ; preds = %2
  %48 = load i32, i32* @x.348
  %49 = load i32, i32* @y.349
  %50 = add i32 %48, -789734598
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -789734598
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %85

; <label>:62:                                     ; preds = %47, %85
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #8
  %65 = load i32, i32* @x.348
  %66 = load i32, i32* @y.349
  %67 = sub i32 %65, -1741379885
  %68 = sub i32 %67, 1
  %69 = add i32 %68, -1741379885
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %85

; <label>:79:                                     ; preds = %62
  unreachable

; <label>:80:                                     ; preds = %28, %13
  %81 = load i32*, i32** %4, align 8
  %82 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %83, i32 0, i32 1
  store i32* %81, i32** %84, align 8
  br label %28

; <label>:85:                                     ; preds = %62, %47
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  call void @__clang_call_terminate(i8* %87) #8
  br label %62
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32*, i64, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32* %7, i64 %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.8"*
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %12 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  store %"class.std::vector.8"* %12, %"class.std::vector.8"** %6
  %13 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %14 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.8"* %13) #3
  %15 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %16 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %15) #3
  %17 = sub i64 %14, 469734429496982081
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 469734429496982081
  %20 = sub i64 %14, %16
  store i64 %19, i64* %5
  %21 = load i64, i64* %8, align 8
  store i64 %21, i64* %4
  %22 = alloca i32
  store i32 -383340681, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %63
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -383340681, label %27
    i32 798602163, label %32
    i32 22245861, label %34
    i32 -2145585003, label %50
    i32 238436682, label %56
    i32 911889496, label %59
    i32 -1614340472, label %61
  ]

; <label>:26:                                     ; preds = %24
  br label %63

; <label>:27:                                     ; preds = %24
  %28 = load volatile i64, i64* %5
  %29 = load volatile i64, i64* %4
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 798602163, i32 22245861
  store i32 %31, i32* %22
  br label %63

; <label>:32:                                     ; preds = %24
  %33 = load i8*, i8** %9, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %33) #12
  unreachable

; <label>:34:                                     ; preds = %24
  %35 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %36 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %35) #3
  %37 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %38 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %37) #3
  store i64 %38, i64* %11, align 8
  %39 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %8)
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %36, -7402377015347289685
  %42 = add i64 %41, %40
  %43 = sub i64 %42, -7402377015347289685
  %44 = add i64 %36, %40
  store i64 %43, i64* %10, align 8
  %45 = load i64, i64* %10, align 8
  %46 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %47 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %46) #3
  %48 = icmp ult i64 %45, %47
  %49 = select i1 %48, i32 238436682, i32 -2145585003
  store i32 %49, i32* %22
  br label %63

; <label>:50:                                     ; preds = %24
  %51 = load i64, i64* %10, align 8
  %52 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %53 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.8"* %52) #3
  %54 = icmp ugt i64 %51, %53
  %55 = select i1 %54, i32 238436682, i32 911889496
  store i32 %55, i32* %22
  br label %63

; <label>:56:                                     ; preds = %24
  %57 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %58 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.8"* %57) #3
  store i32 -1614340472, i32* %22
  store i64 %58, i64* %23
  br label %63

; <label>:59:                                     ; preds = %24
  %60 = load i64, i64* %10, align 8
  store i32 -1614340472, i32* %22
  store i64 %60, i64* %23
  br label %63

; <label>:61:                                     ; preds = %24
  %62 = load i64, i64* %23
  ret i64 %62

; <label>:63:                                     ; preds = %59, %56, %50, %34, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca %"struct.std::_Vector_base.9"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.std::_Vector_base.9"* %8, %"struct.std::_Vector_base.9"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 325199092, i32* %10
  %11 = alloca i32*
  br label %12

; <label>:12:                                     ; preds = %2, %73
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 325199092, label %15
    i32 -23614405, label %19
    i32 -327109734, label %25
    i32 -797869303, label %26
    i32 2016435142, label %54
    i32 -2081630586, label %70
    i32 -821191163, label %72
  ]

; <label>:14:                                     ; preds = %12
  br label %73

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -23614405, i32 -327109734
  store i32 %18, i32* %10
  br label %73

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.10"*
  %23 = load i64, i64* %7, align 8
  %24 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.10"* dereferenceable(1) %22, i64 %23)
  store i32 -797869303, i32* %10
  store i32* %24, i32** %11
  br label %73

; <label>:25:                                     ; preds = %12
  store i32 -797869303, i32* %10
  store i32* null, i32** %11
  br label %73

; <label>:26:                                     ; preds = %12
  %27 = load i32*, i32** %11
  store i32* %27, i32** %3
  %28 = load i32, i32* @x.354
  %29 = load i32, i32* @y.355
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 2016435142, i32 -821191163
  store i32 %53, i32* %10
  br label %73

; <label>:54:                                     ; preds = %12
  %55 = load i32, i32* @x.354
  %56 = load i32, i32* @y.355
  %57 = sub i32 %55, -1876951096
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -1876951096
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -2081630586, i32 -821191163
  store i32 %69, i32* %10
  br label %73

; <label>:70:                                     ; preds = %12
  %71 = load volatile i32*, i32** %3
  ret i32* %71

; <label>:72:                                     ; preds = %12
  store i32 2016435142, i32* %10
  br label %73

; <label>:73:                                     ; preds = %72, %54, %26, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.24", align 8
  %10 = alloca %"class.std::move_iterator.24", align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %11 = load i32*, i32** %5, align 8
  %12 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %9, i32 0, i32 0
  store i32* %12, i32** %13, align 8
  %14 = load i32*, i32** %6, align 8
  %15 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %10, i32 0, i32 0
  store i32* %15, i32** %16, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %20, i32* %22, i32* %17, %"class.std::allocator.10"* dereferenceable(1) %18)
  ret i32* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32*, i64) #0 comdat {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.358
  %7 = load i32, i32* @y.359
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1591047030, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1591047030, label %19
    i32 2085532362, label %39
    i32 1108829997, label %61
    i32 -1356252596, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2085532362, i32 -1356252596
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i64, align 8
  %42 = alloca i8, align 1
  store i32* %0, i32** %40, align 8
  store i64 %1, i64* %41, align 8
  store i8 1, i8* %42, align 1
  %43 = load i32*, i32** %40, align 8
  %44 = load i64, i64* %41, align 8
  %45 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %43, i64 %44)
  store i32* %45, i32** %3
  %46 = load i32, i32* @x.358
  %47 = load i32, i32* @y.359
  %48 = sub i32 %46, -122136026
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -122136026
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1108829997, i32 -1356252596
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile i32*, i32** %3
  ret i32* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca i32*, align 8
  %65 = alloca i64, align 8
  %66 = alloca i8, align 1
  store i32* %0, i32** %64, align 8
  store i64 %1, i64* %65, align 8
  store i8 1, i8* %66, align 1
  %67 = load i32*, i32** %64, align 8
  %68 = load i64, i64* %65, align 8
  %69 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %67, i64 %68)
  store i32 2085532362, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32*, i64) #0 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  store i32 0, i32* %5, align 4
  %8 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %6, i64 %7, i32* dereferenceable(4) %5)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i32*
  %5 = alloca i64*
  %6 = alloca i32*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.364
  %11 = load i32, i32* @y.365
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 1484368551, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %177
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1484368551, label %23
    i32 1030969486, label %43
    i32 1081161635, label %82
    i32 1689861999, label %83
    i32 -783630789, label %88
    i32 1057419487, label %93
    i32 2020942404, label %106
    i32 -865519656, label %134
    i32 1698765311, label %163
    i32 -1497714164, label %165
    i32 -1010788966, label %174
  ]

; <label>:22:                                     ; preds = %20
  br label %177

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1030969486, i32 -1497714164
  store i32 %42, i32* %19
  br label %177

; <label>:43:                                     ; preds = %20
  %44 = alloca i32*, align 8
  store i32** %44, i32*** %7
  %45 = alloca i64, align 8
  %46 = alloca i32*, align 8
  %47 = alloca i32, align 4
  store i32* %47, i32** %6
  %48 = alloca i64, align 8
  store i64* %48, i64** %5
  %49 = load volatile i32**, i32*** %7
  store i32* %0, i32** %49, align 8
  store i64 %1, i64* %45, align 8
  store i32* %2, i32** %46, align 8
  %50 = load i32*, i32** %46, align 8
  %51 = load i32, i32* %50, align 4
  %52 = load volatile i32*, i32** %6
  store i32 %51, i32* %52, align 4
  %53 = load i64, i64* %45, align 8
  %54 = load volatile i64*, i64** %5
  store i64 %53, i64* %54, align 8
  %55 = load i32, i32* @x.364
  %56 = load i32, i32* @y.365
  %57 = add i32 %55, 1911335104
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 1911335104
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 1081161635, i32 -1497714164
  store i32 %81, i32* %19
  br label %177

; <label>:82:                                     ; preds = %20
  store i32 1689861999, i32* %19
  br label %177

; <label>:83:                                     ; preds = %20
  %84 = load volatile i64*, i64** %5
  %85 = load i64, i64* %84, align 8
  %86 = icmp ugt i64 %85, 0
  %87 = select i1 %86, i32 -783630789, i32 2020942404
  store i32 %87, i32* %19
  br label %177

; <label>:88:                                     ; preds = %20
  %89 = load volatile i32*, i32** %6
  %90 = load i32, i32* %89, align 4
  %91 = load volatile i32**, i32*** %7
  %92 = load i32*, i32** %91, align 8
  store i32 %90, i32* %92, align 4
  store i32 1057419487, i32* %19
  br label %177

; <label>:93:                                     ; preds = %20
  %94 = load volatile i64*, i64** %5
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 0, %95
  %97 = sub i64 0, -1
  %98 = add i64 %96, %97
  %99 = sub i64 0, %98
  %100 = add i64 %95, -1
  %101 = load volatile i64*, i64** %5
  store i64 %99, i64* %101, align 8
  %102 = load volatile i32**, i32*** %7
  %103 = load i32*, i32** %102, align 8
  %104 = getelementptr inbounds i32, i32* %103, i32 1
  %105 = load volatile i32**, i32*** %7
  store i32* %104, i32** %105, align 8
  store i32 1689861999, i32* %19
  br label %177

; <label>:106:                                    ; preds = %20
  %107 = load i32, i32* @x.364
  %108 = load i32, i32* @y.365
  %109 = add i32 %107, -1087329064
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, -1087329064
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 false, true
  %120 = and i1 %117, false
  %121 = and i1 %115, %119
  %122 = and i1 %118, false
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 false, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  %133 = select i1 %131, i32 -865519656, i32 -1010788966
  store i32 %133, i32* %19
  br label %177

; <label>:134:                                    ; preds = %20
  %135 = load volatile i32**, i32*** %7
  %136 = load i32*, i32** %135, align 8
  store i32* %136, i32** %4
  %137 = load i32, i32* @x.364
  %138 = load i32, i32* @y.365
  %139 = sub i32 0, 1
  %140 = add i32 %137, %139
  %141 = sub i32 %137, 1
  %142 = mul i32 %137, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %138, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  %162 = select i1 %160, i32 1698765311, i32 -1010788966
  store i32 %162, i32* %19
  br label %177

; <label>:163:                                    ; preds = %20
  %164 = load volatile i32*, i32** %4
  ret i32* %164

; <label>:165:                                    ; preds = %20
  %166 = alloca i32*, align 8
  %167 = alloca i64, align 8
  %168 = alloca i32*, align 8
  %169 = alloca i32, align 4
  %170 = alloca i64, align 8
  store i32* %0, i32** %166, align 8
  store i64 %1, i64* %167, align 8
  store i32* %2, i32** %168, align 8
  %171 = load i32*, i32** %168, align 8
  %172 = load i32, i32* %171, align 4
  store i32 %172, i32* %169, align 4
  %173 = load i64, i64* %167, align 8
  store i64 %173, i64* %170, align 8
  store i32 1030969486, i32* %19
  br label %177

; <label>:174:                                    ; preds = %20
  %175 = load volatile i32**, i32*** %7
  %176 = load i32*, i32** %175, align 8
  store i32 -865519656, i32* %19
  br label %177

; <label>:177:                                    ; preds = %174, %165, %134, %106, %93, %88, %83, %82, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #5 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.10"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.10"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.10"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.378
  %7 = load i32, i32* @y.379
  %8 = add i32 %6, -1149945551
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1149945551
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -161301049, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -161301049, label %20
    i32 -149819353, label %28
    i32 939586116, label %62
    i32 -1442270909, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -149819353, i32 -1442270909
  store i32 %27, i32* %16
  br label %71

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.10"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %29, align 8
  %32 = bitcast %"class.std::allocator.10"* %31 to %"class.__gnu_cxx::new_allocator.11"*
  %33 = load i64, i64* %30, align 8
  %34 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"* %32, i64 %33, i8* null)
  store i32* %34, i32** %3
  %35 = load i32, i32* @x.378
  %36 = load i32, i32* @y.379
  %37 = add i32 %35, -664594444
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -664594444
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 939586116, i32 -1442270909
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile i32*, i32** %3
  ret i32* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.10"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %65, align 8
  %68 = bitcast %"class.std::allocator.10"* %67 to %"class.__gnu_cxx::new_allocator.11"*
  %69 = load i64, i64* %66, align 8
  %70 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"* %68, i64 %69, i8* null)
  store i32 -149819353, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 2028116458, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 2028116458, label %16
    i32 -1413273496, label %21
    i32 -1789617174, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1413273496, i32 -1789617174
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 4
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i32*
  ret i32* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.24", align 8
  %6 = alloca %"class.std::move_iterator.24", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.24", align 8
  %10 = alloca %"class.std::move_iterator.24", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.24"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.24"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.24"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.24"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %10, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %19, i32* %21, i32* %17)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.24", align 8
  %3 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  %4 = load i32*, i32** %3, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.24"* %2, i32* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %2, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  ret i32* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.24", align 8
  %5 = alloca %"class.std::move_iterator.24", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.24", align 8
  %9 = alloca %"class.std::move_iterator.24", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.24"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.24"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.24"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.24"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.388
  %8 = load i32, i32* @y.389
  %9 = sub i32 %7, 96046610
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 96046610
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -628679293, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %82
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -628679293, label %21
    i32 -701398103, label %29
    i32 1295398969, label %62
    i32 1512815246, label %64
  ]

; <label>:20:                                     ; preds = %18
  br label %82

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -701398103, i32 1512815246
  store i32 %28, i32* %17
  br label %82

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator.24", align 8
  %31 = alloca %"class.std::move_iterator.24", align 8
  %32 = alloca i32*, align 8
  %33 = alloca %"class.std::move_iterator.24", align 8
  %34 = alloca %"class.std::move_iterator.24", align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %30, i32 0, i32 0
  store i32* %0, i32** %35, align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %31, i32 0, i32 0
  store i32* %1, i32** %36, align 8
  store i32* %2, i32** %32, align 8
  %37 = bitcast %"class.std::move_iterator.24"* %33 to i8*
  %38 = bitcast %"class.std::move_iterator.24"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = bitcast %"class.std::move_iterator.24"* %34 to i8*
  %40 = bitcast %"class.std::move_iterator.24"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = load i32*, i32** %32, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %33, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %34, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %43, i32* %45, i32* %41)
  store i32* %46, i32** %4
  %47 = load i32, i32* @x.388
  %48 = load i32, i32* @y.389
  %49 = add i32 %47, -276720019
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -276720019
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1295398969, i32 1512815246
  store i32 %61, i32* %17
  br label %82

; <label>:62:                                     ; preds = %18
  %63 = load volatile i32*, i32** %4
  ret i32* %63

; <label>:64:                                     ; preds = %18
  %65 = alloca %"class.std::move_iterator.24", align 8
  %66 = alloca %"class.std::move_iterator.24", align 8
  %67 = alloca i32*, align 8
  %68 = alloca %"class.std::move_iterator.24", align 8
  %69 = alloca %"class.std::move_iterator.24", align 8
  %70 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %65, i32 0, i32 0
  store i32* %0, i32** %70, align 8
  %71 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %66, i32 0, i32 0
  store i32* %1, i32** %71, align 8
  store i32* %2, i32** %67, align 8
  %72 = bitcast %"class.std::move_iterator.24"* %68 to i8*
  %73 = bitcast %"class.std::move_iterator.24"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 8, i32 8, i1 false)
  %74 = bitcast %"class.std::move_iterator.24"* %69 to i8*
  %75 = bitcast %"class.std::move_iterator.24"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = load i32*, i32** %67, align 8
  %77 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %68, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %69, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %78, i32* %80, i32* %76)
  store i32 -701398103, i32* %17
  br label %82

; <label>:82:                                     ; preds = %64, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.390
  %8 = load i32, i32* @y.391
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1956009465, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %85
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1956009465, label %20
    i32 -361355839, label %28
    i32 1426906079, label %63
    i32 71419519, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %85

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -361355839, i32 71419519
  store i32 %27, i32* %16
  br label %85

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator.24", align 8
  %30 = alloca %"class.std::move_iterator.24", align 8
  %31 = alloca i32*, align 8
  %32 = alloca %"class.std::move_iterator.24", align 8
  %33 = alloca %"class.std::move_iterator.24", align 8
  %34 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %29, i32 0, i32 0
  store i32* %0, i32** %34, align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %30, i32 0, i32 0
  store i32* %1, i32** %35, align 8
  store i32* %2, i32** %31, align 8
  %36 = bitcast %"class.std::move_iterator.24"* %32 to i8*
  %37 = bitcast %"class.std::move_iterator.24"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %32, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %39)
  %41 = bitcast %"class.std::move_iterator.24"* %33 to i8*
  %42 = bitcast %"class.std::move_iterator.24"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %33, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %44)
  %46 = load i32*, i32** %31, align 8
  %47 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %40, i32* %45, i32* %46)
  store i32* %47, i32** %4
  %48 = load i32, i32* @x.390
  %49 = load i32, i32* @y.391
  %50 = add i32 %48, 1532089474
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 1532089474
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1426906079, i32 71419519
  store i32 %62, i32* %16
  br label %85

; <label>:63:                                     ; preds = %17
  %64 = load volatile i32*, i32** %4
  ret i32* %64

; <label>:65:                                     ; preds = %17
  %66 = alloca %"class.std::move_iterator.24", align 8
  %67 = alloca %"class.std::move_iterator.24", align 8
  %68 = alloca i32*, align 8
  %69 = alloca %"class.std::move_iterator.24", align 8
  %70 = alloca %"class.std::move_iterator.24", align 8
  %71 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %66, i32 0, i32 0
  store i32* %0, i32** %71, align 8
  %72 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %67, i32 0, i32 0
  store i32* %1, i32** %72, align 8
  store i32* %2, i32** %68, align 8
  %73 = bitcast %"class.std::move_iterator.24"* %69 to i8*
  %74 = bitcast %"class.std::move_iterator.24"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %69, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %76)
  %78 = bitcast %"class.std::move_iterator.24"* %70 to i8*
  %79 = bitcast %"class.std::move_iterator.24"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 8, i1 false)
  %80 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %70, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %81)
  %83 = load i32*, i32** %68, align 8
  %84 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %77, i32* %82, i32* %83)
  store i32 -361355839, i32* %16
  br label %85

; <label>:85:                                     ; preds = %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.394
  %6 = load i32, i32* @y.395
  %7 = add i32 %5, -943181218
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -943181218
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1380391482, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1380391482, label %19
    i32 -658927058, label %27
    i32 1536136845, label %51
    i32 1690588346, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -658927058, i32 1690588346
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.24", align 8
  %29 = alloca %"class.std::move_iterator.24", align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %28, i32 0, i32 0
  store i32* %0, i32** %30, align 8
  %31 = bitcast %"class.std::move_iterator.24"* %29 to i8*
  %32 = bitcast %"class.std::move_iterator.24"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %29, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %34)
  store i32* %35, i32** %2
  %36 = load i32, i32* @x.394
  %37 = load i32, i32* @y.395
  %38 = add i32 %36, 1325160545
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1325160545
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 1536136845, i32 1690588346
  store i32 %50, i32* %15
  br label %62

; <label>:51:                                     ; preds = %16
  %52 = load volatile i32*, i32** %2
  ret i32* %52

; <label>:53:                                     ; preds = %16
  %54 = alloca %"class.std::move_iterator.24", align 8
  %55 = alloca %"class.std::move_iterator.24", align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %54, i32 0, i32 0
  store i32* %0, i32** %56, align 8
  %57 = bitcast %"class.std::move_iterator.24"* %55 to i8*
  %58 = bitcast %"class.std::move_iterator.24"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 8, i1 false)
  %59 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %55, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %60)
  store i32 -658927058, i32* %15
  br label %62

; <label>:62:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32*, i32** %5, align 8
  %11 = ptrtoint i32* %9 to i64
  %12 = ptrtoint i32* %10 to i64
  %13 = add i64 %11, -109187132550366775
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -109187132550366775
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 4
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 -711962286, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -711962286, label %23
    i32 1756892526, label %27
    i32 370652514, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 1756892526, i32 370652514
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i32*, i32** %7, align 8
  %29 = bitcast i32* %28 to i8*
  %30 = load i32*, i32** %5, align 8
  %31 = bitcast i32* %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 4, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 4, i1 false)
  store i32 370652514, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i32*, i32** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  ret i32* %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32*) #0 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.400
  %6 = load i32, i32* @y.401
  %7 = add i32 %5, -1950252137
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1950252137
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1139599731, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1139599731, label %19
    i32 1381483537, label %39
    i32 765916946, label %69
    i32 772993671, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1381483537, i32 772993671
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.24", align 8
  %41 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %40, i32 0, i32 0
  store i32* %0, i32** %41, align 8
  %42 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.24"* %40)
  store i32* %42, i32** %2
  %43 = load i32, i32* @x.400
  %44 = load i32, i32* @y.401
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 765916946, i32 772993671
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile i32*, i32** %2
  ret i32* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.std::move_iterator.24", align 8
  %73 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %72, i32 0, i32 0
  store i32* %0, i32** %73, align 8
  %74 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.24"* %72)
  store i32 1381483537, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.24"*, align 8
  store %"class.std::move_iterator.24"* %0, %"class.std::move_iterator.24"** %2, align 8
  %3 = load %"class.std::move_iterator.24"*, %"class.std::move_iterator.24"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.24"*, i32*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.404
  %6 = load i32, i32* @y.405
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -768067859, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -768067859, label %18
    i32 -1030836482, label %38
    i32 264982936, label %71
    i32 -122892479, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1030836482, i32 -122892479
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator.24"*, align 8
  %40 = alloca i32*, align 8
  store %"class.std::move_iterator.24"* %0, %"class.std::move_iterator.24"** %39, align 8
  store i32* %1, i32** %40, align 8
  %41 = load %"class.std::move_iterator.24"*, %"class.std::move_iterator.24"** %39, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %41, i32 0, i32 0
  %43 = load i32*, i32** %40, align 8
  store i32* %43, i32** %42, align 8
  %44 = load i32, i32* @x.404
  %45 = load i32, i32* @y.405
  %46 = add i32 %44, -1332304142
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1332304142
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 264982936, i32 -122892479
  store i32 %70, i32* %14
  br label %78

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::move_iterator.24"*, align 8
  %74 = alloca i32*, align 8
  store %"class.std::move_iterator.24"* %0, %"class.std::move_iterator.24"** %73, align 8
  store i32* %1, i32** %74, align 8
  %75 = load %"class.std::move_iterator.24"*, %"class.std::move_iterator.24"** %73, align 8
  %76 = getelementptr inbounds %"class.std::move_iterator.24", %"class.std::move_iterator.24"* %75, i32 0, i32 0
  %77 = load i32*, i32** %74, align 8
  store i32* %77, i32** %76, align 8
  store i32 -1030836482, i32* %14
  br label %78

; <label>:78:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEC2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  invoke void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base.14"* %4)
          to label %5 unwind label %35

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.408
  %7 = load i32, i32* @y.409
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %38

; <label>:19:                                     ; preds = %5, %38
  %20 = load i32, i32* @x.408
  %21 = load i32, i32* @y.409
  %22 = add i32 %20, -1663805193
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -1663805193
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %38

; <label>:34:                                     ; preds = %19
  ret void

; <label>:35:                                     ; preds = %1
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  call void @__clang_call_terminate(i8* %37) #8
  unreachable

; <label>:38:                                     ; preds = %19, %5
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE6resizeEm(%"class.std::vector.13"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.13"*
  %7 = alloca %"class.std::vector.13"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  store %"class.std::vector.13"* %9, %"class.std::vector.13"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %12 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %11) #3
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 765312609, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %198
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 765312609, label %17
    i32 -699629806, label %22
    i32 -537270715, label %31
    i32 826866753, label %47
    i32 315462360, label %66
    i32 1767609615, label %69
    i32 -1956552415, label %78
    i32 -930144268, label %105
    i32 253804817, label %133
    i32 -1109581624, label %134
    i32 -1433927632, label %162
    i32 1547120535, label %190
    i32 1416050113, label %191
    i32 -1259609353, label %196
    i32 -1179158544, label %197
  ]

; <label>:16:                                     ; preds = %14
  br label %198

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -699629806, i32 -537270715
  store i32 %21, i32* %13
  br label %198

; <label>:22:                                     ; preds = %14
  %23 = load i64, i64* %8, align 8
  %24 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %25 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %24) #3
  %26 = sub i64 %23, -4881901792606144568
  %27 = sub i64 %26, %25
  %28 = add i64 %27, -4881901792606144568
  %29 = sub i64 %23, %25
  %30 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  call void @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE17_M_default_appendEm(%"class.std::vector.13"* %30, i64 %28)
  store i32 -1109581624, i32* %13
  br label %198

; <label>:31:                                     ; preds = %14
  %32 = load i32, i32* @x.410
  %33 = load i32, i32* @y.411
  %34 = add i32 %32, -1651592538
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1651592538
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 826866753, i32 1416050113
  store i32 %46, i32* %13
  br label %198

; <label>:47:                                     ; preds = %14
  %48 = load i64, i64* %8, align 8
  %49 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %50 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %49) #3
  %51 = icmp ult i64 %48, %50
  store i1 %51, i1* %3
  %52 = load i32, i32* @x.410
  %53 = load i32, i32* @y.411
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 315462360, i32 1416050113
  store i32 %65, i32* %13
  br label %198

; <label>:66:                                     ; preds = %14
  %67 = load volatile i1, i1* %3
  %68 = select i1 %67, i32 1767609615, i32 -1956552415
  store i32 %68, i32* %13
  br label %198

; <label>:69:                                     ; preds = %14
  %70 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %71 = bitcast %"class.std::vector.13"* %70 to %"struct.std::_Vector_base.14"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"class.std::vector.18"*, %"class.std::vector.18"** %73, align 8
  %75 = load i64, i64* %8, align 8
  %76 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %74, i64 %75
  %77 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  call void @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector.13"* %77, %"class.std::vector.18"* %76) #3
  store i32 -1956552415, i32* %13
  br label %198

; <label>:78:                                     ; preds = %14
  %79 = load i32, i32* @x.410
  %80 = load i32, i32* @y.411
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 -930144268, i32 -1259609353
  store i32 %104, i32* %13
  br label %198

; <label>:105:                                    ; preds = %14
  %106 = load i32, i32* @x.410
  %107 = load i32, i32* @y.411
  %108 = sub i32 %106, -801481527
  %109 = sub i32 %108, 1
  %110 = add i32 %109, -801481527
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 253804817, i32 -1259609353
  store i32 %132, i32* %13
  br label %198

; <label>:133:                                    ; preds = %14
  store i32 -1109581624, i32* %13
  br label %198

; <label>:134:                                    ; preds = %14
  %135 = load i32, i32* @x.410
  %136 = load i32, i32* @y.411
  %137 = sub i32 %135, -78325463
  %138 = sub i32 %137, 1
  %139 = add i32 %138, -78325463
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 true, true
  %148 = and i1 %145, true
  %149 = and i1 %143, %147
  %150 = and i1 %146, true
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 true, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  %161 = select i1 %159, i32 -1433927632, i32 -1179158544
  store i32 %161, i32* %13
  br label %198

; <label>:162:                                    ; preds = %14
  %163 = load i32, i32* @x.410
  %164 = load i32, i32* @y.411
  %165 = add i32 %163, 164091425
  %166 = sub i32 %165, 1
  %167 = sub i32 %166, 164091425
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 false, true
  %176 = and i1 %173, false
  %177 = and i1 %171, %175
  %178 = and i1 %174, false
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 false, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  %189 = select i1 %187, i32 1547120535, i32 -1179158544
  store i32 %189, i32* %13
  br label %198

; <label>:190:                                    ; preds = %14
  ret void

; <label>:191:                                    ; preds = %14
  %192 = load i64, i64* %8, align 8
  %193 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %194 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %193) #3
  %195 = icmp ult i64 %192, %194
  store i32 826866753, i32* %13
  br label %198

; <label>:196:                                    ; preds = %14
  store i32 -930144268, i32* %13
  br label %198

; <label>:197:                                    ; preds = %14
  store i32 -1433927632, i32* %13
  br label %198

; <label>:198:                                    ; preds = %197, %196, %191, %162, %134, %133, %105, %78, %69, %66, %47, %31, %22, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.414
  %5 = load i32, i32* @y.415
  %6 = sub i32 %4, 1888371143
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1888371143
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1784235220, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1784235220, label %18
    i32 1811621030, label %26
    i32 -968815685, label %60
    i32 1808754819, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1811621030, i32 1808754819
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %28 to %"class.std::allocator.15"*
  call void @_ZNSaISt6vectorI8MaxFEdgeIxESaIS1_EEEC2Ev(%"class.std::allocator.15"* %29) #3
  %30 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %28, i32 0, i32 0
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %28, i32 0, i32 1
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %31, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %28, i32 0, i32 2
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %32, align 8
  %33 = load i32, i32* @x.414
  %34 = load i32, i32* @y.415
  %35 = add i32 %33, -1347342761
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1347342761
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -968815685, i32 1808754819
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"** %62, align 8
  %63 = load %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"** %62, align 8
  %64 = bitcast %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %63 to %"class.std::allocator.15"*
  call void @_ZNSaISt6vectorI8MaxFEdgeIxESaIS1_EEEC2Ev(%"class.std::allocator.15"* %64) #3
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %63, i32 0, i32 0
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %63, i32 0, i32 1
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %66, align 8
  %67 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %63, i32 0, i32 2
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %67, align 8
  store i32 1811621030, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI8MaxFEdgeIxESaIS1_EEEC2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.418
  %5 = load i32, i32* @y.419
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 688901599, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 688901599, label %17
    i32 -979767953, label %25
    i32 1323953096, label %43
    i32 565746017, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -979767953, i32 565746017
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %26, align 8
  %28 = load i32, i32* @x.418
  %29 = load i32, i32* @y.419
  %30 = add i32 %28, 1361964755
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1361964755
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1323953096, i32 565746017
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %45, align 8
  store i32 -979767953, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %8 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %10, align 8
  %12 = ptrtoint %"class.std::vector.18"* %7 to i64
  %13 = ptrtoint %"class.std::vector.18"* %11 to i64
  %14 = add i64 %12, -6888041072031428675
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -6888041072031428675
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE17_M_default_appendEm(%"class.std::vector.13"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.422
  %4 = load i32, i32* @y.423
  %5 = sub i32 %3, 1993047438
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1993047438
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %479

; <label>:29:                                     ; preds = %2, %479
  %30 = alloca %"class.std::vector.13"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca %"class.std::vector.18"*, align 8
  %35 = alloca %"class.std::vector.18"*, align 8
  %36 = alloca i8*
  %37 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %30, align 8
  store i64 %1, i64* %31, align 8
  %38 = load %"class.std::vector.13"*, %"class.std::vector.13"** %30, align 8
  %39 = load i64, i64* %31, align 8
  %40 = icmp ne i64 %39, 0
  %41 = load i32, i32* @x.422
  %42 = load i32, i32* @y.423
  %43 = sub i32 %41, 869918487
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 869918487
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %479

; <label>:67:                                     ; preds = %29
  br i1 %40, label %68, label %427

; <label>:68:                                     ; preds = %67
  %69 = load i32, i32* @x.422
  %70 = load i32, i32* @y.423
  %71 = sub i32 %69, 1642157624
  %72 = sub i32 %71, 1
  %73 = add i32 %72, 1642157624
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 false, true
  %82 = and i1 %79, false
  %83 = and i1 %77, %81
  %84 = and i1 %80, false
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 false, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  br i1 %93, label %95, label %491

; <label>:95:                                     ; preds = %68, %491
  %96 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %97 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %96, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %97, i32 0, i32 2
  %99 = load %"class.std::vector.18"*, %"class.std::vector.18"** %98, align 8
  %100 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %101 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %101, i32 0, i32 1
  %103 = load %"class.std::vector.18"*, %"class.std::vector.18"** %102, align 8
  %104 = ptrtoint %"class.std::vector.18"* %99 to i64
  %105 = ptrtoint %"class.std::vector.18"* %103 to i64
  %106 = add i64 %104, 6495691401038837505
  %107 = sub i64 %106, %105
  %108 = sub i64 %107, 6495691401038837505
  %109 = sub i64 %104, %105
  %110 = sdiv exact i64 %108, 24
  %111 = load i64, i64* %31, align 8
  %112 = icmp uge i64 %110, %111
  %113 = load i32, i32* @x.422
  %114 = load i32, i32* @y.423
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %491

; <label>:138:                                    ; preds = %95
  br i1 %112, label %139, label %151

; <label>:139:                                    ; preds = %138
  %140 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %141, i32 0, i32 1
  %143 = load %"class.std::vector.18"*, %"class.std::vector.18"** %142, align 8
  %144 = load i64, i64* %31, align 8
  %145 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %146 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %145) #3
  %147 = call %"class.std::vector.18"* @_ZSt27__uninitialized_default_n_aIPSt6vectorI8MaxFEdgeIxESaIS2_EEmS4_ET_S6_T0_RSaIT1_E(%"class.std::vector.18"* %143, i64 %144, %"class.std::allocator.15"* dereferenceable(1) %146)
  %148 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %149 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %148, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %149, i32 0, i32 1
  store %"class.std::vector.18"* %147, %"class.std::vector.18"** %150, align 8
  br label %426

; <label>:151:                                    ; preds = %138
  %152 = load i64, i64* %31, align 8
  %153 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE12_M_check_lenEmPKc(%"class.std::vector.13"* %38, i64 %152, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0))
  store i64 %153, i64* %32, align 8
  %154 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %38) #3
  store i64 %154, i64* %33, align 8
  %155 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %156 = load i64, i64* %32, align 8
  %157 = call %"class.std::vector.18"* @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.14"* %155, i64 %156)
  store %"class.std::vector.18"* %157, %"class.std::vector.18"** %34, align 8
  %158 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  store %"class.std::vector.18"* %158, %"class.std::vector.18"** %35, align 8
  %159 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %160 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %159, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %160, i32 0, i32 0
  %162 = load %"class.std::vector.18"*, %"class.std::vector.18"** %161, align 8
  %163 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %164 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %163, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %164, i32 0, i32 1
  %166 = load %"class.std::vector.18"*, %"class.std::vector.18"** %165, align 8
  %167 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  %168 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %169 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %168) #3
  %170 = invoke %"class.std::vector.18"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorI8MaxFEdgeIxESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.18"* %162, %"class.std::vector.18"* %166, %"class.std::vector.18"* %167, %"class.std::allocator.15"* dereferenceable(1) %169)
          to label %171 unwind label %207

; <label>:171:                                    ; preds = %151
  store %"class.std::vector.18"* %170, %"class.std::vector.18"** %35, align 8
  %172 = load %"class.std::vector.18"*, %"class.std::vector.18"** %35, align 8
  %173 = load i64, i64* %31, align 8
  %174 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %175 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %174) #3
  %176 = invoke %"class.std::vector.18"* @_ZSt27__uninitialized_default_n_aIPSt6vectorI8MaxFEdgeIxESaIS2_EEmS4_ET_S6_T0_RSaIT1_E(%"class.std::vector.18"* %172, i64 %173, %"class.std::allocator.15"* dereferenceable(1) %175)
          to label %177 unwind label %207

; <label>:177:                                    ; preds = %171
  %178 = load i32, i32* @x.422
  %179 = load i32, i32* @y.423
  %180 = add i32 %178, -905094928
  %181 = sub i32 %180, 1
  %182 = sub i32 %181, -905094928
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = and i1 %186, %187
  %189 = xor i1 %186, %187
  %190 = or i1 %188, %189
  %191 = or i1 %186, %187
  br i1 %190, label %192, label %524

; <label>:192:                                    ; preds = %177, %524
  store %"class.std::vector.18"* %176, %"class.std::vector.18"** %35, align 8
  %193 = load i32, i32* @x.422
  %194 = load i32, i32* @y.423
  %195 = sub i32 0, 1
  %196 = add i32 %193, %195
  %197 = sub i32 %193, 1
  %198 = mul i32 %193, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %194, 10
  %202 = and i1 %200, %201
  %203 = xor i1 %200, %201
  %204 = or i1 %202, %203
  %205 = or i1 %200, %201
  br i1 %204, label %206, label %524

; <label>:206:                                    ; preds = %192
  br label %381

; <label>:207:                                    ; preds = %171, %151
  %208 = load i32, i32* @x.422
  %209 = load i32, i32* @y.423
  %210 = sub i32 0, 1
  %211 = add i32 %208, %210
  %212 = sub i32 %208, 1
  %213 = mul i32 %208, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %209, 10
  %217 = and i1 %215, %216
  %218 = xor i1 %215, %216
  %219 = or i1 %217, %218
  %220 = or i1 %215, %216
  br i1 %219, label %221, label %525

; <label>:221:                                    ; preds = %207, %525
  %222 = landingpad { i8*, i32 }
          catch i8* null
  %223 = extractvalue { i8*, i32 } %222, 0
  store i8* %223, i8** %36, align 8
  %224 = extractvalue { i8*, i32 } %222, 1
  store i32 %224, i32* %37, align 4
  %225 = load i32, i32* @x.422
  %226 = load i32, i32* @y.423
  %227 = sub i32 0, 1
  %228 = add i32 %225, %227
  %229 = sub i32 %225, 1
  %230 = mul i32 %225, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %226, 10
  %234 = xor i1 %232, true
  %235 = xor i1 %233, true
  %236 = xor i1 true, true
  %237 = and i1 %234, true
  %238 = and i1 %232, %236
  %239 = and i1 %235, true
  %240 = and i1 %233, %236
  %241 = or i1 %237, %238
  %242 = or i1 %239, %240
  %243 = xor i1 %241, %242
  %244 = or i1 %234, %235
  %245 = xor i1 %244, true
  %246 = or i1 true, %236
  %247 = and i1 %245, %246
  %248 = or i1 %243, %247
  %249 = or i1 %232, %233
  br i1 %248, label %250, label %525

; <label>:250:                                    ; preds = %221
  br label %251

; <label>:251:                                    ; preds = %250
  %252 = load i8*, i8** %36, align 8
  %253 = call i8* @__cxa_begin_catch(i8* %252) #3
  %254 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  %255 = load %"class.std::vector.18"*, %"class.std::vector.18"** %35, align 8
  %256 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %257 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %256) #3
  invoke void @_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.18"* %254, %"class.std::vector.18"* %255, %"class.std::allocator.15"* dereferenceable(1) %257)
          to label %258 unwind label %304

; <label>:258:                                    ; preds = %251
  %259 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %260 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  %261 = load i64, i64* %32, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.14"* %259, %"class.std::vector.18"* %260, i64 %261)
          to label %262 unwind label %304

; <label>:262:                                    ; preds = %258
  %263 = load i32, i32* @x.422
  %264 = load i32, i32* @y.423
  %265 = add i32 %263, 1968392725
  %266 = sub i32 %265, 1
  %267 = sub i32 %266, 1968392725
  %268 = sub i32 %263, 1
  %269 = mul i32 %263, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %264, 10
  %273 = and i1 %271, %272
  %274 = xor i1 %271, %272
  %275 = or i1 %273, %274
  %276 = or i1 %271, %272
  br i1 %275, label %277, label %529

; <label>:277:                                    ; preds = %262, %529
  %278 = load i32, i32* @x.422
  %279 = load i32, i32* @y.423
  %280 = sub i32 0, 1
  %281 = add i32 %278, %280
  %282 = sub i32 %278, 1
  %283 = mul i32 %278, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %279, 10
  %287 = xor i1 %285, true
  %288 = xor i1 %286, true
  %289 = xor i1 true, true
  %290 = and i1 %287, true
  %291 = and i1 %285, %289
  %292 = and i1 %288, true
  %293 = and i1 %286, %289
  %294 = or i1 %290, %291
  %295 = or i1 %292, %293
  %296 = xor i1 %294, %295
  %297 = or i1 %287, %288
  %298 = xor i1 %297, true
  %299 = or i1 true, %289
  %300 = and i1 %298, %299
  %301 = or i1 %296, %300
  %302 = or i1 %285, %286
  br i1 %301, label %303, label %529

; <label>:303:                                    ; preds = %277
  invoke void @__cxa_rethrow() #12
          to label %436 unwind label %304

; <label>:304:                                    ; preds = %303, %258, %251
  %305 = load i32, i32* @x.422
  %306 = load i32, i32* @y.423
  %307 = add i32 %305, -814195857
  %308 = sub i32 %307, 1
  %309 = sub i32 %308, -814195857
  %310 = sub i32 %305, 1
  %311 = mul i32 %305, %309
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %306, 10
  %315 = and i1 %313, %314
  %316 = xor i1 %313, %314
  %317 = or i1 %315, %316
  %318 = or i1 %313, %314
  br i1 %317, label %319, label %530

; <label>:319:                                    ; preds = %304, %530
  %320 = landingpad { i8*, i32 }
          cleanup
  %321 = extractvalue { i8*, i32 } %320, 0
  store i8* %321, i8** %36, align 8
  %322 = extractvalue { i8*, i32 } %320, 1
  store i32 %322, i32* %37, align 4
  %323 = load i32, i32* @x.422
  %324 = load i32, i32* @y.423
  %325 = add i32 %323, -268446443
  %326 = sub i32 %325, 1
  %327 = sub i32 %326, -268446443
  %328 = sub i32 %323, 1
  %329 = mul i32 %323, %327
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %324, 10
  %333 = xor i1 %331, true
  %334 = xor i1 %332, true
  %335 = xor i1 true, true
  %336 = and i1 %333, true
  %337 = and i1 %331, %335
  %338 = and i1 %334, true
  %339 = and i1 %332, %335
  %340 = or i1 %336, %337
  %341 = or i1 %338, %339
  %342 = xor i1 %340, %341
  %343 = or i1 %333, %334
  %344 = xor i1 %343, true
  %345 = or i1 true, %335
  %346 = and i1 %344, %345
  %347 = or i1 %342, %346
  %348 = or i1 %331, %332
  br i1 %347, label %349, label %530

; <label>:349:                                    ; preds = %319
  invoke void @__cxa_end_catch()
          to label %350 unwind label %433

; <label>:350:                                    ; preds = %349
  %351 = load i32, i32* @x.422
  %352 = load i32, i32* @y.423
  %353 = add i32 %351, -1681362190
  %354 = sub i32 %353, 1
  %355 = sub i32 %354, -1681362190
  %356 = sub i32 %351, 1
  %357 = mul i32 %351, %355
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %352, 10
  %361 = and i1 %359, %360
  %362 = xor i1 %359, %360
  %363 = or i1 %361, %362
  %364 = or i1 %359, %360
  br i1 %363, label %365, label %534

; <label>:365:                                    ; preds = %350, %534
  %366 = load i32, i32* @x.422
  %367 = load i32, i32* @y.423
  %368 = sub i32 %366, 1822653866
  %369 = sub i32 %368, 1
  %370 = add i32 %369, 1822653866
  %371 = sub i32 %366, 1
  %372 = mul i32 %366, %370
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %367, 10
  %376 = and i1 %374, %375
  %377 = xor i1 %374, %375
  %378 = or i1 %376, %377
  %379 = or i1 %374, %375
  br i1 %378, label %380, label %534

; <label>:380:                                    ; preds = %365
  br label %428

; <label>:381:                                    ; preds = %206
  %382 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %383 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %382, i32 0, i32 0
  %384 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %383, i32 0, i32 0
  %385 = load %"class.std::vector.18"*, %"class.std::vector.18"** %384, align 8
  %386 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %387 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %386, i32 0, i32 0
  %388 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %387, i32 0, i32 1
  %389 = load %"class.std::vector.18"*, %"class.std::vector.18"** %388, align 8
  %390 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %391 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %390) #3
  call void @_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.18"* %385, %"class.std::vector.18"* %389, %"class.std::allocator.15"* dereferenceable(1) %391)
  %392 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %393 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %394 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %393, i32 0, i32 0
  %395 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %394, i32 0, i32 0
  %396 = load %"class.std::vector.18"*, %"class.std::vector.18"** %395, align 8
  %397 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %398 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %397, i32 0, i32 0
  %399 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %398, i32 0, i32 2
  %400 = load %"class.std::vector.18"*, %"class.std::vector.18"** %399, align 8
  %401 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %402 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %401, i32 0, i32 0
  %403 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %402, i32 0, i32 0
  %404 = load %"class.std::vector.18"*, %"class.std::vector.18"** %403, align 8
  %405 = ptrtoint %"class.std::vector.18"* %400 to i64
  %406 = ptrtoint %"class.std::vector.18"* %404 to i64
  %407 = add i64 %405, -6450363564775785374
  %408 = sub i64 %407, %406
  %409 = sub i64 %408, -6450363564775785374
  %410 = sub i64 %405, %406
  %411 = sdiv exact i64 %409, 24
  call void @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.14"* %392, %"class.std::vector.18"* %396, i64 %411)
  %412 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  %413 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %414 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %413, i32 0, i32 0
  %415 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %414, i32 0, i32 0
  store %"class.std::vector.18"* %412, %"class.std::vector.18"** %415, align 8
  %416 = load %"class.std::vector.18"*, %"class.std::vector.18"** %35, align 8
  %417 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %418 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %417, i32 0, i32 0
  %419 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %418, i32 0, i32 1
  store %"class.std::vector.18"* %416, %"class.std::vector.18"** %419, align 8
  %420 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  %421 = load i64, i64* %32, align 8
  %422 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %420, i64 %421
  %423 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %424 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %423, i32 0, i32 0
  %425 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %424, i32 0, i32 2
  store %"class.std::vector.18"* %422, %"class.std::vector.18"** %425, align 8
  br label %426

; <label>:426:                                    ; preds = %381, %139
  br label %427

; <label>:427:                                    ; preds = %426, %67
  ret void

; <label>:428:                                    ; preds = %380
  %429 = load i8*, i8** %36, align 8
  %430 = load i32, i32* %37, align 4
  %431 = insertvalue { i8*, i32 } undef, i8* %429, 0
  %432 = insertvalue { i8*, i32 } %431, i32 %430, 1
  resume { i8*, i32 } %432

; <label>:433:                                    ; preds = %349
  %434 = landingpad { i8*, i32 }
          catch i8* null
  %435 = extractvalue { i8*, i32 } %434, 0
  call void @__clang_call_terminate(i8* %435) #8
  unreachable

; <label>:436:                                    ; preds = %303
  %437 = load i32, i32* @x.422
  %438 = load i32, i32* @y.423
  %439 = sub i32 %437, -402489208
  %440 = sub i32 %439, 1
  %441 = add i32 %440, -402489208
  %442 = sub i32 %437, 1
  %443 = mul i32 %437, %441
  %444 = urem i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = icmp slt i32 %438, 10
  %447 = and i1 %445, %446
  %448 = xor i1 %445, %446
  %449 = or i1 %447, %448
  %450 = or i1 %445, %446
  br i1 %449, label %451, label %535

; <label>:451:                                    ; preds = %436, %535
  %452 = load i32, i32* @x.422
  %453 = load i32, i32* @y.423
  %454 = sub i32 %452, 1504429526
  %455 = sub i32 %454, 1
  %456 = add i32 %455, 1504429526
  %457 = sub i32 %452, 1
  %458 = mul i32 %452, %456
  %459 = urem i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %453, 10
  %462 = xor i1 %460, true
  %463 = xor i1 %461, true
  %464 = xor i1 true, true
  %465 = and i1 %462, true
  %466 = and i1 %460, %464
  %467 = and i1 %463, true
  %468 = and i1 %461, %464
  %469 = or i1 %465, %466
  %470 = or i1 %467, %468
  %471 = xor i1 %469, %470
  %472 = or i1 %462, %463
  %473 = xor i1 %472, true
  %474 = or i1 true, %464
  %475 = and i1 %473, %474
  %476 = or i1 %471, %475
  %477 = or i1 %460, %461
  br i1 %476, label %478, label %535

; <label>:478:                                    ; preds = %451
  unreachable

; <label>:479:                                    ; preds = %29, %2
  %480 = alloca %"class.std::vector.13"*, align 8
  %481 = alloca i64, align 8
  %482 = alloca i64, align 8
  %483 = alloca i64, align 8
  %484 = alloca %"class.std::vector.18"*, align 8
  %485 = alloca %"class.std::vector.18"*, align 8
  %486 = alloca i8*
  %487 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %480, align 8
  store i64 %1, i64* %481, align 8
  %488 = load %"class.std::vector.13"*, %"class.std::vector.13"** %480, align 8
  %489 = load i64, i64* %481, align 8
  %490 = icmp ne i64 %489, 0
  br label %29

; <label>:491:                                    ; preds = %95, %68
  %492 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %493 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %492, i32 0, i32 0
  %494 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %493, i32 0, i32 2
  %495 = load %"class.std::vector.18"*, %"class.std::vector.18"** %494, align 8
  %496 = bitcast %"class.std::vector.13"* %38 to %"struct.std::_Vector_base.14"*
  %497 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %496, i32 0, i32 0
  %498 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %497, i32 0, i32 1
  %499 = load %"class.std::vector.18"*, %"class.std::vector.18"** %498, align 8
  %500 = ptrtoint %"class.std::vector.18"* %495 to i64
  %501 = ptrtoint %"class.std::vector.18"* %499 to i64
  %502 = shl i64 %500, %501
  %503 = add i64 %500, -5626260473424436708
  %504 = sub i64 %503, %501
  %505 = sub i64 %504, -5626260473424436708
  %506 = sub i64 %500, %501
  %507 = add i64 %505, 343228362816151524
  %508 = sub i64 %507, 24
  %509 = sub i64 %508, 343228362816151524
  %510 = sub i64 %505, 24
  %511 = mul i64 %509, 24
  %512 = sub i64 0, 24
  %513 = add i64 %505, %512
  %514 = sub i64 %505, 24
  %515 = mul i64 %513, 24
  %516 = add i64 %505, 2362119259725522351
  %517 = sub i64 %516, 24
  %518 = sub i64 %517, 2362119259725522351
  %519 = sub i64 %505, 24
  %520 = mul i64 %518, 24
  %521 = sdiv exact i64 %505, 24
  %522 = load i64, i64* %31, align 8
  %523 = icmp uge i64 %521, %522
  br label %95

; <label>:524:                                    ; preds = %192, %177
  store %"class.std::vector.18"* %176, %"class.std::vector.18"** %35, align 8
  br label %192

; <label>:525:                                    ; preds = %221, %207
  %526 = landingpad { i8*, i32 }
          catch i8* null
  %527 = extractvalue { i8*, i32 } %526, 0
  store i8* %527, i8** %36, align 8
  %528 = extractvalue { i8*, i32 } %526, 1
  store i32 %528, i32* %37, align 4
  br label %221

; <label>:529:                                    ; preds = %277, %262
  br label %277

; <label>:530:                                    ; preds = %319, %304
  %531 = landingpad { i8*, i32 }
          cleanup
  %532 = extractvalue { i8*, i32 } %531, 0
  store i8* %532, i8** %36, align 8
  %533 = extractvalue { i8*, i32 } %531, 1
  store i32 %533, i32* %37, align 4
  br label %319

; <label>:534:                                    ; preds = %365, %350
  br label %365

; <label>:535:                                    ; preds = %451, %436
  br label %451
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector.13"*, %"class.std::vector.18"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %7 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %9, align 8
  %11 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %12 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %11) #3
  invoke void @_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.18"* %6, %"class.std::vector.18"* %10, %"class.std::allocator.15"* dereferenceable(1) %12)
          to label %13 unwind label %47

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.424
  %15 = load i32, i32* @y.425
  %16 = sub i32 %14, -1108032675
  %17 = sub i32 %16, 1
  %18 = add i32 %17, -1108032675
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %102

; <label>:28:                                     ; preds = %13, %102
  %29 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %30 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %31, i32 0, i32 1
  store %"class.std::vector.18"* %29, %"class.std::vector.18"** %32, align 8
  %33 = load i32, i32* @x.424
  %34 = load i32, i32* @y.425
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %102

; <label>:46:                                     ; preds = %28
  ret void

; <label>:47:                                     ; preds = %2
  %48 = load i32, i32* @x.424
  %49 = load i32, i32* @y.425
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %107

; <label>:73:                                     ; preds = %47, %107
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  call void @__clang_call_terminate(i8* %75) #8
  %76 = load i32, i32* @x.424
  %77 = load i32, i32* @y.425
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %107

; <label>:101:                                    ; preds = %73
  unreachable

; <label>:102:                                    ; preds = %28, %13
  %103 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %104 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %105 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %105, i32 0, i32 1
  store %"class.std::vector.18"* %103, %"class.std::vector.18"** %106, align 8
  br label %28

; <label>:107:                                    ; preds = %73, %47
  %108 = landingpad { i8*, i32 }
          catch i8* null
  %109 = extractvalue { i8*, i32 } %108, 0
  call void @__clang_call_terminate(i8* %109) #8
  br label %73
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt27__uninitialized_default_n_aIPSt6vectorI8MaxFEdgeIxESaIS2_EEmS4_ET_S6_T0_RSaIT1_E(%"class.std::vector.18"*, i64, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.426
  %8 = load i32, i32* @y.427
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 507728968, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 507728968, label %20
    i32 963303110, label %28
    i32 84478532, label %61
    i32 1194281922, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 963303110, i32 1194281922
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.18"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %29, align 8
  store i64 %1, i64* %30, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %31, align 8
  %32 = load %"class.std::vector.18"*, %"class.std::vector.18"** %29, align 8
  %33 = load i64, i64* %30, align 8
  %34 = call %"class.std::vector.18"* @_ZSt25__uninitialized_default_nIPSt6vectorI8MaxFEdgeIxESaIS2_EEmET_S6_T0_(%"class.std::vector.18"* %32, i64 %33)
  store %"class.std::vector.18"* %34, %"class.std::vector.18"** %4
  %35 = load i32, i32* @x.426
  %36 = load i32, i32* @y.427
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 84478532, i32 1194281922
  store i32 %60, i32* %16
  br label %70

; <label>:61:                                     ; preds = %17
  %62 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  ret %"class.std::vector.18"* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::vector.18"*, align 8
  %65 = alloca i64, align 8
  %66 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %64, align 8
  store i64 %1, i64* %65, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %66, align 8
  %67 = load %"class.std::vector.18"*, %"class.std::vector.18"** %64, align 8
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::vector.18"* @_ZSt25__uninitialized_default_nIPSt6vectorI8MaxFEdgeIxESaIS2_EEmET_S6_T0_(%"class.std::vector.18"* %67, i64 %68)
  store i32 963303110, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE12_M_check_lenEmPKc(%"class.std::vector.13"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.13"*
  %9 = alloca %"class.std::vector.13"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.13"*, %"class.std::vector.13"** %9, align 8
  store %"class.std::vector.13"* %14, %"class.std::vector.13"** %8
  %15 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %16 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.13"* %15) #3
  %17 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %18 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %17) #3
  %19 = sub i64 %16, -3600840688244417318
  %20 = sub i64 %19, %18
  %21 = add i64 %20, -3600840688244417318
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 1295569121, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %211
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 1295569121, label %29
    i32 946250383, label %34
    i32 -36450513, label %61
    i32 604265598, label %78
    i32 804726048, label %79
    i32 -1673762956, label %95
    i32 1768082968, label %125
    i32 1462941096, label %128
    i32 862984516, label %134
    i32 -1434694078, label %137
    i32 -1894507228, label %153
    i32 113612711, label %182
    i32 -18550299, label %184
    i32 -546629017, label %186
    i32 1136369817, label %188
    i32 -570442587, label %209
  ]

; <label>:28:                                     ; preds = %26
  br label %211

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 946250383, i32 804726048
  store i32 %33, i32* %24
  br label %211

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.428
  %36 = load i32, i32* @y.429
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -36450513, i32 -546629017
  store i32 %60, i32* %24
  br label %211

; <label>:61:                                     ; preds = %26
  %62 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %62) #12
  %63 = load i32, i32* @x.428
  %64 = load i32, i32* @y.429
  %65 = sub i32 %63, 130546113
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 130546113
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  %77 = select i1 %75, i32 604265598, i32 -546629017
  store i32 %77, i32* %24
  br label %211

; <label>:78:                                     ; preds = %26
  unreachable

; <label>:79:                                     ; preds = %26
  %80 = load i32, i32* @x.428
  %81 = load i32, i32* @y.429
  %82 = add i32 %80, -236110680
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, -236110680
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 -1673762956, i32 1136369817
  store i32 %94, i32* %24
  br label %211

; <label>:95:                                     ; preds = %26
  %96 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %97 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %96) #3
  %98 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %99 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %98) #3
  store i64 %99, i64* %13, align 8
  %100 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %97, 3005740449786037999
  %103 = add i64 %102, %101
  %104 = sub i64 %103, 3005740449786037999
  %105 = add i64 %97, %101
  store i64 %104, i64* %12, align 8
  %106 = load i64, i64* %12, align 8
  %107 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %108 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %107) #3
  %109 = icmp ult i64 %106, %108
  store i1 %109, i1* %5
  %110 = load i32, i32* @x.428
  %111 = load i32, i32* @y.429
  %112 = add i32 %110, -1518000037
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, -1518000037
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 1768082968, i32 1136369817
  store i32 %124, i32* %24
  br label %211

; <label>:125:                                    ; preds = %26
  %126 = load volatile i1, i1* %5
  %127 = select i1 %126, i32 862984516, i32 1462941096
  store i32 %127, i32* %24
  br label %211

; <label>:128:                                    ; preds = %26
  %129 = load i64, i64* %12, align 8
  %130 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %131 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.13"* %130) #3
  %132 = icmp ugt i64 %129, %131
  %133 = select i1 %132, i32 862984516, i32 -1434694078
  store i32 %133, i32* %24
  br label %211

; <label>:134:                                    ; preds = %26
  %135 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %136 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.13"* %135) #3
  store i32 -18550299, i32* %24
  store i64 %136, i64* %25
  br label %211

; <label>:137:                                    ; preds = %26
  %138 = load i32, i32* @x.428
  %139 = load i32, i32* @y.429
  %140 = add i32 %138, -634858712
  %141 = sub i32 %140, 1
  %142 = sub i32 %141, -634858712
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  %152 = select i1 %150, i32 -1894507228, i32 -570442587
  store i32 %152, i32* %24
  br label %211

; <label>:153:                                    ; preds = %26
  %154 = load i64, i64* %12, align 8
  store i64 %154, i64* %4
  %155 = load i32, i32* @x.428
  %156 = load i32, i32* @y.429
  %157 = add i32 %155, 454243620
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, 454243620
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 true, true
  %168 = and i1 %165, true
  %169 = and i1 %163, %167
  %170 = and i1 %166, true
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 true, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  %181 = select i1 %179, i32 113612711, i32 -570442587
  store i32 %181, i32* %24
  br label %211

; <label>:182:                                    ; preds = %26
  store i32 -18550299, i32* %24
  %183 = load volatile i64, i64* %4
  store i64 %183, i64* %25
  br label %211

; <label>:184:                                    ; preds = %26
  %185 = load i64, i64* %25
  ret i64 %185

; <label>:186:                                    ; preds = %26
  %187 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %187) #12
  store i32 -36450513, i32* %24
  br label %211

; <label>:188:                                    ; preds = %26
  %189 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %190 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %189) #3
  %191 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %192 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %191) #3
  store i64 %192, i64* %13, align 8
  %193 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %194 = load i64, i64* %193, align 8
  %195 = shl i64 %190, %194
  %196 = add i64 %190, -6857769683485412388
  %197 = sub i64 %196, %194
  %198 = sub i64 %197, -6857769683485412388
  %199 = sub i64 %190, %194
  %200 = mul i64 %198, %194
  %201 = sub i64 %190, 4603427346389949202
  %202 = add i64 %201, %194
  %203 = add i64 %202, 4603427346389949202
  %204 = add i64 %190, %194
  store i64 %203, i64* %12, align 8
  %205 = load i64, i64* %12, align 8
  %206 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %207 = call i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.13"* %206) #3
  %208 = icmp ult i64 %205, %207
  store i32 -1673762956, i32* %24
  br label %211

; <label>:209:                                    ; preds = %26
  %210 = load i64, i64* %12, align 8
  store i32 -1894507228, i32* %24
  br label %211

; <label>:211:                                    ; preds = %209, %188, %186, %182, %153, %137, %134, %128, %125, %95, %79, %61, %34, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.14"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.14"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.430
  %10 = load i32, i32* @y.431
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 478889164, i32* %18
  %19 = alloca %"class.std::vector.18"*
  br label %20

; <label>:20:                                     ; preds = %2, %141
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 478889164, label %23
    i32 -1869614527, label %43
    i32 -1478030300, label %77
    i32 -1116840485, label %80
    i32 -477725024, label %87
    i32 1675294605, label %88
    i32 981500700, label %117
    i32 -1127046590, label %132
    i32 1528438084, label %134
    i32 866774756, label %140
  ]

; <label>:22:                                     ; preds = %20
  br label %141

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1869614527, i32 1528438084
  store i32 %42, i32* %18
  br label %141

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.14"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %6
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %44, align 8
  %46 = load volatile i64*, i64** %6
  store i64 %1, i64* %46, align 8
  %47 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %44, align 8
  store %"struct.std::_Vector_base.14"* %47, %"struct.std::_Vector_base.14"** %5
  %48 = load volatile i64*, i64** %6
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.430
  %52 = load i32, i32* @y.431
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1478030300, i32 1528438084
  store i32 %76, i32* %18
  br label %141

; <label>:77:                                     ; preds = %20
  %78 = load volatile i1, i1* %4
  %79 = select i1 %78, i32 -1116840485, i32 -477725024
  store i32 %79, i32* %18
  br label %141

; <label>:80:                                     ; preds = %20
  %81 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %82 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %81, i32 0, i32 0
  %83 = bitcast %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %82 to %"class.std::allocator.15"*
  %84 = load volatile i64*, i64** %6
  %85 = load i64, i64* %84, align 8
  %86 = call %"class.std::vector.18"* @_ZNSt16allocator_traitsISaISt6vectorI8MaxFEdgeIxESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.15"* dereferenceable(1) %83, i64 %85)
  store i32 1675294605, i32* %18
  store %"class.std::vector.18"* %86, %"class.std::vector.18"** %19
  br label %141

; <label>:87:                                     ; preds = %20
  store i32 1675294605, i32* %18
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %19
  br label %141

; <label>:88:                                     ; preds = %20
  %89 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19
  store %"class.std::vector.18"* %89, %"class.std::vector.18"** %3
  %90 = load i32, i32* @x.430
  %91 = load i32, i32* @y.431
  %92 = sub i32 %90, -1317203146
  %93 = sub i32 %92, 1
  %94 = add i32 %93, -1317203146
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 981500700, i32 866774756
  store i32 %116, i32* %18
  br label %141

; <label>:117:                                    ; preds = %20
  %118 = load i32, i32* @x.430
  %119 = load i32, i32* @y.431
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 -1127046590, i32 866774756
  store i32 %131, i32* %18
  br label %141

; <label>:132:                                    ; preds = %20
  %133 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  ret %"class.std::vector.18"* %133

; <label>:134:                                    ; preds = %20
  %135 = alloca %"struct.std::_Vector_base.14"*, align 8
  %136 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %135, align 8
  store i64 %1, i64* %136, align 8
  %137 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %135, align 8
  %138 = load i64, i64* %136, align 8
  %139 = icmp ne i64 %138, 0
  store i32 -1869614527, i32* %18
  br label %141

; <label>:140:                                    ; preds = %20
  store i32 981500700, i32* %18
  br label %141

; <label>:141:                                    ; preds = %140, %134, %117, %88, %87, %80, %77, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorI8MaxFEdgeIxESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.18"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.432
  %9 = load i32, i32* @y.433
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 2135432815, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %98
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 2135432815, label %21
    i32 1735480167, label %29
    i32 949569728, label %76
    i32 -1969391276, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %98

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1735480167, i32 -1969391276
  store i32 %28, i32* %17
  br label %98

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.18"*, align 8
  %31 = alloca %"class.std::vector.18"*, align 8
  %32 = alloca %"class.std::vector.18"*, align 8
  %33 = alloca %"class.std::allocator.15"*, align 8
  %34 = alloca %"class.std::move_iterator.25", align 8
  %35 = alloca %"class.std::move_iterator.25", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %30, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %31, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %32, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %33, align 8
  %36 = load %"class.std::vector.18"*, %"class.std::vector.18"** %30, align 8
  %37 = call %"class.std::vector.18"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EESt13move_iteratorIS5_EET0_T_(%"class.std::vector.18"* %36)
  %38 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %34, i32 0, i32 0
  store %"class.std::vector.18"* %37, %"class.std::vector.18"** %38, align 8
  %39 = load %"class.std::vector.18"*, %"class.std::vector.18"** %31, align 8
  %40 = call %"class.std::vector.18"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EESt13move_iteratorIS5_EET0_T_(%"class.std::vector.18"* %39)
  %41 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %35, i32 0, i32 0
  store %"class.std::vector.18"* %40, %"class.std::vector.18"** %41, align 8
  %42 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  %43 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %33, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %34, i32 0, i32 0
  %45 = load %"class.std::vector.18"*, %"class.std::vector.18"** %44, align 8
  %46 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %35, i32 0, i32 0
  %47 = load %"class.std::vector.18"*, %"class.std::vector.18"** %46, align 8
  %48 = call %"class.std::vector.18"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::vector.18"* %45, %"class.std::vector.18"* %47, %"class.std::vector.18"* %42, %"class.std::allocator.15"* dereferenceable(1) %43)
  store %"class.std::vector.18"* %48, %"class.std::vector.18"** %5
  %49 = load i32, i32* @x.432
  %50 = load i32, i32* @y.433
  %51 = add i32 %49, -1754689656
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -1754689656
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 949569728, i32 -1969391276
  store i32 %75, i32* %17
  br label %98

; <label>:76:                                     ; preds = %18
  %77 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  ret %"class.std::vector.18"* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %"class.std::vector.18"*, align 8
  %80 = alloca %"class.std::vector.18"*, align 8
  %81 = alloca %"class.std::vector.18"*, align 8
  %82 = alloca %"class.std::allocator.15"*, align 8
  %83 = alloca %"class.std::move_iterator.25", align 8
  %84 = alloca %"class.std::move_iterator.25", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %79, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %80, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %81, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %82, align 8
  %85 = load %"class.std::vector.18"*, %"class.std::vector.18"** %79, align 8
  %86 = call %"class.std::vector.18"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EESt13move_iteratorIS5_EET0_T_(%"class.std::vector.18"* %85)
  %87 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %83, i32 0, i32 0
  store %"class.std::vector.18"* %86, %"class.std::vector.18"** %87, align 8
  %88 = load %"class.std::vector.18"*, %"class.std::vector.18"** %80, align 8
  %89 = call %"class.std::vector.18"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EESt13move_iteratorIS5_EET0_T_(%"class.std::vector.18"* %88)
  %90 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %84, i32 0, i32 0
  store %"class.std::vector.18"* %89, %"class.std::vector.18"** %90, align 8
  %91 = load %"class.std::vector.18"*, %"class.std::vector.18"** %81, align 8
  %92 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %82, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %83, i32 0, i32 0
  %94 = load %"class.std::vector.18"*, %"class.std::vector.18"** %93, align 8
  %95 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %84, i32 0, i32 0
  %96 = load %"class.std::vector.18"*, %"class.std::vector.18"** %95, align 8
  %97 = call %"class.std::vector.18"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::vector.18"* %94, %"class.std::vector.18"* %96, %"class.std::vector.18"* %91, %"class.std::allocator.15"* dereferenceable(1) %92)
  store i32 1735480167, i32* %17
  br label %98

; <label>:98:                                     ; preds = %78, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt25__uninitialized_default_nIPSt6vectorI8MaxFEdgeIxESaIS2_EEmET_S6_T0_(%"class.std::vector.18"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.18"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI8MaxFEdgeIxESaIS4_EEmEET_S8_T0_(%"class.std::vector.18"* %6, i64 %7)
  ret %"class.std::vector.18"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI8MaxFEdgeIxESaIS4_EEmEET_S8_T0_(%"class.std::vector.18"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.436
  %4 = load i32, i32* @y.437
  %5 = add i32 %3, -1131884602
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -1131884602
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %311

; <label>:29:                                     ; preds = %2, %311
  %30 = alloca %"class.std::vector.18"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::vector.18"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %30, align 8
  store i64 %1, i64* %31, align 8
  %35 = load %"class.std::vector.18"*, %"class.std::vector.18"** %30, align 8
  store %"class.std::vector.18"* %35, %"class.std::vector.18"** %32, align 8
  %36 = load i32, i32* @x.436
  %37 = load i32, i32* @y.437
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %311

; <label>:61:                                     ; preds = %29
  br label %62

; <label>:62:                                     ; preds = %147, %61
  %63 = load i64, i64* %31, align 8
  %64 = icmp ugt i64 %63, 0
  br i1 %64, label %65, label %240

; <label>:65:                                     ; preds = %62
  %66 = load i32, i32* @x.436
  %67 = load i32, i32* @y.437
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %318

; <label>:79:                                     ; preds = %65, %318
  %80 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  %81 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorI8MaxFEdgeIxESaIS2_EEEPT_RS5_(%"class.std::vector.18"* dereferenceable(24) %80) #3
  %82 = load i32, i32* @x.436
  %83 = load i32, i32* @y.437
  %84 = add i32 %82, -1958364849
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -1958364849
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %318

; <label>:96:                                     ; preds = %79
  invoke void @_ZSt10_ConstructISt6vectorI8MaxFEdgeIxESaIS2_EEJEEvPT_DpOT0_(%"class.std::vector.18"* %81)
          to label %97 unwind label %148

; <label>:97:                                     ; preds = %96
  br label %98

; <label>:98:                                     ; preds = %97
  %99 = load i32, i32* @x.436
  %100 = load i32, i32* @y.437
  %101 = add i32 %99, -857915808
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, -857915808
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %321

; <label>:113:                                    ; preds = %98, %321
  %114 = load i64, i64* %31, align 8
  %115 = sub i64 %114, -4888774005272235345
  %116 = add i64 %115, -1
  %117 = add i64 %116, -4888774005272235345
  %118 = add i64 %114, -1
  store i64 %117, i64* %31, align 8
  %119 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  %120 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %119, i32 1
  store %"class.std::vector.18"* %120, %"class.std::vector.18"** %32, align 8
  %121 = load i32, i32* @x.436
  %122 = load i32, i32* @y.437
  %123 = add i32 %121, 631970093
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, 631970093
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 false, true
  %134 = and i1 %131, false
  %135 = and i1 %129, %133
  %136 = and i1 %132, false
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 false, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  br i1 %145, label %147, label %321

; <label>:147:                                    ; preds = %113
  br label %62

; <label>:148:                                    ; preds = %96
  %149 = landingpad { i8*, i32 }
          catch i8* null
  %150 = extractvalue { i8*, i32 } %149, 0
  store i8* %150, i8** %33, align 8
  %151 = extractvalue { i8*, i32 } %149, 1
  store i32 %151, i32* %34, align 4
  br label %152

; <label>:152:                                    ; preds = %148
  %153 = load i32, i32* @x.436
  %154 = load i32, i32* @y.437
  %155 = sub i32 %153, -190492590
  %156 = sub i32 %155, 1
  %157 = add i32 %156, -190492590
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 false, true
  %166 = and i1 %163, false
  %167 = and i1 %161, %165
  %168 = and i1 %164, false
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 false, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  br i1 %177, label %179, label %339

; <label>:179:                                    ; preds = %152, %339
  %180 = load i8*, i8** %33, align 8
  %181 = call i8* @__cxa_begin_catch(i8* %180) #3
  %182 = load %"class.std::vector.18"*, %"class.std::vector.18"** %30, align 8
  %183 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  %184 = load i32, i32* @x.436
  %185 = load i32, i32* @y.437
  %186 = sub i32 0, 1
  %187 = add i32 %184, %186
  %188 = sub i32 %184, 1
  %189 = mul i32 %184, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %185, 10
  %193 = and i1 %191, %192
  %194 = xor i1 %191, %192
  %195 = or i1 %193, %194
  %196 = or i1 %191, %192
  br i1 %195, label %197, label %339

; <label>:197:                                    ; preds = %179
  invoke void @_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EEEvT_S6_(%"class.std::vector.18"* %182, %"class.std::vector.18"* %183)
          to label %198 unwind label %242

; <label>:198:                                    ; preds = %197
  %199 = load i32, i32* @x.436
  %200 = load i32, i32* @y.437
  %201 = sub i32 %199, 991695671
  %202 = sub i32 %201, 1
  %203 = add i32 %202, 991695671
  %204 = sub i32 %199, 1
  %205 = mul i32 %199, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %200, 10
  %209 = xor i1 %207, true
  %210 = xor i1 %208, true
  %211 = xor i1 false, true
  %212 = and i1 %209, false
  %213 = and i1 %207, %211
  %214 = and i1 %210, false
  %215 = and i1 %208, %211
  %216 = or i1 %212, %213
  %217 = or i1 %214, %215
  %218 = xor i1 %216, %217
  %219 = or i1 %209, %210
  %220 = xor i1 %219, true
  %221 = or i1 false, %211
  %222 = and i1 %220, %221
  %223 = or i1 %218, %222
  %224 = or i1 %207, %208
  br i1 %223, label %225, label %344

; <label>:225:                                    ; preds = %198, %344
  %226 = load i32, i32* @x.436
  %227 = load i32, i32* @y.437
  %228 = sub i32 0, 1
  %229 = add i32 %226, %228
  %230 = sub i32 %226, 1
  %231 = mul i32 %226, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %227, 10
  %235 = and i1 %233, %234
  %236 = xor i1 %233, %234
  %237 = or i1 %235, %236
  %238 = or i1 %233, %234
  br i1 %237, label %239, label %344

; <label>:239:                                    ; preds = %225
  invoke void @__cxa_rethrow() #12
          to label %310 unwind label %242

; <label>:240:                                    ; preds = %62
  %241 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  ret %"class.std::vector.18"* %241

; <label>:242:                                    ; preds = %239, %197
  %243 = landingpad { i8*, i32 }
          cleanup
  %244 = extractvalue { i8*, i32 } %243, 0
  store i8* %244, i8** %33, align 8
  %245 = extractvalue { i8*, i32 } %243, 1
  store i32 %245, i32* %34, align 4
  invoke void @__cxa_end_catch()
          to label %246 unwind label %307

; <label>:246:                                    ; preds = %242
  br label %248
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:248:                                    ; preds = %246
  %249 = load i32, i32* @x.436
  %250 = load i32, i32* @y.437
  %251 = sub i32 %249, -1893523649
  %252 = sub i32 %251, 1
  %253 = add i32 %252, -1893523649
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = xor i1 %257, true
  %260 = xor i1 %258, true
  %261 = xor i1 true, true
  %262 = and i1 %259, true
  %263 = and i1 %257, %261
  %264 = and i1 %260, true
  %265 = and i1 %258, %261
  %266 = or i1 %262, %263
  %267 = or i1 %264, %265
  %268 = xor i1 %266, %267
  %269 = or i1 %259, %260
  %270 = xor i1 %269, true
  %271 = or i1 true, %261
  %272 = and i1 %270, %271
  %273 = or i1 %268, %272
  %274 = or i1 %257, %258
  br i1 %273, label %275, label %345

; <label>:275:                                    ; preds = %248, %345
  %276 = load i8*, i8** %33, align 8
  %277 = load i32, i32* %34, align 4
  %278 = insertvalue { i8*, i32 } undef, i8* %276, 0
  %279 = insertvalue { i8*, i32 } %278, i32 %277, 1
  %280 = load i32, i32* @x.436
  %281 = load i32, i32* @y.437
  %282 = add i32 %280, 975564533
  %283 = sub i32 %282, 1
  %284 = sub i32 %283, 975564533
  %285 = sub i32 %280, 1
  %286 = mul i32 %280, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %281, 10
  %290 = xor i1 %288, true
  %291 = xor i1 %289, true
  %292 = xor i1 false, true
  %293 = and i1 %290, false
  %294 = and i1 %288, %292
  %295 = and i1 %291, false
  %296 = and i1 %289, %292
  %297 = or i1 %293, %294
  %298 = or i1 %295, %296
  %299 = xor i1 %297, %298
  %300 = or i1 %290, %291
  %301 = xor i1 %300, true
  %302 = or i1 false, %292
  %303 = and i1 %301, %302
  %304 = or i1 %299, %303
  %305 = or i1 %288, %289
  br i1 %304, label %306, label %345

; <label>:306:                                    ; preds = %275
  resume { i8*, i32 } %279

; <label>:307:                                    ; preds = %242
  %308 = landingpad { i8*, i32 }
          catch i8* null
  %309 = extractvalue { i8*, i32 } %308, 0
  call void @__clang_call_terminate(i8* %309) #8
  unreachable

; <label>:310:                                    ; preds = %239
  unreachable

; <label>:311:                                    ; preds = %29, %2
  %312 = alloca %"class.std::vector.18"*, align 8
  %313 = alloca i64, align 8
  %314 = alloca %"class.std::vector.18"*, align 8
  %315 = alloca i8*
  %316 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %312, align 8
  store i64 %1, i64* %313, align 8
  %317 = load %"class.std::vector.18"*, %"class.std::vector.18"** %312, align 8
  store %"class.std::vector.18"* %317, %"class.std::vector.18"** %314, align 8
  br label %29

; <label>:318:                                    ; preds = %79, %65
  %319 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  %320 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorI8MaxFEdgeIxESaIS2_EEEPT_RS5_(%"class.std::vector.18"* dereferenceable(24) %319) #3
  br label %79

; <label>:321:                                    ; preds = %113, %98
  %322 = load i64, i64* %31, align 8
  %323 = shl i64 %322, -1
  %324 = sub i64 %322, -5953121503282416136
  %325 = sub i64 %324, -1
  %326 = add i64 %325, -5953121503282416136
  %327 = sub i64 %322, -1
  %328 = mul i64 %326, -1
  %329 = add i64 %322, -2402512942534090112
  %330 = sub i64 %329, -1
  %331 = sub i64 %330, -2402512942534090112
  %332 = sub i64 %322, -1
  %333 = mul i64 %331, -1
  %334 = sub i64 0, -1
  %335 = sub i64 %322, %334
  %336 = add i64 %322, -1
  store i64 %335, i64* %31, align 8
  %337 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  %338 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %337, i32 1
  store %"class.std::vector.18"* %338, %"class.std::vector.18"** %32, align 8
  br label %113

; <label>:339:                                    ; preds = %179, %152
  %340 = load i8*, i8** %33, align 8
  %341 = call i8* @__cxa_begin_catch(i8* %340) #3
  %342 = load %"class.std::vector.18"*, %"class.std::vector.18"** %30, align 8
  %343 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  br label %179

; <label>:344:                                    ; preds = %225, %198
  br label %225

; <label>:345:                                    ; preds = %275, %248
  %346 = load i8*, i8** %33, align 8
  %347 = load i32, i32* %34, align 4
  %348 = insertvalue { i8*, i32 } undef, i8* %346, 0
  %349 = insertvalue { i8*, i32 } %348, i32 %347, 1
  br label %275
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorI8MaxFEdgeIxESaIS2_EEJEEvPT_DpOT0_(%"class.std::vector.18"*) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.18"*
  call void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEC2Ev(%"class.std::vector.18"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEC2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  invoke void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EEC2Ev(%"struct.std::_Vector_base.19"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EEC2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %3 to %"class.std::allocator.20"*
  call void @_ZNSaI8MaxFEdgeIxEEC2Ev(%"class.std::allocator.20"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %3, i32 0, i32 0
  store %class.MaxFEdge* null, %class.MaxFEdge** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %3, i32 0, i32 1
  store %class.MaxFEdge* null, %class.MaxFEdge** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %3, i32 0, i32 2
  store %class.MaxFEdge* null, %class.MaxFEdge** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI8MaxFEdgeIxEEC2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.448
  %5 = load i32, i32* @y.449
  %6 = sub i32 %4, -892675703
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -892675703
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 2010020565, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %47
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2010020565, label %18
    i32 -1385853865, label %26
    i32 -949827275, label %43
    i32 1072326659, label %44
  ]

; <label>:17:                                     ; preds = %15
  br label %47

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1385853865, i32 1072326659
  store i32 %25, i32* %14
  br label %47

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %27, align 8
  %29 = load i32, i32* @x.448
  %30 = load i32, i32* @y.449
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -949827275, i32 1072326659
  store i32 %42, i32* %14
  br label %47

; <label>:43:                                     ; preds = %15
  ret void

; <label>:44:                                     ; preds = %15
  %45 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %45, align 8
  store i32 -1385853865, i32* %14
  br label %47

; <label>:47:                                     ; preds = %44, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %5 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt6vectorI8MaxFEdgeIxESaIS2_EEEE8max_sizeERKS5_(%"class.std::allocator.15"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorI8MaxFEdgeIxESaIS2_EEEE8max_sizeERKS5_(%"class.std::allocator.15"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseISt6vectorI8MaxFEdgeIxESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.456
  %5 = load i32, i32* @y.457
  %6 = add i32 %4, -637924211
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -637924211
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 563681843, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 563681843, label %18
    i32 542896248, label %38
    i32 486112553, label %67
    i32 -1687643465, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 542896248, i32 -1687643465
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %41 = load i32, i32* @x.456
  %42 = load i32, i32* @y.457
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 486112553, i32 -1687643465
  store i32 %66, i32* %14
  br label %71

; <label>:67:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:68:                                     ; preds = %15
  %69 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %69, align 8
  store i32 542896248, i32* %14
  br label %71

; <label>:71:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt16allocator_traitsISaISt6vectorI8MaxFEdgeIxESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.15"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.458
  %7 = load i32, i32* @y.459
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 539127629, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 539127629, label %19
    i32 -762489454, label %39
    i32 1926973603, label %61
    i32 1685296283, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -762489454, i32 1685296283
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.15"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %40, align 8
  %43 = bitcast %"class.std::allocator.15"* %42 to %"class.__gnu_cxx::new_allocator.16"*
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::vector.18"* @_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %43, i64 %44, i8* null)
  store %"class.std::vector.18"* %45, %"class.std::vector.18"** %3
  %46 = load i32, i32* @x.458
  %47 = load i32, i32* @y.459
  %48 = sub i32 %46, -336911714
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -336911714
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1926973603, i32 1685296283
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  ret %"class.std::vector.18"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator.15"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %64, align 8
  %67 = bitcast %"class.std::allocator.15"* %66 to %"class.__gnu_cxx::new_allocator.16"*
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::vector.18"* @_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %67, i64 %68, i8* null)
  store i32 -762489454, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZN9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorI8MaxFEdgeIxESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 224821462, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %74
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 224821462, label %17
    i32 1673723027, label %22
    i32 -1137034200, label %23
    i32 1214332512, label %39
    i32 1140031119, label %59
    i32 -218783418, label %61
  ]

; <label>:16:                                     ; preds = %14
  br label %74

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 1673723027, i32 -1137034200
  store i32 %21, i32* %13
  br label %74

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.460
  %25 = load i32, i32* @y.461
  %26 = add i32 %24, 1985275129
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 1985275129
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 1214332512, i32 -218783418
  store i32 %38, i32* %13
  br label %74

; <label>:39:                                     ; preds = %14
  %40 = load i64, i64* %8, align 8
  %41 = mul i64 %40, 24
  %42 = call i8* @_Znwm(i64 %41)
  %43 = bitcast i8* %42 to %"class.std::vector.18"*
  store %"class.std::vector.18"* %43, %"class.std::vector.18"** %4
  %44 = load i32, i32* @x.460
  %45 = load i32, i32* @y.461
  %46 = sub i32 %44, 1119086501
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1119086501
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1140031119, i32 -218783418
  store i32 %58, i32* %13
  br label %74

; <label>:59:                                     ; preds = %14
  %60 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  ret %"class.std::vector.18"* %60

; <label>:61:                                     ; preds = %14
  %62 = load i64, i64* %8, align 8
  %63 = shl i64 %62, 24
  %64 = sub i64 0, %62
  %65 = add i64 0, %64
  %66 = sub i64 0, %62
  %67 = sub i64 %65, -7338148558700404040
  %68 = add i64 %67, 24
  %69 = add i64 %68, -7338148558700404040
  %70 = add i64 %65, 24
  %71 = mul i64 %62, 24
  %72 = call i8* @_Znwm(i64 %71)
  %73 = bitcast i8* %72 to %"class.std::vector.18"*
  store i32 1214332512, i32* %13
  br label %74

; <label>:74:                                     ; preds = %61, %39, %23, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.25", align 8
  %6 = alloca %"class.std::move_iterator.25", align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca %"class.std::allocator.15"*, align 8
  %9 = alloca %"class.std::move_iterator.25", align 8
  %10 = alloca %"class.std::move_iterator.25", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %5, i32 0, i32 0
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %6, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %12, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %7, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.25"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.25"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.25"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.18"*, %"class.std::vector.18"** %20, align 8
  %22 = call %"class.std::vector.18"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS3_EEES6_ET0_T_S9_S8_(%"class.std::vector.18"* %19, %"class.std::vector.18"* %21, %"class.std::vector.18"* %17)
  ret %"class.std::vector.18"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EESt13move_iteratorIS5_EET0_T_(%"class.std::vector.18"*) #0 comdat {
  %2 = alloca %"class.std::vector.18"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.464
  %6 = load i32, i32* @y.465
  %7 = add i32 %5, -1226907518
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1226907518
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1652491808, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1652491808, label %19
    i32 92901026, label %39
    i32 -1098001163, label %72
    i32 643744827, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 92901026, i32 643744827
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.25", align 8
  %41 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %41, align 8
  %42 = load %"class.std::vector.18"*, %"class.std::vector.18"** %41, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEEC2ES5_(%"class.std::move_iterator.25"* %40, %"class.std::vector.18"* %42)
  %43 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %40, i32 0, i32 0
  %44 = load %"class.std::vector.18"*, %"class.std::vector.18"** %43, align 8
  store %"class.std::vector.18"* %44, %"class.std::vector.18"** %2
  %45 = load i32, i32* @x.464
  %46 = load i32, i32* @y.465
  %47 = sub i32 %45, -777787785
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -777787785
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1098001163, i32 643744827
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %2
  ret %"class.std::vector.18"* %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::move_iterator.25", align 8
  %76 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %76, align 8
  %77 = load %"class.std::vector.18"*, %"class.std::vector.18"** %76, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEEC2ES5_(%"class.std::move_iterator.25"* %75, %"class.std::vector.18"* %77)
  %78 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %75, i32 0, i32 0
  %79 = load %"class.std::vector.18"*, %"class.std::vector.18"** %78, align 8
  store i32 92901026, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS3_EEES6_ET0_T_S9_S8_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.25", align 8
  %5 = alloca %"class.std::move_iterator.25", align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.25", align 8
  %9 = alloca %"class.std::move_iterator.25", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %4, i32 0, i32 0
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %5, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %11, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.25"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.25"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.25"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.18"*, %"class.std::vector.18"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %21 = call %"class.std::vector.18"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS5_EEES8_EET0_T_SB_SA_(%"class.std::vector.18"* %18, %"class.std::vector.18"* %20, %"class.std::vector.18"* %16)
  ret %"class.std::vector.18"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS5_EEES8_EET0_T_SB_SA_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.25", align 8
  %5 = alloca %"class.std::move_iterator.25", align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %4, i32 0, i32 0
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %5, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %11, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %6, align 8
  %12 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  store %"class.std::vector.18"* %12, %"class.std::vector.18"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %107, %3
  %14 = invoke zeroext i1 @_ZStneIPSt6vectorI8MaxFEdgeIxESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator.25"* dereferenceable(8) %4, %"class.std::move_iterator.25"* dereferenceable(8) %5)
          to label %15 unwind label %110

; <label>:15:                                     ; preds = %13
  %16 = load i32, i32* @x.468
  %17 = load i32, i32* @y.469
  %18 = sub i32 %16, 1363585701
  %19 = sub i32 %18, 1
  %20 = add i32 %19, 1363585701
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %394

; <label>:42:                                     ; preds = %15, %394
  %43 = load i32, i32* @x.468
  %44 = load i32, i32* @y.469
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %394

; <label>:68:                                     ; preds = %42
  br i1 %14, label %69, label %202

; <label>:69:                                     ; preds = %68
  %70 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %71 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorI8MaxFEdgeIxESaIS2_EEEPT_RS5_(%"class.std::vector.18"* dereferenceable(24) %70) #3
  %72 = invoke dereferenceable(24) %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEEdeEv(%"class.std::move_iterator.25"* %4)
          to label %73 unwind label %110

; <label>:73:                                     ; preds = %69
  invoke void @_ZSt10_ConstructISt6vectorI8MaxFEdgeIxESaIS2_EEJS4_EEvPT_DpOT0_(%"class.std::vector.18"* %71, %"class.std::vector.18"* dereferenceable(24) %72)
          to label %74 unwind label %110

; <label>:74:                                     ; preds = %73
  %75 = load i32, i32* @x.468
  %76 = load i32, i32* @y.469
  %77 = add i32 %75, -1328899265
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -1328899265
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %395

; <label>:89:                                     ; preds = %74, %395
  %90 = load i32, i32* @x.468
  %91 = load i32, i32* @y.469
  %92 = sub i32 %90, 1327909641
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 1327909641
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %395

; <label>:104:                                    ; preds = %89
  br label %105

; <label>:105:                                    ; preds = %104
  %106 = invoke dereferenceable(8) %"class.std::move_iterator.25"* @_ZNSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEEppEv(%"class.std::move_iterator.25"* %4)
          to label %107 unwind label %110

; <label>:107:                                    ; preds = %105
  %108 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %109 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %108, i32 1
  store %"class.std::vector.18"* %109, %"class.std::vector.18"** %7, align 8
  br label %13

; <label>:110:                                    ; preds = %105, %73, %69, %13
  %111 = landingpad { i8*, i32 }
          catch i8* null
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %8, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %9, align 4
  br label %114

; <label>:114:                                    ; preds = %110
  %115 = load i32, i32* @x.468
  %116 = load i32, i32* @y.469
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %396

; <label>:140:                                    ; preds = %114, %396
  %141 = load i8*, i8** %8, align 8
  %142 = call i8* @__cxa_begin_catch(i8* %141) #3
  %143 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %144 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %145 = load i32, i32* @x.468
  %146 = load i32, i32* @y.469
  %147 = add i32 %145, -1355556989
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, -1355556989
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  br i1 %157, label %159, label %396

; <label>:159:                                    ; preds = %140
  invoke void @_ZSt8_DestroyIPSt6vectorI8MaxFEdgeIxESaIS2_EEEvT_S6_(%"class.std::vector.18"* %143, %"class.std::vector.18"* %144)
          to label %160 unwind label %204

; <label>:160:                                    ; preds = %159
  %161 = load i32, i32* @x.468
  %162 = load i32, i32* @y.469
  %163 = sub i32 %161, -776161750
  %164 = sub i32 %163, 1
  %165 = add i32 %164, -776161750
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  br i1 %173, label %175, label %401

; <label>:175:                                    ; preds = %160, %401
  %176 = load i32, i32* @x.468
  %177 = load i32, i32* @y.469
  %178 = sub i32 0, 1
  %179 = add i32 %176, %178
  %180 = sub i32 %176, 1
  %181 = mul i32 %176, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %177, 10
  %185 = xor i1 %183, true
  %186 = xor i1 %184, true
  %187 = xor i1 true, true
  %188 = and i1 %185, true
  %189 = and i1 %183, %187
  %190 = and i1 %186, true
  %191 = and i1 %184, %187
  %192 = or i1 %188, %189
  %193 = or i1 %190, %191
  %194 = xor i1 %192, %193
  %195 = or i1 %185, %186
  %196 = xor i1 %195, true
  %197 = or i1 true, %187
  %198 = and i1 %196, %197
  %199 = or i1 %194, %198
  %200 = or i1 %183, %184
  br i1 %199, label %201, label %401

; <label>:201:                                    ; preds = %175
  invoke void @__cxa_rethrow() #12
          to label %393 unwind label %204

; <label>:202:                                    ; preds = %68
  %203 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  ret %"class.std::vector.18"* %203

; <label>:204:                                    ; preds = %201, %159
  %205 = load i32, i32* @x.468
  %206 = load i32, i32* @y.469
  %207 = sub i32 0, 1
  %208 = add i32 %205, %207
  %209 = sub i32 %205, 1
  %210 = mul i32 %205, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %206, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 false, true
  %217 = and i1 %214, false
  %218 = and i1 %212, %216
  %219 = and i1 %215, false
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 false, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  br i1 %228, label %230, label %402

; <label>:230:                                    ; preds = %204, %402
  %231 = landingpad { i8*, i32 }
          cleanup
  %232 = extractvalue { i8*, i32 } %231, 0
  store i8* %232, i8** %8, align 8
  %233 = extractvalue { i8*, i32 } %231, 1
  store i32 %233, i32* %9, align 4
  %234 = load i32, i32* @x.468
  %235 = load i32, i32* @y.469
  %236 = sub i32 0, 1
  %237 = add i32 %234, %236
  %238 = sub i32 %234, 1
  %239 = mul i32 %234, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %235, 10
  %243 = xor i1 %241, true
  %244 = xor i1 %242, true
  %245 = xor i1 true, true
  %246 = and i1 %243, true
  %247 = and i1 %241, %245
  %248 = and i1 %244, true
  %249 = and i1 %242, %245
  %250 = or i1 %246, %247
  %251 = or i1 %248, %249
  %252 = xor i1 %250, %251
  %253 = or i1 %243, %244
  %254 = xor i1 %253, true
  %255 = or i1 true, %245
  %256 = and i1 %254, %255
  %257 = or i1 %252, %256
  %258 = or i1 %241, %242
  br i1 %257, label %259, label %402

; <label>:259:                                    ; preds = %230
  invoke void @__cxa_end_catch()
          to label %260 unwind label %349

; <label>:260:                                    ; preds = %259
  %261 = load i32, i32* @x.468
  %262 = load i32, i32* @y.469
  %263 = sub i32 %261, 411131339
  %264 = sub i32 %263, 1
  %265 = add i32 %264, 411131339
  %266 = sub i32 %261, 1
  %267 = mul i32 %261, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %262, 10
  %271 = and i1 %269, %270
  %272 = xor i1 %269, %270
  %273 = or i1 %271, %272
  %274 = or i1 %269, %270
  br i1 %273, label %275, label %406

; <label>:275:                                    ; preds = %260, %406
  %276 = load i32, i32* @x.468
  %277 = load i32, i32* @y.469
  %278 = sub i32 0, 1
  %279 = add i32 %276, %278
  %280 = sub i32 %276, 1
  %281 = mul i32 %276, %279
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %277, 10
  %285 = xor i1 %283, true
  %286 = xor i1 %284, true
  %287 = xor i1 false, true
  %288 = and i1 %285, false
  %289 = and i1 %283, %287
  %290 = and i1 %286, false
  %291 = and i1 %284, %287
  %292 = or i1 %288, %289
  %293 = or i1 %290, %291
  %294 = xor i1 %292, %293
  %295 = or i1 %285, %286
  %296 = xor i1 %295, true
  %297 = or i1 false, %287
  %298 = and i1 %296, %297
  %299 = or i1 %294, %298
  %300 = or i1 %283, %284
  br i1 %299, label %301, label %406

; <label>:301:                                    ; preds = %275
  br label %303
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:303:                                    ; preds = %301
  %304 = load i32, i32* @x.468
  %305 = load i32, i32* @y.469
  %306 = add i32 %304, -894530166
  %307 = sub i32 %306, 1
  %308 = sub i32 %307, -894530166
  %309 = sub i32 %304, 1
  %310 = mul i32 %304, %308
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %305, 10
  %314 = xor i1 %312, true
  %315 = xor i1 %313, true
  %316 = xor i1 false, true
  %317 = and i1 %314, false
  %318 = and i1 %312, %316
  %319 = and i1 %315, false
  %320 = and i1 %313, %316
  %321 = or i1 %317, %318
  %322 = or i1 %319, %320
  %323 = xor i1 %321, %322
  %324 = or i1 %314, %315
  %325 = xor i1 %324, true
  %326 = or i1 false, %316
  %327 = and i1 %325, %326
  %328 = or i1 %323, %327
  %329 = or i1 %312, %313
  br i1 %328, label %330, label %407

; <label>:330:                                    ; preds = %303, %407
  %331 = load i8*, i8** %8, align 8
  %332 = load i32, i32* %9, align 4
  %333 = insertvalue { i8*, i32 } undef, i8* %331, 0
  %334 = insertvalue { i8*, i32 } %333, i32 %332, 1
  %335 = load i32, i32* @x.468
  %336 = load i32, i32* @y.469
  %337 = sub i32 0, 1
  %338 = add i32 %335, %337
  %339 = sub i32 %335, 1
  %340 = mul i32 %335, %338
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %336, 10
  %344 = and i1 %342, %343
  %345 = xor i1 %342, %343
  %346 = or i1 %344, %345
  %347 = or i1 %342, %343
  br i1 %346, label %348, label %407

; <label>:348:                                    ; preds = %330
  resume { i8*, i32 } %334

; <label>:349:                                    ; preds = %259
  %350 = load i32, i32* @x.468
  %351 = load i32, i32* @y.469
  %352 = sub i32 %350, 381425459
  %353 = sub i32 %352, 1
  %354 = add i32 %353, 381425459
  %355 = sub i32 %350, 1
  %356 = mul i32 %350, %354
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %351, 10
  %360 = and i1 %358, %359
  %361 = xor i1 %358, %359
  %362 = or i1 %360, %361
  %363 = or i1 %358, %359
  br i1 %362, label %364, label %412

; <label>:364:                                    ; preds = %349, %412
  %365 = landingpad { i8*, i32 }
          catch i8* null
  %366 = extractvalue { i8*, i32 } %365, 0
  call void @__clang_call_terminate(i8* %366) #8
  %367 = load i32, i32* @x.468
  %368 = load i32, i32* @y.469
  %369 = sub i32 0, 1
  %370 = add i32 %367, %369
  %371 = sub i32 %367, 1
  %372 = mul i32 %367, %370
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %368, 10
  %376 = xor i1 %374, true
  %377 = xor i1 %375, true
  %378 = xor i1 false, true
  %379 = and i1 %376, false
  %380 = and i1 %374, %378
  %381 = and i1 %377, false
  %382 = and i1 %375, %378
  %383 = or i1 %379, %380
  %384 = or i1 %381, %382
  %385 = xor i1 %383, %384
  %386 = or i1 %376, %377
  %387 = xor i1 %386, true
  %388 = or i1 false, %378
  %389 = and i1 %387, %388
  %390 = or i1 %385, %389
  %391 = or i1 %374, %375
  br i1 %390, label %392, label %412

; <label>:392:                                    ; preds = %364
  unreachable

; <label>:393:                                    ; preds = %201
  unreachable

; <label>:394:                                    ; preds = %42, %15
  br label %42

; <label>:395:                                    ; preds = %89, %74
  br label %89

; <label>:396:                                    ; preds = %140, %114
  %397 = load i8*, i8** %8, align 8
  %398 = call i8* @__cxa_begin_catch(i8* %397) #3
  %399 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %400 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  br label %140

; <label>:401:                                    ; preds = %175, %160
  br label %175

; <label>:402:                                    ; preds = %230, %204
  %403 = landingpad { i8*, i32 }
          cleanup
  %404 = extractvalue { i8*, i32 } %403, 0
  store i8* %404, i8** %8, align 8
  %405 = extractvalue { i8*, i32 } %403, 1
  store i32 %405, i32* %9, align 4
  br label %230

; <label>:406:                                    ; preds = %275, %260
  br label %275

; <label>:407:                                    ; preds = %330, %303
  %408 = load i8*, i8** %8, align 8
  %409 = load i32, i32* %9, align 4
  %410 = insertvalue { i8*, i32 } undef, i8* %408, 0
  %411 = insertvalue { i8*, i32 } %410, i32 %409, 1
  br label %330

; <label>:412:                                    ; preds = %364, %349
  %413 = landingpad { i8*, i32 }
          catch i8* null
  %414 = extractvalue { i8*, i32 } %413, 0
  call void @__clang_call_terminate(i8* %414) #8
  br label %364
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorI8MaxFEdgeIxESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator.25"* dereferenceable(8), %"class.std::move_iterator.25"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.25"*, align 8
  %4 = alloca %"class.std::move_iterator.25"*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %3, align 8
  store %"class.std::move_iterator.25"* %1, %"class.std::move_iterator.25"** %4, align 8
  %5 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %3, align 8
  %6 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt6vectorI8MaxFEdgeIxESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator.25"* dereferenceable(8) %5, %"class.std::move_iterator.25"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, true
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorI8MaxFEdgeIxESaIS2_EEJS4_EEvPT_DpOT0_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.18"*
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt7forwardISt6vectorI8MaxFEdgeIxESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.18"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEC2EOS3_(%"class.std::vector.18"* %7, %"class.std::vector.18"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEEdeEv(%"class.std::move_iterator.25"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.474
  %6 = load i32, i32* @y.475
  %7 = add i32 %5, -1428770716
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1428770716
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -820624545, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -820624545, label %19
    i32 412909206, label %27
    i32 -3929086, label %58
    i32 -1162603770, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 412909206, i32 -1162603770
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.25"*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %28, align 8
  %29 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %29, i32 0, i32 0
  %31 = load %"class.std::vector.18"*, %"class.std::vector.18"** %30, align 8
  store %"class.std::vector.18"* %31, %"class.std::vector.18"** %2
  %32 = load i32, i32* @x.474
  %33 = load i32, i32* @y.475
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -3929086, i32 -1162603770
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %2
  ret %"class.std::vector.18"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::move_iterator.25"*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %61, align 8
  %62 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %61, align 8
  %63 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %62, i32 0, i32 0
  %64 = load %"class.std::vector.18"*, %"class.std::vector.18"** %63, align 8
  store i32 412909206, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.25"* @_ZNSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEEppEv(%"class.std::move_iterator.25"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.25"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.476
  %6 = load i32, i32* @y.477
  %7 = add i32 %5, 618937937
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 618937937
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1547049731, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1547049731, label %19
    i32 -1743098697, label %39
    i32 -601153663, label %72
    i32 22372932, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1743098697, i32 22372932
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.25"*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %40, align 8
  %41 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %40, align 8
  store %"class.std::move_iterator.25"* %41, %"class.std::move_iterator.25"** %2
  %42 = load volatile %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %2
  %43 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %42, i32 0, i32 0
  %44 = load %"class.std::vector.18"*, %"class.std::vector.18"** %43, align 8
  %45 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %44, i32 1
  store %"class.std::vector.18"* %45, %"class.std::vector.18"** %43, align 8
  %46 = load i32, i32* @x.476
  %47 = load i32, i32* @y.477
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -601153663, i32 22372932
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %2
  ret %"class.std::move_iterator.25"* %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::move_iterator.25"*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %75, align 8
  %76 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %75, align 8
  %77 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %76, i32 0, i32 0
  %78 = load %"class.std::vector.18"*, %"class.std::vector.18"** %77, align 8
  %79 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %78, i32 1
  store %"class.std::vector.18"* %79, %"class.std::vector.18"** %77, align 8
  store i32 -1743098697, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorI8MaxFEdgeIxESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator.25"* dereferenceable(8), %"class.std::move_iterator.25"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.25"*, align 8
  %4 = alloca %"class.std::move_iterator.25"*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %3, align 8
  store %"class.std::move_iterator.25"* %1, %"class.std::move_iterator.25"** %4, align 8
  %5 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %3, align 8
  %6 = call %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEE4baseEv(%"class.std::move_iterator.25"* %5)
  %7 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %4, align 8
  %8 = call %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEE4baseEv(%"class.std::move_iterator.25"* %7)
  %9 = icmp eq %"class.std::vector.18"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEE4baseEv(%"class.std::move_iterator.25"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.25"*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %2, align 8
  %3 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  ret %"class.std::vector.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZSt7forwardISt6vectorI8MaxFEdgeIxESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  ret %"class.std::vector.18"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEC2EOS3_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorI8MaxFEdgeIxESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.18"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.18"* %8 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.19"* %6, %"struct.std::_Vector_base.19"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorI8MaxFEdgeIxESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  ret %"class.std::vector.18"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.19"*, align 8
  %4 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %3, align 8
  store %"struct.std::_Vector_base.19"* %1, %"struct.std::_Vector_base.19"** %4, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaI8MaxFEdgeIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %6, %"class.std::allocator.20"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %10, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaI8MaxFEdgeIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.20"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.490
  %6 = load i32, i32* @y.491
  %7 = add i32 %5, -240914084
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -240914084
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1772478326, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1772478326, label %19
    i32 399191350, label %39
    i32 469824487, label %57
    i32 -1159305783, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 399191350, i32 -1159305783
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %40, align 8
  %41 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %40, align 8
  store %"class.std::allocator.20"* %41, %"class.std::allocator.20"** %2
  %42 = load i32, i32* @x.490
  %43 = load i32, i32* @y.491
  %44 = sub i32 %42, -1026428187
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1026428187
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 469824487, i32 -1159305783
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::allocator.20"*, %"class.std::allocator.20"** %2
  ret %"class.std::allocator.20"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %60, align 8
  %61 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %60, align 8
  store i32 399191350, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %5 to %"class.std::allocator.20"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaI8MaxFEdgeIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1) %7) #3
  call void @_ZNSaI8MaxFEdgeIxEEC2ERKS1_(%"class.std::allocator.20"* %6, %"class.std::allocator.20"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %5, i32 0, i32 0
  store %class.MaxFEdge* null, %class.MaxFEdge** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %5, i32 0, i32 1
  store %class.MaxFEdge* null, %class.MaxFEdge** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %5, i32 0, i32 2
  store %class.MaxFEdge* null, %class.MaxFEdge** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.494
  %6 = load i32, i32* @y.495
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1857430414, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1857430414, label %18
    i32 -1963360037, label %38
    i32 -1602200210, label %66
    i32 -589451862, label %67
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1963360037, i32 -589451862
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, align 8
  %40 = alloca %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %39, align 8
  store %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %1, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %40, align 8
  %41 = load %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %41, i32 0, i32 0
  %43 = load %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %43, i32 0, i32 0
  call void @_ZSt4swapIP8MaxFEdgeIxEEvRT_S4_(%class.MaxFEdge** dereferenceable(8) %42, %class.MaxFEdge** dereferenceable(8) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %41, i32 0, i32 1
  %46 = load %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %40, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %46, i32 0, i32 1
  call void @_ZSt4swapIP8MaxFEdgeIxEEvRT_S4_(%class.MaxFEdge** dereferenceable(8) %45, %class.MaxFEdge** dereferenceable(8) %47) #3
  %48 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %41, i32 0, i32 2
  %49 = load %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %40, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %49, i32 0, i32 2
  call void @_ZSt4swapIP8MaxFEdgeIxEEvRT_S4_(%class.MaxFEdge** dereferenceable(8) %48, %class.MaxFEdge** dereferenceable(8) %50) #3
  %51 = load i32, i32* @x.494
  %52 = load i32, i32* @y.495
  %53 = sub i32 %51, 51009843
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 51009843
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1602200210, i32 -589451862
  store i32 %65, i32* %14
  br label %80

; <label>:66:                                     ; preds = %15
  ret void

; <label>:67:                                     ; preds = %15
  %68 = alloca %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, align 8
  %69 = alloca %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %68, align 8
  store %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %1, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %69, align 8
  %70 = load %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %68, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %69, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %72, i32 0, i32 0
  call void @_ZSt4swapIP8MaxFEdgeIxEEvRT_S4_(%class.MaxFEdge** dereferenceable(8) %71, %class.MaxFEdge** dereferenceable(8) %73) #3
  %74 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %70, i32 0, i32 1
  %75 = load %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %69, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %75, i32 0, i32 1
  call void @_ZSt4swapIP8MaxFEdgeIxEEvRT_S4_(%class.MaxFEdge** dereferenceable(8) %74, %class.MaxFEdge** dereferenceable(8) %76) #3
  %77 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %70, i32 0, i32 2
  %78 = load %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"** %69, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %78, i32 0, i32 2
  call void @_ZSt4swapIP8MaxFEdgeIxEEvRT_S4_(%class.MaxFEdge** dereferenceable(8) %77, %class.MaxFEdge** dereferenceable(8) %79) #3
  store i32 -1963360037, i32* %14
  br label %80

; <label>:80:                                     ; preds = %67, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI8MaxFEdgeIxEEC2ERKS1_(%"class.std::allocator.20"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  %6 = bitcast %"class.std::allocator.20"* %5 to %"class.__gnu_cxx::new_allocator.21"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.21"* %6, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %1, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIP8MaxFEdgeIxEEvRT_S4_(%class.MaxFEdge** dereferenceable(8), %class.MaxFEdge** dereferenceable(8)) #5 comdat {
  %3 = alloca %class.MaxFEdge**, align 8
  %4 = alloca %class.MaxFEdge**, align 8
  %5 = alloca %class.MaxFEdge*, align 8
  store %class.MaxFEdge** %0, %class.MaxFEdge*** %3, align 8
  store %class.MaxFEdge** %1, %class.MaxFEdge*** %4, align 8
  %6 = load %class.MaxFEdge**, %class.MaxFEdge*** %3, align 8
  %7 = call dereferenceable(8) %class.MaxFEdge** @_ZSt4moveIRP8MaxFEdgeIxEEONSt16remove_referenceIT_E4typeEOS5_(%class.MaxFEdge** dereferenceable(8) %6) #3
  %8 = load %class.MaxFEdge*, %class.MaxFEdge** %7, align 8
  store %class.MaxFEdge* %8, %class.MaxFEdge** %5, align 8
  %9 = load %class.MaxFEdge**, %class.MaxFEdge*** %4, align 8
  %10 = call dereferenceable(8) %class.MaxFEdge** @_ZSt4moveIRP8MaxFEdgeIxEEONSt16remove_referenceIT_E4typeEOS5_(%class.MaxFEdge** dereferenceable(8) %9) #3
  %11 = load %class.MaxFEdge*, %class.MaxFEdge** %10, align 8
  %12 = load %class.MaxFEdge**, %class.MaxFEdge*** %3, align 8
  store %class.MaxFEdge* %11, %class.MaxFEdge** %12, align 8
  %13 = call dereferenceable(8) %class.MaxFEdge** @_ZSt4moveIRP8MaxFEdgeIxEEONSt16remove_referenceIT_E4typeEOS5_(%class.MaxFEdge** dereferenceable(8) %5) #3
  %14 = load %class.MaxFEdge*, %class.MaxFEdge** %13, align 8
  %15 = load %class.MaxFEdge**, %class.MaxFEdge*** %4, align 8
  store %class.MaxFEdge* %14, %class.MaxFEdge** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.MaxFEdge** @_ZSt4moveIRP8MaxFEdgeIxEEONSt16remove_referenceIT_E4typeEOS5_(%class.MaxFEdge** dereferenceable(8)) #5 comdat {
  %2 = alloca %class.MaxFEdge**, align 8
  store %class.MaxFEdge** %0, %class.MaxFEdge*** %2, align 8
  %3 = load %class.MaxFEdge**, %class.MaxFEdge*** %2, align 8
  ret %class.MaxFEdge** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorI8MaxFEdgeIxESaIS2_EEEC2ES5_(%"class.std::move_iterator.25"*, %"class.std::vector.18"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.504
  %6 = load i32, i32* @y.505
  %7 = sub i32 %5, 1066133606
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1066133606
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1269901332, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1269901332, label %19
    i32 -1075270200, label %39
    i32 -203255336, label %72
    i32 1154090815, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1075270200, i32 1154090815
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.25"*, align 8
  %41 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %40, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %41, align 8
  %42 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %40, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %42, i32 0, i32 0
  %44 = load %"class.std::vector.18"*, %"class.std::vector.18"** %41, align 8
  store %"class.std::vector.18"* %44, %"class.std::vector.18"** %43, align 8
  %45 = load i32, i32* @x.504
  %46 = load i32, i32* @y.505
  %47 = sub i32 %45, -39306890
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -39306890
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -203255336, i32 1154090815
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::move_iterator.25"*, align 8
  %75 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::move_iterator.25"* %0, %"class.std::move_iterator.25"** %74, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %75, align 8
  %76 = load %"class.std::move_iterator.25"*, %"class.std::move_iterator.25"** %74, align 8
  %77 = getelementptr inbounds %"class.std::move_iterator.25", %"class.std::move_iterator.25"* %76, i32 0, i32 0
  %78 = load %"class.std::vector.18"*, %"class.std::vector.18"** %75, align 8
  store %"class.std::vector.18"* %78, %"class.std::vector.18"** %77, align 8
  store i32 -1075270200, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >, std::allocator<std::vector<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %9, i64 %10
  ret %"class.std::vector.18"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE9push_backEOS1_(%"class.std::vector.18"*, %class.MaxFEdge* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %class.MaxFEdge*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = load %class.MaxFEdge*, %class.MaxFEdge** %4, align 8
  %7 = call dereferenceable(24) %class.MaxFEdge* @_ZSt4moveIR8MaxFEdgeIxEEONSt16remove_referenceIT_E4typeEOS4_(%class.MaxFEdge* dereferenceable(24) %6) #3
  call void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.18"* %5, %class.MaxFEdge* dereferenceable(24) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %class.MaxFEdge*, %class.MaxFEdge** %6, align 8
  %8 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %class.MaxFEdge*, %class.MaxFEdge** %10, align 8
  %12 = ptrtoint %class.MaxFEdge* %7 to i64
  %13 = ptrtoint %class.MaxFEdge* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8MaxFEdgeIxEC2Eixi(%class.MaxFEdge*, i32, i64, i32) unnamed_addr #5 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.512
  %8 = load i32, i32* @y.513
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1127578215, i32* %16
  br label %17

; <label>:17:                                     ; preds = %4, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1127578215, label %20
    i32 231622143, label %28
    i32 720083871, label %55
    i32 -606835142, label %56
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 231622143, i32 -606835142
  store i32 %27, i32* %16
  br label %68

; <label>:28:                                     ; preds = %17
  %29 = alloca %class.MaxFEdge*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i64, align 8
  %32 = alloca i32, align 4
  store %class.MaxFEdge* %0, %class.MaxFEdge** %29, align 8
  store i32 %1, i32* %30, align 4
  store i64 %2, i64* %31, align 8
  store i32 %3, i32* %32, align 4
  %33 = load %class.MaxFEdge*, %class.MaxFEdge** %29, align 8
  %34 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %33, i32 0, i32 0
  %35 = load i32, i32* %30, align 4
  store i32 %35, i32* %34, align 8
  %36 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %33, i32 0, i32 2
  %37 = load i64, i64* %31, align 8
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %33, i32 0, i32 3
  %39 = load i32, i32* %32, align 4
  store i32 %39, i32* %38, align 8
  %40 = load i32, i32* @x.512
  %41 = load i32, i32* @y.513
  %42 = sub i32 %40, 1550601596
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1550601596
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 720083871, i32 -606835142
  store i32 %54, i32* %16
  br label %68

; <label>:55:                                     ; preds = %17
  ret void

; <label>:56:                                     ; preds = %17
  %57 = alloca %class.MaxFEdge*, align 8
  %58 = alloca i32, align 4
  %59 = alloca i64, align 8
  %60 = alloca i32, align 4
  store %class.MaxFEdge* %0, %class.MaxFEdge** %57, align 8
  store i32 %1, i32* %58, align 4
  store i64 %2, i64* %59, align 8
  store i32 %3, i32* %60, align 4
  %61 = load %class.MaxFEdge*, %class.MaxFEdge** %57, align 8
  %62 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %61, i32 0, i32 0
  %63 = load i32, i32* %58, align 4
  store i32 %63, i32* %62, align 8
  %64 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %61, i32 0, i32 2
  %65 = load i64, i64* %59, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %61, i32 0, i32 3
  %67 = load i32, i32* %60, align 4
  store i32 %67, i32* %66, align 8
  store i32 231622143, i32* %16
  br label %68

; <label>:68:                                     ; preds = %56, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.18"*, %class.MaxFEdge* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %class.MaxFEdge*
  %4 = alloca %class.MaxFEdge*
  %5 = alloca %"class.std::vector.18"*
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca %class.MaxFEdge*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %6, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %7, align 8
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  store %"class.std::vector.18"* %8, %"class.std::vector.18"** %5
  %9 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  %10 = bitcast %"class.std::vector.18"* %9 to %"struct.std::_Vector_base.19"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %class.MaxFEdge*, %class.MaxFEdge** %12, align 8
  store %class.MaxFEdge* %13, %class.MaxFEdge** %4
  %14 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  %15 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %class.MaxFEdge*, %class.MaxFEdge** %17, align 8
  store %class.MaxFEdge* %18, %class.MaxFEdge** %3
  %19 = alloca i32
  store i32 775251601, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %51
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 775251601, label %23
    i32 -1605618146, label %28
    i32 431638454, label %46
    i32 691096139, label %50
  ]

; <label>:22:                                     ; preds = %20
  br label %51

; <label>:23:                                     ; preds = %20
  %24 = load volatile %class.MaxFEdge*, %class.MaxFEdge** %4
  %25 = load volatile %class.MaxFEdge*, %class.MaxFEdge** %3
  %26 = icmp ne %class.MaxFEdge* %24, %25
  %27 = select i1 %26, i32 -1605618146, i32 431638454
  store i32 %27, i32* %19
  br label %51

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  %30 = bitcast %"class.std::vector.18"* %29 to %"struct.std::_Vector_base.19"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %31 to %"class.std::allocator.20"*
  %33 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  %34 = bitcast %"class.std::vector.18"* %33 to %"struct.std::_Vector_base.19"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %class.MaxFEdge*, %class.MaxFEdge** %36, align 8
  %38 = load %class.MaxFEdge*, %class.MaxFEdge** %7, align 8
  %39 = call dereferenceable(24) %class.MaxFEdge* @_ZSt7forwardI8MaxFEdgeIxEEOT_RNSt16remove_referenceIS2_E4typeE(%class.MaxFEdge* dereferenceable(24) %38) #3
  call void @_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %32, %class.MaxFEdge* %37, %class.MaxFEdge* dereferenceable(24) %39)
  %40 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  %41 = bitcast %"class.std::vector.18"* %40 to %"struct.std::_Vector_base.19"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %class.MaxFEdge*, %class.MaxFEdge** %43, align 8
  %45 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %44, i32 1
  store %class.MaxFEdge* %45, %class.MaxFEdge** %43, align 8
  store i32 691096139, i32* %19
  br label %51

; <label>:46:                                     ; preds = %20
  %47 = load %class.MaxFEdge*, %class.MaxFEdge** %7, align 8
  %48 = call dereferenceable(24) %class.MaxFEdge* @_ZSt7forwardI8MaxFEdgeIxEEOT_RNSt16remove_referenceIS2_E4typeE(%class.MaxFEdge* dereferenceable(24) %47) #3
  %49 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  call void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.18"* %49, %class.MaxFEdge* dereferenceable(24) %48)
  store i32 691096139, i32* %19
  br label %51

; <label>:50:                                     ; preds = %20
  ret void

; <label>:51:                                     ; preds = %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.MaxFEdge* @_ZSt4moveIR8MaxFEdgeIxEEONSt16remove_referenceIT_E4typeEOS4_(%class.MaxFEdge* dereferenceable(24)) #5 comdat {
  %2 = alloca %class.MaxFEdge*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.516
  %6 = load i32, i32* @y.517
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -444828894, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -444828894, label %18
    i32 1375938267, label %26
    i32 -1639880704, label %44
    i32 1635303252, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1375938267, i32 1635303252
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %class.MaxFEdge*, align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %27, align 8
  %28 = load %class.MaxFEdge*, %class.MaxFEdge** %27, align 8
  store %class.MaxFEdge* %28, %class.MaxFEdge** %2
  %29 = load i32, i32* @x.516
  %30 = load i32, i32* @y.517
  %31 = add i32 %29, -1985223503
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1985223503
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1639880704, i32 1635303252
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  %45 = load volatile %class.MaxFEdge*, %class.MaxFEdge** %2
  ret %class.MaxFEdge* %45

; <label>:46:                                     ; preds = %15
  %47 = alloca %class.MaxFEdge*, align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %47, align 8
  %48 = load %class.MaxFEdge*, %class.MaxFEdge** %47, align 8
  store i32 1375938267, i32* %14
  br label %49

; <label>:49:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1), %class.MaxFEdge*, %class.MaxFEdge* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca %class.MaxFEdge*, align 8
  %6 = alloca %class.MaxFEdge*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %5, align 8
  store %class.MaxFEdge* %2, %class.MaxFEdge** %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load %class.MaxFEdge*, %class.MaxFEdge** %5, align 8
  %10 = load %class.MaxFEdge*, %class.MaxFEdge** %6, align 8
  %11 = call dereferenceable(24) %class.MaxFEdge* @_ZSt7forwardI8MaxFEdgeIxEEOT_RNSt16remove_referenceIS2_E4typeE(%class.MaxFEdge* dereferenceable(24) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"* %8, %class.MaxFEdge* %9, %class.MaxFEdge* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.MaxFEdge* @_ZSt7forwardI8MaxFEdgeIxEEOT_RNSt16remove_referenceIS2_E4typeE(%class.MaxFEdge* dereferenceable(24)) #5 comdat {
  %2 = alloca %class.MaxFEdge*, align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %2, align 8
  %3 = load %class.MaxFEdge*, %class.MaxFEdge** %2, align 8
  ret %class.MaxFEdge* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.18"*, %class.MaxFEdge* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.522
  %4 = load i32, i32* @y.523
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %186

; <label>:16:                                     ; preds = %2, %186
  %17 = alloca %"class.std::vector.18"*, align 8
  %18 = alloca %class.MaxFEdge*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %class.MaxFEdge*, align 8
  %21 = alloca %class.MaxFEdge*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %17, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %18, align 8
  %24 = load %"class.std::vector.18"*, %"class.std::vector.18"** %17, align 8
  %25 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"* %24, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i32 0, i32 0))
  store i64 %25, i64* %19, align 8
  %26 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %27 = load i64, i64* %19, align 8
  %28 = call %class.MaxFEdge* @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %26, i64 %27)
  store %class.MaxFEdge* %28, %class.MaxFEdge** %20, align 8
  %29 = load %class.MaxFEdge*, %class.MaxFEdge** %20, align 8
  store %class.MaxFEdge* %29, %class.MaxFEdge** %21, align 8
  %30 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %31 to %"class.std::allocator.20"*
  %33 = load %class.MaxFEdge*, %class.MaxFEdge** %20, align 8
  %34 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv(%"class.std::vector.18"* %24) #3
  %35 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %33, i64 %34
  %36 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %37 = call dereferenceable(24) %class.MaxFEdge* @_ZSt7forwardI8MaxFEdgeIxEEOT_RNSt16remove_referenceIS2_E4typeE(%class.MaxFEdge* dereferenceable(24) %36) #3
  %38 = load i32, i32* @x.522
  %39 = load i32, i32* @y.523
  %40 = sub i32 %38, 231152645
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 231152645
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %186

; <label>:52:                                     ; preds = %16
  invoke void @_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %32, %class.MaxFEdge* %35, %class.MaxFEdge* dereferenceable(24) %37)
          to label %53 unwind label %69

; <label>:53:                                     ; preds = %52
  store %class.MaxFEdge* null, %class.MaxFEdge** %21, align 8
  %54 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %55, i32 0, i32 0
  %57 = load %class.MaxFEdge*, %class.MaxFEdge** %56, align 8
  %58 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %59, i32 0, i32 1
  %61 = load %class.MaxFEdge*, %class.MaxFEdge** %60, align 8
  %62 = load %class.MaxFEdge*, %class.MaxFEdge** %20, align 8
  %63 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %64 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %63) #3
  %65 = invoke %class.MaxFEdge* @_ZSt34__uninitialized_move_if_noexcept_aIP8MaxFEdgeIxES2_SaIS1_EET0_T_S5_S4_RT1_(%class.MaxFEdge* %57, %class.MaxFEdge* %61, %class.MaxFEdge* %62, %"class.std::allocator.20"* dereferenceable(1) %64)
          to label %66 unwind label %69

; <label>:66:                                     ; preds = %53
  store %class.MaxFEdge* %65, %class.MaxFEdge** %21, align 8
  %67 = load %class.MaxFEdge*, %class.MaxFEdge** %21, align 8
  %68 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %67, i32 1
  store %class.MaxFEdge* %68, %class.MaxFEdge** %21, align 8
  br label %132

; <label>:69:                                     ; preds = %53, %52
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %22, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %23, align 4
  br label %73

; <label>:73:                                     ; preds = %69
  %74 = load i8*, i8** %22, align 8
  %75 = call i8* @__cxa_begin_catch(i8* %74) #3
  %76 = load %class.MaxFEdge*, %class.MaxFEdge** %21, align 8
  %77 = icmp ne %class.MaxFEdge* %76, null
  br i1 %77, label %90, label %78

; <label>:78:                                     ; preds = %73
  %79 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %79, i32 0, i32 0
  %81 = bitcast %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %80 to %"class.std::allocator.20"*
  %82 = load %class.MaxFEdge*, %class.MaxFEdge** %20, align 8
  %83 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv(%"class.std::vector.18"* %24) #3
  %84 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %82, i64 %83
  invoke void @_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.20"* dereferenceable(1) %81, %class.MaxFEdge* %84)
          to label %85 unwind label %86

; <label>:85:                                     ; preds = %78
  br label %96

; <label>:86:                                     ; preds = %130, %129, %90, %78
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %22, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %23, align 4
  invoke void @__cxa_end_catch()
          to label %131 unwind label %182

; <label>:90:                                     ; preds = %73
  %91 = load %class.MaxFEdge*, %class.MaxFEdge** %20, align 8
  %92 = load %class.MaxFEdge*, %class.MaxFEdge** %21, align 8
  %93 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %94 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %93) #3
  invoke void @_ZSt8_DestroyIP8MaxFEdgeIxES1_EvT_S3_RSaIT0_E(%class.MaxFEdge* %91, %class.MaxFEdge* %92, %"class.std::allocator.20"* dereferenceable(1) %94)
          to label %95 unwind label %86

; <label>:95:                                     ; preds = %90
  br label %96

; <label>:96:                                     ; preds = %95, %85
  %97 = load i32, i32* @x.522
  %98 = load i32, i32* @y.523
  %99 = add i32 %97, 35244609
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, 35244609
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %208

; <label>:111:                                    ; preds = %96, %208
  %112 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %113 = load %class.MaxFEdge*, %class.MaxFEdge** %20, align 8
  %114 = load i64, i64* %19, align 8
  %115 = load i32, i32* @x.522
  %116 = load i32, i32* @y.523
  %117 = sub i32 %115, 1319868428
  %118 = sub i32 %117, 1
  %119 = add i32 %118, 1319868428
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  br i1 %127, label %129, label %208

; <label>:129:                                    ; preds = %111
  invoke void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %112, %class.MaxFEdge* %113, i64 %114)
          to label %130 unwind label %86

; <label>:130:                                    ; preds = %129
  invoke void @__cxa_rethrow() #12
          to label %185 unwind label %86

; <label>:131:                                    ; preds = %86
  br label %177

; <label>:132:                                    ; preds = %66
  %133 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %133, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %134, i32 0, i32 0
  %136 = load %class.MaxFEdge*, %class.MaxFEdge** %135, align 8
  %137 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %138 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %137, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %138, i32 0, i32 1
  %140 = load %class.MaxFEdge*, %class.MaxFEdge** %139, align 8
  %141 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %142 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %141) #3
  call void @_ZSt8_DestroyIP8MaxFEdgeIxES1_EvT_S3_RSaIT0_E(%class.MaxFEdge* %136, %class.MaxFEdge* %140, %"class.std::allocator.20"* dereferenceable(1) %142)
  %143 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %144 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %145 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %144, i32 0, i32 0
  %146 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %145, i32 0, i32 0
  %147 = load %class.MaxFEdge*, %class.MaxFEdge** %146, align 8
  %148 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %149 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %148, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %149, i32 0, i32 2
  %151 = load %class.MaxFEdge*, %class.MaxFEdge** %150, align 8
  %152 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %153 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %152, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %153, i32 0, i32 0
  %155 = load %class.MaxFEdge*, %class.MaxFEdge** %154, align 8
  %156 = ptrtoint %class.MaxFEdge* %151 to i64
  %157 = ptrtoint %class.MaxFEdge* %155 to i64
  %158 = sub i64 %156, -8879369417288493136
  %159 = sub i64 %158, %157
  %160 = add i64 %159, -8879369417288493136
  %161 = sub i64 %156, %157
  %162 = sdiv exact i64 %160, 24
  call void @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %143, %class.MaxFEdge* %147, i64 %162)
  %163 = load %class.MaxFEdge*, %class.MaxFEdge** %20, align 8
  %164 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %165 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %164, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %165, i32 0, i32 0
  store %class.MaxFEdge* %163, %class.MaxFEdge** %166, align 8
  %167 = load %class.MaxFEdge*, %class.MaxFEdge** %21, align 8
  %168 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %169 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %168, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %169, i32 0, i32 1
  store %class.MaxFEdge* %167, %class.MaxFEdge** %170, align 8
  %171 = load %class.MaxFEdge*, %class.MaxFEdge** %20, align 8
  %172 = load i64, i64* %19, align 8
  %173 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %171, i64 %172
  %174 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %174, i32 0, i32 0
  %176 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %175, i32 0, i32 2
  store %class.MaxFEdge* %173, %class.MaxFEdge** %176, align 8
  ret void

; <label>:177:                                    ; preds = %131
  %178 = load i8*, i8** %22, align 8
  %179 = load i32, i32* %23, align 4
  %180 = insertvalue { i8*, i32 } undef, i8* %178, 0
  %181 = insertvalue { i8*, i32 } %180, i32 %179, 1
  resume { i8*, i32 } %181

; <label>:182:                                    ; preds = %86
  %183 = landingpad { i8*, i32 }
          catch i8* null
  %184 = extractvalue { i8*, i32 } %183, 0
  call void @__clang_call_terminate(i8* %184) #8
  unreachable

; <label>:185:                                    ; preds = %130
  unreachable

; <label>:186:                                    ; preds = %16, %2
  %187 = alloca %"class.std::vector.18"*, align 8
  %188 = alloca %class.MaxFEdge*, align 8
  %189 = alloca i64, align 8
  %190 = alloca %class.MaxFEdge*, align 8
  %191 = alloca %class.MaxFEdge*, align 8
  %192 = alloca i8*
  %193 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %187, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %188, align 8
  %194 = load %"class.std::vector.18"*, %"class.std::vector.18"** %187, align 8
  %195 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"* %194, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i32 0, i32 0))
  store i64 %195, i64* %189, align 8
  %196 = bitcast %"class.std::vector.18"* %194 to %"struct.std::_Vector_base.19"*
  %197 = load i64, i64* %189, align 8
  %198 = call %class.MaxFEdge* @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %196, i64 %197)
  store %class.MaxFEdge* %198, %class.MaxFEdge** %190, align 8
  %199 = load %class.MaxFEdge*, %class.MaxFEdge** %190, align 8
  store %class.MaxFEdge* %199, %class.MaxFEdge** %191, align 8
  %200 = bitcast %"class.std::vector.18"* %194 to %"struct.std::_Vector_base.19"*
  %201 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %200, i32 0, i32 0
  %202 = bitcast %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %201 to %"class.std::allocator.20"*
  %203 = load %class.MaxFEdge*, %class.MaxFEdge** %190, align 8
  %204 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv(%"class.std::vector.18"* %194) #3
  %205 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %203, i64 %204
  %206 = load %class.MaxFEdge*, %class.MaxFEdge** %188, align 8
  %207 = call dereferenceable(24) %class.MaxFEdge* @_ZSt7forwardI8MaxFEdgeIxEEOT_RNSt16remove_referenceIS2_E4typeE(%class.MaxFEdge* dereferenceable(24) %206) #3
  br label %16

; <label>:208:                                    ; preds = %111, %96
  %209 = bitcast %"class.std::vector.18"* %24 to %"struct.std::_Vector_base.19"*
  %210 = load %class.MaxFEdge*, %class.MaxFEdge** %20, align 8
  %211 = load i64, i64* %19, align 8
  br label %111
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"*, %class.MaxFEdge*, %class.MaxFEdge* dereferenceable(24)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca %class.MaxFEdge*, align 8
  %6 = alloca %class.MaxFEdge*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %5, align 8
  store %class.MaxFEdge* %2, %class.MaxFEdge** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load %class.MaxFEdge*, %class.MaxFEdge** %5, align 8
  %9 = bitcast %class.MaxFEdge* %8 to i8*
  %10 = bitcast i8* %9 to %class.MaxFEdge*
  %11 = load %class.MaxFEdge*, %class.MaxFEdge** %6, align 8
  %12 = call dereferenceable(24) %class.MaxFEdge* @_ZSt7forwardI8MaxFEdgeIxEEOT_RNSt16remove_referenceIS2_E4typeE(%class.MaxFEdge* dereferenceable(24) %11) #3
  %13 = bitcast %class.MaxFEdge* %10 to i8*
  %14 = bitcast %class.MaxFEdge* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.18"*
  %9 = alloca %"class.std::vector.18"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %9, align 8
  store %"class.std::vector.18"* %14, %"class.std::vector.18"** %8
  %15 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %16 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %15) #3
  %17 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %18 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv(%"class.std::vector.18"* %17) #3
  %19 = add i64 %16, -6668945377614927325
  %20 = sub i64 %19, %18
  %21 = sub i64 %20, -6668945377614927325
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 -1981192509, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %181
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -1981192509, label %29
    i32 -1550268187, label %34
    i32 1184746910, label %36
    i32 -1276512580, label %52
    i32 711168542, label %58
    i32 939803987, label %85
    i32 -1196867392, label %114
    i32 526756505, label %116
    i32 -1337316577, label %118
    i32 -494113847, label %147
    i32 241598671, label %175
    i32 1430502102, label %177
    i32 -1064968301, label %180
  ]

; <label>:28:                                     ; preds = %26
  br label %181

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -1550268187, i32 1184746910
  store i32 %33, i32* %24
  br label %181

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #12
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %38 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv(%"class.std::vector.18"* %37) #3
  %39 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %40 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv(%"class.std::vector.18"* %39) #3
  store i64 %40, i64* %13, align 8
  %41 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %38, 2497524614217461835
  %44 = add i64 %43, %42
  %45 = add i64 %44, 2497524614217461835
  %46 = add i64 %38, %42
  store i64 %45, i64* %12, align 8
  %47 = load i64, i64* %12, align 8
  %48 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %49 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv(%"class.std::vector.18"* %48) #3
  %50 = icmp ult i64 %47, %49
  %51 = select i1 %50, i32 711168542, i32 -1276512580
  store i32 %51, i32* %24
  br label %181

; <label>:52:                                     ; preds = %26
  %53 = load i64, i64* %12, align 8
  %54 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %55 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %54) #3
  %56 = icmp ugt i64 %53, %55
  %57 = select i1 %56, i32 711168542, i32 526756505
  store i32 %57, i32* %24
  br label %181

; <label>:58:                                     ; preds = %26
  %59 = load i32, i32* @x.526
  %60 = load i32, i32* @y.527
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 939803987, i32 1430502102
  store i32 %84, i32* %24
  br label %181

; <label>:85:                                     ; preds = %26
  %86 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %87 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %86) #3
  store i64 %87, i64* %5
  %88 = load i32, i32* @x.526
  %89 = load i32, i32* @y.527
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 -1196867392, i32 1430502102
  store i32 %113, i32* %24
  br label %181

; <label>:114:                                    ; preds = %26
  store i32 -1337316577, i32* %24
  %115 = load volatile i64, i64* %5
  store i64 %115, i64* %25
  br label %181

; <label>:116:                                    ; preds = %26
  %117 = load i64, i64* %12, align 8
  store i32 -1337316577, i32* %24
  store i64 %117, i64* %25
  br label %181

; <label>:118:                                    ; preds = %26
  %119 = load i64, i64* %25
  store i64 %119, i64* %4
  %120 = load i32, i32* @x.526
  %121 = load i32, i32* @y.527
  %122 = sub i32 %120, 393860484
  %123 = sub i32 %122, 1
  %124 = add i32 %123, 393860484
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 false, true
  %133 = and i1 %130, false
  %134 = and i1 %128, %132
  %135 = and i1 %131, false
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 false, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  %146 = select i1 %144, i32 -494113847, i32 -1064968301
  store i32 %146, i32* %24
  br label %181

; <label>:147:                                    ; preds = %26
  %148 = load i32, i32* @x.526
  %149 = load i32, i32* @y.527
  %150 = sub i32 %148, -621597945
  %151 = sub i32 %150, 1
  %152 = add i32 %151, -621597945
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 false, true
  %161 = and i1 %158, false
  %162 = and i1 %156, %160
  %163 = and i1 %159, false
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 false, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  %174 = select i1 %172, i32 241598671, i32 -1064968301
  store i32 %174, i32* %24
  br label %181

; <label>:175:                                    ; preds = %26
  %176 = load volatile i64, i64* %4
  ret i64 %176

; <label>:177:                                    ; preds = %26
  %178 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %179 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %178) #3
  store i32 939803987, i32* %24
  br label %181

; <label>:180:                                    ; preds = %26
  store i32 -494113847, i32* %24
  br label %181

; <label>:181:                                    ; preds = %180, %177, %147, %118, %116, %114, %85, %58, %52, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.MaxFEdge* @_ZNSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.19"*
  %5 = alloca %"struct.std::_Vector_base.19"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5, align 8
  store %"struct.std::_Vector_base.19"* %7, %"struct.std::_Vector_base.19"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 916975554, i32* %9
  %10 = alloca %class.MaxFEdge*
  br label %11

; <label>:11:                                     ; preds = %2, %83
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 916975554, label %14
    i32 829259282, label %18
    i32 622737617, label %24
    i32 1682424553, label %52
    i32 1179742668, label %79
    i32 -1305721644, label %80
    i32 -671114525, label %82
  ]

; <label>:13:                                     ; preds = %11
  br label %83

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 829259282, i32 622737617
  store i32 %17, i32* %9
  br label %83

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %20 to %"class.std::allocator.20"*
  %22 = load i64, i64* %6, align 8
  %23 = call %class.MaxFEdge* @_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE8allocateERS2_m(%"class.std::allocator.20"* dereferenceable(1) %21, i64 %22)
  store i32 -1305721644, i32* %9
  store %class.MaxFEdge* %23, %class.MaxFEdge** %10
  br label %83

; <label>:24:                                     ; preds = %11
  %25 = load i32, i32* @x.528
  %26 = load i32, i32* @y.529
  %27 = add i32 %25, -142713614
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, -142713614
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 1682424553, i32 -671114525
  store i32 %51, i32* %9
  br label %83

; <label>:52:                                     ; preds = %11
  %53 = load i32, i32* @x.528
  %54 = load i32, i32* @y.529
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 1179742668, i32 -671114525
  store i32 %78, i32* %9
  br label %83

; <label>:79:                                     ; preds = %11
  store i32 -1305721644, i32* %9
  store %class.MaxFEdge* null, %class.MaxFEdge** %10
  br label %83

; <label>:80:                                     ; preds = %11
  %81 = load %class.MaxFEdge*, %class.MaxFEdge** %10
  ret %class.MaxFEdge* %81

; <label>:82:                                     ; preds = %11
  store i32 1682424553, i32* %9
  br label %83

; <label>:83:                                     ; preds = %82, %79, %52, %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.MaxFEdge* @_ZSt34__uninitialized_move_if_noexcept_aIP8MaxFEdgeIxES2_SaIS1_EET0_T_S5_S4_RT1_(%class.MaxFEdge*, %class.MaxFEdge*, %class.MaxFEdge*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %class.MaxFEdge*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.530
  %9 = load i32, i32* @y.531
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 265297039, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %98
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 265297039, label %21
    i32 1009549109, label %41
    i32 605653883, label %76
    i32 818130516, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %98

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1009549109, i32 818130516
  store i32 %40, i32* %17
  br label %98

; <label>:41:                                     ; preds = %18
  %42 = alloca %class.MaxFEdge*, align 8
  %43 = alloca %class.MaxFEdge*, align 8
  %44 = alloca %class.MaxFEdge*, align 8
  %45 = alloca %"class.std::allocator.20"*, align 8
  %46 = alloca %"class.std::move_iterator.26", align 8
  %47 = alloca %"class.std::move_iterator.26", align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %42, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %43, align 8
  store %class.MaxFEdge* %2, %class.MaxFEdge** %44, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %45, align 8
  %48 = load %class.MaxFEdge*, %class.MaxFEdge** %42, align 8
  %49 = call %class.MaxFEdge* @_ZSt32__make_move_if_noexcept_iteratorIP8MaxFEdgeIxESt13move_iteratorIS2_EET0_T_(%class.MaxFEdge* %48)
  %50 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %46, i32 0, i32 0
  store %class.MaxFEdge* %49, %class.MaxFEdge** %50, align 8
  %51 = load %class.MaxFEdge*, %class.MaxFEdge** %43, align 8
  %52 = call %class.MaxFEdge* @_ZSt32__make_move_if_noexcept_iteratorIP8MaxFEdgeIxESt13move_iteratorIS2_EET0_T_(%class.MaxFEdge* %51)
  %53 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %47, i32 0, i32 0
  store %class.MaxFEdge* %52, %class.MaxFEdge** %53, align 8
  %54 = load %class.MaxFEdge*, %class.MaxFEdge** %44, align 8
  %55 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %45, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %46, i32 0, i32 0
  %57 = load %class.MaxFEdge*, %class.MaxFEdge** %56, align 8
  %58 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %47, i32 0, i32 0
  %59 = load %class.MaxFEdge*, %class.MaxFEdge** %58, align 8
  %60 = call %class.MaxFEdge* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP8MaxFEdgeIxEES3_S2_ET0_T_S6_S5_RSaIT1_E(%class.MaxFEdge* %57, %class.MaxFEdge* %59, %class.MaxFEdge* %54, %"class.std::allocator.20"* dereferenceable(1) %55)
  store %class.MaxFEdge* %60, %class.MaxFEdge** %5
  %61 = load i32, i32* @x.530
  %62 = load i32, i32* @y.531
  %63 = add i32 %61, 1328032355
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 1328032355
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 605653883, i32 818130516
  store i32 %75, i32* %17
  br label %98

; <label>:76:                                     ; preds = %18
  %77 = load volatile %class.MaxFEdge*, %class.MaxFEdge** %5
  ret %class.MaxFEdge* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %class.MaxFEdge*, align 8
  %80 = alloca %class.MaxFEdge*, align 8
  %81 = alloca %class.MaxFEdge*, align 8
  %82 = alloca %"class.std::allocator.20"*, align 8
  %83 = alloca %"class.std::move_iterator.26", align 8
  %84 = alloca %"class.std::move_iterator.26", align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %79, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %80, align 8
  store %class.MaxFEdge* %2, %class.MaxFEdge** %81, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %82, align 8
  %85 = load %class.MaxFEdge*, %class.MaxFEdge** %79, align 8
  %86 = call %class.MaxFEdge* @_ZSt32__make_move_if_noexcept_iteratorIP8MaxFEdgeIxESt13move_iteratorIS2_EET0_T_(%class.MaxFEdge* %85)
  %87 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %83, i32 0, i32 0
  store %class.MaxFEdge* %86, %class.MaxFEdge** %87, align 8
  %88 = load %class.MaxFEdge*, %class.MaxFEdge** %80, align 8
  %89 = call %class.MaxFEdge* @_ZSt32__make_move_if_noexcept_iteratorIP8MaxFEdgeIxESt13move_iteratorIS2_EET0_T_(%class.MaxFEdge* %88)
  %90 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %84, i32 0, i32 0
  store %class.MaxFEdge* %89, %class.MaxFEdge** %90, align 8
  %91 = load %class.MaxFEdge*, %class.MaxFEdge** %81, align 8
  %92 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %82, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %83, i32 0, i32 0
  %94 = load %class.MaxFEdge*, %class.MaxFEdge** %93, align 8
  %95 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %84, i32 0, i32 0
  %96 = load %class.MaxFEdge*, %class.MaxFEdge** %95, align 8
  %97 = call %class.MaxFEdge* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP8MaxFEdgeIxEES3_S2_ET0_T_S6_S5_RSaIT1_E(%class.MaxFEdge* %94, %class.MaxFEdge* %96, %class.MaxFEdge* %91, %"class.std::allocator.20"* dereferenceable(1) %92)
  store i32 1009549109, i32* %17
  br label %98

; <label>:98:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.20"* dereferenceable(1), %class.MaxFEdge*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  %4 = alloca %class.MaxFEdge*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %3, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %4, align 8
  %5 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  %6 = bitcast %"class.std::allocator.20"* %5 to %"class.__gnu_cxx::new_allocator.21"*
  %7 = load %class.MaxFEdge*, %class.MaxFEdge** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.21"* %6, %class.MaxFEdge* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE8max_sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE8max_sizeERKS2_(%"class.std::allocator.20"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE8max_sizeERKS2_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.536
  %6 = load i32, i32* @y.537
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 889198532, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 889198532, label %18
    i32 -371801506, label %26
    i32 1183481572, label %46
    i32 -1241364911, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -371801506, i32 -1241364911
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %27, align 8
  %28 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %27, align 8
  %29 = bitcast %"class.std::allocator.20"* %28 to %"class.__gnu_cxx::new_allocator.21"*
  %30 = call i64 @_ZNK9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %29) #3
  store i64 %30, i64* %2
  %31 = load i32, i32* @x.536
  %32 = load i32, i32* @y.537
  %33 = sub i32 %31, 2001133464
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 2001133464
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1183481572, i32 -1241364911
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile i64, i64* %2
  ret i64 %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %49, align 8
  %50 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %49, align 8
  %51 = bitcast %"class.std::allocator.20"* %50 to %"class.__gnu_cxx::new_allocator.21"*
  %52 = call i64 @_ZNK9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %51) #3
  store i32 -371801506, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseI8MaxFEdgeIxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %4 to %"class.std::allocator.20"*
  ret %"class.std::allocator.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.MaxFEdge* @_ZNSt16allocator_traitsISaI8MaxFEdgeIxEEE8allocateERS2_m(%"class.std::allocator.20"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %class.MaxFEdge*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.542
  %7 = load i32, i32* @y.543
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1506312884, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1506312884, label %19
    i32 -2035951449, label %27
    i32 747379364, label %61
    i32 2108417231, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2035951449, i32 2108417231
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.20"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %28, align 8
  %31 = bitcast %"class.std::allocator.20"* %30 to %"class.__gnu_cxx::new_allocator.21"*
  %32 = load i64, i64* %29, align 8
  %33 = call %class.MaxFEdge* @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %31, i64 %32, i8* null)
  store %class.MaxFEdge* %33, %class.MaxFEdge** %3
  %34 = load i32, i32* @x.542
  %35 = load i32, i32* @y.543
  %36 = sub i32 %34, 1927155090
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1927155090
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 747379364, i32 2108417231
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %class.MaxFEdge*, %class.MaxFEdge** %3
  ret %class.MaxFEdge* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator.20"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %64, align 8
  %67 = bitcast %"class.std::allocator.20"* %66 to %"class.__gnu_cxx::new_allocator.21"*
  %68 = load i64, i64* %65, align 8
  %69 = call %class.MaxFEdge* @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %67, i64 %68, i8* null)
  store i32 -2035951449, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.MaxFEdge* @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.544
  %9 = load i32, i32* @y.545
  %10 = sub i32 %8, 990093709
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 990093709
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -972139054, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %140
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -972139054, label %22
    i32 -655165097, label %42
    i32 1691716981, label %79
    i32 392461562, label %82
    i32 -1826315001, label %109
    i32 844980318, label %124
    i32 1803599464, label %125
    i32 1404060650, label %131
    i32 1345135477, label %139
  ]

; <label>:21:                                     ; preds = %19
  br label %140

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -655165097, i32 1404060650
  store i32 %41, i32* %18
  br label %140

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.544
  %53 = load i32, i32* @y.545
  %54 = add i32 %52, 1864670198
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 1864670198
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 1691716981, i32 1404060650
  store i32 %78, i32* %18
  br label %140

; <label>:79:                                     ; preds = %19
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 392461562, i32 1803599464
  store i32 %81, i32* %18
  br label %140

; <label>:82:                                     ; preds = %19
  %83 = load i32, i32* @x.544
  %84 = load i32, i32* @y.545
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 -1826315001, i32 1345135477
  store i32 %108, i32* %18
  br label %140

; <label>:109:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  %110 = load i32, i32* @x.544
  %111 = load i32, i32* @y.545
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 844980318, i32 1345135477
  store i32 %123, i32* %18
  br label %140

; <label>:124:                                    ; preds = %19
  unreachable

; <label>:125:                                    ; preds = %19
  %126 = load volatile i64*, i64** %5
  %127 = load i64, i64* %126, align 8
  %128 = mul i64 %127, 24
  %129 = call i8* @_Znwm(i64 %128)
  %130 = bitcast i8* %129 to %class.MaxFEdge*
  ret %class.MaxFEdge* %130

; <label>:131:                                    ; preds = %19
  %132 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %133 = alloca i64, align 8
  %134 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %132, align 8
  store i64 %1, i64* %133, align 8
  store i8* %2, i8** %134, align 8
  %135 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %132, align 8
  %136 = load i64, i64* %133, align 8
  %137 = call i64 @_ZNK9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %135) #3
  %138 = icmp ugt i64 %136, %137
  store i32 -655165097, i32* %18
  br label %140

; <label>:139:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -1826315001, i32* %18
  br label %140

; <label>:140:                                    ; preds = %139, %131, %109, %82, %79, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.MaxFEdge* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP8MaxFEdgeIxEES3_S2_ET0_T_S6_S5_RSaIT1_E(%class.MaxFEdge*, %class.MaxFEdge*, %class.MaxFEdge*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.26", align 8
  %6 = alloca %"class.std::move_iterator.26", align 8
  %7 = alloca %class.MaxFEdge*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.26", align 8
  %10 = alloca %"class.std::move_iterator.26", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %5, i32 0, i32 0
  store %class.MaxFEdge* %0, %class.MaxFEdge** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %6, i32 0, i32 0
  store %class.MaxFEdge* %1, %class.MaxFEdge** %12, align 8
  store %class.MaxFEdge* %2, %class.MaxFEdge** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.26"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.26"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.26"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.26"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %class.MaxFEdge*, %class.MaxFEdge** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  %19 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %10, i32 0, i32 0
  %21 = load %class.MaxFEdge*, %class.MaxFEdge** %20, align 8
  %22 = call %class.MaxFEdge* @_ZSt18uninitialized_copyISt13move_iteratorIP8MaxFEdgeIxEES3_ET0_T_S6_S5_(%class.MaxFEdge* %19, %class.MaxFEdge* %21, %class.MaxFEdge* %17)
  ret %class.MaxFEdge* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.MaxFEdge* @_ZSt32__make_move_if_noexcept_iteratorIP8MaxFEdgeIxESt13move_iteratorIS2_EET0_T_(%class.MaxFEdge*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.26", align 8
  %3 = alloca %class.MaxFEdge*, align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %3, align 8
  %4 = load %class.MaxFEdge*, %class.MaxFEdge** %3, align 8
  call void @_ZNSt13move_iteratorIP8MaxFEdgeIxEEC2ES2_(%"class.std::move_iterator.26"* %2, %class.MaxFEdge* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %2, i32 0, i32 0
  %6 = load %class.MaxFEdge*, %class.MaxFEdge** %5, align 8
  ret %class.MaxFEdge* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.MaxFEdge* @_ZSt18uninitialized_copyISt13move_iteratorIP8MaxFEdgeIxEES3_ET0_T_S6_S5_(%class.MaxFEdge*, %class.MaxFEdge*, %class.MaxFEdge*) #0 comdat {
  %4 = alloca %class.MaxFEdge*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.550
  %8 = load i32, i32* @y.551
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1040063287, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %94
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1040063287, label %20
    i32 595017022, label %28
    i32 876635462, label %73
    i32 780142305, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %94

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 595017022, i32 780142305
  store i32 %27, i32* %16
  br label %94

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator.26", align 8
  %30 = alloca %"class.std::move_iterator.26", align 8
  %31 = alloca %class.MaxFEdge*, align 8
  %32 = alloca i8, align 1
  %33 = alloca %"class.std::move_iterator.26", align 8
  %34 = alloca %"class.std::move_iterator.26", align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %29, i32 0, i32 0
  store %class.MaxFEdge* %0, %class.MaxFEdge** %35, align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %30, i32 0, i32 0
  store %class.MaxFEdge* %1, %class.MaxFEdge** %36, align 8
  store %class.MaxFEdge* %2, %class.MaxFEdge** %31, align 8
  store i8 1, i8* %32, align 1
  %37 = bitcast %"class.std::move_iterator.26"* %33 to i8*
  %38 = bitcast %"class.std::move_iterator.26"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = bitcast %"class.std::move_iterator.26"* %34 to i8*
  %40 = bitcast %"class.std::move_iterator.26"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = load %class.MaxFEdge*, %class.MaxFEdge** %31, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %33, i32 0, i32 0
  %43 = load %class.MaxFEdge*, %class.MaxFEdge** %42, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %34, i32 0, i32 0
  %45 = load %class.MaxFEdge*, %class.MaxFEdge** %44, align 8
  %46 = call %class.MaxFEdge* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIP8MaxFEdgeIxEES5_EET0_T_S8_S7_(%class.MaxFEdge* %43, %class.MaxFEdge* %45, %class.MaxFEdge* %41)
  store %class.MaxFEdge* %46, %class.MaxFEdge** %4
  %47 = load i32, i32* @x.550
  %48 = load i32, i32* @y.551
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 876635462, i32 780142305
  store i32 %72, i32* %16
  br label %94

; <label>:73:                                     ; preds = %17
  %74 = load volatile %class.MaxFEdge*, %class.MaxFEdge** %4
  ret %class.MaxFEdge* %74

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.std::move_iterator.26", align 8
  %77 = alloca %"class.std::move_iterator.26", align 8
  %78 = alloca %class.MaxFEdge*, align 8
  %79 = alloca i8, align 1
  %80 = alloca %"class.std::move_iterator.26", align 8
  %81 = alloca %"class.std::move_iterator.26", align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %76, i32 0, i32 0
  store %class.MaxFEdge* %0, %class.MaxFEdge** %82, align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %77, i32 0, i32 0
  store %class.MaxFEdge* %1, %class.MaxFEdge** %83, align 8
  store %class.MaxFEdge* %2, %class.MaxFEdge** %78, align 8
  store i8 1, i8* %79, align 1
  %84 = bitcast %"class.std::move_iterator.26"* %80 to i8*
  %85 = bitcast %"class.std::move_iterator.26"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 8, i1 false)
  %86 = bitcast %"class.std::move_iterator.26"* %81 to i8*
  %87 = bitcast %"class.std::move_iterator.26"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = load %class.MaxFEdge*, %class.MaxFEdge** %78, align 8
  %89 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %80, i32 0, i32 0
  %90 = load %class.MaxFEdge*, %class.MaxFEdge** %89, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %81, i32 0, i32 0
  %92 = load %class.MaxFEdge*, %class.MaxFEdge** %91, align 8
  %93 = call %class.MaxFEdge* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIP8MaxFEdgeIxEES5_EET0_T_S8_S7_(%class.MaxFEdge* %90, %class.MaxFEdge* %92, %class.MaxFEdge* %88)
  store i32 595017022, i32* %16
  br label %94

; <label>:94:                                     ; preds = %75, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %class.MaxFEdge* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIP8MaxFEdgeIxEES5_EET0_T_S8_S7_(%class.MaxFEdge*, %class.MaxFEdge*, %class.MaxFEdge*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.552
  %5 = load i32, i32* @y.553
  %6 = sub i32 %4, 1458238535
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1458238535
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %429

; <label>:18:                                     ; preds = %3, %429
  %19 = alloca %"class.std::move_iterator.26", align 8
  %20 = alloca %"class.std::move_iterator.26", align 8
  %21 = alloca %class.MaxFEdge*, align 8
  %22 = alloca %class.MaxFEdge*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  %25 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %19, i32 0, i32 0
  store %class.MaxFEdge* %0, %class.MaxFEdge** %25, align 8
  %26 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %20, i32 0, i32 0
  store %class.MaxFEdge* %1, %class.MaxFEdge** %26, align 8
  store %class.MaxFEdge* %2, %class.MaxFEdge** %21, align 8
  %27 = load %class.MaxFEdge*, %class.MaxFEdge** %21, align 8
  store %class.MaxFEdge* %27, %class.MaxFEdge** %22, align 8
  %28 = load i32, i32* @x.552
  %29 = load i32, i32* @y.553
  %30 = sub i32 %28, -784369321
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -784369321
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %429

; <label>:54:                                     ; preds = %18
  br label %55

; <label>:55:                                     ; preds = %138, %54
  %56 = invoke zeroext i1 @_ZStneIP8MaxFEdgeIxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.26"* dereferenceable(8) %19, %"class.std::move_iterator.26"* dereferenceable(8) %20)
          to label %57 unwind label %141

; <label>:57:                                     ; preds = %55
  br i1 %56, label %58, label %192

; <label>:58:                                     ; preds = %57
  %59 = load %class.MaxFEdge*, %class.MaxFEdge** %22, align 8
  %60 = call %class.MaxFEdge* @_ZSt11__addressofI8MaxFEdgeIxEEPT_RS2_(%class.MaxFEdge* dereferenceable(24) %59) #3
  %61 = invoke dereferenceable(24) %class.MaxFEdge* @_ZNKSt13move_iteratorIP8MaxFEdgeIxEEdeEv(%"class.std::move_iterator.26"* %19)
          to label %62 unwind label %141

; <label>:62:                                     ; preds = %58
  %63 = load i32, i32* @x.552
  %64 = load i32, i32* @y.553
  %65 = add i32 %63, 1610625029
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, 1610625029
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %439

; <label>:77:                                     ; preds = %62, %439
  %78 = load i32, i32* @x.552
  %79 = load i32, i32* @y.553
  %80 = add i32 %78, -1838445272
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -1838445272
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %439

; <label>:92:                                     ; preds = %77
  invoke void @_ZSt10_ConstructI8MaxFEdgeIxEJS1_EEvPT_DpOT0_(%class.MaxFEdge* %60, %class.MaxFEdge* dereferenceable(24) %61)
          to label %93 unwind label %141

; <label>:93:                                     ; preds = %92
  %94 = load i32, i32* @x.552
  %95 = load i32, i32* @y.553
  %96 = add i32 %94, -212741884
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -212741884
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %440

; <label>:120:                                    ; preds = %93, %440
  %121 = load i32, i32* @x.552
  %122 = load i32, i32* @y.553
  %123 = add i32 %121, 737720743
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, 737720743
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  br i1 %133, label %135, label %440

; <label>:135:                                    ; preds = %120
  br label %136

; <label>:136:                                    ; preds = %135
  %137 = invoke dereferenceable(8) %"class.std::move_iterator.26"* @_ZNSt13move_iteratorIP8MaxFEdgeIxEEppEv(%"class.std::move_iterator.26"* %19)
          to label %138 unwind label %141

; <label>:138:                                    ; preds = %136
  %139 = load %class.MaxFEdge*, %class.MaxFEdge** %22, align 8
  %140 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %139, i32 1
  store %class.MaxFEdge* %140, %class.MaxFEdge** %22, align 8
  br label %55

; <label>:141:                                    ; preds = %136, %92, %58, %55
  %142 = landingpad { i8*, i32 }
          catch i8* null
  %143 = extractvalue { i8*, i32 } %142, 0
  store i8* %143, i8** %23, align 8
  %144 = extractvalue { i8*, i32 } %142, 1
  store i32 %144, i32* %24, align 4
  br label %145

; <label>:145:                                    ; preds = %141
  %146 = load i8*, i8** %23, align 8
  %147 = call i8* @__cxa_begin_catch(i8* %146) #3
  %148 = load %class.MaxFEdge*, %class.MaxFEdge** %21, align 8
  %149 = load %class.MaxFEdge*, %class.MaxFEdge** %22, align 8
  invoke void @_ZSt8_DestroyIP8MaxFEdgeIxEEvT_S3_(%class.MaxFEdge* %148, %class.MaxFEdge* %149)
          to label %150 unwind label %194

; <label>:150:                                    ; preds = %145
  %151 = load i32, i32* @x.552
  %152 = load i32, i32* @y.553
  %153 = add i32 %151, -2002715943
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, -2002715943
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 true, true
  %164 = and i1 %161, true
  %165 = and i1 %159, %163
  %166 = and i1 %162, true
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 true, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %441

; <label>:177:                                    ; preds = %150, %441
  %178 = load i32, i32* @x.552
  %179 = load i32, i32* @y.553
  %180 = sub i32 0, 1
  %181 = add i32 %178, %180
  %182 = sub i32 %178, 1
  %183 = mul i32 %178, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %179, 10
  %187 = and i1 %185, %186
  %188 = xor i1 %185, %186
  %189 = or i1 %187, %188
  %190 = or i1 %185, %186
  br i1 %189, label %191, label %441

; <label>:191:                                    ; preds = %177
  invoke void @__cxa_rethrow() #12
          to label %398 unwind label %194

; <label>:192:                                    ; preds = %57
  %193 = load %class.MaxFEdge*, %class.MaxFEdge** %22, align 8
  ret %class.MaxFEdge* %193

; <label>:194:                                    ; preds = %191, %145
  %195 = load i32, i32* @x.552
  %196 = load i32, i32* @y.553
  %197 = sub i32 %195, 1156633666
  %198 = sub i32 %197, 1
  %199 = add i32 %198, 1156633666
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 true, true
  %208 = and i1 %205, true
  %209 = and i1 %203, %207
  %210 = and i1 %206, true
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 true, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  br i1 %219, label %221, label %442

; <label>:221:                                    ; preds = %194, %442
  %222 = landingpad { i8*, i32 }
          cleanup
  %223 = extractvalue { i8*, i32 } %222, 0
  store i8* %223, i8** %23, align 8
  %224 = extractvalue { i8*, i32 } %222, 1
  store i32 %224, i32* %24, align 4
  %225 = load i32, i32* @x.552
  %226 = load i32, i32* @y.553
  %227 = sub i32 %225, 28465788
  %228 = sub i32 %227, 1
  %229 = add i32 %228, 28465788
  %230 = sub i32 %225, 1
  %231 = mul i32 %225, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %226, 10
  %235 = xor i1 %233, true
  %236 = xor i1 %234, true
  %237 = xor i1 true, true
  %238 = and i1 %235, true
  %239 = and i1 %233, %237
  %240 = and i1 %236, true
  %241 = and i1 %234, %237
  %242 = or i1 %238, %239
  %243 = or i1 %240, %241
  %244 = xor i1 %242, %243
  %245 = or i1 %235, %236
  %246 = xor i1 %245, true
  %247 = or i1 true, %237
  %248 = and i1 %246, %247
  %249 = or i1 %244, %248
  %250 = or i1 %233, %234
  br i1 %249, label %251, label %442

; <label>:251:                                    ; preds = %221
  invoke void @__cxa_end_catch()
          to label %252 unwind label %353

; <label>:252:                                    ; preds = %251
  br label %307
                                                  ; No predecessors!
  %254 = load i32, i32* @x.552
  %255 = load i32, i32* @y.553
  %256 = sub i32 0, 1
  %257 = add i32 %254, %256
  %258 = sub i32 %254, 1
  %259 = mul i32 %254, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %255, 10
  %263 = xor i1 %261, true
  %264 = xor i1 %262, true
  %265 = xor i1 false, true
  %266 = and i1 %263, false
  %267 = and i1 %261, %265
  %268 = and i1 %264, false
  %269 = and i1 %262, %265
  %270 = or i1 %266, %267
  %271 = or i1 %268, %269
  %272 = xor i1 %270, %271
  %273 = or i1 %263, %264
  %274 = xor i1 %273, true
  %275 = or i1 false, %265
  %276 = and i1 %274, %275
  %277 = or i1 %272, %276
  %278 = or i1 %261, %262
  br i1 %277, label %279, label %446

; <label>:279:                                    ; preds = %253, %446
  call void @llvm.trap()
  %280 = load i32, i32* @x.552
  %281 = load i32, i32* @y.553
  %282 = add i32 %280, 1086359553
  %283 = sub i32 %282, 1
  %284 = sub i32 %283, 1086359553
  %285 = sub i32 %280, 1
  %286 = mul i32 %280, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %281, 10
  %290 = xor i1 %288, true
  %291 = xor i1 %289, true
  %292 = xor i1 true, true
  %293 = and i1 %290, true
  %294 = and i1 %288, %292
  %295 = and i1 %291, true
  %296 = and i1 %289, %292
  %297 = or i1 %293, %294
  %298 = or i1 %295, %296
  %299 = xor i1 %297, %298
  %300 = or i1 %290, %291
  %301 = xor i1 %300, true
  %302 = or i1 true, %292
  %303 = and i1 %301, %302
  %304 = or i1 %299, %303
  %305 = or i1 %288, %289
  br i1 %304, label %306, label %446

; <label>:306:                                    ; preds = %279
  unreachable

; <label>:307:                                    ; preds = %252
  %308 = load i32, i32* @x.552
  %309 = load i32, i32* @y.553
  %310 = sub i32 0, 1
  %311 = add i32 %308, %310
  %312 = sub i32 %308, 1
  %313 = mul i32 %308, %311
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %309, 10
  %317 = xor i1 %315, true
  %318 = xor i1 %316, true
  %319 = xor i1 false, true
  %320 = and i1 %317, false
  %321 = and i1 %315, %319
  %322 = and i1 %318, false
  %323 = and i1 %316, %319
  %324 = or i1 %320, %321
  %325 = or i1 %322, %323
  %326 = xor i1 %324, %325
  %327 = or i1 %317, %318
  %328 = xor i1 %327, true
  %329 = or i1 false, %319
  %330 = and i1 %328, %329
  %331 = or i1 %326, %330
  %332 = or i1 %315, %316
  br i1 %331, label %333, label %447

; <label>:333:                                    ; preds = %307, %447
  %334 = load i8*, i8** %23, align 8
  %335 = load i32, i32* %24, align 4
  %336 = insertvalue { i8*, i32 } undef, i8* %334, 0
  %337 = insertvalue { i8*, i32 } %336, i32 %335, 1
  %338 = load i32, i32* @x.552
  %339 = load i32, i32* @y.553
  %340 = sub i32 %338, 1829975233
  %341 = sub i32 %340, 1
  %342 = add i32 %341, 1829975233
  %343 = sub i32 %338, 1
  %344 = mul i32 %338, %342
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %339, 10
  %348 = and i1 %346, %347
  %349 = xor i1 %346, %347
  %350 = or i1 %348, %349
  %351 = or i1 %346, %347
  br i1 %350, label %352, label %447

; <label>:352:                                    ; preds = %333
  resume { i8*, i32 } %337

; <label>:353:                                    ; preds = %251
  %354 = load i32, i32* @x.552
  %355 = load i32, i32* @y.553
  %356 = sub i32 %354, 1787530284
  %357 = sub i32 %356, 1
  %358 = add i32 %357, 1787530284
  %359 = sub i32 %354, 1
  %360 = mul i32 %354, %358
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %355, 10
  %364 = and i1 %362, %363
  %365 = xor i1 %362, %363
  %366 = or i1 %364, %365
  %367 = or i1 %362, %363
  br i1 %366, label %368, label %452

; <label>:368:                                    ; preds = %353, %452
  %369 = landingpad { i8*, i32 }
          catch i8* null
  %370 = extractvalue { i8*, i32 } %369, 0
  call void @__clang_call_terminate(i8* %370) #8
  %371 = load i32, i32* @x.552
  %372 = load i32, i32* @y.553
  %373 = add i32 %371, 221993930
  %374 = sub i32 %373, 1
  %375 = sub i32 %374, 221993930
  %376 = sub i32 %371, 1
  %377 = mul i32 %371, %375
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %372, 10
  %381 = xor i1 %379, true
  %382 = xor i1 %380, true
  %383 = xor i1 false, true
  %384 = and i1 %381, false
  %385 = and i1 %379, %383
  %386 = and i1 %382, false
  %387 = and i1 %380, %383
  %388 = or i1 %384, %385
  %389 = or i1 %386, %387
  %390 = xor i1 %388, %389
  %391 = or i1 %381, %382
  %392 = xor i1 %391, true
  %393 = or i1 false, %383
  %394 = and i1 %392, %393
  %395 = or i1 %390, %394
  %396 = or i1 %379, %380
  br i1 %395, label %397, label %452

; <label>:397:                                    ; preds = %368
  unreachable

; <label>:398:                                    ; preds = %191
  %399 = load i32, i32* @x.552
  %400 = load i32, i32* @y.553
  %401 = add i32 %399, -1564058123
  %402 = sub i32 %401, 1
  %403 = sub i32 %402, -1564058123
  %404 = sub i32 %399, 1
  %405 = mul i32 %399, %403
  %406 = urem i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = icmp slt i32 %400, 10
  %409 = and i1 %407, %408
  %410 = xor i1 %407, %408
  %411 = or i1 %409, %410
  %412 = or i1 %407, %408
  br i1 %411, label %413, label %455

; <label>:413:                                    ; preds = %398, %455
  %414 = load i32, i32* @x.552
  %415 = load i32, i32* @y.553
  %416 = add i32 %414, -480313084
  %417 = sub i32 %416, 1
  %418 = sub i32 %417, -480313084
  %419 = sub i32 %414, 1
  %420 = mul i32 %414, %418
  %421 = urem i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %415, 10
  %424 = and i1 %422, %423
  %425 = xor i1 %422, %423
  %426 = or i1 %424, %425
  %427 = or i1 %422, %423
  br i1 %426, label %428, label %455

; <label>:428:                                    ; preds = %413
  unreachable

; <label>:429:                                    ; preds = %18, %3
  %430 = alloca %"class.std::move_iterator.26", align 8
  %431 = alloca %"class.std::move_iterator.26", align 8
  %432 = alloca %class.MaxFEdge*, align 8
  %433 = alloca %class.MaxFEdge*, align 8
  %434 = alloca i8*
  %435 = alloca i32
  %436 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %430, i32 0, i32 0
  store %class.MaxFEdge* %0, %class.MaxFEdge** %436, align 8
  %437 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %431, i32 0, i32 0
  store %class.MaxFEdge* %1, %class.MaxFEdge** %437, align 8
  store %class.MaxFEdge* %2, %class.MaxFEdge** %432, align 8
  %438 = load %class.MaxFEdge*, %class.MaxFEdge** %432, align 8
  store %class.MaxFEdge* %438, %class.MaxFEdge** %433, align 8
  br label %18

; <label>:439:                                    ; preds = %77, %62
  br label %77

; <label>:440:                                    ; preds = %120, %93
  br label %120

; <label>:441:                                    ; preds = %177, %150
  br label %177

; <label>:442:                                    ; preds = %221, %194
  %443 = landingpad { i8*, i32 }
          cleanup
  %444 = extractvalue { i8*, i32 } %443, 0
  store i8* %444, i8** %23, align 8
  %445 = extractvalue { i8*, i32 } %443, 1
  store i32 %445, i32* %24, align 4
  br label %221

; <label>:446:                                    ; preds = %279, %253
  call void @llvm.trap()
  br label %279

; <label>:447:                                    ; preds = %333, %307
  %448 = load i8*, i8** %23, align 8
  %449 = load i32, i32* %24, align 4
  %450 = insertvalue { i8*, i32 } undef, i8* %448, 0
  %451 = insertvalue { i8*, i32 } %450, i32 %449, 1
  br label %333

; <label>:452:                                    ; preds = %368, %353
  %453 = landingpad { i8*, i32 }
          catch i8* null
  %454 = extractvalue { i8*, i32 } %453, 0
  call void @__clang_call_terminate(i8* %454) #8
  br label %368

; <label>:455:                                    ; preds = %413, %398
  br label %413
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIP8MaxFEdgeIxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.26"* dereferenceable(8), %"class.std::move_iterator.26"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.26"*, align 8
  %4 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %3, align 8
  store %"class.std::move_iterator.26"* %1, %"class.std::move_iterator.26"** %4, align 8
  %5 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %3, align 8
  %6 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIP8MaxFEdgeIxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.26"* dereferenceable(8) %5, %"class.std::move_iterator.26"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructI8MaxFEdgeIxEJS1_EEvPT_DpOT0_(%class.MaxFEdge*, %class.MaxFEdge* dereferenceable(24)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.556
  %6 = load i32, i32* @y.557
  %7 = sub i32 %5, -652839300
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -652839300
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -81740516, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %87
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -81740516, label %19
    i32 1749246247, label %39
    i32 -1518127263, label %76
    i32 212195614, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %87

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1749246247, i32 212195614
  store i32 %38, i32* %15
  br label %87

; <label>:39:                                     ; preds = %16
  %40 = alloca %class.MaxFEdge*, align 8
  %41 = alloca %class.MaxFEdge*, align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %40, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %41, align 8
  %42 = load %class.MaxFEdge*, %class.MaxFEdge** %40, align 8
  %43 = bitcast %class.MaxFEdge* %42 to i8*
  %44 = bitcast i8* %43 to %class.MaxFEdge*
  %45 = load %class.MaxFEdge*, %class.MaxFEdge** %41, align 8
  %46 = call dereferenceable(24) %class.MaxFEdge* @_ZSt7forwardI8MaxFEdgeIxEEOT_RNSt16remove_referenceIS2_E4typeE(%class.MaxFEdge* dereferenceable(24) %45) #3
  %47 = bitcast %class.MaxFEdge* %44 to i8*
  %48 = bitcast %class.MaxFEdge* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 24, i32 8, i1 false)
  %49 = load i32, i32* @x.556
  %50 = load i32, i32* @y.557
  %51 = sub i32 %49, -1394280925
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1394280925
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1518127263, i32 212195614
  store i32 %75, i32* %15
  br label %87

; <label>:76:                                     ; preds = %16
  ret void

; <label>:77:                                     ; preds = %16
  %78 = alloca %class.MaxFEdge*, align 8
  %79 = alloca %class.MaxFEdge*, align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %78, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %79, align 8
  %80 = load %class.MaxFEdge*, %class.MaxFEdge** %78, align 8
  %81 = bitcast %class.MaxFEdge* %80 to i8*
  %82 = bitcast i8* %81 to %class.MaxFEdge*
  %83 = load %class.MaxFEdge*, %class.MaxFEdge** %79, align 8
  %84 = call dereferenceable(24) %class.MaxFEdge* @_ZSt7forwardI8MaxFEdgeIxEEOT_RNSt16remove_referenceIS2_E4typeE(%class.MaxFEdge* dereferenceable(24) %83) #3
  %85 = bitcast %class.MaxFEdge* %82 to i8*
  %86 = bitcast %class.MaxFEdge* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 24, i32 8, i1 false)
  store i32 1749246247, i32* %15
  br label %87

; <label>:87:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.MaxFEdge* @_ZSt11__addressofI8MaxFEdgeIxEEPT_RS2_(%class.MaxFEdge* dereferenceable(24)) #5 comdat {
  %2 = alloca %class.MaxFEdge*, align 8
  store %class.MaxFEdge* %0, %class.MaxFEdge** %2, align 8
  %3 = load %class.MaxFEdge*, %class.MaxFEdge** %2, align 8
  %4 = bitcast %class.MaxFEdge* %3 to i8*
  %5 = bitcast i8* %4 to %class.MaxFEdge*
  ret %class.MaxFEdge* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.MaxFEdge* @_ZNKSt13move_iteratorIP8MaxFEdgeIxEEdeEv(%"class.std::move_iterator.26"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %2, align 8
  %3 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %3, i32 0, i32 0
  %5 = load %class.MaxFEdge*, %class.MaxFEdge** %4, align 8
  ret %class.MaxFEdge* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.26"* @_ZNSt13move_iteratorIP8MaxFEdgeIxEEppEv(%"class.std::move_iterator.26"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.26"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.562
  %6 = load i32, i32* @y.563
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -655184328, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -655184328, label %18
    i32 504979117, label %26
    i32 927660932, label %59
    i32 1939294993, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 504979117, i32 1939294993
  store i32 %25, i32* %14
  br label %67

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %27, align 8
  %28 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %27, align 8
  store %"class.std::move_iterator.26"* %28, %"class.std::move_iterator.26"** %2
  %29 = load volatile %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %2
  %30 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %29, i32 0, i32 0
  %31 = load %class.MaxFEdge*, %class.MaxFEdge** %30, align 8
  %32 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %31, i32 1
  store %class.MaxFEdge* %32, %class.MaxFEdge** %30, align 8
  %33 = load i32, i32* @x.562
  %34 = load i32, i32* @y.563
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 927660932, i32 1939294993
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  %60 = load volatile %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %2
  ret %"class.std::move_iterator.26"* %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %62, align 8
  %63 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %63, i32 0, i32 0
  %65 = load %class.MaxFEdge*, %class.MaxFEdge** %64, align 8
  %66 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %65, i32 1
  store %class.MaxFEdge* %66, %class.MaxFEdge** %64, align 8
  store i32 504979117, i32* %14
  br label %67

; <label>:67:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIP8MaxFEdgeIxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.26"* dereferenceable(8), %"class.std::move_iterator.26"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.26"*, align 8
  %4 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %3, align 8
  store %"class.std::move_iterator.26"* %1, %"class.std::move_iterator.26"** %4, align 8
  %5 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %3, align 8
  %6 = call %class.MaxFEdge* @_ZNKSt13move_iteratorIP8MaxFEdgeIxEE4baseEv(%"class.std::move_iterator.26"* %5)
  %7 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %4, align 8
  %8 = call %class.MaxFEdge* @_ZNKSt13move_iteratorIP8MaxFEdgeIxEE4baseEv(%"class.std::move_iterator.26"* %7)
  %9 = icmp eq %class.MaxFEdge* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.MaxFEdge* @_ZNKSt13move_iteratorIP8MaxFEdgeIxEE4baseEv(%"class.std::move_iterator.26"*) #5 comdat align 2 {
  %2 = alloca %class.MaxFEdge*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.566
  %6 = load i32, i32* @y.567
  %7 = sub i32 %5, -1413815464
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1413815464
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1383366584, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1383366584, label %19
    i32 -294212236, label %39
    i32 71877420, label %71
    i32 -1023240659, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -294212236, i32 -1023240659
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %40, align 8
  %41 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %40, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %41, i32 0, i32 0
  %43 = load %class.MaxFEdge*, %class.MaxFEdge** %42, align 8
  store %class.MaxFEdge* %43, %class.MaxFEdge** %2
  %44 = load i32, i32* @x.566
  %45 = load i32, i32* @y.567
  %46 = sub i32 %44, -1036287473
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1036287473
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 71877420, i32 -1023240659
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %class.MaxFEdge*, %class.MaxFEdge** %2
  ret %class.MaxFEdge* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %74, align 8
  %75 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %74, align 8
  %76 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %75, i32 0, i32 0
  %77 = load %class.MaxFEdge*, %class.MaxFEdge** %76, align 8
  store i32 -294212236, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIP8MaxFEdgeIxEEC2ES2_(%"class.std::move_iterator.26"*, %class.MaxFEdge*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.26"*, align 8
  %4 = alloca %class.MaxFEdge*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %3, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %4, align 8
  %5 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %5, i32 0, i32 0
  %7 = load %class.MaxFEdge*, %class.MaxFEdge** %4, align 8
  store %class.MaxFEdge* %7, %class.MaxFEdge** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI8MaxFEdgeIxEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.21"*, %class.MaxFEdge*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.570
  %6 = load i32, i32* @y.571
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1456605389, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1456605389, label %18
    i32 1860888225, label %26
    i32 1248968863, label %58
    i32 -1586979860, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1860888225, i32 -1586979860
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %28 = alloca %class.MaxFEdge*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %27, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %27, align 8
  %30 = load %class.MaxFEdge*, %class.MaxFEdge** %28, align 8
  %31 = load i32, i32* @x.570
  %32 = load i32, i32* @y.571
  %33 = add i32 %31, -1081599533
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1081599533
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1248968863, i32 -1586979860
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %61 = alloca %class.MaxFEdge*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %60, align 8
  store %class.MaxFEdge* %1, %class.MaxFEdge** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %60, align 8
  %63 = load %class.MaxFEdge*, %class.MaxFEdge** %61, align 8
  store i32 1860888225, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt14numeric_limitsIxE3maxEv() #5 comdat align 2 {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.572
  %4 = load i32, i32* @y.573
  %5 = sub i32 %3, -2003620368
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -2003620368
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -1153239000, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %55
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1153239000, label %17
    i32 869204639, label %37
    i32 -1719263312, label %53
    i32 1766581744, label %54
  ]

; <label>:16:                                     ; preds = %14
  br label %55

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 869204639, i32 1766581744
  store i32 %36, i32* %13
  br label %55

; <label>:37:                                     ; preds = %14
  %38 = load i32, i32* @x.572
  %39 = load i32, i32* @y.573
  %40 = sub i32 %38, 1644560573
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1644560573
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1719263312, i32 1766581744
  store i32 %52, i32* %13
  br label %55

; <label>:53:                                     ; preds = %14
  ret i64 9223372036854775807

; <label>:54:                                     ; preds = %14
  store i32 869204639, i32* %13
  br label %55

; <label>:55:                                     ; preds = %54, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5DinicIxE3bfsEi(%class.Dinic*, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Dinic*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::queue", align 8
  %7 = alloca %"class.std::deque", align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::vector.18"*, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %class.MaxFEdge*, align 8
  store %class.Dinic* %0, %class.Dinic** %3, align 8
  store i32 %1, i32* %4, align 4
  %15 = load %class.Dinic*, %class.Dinic** %3, align 8
  %16 = getelementptr inbounds %class.Dinic, %class.Dinic* %15, i32 0, i32 3
  %17 = getelementptr inbounds %class.Dinic, %class.Dinic* %15, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  store i32 -1, i32* %5, align 4
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.8"* %16, i64 %19, i32* dereferenceable(4) %5)
  call void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %7)
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"* %6, %"class.std::deque"* dereferenceable(80) %7)
          to label %20 unwind label %273

; <label>:20:                                     ; preds = %2
  %21 = load i32, i32* @x.574
  %22 = load i32, i32* @y.575
  %23 = add i32 %21, 1708262665
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 1708262665
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %343

; <label>:47:                                     ; preds = %20, %343
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %7) #3
  %48 = getelementptr inbounds %class.Dinic, %class.Dinic* %15, i32 0, i32 3
  %49 = load i32, i32* %4, align 4
  %50 = sext i32 %49 to i64
  %51 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %48, i64 %50) #3
  store i32 0, i32* %51, align 4
  %52 = load i32, i32* @x.574
  %53 = load i32, i32* @y.575
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %343

; <label>:77:                                     ; preds = %47
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %6, i32* dereferenceable(4) %4)
          to label %78 unwind label %329

; <label>:78:                                     ; preds = %77
  br label %79

; <label>:79:                                     ; preds = %336, %78
  %80 = invoke zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"* %6)
          to label %81 unwind label %329

; <label>:81:                                     ; preds = %79
  %82 = xor i1 %80, true
  %83 = and i1 true, %82
  %84 = xor i1 true, true
  %85 = and i1 %80, %84
  %86 = or i1 %83, %85
  %87 = xor i1 %80, true
  br i1 %86, label %88, label %337

; <label>:88:                                     ; preds = %81
  %89 = invoke dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"* %6)
          to label %90 unwind label %329

; <label>:90:                                     ; preds = %88
  %91 = load i32, i32* %89, align 4
  store i32 %91, i32* %10, align 4
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"* %6)
          to label %92 unwind label %329

; <label>:92:                                     ; preds = %90
  %93 = load i32, i32* @x.574
  %94 = load i32, i32* @y.575
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %348

; <label>:106:                                    ; preds = %92, %348
  %107 = getelementptr inbounds %class.Dinic, %class.Dinic* %15, i32 0, i32 1
  %108 = load i32, i32* %10, align 4
  %109 = sext i32 %108 to i64
  %110 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"* %107, i64 %109) #3
  store %"class.std::vector.18"* %110, %"class.std::vector.18"** %11, align 8
  %111 = load %"class.std::vector.18"*, %"class.std::vector.18"** %11, align 8
  %112 = call %class.MaxFEdge* @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE5beginEv(%"class.std::vector.18"* %111) #3
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %class.MaxFEdge* %112, %class.MaxFEdge** %113, align 8
  %114 = load %"class.std::vector.18"*, %"class.std::vector.18"** %11, align 8
  %115 = call %class.MaxFEdge* @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE3endEv(%"class.std::vector.18"* %114) #3
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %class.MaxFEdge* %115, %class.MaxFEdge** %116, align 8
  %117 = load i32, i32* @x.574
  %118 = load i32, i32* @y.575
  %119 = sub i32 %117, -488580749
  %120 = sub i32 %119, 1
  %121 = add i32 %120, -488580749
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 true, true
  %130 = and i1 %127, true
  %131 = and i1 %125, %129
  %132 = and i1 %128, true
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 true, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %348

; <label>:143:                                    ; preds = %106
  br label %144

; <label>:144:                                    ; preds = %334, %143
  %145 = load i32, i32* @x.574
  %146 = load i32, i32* @y.575
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = xor i1 %152, true
  %155 = xor i1 %153, true
  %156 = xor i1 true, true
  %157 = and i1 %154, true
  %158 = and i1 %152, %156
  %159 = and i1 %155, true
  %160 = and i1 %153, %156
  %161 = or i1 %157, %158
  %162 = or i1 %159, %160
  %163 = xor i1 %161, %162
  %164 = or i1 %154, %155
  %165 = xor i1 %164, true
  %166 = or i1 true, %156
  %167 = and i1 %165, %166
  %168 = or i1 %163, %167
  %169 = or i1 %152, %153
  br i1 %168, label %170, label %359

; <label>:170:                                    ; preds = %144, %359
  %171 = call zeroext i1 @_ZN9__gnu_cxxneIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %12, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %13) #3
  %172 = load i32, i32* @x.574
  %173 = load i32, i32* @y.575
  %174 = add i32 %172, 263505744
  %175 = sub i32 %174, 1
  %176 = sub i32 %175, 263505744
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 false, true
  %185 = and i1 %182, false
  %186 = and i1 %180, %184
  %187 = and i1 %183, false
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 false, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  br i1 %196, label %198, label %359

; <label>:198:                                    ; preds = %170
  br i1 %171, label %199, label %336

; <label>:199:                                    ; preds = %198
  %200 = call dereferenceable(24) %class.MaxFEdge* @_ZNK9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %12) #3
  store %class.MaxFEdge* %200, %class.MaxFEdge** %14, align 8
  %201 = load %class.MaxFEdge*, %class.MaxFEdge** %14, align 8
  %202 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %201, i32 0, i32 2
  %203 = load i64, i64* %202, align 8
  %204 = icmp sgt i64 %203, 0
  br i1 %204, label %205, label %333

; <label>:205:                                    ; preds = %199
  %206 = getelementptr inbounds %class.Dinic, %class.Dinic* %15, i32 0, i32 3
  %207 = load %class.MaxFEdge*, %class.MaxFEdge** %14, align 8
  %208 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %207, i32 0, i32 0
  %209 = load i32, i32* %208, align 8
  %210 = sext i32 %209 to i64
  %211 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %206, i64 %210) #3
  %212 = load i32, i32* %211, align 4
  %213 = icmp slt i32 %212, 0
  br i1 %213, label %214, label %333

; <label>:214:                                    ; preds = %205
  %215 = getelementptr inbounds %class.Dinic, %class.Dinic* %15, i32 0, i32 3
  %216 = load i32, i32* %10, align 4
  %217 = sext i32 %216 to i64
  %218 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %215, i64 %217) #3
  %219 = load i32, i32* %218, align 4
  %220 = sub i32 0, 1
  %221 = sub i32 %219, %220
  %222 = add nsw i32 %219, 1
  %223 = getelementptr inbounds %class.Dinic, %class.Dinic* %15, i32 0, i32 3
  %224 = load %class.MaxFEdge*, %class.MaxFEdge** %14, align 8
  %225 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %224, i32 0, i32 0
  %226 = load i32, i32* %225, align 8
  %227 = sext i32 %226 to i64
  %228 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %223, i64 %227) #3
  store i32 %221, i32* %228, align 4
  %229 = load %class.MaxFEdge*, %class.MaxFEdge** %14, align 8
  %230 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %229, i32 0, i32 0
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %6, i32* dereferenceable(4) %230)
          to label %231 unwind label %329

; <label>:231:                                    ; preds = %214
  %232 = load i32, i32* @x.574
  %233 = load i32, i32* @y.575
  %234 = sub i32 %232, -1304461967
  %235 = sub i32 %234, 1
  %236 = add i32 %235, -1304461967
  %237 = sub i32 %232, 1
  %238 = mul i32 %232, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %233, 10
  %242 = xor i1 %240, true
  %243 = xor i1 %241, true
  %244 = xor i1 false, true
  %245 = and i1 %242, false
  %246 = and i1 %240, %244
  %247 = and i1 %243, false
  %248 = and i1 %241, %244
  %249 = or i1 %245, %246
  %250 = or i1 %247, %248
  %251 = xor i1 %249, %250
  %252 = or i1 %242, %243
  %253 = xor i1 %252, true
  %254 = or i1 false, %244
  %255 = and i1 %253, %254
  %256 = or i1 %251, %255
  %257 = or i1 %240, %241
  br i1 %256, label %258, label %361

; <label>:258:                                    ; preds = %231, %361
  %259 = load i32, i32* @x.574
  %260 = load i32, i32* @y.575
  %261 = sub i32 0, 1
  %262 = add i32 %259, %261
  %263 = sub i32 %259, 1
  %264 = mul i32 %259, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %260, 10
  %268 = and i1 %266, %267
  %269 = xor i1 %266, %267
  %270 = or i1 %268, %269
  %271 = or i1 %266, %267
  br i1 %270, label %272, label %361

; <label>:272:                                    ; preds = %258
  br label %333

; <label>:273:                                    ; preds = %2
  %274 = load i32, i32* @x.574
  %275 = load i32, i32* @y.575
  %276 = sub i32 0, 1
  %277 = add i32 %274, %276
  %278 = sub i32 %274, 1
  %279 = mul i32 %274, %277
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %275, 10
  %283 = xor i1 %281, true
  %284 = xor i1 %282, true
  %285 = xor i1 true, true
  %286 = and i1 %283, true
  %287 = and i1 %281, %285
  %288 = and i1 %284, true
  %289 = and i1 %282, %285
  %290 = or i1 %286, %287
  %291 = or i1 %288, %289
  %292 = xor i1 %290, %291
  %293 = or i1 %283, %284
  %294 = xor i1 %293, true
  %295 = or i1 true, %285
  %296 = and i1 %294, %295
  %297 = or i1 %292, %296
  %298 = or i1 %281, %282
  br i1 %297, label %299, label %362

; <label>:299:                                    ; preds = %273, %362
  %300 = landingpad { i8*, i32 }
          cleanup
  %301 = extractvalue { i8*, i32 } %300, 0
  store i8* %301, i8** %8, align 8
  %302 = extractvalue { i8*, i32 } %300, 1
  store i32 %302, i32* %9, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %7) #3
  %303 = load i32, i32* @x.574
  %304 = load i32, i32* @y.575
  %305 = sub i32 0, 1
  %306 = add i32 %303, %305
  %307 = sub i32 %303, 1
  %308 = mul i32 %303, %306
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %304, 10
  %312 = xor i1 %310, true
  %313 = xor i1 %311, true
  %314 = xor i1 false, true
  %315 = and i1 %312, false
  %316 = and i1 %310, %314
  %317 = and i1 %313, false
  %318 = and i1 %311, %314
  %319 = or i1 %315, %316
  %320 = or i1 %317, %318
  %321 = xor i1 %319, %320
  %322 = or i1 %312, %313
  %323 = xor i1 %322, true
  %324 = or i1 false, %314
  %325 = and i1 %323, %324
  %326 = or i1 %321, %325
  %327 = or i1 %310, %311
  br i1 %326, label %328, label %362

; <label>:328:                                    ; preds = %299
  br label %338

; <label>:329:                                    ; preds = %214, %90, %88, %79, %77
  %330 = landingpad { i8*, i32 }
          cleanup
  %331 = extractvalue { i8*, i32 } %330, 0
  store i8* %331, i8** %8, align 8
  %332 = extractvalue { i8*, i32 } %330, 1
  store i32 %332, i32* %9, align 4
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %6) #3
  br label %338

; <label>:333:                                    ; preds = %272, %205, %199
  br label %334

; <label>:334:                                    ; preds = %333
  %335 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %12) #3
  br label %144

; <label>:336:                                    ; preds = %198
  br label %79

; <label>:337:                                    ; preds = %81
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %6) #3
  ret void

; <label>:338:                                    ; preds = %329, %328
  %339 = load i8*, i8** %8, align 8
  %340 = load i32, i32* %9, align 4
  %341 = insertvalue { i8*, i32 } undef, i8* %339, 0
  %342 = insertvalue { i8*, i32 } %341, i32 %340, 1
  resume { i8*, i32 } %342

; <label>:343:                                    ; preds = %47, %20
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %7) #3
  %344 = getelementptr inbounds %class.Dinic, %class.Dinic* %15, i32 0, i32 3
  %345 = load i32, i32* %4, align 4
  %346 = sext i32 %345 to i64
  %347 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %344, i64 %346) #3
  store i32 0, i32* %347, align 4
  br label %47

; <label>:348:                                    ; preds = %106, %92
  %349 = getelementptr inbounds %class.Dinic, %class.Dinic* %15, i32 0, i32 1
  %350 = load i32, i32* %10, align 4
  %351 = sext i32 %350 to i64
  %352 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"* %349, i64 %351) #3
  store %"class.std::vector.18"* %352, %"class.std::vector.18"** %11, align 8
  %353 = load %"class.std::vector.18"*, %"class.std::vector.18"** %11, align 8
  %354 = call %class.MaxFEdge* @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE5beginEv(%"class.std::vector.18"* %353) #3
  %355 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %class.MaxFEdge* %354, %class.MaxFEdge** %355, align 8
  %356 = load %"class.std::vector.18"*, %"class.std::vector.18"** %11, align 8
  %357 = call %class.MaxFEdge* @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE3endEv(%"class.std::vector.18"* %356) #3
  %358 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %class.MaxFEdge* %357, %class.MaxFEdge** %358, align 8
  br label %106

; <label>:359:                                    ; preds = %170, %144
  %360 = call zeroext i1 @_ZN9__gnu_cxxneIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %12, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %13) #3
  br label %170

; <label>:361:                                    ; preds = %258, %231
  br label %258

; <label>:362:                                    ; preds = %299, %273
  %363 = landingpad { i8*, i32 }
          cleanup
  %364 = extractvalue { i8*, i32 } %363, 0
  store i8* %364, i8** %8, align 8
  %365 = extractvalue { i8*, i32 } %363, 1
  store i32 %365, i32* %9, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %7) #3
  br label %299
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.8"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector.8"* %7, i64 %8, i32* dereferenceable(4) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN5DinicIxE3dfsEiix(%class.Dinic*, i32, i32, i64) #0 comdat align 2 {
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i32
  %9 = alloca i32
  %10 = alloca %class.Dinic*
  %11 = alloca i64, align 8
  %12 = alloca %class.Dinic*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32*, align 8
  %18 = alloca %class.MaxFEdge*, align 8
  %19 = alloca i64, align 8
  store %class.Dinic* %0, %class.Dinic** %12, align 8
  store i32 %1, i32* %13, align 4
  store i32 %2, i32* %14, align 4
  store i64 %3, i64* %15, align 8
  %20 = load %class.Dinic*, %class.Dinic** %12, align 8
  store %class.Dinic* %20, %class.Dinic** %10
  %21 = load i32, i32* %13, align 4
  store i32 %21, i32* %9
  %22 = load i32, i32* %14, align 4
  store i32 %22, i32* %8
  %23 = alloca i32
  store i32 1104565418, i32* %23
  br label %24

; <label>:24:                                     ; preds = %4, %656
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 1104565418, label %27
    i32 -1457301564, label %32
    i32 -1527522220, label %48
    i32 48159415, label %77
    i32 771078194, label %78
    i32 -1503959269, label %105
    i32 -1612644975, label %126
    i32 1726189380, label %127
    i32 -1898245956, label %139
    i32 291818192, label %166
    i32 -1568158445, label %195
    i32 1348451596, label %198
    i32 1221264551, label %213
    i32 -1961675305, label %243
    i32 149271095, label %246
    i32 -819637091, label %260
    i32 1123081475, label %276
    i32 909022811, label %343
    i32 1121180194, label %344
    i32 -1126430878, label %345
    i32 -620322095, label %346
    i32 -364288558, label %373
    i32 -874329770, label %395
    i32 28447853, label %396
    i32 -410703529, label %423
    i32 2025441339, label %440
    i32 -1113023277, label %441
    i32 1289449821, label %457
    i32 -175640682, label %473
    i32 -241713804, label %475
    i32 1880836900, label %477
    i32 -1882261218, label %483
    i32 411784882, label %497
    i32 -148120182, label %513
    i32 1283256774, label %631
    i32 -598214057, label %652
    i32 242304589, label %654
  ]

; <label>:26:                                     ; preds = %24
  br label %656

; <label>:27:                                     ; preds = %24
  %28 = load volatile i32, i32* %9
  %29 = load volatile i32, i32* %8
  %30 = icmp eq i32 %28, %29
  %31 = select i1 %30, i32 -1457301564, i32 771078194
  store i32 %31, i32* %23
  br label %656

; <label>:32:                                     ; preds = %24
  %33 = load i32, i32* @x.578
  %34 = load i32, i32* @y.579
  %35 = add i32 %33, -2094068771
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -2094068771
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -1527522220, i32 -241713804
  store i32 %47, i32* %23
  br label %656

; <label>:48:                                     ; preds = %24
  %49 = load i64, i64* %15, align 8
  store i64 %49, i64* %11, align 8
  %50 = load i32, i32* @x.578
  %51 = load i32, i32* @y.579
  %52 = add i32 %50, 1673654873
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1673654873
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 48159415, i32 -241713804
  store i32 %76, i32* %23
  br label %656

; <label>:77:                                     ; preds = %24
  store i32 -1113023277, i32* %23
  br label %656

; <label>:78:                                     ; preds = %24
  %79 = load i32, i32* @x.578
  %80 = load i32, i32* @y.579
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 -1503959269, i32 1880836900
  store i32 %104, i32* %23
  br label %656

; <label>:105:                                    ; preds = %24
  store i64 0, i64* %16, align 8
  %106 = load volatile %class.Dinic*, %class.Dinic** %10
  %107 = getelementptr inbounds %class.Dinic, %class.Dinic* %106, i32 0, i32 2
  %108 = load i32, i32* %13, align 4
  %109 = sext i32 %108 to i64
  %110 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %107, i64 %109) #3
  store i32* %110, i32** %17, align 8
  %111 = load i32, i32* @x.578
  %112 = load i32, i32* @y.579
  %113 = sub i32 %111, 1352736901
  %114 = sub i32 %113, 1
  %115 = add i32 %114, 1352736901
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = and i1 %119, %120
  %122 = xor i1 %119, %120
  %123 = or i1 %121, %122
  %124 = or i1 %119, %120
  %125 = select i1 %123, i32 -1612644975, i32 1880836900
  store i32 %125, i32* %23
  br label %656

; <label>:126:                                    ; preds = %24
  store i32 1726189380, i32* %23
  br label %656

; <label>:127:                                    ; preds = %24
  %128 = load i32*, i32** %17, align 8
  %129 = load i32, i32* %128, align 4
  %130 = load volatile %class.Dinic*, %class.Dinic** %10
  %131 = getelementptr inbounds %class.Dinic, %class.Dinic* %130, i32 0, i32 1
  %132 = load i32, i32* %13, align 4
  %133 = sext i32 %132 to i64
  %134 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"* %131, i64 %133) #3
  %135 = call i64 @_ZNKSt6vectorI8MaxFEdgeIxESaIS1_EE4sizeEv(%"class.std::vector.18"* %134) #3
  %136 = trunc i64 %135 to i32
  %137 = icmp slt i32 %129, %136
  %138 = select i1 %137, i32 -1898245956, i32 28447853
  store i32 %138, i32* %23
  br label %656

; <label>:139:                                    ; preds = %24
  %140 = load i32, i32* @x.578
  %141 = load i32, i32* @y.579
  %142 = sub i32 0, 1
  %143 = add i32 %140, %142
  %144 = sub i32 %140, 1
  %145 = mul i32 %140, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %141, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 true, true
  %152 = and i1 %149, true
  %153 = and i1 %147, %151
  %154 = and i1 %150, true
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 true, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  %165 = select i1 %163, i32 291818192, i32 -1882261218
  store i32 %165, i32* %23
  br label %656

; <label>:166:                                    ; preds = %24
  %167 = load volatile %class.Dinic*, %class.Dinic** %10
  %168 = getelementptr inbounds %class.Dinic, %class.Dinic* %167, i32 0, i32 1
  %169 = load i32, i32* %13, align 4
  %170 = sext i32 %169 to i64
  %171 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"* %168, i64 %170) #3
  %172 = load i32*, i32** %17, align 8
  %173 = load i32, i32* %172, align 4
  %174 = sext i32 %173 to i64
  %175 = call dereferenceable(24) %class.MaxFEdge* @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEixEm(%"class.std::vector.18"* %171, i64 %174) #3
  store %class.MaxFEdge* %175, %class.MaxFEdge** %18, align 8
  %176 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %177 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %176, i32 0, i32 2
  %178 = load i64, i64* %177, align 8
  %179 = icmp sgt i64 %178, 0
  store i1 %179, i1* %7
  %180 = load i32, i32* @x.578
  %181 = load i32, i32* @y.579
  %182 = add i32 %180, -1442982572
  %183 = sub i32 %182, 1
  %184 = sub i32 %183, -1442982572
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = and i1 %188, %189
  %191 = xor i1 %188, %189
  %192 = or i1 %190, %191
  %193 = or i1 %188, %189
  %194 = select i1 %192, i32 -1568158445, i32 -1882261218
  store i32 %194, i32* %23
  br label %656

; <label>:195:                                    ; preds = %24
  %196 = load volatile i1, i1* %7
  %197 = select i1 %196, i32 1348451596, i32 -1126430878
  store i32 %197, i32* %23
  br label %656

; <label>:198:                                    ; preds = %24
  %199 = load i32, i32* @x.578
  %200 = load i32, i32* @y.579
  %201 = sub i32 0, 1
  %202 = add i32 %199, %201
  %203 = sub i32 %199, 1
  %204 = mul i32 %199, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %200, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  %212 = select i1 %210, i32 1221264551, i32 411784882
  store i32 %212, i32* %23
  br label %656

; <label>:213:                                    ; preds = %24
  %214 = load volatile %class.Dinic*, %class.Dinic** %10
  %215 = getelementptr inbounds %class.Dinic, %class.Dinic* %214, i32 0, i32 3
  %216 = load i32, i32* %13, align 4
  %217 = sext i32 %216 to i64
  %218 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %215, i64 %217) #3
  %219 = load i32, i32* %218, align 4
  %220 = load volatile %class.Dinic*, %class.Dinic** %10
  %221 = getelementptr inbounds %class.Dinic, %class.Dinic* %220, i32 0, i32 3
  %222 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %223 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %222, i32 0, i32 0
  %224 = load i32, i32* %223, align 8
  %225 = sext i32 %224 to i64
  %226 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %221, i64 %225) #3
  %227 = load i32, i32* %226, align 4
  %228 = icmp slt i32 %219, %227
  store i1 %228, i1* %6
  %229 = load i32, i32* @x.578
  %230 = load i32, i32* @y.579
  %231 = sub i32 0, 1
  %232 = add i32 %229, %231
  %233 = sub i32 %229, 1
  %234 = mul i32 %229, %232
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %230, 10
  %238 = and i1 %236, %237
  %239 = xor i1 %236, %237
  %240 = or i1 %238, %239
  %241 = or i1 %236, %237
  %242 = select i1 %240, i32 -1961675305, i32 411784882
  store i32 %242, i32* %23
  br label %656

; <label>:243:                                    ; preds = %24
  %244 = load volatile i1, i1* %6
  %245 = select i1 %244, i32 149271095, i32 -1126430878
  store i32 %245, i32* %23
  br label %656

; <label>:246:                                    ; preds = %24
  %247 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %248 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %247, i32 0, i32 0
  %249 = load i32, i32* %248, align 8
  %250 = load i32, i32* %14, align 4
  %251 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %252 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %251, i32 0, i32 2
  %253 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %252)
  %254 = load i64, i64* %253, align 8
  %255 = load volatile %class.Dinic*, %class.Dinic** %10
  %256 = call i64 @_ZN5DinicIxE3dfsEiix(%class.Dinic* %255, i32 %249, i32 %250, i64 %254)
  store i64 %256, i64* %19, align 8
  %257 = load i64, i64* %19, align 8
  %258 = icmp sgt i64 %257, 0
  %259 = select i1 %258, i32 -819637091, i32 1121180194
  store i32 %259, i32* %23
  br label %656

; <label>:260:                                    ; preds = %24
  %261 = load i32, i32* @x.578
  %262 = load i32, i32* @y.579
  %263 = add i32 %261, -1029682067
  %264 = sub i32 %263, 1
  %265 = sub i32 %264, -1029682067
  %266 = sub i32 %261, 1
  %267 = mul i32 %261, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %262, 10
  %271 = and i1 %269, %270
  %272 = xor i1 %269, %270
  %273 = or i1 %271, %272
  %274 = or i1 %269, %270
  %275 = select i1 %273, i32 1123081475, i32 -148120182
  store i32 %275, i32* %23
  br label %656

; <label>:276:                                    ; preds = %24
  %277 = load i64, i64* %19, align 8
  %278 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %279 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %278, i32 0, i32 2
  %280 = load i64, i64* %279, align 8
  %281 = sub i64 %280, -4731821452856681648
  %282 = sub i64 %281, %277
  %283 = add i64 %282, -4731821452856681648
  %284 = sub nsw i64 %280, %277
  store i64 %283, i64* %279, align 8
  %285 = load i64, i64* %19, align 8
  %286 = load volatile %class.Dinic*, %class.Dinic** %10
  %287 = getelementptr inbounds %class.Dinic, %class.Dinic* %286, i32 0, i32 1
  %288 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %289 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %288, i32 0, i32 0
  %290 = load i32, i32* %289, align 8
  %291 = sext i32 %290 to i64
  %292 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"* %287, i64 %291) #3
  %293 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %294 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %293, i32 0, i32 3
  %295 = load i32, i32* %294, align 8
  %296 = sext i32 %295 to i64
  %297 = call dereferenceable(24) %class.MaxFEdge* @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEixEm(%"class.std::vector.18"* %292, i64 %296) #3
  %298 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %297, i32 0, i32 2
  %299 = load i64, i64* %298, align 8
  %300 = sub i64 0, %299
  %301 = sub i64 0, %285
  %302 = add i64 %300, %301
  %303 = sub i64 0, %302
  %304 = add nsw i64 %299, %285
  store i64 %303, i64* %298, align 8
  %305 = load i64, i64* %19, align 8
  %306 = load i64, i64* %16, align 8
  %307 = sub i64 %306, -142883532374070846
  %308 = add i64 %307, %305
  %309 = add i64 %308, -142883532374070846
  %310 = add nsw i64 %306, %305
  store i64 %309, i64* %16, align 8
  %311 = load i64, i64* %19, align 8
  %312 = load i64, i64* %15, align 8
  %313 = sub i64 %312, -4686259444058664235
  %314 = sub i64 %313, %311
  %315 = add i64 %314, -4686259444058664235
  %316 = sub nsw i64 %312, %311
  store i64 %315, i64* %15, align 8
  %317 = load i32, i32* @x.578
  %318 = load i32, i32* @y.579
  %319 = sub i32 0, 1
  %320 = add i32 %317, %319
  %321 = sub i32 %317, 1
  %322 = mul i32 %317, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %318, 10
  %326 = xor i1 %324, true
  %327 = xor i1 %325, true
  %328 = xor i1 true, true
  %329 = and i1 %326, true
  %330 = and i1 %324, %328
  %331 = and i1 %327, true
  %332 = and i1 %325, %328
  %333 = or i1 %329, %330
  %334 = or i1 %331, %332
  %335 = xor i1 %333, %334
  %336 = or i1 %326, %327
  %337 = xor i1 %336, true
  %338 = or i1 true, %328
  %339 = and i1 %337, %338
  %340 = or i1 %335, %339
  %341 = or i1 %324, %325
  %342 = select i1 %340, i32 909022811, i32 -148120182
  store i32 %342, i32* %23
  br label %656

; <label>:343:                                    ; preds = %24
  store i32 1121180194, i32* %23
  br label %656

; <label>:344:                                    ; preds = %24
  store i32 -1126430878, i32* %23
  br label %656

; <label>:345:                                    ; preds = %24
  store i32 -620322095, i32* %23
  br label %656

; <label>:346:                                    ; preds = %24
  %347 = load i32, i32* @x.578
  %348 = load i32, i32* @y.579
  %349 = sub i32 0, 1
  %350 = add i32 %347, %349
  %351 = sub i32 %347, 1
  %352 = mul i32 %347, %350
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %348, 10
  %356 = xor i1 %354, true
  %357 = xor i1 %355, true
  %358 = xor i1 false, true
  %359 = and i1 %356, false
  %360 = and i1 %354, %358
  %361 = and i1 %357, false
  %362 = and i1 %355, %358
  %363 = or i1 %359, %360
  %364 = or i1 %361, %362
  %365 = xor i1 %363, %364
  %366 = or i1 %356, %357
  %367 = xor i1 %366, true
  %368 = or i1 false, %358
  %369 = and i1 %367, %368
  %370 = or i1 %365, %369
  %371 = or i1 %354, %355
  %372 = select i1 %370, i32 -364288558, i32 1283256774
  store i32 %372, i32* %23
  br label %656

; <label>:373:                                    ; preds = %24
  %374 = load i32*, i32** %17, align 8
  %375 = load i32, i32* %374, align 4
  %376 = add i32 %375, 1674981134
  %377 = add i32 %376, 1
  %378 = sub i32 %377, 1674981134
  %379 = add nsw i32 %375, 1
  store i32 %378, i32* %374, align 4
  %380 = load i32, i32* @x.578
  %381 = load i32, i32* @y.579
  %382 = add i32 %380, -253998672
  %383 = sub i32 %382, 1
  %384 = sub i32 %383, -253998672
  %385 = sub i32 %380, 1
  %386 = mul i32 %380, %384
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %381, 10
  %390 = and i1 %388, %389
  %391 = xor i1 %388, %389
  %392 = or i1 %390, %391
  %393 = or i1 %388, %389
  %394 = select i1 %392, i32 -874329770, i32 1283256774
  store i32 %394, i32* %23
  br label %656

; <label>:395:                                    ; preds = %24
  store i32 1726189380, i32* %23
  br label %656

; <label>:396:                                    ; preds = %24
  %397 = load i32, i32* @x.578
  %398 = load i32, i32* @y.579
  %399 = sub i32 0, 1
  %400 = add i32 %397, %399
  %401 = sub i32 %397, 1
  %402 = mul i32 %397, %400
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %398, 10
  %406 = xor i1 %404, true
  %407 = xor i1 %405, true
  %408 = xor i1 true, true
  %409 = and i1 %406, true
  %410 = and i1 %404, %408
  %411 = and i1 %407, true
  %412 = and i1 %405, %408
  %413 = or i1 %409, %410
  %414 = or i1 %411, %412
  %415 = xor i1 %413, %414
  %416 = or i1 %406, %407
  %417 = xor i1 %416, true
  %418 = or i1 true, %408
  %419 = and i1 %417, %418
  %420 = or i1 %415, %419
  %421 = or i1 %404, %405
  %422 = select i1 %420, i32 -410703529, i32 -598214057
  store i32 %422, i32* %23
  br label %656

; <label>:423:                                    ; preds = %24
  %424 = load i64, i64* %16, align 8
  store i64 %424, i64* %11, align 8
  %425 = load i32, i32* @x.578
  %426 = load i32, i32* @y.579
  %427 = sub i32 %425, -340329614
  %428 = sub i32 %427, 1
  %429 = add i32 %428, -340329614
  %430 = sub i32 %425, 1
  %431 = mul i32 %425, %429
  %432 = urem i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %426, 10
  %435 = and i1 %433, %434
  %436 = xor i1 %433, %434
  %437 = or i1 %435, %436
  %438 = or i1 %433, %434
  %439 = select i1 %437, i32 2025441339, i32 -598214057
  store i32 %439, i32* %23
  br label %656

; <label>:440:                                    ; preds = %24
  store i32 -1113023277, i32* %23
  br label %656

; <label>:441:                                    ; preds = %24
  %442 = load i32, i32* @x.578
  %443 = load i32, i32* @y.579
  %444 = sub i32 %442, 21792128
  %445 = sub i32 %444, 1
  %446 = add i32 %445, 21792128
  %447 = sub i32 %442, 1
  %448 = mul i32 %442, %446
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %443, 10
  %452 = and i1 %450, %451
  %453 = xor i1 %450, %451
  %454 = or i1 %452, %453
  %455 = or i1 %450, %451
  %456 = select i1 %454, i32 1289449821, i32 242304589
  store i32 %456, i32* %23
  br label %656

; <label>:457:                                    ; preds = %24
  %458 = load i64, i64* %11, align 8
  store i64 %458, i64* %5
  %459 = load i32, i32* @x.578
  %460 = load i32, i32* @y.579
  %461 = sub i32 0, 1
  %462 = add i32 %459, %461
  %463 = sub i32 %459, 1
  %464 = mul i32 %459, %462
  %465 = urem i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %460, 10
  %468 = and i1 %466, %467
  %469 = xor i1 %466, %467
  %470 = or i1 %468, %469
  %471 = or i1 %466, %467
  %472 = select i1 %470, i32 -175640682, i32 242304589
  store i32 %472, i32* %23
  br label %656

; <label>:473:                                    ; preds = %24
  %474 = load volatile i64, i64* %5
  ret i64 %474

; <label>:475:                                    ; preds = %24
  %476 = load i64, i64* %15, align 8
  store i64 %476, i64* %11, align 8
  store i32 -1527522220, i32* %23
  br label %656

; <label>:477:                                    ; preds = %24
  store i64 0, i64* %16, align 8
  %478 = load volatile %class.Dinic*, %class.Dinic** %10
  %479 = getelementptr inbounds %class.Dinic, %class.Dinic* %478, i32 0, i32 2
  %480 = load i32, i32* %13, align 4
  %481 = sext i32 %480 to i64
  %482 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %479, i64 %481) #3
  store i32* %482, i32** %17, align 8
  store i32 -1503959269, i32* %23
  br label %656

; <label>:483:                                    ; preds = %24
  %484 = load volatile %class.Dinic*, %class.Dinic** %10
  %485 = getelementptr inbounds %class.Dinic, %class.Dinic* %484, i32 0, i32 1
  %486 = load i32, i32* %13, align 4
  %487 = sext i32 %486 to i64
  %488 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"* %485, i64 %487) #3
  %489 = load i32*, i32** %17, align 8
  %490 = load i32, i32* %489, align 4
  %491 = sext i32 %490 to i64
  %492 = call dereferenceable(24) %class.MaxFEdge* @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEixEm(%"class.std::vector.18"* %488, i64 %491) #3
  store %class.MaxFEdge* %492, %class.MaxFEdge** %18, align 8
  %493 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %494 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %493, i32 0, i32 2
  %495 = load i64, i64* %494, align 8
  %496 = icmp sgt i64 %495, 0
  store i32 291818192, i32* %23
  br label %656

; <label>:497:                                    ; preds = %24
  %498 = load volatile %class.Dinic*, %class.Dinic** %10
  %499 = getelementptr inbounds %class.Dinic, %class.Dinic* %498, i32 0, i32 3
  %500 = load i32, i32* %13, align 4
  %501 = sext i32 %500 to i64
  %502 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %499, i64 %501) #3
  %503 = load i32, i32* %502, align 4
  %504 = load volatile %class.Dinic*, %class.Dinic** %10
  %505 = getelementptr inbounds %class.Dinic, %class.Dinic* %504, i32 0, i32 3
  %506 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %507 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %506, i32 0, i32 0
  %508 = load i32, i32* %507, align 8
  %509 = sext i32 %508 to i64
  %510 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %505, i64 %509) #3
  %511 = load i32, i32* %510, align 4
  %512 = icmp slt i32 %503, %511
  store i32 1221264551, i32* %23
  br label %656

; <label>:513:                                    ; preds = %24
  %514 = load i64, i64* %19, align 8
  %515 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %516 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %515, i32 0, i32 2
  %517 = load i64, i64* %516, align 8
  %518 = sub i64 0, %517
  %519 = add i64 0, %518
  %520 = sub i64 0, %517
  %521 = sub i64 %519, 7087764113404700872
  %522 = add i64 %521, %514
  %523 = add i64 %522, 7087764113404700872
  %524 = add i64 %519, %514
  %525 = sub i64 0, %517
  %526 = add i64 0, %525
  %527 = sub i64 0, %517
  %528 = sub i64 0, %526
  %529 = sub i64 0, %514
  %530 = add i64 %528, %529
  %531 = sub i64 0, %530
  %532 = add i64 %526, %514
  %533 = sub i64 0, -8892866008153572463
  %534 = sub i64 %533, %517
  %535 = add i64 %534, -8892866008153572463
  %536 = sub i64 0, %517
  %537 = sub i64 0, %514
  %538 = sub i64 %535, %537
  %539 = add i64 %535, %514
  %540 = shl i64 %517, %514
  %541 = sub i64 0, %514
  %542 = add i64 %517, %541
  %543 = sub i64 %517, %514
  %544 = mul i64 %542, %514
  %545 = sub i64 0, %517
  %546 = add i64 0, %545
  %547 = sub i64 0, %517
  %548 = sub i64 0, %514
  %549 = sub i64 %546, %548
  %550 = add i64 %546, %514
  %551 = sub i64 0, -9030870398760101408
  %552 = sub i64 %551, %517
  %553 = add i64 %552, -9030870398760101408
  %554 = sub i64 0, %517
  %555 = sub i64 0, %553
  %556 = sub i64 0, %514
  %557 = add i64 %555, %556
  %558 = sub i64 0, %557
  %559 = add i64 %553, %514
  %560 = shl i64 %517, %514
  %561 = shl i64 %517, %514
  %562 = add i64 0, -4695285130781814130
  %563 = sub i64 %562, %517
  %564 = sub i64 %563, -4695285130781814130
  %565 = sub i64 0, %517
  %566 = sub i64 0, %564
  %567 = sub i64 0, %514
  %568 = add i64 %566, %567
  %569 = sub i64 0, %568
  %570 = add i64 %564, %514
  %571 = sub i64 %517, -9118738813915829678
  %572 = sub i64 %571, %514
  %573 = add i64 %572, -9118738813915829678
  %574 = sub nsw i64 %517, %514
  store i64 %573, i64* %516, align 8
  %575 = load i64, i64* %19, align 8
  %576 = load volatile %class.Dinic*, %class.Dinic** %10
  %577 = getelementptr inbounds %class.Dinic, %class.Dinic* %576, i32 0, i32 1
  %578 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %579 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %578, i32 0, i32 0
  %580 = load i32, i32* %579, align 8
  %581 = sext i32 %580 to i64
  %582 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_I8MaxFEdgeIxESaIS1_EESaIS3_EEixEm(%"class.std::vector.13"* %577, i64 %581) #3
  %583 = load %class.MaxFEdge*, %class.MaxFEdge** %18, align 8
  %584 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %583, i32 0, i32 3
  %585 = load i32, i32* %584, align 8
  %586 = sext i32 %585 to i64
  %587 = call dereferenceable(24) %class.MaxFEdge* @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEixEm(%"class.std::vector.18"* %582, i64 %586) #3
  %588 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %587, i32 0, i32 2
  %589 = load i64, i64* %588, align 8
  %590 = sub i64 0, 8856991811721137749
  %591 = sub i64 %590, %589
  %592 = add i64 %591, 8856991811721137749
  %593 = sub i64 0, %589
  %594 = sub i64 0, %592
  %595 = sub i64 0, %575
  %596 = add i64 %594, %595
  %597 = sub i64 0, %596
  %598 = add i64 %592, %575
  %599 = sub i64 0, %589
  %600 = add i64 0, %599
  %601 = sub i64 0, %589
  %602 = sub i64 0, %600
  %603 = sub i64 0, %575
  %604 = add i64 %602, %603
  %605 = sub i64 0, %604
  %606 = add i64 %600, %575
  %607 = sub i64 %589, -2585687074070226065
  %608 = add i64 %607, %575
  %609 = add i64 %608, -2585687074070226065
  %610 = add nsw i64 %589, %575
  store i64 %609, i64* %588, align 8
  %611 = load i64, i64* %19, align 8
  %612 = load i64, i64* %16, align 8
  %613 = shl i64 %612, %611
  %614 = sub i64 %612, -6719192386525950096
  %615 = add i64 %614, %611
  %616 = add i64 %615, -6719192386525950096
  %617 = add nsw i64 %612, %611
  store i64 %616, i64* %16, align 8
  %618 = load i64, i64* %19, align 8
  %619 = load i64, i64* %15, align 8
  %620 = sub i64 0, 6909636971281830929
  %621 = sub i64 %620, %619
  %622 = add i64 %621, 6909636971281830929
  %623 = sub i64 0, %619
  %624 = sub i64 %622, 4022745149779891096
  %625 = add i64 %624, %618
  %626 = add i64 %625, 4022745149779891096
  %627 = add i64 %622, %618
  %628 = sub i64 0, %618
  %629 = add i64 %619, %628
  %630 = sub nsw i64 %619, %618
  store i64 %629, i64* %15, align 8
  store i32 1123081475, i32* %23
  br label %656

; <label>:631:                                    ; preds = %24
  %632 = load i32*, i32** %17, align 8
  %633 = load i32, i32* %632, align 4
  %634 = add i32 %633, 745164193
  %635 = sub i32 %634, 1
  %636 = sub i32 %635, 745164193
  %637 = sub i32 %633, 1
  %638 = mul i32 %636, 1
  %639 = sub i32 0, 1412559762
  %640 = sub i32 %639, %633
  %641 = add i32 %640, 1412559762
  %642 = sub i32 0, %633
  %643 = sub i32 0, 1
  %644 = sub i32 %641, %643
  %645 = add i32 %641, 1
  %646 = shl i32 %633, 1
  %647 = shl i32 %633, 1
  %648 = sub i32 %633, 54213026
  %649 = add i32 %648, 1
  %650 = add i32 %649, 54213026
  %651 = add nsw i32 %633, 1
  store i32 %650, i32* %632, align 4
  store i32 -364288558, i32* %23
  br label %656

; <label>:652:                                    ; preds = %24
  %653 = load i64, i64* %16, align 8
  store i64 %653, i64* %11, align 8
  store i32 -410703529, i32* %23
  br label %656

; <label>:654:                                    ; preds = %24
  %655 = load i64, i64* %11, align 8
  store i32 1289449821, i32* %23
  br label %656

; <label>:656:                                    ; preds = %654, %652, %631, %513, %497, %483, %477, %475, %457, %441, %440, %423, %396, %395, %373, %346, %345, %344, %343, %276, %260, %246, %243, %213, %198, %195, %166, %139, %127, %126, %105, %78, %77, %48, %32, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.582
  %6 = load i32, i32* @y.583
  %7 = sub i32 %5, -546952811
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -546952811
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1168504489, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1168504489, label %19
    i32 -1124098580, label %39
    i32 -2077083625, label %72
    i32 -1104279897, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1124098580, i32 -1104279897
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::queue"*, align 8
  %41 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %40, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %41, align 8
  %42 = load %"class.std::queue"*, %"class.std::queue"** %40, align 8
  %43 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %42, i32 0, i32 0
  %44 = load %"class.std::deque"*, %"class.std::deque"** %41, align 8
  %45 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %44) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %43, %"class.std::deque"* dereferenceable(80) %45)
  %46 = load i32, i32* @x.582
  %47 = load i32, i32* @y.583
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -2077083625, i32 -1104279897
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::queue"*, align 8
  %75 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %74, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %75, align 8
  %76 = load %"class.std::queue"*, %"class.std::queue"** %74, align 8
  %77 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %76, i32 0, i32 0
  %78 = load %"class.std::deque"*, %"class.std::deque"** %75, align 8
  %79 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %78) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %77, %"class.std::deque"* dereferenceable(80) %79)
  store i32 -1124098580, i32* %15
  br label %80

; <label>:80:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %7) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %4, %"class.std::deque"* %7) #3
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %8) #3
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"* %7, %"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* %4, %"class.std::allocator.10"* dereferenceable(1) %9)
          to label %10 unwind label %41

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.584
  %12 = load i32, i32* @y.585
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  br i1 %22, label %24, label %48

; <label>:24:                                     ; preds = %10, %48
  %25 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %25) #3
  %26 = load i32, i32* @x.584
  %27 = load i32, i32* @y.585
  %28 = sub i32 %26, -43833877
  %29 = sub i32 %28, 1
  %30 = add i32 %29, -43833877
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  br i1 %38, label %40, label %48

; <label>:40:                                     ; preds = %24
  ret void

; <label>:41:                                     ; preds = %1
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %5, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %6, align 4
  %45 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %45) #3
  br label %46

; <label>:46:                                     ; preds = %41
  %47 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %47) #8
  unreachable

; <label>:48:                                     ; preds = %24, %10
  %49 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %49) #3
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  call void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"* %6, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"* %4) #3
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.MaxFEdge* @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE5beginEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %4 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %5 = bitcast %"class.std::vector.18"* %4 to %"struct.std::_Vector_base.19"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %class.MaxFEdge** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %class.MaxFEdge*, %class.MaxFEdge** %8, align 8
  ret %class.MaxFEdge* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %class.MaxFEdge* @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EE3endEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %4 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %5 = bitcast %"class.std::vector.18"* %4 to %"struct.std::_Vector_base.19"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %class.MaxFEdge** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %class.MaxFEdge*, %class.MaxFEdge** %8, align 8
  ret %class.MaxFEdge* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %class.MaxFEdge** @_ZNK9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %class.MaxFEdge*, %class.MaxFEdge** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %class.MaxFEdge** @_ZNK9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %class.MaxFEdge*, %class.MaxFEdge** %9, align 8
  %11 = icmp ne %class.MaxFEdge* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.MaxFEdge* @_ZNK9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %class.MaxFEdge*, %class.MaxFEdge** %4, align 8
  ret %class.MaxFEdge* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %class.MaxFEdge*, %class.MaxFEdge** %4, align 8
  %6 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %5, i32 1
  store %class.MaxFEdge* %6, %class.MaxFEdge** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.606
  %3 = load i32, i32* @y.607
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %57

; <label>:27:                                     ; preds = %1, %57
  %28 = alloca %"class.std::_Deque_base"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %28, align 8
  %31 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32)
  %33 = load i32, i32* @x.606
  %34 = load i32, i32* @y.607
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %57

; <label>:46:                                     ; preds = %27
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %31, i64 0)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %29, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %30, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32) #3
  br label %52

; <label>:52:                                     ; preds = %48
  %53 = load i8*, i8** %29, align 8
  %54 = load i32, i32* %30, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  resume { i8*, i32 } %56

; <label>:57:                                     ; preds = %27, %1
  %58 = alloca %"class.std::_Deque_base"*, align 8
  %59 = alloca i8*
  %60 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %58, align 8
  %61 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %58, align 8
  %62 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %61, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %62)
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 0
  store i32** null, i32*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %7) #3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %15 = udiv i64 %13, %14
  %16 = add i64 %15, 2562397646444783303
  %17 = add i64 %16, 1
  %18 = sub i64 %17, 2562397646444783303
  %19 = add i64 %15, 1
  store i64 %18, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %20, -8994859091673020131
  %22 = add i64 %21, 2
  %23 = sub i64 %22, -8994859091673020131
  %24 = add i64 %20, 2
  store i64 %23, i64* %7, align 8
  %25 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 1
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %12, i64 %31)
  %33 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33, i32 0, i32 0
  store i32** %32, i32*** %34, align 8
  %35 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %35, i32 0, i32 0
  %37 = load i32**, i32*** %36, align 8
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %5, align 8
  %42 = sub i64 %40, -9127033209852143908
  %43 = sub i64 %42, %41
  %44 = add i64 %43, -9127033209852143908
  %45 = sub i64 %40, %41
  %46 = udiv i64 %44, 2
  %47 = getelementptr inbounds i32*, i32** %37, i64 %46
  store i32** %47, i32*** %8, align 8
  %48 = load i32**, i32*** %8, align 8
  %49 = load i64, i64* %5, align 8
  %50 = getelementptr inbounds i32*, i32** %48, i64 %49
  store i32** %50, i32*** %9, align 8
  %51 = load i32**, i32*** %8, align 8
  %52 = load i32**, i32*** %9, align 8
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"* %12, i32** %51, i32** %52)
          to label %53 unwind label %95

; <label>:53:                                     ; preds = %2
  %54 = load i32, i32* @x.610
  %55 = load i32, i32* @y.611
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %319

; <label>:67:                                     ; preds = %53, %319
  %68 = load i32, i32* @x.610
  %69 = load i32, i32* @y.611
  %70 = add i32 %68, -2054577378
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, -2054577378
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %319

; <label>:94:                                     ; preds = %67
  br label %201

; <label>:95:                                     ; preds = %2
  %96 = load i32, i32* @x.610
  %97 = load i32, i32* @y.611
  %98 = add i32 %96, 742632143
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, 742632143
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %320

; <label>:122:                                    ; preds = %95, %320
  %123 = landingpad { i8*, i32 }
          catch i8* null
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %10, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %11, align 4
  %126 = load i32, i32* @x.610
  %127 = load i32, i32* @y.611
  %128 = sub i32 %126, -269658369
  %129 = sub i32 %128, 1
  %130 = add i32 %129, -269658369
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  br i1 %138, label %140, label %320

; <label>:140:                                    ; preds = %122
  br label %141

; <label>:141:                                    ; preds = %140
  %142 = load i32, i32* @x.610
  %143 = load i32, i32* @y.611
  %144 = add i32 %142, -709192808
  %145 = sub i32 %144, 1
  %146 = sub i32 %145, -709192808
  %147 = sub i32 %142, 1
  %148 = mul i32 %142, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %143, 10
  %152 = and i1 %150, %151
  %153 = xor i1 %150, %151
  %154 = or i1 %152, %153
  %155 = or i1 %150, %151
  br i1 %154, label %156, label %324

; <label>:156:                                    ; preds = %141, %324
  %157 = load i8*, i8** %10, align 8
  %158 = call i8* @__cxa_begin_catch(i8* %157) #3
  %159 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %159, i32 0, i32 0
  %161 = load i32**, i32*** %160, align 8
  %162 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %162, i32 0, i32 1
  %164 = load i64, i64* %163, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %12, i32** %161, i64 %164) #3
  %165 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %165, i32 0, i32 0
  store i32** null, i32*** %166, align 8
  %167 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %167, i32 0, i32 1
  store i64 0, i64* %168, align 8
  %169 = load i32, i32* @x.610
  %170 = load i32, i32* @y.611
  %171 = add i32 %169, -464306139
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, -464306139
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 false, true
  %182 = and i1 %179, false
  %183 = and i1 %177, %181
  %184 = and i1 %180, false
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 false, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  br i1 %193, label %195, label %324

; <label>:195:                                    ; preds = %156
  invoke void @__cxa_rethrow() #12
          to label %264 unwind label %196

; <label>:196:                                    ; preds = %195
  %197 = landingpad { i8*, i32 }
          cleanup
  %198 = extractvalue { i8*, i32 } %197, 0
  store i8* %198, i8** %10, align 8
  %199 = extractvalue { i8*, i32 } %197, 1
  store i32 %199, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %200 unwind label %261

; <label>:200:                                    ; preds = %196
  br label %227

; <label>:201:                                    ; preds = %94
  %202 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %202, i32 0, i32 2
  %204 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %203, i32** %204) #3
  %205 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %206 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %205, i32 0, i32 3
  %207 = load i32**, i32*** %9, align 8
  %208 = getelementptr inbounds i32*, i32** %207, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %206, i32** %208) #3
  %209 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %210 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %209, i32 0, i32 2
  %211 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %210, i32 0, i32 1
  %212 = load i32*, i32** %211, align 8
  %213 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %214 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %213, i32 0, i32 2
  %215 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %214, i32 0, i32 0
  store i32* %212, i32** %215, align 8
  %216 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %217 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %216, i32 0, i32 3
  %218 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %217, i32 0, i32 1
  %219 = load i32*, i32** %218, align 8
  %220 = load i64, i64* %4, align 8
  %221 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %222 = urem i64 %220, %221
  %223 = getelementptr inbounds i32, i32* %219, i64 %222
  %224 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %225 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %224, i32 0, i32 3
  %226 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %225, i32 0, i32 0
  store i32* %223, i32** %226, align 8
  ret void

; <label>:227:                                    ; preds = %200
  %228 = load i32, i32* @x.610
  %229 = load i32, i32* @y.611
  %230 = sub i32 0, 1
  %231 = add i32 %228, %230
  %232 = sub i32 %228, 1
  %233 = mul i32 %228, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %229, 10
  %237 = and i1 %235, %236
  %238 = xor i1 %235, %236
  %239 = or i1 %237, %238
  %240 = or i1 %235, %236
  br i1 %239, label %241, label %337

; <label>:241:                                    ; preds = %227, %337
  %242 = load i8*, i8** %10, align 8
  %243 = load i32, i32* %11, align 4
  %244 = insertvalue { i8*, i32 } undef, i8* %242, 0
  %245 = insertvalue { i8*, i32 } %244, i32 %243, 1
  %246 = load i32, i32* @x.610
  %247 = load i32, i32* @y.611
  %248 = add i32 %246, -605765338
  %249 = sub i32 %248, 1
  %250 = sub i32 %249, -605765338
  %251 = sub i32 %246, 1
  %252 = mul i32 %246, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %247, 10
  %256 = and i1 %254, %255
  %257 = xor i1 %254, %255
  %258 = or i1 %256, %257
  %259 = or i1 %254, %255
  br i1 %258, label %260, label %337

; <label>:260:                                    ; preds = %241
  resume { i8*, i32 } %245

; <label>:261:                                    ; preds = %196
  %262 = landingpad { i8*, i32 }
          catch i8* null
  %263 = extractvalue { i8*, i32 } %262, 0
  call void @__clang_call_terminate(i8* %263) #8
  unreachable

; <label>:264:                                    ; preds = %195
  %265 = load i32, i32* @x.610
  %266 = load i32, i32* @y.611
  %267 = add i32 %265, 1210778092
  %268 = sub i32 %267, 1
  %269 = sub i32 %268, 1210778092
  %270 = sub i32 %265, 1
  %271 = mul i32 %265, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %266, 10
  %275 = xor i1 %273, true
  %276 = xor i1 %274, true
  %277 = xor i1 false, true
  %278 = and i1 %275, false
  %279 = and i1 %273, %277
  %280 = and i1 %276, false
  %281 = and i1 %274, %277
  %282 = or i1 %278, %279
  %283 = or i1 %280, %281
  %284 = xor i1 %282, %283
  %285 = or i1 %275, %276
  %286 = xor i1 %285, true
  %287 = or i1 false, %277
  %288 = and i1 %286, %287
  %289 = or i1 %284, %288
  %290 = or i1 %273, %274
  br i1 %289, label %291, label %342

; <label>:291:                                    ; preds = %264, %342
  %292 = load i32, i32* @x.610
  %293 = load i32, i32* @y.611
  %294 = sub i32 %292, 758185699
  %295 = sub i32 %294, 1
  %296 = add i32 %295, 758185699
  %297 = sub i32 %292, 1
  %298 = mul i32 %292, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %293, 10
  %302 = xor i1 %300, true
  %303 = xor i1 %301, true
  %304 = xor i1 true, true
  %305 = and i1 %302, true
  %306 = and i1 %300, %304
  %307 = and i1 %303, true
  %308 = and i1 %301, %304
  %309 = or i1 %305, %306
  %310 = or i1 %307, %308
  %311 = xor i1 %309, %310
  %312 = or i1 %302, %303
  %313 = xor i1 %312, true
  %314 = or i1 true, %304
  %315 = and i1 %313, %314
  %316 = or i1 %311, %315
  %317 = or i1 %300, %301
  br i1 %316, label %318, label %342

; <label>:318:                                    ; preds = %291
  unreachable

; <label>:319:                                    ; preds = %67, %53
  br label %67

; <label>:320:                                    ; preds = %122, %95
  %321 = landingpad { i8*, i32 }
          catch i8* null
  %322 = extractvalue { i8*, i32 } %321, 0
  store i8* %322, i8** %10, align 8
  %323 = extractvalue { i8*, i32 } %321, 1
  store i32 %323, i32* %11, align 4
  br label %122

; <label>:324:                                    ; preds = %156, %141
  %325 = load i8*, i8** %10, align 8
  %326 = call i8* @__cxa_begin_catch(i8* %325) #3
  %327 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %328 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %327, i32 0, i32 0
  %329 = load i32**, i32*** %328, align 8
  %330 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %331 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %330, i32 0, i32 1
  %332 = load i64, i64* %331, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %12, i32** %329, i64 %332) #3
  %333 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %334 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %333, i32 0, i32 0
  store i32** null, i32*** %334, align 8
  %335 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %336 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %335, i32 0, i32 1
  store i64 0, i64* %336, align 8
  br label %156

; <label>:337:                                    ; preds = %241, %227
  %338 = load i8*, i8** %10, align 8
  %339 = load i32, i32* %11, align 4
  %340 = insertvalue { i8*, i32 } undef, i8* %338, 0
  %341 = insertvalue { i8*, i32 } %340, i32 %339, 1
  br label %241

; <label>:342:                                    ; preds = %291, %264
  br label %291
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  store i32* null, i32** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 1
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 3
  store i32** null, i32*** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #5 comdat {
  %2 = alloca i64
  %3 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %2
  %5 = alloca i32
  store i32 365016325, i32* %5
  %6 = alloca i64
  br label %7

; <label>:7:                                      ; preds = %1, %20
  %8 = load i32, i32* %5
  switch i32 %8, label %9 [
    i32 365016325, label %10
    i32 1551987793, label %14
    i32 -337110133, label %17
    i32 -1663388803, label %18
  ]

; <label>:9:                                      ; preds = %7
  br label %20

; <label>:10:                                     ; preds = %7
  %11 = load volatile i64, i64* %2
  %12 = icmp ult i64 %11, 512
  %13 = select i1 %12, i32 1551987793, i32 -337110133
  store i32 %13, i32* %5
  br label %20

; <label>:14:                                     ; preds = %7
  %15 = load i64, i64* %3, align 8
  %16 = udiv i64 512, %15
  store i32 -1663388803, i32* %5
  store i64 %16, i64* %6
  br label %20

; <label>:17:                                     ; preds = %7
  store i32 -1663388803, i32* %5
  store i64 1, i64* %6
  br label %20

; <label>:18:                                     ; preds = %7
  %19 = load i64, i64* %6
  ret i64 %19

; <label>:20:                                     ; preds = %17, %14, %10, %9
  br label %7
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.618
  %4 = load i32, i32* @y.619
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %158

; <label>:16:                                     ; preds = %2, %158
  %17 = alloca %"class.std::_Deque_base"*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.std::allocator.27", align 1
  %20 = alloca i8*
  %21 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %17, align 8
  store i64 %1, i64* %18, align 8
  %22 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %17, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.27"* sret %19, %"class.std::_Deque_base"* %22) #3
  %23 = load i64, i64* %18, align 8
  %24 = load i32, i32* @x.618
  %25 = load i32, i32* @y.619
  %26 = sub i32 %24, 15772867
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 15772867
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %158

; <label>:38:                                     ; preds = %16
  %39 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.27"* dereferenceable(1) %19, i64 %23)
          to label %40 unwind label %41

; <label>:40:                                     ; preds = %38
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.27"* %19) #3
  ret i32** %39

; <label>:41:                                     ; preds = %38
  %42 = load i32, i32* @x.618
  %43 = load i32, i32* @y.619
  %44 = sub i32 %42, 479114266
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 479114266
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %166

; <label>:68:                                     ; preds = %41, %166
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %20, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %21, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.27"* %19) #3
  %72 = load i32, i32* @x.618
  %73 = load i32, i32* @y.619
  %74 = sub i32 %72, -2087268449
  %75 = sub i32 %74, 1
  %76 = add i32 %75, -2087268449
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %166

; <label>:98:                                     ; preds = %68
  br label %99

; <label>:99:                                     ; preds = %98
  %100 = load i32, i32* @x.618
  %101 = load i32, i32* @y.619
  %102 = sub i32 %100, -2083665624
  %103 = sub i32 %102, 1
  %104 = add i32 %103, -2083665624
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 false, true
  %113 = and i1 %110, false
  %114 = and i1 %108, %112
  %115 = and i1 %111, false
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 false, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  br i1 %124, label %126, label %170

; <label>:126:                                    ; preds = %99, %170
  %127 = load i8*, i8** %20, align 8
  %128 = load i32, i32* %21, align 4
  %129 = insertvalue { i8*, i32 } undef, i8* %127, 0
  %130 = insertvalue { i8*, i32 } %129, i32 %128, 1
  %131 = load i32, i32* @x.618
  %132 = load i32, i32* @y.619
  %133 = add i32 %131, 1086716623
  %134 = sub i32 %133, 1
  %135 = sub i32 %134, 1086716623
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 true, true
  %144 = and i1 %141, true
  %145 = and i1 %139, %143
  %146 = and i1 %142, true
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 true, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  br i1 %155, label %157, label %170

; <label>:157:                                    ; preds = %126
  resume { i8*, i32 } %130

; <label>:158:                                    ; preds = %16, %2
  %159 = alloca %"class.std::_Deque_base"*, align 8
  %160 = alloca i64, align 8
  %161 = alloca %"class.std::allocator.27", align 1
  %162 = alloca i8*
  %163 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %159, align 8
  store i64 %1, i64* %160, align 8
  %164 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %159, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.27"* sret %161, %"class.std::_Deque_base"* %164) #3
  %165 = load i64, i64* %160, align 8
  br label %16

; <label>:166:                                    ; preds = %68, %41
  %167 = landingpad { i8*, i32 }
          cleanup
  %168 = extractvalue { i8*, i32 } %167, 0
  store i8* %168, i8** %20, align 8
  %169 = extractvalue { i8*, i32 } %167, 1
  store i32 %169, i32* %21, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.27"* %19) #3
  br label %68

; <label>:170:                                    ; preds = %126, %99
  %171 = load i8*, i8** %20, align 8
  %172 = load i32, i32* %21, align 4
  %173 = insertvalue { i8*, i32 } undef, i8* %171, 0
  %174 = insertvalue { i8*, i32 } %173, i32 %172, 1
  br label %126
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load i32**, i32*** %5, align 8
  store i32** %11, i32*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %20, %3
  %13 = load i32**, i32*** %7, align 8
  %14 = load i32**, i32*** %6, align 8
  %15 = icmp ult i32** %13, %14
  br i1 %15, label %16, label %61

; <label>:16:                                     ; preds = %12
  %17 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %18 unwind label %23

; <label>:18:                                     ; preds = %16
  %19 = load i32**, i32*** %7, align 8
  store i32* %17, i32** %19, align 8
  br label %20

; <label>:20:                                     ; preds = %18
  %21 = load i32**, i32*** %7, align 8
  %22 = getelementptr inbounds i32*, i32** %21, i32 1
  store i32** %22, i32*** %7, align 8
  br label %12

; <label>:23:                                     ; preds = %16
  %24 = load i32, i32* @x.620
  %25 = load i32, i32* @y.621
  %26 = add i32 %24, 1266210848
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 1266210848
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %77

; <label>:38:                                     ; preds = %23, %77
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %8, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %9, align 4
  %42 = load i32, i32* @x.620
  %43 = load i32, i32* @y.621
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %77

; <label>:55:                                     ; preds = %38
  br label %56

; <label>:56:                                     ; preds = %55
  %57 = load i8*, i8** %8, align 8
  %58 = call i8* @__cxa_begin_catch(i8* %57) #3
  %59 = load i32**, i32*** %5, align 8
  %60 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %10, i32** %59, i32** %60) #3
  invoke void @__cxa_rethrow() #12
          to label %76 unwind label %62

; <label>:61:                                     ; preds = %12
  br label %67

; <label>:62:                                     ; preds = %56
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %8, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %66 unwind label %73

; <label>:66:                                     ; preds = %62
  br label %68

; <label>:67:                                     ; preds = %61
  ret void

; <label>:68:                                     ; preds = %66
  %69 = load i8*, i8** %8, align 8
  %70 = load i32, i32* %9, align 4
  %71 = insertvalue { i8*, i32 } undef, i8* %69, 0
  %72 = insertvalue { i8*, i32 } %71, i32 %70, 1
  resume { i8*, i32 } %72

; <label>:73:                                     ; preds = %62
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  call void @__clang_call_terminate(i8* %75) #8
  unreachable

; <label>:76:                                     ; preds = %56
  unreachable

; <label>:77:                                     ; preds = %38, %23
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %8, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %9, align 4
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"*, i32**, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::allocator.27", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.27"* sret %7, %"class.std::_Deque_base"* %10) #3
  %11 = load i32**, i32*** %5, align 8
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.27"* dereferenceable(1) %7, i32** %11, i64 %12)
          to label %13 unwind label %56

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.622
  %15 = load i32, i32* @y.623
  %16 = sub i32 %14, 1633543495
  %17 = sub i32 %16, 1
  %18 = add i32 %17, 1633543495
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %115

; <label>:28:                                     ; preds = %13, %115
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.27"* %7) #3
  %29 = load i32, i32* @x.622
  %30 = load i32, i32* @y.623
  %31 = add i32 %29, 2111315783
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 2111315783
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  br i1 %53, label %55, label %115

; <label>:55:                                     ; preds = %28
  ret void

; <label>:56:                                     ; preds = %3
  %57 = load i32, i32* @x.622
  %58 = load i32, i32* @y.623
  %59 = sub i32 %57, 2072367242
  %60 = sub i32 %59, 1
  %61 = add i32 %60, 2072367242
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 true, true
  %70 = and i1 %67, true
  %71 = and i1 %65, %69
  %72 = and i1 %68, true
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 true, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  br i1 %81, label %83, label %116

; <label>:83:                                     ; preds = %56, %116
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %8, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %9, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.27"* %7) #3
  %87 = load i32, i32* @x.622
  %88 = load i32, i32* @y.623
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %116

; <label>:112:                                    ; preds = %83
  br label %113

; <label>:113:                                    ; preds = %112
  %114 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %114) #8
  unreachable

; <label>:115:                                    ; preds = %28, %13
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.27"* %7) #3
  br label %28

; <label>:116:                                    ; preds = %83, %56
  %117 = landingpad { i8*, i32 }
          catch i8* null
  %118 = extractvalue { i8*, i32 } %117, 0
  store i8* %118, i8** %8, align 8
  %119 = extractvalue { i8*, i32 } %117, 1
  store i32 %119, i32* %9, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.27"* %7) #3
  br label %83
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.27"* noalias sret, %"class.std::_Deque_base"*) #5 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %3, align 8
  %4 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.27"* %0, %"class.std::allocator.10"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.27"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i32**
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.628
  %7 = load i32, i32* @y.629
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 623997385, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 623997385, label %19
    i32 1482476614, label %39
    i32 -543100499, label %73
    i32 -321438159, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1482476614, i32 -321438159
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.27"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %40, align 8
  %43 = bitcast %"class.std::allocator.27"* %42 to %"class.__gnu_cxx::new_allocator.28"*
  %44 = load i64, i64* %41, align 8
  %45 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"* %43, i64 %44, i8* null)
  store i32** %45, i32*** %3
  %46 = load i32, i32* @x.628
  %47 = load i32, i32* @y.629
  %48 = sub i32 %46, -1306108180
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1306108180
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -543100499, i32 -321438159
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile i32**, i32*** %3
  ret i32** %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::allocator.27"*, align 8
  %77 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %76, align 8
  %79 = bitcast %"class.std::allocator.27"* %78 to %"class.__gnu_cxx::new_allocator.28"*
  %80 = load i64, i64* %77, align 8
  %81 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"* %79, i64 %80, i8* null)
  store i32 1482476614, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.27"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %2, align 8
  %3 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %2, align 8
  %4 = bitcast %"class.std::allocator.27"* %3 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.28"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.27"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.27"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %3, align 8
  %6 = bitcast %"class.std::allocator.27"* %5 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.28"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i32**
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -1519209077, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %97
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1519209077, label %17
    i32 -1425582021, label %22
    i32 -785736845, label %23
    i32 1119682912, label %38
    i32 312906, label %70
    i32 613676299, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %97

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1425582021, i32 -785736845
  store i32 %21, i32* %13
  br label %97

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.638
  %25 = load i32, i32* @y.639
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 1119682912, i32 613676299
  store i32 %37, i32* %13
  br label %97

; <label>:38:                                     ; preds = %14
  %39 = load i64, i64* %8, align 8
  %40 = mul i64 %39, 8
  %41 = call i8* @_Znwm(i64 %40)
  %42 = bitcast i8* %41 to i32**
  store i32** %42, i32*** %4
  %43 = load i32, i32* @x.638
  %44 = load i32, i32* @y.639
  %45 = add i32 %43, -733712822
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -733712822
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 312906, i32 613676299
  store i32 %69, i32* %13
  br label %97

; <label>:70:                                     ; preds = %14
  %71 = load volatile i32**, i32*** %4
  ret i32** %71

; <label>:72:                                     ; preds = %14
  %73 = load i64, i64* %8, align 8
  %74 = sub i64 0, %73
  %75 = add i64 0, %74
  %76 = sub i64 0, %73
  %77 = add i64 %75, -5910238769745230082
  %78 = add i64 %77, 8
  %79 = sub i64 %78, -5910238769745230082
  %80 = add i64 %75, 8
  %81 = shl i64 %73, 8
  %82 = shl i64 %73, 8
  %83 = sub i64 0, %73
  %84 = add i64 0, %83
  %85 = sub i64 0, %73
  %86 = sub i64 0, 8
  %87 = sub i64 %84, %86
  %88 = add i64 %84, 8
  %89 = add i64 %73, -869289753072858832
  %90 = sub i64 %89, 8
  %91 = sub i64 %90, -869289753072858832
  %92 = sub i64 %73, 8
  %93 = mul i64 %91, 8
  %94 = mul i64 %73, 8
  %95 = call i8* @_Znwm(i64 %94)
  %96 = bitcast i8* %95 to i32**
  store i32 1119682912, i32* %13
  br label %97

; <label>:97:                                     ; preds = %72, %38, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.642
  %5 = load i32, i32* @y.643
  %6 = sub i32 %4, 716505270
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 716505270
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 824216541, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 824216541, label %18
    i32 239843329, label %38
    i32 -362991753, label %55
    i32 -722659900, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 239843329, i32 -722659900
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %39, align 8
  %41 = load i32, i32* @x.642
  %42 = load i32, i32* @y.643
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -362991753, i32 -722659900
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %57, align 8
  store i32 239843329, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.10"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %7 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.10"* dereferenceable(1) %5, i64 %6)
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #5 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base"*
  %5 = alloca i32***
  %6 = alloca i32***
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.646
  %10 = load i32, i32* @y.647
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 1446714884, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %194
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1446714884, label %22
    i32 -1734115364, label %30
    i32 1080636769, label %53
    i32 -1226525883, label %54
    i32 57706551, label %61
    i32 -1882771984, label %66
    i32 1186056442, label %94
    i32 1249065174, label %125
    i32 1104096220, label %126
    i32 -615985571, label %153
    i32 527604415, label %180
    i32 -1596401084, label %181
    i32 -1031133731, label %188
    i32 -629755252, label %193
  ]

; <label>:21:                                     ; preds = %19
  br label %194

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1734115364, i32 -1596401084
  store i32 %29, i32* %18
  br label %194

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::_Deque_base"*, align 8
  %32 = alloca i32**, align 8
  %33 = alloca i32**, align 8
  store i32*** %33, i32**** %6
  %34 = alloca i32**, align 8
  store i32*** %34, i32**** %5
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %31, align 8
  store i32** %1, i32*** %32, align 8
  %35 = load volatile i32***, i32**** %6
  store i32** %2, i32*** %35, align 8
  %36 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %31, align 8
  store %"class.std::_Deque_base"* %36, %"class.std::_Deque_base"** %4
  %37 = load i32**, i32*** %32, align 8
  %38 = load volatile i32***, i32**** %5
  store i32** %37, i32*** %38, align 8
  %39 = load i32, i32* @x.646
  %40 = load i32, i32* @y.647
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1080636769, i32 -1596401084
  store i32 %52, i32* %18
  br label %194

; <label>:53:                                     ; preds = %19
  store i32 -1226525883, i32* %18
  br label %194

; <label>:54:                                     ; preds = %19
  %55 = load volatile i32***, i32**** %5
  %56 = load i32**, i32*** %55, align 8
  %57 = load volatile i32***, i32**** %6
  %58 = load i32**, i32*** %57, align 8
  %59 = icmp ult i32** %56, %58
  %60 = select i1 %59, i32 57706551, i32 1104096220
  store i32 %60, i32* %18
  br label %194

; <label>:61:                                     ; preds = %19
  %62 = load volatile i32***, i32**** %5
  %63 = load i32**, i32*** %62, align 8
  %64 = load i32*, i32** %63, align 8
  %65 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %65, i32* %64) #3
  store i32 -1882771984, i32* %18
  br label %194

; <label>:66:                                     ; preds = %19
  %67 = load i32, i32* @x.646
  %68 = load i32, i32* @y.647
  %69 = sub i32 %67, -391411869
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -391411869
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 1186056442, i32 -1031133731
  store i32 %93, i32* %18
  br label %194

; <label>:94:                                     ; preds = %19
  %95 = load volatile i32***, i32**** %5
  %96 = load i32**, i32*** %95, align 8
  %97 = getelementptr inbounds i32*, i32** %96, i32 1
  %98 = load volatile i32***, i32**** %5
  store i32** %97, i32*** %98, align 8
  %99 = load i32, i32* @x.646
  %100 = load i32, i32* @y.647
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 1249065174, i32 -1031133731
  store i32 %124, i32* %18
  br label %194

; <label>:125:                                    ; preds = %19
  store i32 -1226525883, i32* %18
  br label %194

; <label>:126:                                    ; preds = %19
  %127 = load i32, i32* @x.646
  %128 = load i32, i32* @y.647
  %129 = sub i32 0, 1
  %130 = add i32 %127, %129
  %131 = sub i32 %127, 1
  %132 = mul i32 %127, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %128, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 true, true
  %139 = and i1 %136, true
  %140 = and i1 %134, %138
  %141 = and i1 %137, true
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 true, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 -615985571, i32 -629755252
  store i32 %152, i32* %18
  br label %194

; <label>:153:                                    ; preds = %19
  %154 = load i32, i32* @x.646
  %155 = load i32, i32* @y.647
  %156 = sub i32 0, 1
  %157 = add i32 %154, %156
  %158 = sub i32 %154, 1
  %159 = mul i32 %154, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %155, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 true, true
  %166 = and i1 %163, true
  %167 = and i1 %161, %165
  %168 = and i1 %164, true
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 true, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  %179 = select i1 %177, i32 527604415, i32 -629755252
  store i32 %179, i32* %18
  br label %194

; <label>:180:                                    ; preds = %19
  ret void

; <label>:181:                                    ; preds = %19
  %182 = alloca %"class.std::_Deque_base"*, align 8
  %183 = alloca i32**, align 8
  %184 = alloca i32**, align 8
  %185 = alloca i32**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %182, align 8
  store i32** %1, i32*** %183, align 8
  store i32** %2, i32*** %184, align 8
  %186 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %182, align 8
  %187 = load i32**, i32*** %183, align 8
  store i32** %187, i32*** %185, align 8
  store i32 -1734115364, i32* %18
  br label %194

; <label>:188:                                    ; preds = %19
  %189 = load volatile i32***, i32**** %5
  %190 = load i32**, i32*** %189, align 8
  %191 = getelementptr inbounds i32*, i32** %190, i32 1
  %192 = load volatile i32***, i32**** %5
  store i32** %191, i32*** %192, align 8
  store i32 1186056442, i32* %18
  br label %194

; <label>:193:                                    ; preds = %19
  store i32 -615985571, i32* %18
  br label %194

; <label>:194:                                    ; preds = %193, %188, %181, %153, %126, %125, %94, %66, %61, %54, %53, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.648
  %4 = load i32, i32* @y.649
  %5 = add i32 %3, 262361820
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 262361820
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %86

; <label>:29:                                     ; preds = %2, %86
  %30 = alloca %"class.std::_Deque_base"*, align 8
  %31 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %30, align 8
  store i32* %1, i32** %31, align 8
  %32 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %30, align 8
  %33 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33 to %"class.std::allocator.10"*
  %35 = load i32*, i32** %31, align 8
  %36 = load i32, i32* @x.648
  %37 = load i32, i32* @y.649
  %38 = add i32 %36, -1186168416
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1186168416
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %86

; <label>:50:                                     ; preds = %29
  %51 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %52 unwind label %83

; <label>:52:                                     ; preds = %50
  %53 = load i32, i32* @x.648
  %54 = load i32, i32* @y.649
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %93

; <label>:66:                                     ; preds = %52, %93
  %67 = load i32, i32* @x.648
  %68 = load i32, i32* @y.649
  %69 = add i32 %67, 504292559
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 504292559
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %93

; <label>:81:                                     ; preds = %66
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.10"* dereferenceable(1) %34, i32* %35, i64 %51)
          to label %82 unwind label %83

; <label>:82:                                     ; preds = %81
  ret void

; <label>:83:                                     ; preds = %81, %50
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  call void @__clang_call_terminate(i8* %85) #8
  unreachable

; <label>:86:                                     ; preds = %29, %2
  %87 = alloca %"class.std::_Deque_base"*, align 8
  %88 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %87, align 8
  store i32* %1, i32** %88, align 8
  %89 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %87, align 8
  %90 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %89, i32 0, i32 0
  %91 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %90 to %"class.std::allocator.10"*
  %92 = load i32*, i32** %88, align 8
  br label %29

; <label>:93:                                     ; preds = %66, %52
  br label %66
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.27"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.27"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %4, align 8
  %8 = bitcast %"class.std::allocator.27"* %7 to %"class.__gnu_cxx::new_allocator.28"*
  %9 = load i32**, i32*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.28"* %8, i32** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.28"*, i32**, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  %8 = load i32**, i32*** %5, align 8
  %9 = bitcast i32** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.654
  %2 = load i32, i32* @y.655
  %3 = sub i32 0, 1
  %4 = add i32 %1, %3
  %5 = sub i32 %1, 1
  %6 = mul i32 %1, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %2, 10
  %10 = xor i1 %8, true
  %11 = xor i1 %9, true
  %12 = xor i1 true, true
  %13 = and i1 %10, true
  %14 = and i1 %8, %12
  %15 = and i1 %11, true
  %16 = and i1 %9, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 true, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %8, %9
  br i1 %24, label %26, label %88

; <label>:26:                                     ; preds = %0, %88
  %27 = load i32, i32* @x.654
  %28 = load i32, i32* @y.655
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %88

; <label>:52:                                     ; preds = %26
  %53 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %54 unwind label %85

; <label>:54:                                     ; preds = %52
  %55 = load i32, i32* @x.654
  %56 = load i32, i32* @y.655
  %57 = add i32 %55, -1067360081
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -1067360081
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %89

; <label>:69:                                     ; preds = %54, %89
  %70 = load i32, i32* @x.654
  %71 = load i32, i32* @y.655
  %72 = sub i32 %70, 2055089681
  %73 = sub i32 %72, 1
  %74 = add i32 %73, 2055089681
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %89

; <label>:84:                                     ; preds = %69
  ret i64 %53

; <label>:85:                                     ; preds = %52
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  call void @__clang_call_terminate(i8* %87) #8
  unreachable

; <label>:88:                                     ; preds = %26, %0
  br label %26

; <label>:89:                                     ; preds = %69, %54
  br label %69
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to %"class.std::_Deque_base"*
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  %9 = bitcast %"class.std::deque"* %8 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %6, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %4, align 8
  %7 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %8) #3
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %7, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::_Deque_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.662
  %6 = load i32, i32* @y.663
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -723510132, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -723510132, label %18
    i32 766876966, label %38
    i32 -867880535, label %56
    i32 1279003043, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 766876966, i32 1279003043
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %39, align 8
  %40 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %39, align 8
  store %"class.std::_Deque_base"* %40, %"class.std::_Deque_base"** %2
  %41 = load i32, i32* @x.662
  %42 = load i32, i32* @y.663
  %43 = add i32 %41, 1019985521
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1019985521
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -867880535, i32 1279003043
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2
  ret %"class.std::_Deque_base"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %59, align 8
  %60 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %59, align 8
  store i32 766876966, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #3
  %12 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1) %11) #3
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9, %"class.std::allocator.10"* dereferenceable(1) %12) #3
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %76

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.664
  %15 = load i32, i32* @y.665
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %127

; <label>:39:                                     ; preds = %13, %127
  %40 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %41 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 0
  %43 = load i32**, i32*** %42, align 8
  %44 = icmp ne i32** %43, null
  %45 = load i32, i32* @x.664
  %46 = load i32, i32* @y.665
  %47 = add i32 %45, -860148382
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -860148382
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %127

; <label>:71:                                     ; preds = %39
  br i1 %44, label %72, label %80

; <label>:72:                                     ; preds = %71
  %73 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %74 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %75 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %74, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %73, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %75) #3
  br label %80

; <label>:76:                                     ; preds = %2
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %6, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  br label %122

; <label>:80:                                     ; preds = %72, %71
  %81 = load i32, i32* @x.664
  %82 = load i32, i32* @y.665
  %83 = add i32 %81, 1414048988
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, 1414048988
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %133

; <label>:95:                                     ; preds = %80, %133
  %96 = load i32, i32* @x.664
  %97 = load i32, i32* @y.665
  %98 = sub i32 0, 1
  %99 = add i32 %96, %98
  %100 = sub i32 %96, 1
  %101 = mul i32 %96, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %97, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %133

; <label>:121:                                    ; preds = %95
  ret void

; <label>:122:                                    ; preds = %76
  %123 = load i8*, i8** %6, align 8
  %124 = load i32, i32* %7, align 4
  %125 = insertvalue { i8*, i32 } undef, i8* %123, 0
  %126 = insertvalue { i8*, i32 } %125, i32 %124, 1
  resume { i8*, i32 } %126

; <label>:127:                                    ; preds = %39, %13
  %128 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %129 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %128, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %129, i32 0, i32 0
  %131 = load i32**, i32*** %130, align 8
  %132 = icmp ne i32** %131, null
  br label %39

; <label>:133:                                    ; preds = %95, %80
  br label %95
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.668
  %6 = load i32, i32* @y.669
  %7 = sub i32 %5, 1254698314
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1254698314
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 355656095, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 355656095, label %19
    i32 -1824004627, label %27
    i32 -309104451, label %65
    i32 -678479428, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1824004627, i32 -678479428
  store i32 %26, i32* %15
  br label %77

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %29 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %28, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %29, align 8
  %30 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30 to %"class.std::allocator.10"*
  %32 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %29, align 8
  %33 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1) %32) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"* %31, %"class.std::allocator.10"* dereferenceable(1) %33) #3
  %34 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 0
  store i32** null, i32*** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 1
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %36) #3
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %37) #3
  %38 = load i32, i32* @x.668
  %39 = load i32, i32* @y.669
  %40 = sub i32 %38, -1971211384
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1971211384
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -309104451, i32 -678479428
  store i32 %64, i32* %15
  br label %77

; <label>:65:                                     ; preds = %16
  ret void

; <label>:66:                                     ; preds = %16
  %67 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %68 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %67, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %68, align 8
  %69 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %67, align 8
  %70 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69 to %"class.std::allocator.10"*
  %71 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %68, align 8
  %72 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1) %71) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"* %70, %"class.std::allocator.10"* dereferenceable(1) %72) #3
  %73 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 0
  store i32** null, i32*** %73, align 8
  %74 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 1
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %75) #3
  %76 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %76) #3
  store i32 -1824004627, i32* %15
  br label %77

; <label>:77:                                     ; preds = %66, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %10 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  %13 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %12, i32*** dereferenceable(8) %14) #3
  %15 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  %16 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %17) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.672
  %6 = load i32, i32* @y.673
  %7 = sub i32 %5, -318727474
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -318727474
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1050795487, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %97
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1050795487, label %19
    i32 1035017212, label %39
    i32 10447015, label %81
    i32 -1767644638, label %82
  ]

; <label>:18:                                     ; preds = %16
  br label %97

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1035017212, i32 -1767644638
  store i32 %38, i32* %15
  br label %97

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  %41 = alloca %"struct.std::_Deque_iterator"*, align 8
  %42 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %41, align 8
  %43 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %44 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %43) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %42, %"struct.std::_Deque_iterator"* dereferenceable(32) %44) #3
  %45 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %46 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %45) #3
  %47 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %48 = bitcast %"struct.std::_Deque_iterator"* %47 to i8*
  %49 = bitcast %"struct.std::_Deque_iterator"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 32, i32 8, i1 false)
  %50 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %42) #3
  %51 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %52 = bitcast %"struct.std::_Deque_iterator"* %51 to i8*
  %53 = bitcast %"struct.std::_Deque_iterator"* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 32, i32 8, i1 false)
  %54 = load i32, i32* @x.672
  %55 = load i32, i32* @y.673
  %56 = add i32 %54, -862070273
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -862070273
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 10447015, i32 -1767644638
  store i32 %80, i32* %15
  br label %97

; <label>:81:                                     ; preds = %16
  ret void

; <label>:82:                                     ; preds = %16
  %83 = alloca %"struct.std::_Deque_iterator"*, align 8
  %84 = alloca %"struct.std::_Deque_iterator"*, align 8
  %85 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %83, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %84, align 8
  %86 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %83, align 8
  %87 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %86) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %85, %"struct.std::_Deque_iterator"* dereferenceable(32) %87) #3
  %88 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %84, align 8
  %89 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %88) #3
  %90 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %83, align 8
  %91 = bitcast %"struct.std::_Deque_iterator"* %90 to i8*
  %92 = bitcast %"struct.std::_Deque_iterator"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 32, i32 8, i1 false)
  %93 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %85) #3
  %94 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %84, align 8
  %95 = bitcast %"struct.std::_Deque_iterator"* %94 to i8*
  %96 = bitcast %"struct.std::_Deque_iterator"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 32, i32 8, i1 false)
  store i32 1035017212, i32* %15
  br label %97

; <label>:97:                                     ; preds = %82, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8), i32*** dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.674
  %6 = load i32, i32* @y.675
  %7 = add i32 %5, -795276202
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -795276202
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1585125404, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1585125404, label %19
    i32 -1115512890, label %27
    i32 785153270, label %55
    i32 1160820665, label %56
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1115512890, i32 1160820665
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca i32***, align 8
  %29 = alloca i32***, align 8
  %30 = alloca i32**, align 8
  store i32*** %0, i32**** %28, align 8
  store i32*** %1, i32**** %29, align 8
  %31 = load i32***, i32**** %28, align 8
  %32 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %31) #3
  %33 = load i32**, i32*** %32, align 8
  store i32** %33, i32*** %30, align 8
  %34 = load i32***, i32**** %29, align 8
  %35 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %34) #3
  %36 = load i32**, i32*** %35, align 8
  %37 = load i32***, i32**** %28, align 8
  store i32** %36, i32*** %37, align 8
  %38 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %30) #3
  %39 = load i32**, i32*** %38, align 8
  %40 = load i32***, i32**** %29, align 8
  store i32** %39, i32*** %40, align 8
  %41 = load i32, i32* @x.674
  %42 = load i32, i32* @y.675
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 785153270, i32 1160820665
  store i32 %54, i32* %15
  br label %70

; <label>:55:                                     ; preds = %16
  ret void

; <label>:56:                                     ; preds = %16
  %57 = alloca i32***, align 8
  %58 = alloca i32***, align 8
  %59 = alloca i32**, align 8
  store i32*** %0, i32**** %57, align 8
  store i32*** %1, i32**** %58, align 8
  %60 = load i32***, i32**** %57, align 8
  %61 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %60) #3
  %62 = load i32**, i32*** %61, align 8
  store i32** %62, i32*** %59, align 8
  %63 = load i32***, i32**** %58, align 8
  %64 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %63) #3
  %65 = load i32**, i32*** %64, align 8
  %66 = load i32***, i32**** %57, align 8
  store i32** %65, i32*** %66, align 8
  %67 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %59) #3
  %68 = load i32**, i32*** %67, align 8
  %69 = load i32***, i32**** %58, align 8
  store i32** %68, i32*** %69, align 8
  store i32 -1115512890, i32* %15
  br label %70

; <label>:70:                                     ; preds = %56, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #3
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  %12 = load i64*, i64** %3, align 8
  store i64 %11, i64* %12, align 8
  %13 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %5) #3
  %14 = load i64, i64* %13, align 8
  %15 = load i64*, i64** %4, align 8
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.678
  %6 = load i32, i32* @y.679
  %7 = sub i32 %5, 1320619328
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1320619328
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1311488371, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1311488371, label %19
    i32 2067554137, label %27
    i32 188223478, label %45
    i32 -1864827563, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2067554137, i32 -1864827563
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %28, align 8
  %29 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  store %"struct.std::_Deque_iterator"* %29, %"struct.std::_Deque_iterator"** %2
  %30 = load i32, i32* @x.678
  %31 = load i32, i32* @y.679
  %32 = add i32 %30, -1135306267
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1135306267
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 188223478, i32 -1864827563
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2
  ret %"struct.std::_Deque_iterator"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %48, align 8
  %49 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %48, align 8
  store i32 2067554137, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.680
  %6 = load i32, i32* @y.681
  %7 = add i32 %5, -505109850
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -505109850
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1106335205, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %107
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1106335205, label %19
    i32 -634174316, label %39
    i32 997470944, label %86
    i32 361177218, label %87
  ]

; <label>:18:                                     ; preds = %16
  br label %107

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -634174316, i32 361177218
  store i32 %38, i32* %15
  br label %107

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  %41 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %41, align 8
  %42 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  store i32* %46, i32** %43, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 1
  %48 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %48, i32 0, i32 1
  %50 = load i32*, i32** %49, align 8
  store i32* %50, i32** %47, align 8
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 2
  %52 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %53 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %52, i32 0, i32 2
  %54 = load i32*, i32** %53, align 8
  store i32* %54, i32** %51, align 8
  %55 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 3
  %56 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %57 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %56, i32 0, i32 3
  %58 = load i32**, i32*** %57, align 8
  store i32** %58, i32*** %55, align 8
  %59 = load i32, i32* @x.680
  %60 = load i32, i32* @y.681
  %61 = add i32 %59, 1968102661
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 1968102661
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 997470944, i32 361177218
  store i32 %85, i32* %15
  br label %107

; <label>:86:                                     ; preds = %16
  ret void

; <label>:87:                                     ; preds = %16
  %88 = alloca %"struct.std::_Deque_iterator"*, align 8
  %89 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %88, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %89, align 8
  %90 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %88, align 8
  %91 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %90, i32 0, i32 0
  %92 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %89, align 8
  %93 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %92, i32 0, i32 0
  %94 = load i32*, i32** %93, align 8
  store i32* %94, i32** %91, align 8
  %95 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %90, i32 0, i32 1
  %96 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %89, align 8
  %97 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %96, i32 0, i32 1
  %98 = load i32*, i32** %97, align 8
  store i32* %98, i32** %95, align 8
  %99 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %90, i32 0, i32 2
  %100 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %89, align 8
  %101 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %100, i32 0, i32 2
  %102 = load i32*, i32** %101, align 8
  store i32* %102, i32** %99, align 8
  %103 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %90, i32 0, i32 3
  %104 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %89, align 8
  %105 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %104, i32 0, i32 3
  %106 = load i32**, i32*** %105, align 8
  store i32** %106, i32*** %103, align 8
  store i32 -634174316, i32* %15
  br label %107

; <label>:107:                                    ; preds = %87, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8)) #5 comdat {
  %2 = alloca i32***
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.682
  %6 = load i32, i32* @y.683
  %7 = sub i32 %5, -1659205363
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1659205363
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1321228496, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1321228496, label %19
    i32 242883636, label %39
    i32 471960452, label %57
    i32 572142185, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 242883636, i32 572142185
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca i32***, align 8
  store i32*** %0, i32**** %40, align 8
  %41 = load i32***, i32**** %40, align 8
  store i32*** %41, i32**** %2
  %42 = load i32, i32* @x.682
  %43 = load i32, i32* @y.683
  %44 = add i32 %42, 60065646
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 60065646
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 471960452, i32 572142185
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32***, i32**** %2
  ret i32*** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i32***, align 8
  store i32*** %0, i32**** %60, align 8
  %61 = load i32***, i32**** %60, align 8
  store i32 242883636, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.684
  %6 = load i32, i32* @y.685
  %7 = sub i32 %5, -967534908
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -967534908
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1290105622, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1290105622, label %19
    i32 -576679568, label %27
    i32 -1306740405, label %45
    i32 1342495379, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -576679568, i32 1342495379
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.684
  %31 = load i32, i32* @y.685
  %32 = sub i32 %30, 756135467
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 756135467
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1306740405, i32 1342495379
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile i64*, i64** %2
  ret i64* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca i64*, align 8
  store i64* %0, i64** %48, align 8
  %49 = load i64*, i64** %48, align 8
  store i32 -576679568, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.10"* dereferenceable(1)) #5 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.686
  %8 = load i32, i32* @y.687
  %9 = sub i32 %7, -1559348665
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1559348665
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -893221341, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %65
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -893221341, label %21
    i32 -940986167, label %29
    i32 2056285741, label %60
    i32 1127942561, label %61
  ]

; <label>:20:                                     ; preds = %18
  br label %65

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -940986167, i32 1127942561
  store i32 %28, i32* %17
  br label %65

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::deque"*, align 8
  %31 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %30, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %31, align 8
  %32 = load %"class.std::deque"*, %"class.std::deque"** %30, align 8
  %33 = load i32, i32* @x.686
  %34 = load i32, i32* @y.687
  %35 = add i32 %33, 2077545689
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 2077545689
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 2056285741, i32 1127942561
  store i32 %59, i32* %17
  br label %65

; <label>:60:                                     ; preds = %18
  ret void

; <label>:61:                                     ; preds = %18
  %62 = alloca %"class.std::deque"*, align 8
  %63 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %62, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %63, align 8
  %64 = load %"class.std::deque"*, %"class.std::deque"** %62, align 8
  store i32 -940986167, i32* %17
  br label %65

; <label>:65:                                     ; preds = %61, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.690
  %6 = load i32, i32* @y.691
  %7 = sub i32 %5, 1726503540
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1726503540
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1644204834, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1644204834, label %19
    i32 -239982732, label %27
    i32 -1151834249, label %60
    i32 162532724, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -239982732, i32 162532724
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %28, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #3
  %33 = load i32, i32* @x.690
  %34 = load i32, i32* @y.691
  %35 = sub i32 %33, -1073357893
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1073357893
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1151834249, i32 162532724
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %62, align 8
  %63 = load %"class.std::deque"*, %"class.std::deque"** %62, align 8
  %64 = bitcast %"class.std::deque"* %63 to %"class.std::_Deque_base"*
  %65 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %65, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %66) #3
  store i32 -239982732, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %5, %"class.std::_Deque_base"** %3
  %6 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 0
  %9 = load i32**, i32*** %8, align 8
  store i32** %9, i32*** %2
  %10 = alloca i32
  store i32 -1417787089, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %96
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -1417787089, label %14
    i32 1296780765, label %18
    i32 500460800, label %34
    i32 -1408264798, label %70
    i32 581319307, label %71
    i32 1609476111, label %74
  ]

; <label>:13:                                     ; preds = %11
  br label %96

; <label>:14:                                     ; preds = %11
  %15 = load volatile i32**, i32*** %2
  %16 = icmp ne i32** %15, null
  %17 = select i1 %16, i32 1296780765, i32 581319307
  store i32 %17, i32* %10
  br label %96

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.692
  %20 = load i32, i32* @y.693
  %21 = sub i32 %19, 272004063
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 272004063
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 500460800, i32 1609476111
  store i32 %33, i32* %10
  br label %96

; <label>:34:                                     ; preds = %11
  %35 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %36, i32 0, i32 2
  %38 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %37, i32 0, i32 3
  %39 = load i32**, i32*** %38, align 8
  %40 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %41 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 3
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 3
  %44 = load i32**, i32*** %43, align 8
  %45 = getelementptr inbounds i32*, i32** %44, i64 1
  %46 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %46, i32** %39, i32** %45) #3
  %47 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %48 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %48, i32 0, i32 0
  %50 = load i32**, i32*** %49, align 8
  %51 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %55, i32** %50, i64 %54) #3
  %56 = load i32, i32* @x.692
  %57 = load i32, i32* @y.693
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -1408264798, i32 1609476111
  store i32 %69, i32* %10
  br label %96

; <label>:70:                                     ; preds = %11
  store i32 581319307, i32* %10
  br label %96

; <label>:71:                                     ; preds = %11
  %72 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %73 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %72, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %73) #3
  ret void

; <label>:74:                                     ; preds = %11
  %75 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %76 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %76, i32 0, i32 2
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %77, i32 0, i32 3
  %79 = load i32**, i32*** %78, align 8
  %80 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %81 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %81, i32 0, i32 3
  %83 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %82, i32 0, i32 3
  %84 = load i32**, i32*** %83, align 8
  %85 = getelementptr inbounds i32*, i32** %84, i64 1
  %86 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %86, i32** %79, i32** %85) #3
  %87 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %88 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %88, i32 0, i32 0
  %90 = load i32**, i32*** %89, align 8
  %91 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %92 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %92, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %95, i32** %90, i64 %94) #3
  store i32 500460800, i32* %10
  br label %96

; <label>:96:                                     ; preds = %74, %70, %34, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca i32**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.694
  %9 = load i32, i32* @y.695
  %10 = sub i32 %8, -1901845050
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1901845050
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 485576403, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %108
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 485576403, label %22
    i32 -59253818, label %30
    i32 92255977, label %64
    i32 -624684775, label %67
    i32 1174471669, label %87
    i32 758122374, label %91
    i32 809801417, label %92
  ]

; <label>:21:                                     ; preds = %19
  br label %108

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -59253818, i32 809801417
  store i32 %29, i32* %18
  br label %108

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::deque"*, align 8
  %32 = alloca i32*, align 8
  store i32** %32, i32*** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %31, align 8
  %33 = load volatile i32**, i32*** %5
  store i32* %1, i32** %33, align 8
  %34 = load %"class.std::deque"*, %"class.std::deque"** %31, align 8
  store %"class.std::deque"* %34, %"class.std::deque"** %4
  %35 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %36 = bitcast %"class.std::deque"* %35 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %42 = bitcast %"class.std::deque"* %41 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 3
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 2
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 -1
  %48 = icmp ne i32* %40, %47
  store i1 %48, i1* %3
  %49 = load i32, i32* @x.694
  %50 = load i32, i32* @y.695
  %51 = add i32 %49, 1857625577
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1857625577
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 92255977, i32 809801417
  store i32 %63, i32* %18
  br label %108

; <label>:64:                                     ; preds = %19
  %65 = load volatile i1, i1* %3
  %66 = select i1 %65, i32 -624684775, i32 1174471669
  store i32 %66, i32* %18
  br label %108

; <label>:67:                                     ; preds = %19
  %68 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %69 = bitcast %"class.std::deque"* %68 to %"class.std::_Deque_base"*
  %70 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %70 to %"class.std::allocator.10"*
  %72 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %73 = bitcast %"class.std::deque"* %72 to %"class.std::_Deque_base"*
  %74 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74, i32 0, i32 3
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = load volatile i32**, i32*** %5
  %79 = load i32*, i32** %78, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %71, i32* %77, i32* dereferenceable(4) %79)
  %80 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %81 = bitcast %"class.std::deque"* %80 to %"class.std::_Deque_base"*
  %82 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %82, i32 0, i32 3
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %83, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = getelementptr inbounds i32, i32* %85, i32 1
  store i32* %86, i32** %84, align 8
  store i32 758122374, i32* %18
  br label %108

; <label>:87:                                     ; preds = %19
  %88 = load volatile i32**, i32*** %5
  %89 = load i32*, i32** %88, align 8
  %90 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"* %90, i32* dereferenceable(4) %89)
  store i32 758122374, i32* %18
  br label %108

; <label>:91:                                     ; preds = %19
  ret void

; <label>:92:                                     ; preds = %19
  %93 = alloca %"class.std::deque"*, align 8
  %94 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %93, align 8
  store i32* %1, i32** %94, align 8
  %95 = load %"class.std::deque"*, %"class.std::deque"** %93, align 8
  %96 = bitcast %"class.std::deque"* %95 to %"class.std::_Deque_base"*
  %97 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %96, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %97, i32 0, i32 3
  %99 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %98, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = bitcast %"class.std::deque"* %95 to %"class.std::_Deque_base"*
  %102 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %102, i32 0, i32 3
  %104 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %103, i32 0, i32 2
  %105 = load i32*, i32** %104, align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 -1
  %107 = icmp ne i32* %100, %106
  store i32 -59253818, i32* %18
  br label %108

; <label>:108:                                    ; preds = %92, %87, %67, %64, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load i32**, i32*** %13, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 1
  store i32* %9, i32** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17 to %"class.std::allocator.10"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %4, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %24) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %18, i32* %23, i32* dereferenceable(4) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load i32**, i32*** %33, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %29, i32** %35) #3
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  store i32* %40, i32** %44, align 8
  br label %65

; <label>:45:                                     ; preds = %2
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %5, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %6, align 4
  br label %49

; <label>:49:                                     ; preds = %45
  %50 = load i8*, i8** %5, align 8
  %51 = call i8* @__cxa_begin_catch(i8* %50) #3
  %52 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %53 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %54, i32 0, i32 3
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 3
  %57 = load i32**, i32*** %56, align 8
  %58 = getelementptr inbounds i32*, i32** %57, i64 1
  %59 = load i32*, i32** %58, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %52, i32* %59) #3
  invoke void @__cxa_rethrow() #12
          to label %115 unwind label %60

; <label>:60:                                     ; preds = %49
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %5, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %6, align 4
  invoke void @__cxa_end_catch()
          to label %64 unwind label %71

; <label>:64:                                     ; preds = %60
  br label %66

; <label>:65:                                     ; preds = %26
  ret void

; <label>:66:                                     ; preds = %64
  %67 = load i8*, i8** %5, align 8
  %68 = load i32, i32* %6, align 4
  %69 = insertvalue { i8*, i32 } undef, i8* %67, 0
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1
  resume { i8*, i32 } %70

; <label>:71:                                     ; preds = %60
  %72 = load i32, i32* @x.698
  %73 = load i32, i32* @y.699
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %116

; <label>:85:                                     ; preds = %71, %116
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  call void @__clang_call_terminate(i8* %87) #8
  %88 = load i32, i32* @x.698
  %89 = load i32, i32* @y.699
  %90 = add i32 %88, 1011386406
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, 1011386406
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %116

; <label>:114:                                    ; preds = %85
  unreachable

; <label>:115:                                    ; preds = %49
  unreachable

; <label>:116:                                    ; preds = %85, %71
  %117 = landingpad { i8*, i32 }
          catch i8* null
  %118 = extractvalue { i8*, i32 } %117, 0
  call void @__clang_call_terminate(i8* %118) #8
  br label %85
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"*, i32*, i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load i64, i64* %7, align 8
  %10 = sub i64 0, %9
  %11 = sub i64 0, 1
  %12 = add i64 %10, %11
  %13 = sub i64 0, %12
  %14 = add i64 %9, 1
  store i64 %13, i64* %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %21 = bitcast %"class.std::deque"* %20 to %"class.std::_Deque_base"*
  %22 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %22, i32 0, i32 3
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %23, i32 0, i32 3
  %25 = load i32**, i32*** %24, align 8
  %26 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %27 = bitcast %"class.std::deque"* %26 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 0
  %30 = load i32**, i32*** %29, align 8
  %31 = ptrtoint i32** %25 to i64
  %32 = ptrtoint i32** %30 to i64
  %33 = sub i64 0, %32
  %34 = add i64 %31, %33
  %35 = sub i64 %31, %32
  %36 = sdiv exact i64 %34, 8
  %37 = add i64 %19, -7865942988290221333
  %38 = sub i64 %37, %36
  %39 = sub i64 %38, -7865942988290221333
  %40 = sub i64 %19, %36
  store i64 %39, i64* %3
  %41 = alloca i32
  store i32 528463640, i32* %41
  br label %42

; <label>:42:                                     ; preds = %2, %54
  %43 = load i32, i32* %41
  switch i32 %43, label %44 [
    i32 528463640, label %45
    i32 -82687297, label %50
    i32 -1914010015, label %53
  ]

; <label>:44:                                     ; preds = %42
  br label %54

; <label>:45:                                     ; preds = %42
  %46 = load volatile i64, i64* %4
  %47 = load volatile i64, i64* %3
  %48 = icmp ugt i64 %46, %47
  %49 = select i1 %48, i32 -82687297, i32 -1914010015
  store i32 %49, i32* %41
  br label %54

; <label>:50:                                     ; preds = %42
  %51 = load i64, i64* %7, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %52, i64 %51, i1 zeroext false)
  store i32 -1914010015, i32* %41
  br label %54

; <label>:53:                                     ; preds = %42
  ret void

; <label>:54:                                     ; preds = %50, %45, %44
  br label %42
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**
  %6 = alloca i1
  %7 = alloca i32**
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca %"class.std::deque"*
  %11 = alloca %"class.std::deque"*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32**, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %11, align 8
  store i64 %1, i64* %12, align 8
  %19 = zext i1 %2 to i8
  store i8 %19, i8* %13, align 1
  %20 = load %"class.std::deque"*, %"class.std::deque"** %11, align 8
  store %"class.std::deque"* %20, %"class.std::deque"** %10
  %21 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %22 = bitcast %"class.std::deque"* %21 to %"class.std::_Deque_base"*
  %23 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %23, i32 0, i32 3
  %25 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %24, i32 0, i32 3
  %26 = load i32**, i32*** %25, align 8
  %27 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %28 = bitcast %"class.std::deque"* %27 to %"class.std::_Deque_base"*
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 2
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %30, i32 0, i32 3
  %32 = load i32**, i32*** %31, align 8
  %33 = ptrtoint i32** %26 to i64
  %34 = ptrtoint i32** %32 to i64
  %35 = add i64 %33, -5167722104460012464
  %36 = sub i64 %35, %34
  %37 = sub i64 %36, -5167722104460012464
  %38 = sub i64 %33, %34
  %39 = sdiv exact i64 %37, 8
  %40 = add i64 %39, -6873274006146793835
  %41 = add i64 %40, 1
  %42 = sub i64 %41, -6873274006146793835
  %43 = add nsw i64 %39, 1
  store i64 %42, i64* %14, align 8
  %44 = load i64, i64* %14, align 8
  %45 = load i64, i64* %12, align 8
  %46 = add i64 %44, 7975989068446454707
  %47 = add i64 %46, %45
  %48 = sub i64 %47, 7975989068446454707
  %49 = add i64 %44, %45
  store i64 %48, i64* %15, align 8
  %50 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %51 = bitcast %"class.std::deque"* %50 to %"class.std::_Deque_base"*
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %9
  %55 = load i64, i64* %15, align 8
  %56 = mul i64 2, %55
  store i64 %56, i64* %8
  %57 = alloca i32
  store i32 -932002845, i32* %57
  %58 = alloca i64
  %59 = alloca i64
  br label %60

; <label>:60:                                     ; preds = %3, %474
  %61 = load i32, i32* %57
  switch i32 %61, label %62 [
    i32 -932002845, label %63
    i32 611603752, label %68
    i32 597387030, label %96
    i32 -631842896, label %130
    i32 1768937467, label %133
    i32 1393142859, label %135
    i32 -1551017637, label %136
    i32 1727641428, label %149
    i32 603325004, label %165
    i32 1370036795, label %183
    i32 1983565748, label %199
    i32 -1932108756, label %226
    i32 1373553617, label %227
    i32 -349745794, label %262
    i32 -1984573767, label %264
    i32 694302399, label %280
    i32 355110572, label %296
    i32 798971927, label %297
    i32 1748420795, label %314
    i32 -382070848, label %370
    i32 -913138143, label %371
    i32 -1154150286, label %385
    i32 1600208574, label %431
    i32 194104027, label %432
    i32 -797316530, label %433
  ]

; <label>:62:                                     ; preds = %60
  br label %474

; <label>:63:                                     ; preds = %60
  %64 = load volatile i64, i64* %9
  %65 = load volatile i64, i64* %8
  %66 = icmp ugt i64 %64, %65
  %67 = select i1 %66, i32 611603752, i32 1373553617
  store i32 %67, i32* %57
  br label %474

; <label>:68:                                     ; preds = %60
  %69 = load i32, i32* @x.706
  %70 = load i32, i32* @y.707
  %71 = add i32 %69, -453857166
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -453857166
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 597387030, i32 -1154150286
  store i32 %95, i32* %57
  br label %474

; <label>:96:                                     ; preds = %60
  %97 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %98 = bitcast %"class.std::deque"* %97 to %"class.std::_Deque_base"*
  %99 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %99, i32 0, i32 0
  %101 = load i32**, i32*** %100, align 8
  %102 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %103 = bitcast %"class.std::deque"* %102 to %"class.std::_Deque_base"*
  %104 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %104, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = load i64, i64* %15, align 8
  %108 = sub i64 0, %107
  %109 = add i64 %106, %108
  %110 = sub i64 %106, %107
  %111 = udiv i64 %109, 2
  %112 = getelementptr inbounds i32*, i32** %101, i64 %111
  store i32** %112, i32*** %7
  %113 = load i8, i8* %13, align 1
  %114 = trunc i8 %113 to i1
  store i1 %114, i1* %6
  %115 = load i32, i32* @x.706
  %116 = load i32, i32* @y.707
  %117 = sub i32 %115, -1827838981
  %118 = sub i32 %117, 1
  %119 = add i32 %118, -1827838981
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  %129 = select i1 %127, i32 -631842896, i32 -1154150286
  store i32 %129, i32* %57
  br label %474

; <label>:130:                                    ; preds = %60
  %131 = load volatile i1, i1* %6
  %132 = select i1 %131, i32 1768937467, i32 1393142859
  store i32 %132, i32* %57
  br label %474

; <label>:133:                                    ; preds = %60
  %134 = load i64, i64* %12, align 8
  store i32 -1551017637, i32* %57
  store i64 %134, i64* %58
  br label %474

; <label>:135:                                    ; preds = %60
  store i32 -1551017637, i32* %57
  store i64 0, i64* %58
  br label %474

; <label>:136:                                    ; preds = %60
  %137 = load i64, i64* %58
  %138 = load volatile i32**, i32*** %7
  %139 = getelementptr inbounds i32*, i32** %138, i64 %137
  store i32** %139, i32*** %16, align 8
  %140 = load i32**, i32*** %16, align 8
  %141 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %142 = bitcast %"class.std::deque"* %141 to %"class.std::_Deque_base"*
  %143 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %142, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %143, i32 0, i32 2
  %145 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %144, i32 0, i32 3
  %146 = load i32**, i32*** %145, align 8
  %147 = icmp ult i32** %140, %146
  %148 = select i1 %147, i32 1727641428, i32 603325004
  store i32 %148, i32* %57
  br label %474

; <label>:149:                                    ; preds = %60
  %150 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %151 = bitcast %"class.std::deque"* %150 to %"class.std::_Deque_base"*
  %152 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %151, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %152, i32 0, i32 2
  %154 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %153, i32 0, i32 3
  %155 = load i32**, i32*** %154, align 8
  %156 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %157 = bitcast %"class.std::deque"* %156 to %"class.std::_Deque_base"*
  %158 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %157, i32 0, i32 0
  %159 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %158, i32 0, i32 3
  %160 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %159, i32 0, i32 3
  %161 = load i32**, i32*** %160, align 8
  %162 = getelementptr inbounds i32*, i32** %161, i64 1
  %163 = load i32**, i32*** %16, align 8
  %164 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %155, i32** %162, i32** %163)
  store i32 1370036795, i32* %57
  br label %474

; <label>:165:                                    ; preds = %60
  %166 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %167 = bitcast %"class.std::deque"* %166 to %"class.std::_Deque_base"*
  %168 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %167, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %168, i32 0, i32 2
  %170 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %169, i32 0, i32 3
  %171 = load i32**, i32*** %170, align 8
  %172 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %173 = bitcast %"class.std::deque"* %172 to %"class.std::_Deque_base"*
  %174 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %173, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %174, i32 0, i32 3
  %176 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %175, i32 0, i32 3
  %177 = load i32**, i32*** %176, align 8
  %178 = getelementptr inbounds i32*, i32** %177, i64 1
  %179 = load i32**, i32*** %16, align 8
  %180 = load i64, i64* %14, align 8
  %181 = getelementptr inbounds i32*, i32** %179, i64 %180
  %182 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %171, i32** %178, i32** %181)
  store i32 1370036795, i32* %57
  br label %474

; <label>:183:                                    ; preds = %60
  %184 = load i32, i32* @x.706
  %185 = load i32, i32* @y.707
  %186 = sub i32 %184, 508728922
  %187 = sub i32 %186, 1
  %188 = add i32 %187, 508728922
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  %198 = select i1 %196, i32 1983565748, i32 1600208574
  store i32 %198, i32* %57
  br label %474

; <label>:199:                                    ; preds = %60
  %200 = load i32, i32* @x.706
  %201 = load i32, i32* @y.707
  %202 = sub i32 0, 1
  %203 = add i32 %200, %202
  %204 = sub i32 %200, 1
  %205 = mul i32 %200, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %201, 10
  %209 = xor i1 %207, true
  %210 = xor i1 %208, true
  %211 = xor i1 true, true
  %212 = and i1 %209, true
  %213 = and i1 %207, %211
  %214 = and i1 %210, true
  %215 = and i1 %208, %211
  %216 = or i1 %212, %213
  %217 = or i1 %214, %215
  %218 = xor i1 %216, %217
  %219 = or i1 %209, %210
  %220 = xor i1 %219, true
  %221 = or i1 true, %211
  %222 = and i1 %220, %221
  %223 = or i1 %218, %222
  %224 = or i1 %207, %208
  %225 = select i1 %223, i32 -1932108756, i32 1600208574
  store i32 %225, i32* %57
  br label %474

; <label>:226:                                    ; preds = %60
  store i32 -913138143, i32* %57
  br label %474

; <label>:227:                                    ; preds = %60
  %228 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %229 = bitcast %"class.std::deque"* %228 to %"class.std::_Deque_base"*
  %230 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %229, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %230, i32 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %234 = bitcast %"class.std::deque"* %233 to %"class.std::_Deque_base"*
  %235 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %234, i32 0, i32 0
  %236 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %235, i32 0, i32 1
  %237 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %236, i64* dereferenceable(8) %12)
  %238 = load i64, i64* %237, align 8
  %239 = sub i64 %232, -4460100756819354240
  %240 = add i64 %239, %238
  %241 = add i64 %240, -4460100756819354240
  %242 = add i64 %232, %238
  %243 = sub i64 0, 2
  %244 = sub i64 %241, %243
  %245 = add i64 %241, 2
  store i64 %244, i64* %17, align 8
  %246 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %247 = bitcast %"class.std::deque"* %246 to %"class.std::_Deque_base"*
  %248 = load i64, i64* %17, align 8
  %249 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %247, i64 %248)
  store i32** %249, i32*** %18, align 8
  %250 = load i32**, i32*** %18, align 8
  %251 = load i64, i64* %17, align 8
  %252 = load i64, i64* %15, align 8
  %253 = sub i64 %251, -5472656845049962992
  %254 = sub i64 %253, %252
  %255 = add i64 %254, -5472656845049962992
  %256 = sub i64 %251, %252
  %257 = udiv i64 %255, 2
  %258 = getelementptr inbounds i32*, i32** %250, i64 %257
  store i32** %258, i32*** %5
  %259 = load i8, i8* %13, align 1
  %260 = trunc i8 %259 to i1
  %261 = select i1 %260, i32 -349745794, i32 -1984573767
  store i32 %261, i32* %57
  br label %474

; <label>:262:                                    ; preds = %60
  %263 = load i64, i64* %12, align 8
  store i32 798971927, i32* %57
  store i64 %263, i64* %59
  br label %474

; <label>:264:                                    ; preds = %60
  %265 = load i32, i32* @x.706
  %266 = load i32, i32* @y.707
  %267 = sub i32 %265, 829374816
  %268 = sub i32 %267, 1
  %269 = add i32 %268, 829374816
  %270 = sub i32 %265, 1
  %271 = mul i32 %265, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %266, 10
  %275 = and i1 %273, %274
  %276 = xor i1 %273, %274
  %277 = or i1 %275, %276
  %278 = or i1 %273, %274
  %279 = select i1 %277, i32 694302399, i32 194104027
  store i32 %279, i32* %57
  br label %474

; <label>:280:                                    ; preds = %60
  %281 = load i32, i32* @x.706
  %282 = load i32, i32* @y.707
  %283 = add i32 %281, -690244256
  %284 = sub i32 %283, 1
  %285 = sub i32 %284, -690244256
  %286 = sub i32 %281, 1
  %287 = mul i32 %281, %285
  %288 = urem i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = icmp slt i32 %282, 10
  %291 = and i1 %289, %290
  %292 = xor i1 %289, %290
  %293 = or i1 %291, %292
  %294 = or i1 %289, %290
  %295 = select i1 %293, i32 355110572, i32 194104027
  store i32 %295, i32* %57
  br label %474

; <label>:296:                                    ; preds = %60
  store i32 798971927, i32* %57
  store i64 0, i64* %59
  br label %474

; <label>:297:                                    ; preds = %60
  %298 = load i64, i64* %59
  store i64 %298, i64* %4
  %299 = load i32, i32* @x.706
  %300 = load i32, i32* @y.707
  %301 = add i32 %299, 196114634
  %302 = sub i32 %301, 1
  %303 = sub i32 %302, 196114634
  %304 = sub i32 %299, 1
  %305 = mul i32 %299, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %300, 10
  %309 = and i1 %307, %308
  %310 = xor i1 %307, %308
  %311 = or i1 %309, %310
  %312 = or i1 %307, %308
  %313 = select i1 %311, i32 1748420795, i32 -797316530
  store i32 %313, i32* %57
  br label %474

; <label>:314:                                    ; preds = %60
  %315 = load volatile i32**, i32*** %5
  %316 = load volatile i64, i64* %4
  %317 = getelementptr inbounds i32*, i32** %315, i64 %316
  store i32** %317, i32*** %16, align 8
  %318 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %319 = bitcast %"class.std::deque"* %318 to %"class.std::_Deque_base"*
  %320 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %319, i32 0, i32 0
  %321 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %320, i32 0, i32 2
  %322 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %321, i32 0, i32 3
  %323 = load i32**, i32*** %322, align 8
  %324 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %325 = bitcast %"class.std::deque"* %324 to %"class.std::_Deque_base"*
  %326 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %325, i32 0, i32 0
  %327 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %326, i32 0, i32 3
  %328 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %327, i32 0, i32 3
  %329 = load i32**, i32*** %328, align 8
  %330 = getelementptr inbounds i32*, i32** %329, i64 1
  %331 = load i32**, i32*** %16, align 8
  %332 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %323, i32** %330, i32** %331)
  %333 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %334 = bitcast %"class.std::deque"* %333 to %"class.std::_Deque_base"*
  %335 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %336 = bitcast %"class.std::deque"* %335 to %"class.std::_Deque_base"*
  %337 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %336, i32 0, i32 0
  %338 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %337, i32 0, i32 0
  %339 = load i32**, i32*** %338, align 8
  %340 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %341 = bitcast %"class.std::deque"* %340 to %"class.std::_Deque_base"*
  %342 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %341, i32 0, i32 0
  %343 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %342, i32 0, i32 1
  %344 = load i64, i64* %343, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %334, i32** %339, i64 %344) #3
  %345 = load i32**, i32*** %18, align 8
  %346 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %347 = bitcast %"class.std::deque"* %346 to %"class.std::_Deque_base"*
  %348 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %347, i32 0, i32 0
  %349 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %348, i32 0, i32 0
  store i32** %345, i32*** %349, align 8
  %350 = load i64, i64* %17, align 8
  %351 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %352 = bitcast %"class.std::deque"* %351 to %"class.std::_Deque_base"*
  %353 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %352, i32 0, i32 0
  %354 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %353, i32 0, i32 1
  store i64 %350, i64* %354, align 8
  %355 = load i32, i32* @x.706
  %356 = load i32, i32* @y.707
  %357 = add i32 %355, -1160611239
  %358 = sub i32 %357, 1
  %359 = sub i32 %358, -1160611239
  %360 = sub i32 %355, 1
  %361 = mul i32 %355, %359
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %356, 10
  %365 = and i1 %363, %364
  %366 = xor i1 %363, %364
  %367 = or i1 %365, %366
  %368 = or i1 %363, %364
  %369 = select i1 %367, i32 -382070848, i32 -797316530
  store i32 %369, i32* %57
  br label %474

; <label>:370:                                    ; preds = %60
  store i32 -913138143, i32* %57
  br label %474

; <label>:371:                                    ; preds = %60
  %372 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %373 = bitcast %"class.std::deque"* %372 to %"class.std::_Deque_base"*
  %374 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %373, i32 0, i32 0
  %375 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %374, i32 0, i32 2
  %376 = load i32**, i32*** %16, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %375, i32** %376) #3
  %377 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %378 = bitcast %"class.std::deque"* %377 to %"class.std::_Deque_base"*
  %379 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %378, i32 0, i32 0
  %380 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %379, i32 0, i32 3
  %381 = load i32**, i32*** %16, align 8
  %382 = load i64, i64* %14, align 8
  %383 = getelementptr inbounds i32*, i32** %381, i64 %382
  %384 = getelementptr inbounds i32*, i32** %383, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %380, i32** %384) #3
  ret void

; <label>:385:                                    ; preds = %60
  %386 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %387 = bitcast %"class.std::deque"* %386 to %"class.std::_Deque_base"*
  %388 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %387, i32 0, i32 0
  %389 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %388, i32 0, i32 0
  %390 = load i32**, i32*** %389, align 8
  %391 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %392 = bitcast %"class.std::deque"* %391 to %"class.std::_Deque_base"*
  %393 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %392, i32 0, i32 0
  %394 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %393, i32 0, i32 1
  %395 = load i64, i64* %394, align 8
  %396 = load i64, i64* %15, align 8
  %397 = shl i64 %395, %396
  %398 = sub i64 0, 3157326105118817749
  %399 = sub i64 %398, %395
  %400 = add i64 %399, 3157326105118817749
  %401 = sub i64 0, %395
  %402 = sub i64 0, %396
  %403 = sub i64 %400, %402
  %404 = add i64 %400, %396
  %405 = shl i64 %395, %396
  %406 = sub i64 %395, 7657509351518769081
  %407 = sub i64 %406, %396
  %408 = add i64 %407, 7657509351518769081
  %409 = sub i64 %395, %396
  %410 = mul i64 %408, %396
  %411 = shl i64 %395, %396
  %412 = sub i64 0, %396
  %413 = add i64 %395, %412
  %414 = sub i64 %395, %396
  %415 = mul i64 %413, %396
  %416 = sub i64 %395, 5212482809140419972
  %417 = sub i64 %416, %396
  %418 = add i64 %417, 5212482809140419972
  %419 = sub i64 %395, %396
  %420 = shl i64 %418, 2
  %421 = shl i64 %418, 2
  %422 = add i64 %418, 5226301816262961702
  %423 = sub i64 %422, 2
  %424 = sub i64 %423, 5226301816262961702
  %425 = sub i64 %418, 2
  %426 = mul i64 %424, 2
  %427 = udiv i64 %418, 2
  %428 = getelementptr inbounds i32*, i32** %390, i64 %427
  %429 = load i8, i8* %13, align 1
  %430 = trunc i8 %429 to i1
  store i32 597387030, i32* %57
  br label %474

; <label>:431:                                    ; preds = %60
  store i32 1983565748, i32* %57
  br label %474

; <label>:432:                                    ; preds = %60
  store i32 694302399, i32* %57
  br label %474

; <label>:433:                                    ; preds = %60
  %434 = load volatile i32**, i32*** %5
  %435 = load volatile i64, i64* %4
  %436 = getelementptr inbounds i32*, i32** %434, i64 %435
  store i32** %436, i32*** %16, align 8
  %437 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %438 = bitcast %"class.std::deque"* %437 to %"class.std::_Deque_base"*
  %439 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %438, i32 0, i32 0
  %440 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %439, i32 0, i32 2
  %441 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %440, i32 0, i32 3
  %442 = load i32**, i32*** %441, align 8
  %443 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %444 = bitcast %"class.std::deque"* %443 to %"class.std::_Deque_base"*
  %445 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %444, i32 0, i32 0
  %446 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %445, i32 0, i32 3
  %447 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %446, i32 0, i32 3
  %448 = load i32**, i32*** %447, align 8
  %449 = getelementptr inbounds i32*, i32** %448, i64 1
  %450 = load i32**, i32*** %16, align 8
  %451 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %442, i32** %449, i32** %450)
  %452 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %453 = bitcast %"class.std::deque"* %452 to %"class.std::_Deque_base"*
  %454 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %455 = bitcast %"class.std::deque"* %454 to %"class.std::_Deque_base"*
  %456 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %455, i32 0, i32 0
  %457 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %456, i32 0, i32 0
  %458 = load i32**, i32*** %457, align 8
  %459 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %460 = bitcast %"class.std::deque"* %459 to %"class.std::_Deque_base"*
  %461 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %460, i32 0, i32 0
  %462 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %461, i32 0, i32 1
  %463 = load i64, i64* %462, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %453, i32** %458, i64 %463) #3
  %464 = load i32**, i32*** %18, align 8
  %465 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %466 = bitcast %"class.std::deque"* %465 to %"class.std::_Deque_base"*
  %467 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %466, i32 0, i32 0
  %468 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %467, i32 0, i32 0
  store i32** %464, i32*** %468, align 8
  %469 = load i64, i64* %17, align 8
  %470 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %471 = bitcast %"class.std::deque"* %470 to %"class.std::_Deque_base"*
  %472 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %471, i32 0, i32 0
  %473 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %472, i32 0, i32 1
  store i64 %469, i64* %473, align 8
  store i32 1748420795, i32* %57
  br label %474

; <label>:474:                                    ; preds = %433, %432, %431, %385, %370, %314, %297, %296, %280, %264, %262, %227, %226, %199, %183, %165, %149, %136, %135, %133, %130, %96, %68, %63, %62
  br label %60
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #5 comdat {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.714
  %6 = load i32, i32* @y.715
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1953377203, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1953377203, label %18
    i32 -2082394231, label %38
    i32 -1567755264, label %57
    i32 -1581403490, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2082394231, i32 -1581403490
  store i32 %37, i32* %14
  br label %63

; <label>:38:                                     ; preds = %15
  %39 = alloca i32**, align 8
  store i32** %0, i32*** %39, align 8
  %40 = load i32**, i32*** %39, align 8
  %41 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %40)
  store i32** %41, i32*** %2
  %42 = load i32, i32* @x.714
  %43 = load i32, i32* @y.715
  %44 = add i32 %42, 789374050
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 789374050
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1567755264, i32 -1581403490
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile i32**, i32*** %2
  ret i32** %58

; <label>:59:                                     ; preds = %15
  %60 = alloca i32**, align 8
  store i32** %0, i32*** %60, align 8
  %61 = load i32**, i32*** %60, align 8
  %62 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %61)
  store i32 -2082394231, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.716
  %8 = load i32, i32* @y.717
  %9 = add i32 %7, -995963466
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -995963466
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -589943797, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -589943797, label %21
    i32 -2141773325, label %41
    i32 968307379, label %65
    i32 498796276, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -2141773325, i32 498796276
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  %45 = alloca i8, align 1
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = load i32**, i32*** %44, align 8
  %49 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %46, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.716
  %51 = load i32, i32* @y.717
  %52 = sub i32 %50, 1662507289
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1662507289
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 968307379, i32 498796276
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i32**, i32*** %4
  ret i32** %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i8, align 1
  store i32** %0, i32*** %68, align 8
  store i32** %1, i32*** %69, align 8
  store i32** %2, i32*** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i32**, i32*** %68, align 8
  %73 = load i32**, i32*** %69, align 8
  %74 = load i32**, i32*** %70, align 8
  %75 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %72, i32** %73, i32** %74)
  store i32 -2141773325, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #0 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = sub i64 %11, 4374899382822025585
  %14 = sub i64 %13, %12
  %15 = add i64 %14, 4374899382822025585
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 585290622, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 585290622, label %23
    i32 616854700, label %27
    i32 984131435, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 616854700, i32 984131435
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i32**, i32*** %7, align 8
  %29 = bitcast i32** %28 to i8*
  %30 = load i32**, i32*** %5, align 8
  %31 = bitcast i32** %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 984131435, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i32**, i32*** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %36
  ret i32** %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #5 comdat align 2 {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.726
  %8 = load i32, i32* @y.727
  %9 = add i32 %7, 1109482028
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1109482028
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -937392583, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -937392583, label %21
    i32 1493952993, label %41
    i32 1946790928, label %77
    i32 -574061524, label %79
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1493952993, i32 -574061524
  store i32 %40, i32* %17
  br label %88

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  %45 = alloca i8, align 1
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = load i32**, i32*** %44, align 8
  %49 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %46, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.726
  %51 = load i32, i32* @y.727
  %52 = add i32 %50, -1764092186
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -1764092186
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1946790928, i32 -574061524
  store i32 %76, i32* %17
  br label %88

; <label>:77:                                     ; preds = %18
  %78 = load volatile i32**, i32*** %4
  ret i32** %78

; <label>:79:                                     ; preds = %18
  %80 = alloca i32**, align 8
  %81 = alloca i32**, align 8
  %82 = alloca i32**, align 8
  %83 = alloca i8, align 1
  store i32** %0, i32*** %80, align 8
  store i32** %1, i32*** %81, align 8
  store i32** %2, i32*** %82, align 8
  store i8 1, i8* %83, align 1
  %84 = load i32**, i32*** %80, align 8
  %85 = load i32**, i32*** %81, align 8
  %86 = load i32**, i32*** %82, align 8
  %87 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %84, i32** %85, i32** %86)
  store i32 1493952993, i32* %17
  br label %88

; <label>:88:                                     ; preds = %79, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = add i64 %11, -7135197739060432826
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -7135197739060432826
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 -1546932905, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %47
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1546932905, label %23
    i32 -2005959973, label %27
    i32 -1277651154, label %39
  ]

; <label>:22:                                     ; preds = %20
  br label %47

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -2005959973, i32 -1277651154
  store i32 %26, i32* %19
  br label %47

; <label>:27:                                     ; preds = %20
  %28 = load i32**, i32*** %7, align 8
  %29 = load i64, i64* %8, align 8
  %30 = sub i64 0, %29
  %31 = add i64 0, %30
  %32 = sub i64 0, %29
  %33 = getelementptr inbounds i32*, i32** %28, i64 %31
  %34 = bitcast i32** %33 to i8*
  %35 = load i32**, i32*** %5, align 8
  %36 = bitcast i32** %35 to i8*
  %37 = load i64, i64* %8, align 8
  %38 = mul i64 8, %37
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %34, i8* %36, i64 %38, i32 8, i1 false)
  store i32 -1277651154, i32* %19
  br label %47

; <label>:39:                                     ; preds = %20
  %40 = load i32**, i32*** %7, align 8
  %41 = load i64, i64* %8, align 8
  %42 = sub i64 0, -7614736612223753978
  %43 = sub i64 %42, %41
  %44 = add i64 %43, -7614736612223753978
  %45 = sub i64 0, %41
  %46 = getelementptr inbounds i32*, i32** %40, i64 %44
  ret i32** %46

; <label>:47:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %4) #3
  %5 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.736
  %6 = load i32, i32* @y.737
  %7 = sub i32 %5, -1907210124
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1907210124
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2084251198, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2084251198, label %19
    i32 -1834794496, label %39
    i32 558048045, label %71
    i32 -1143677682, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1834794496, i32 -1143677682
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  %41 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %41, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.736
  %45 = load i32, i32* @y.737
  %46 = add i32 %44, 1458111241
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1458111241
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 558048045, i32 -1143677682
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile i32*, i32** %2
  ret i32* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %74, align 8
  %75 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  store i32 -1834794496, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 -1
  %15 = icmp ne i32* %8, %14
  br i1 %15, label %16, label %32

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %18 to %"class.std::allocator.10"*
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1) %19, i32* %24)
          to label %25 unwind label %35

; <label>:25:                                     ; preds = %16
  %26 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i32 1
  store i32* %31, i32** %29, align 8
  br label %34

; <label>:32:                                     ; preds = %1
  invoke void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"* %3)
          to label %33 unwind label %35

; <label>:33:                                     ; preds = %32
  br label %34

; <label>:34:                                     ; preds = %33, %25
  ret void

; <label>:35:                                     ; preds = %32, %16
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  call void @__clang_call_terminate(i8* %37) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.11"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.742
  %5 = load i32, i32* @y.743
  %6 = add i32 %4, 1736604005
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1736604005
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1063373039, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %122
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1063373039, label %18
    i32 -56439688, label %26
    i32 -1458043470, label %87
    i32 -1794256610, label %88
  ]

; <label>:17:                                     ; preds = %15
  br label %122

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -56439688, i32 -1794256610
  store i32 %25, i32* %14
  br label %122

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %27, align 8
  %28 = load %"class.std::deque"*, %"class.std::deque"** %27, align 8
  %29 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %30 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %29) #3
  %31 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1) %30, i32* %35)
  %36 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %37 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 2
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 1
  %41 = load i32*, i32** %40, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %36, i32* %41) #3
  %42 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 2
  %45 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 2
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 3
  %49 = load i32**, i32*** %48, align 8
  %50 = getelementptr inbounds i32*, i32** %49, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %44, i32** %50) #3
  %51 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 2
  %54 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %53, i32 0, i32 1
  %55 = load i32*, i32** %54, align 8
  %56 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %57 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %57, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %58, i32 0, i32 0
  store i32* %55, i32** %59, align 8
  %60 = load i32, i32* @x.742
  %61 = load i32, i32* @y.743
  %62 = sub i32 %60, -1609150787
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -1609150787
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -1458043470, i32 -1794256610
  store i32 %86, i32* %14
  br label %122

; <label>:87:                                     ; preds = %15
  ret void

; <label>:88:                                     ; preds = %15
  %89 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %89, align 8
  %90 = load %"class.std::deque"*, %"class.std::deque"** %89, align 8
  %91 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %92 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %91) #3
  %93 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %94 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %94, i32 0, i32 2
  %96 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %95, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1) %92, i32* %97)
  %98 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %99 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %100 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %100, i32 0, i32 2
  %102 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %101, i32 0, i32 1
  %103 = load i32*, i32** %102, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %98, i32* %103) #3
  %104 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %105 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %105, i32 0, i32 2
  %107 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %108 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %107, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %108, i32 0, i32 2
  %110 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %109, i32 0, i32 3
  %111 = load i32**, i32*** %110, align 8
  %112 = getelementptr inbounds i32*, i32** %111, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %106, i32** %112) #3
  %113 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %114 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %113, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %114, i32 0, i32 2
  %116 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %115, i32 0, i32 1
  %117 = load i32*, i32** %116, align 8
  %118 = bitcast %"class.std::deque"* %90 to %"class.std::_Deque_base"*
  %119 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %118, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %119, i32 0, i32 2
  %121 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %120, i32 0, i32 0
  store i32* %117, i32** %121, align 8
  store i32 -56439688, i32* %14
  br label %122

; <label>:122:                                    ; preds = %88, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.11"*, i32*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.744
  %6 = load i32, i32* @y.745
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -25892590, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -25892590, label %18
    i32 -642852747, label %38
    i32 1415296109, label %69
    i32 1925266972, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -642852747, i32 1925266972
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %40 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %39, align 8
  store i32* %1, i32** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %39, align 8
  %42 = load i32, i32* @x.744
  %43 = load i32, i32* @y.745
  %44 = add i32 %42, 684392715
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 684392715
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1415296109, i32 1925266972
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %72 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %71, align 8
  store i32* %1, i32** %72, align 8
  %73 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %71, align 8
  store i32 -642852747, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %class.MaxFEdge** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %class.MaxFEdge**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %class.MaxFEdge** %1, %class.MaxFEdge*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %class.MaxFEdge**, %class.MaxFEdge*** %4, align 8
  %8 = load %class.MaxFEdge*, %class.MaxFEdge** %7, align 8
  store %class.MaxFEdge* %8, %class.MaxFEdge** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %class.MaxFEdge** @_ZNK9__gnu_cxx17__normal_iteratorIP8MaxFEdgeIxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %class.MaxFEdge** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector.8"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.8"*
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"class.std::vector.8", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i32* %2, i32** %9, align 8
  %13 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  store %"class.std::vector.8"* %13, %"class.std::vector.8"** %6
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %5
  %15 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %16 = call i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.8"* %15) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 -543984674, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %141
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -543984674, label %21
    i32 1388151103, label %26
    i32 131820676, label %37
    i32 -1834901675, label %43
    i32 -441556347, label %75
    i32 2120878554, label %103
    i32 1175374075, label %128
    i32 -685920042, label %129
    i32 1171141723, label %130
    i32 -866719080, label %131
  ]

; <label>:20:                                     ; preds = %18
  br label %141

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp ugt i64 %22, %23
  %25 = select i1 %24, i32 1388151103, i32 131820676
  store i32 %25, i32* %17
  br label %141

; <label>:26:                                     ; preds = %18
  %27 = load i64, i64* %8, align 8
  %28 = load i32*, i32** %9, align 8
  %29 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %30 = bitcast %"class.std::vector.8"* %29 to %"struct.std::_Vector_base.9"*
  %31 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %30) #3
  call void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.8"* %10, i64 %27, i32* dereferenceable(4) %28, %"class.std::allocator.10"* dereferenceable(1) %31)
  %32 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %32, i32 0, i32 0
  %34 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %35 = bitcast %"class.std::vector.8"* %34 to %"struct.std::_Vector_base.9"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %35, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %36) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %10) #3
  store i32 1171141723, i32* %17
  br label %141

; <label>:37:                                     ; preds = %18
  %38 = load i64, i64* %8, align 8
  %39 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %40 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %39) #3
  %41 = icmp ugt i64 %38, %40
  %42 = select i1 %41, i32 -1834901675, i32 -441556347
  store i32 %42, i32* %17
  br label %141

; <label>:43:                                     ; preds = %18
  %44 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %45 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.8"* %44) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %11, i32 0, i32 0
  store i32* %45, i32** %46, align 8
  %47 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %48 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.8"* %47) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %12, i32 0, i32 0
  store i32* %48, i32** %49, align 8
  %50 = load i32*, i32** %9, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %11, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %12, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32* %52, i32* %54, i32* dereferenceable(4) %50)
  %55 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %56 = bitcast %"class.std::vector.8"* %55 to %"struct.std::_Vector_base.9"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load i32*, i32** %58, align 8
  %60 = load i64, i64* %8, align 8
  %61 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %62 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %61) #3
  %63 = sub i64 0, %62
  %64 = add i64 %60, %63
  %65 = sub i64 %60, %62
  %66 = load i32*, i32** %9, align 8
  %67 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %68 = bitcast %"class.std::vector.8"* %67 to %"struct.std::_Vector_base.9"*
  %69 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %68) #3
  %70 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %59, i64 %64, i32* dereferenceable(4) %66, %"class.std::allocator.10"* dereferenceable(1) %69)
  %71 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %72 = bitcast %"class.std::vector.8"* %71 to %"struct.std::_Vector_base.9"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %73, i32 0, i32 1
  store i32* %70, i32** %74, align 8
  store i32 -685920042, i32* %17
  br label %141

; <label>:75:                                     ; preds = %18
  %76 = load i32, i32* @x.750
  %77 = load i32, i32* @y.751
  %78 = sub i32 %76, 1105797606
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 1105797606
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 true, true
  %89 = and i1 %86, true
  %90 = and i1 %84, %88
  %91 = and i1 %87, true
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 true, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  %102 = select i1 %100, i32 2120878554, i32 -866719080
  store i32 %102, i32* %17
  br label %141

; <label>:103:                                    ; preds = %18
  %104 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %105 = bitcast %"class.std::vector.8"* %104 to %"struct.std::_Vector_base.9"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %106, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = load i64, i64* %8, align 8
  %110 = load i32*, i32** %9, align 8
  %111 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %108, i64 %109, i32* dereferenceable(4) %110)
  %112 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.8"* %112, i32* %111) #3
  %113 = load i32, i32* @x.750
  %114 = load i32, i32* @y.751
  %115 = sub i32 %113, -1797488178
  %116 = sub i32 %115, 1
  %117 = add i32 %116, -1797488178
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 1175374075, i32 -866719080
  store i32 %127, i32* %17
  br label %141

; <label>:128:                                    ; preds = %18
  store i32 -685920042, i32* %17
  br label %141

; <label>:129:                                    ; preds = %18
  store i32 1171141723, i32* %17
  br label %141

; <label>:130:                                    ; preds = %18
  ret void

; <label>:131:                                    ; preds = %18
  %132 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %133 = bitcast %"class.std::vector.8"* %132 to %"struct.std::_Vector_base.9"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %133, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %134, i32 0, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = load i64, i64* %8, align 8
  %138 = load i32*, i32** %9, align 8
  %139 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %136, i64 %137, i32* dereferenceable(4) %138)
  %140 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.8"* %140, i32* %139) #3
  store i32 2120878554, i32* %17
  br label %141

; <label>:141:                                    ; preds = %131, %129, %128, %103, %75, %43, %37, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = add i64 %12, -8441109191963789047
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -8441109191963789047
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 4
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.8"*, i64, i32* dereferenceable(4), %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %12 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %8, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.9"* %12, i64 %13, %"class.std::allocator.10"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.8"* %11, i64 %15, i32* dereferenceable(4) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.754
  %25 = load i32, i32* @y.755
  %26 = add i32 %24, -1634258928
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -1634258928
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %82

; <label>:50:                                     ; preds = %23, %82
  %51 = load i8*, i8** %9, align 8
  %52 = load i32, i32* %10, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  %55 = load i32, i32* @x.754
  %56 = load i32, i32* @y.755
  %57 = sub i32 %55, -106284159
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -106284159
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %82

; <label>:81:                                     ; preds = %50
  resume { i8*, i32 } %54

; <label>:82:                                     ; preds = %50, %23
  %83 = load i8*, i8** %9, align 8
  %84 = load i32, i32* %10, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  br label %50
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.756
  %7 = load i32, i32* @y.757
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 405636767, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %93
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 405636767, label %19
    i32 54663345, label %27
    i32 1443966504, label %73
    i32 1618223394, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %93

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 54663345, i32 1618223394
  store i32 %26, i32* %15
  br label %93

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %30 = alloca i32*, align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %28, i32 0, i32 0
  store i32* %0, i32** %33, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %29, i32 0, i32 0
  store i32* %1, i32** %34, align 8
  store i32* %2, i32** %30, align 8
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %31 to i8*
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %31, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %38)
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %32 to i8*
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %32, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %43)
  %45 = load i32*, i32** %30, align 8
  call void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %39, i32* %44, i32* dereferenceable(4) %45)
  %46 = load i32, i32* @x.756
  %47 = load i32, i32* @y.757
  %48 = add i32 %46, -837412619
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -837412619
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1443966504, i32 1618223394
  store i32 %72, i32* %15
  br label %93

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %76 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %77 = alloca i32*, align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %75, i32 0, i32 0
  store i32* %0, i32** %80, align 8
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %76, i32 0, i32 0
  store i32* %1, i32** %81, align 8
  store i32* %2, i32** %77, align 8
  %82 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %78 to i8*
  %83 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 8, i32 8, i1 false)
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %78, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %85)
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %79 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %79, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %90)
  %92 = load i32*, i32** %77, align 8
  call void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %86, i32* %91, i32* dereferenceable(4) %92)
  store i32 54663345, i32* %15
  br label %93

; <label>:93:                                     ; preds = %74, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.758
  %6 = load i32, i32* @y.759
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1637688095, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %85
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1637688095, label %18
    i32 160788350, label %38
    i32 627174439, label %74
    i32 1606866589, label %76
  ]

; <label>:17:                                     ; preds = %15
  br label %85

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 160788350, i32 1606866589
  store i32 %37, i32* %14
  br label %85

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %40 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  %41 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  %42 = bitcast %"class.std::vector.8"* %41 to %"struct.std::_Vector_base.9"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.30"* %39, i32** dereferenceable(8) %44) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %39, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  store i32* %46, i32** %2
  %47 = load i32, i32* @x.758
  %48 = load i32, i32* @y.759
  %49 = add i32 %47, -263350414
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -263350414
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 627174439, i32 1606866589
  store i32 %73, i32* %14
  br label %85

; <label>:74:                                     ; preds = %15
  %75 = load volatile i32*, i32** %2
  ret i32* %75

; <label>:76:                                     ; preds = %15
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %78 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %78, align 8
  %79 = load %"class.std::vector.8"*, %"class.std::vector.8"** %78, align 8
  %80 = bitcast %"class.std::vector.8"* %79 to %"struct.std::_Vector_base.9"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %81, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.30"* %77, i32** dereferenceable(8) %82) #3
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %77, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  store i32 160788350, i32* %14
  br label %85

; <label>:85:                                     ; preds = %76, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.760
  %6 = load i32, i32* @y.761
  %7 = add i32 %5, -1926050400
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1926050400
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -976285782, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -976285782, label %19
    i32 -2143289748, label %27
    i32 -1210959737, label %62
    i32 1457428332, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2143289748, i32 1457428332
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %29 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %29, align 8
  %30 = load %"class.std::vector.8"*, %"class.std::vector.8"** %29, align 8
  %31 = bitcast %"class.std::vector.8"* %30 to %"struct.std::_Vector_base.9"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.30"* %28, i32** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %28, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  store i32* %35, i32** %2
  %36 = load i32, i32* @x.760
  %37 = load i32, i32* @y.761
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1210959737, i32 1457428332
  store i32 %61, i32* %15
  br label %73

; <label>:62:                                     ; preds = %16
  %63 = load volatile i32*, i32** %2
  ret i32* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %66 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %66, align 8
  %67 = load %"class.std::vector.8"*, %"class.std::vector.8"** %66, align 8
  %68 = bitcast %"class.std::vector.8"* %67 to %"struct.std::_Vector_base.9"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %69, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.30"* %65, i32** dereferenceable(8) %70) #3
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %65, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  store i32 -2143289748, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.9"*, i64, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.9"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %6, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"class.std::allocator.10"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.9"* %9, i64 %12)
          to label %13 unwind label %56

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.764
  %15 = load i32, i32* @y.765
  %16 = add i32 %14, -947673275
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -947673275
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %65

; <label>:40:                                     ; preds = %13, %65
  %41 = load i32, i32* @x.764
  %42 = load i32, i32* @y.765
  %43 = add i32 %41, 475784121
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 475784121
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %65

; <label>:55:                                     ; preds = %40
  ret void

; <label>:56:                                     ; preds = %3
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %7, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #3
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i8*, i8** %7, align 8
  %62 = load i32, i32* %8, align 4
  %63 = insertvalue { i8*, i32 } undef, i8* %61, 0
  %64 = insertvalue { i8*, i32 } %63, i32 %62, 1
  resume { i8*, i32 } %64

; <label>:65:                                     ; preds = %40, %13
  br label %40
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.8"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %15 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %14) #3
  %16 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %11, i64 %12, i32* dereferenceable(4) %13, %"class.std::allocator.10"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %18, i32 0, i32 1
  store i32* %16, i32** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator.10"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"* %6, %"class.std::allocator.10"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.9"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 0
  store i32* %7, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 1
  store i32* %12, i32** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 2
  store i32* %19, i32** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32*, i32*, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = alloca i32
  store i32 -1388327618, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %83
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -1388327618, label %14
    i32 -321780309, label %19
    i32 1705092501, label %22
    i32 72721385, label %49
    i32 -1808269792, label %78
    i32 1873720194, label %79
    i32 -1064183975, label %80
  ]

; <label>:13:                                     ; preds = %11
  br label %83

; <label>:14:                                     ; preds = %11
  %15 = load i32*, i32** %4, align 8
  %16 = load i32*, i32** %5, align 8
  %17 = icmp ne i32* %15, %16
  %18 = select i1 %17, i32 -321780309, i32 1873720194
  store i32 %18, i32* %10
  br label %83

; <label>:19:                                     ; preds = %11
  %20 = load i32, i32* %7, align 4
  %21 = load i32*, i32** %4, align 8
  store i32 %20, i32* %21, align 4
  store i32 1705092501, i32* %10
  br label %83

; <label>:22:                                     ; preds = %11
  %23 = load i32, i32* @x.772
  %24 = load i32, i32* @y.773
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 72721385, i32 -1064183975
  store i32 %48, i32* %10
  br label %83

; <label>:49:                                     ; preds = %11
  %50 = load i32*, i32** %4, align 8
  %51 = getelementptr inbounds i32, i32* %50, i32 1
  store i32* %51, i32** %4, align 8
  %52 = load i32, i32* @x.772
  %53 = load i32, i32* @y.773
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -1808269792, i32 -1064183975
  store i32 %77, i32* %10
  br label %83

; <label>:78:                                     ; preds = %11
  store i32 -1388327618, i32* %10
  br label %83

; <label>:79:                                     ; preds = %11
  ret void

; <label>:80:                                     ; preds = %11
  %81 = load i32*, i32** %4, align 8
  %82 = getelementptr inbounds i32, i32* %81, i32 1
  store i32* %82, i32** %4, align 8
  store i32 72721385, i32* %10
  br label %83

; <label>:83:                                     ; preds = %80, %78, %49, %22, %19, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.30"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"* %2) #3
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.30"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.30"*, i32** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.30"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.30"* %0, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.30"*, %"class.__gnu_cxx::__normal_iterator.30"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.30", %"class.__gnu_cxx::__normal_iterator.30"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %7, i64 %8, i32* dereferenceable(4) %9)
  ret i32* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %class.MaxFEdge* @_ZNSt6vectorI8MaxFEdgeIxESaIS1_EEixEm(%"class.std::vector.18"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl", %"struct.std::_Vector_base<MaxFEdge<long long>, std::allocator<MaxFEdge<long long> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %class.MaxFEdge*, %class.MaxFEdge** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %class.MaxFEdge, %class.MaxFEdge* %9, i64 %10
  ret %class.MaxFEdge* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.788
  %11 = load i32, i32* @y.789
  %12 = sub i32 %10, 1108148571
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 1108148571
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1466960369, i32* %20
  br label %21

; <label>:21:                                     ; preds = %2, %202
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1466960369, label %24
    i32 1571557201, label %44
    i32 172951674, label %72
    i32 -75794354, label %75
    i32 -1164330173, label %90
    i32 -1100165588, label %121
    i32 -1610632400, label %122
    i32 -2083675719, label %126
    i32 270801614, label %154
    i32 -725667740, label %184
    i32 -1827517420, label %186
    i32 -1305137393, label %195
    i32 1961243629, label %199
  ]

; <label>:23:                                     ; preds = %21
  br label %202

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 1571557201, i32 -1827517420
  store i32 %43, i32* %20
  br label %202

; <label>:44:                                     ; preds = %21
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %7
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %6
  %47 = alloca i64*, align 8
  store i64** %47, i64*** %5
  %48 = load volatile i64**, i64*** %6
  store i64* %0, i64** %48, align 8
  %49 = load volatile i64**, i64*** %5
  store i64* %1, i64** %49, align 8
  %50 = load volatile i64**, i64*** %5
  %51 = load i64*, i64** %50, align 8
  %52 = load i64, i64* %51, align 8
  %53 = load volatile i64**, i64*** %6
  %54 = load i64*, i64** %53, align 8
  %55 = load i64, i64* %54, align 8
  %56 = icmp slt i64 %52, %55
  store i1 %56, i1* %4
  %57 = load i32, i32* @x.788
  %58 = load i32, i32* @y.789
  %59 = sub i32 %57, 1903782340
  %60 = sub i32 %59, 1
  %61 = add i32 %60, 1903782340
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 172951674, i32 -1827517420
  store i32 %71, i32* %20
  br label %202

; <label>:72:                                     ; preds = %21
  %73 = load volatile i1, i1* %4
  %74 = select i1 %73, i32 -75794354, i32 -1610632400
  store i32 %74, i32* %20
  br label %202

; <label>:75:                                     ; preds = %21
  %76 = load i32, i32* @x.788
  %77 = load i32, i32* @y.789
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  %89 = select i1 %87, i32 -1164330173, i32 -1305137393
  store i32 %89, i32* %20
  br label %202

; <label>:90:                                     ; preds = %21
  %91 = load volatile i64**, i64*** %5
  %92 = load i64*, i64** %91, align 8
  %93 = load volatile i64**, i64*** %7
  store i64* %92, i64** %93, align 8
  %94 = load i32, i32* @x.788
  %95 = load i32, i32* @y.789
  %96 = add i32 %94, -184656462
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -184656462
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 -1100165588, i32 -1305137393
  store i32 %120, i32* %20
  br label %202

; <label>:121:                                    ; preds = %21
  store i32 -2083675719, i32* %20
  br label %202

; <label>:122:                                    ; preds = %21
  %123 = load volatile i64**, i64*** %6
  %124 = load i64*, i64** %123, align 8
  %125 = load volatile i64**, i64*** %7
  store i64* %124, i64** %125, align 8
  store i32 -2083675719, i32* %20
  br label %202

; <label>:126:                                    ; preds = %21
  %127 = load i32, i32* @x.788
  %128 = load i32, i32* @y.789
  %129 = add i32 %127, 192834691
  %130 = sub i32 %129, 1
  %131 = sub i32 %130, 192834691
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 true, true
  %140 = and i1 %137, true
  %141 = and i1 %135, %139
  %142 = and i1 %138, true
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 true, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  %153 = select i1 %151, i32 270801614, i32 1961243629
  store i32 %153, i32* %20
  br label %202

; <label>:154:                                    ; preds = %21
  %155 = load volatile i64**, i64*** %7
  %156 = load i64*, i64** %155, align 8
  store i64* %156, i64** %3
  %157 = load i32, i32* @x.788
  %158 = load i32, i32* @y.789
  %159 = sub i32 %157, -124074173
  %160 = sub i32 %159, 1
  %161 = add i32 %160, -124074173
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = xor i1 %165, true
  %168 = xor i1 %166, true
  %169 = xor i1 true, true
  %170 = and i1 %167, true
  %171 = and i1 %165, %169
  %172 = and i1 %168, true
  %173 = and i1 %166, %169
  %174 = or i1 %170, %171
  %175 = or i1 %172, %173
  %176 = xor i1 %174, %175
  %177 = or i1 %167, %168
  %178 = xor i1 %177, true
  %179 = or i1 true, %169
  %180 = and i1 %178, %179
  %181 = or i1 %176, %180
  %182 = or i1 %165, %166
  %183 = select i1 %181, i32 -725667740, i32 1961243629
  store i32 %183, i32* %20
  br label %202

; <label>:184:                                    ; preds = %21
  %185 = load volatile i64*, i64** %3
  ret i64* %185

; <label>:186:                                    ; preds = %21
  %187 = alloca i64*, align 8
  %188 = alloca i64*, align 8
  %189 = alloca i64*, align 8
  store i64* %0, i64** %188, align 8
  store i64* %1, i64** %189, align 8
  %190 = load i64*, i64** %189, align 8
  %191 = load i64, i64* %190, align 8
  %192 = load i64*, i64** %188, align 8
  %193 = load i64, i64* %192, align 8
  %194 = icmp slt i64 %191, %193
  store i32 1571557201, i32* %20
  br label %202

; <label>:195:                                    ; preds = %21
  %196 = load volatile i64**, i64*** %5
  %197 = load i64*, i64** %196, align 8
  %198 = load volatile i64**, i64*** %7
  store i64* %197, i64** %198, align 8
  store i32 -1164330173, i32* %20
  br label %202

; <label>:199:                                    ; preds = %21
  %200 = load volatile i64**, i64*** %7
  %201 = load i64*, i64** %200, align 8
  store i32 270801614, i32* %20
  br label %202

; <label>:202:                                    ; preds = %199, %195, %186, %154, %126, %122, %121, %90, %75, %72, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s631522313.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  call void @__cxx_global_var_init.2()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
